/*
 * Copyright (c) 2009-2019 ARM Limited. All rights reserved.
 * 
 * SPDX-License-Identifier: Apache-2.0
 * 
 * Licensed under the Apache License, Version 2.0 (the License); you may
 * not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 * 
 * http://www.apache.org/licenses/LICENSE-2.0
 * 
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS, WITHOUT
 * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 * @file     STM32G081.sfd
 * @brief    CMSIS-SVD SFD File
 * @version  1.3
 * @date     04. August 2022
 * @note     Generated by SVDConv V3.3.39 on Thursday, 04.08.2022 20:08:18
 *           from File 'STM32G081.svd',
 *           last modified on Thursday, 16.12.2021 00:30:22
 */




// -----------------------------  Register Item Address: IWDG_KR  ---------------------------------
// SVD Line: 51

unsigned int IWDG_KR __AT (0x40003000);



// ---------------------------------  Field Item: IWDG_KR_KEY  ------------------------------------
// SVD Line: 60

//  <item> SFDITEM_FIELD__IWDG_KR_KEY
//    <name> KEY </name>
//    <w> 
//    <i> [Bits 15..0] WO (@ 0x40003000) Key value (write only, read  0x0000) </i>
//    <edit> 
//      <loc> ( (unsigned short)((IWDG_KR >> 0) & 0x0), ((IWDG_KR = (IWDG_KR & ~(0xFFFFUL << 0 )) | ((unsigned long)(Gui_u16:GuiVal & 0xFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ---------------------------------  Register RTree: IWDG_KR  ------------------------------------
// SVD Line: 51

//  <rtree> SFDITEM_REG__IWDG_KR
//    <name> KR </name>
//    <w> 
//    <i> [Bits 31..0] WO (@ 0x40003000) Key register </i>
//    <loc> ( (unsigned int)((IWDG_KR >> 0) & 0xFFFFFFFF), ((IWDG_KR = (IWDG_KR & ~(0xFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__IWDG_KR_KEY </item>
//  </rtree>
//  


// -----------------------------  Register Item Address: IWDG_PR  ---------------------------------
// SVD Line: 69

unsigned int IWDG_PR __AT (0x40003004);



// ---------------------------------  Field Item: IWDG_PR_PR  -------------------------------------
// SVD Line: 78

//  <item> SFDITEM_FIELD__IWDG_PR_PR
//    <name> PR </name>
//    <rw> 
//    <i> [Bits 2..0] RW (@ 0x40003004) Prescaler divider </i>
//    <edit> 
//      <loc> ( (unsigned char)((IWDG_PR >> 0) & 0x7), ((IWDG_PR = (IWDG_PR & ~(0x7UL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0x7) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ---------------------------------  Register RTree: IWDG_PR  ------------------------------------
// SVD Line: 69

//  <rtree> SFDITEM_REG__IWDG_PR
//    <name> PR </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x40003004) Prescaler register </i>
//    <loc> ( (unsigned int)((IWDG_PR >> 0) & 0xFFFFFFFF), ((IWDG_PR = (IWDG_PR & ~(0x7UL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0x7) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__IWDG_PR_PR </item>
//  </rtree>
//  


// -----------------------------  Register Item Address: IWDG_RLR  --------------------------------
// SVD Line: 86

unsigned int IWDG_RLR __AT (0x40003008);



// ---------------------------------  Field Item: IWDG_RLR_RL  ------------------------------------
// SVD Line: 95

//  <item> SFDITEM_FIELD__IWDG_RLR_RL
//    <name> RL </name>
//    <rw> 
//    <i> [Bits 11..0] RW (@ 0x40003008) Watchdog counter reload  value </i>
//    <edit> 
//      <loc> ( (unsigned short)((IWDG_RLR >> 0) & 0xFFF), ((IWDG_RLR = (IWDG_RLR & ~(0xFFFUL << 0 )) | ((unsigned long)(Gui_u16:GuiVal & 0xFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// --------------------------------  Register RTree: IWDG_RLR  ------------------------------------
// SVD Line: 86

//  <rtree> SFDITEM_REG__IWDG_RLR
//    <name> RLR </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x40003008) Reload register </i>
//    <loc> ( (unsigned int)((IWDG_RLR >> 0) & 0xFFFFFFFF), ((IWDG_RLR = (IWDG_RLR & ~(0xFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__IWDG_RLR_RL </item>
//  </rtree>
//  


// -----------------------------  Register Item Address: IWDG_SR  ---------------------------------
// SVD Line: 104

unsigned int IWDG_SR __AT (0x4000300C);



// ---------------------------------  Field Item: IWDG_SR_WVU  ------------------------------------
// SVD Line: 113

//  <item> SFDITEM_FIELD__IWDG_SR_WVU
//    <name> WVU </name>
//    <r> 
//    <i> [Bit 2] RO (@ 0x4000300C) Watchdog counter window value  update </i>
//    <check> 
//      <loc> ( (unsigned int) IWDG_SR ) </loc>
//      <o.2..2> WVU
//    </check>
//  </item>
//  


// ---------------------------------  Field Item: IWDG_SR_RVU  ------------------------------------
// SVD Line: 120

//  <item> SFDITEM_FIELD__IWDG_SR_RVU
//    <name> RVU </name>
//    <r> 
//    <i> [Bit 1] RO (@ 0x4000300C) Watchdog counter reload value  update </i>
//    <check> 
//      <loc> ( (unsigned int) IWDG_SR ) </loc>
//      <o.1..1> RVU
//    </check>
//  </item>
//  


// ---------------------------------  Field Item: IWDG_SR_PVU  ------------------------------------
// SVD Line: 127

//  <item> SFDITEM_FIELD__IWDG_SR_PVU
//    <name> PVU </name>
//    <r> 
//    <i> [Bit 0] RO (@ 0x4000300C) Watchdog prescaler value  update </i>
//    <check> 
//      <loc> ( (unsigned int) IWDG_SR ) </loc>
//      <o.0..0> PVU
//    </check>
//  </item>
//  


// ---------------------------------  Register RTree: IWDG_SR  ------------------------------------
// SVD Line: 104

//  <rtree> SFDITEM_REG__IWDG_SR
//    <name> SR </name>
//    <r> 
//    <i> [Bits 31..0] RO (@ 0x4000300C) Status register </i>
//    <loc> ( (unsigned int)((IWDG_SR >> 0) & 0xFFFFFFFF) ) </loc>
//    <item> SFDITEM_FIELD__IWDG_SR_WVU </item>
//    <item> SFDITEM_FIELD__IWDG_SR_RVU </item>
//    <item> SFDITEM_FIELD__IWDG_SR_PVU </item>
//  </rtree>
//  


// ----------------------------  Register Item Address: IWDG_WINR  --------------------------------
// SVD Line: 136

unsigned int IWDG_WINR __AT (0x40003010);



// --------------------------------  Field Item: IWDG_WINR_WIN  -----------------------------------
// SVD Line: 145

//  <item> SFDITEM_FIELD__IWDG_WINR_WIN
//    <name> WIN </name>
//    <rw> 
//    <i> [Bits 11..0] RW (@ 0x40003010) Watchdog counter window  value </i>
//    <edit> 
//      <loc> ( (unsigned short)((IWDG_WINR >> 0) & 0xFFF), ((IWDG_WINR = (IWDG_WINR & ~(0xFFFUL << 0 )) | ((unsigned long)(Gui_u16:GuiVal & 0xFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// --------------------------------  Register RTree: IWDG_WINR  -----------------------------------
// SVD Line: 136

//  <rtree> SFDITEM_REG__IWDG_WINR
//    <name> WINR </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x40003010) Window register </i>
//    <loc> ( (unsigned int)((IWDG_WINR >> 0) & 0xFFFFFFFF), ((IWDG_WINR = (IWDG_WINR & ~(0xFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__IWDG_WINR_WIN </item>
//  </rtree>
//  


// ---------------------------  Register Item Address: IWDG_HWCFGR  -------------------------------
// SVD Line: 154

unsigned int IWDG_HWCFGR __AT (0x400033F0);



// -----------------------------  Field Item: IWDG_HWCFGR_WINDOW  ---------------------------------
// SVD Line: 164

//  <item> SFDITEM_FIELD__IWDG_HWCFGR_WINDOW
//    <name> WINDOW </name>
//    <rw> 
//    <i> [Bits 3..0] RW (@ 0x400033F0) Support of Window function </i>
//    <edit> 
//      <loc> ( (unsigned char)((IWDG_HWCFGR >> 0) & 0xF), ((IWDG_HWCFGR = (IWDG_HWCFGR & ~(0xFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ---------------------------  Field Item: IWDG_HWCFGR_PR_DEFAULT  -------------------------------
// SVD Line: 170

//  <item> SFDITEM_FIELD__IWDG_HWCFGR_PR_DEFAULT
//    <name> PR_DEFAULT </name>
//    <rw> 
//    <i> [Bits 7..4] RW (@ 0x400033F0) Prescaler default value </i>
//    <edit> 
//      <loc> ( (unsigned char)((IWDG_HWCFGR >> 4) & 0xF), ((IWDG_HWCFGR = (IWDG_HWCFGR & ~(0xFUL << 4 )) | ((unsigned long)(Gui_u8:GuiVal & 0xF) << 4 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -------------------------------  Register RTree: IWDG_HWCFGR  ----------------------------------
// SVD Line: 154

//  <rtree> SFDITEM_REG__IWDG_HWCFGR
//    <name> HWCFGR </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x400033F0) hardware configuration  register </i>
//    <loc> ( (unsigned int)((IWDG_HWCFGR >> 0) & 0xFFFFFFFF), ((IWDG_HWCFGR = (IWDG_HWCFGR & ~(0xFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__IWDG_HWCFGR_WINDOW </item>
//    <item> SFDITEM_FIELD__IWDG_HWCFGR_PR_DEFAULT </item>
//  </rtree>
//  


// ----------------------------  Register Item Address: IWDG_VERR  --------------------------------
// SVD Line: 178

unsigned int IWDG_VERR __AT (0x400033F4);



// ------------------------------  Field Item: IWDG_VERR_MINREV  ----------------------------------
// SVD Line: 187

//  <item> SFDITEM_FIELD__IWDG_VERR_MINREV
//    <name> MINREV </name>
//    <r> 
//    <i> [Bits 3..0] RO (@ 0x400033F4) Minor Revision number </i>
//    <edit> 
//      <loc> ( (unsigned char)((IWDG_VERR >> 0) & 0xF) ) </loc>
//    </edit>
//  </item>
//  


// ------------------------------  Field Item: IWDG_VERR_MAJREV  ----------------------------------
// SVD Line: 193

//  <item> SFDITEM_FIELD__IWDG_VERR_MAJREV
//    <name> MAJREV </name>
//    <r> 
//    <i> [Bits 7..4] RO (@ 0x400033F4) Major Revision number </i>
//    <edit> 
//      <loc> ( (unsigned char)((IWDG_VERR >> 4) & 0xF) ) </loc>
//    </edit>
//  </item>
//  


// --------------------------------  Register RTree: IWDG_VERR  -----------------------------------
// SVD Line: 178

//  <rtree> SFDITEM_REG__IWDG_VERR
//    <name> VERR </name>
//    <r> 
//    <i> [Bits 31..0] RO (@ 0x400033F4) EXTI IP Version register </i>
//    <loc> ( (unsigned int)((IWDG_VERR >> 0) & 0xFFFFFFFF) ) </loc>
//    <item> SFDITEM_FIELD__IWDG_VERR_MINREV </item>
//    <item> SFDITEM_FIELD__IWDG_VERR_MAJREV </item>
//  </rtree>
//  


// ----------------------------  Register Item Address: IWDG_IPIDR  -------------------------------
// SVD Line: 201

unsigned int IWDG_IPIDR __AT (0x400033F8);



// -------------------------------  Field Item: IWDG_IPIDR_IPID  ----------------------------------
// SVD Line: 210

//  <item> SFDITEM_FIELD__IWDG_IPIDR_IPID
//    <name> IPID </name>
//    <r> 
//    <i> [Bits 31..0] RO (@ 0x400033F8) IP Identification </i>
//    <edit> 
//      <loc> ( (unsigned int)((IWDG_IPIDR >> 0) & 0xFFFFFFFF) ) </loc>
//    </edit>
//  </item>
//  


// -------------------------------  Register RTree: IWDG_IPIDR  -----------------------------------
// SVD Line: 201

//  <rtree> SFDITEM_REG__IWDG_IPIDR
//    <name> IPIDR </name>
//    <r> 
//    <i> [Bits 31..0] RO (@ 0x400033F8) EXTI Identification register </i>
//    <loc> ( (unsigned int)((IWDG_IPIDR >> 0) & 0xFFFFFFFF) ) </loc>
//    <item> SFDITEM_FIELD__IWDG_IPIDR_IPID </item>
//  </rtree>
//  


// ----------------------------  Register Item Address: IWDG_SIDR  --------------------------------
// SVD Line: 218

unsigned int IWDG_SIDR __AT (0x400033FC);



// --------------------------------  Field Item: IWDG_SIDR_SID  -----------------------------------
// SVD Line: 227

//  <item> SFDITEM_FIELD__IWDG_SIDR_SID
//    <name> SID </name>
//    <r> 
//    <i> [Bits 31..0] RO (@ 0x400033FC) Size Identification </i>
//    <edit> 
//      <loc> ( (unsigned int)((IWDG_SIDR >> 0) & 0xFFFFFFFF) ) </loc>
//    </edit>
//  </item>
//  


// --------------------------------  Register RTree: IWDG_SIDR  -----------------------------------
// SVD Line: 218

//  <rtree> SFDITEM_REG__IWDG_SIDR
//    <name> SIDR </name>
//    <r> 
//    <i> [Bits 31..0] RO (@ 0x400033FC) EXTI Size ID register </i>
//    <loc> ( (unsigned int)((IWDG_SIDR >> 0) & 0xFFFFFFFF) ) </loc>
//    <item> SFDITEM_FIELD__IWDG_SIDR_SID </item>
//  </rtree>
//  


// ----------------------------------  Peripheral View: IWDG  -------------------------------------
// SVD Line: 40

//  <view> IWDG
//    <name> IWDG </name>
//    <item> SFDITEM_REG__IWDG_KR </item>
//    <item> SFDITEM_REG__IWDG_PR </item>
//    <item> SFDITEM_REG__IWDG_RLR </item>
//    <item> SFDITEM_REG__IWDG_SR </item>
//    <item> SFDITEM_REG__IWDG_WINR </item>
//    <item> SFDITEM_REG__IWDG_HWCFGR </item>
//    <item> SFDITEM_REG__IWDG_VERR </item>
//    <item> SFDITEM_REG__IWDG_IPIDR </item>
//    <item> SFDITEM_REG__IWDG_SIDR </item>
//  </view>
//  


// -----------------------------  Register Item Address: WWDG_CR  ---------------------------------
// SVD Line: 253

unsigned int WWDG_CR __AT (0x40002C00);



// --------------------------------  Field Item: WWDG_CR_WDGA  ------------------------------------
// SVD Line: 262

//  <item> SFDITEM_FIELD__WWDG_CR_WDGA
//    <name> WDGA </name>
//    <rw> 
//    <i> [Bit 7] RW (@ 0x40002C00) Activation bit </i>
//    <check> 
//      <loc> ( (unsigned int) WWDG_CR ) </loc>
//      <o.7..7> WDGA
//    </check>
//  </item>
//  


// ----------------------------------  Field Item: WWDG_CR_T  -------------------------------------
// SVD Line: 268

//  <item> SFDITEM_FIELD__WWDG_CR_T
//    <name> T </name>
//    <rw> 
//    <i> [Bits 6..0] RW (@ 0x40002C00) 7-bit counter (MSB to LSB) </i>
//    <edit> 
//      <loc> ( (unsigned char)((WWDG_CR >> 0) & 0x7F), ((WWDG_CR = (WWDG_CR & ~(0x7FUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0x7F) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ---------------------------------  Register RTree: WWDG_CR  ------------------------------------
// SVD Line: 253

//  <rtree> SFDITEM_REG__WWDG_CR
//    <name> CR </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x40002C00) Control register </i>
//    <loc> ( (unsigned int)((WWDG_CR >> 0) & 0xFFFFFFFF), ((WWDG_CR = (WWDG_CR & ~(0xFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__WWDG_CR_WDGA </item>
//    <item> SFDITEM_FIELD__WWDG_CR_T </item>
//  </rtree>
//  


// -----------------------------  Register Item Address: WWDG_CFR  --------------------------------
// SVD Line: 276

unsigned int WWDG_CFR __AT (0x40002C04);



// -------------------------------  Field Item: WWDG_CFR_WDGTB  -----------------------------------
// SVD Line: 285

//  <item> SFDITEM_FIELD__WWDG_CFR_WDGTB
//    <name> WDGTB </name>
//    <rw> 
//    <i> [Bits 13..11] RW (@ 0x40002C04) Timer base </i>
//    <edit> 
//      <loc> ( (unsigned char)((WWDG_CFR >> 11) & 0x7), ((WWDG_CFR = (WWDG_CFR & ~(0x7UL << 11 )) | ((unsigned long)(Gui_u8:GuiVal & 0x7) << 11 ) ) )) </loc>
//    </edit>
//  </item>
//  


// --------------------------------  Field Item: WWDG_CFR_EWI  ------------------------------------
// SVD Line: 291

//  <item> SFDITEM_FIELD__WWDG_CFR_EWI
//    <name> EWI </name>
//    <rw> 
//    <i> [Bit 9] RW (@ 0x40002C04) Early wakeup interrupt </i>
//    <check> 
//      <loc> ( (unsigned int) WWDG_CFR ) </loc>
//      <o.9..9> EWI
//    </check>
//  </item>
//  


// ---------------------------------  Field Item: WWDG_CFR_W  -------------------------------------
// SVD Line: 297

//  <item> SFDITEM_FIELD__WWDG_CFR_W
//    <name> W </name>
//    <rw> 
//    <i> [Bits 6..0] RW (@ 0x40002C04) 7-bit window value </i>
//    <edit> 
//      <loc> ( (unsigned char)((WWDG_CFR >> 0) & 0x7F), ((WWDG_CFR = (WWDG_CFR & ~(0x7FUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0x7F) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// --------------------------------  Register RTree: WWDG_CFR  ------------------------------------
// SVD Line: 276

//  <rtree> SFDITEM_REG__WWDG_CFR
//    <name> CFR </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x40002C04) Configuration register </i>
//    <loc> ( (unsigned int)((WWDG_CFR >> 0) & 0xFFFFFFFF), ((WWDG_CFR = (WWDG_CFR & ~(0x3A7FUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0x3A7F) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__WWDG_CFR_WDGTB </item>
//    <item> SFDITEM_FIELD__WWDG_CFR_EWI </item>
//    <item> SFDITEM_FIELD__WWDG_CFR_W </item>
//  </rtree>
//  


// -----------------------------  Register Item Address: WWDG_SR  ---------------------------------
// SVD Line: 305

unsigned int WWDG_SR __AT (0x40002C08);



// --------------------------------  Field Item: WWDG_SR_EWIF  ------------------------------------
// SVD Line: 314

//  <item> SFDITEM_FIELD__WWDG_SR_EWIF
//    <name> EWIF </name>
//    <rw> 
//    <i> [Bit 0] RW (@ 0x40002C08) Early wakeup interrupt  flag </i>
//    <check> 
//      <loc> ( (unsigned int) WWDG_SR ) </loc>
//      <o.0..0> EWIF
//    </check>
//  </item>
//  


// ---------------------------------  Register RTree: WWDG_SR  ------------------------------------
// SVD Line: 305

//  <rtree> SFDITEM_REG__WWDG_SR
//    <name> SR </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x40002C08) Status register </i>
//    <loc> ( (unsigned int)((WWDG_SR >> 0) & 0xFFFFFFFF), ((WWDG_SR = (WWDG_SR & ~(0x1UL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0x1) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__WWDG_SR_EWIF </item>
//  </rtree>
//  


// ----------------------------------  Peripheral View: WWDG  -------------------------------------
// SVD Line: 237

//  <view> WWDG
//    <name> WWDG </name>
//    <item> SFDITEM_REG__WWDG_CR </item>
//    <item> SFDITEM_REG__WWDG_CFR </item>
//    <item> SFDITEM_REG__WWDG_SR </item>
//  </view>
//  


// ----------------------------  Register Item Address: FLASH_ACR  --------------------------------
// SVD Line: 341

unsigned int FLASH_ACR __AT (0x40022000);



// ------------------------------  Field Item: FLASH_ACR_LATENCY  ---------------------------------
// SVD Line: 350

//  <item> SFDITEM_FIELD__FLASH_ACR_LATENCY
//    <name> LATENCY </name>
//    <rw> 
//    <i> [Bits 2..0] RW (@ 0x40022000) Latency </i>
//    <edit> 
//      <loc> ( (unsigned char)((FLASH_ACR >> 0) & 0x7), ((FLASH_ACR = (FLASH_ACR & ~(0x7UL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0x7) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ------------------------------  Field Item: FLASH_ACR_PRFTEN  ----------------------------------
// SVD Line: 356

//  <item> SFDITEM_FIELD__FLASH_ACR_PRFTEN
//    <name> PRFTEN </name>
//    <rw> 
//    <i> [Bit 8] RW (@ 0x40022000) Prefetch enable </i>
//    <check> 
//      <loc> ( (unsigned int) FLASH_ACR ) </loc>
//      <o.8..8> PRFTEN
//    </check>
//  </item>
//  


// -------------------------------  Field Item: FLASH_ACR_ICEN  -----------------------------------
// SVD Line: 362

//  <item> SFDITEM_FIELD__FLASH_ACR_ICEN
//    <name> ICEN </name>
//    <rw> 
//    <i> [Bit 9] RW (@ 0x40022000) Instruction cache enable </i>
//    <check> 
//      <loc> ( (unsigned int) FLASH_ACR ) </loc>
//      <o.9..9> ICEN
//    </check>
//  </item>
//  


// -------------------------------  Field Item: FLASH_ACR_ICRST  ----------------------------------
// SVD Line: 368

//  <item> SFDITEM_FIELD__FLASH_ACR_ICRST
//    <name> ICRST </name>
//    <rw> 
//    <i> [Bit 11] RW (@ 0x40022000) Instruction cache reset </i>
//    <check> 
//      <loc> ( (unsigned int) FLASH_ACR ) </loc>
//      <o.11..11> ICRST
//    </check>
//  </item>
//  


// -------------------------------  Field Item: FLASH_ACR_EMPTY  ----------------------------------
// SVD Line: 374

//  <item> SFDITEM_FIELD__FLASH_ACR_EMPTY
//    <name> EMPTY </name>
//    <rw> 
//    <i> [Bit 16] RW (@ 0x40022000) Flash User area empty </i>
//    <check> 
//      <loc> ( (unsigned int) FLASH_ACR ) </loc>
//      <o.16..16> EMPTY
//    </check>
//  </item>
//  


// -----------------------------  Field Item: FLASH_ACR_DBG_SWEN  ---------------------------------
// SVD Line: 380

//  <item> SFDITEM_FIELD__FLASH_ACR_DBG_SWEN
//    <name> DBG_SWEN </name>
//    <rw> 
//    <i> [Bit 18] RW (@ 0x40022000) Debug access software  enable </i>
//    <check> 
//      <loc> ( (unsigned int) FLASH_ACR ) </loc>
//      <o.18..18> DBG_SWEN
//    </check>
//  </item>
//  


// --------------------------------  Register RTree: FLASH_ACR  -----------------------------------
// SVD Line: 341

//  <rtree> SFDITEM_REG__FLASH_ACR
//    <name> ACR </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x40022000) Access control register </i>
//    <loc> ( (unsigned int)((FLASH_ACR >> 0) & 0xFFFFFFFF), ((FLASH_ACR = (FLASH_ACR & ~(0x50B07UL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0x50B07) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__FLASH_ACR_LATENCY </item>
//    <item> SFDITEM_FIELD__FLASH_ACR_PRFTEN </item>
//    <item> SFDITEM_FIELD__FLASH_ACR_ICEN </item>
//    <item> SFDITEM_FIELD__FLASH_ACR_ICRST </item>
//    <item> SFDITEM_FIELD__FLASH_ACR_EMPTY </item>
//    <item> SFDITEM_FIELD__FLASH_ACR_DBG_SWEN </item>
//  </rtree>
//  


// ----------------------------  Register Item Address: FLASH_KEYR  -------------------------------
// SVD Line: 389

unsigned int FLASH_KEYR __AT (0x40022008);



// -------------------------------  Field Item: FLASH_KEYR_KEYR  ----------------------------------
// SVD Line: 398

//  <item> SFDITEM_FIELD__FLASH_KEYR_KEYR
//    <name> KEYR </name>
//    <w> 
//    <i> [Bits 31..0] WO (@ 0x40022008) KEYR </i>
//    <edit> 
//      <loc> ( (unsigned int)((FLASH_KEYR >> 0) & 0x0), ((FLASH_KEYR = (FLASH_KEYR & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -------------------------------  Register RTree: FLASH_KEYR  -----------------------------------
// SVD Line: 389

//  <rtree> SFDITEM_REG__FLASH_KEYR
//    <name> KEYR </name>
//    <w> 
//    <i> [Bits 31..0] WO (@ 0x40022008) Flash key register </i>
//    <loc> ( (unsigned int)((FLASH_KEYR >> 0) & 0xFFFFFFFF), ((FLASH_KEYR = (FLASH_KEYR & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__FLASH_KEYR_KEYR </item>
//  </rtree>
//  


// --------------------------  Register Item Address: FLASH_OPTKEYR  ------------------------------
// SVD Line: 406

unsigned int FLASH_OPTKEYR __AT (0x4002200C);



// ----------------------------  Field Item: FLASH_OPTKEYR_OPTKEYR  -------------------------------
// SVD Line: 415

//  <item> SFDITEM_FIELD__FLASH_OPTKEYR_OPTKEYR
//    <name> OPTKEYR </name>
//    <w> 
//    <i> [Bits 31..0] WO (@ 0x4002200C) Option byte key </i>
//    <edit> 
//      <loc> ( (unsigned int)((FLASH_OPTKEYR >> 0) & 0x0), ((FLASH_OPTKEYR = (FLASH_OPTKEYR & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ------------------------------  Register RTree: FLASH_OPTKEYR  ---------------------------------
// SVD Line: 406

//  <rtree> SFDITEM_REG__FLASH_OPTKEYR
//    <name> OPTKEYR </name>
//    <w> 
//    <i> [Bits 31..0] WO (@ 0x4002200C) Option byte key register </i>
//    <loc> ( (unsigned int)((FLASH_OPTKEYR >> 0) & 0xFFFFFFFF), ((FLASH_OPTKEYR = (FLASH_OPTKEYR & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__FLASH_OPTKEYR_OPTKEYR </item>
//  </rtree>
//  


// -----------------------------  Register Item Address: FLASH_SR  --------------------------------
// SVD Line: 423

unsigned int FLASH_SR __AT (0x40022010);



// --------------------------------  Field Item: FLASH_SR_EOP  ------------------------------------
// SVD Line: 432

//  <item> SFDITEM_FIELD__FLASH_SR_EOP
//    <name> EOP </name>
//    <rw> 
//    <i> [Bit 0] RW (@ 0x40022010) End of operation </i>
//    <check> 
//      <loc> ( (unsigned int) FLASH_SR ) </loc>
//      <o.0..0> EOP
//    </check>
//  </item>
//  


// -------------------------------  Field Item: FLASH_SR_OPERR  -----------------------------------
// SVD Line: 438

//  <item> SFDITEM_FIELD__FLASH_SR_OPERR
//    <name> OPERR </name>
//    <rw> 
//    <i> [Bit 1] RW (@ 0x40022010) Operation error </i>
//    <check> 
//      <loc> ( (unsigned int) FLASH_SR ) </loc>
//      <o.1..1> OPERR
//    </check>
//  </item>
//  


// ------------------------------  Field Item: FLASH_SR_PROGERR  ----------------------------------
// SVD Line: 444

//  <item> SFDITEM_FIELD__FLASH_SR_PROGERR
//    <name> PROGERR </name>
//    <rw> 
//    <i> [Bit 3] RW (@ 0x40022010) Programming error </i>
//    <check> 
//      <loc> ( (unsigned int) FLASH_SR ) </loc>
//      <o.3..3> PROGERR
//    </check>
//  </item>
//  


// -------------------------------  Field Item: FLASH_SR_WRPERR  ----------------------------------
// SVD Line: 450

//  <item> SFDITEM_FIELD__FLASH_SR_WRPERR
//    <name> WRPERR </name>
//    <rw> 
//    <i> [Bit 4] RW (@ 0x40022010) Write protected error </i>
//    <check> 
//      <loc> ( (unsigned int) FLASH_SR ) </loc>
//      <o.4..4> WRPERR
//    </check>
//  </item>
//  


// -------------------------------  Field Item: FLASH_SR_PGAERR  ----------------------------------
// SVD Line: 456

//  <item> SFDITEM_FIELD__FLASH_SR_PGAERR
//    <name> PGAERR </name>
//    <rw> 
//    <i> [Bit 5] RW (@ 0x40022010) Programming alignment  error </i>
//    <check> 
//      <loc> ( (unsigned int) FLASH_SR ) </loc>
//      <o.5..5> PGAERR
//    </check>
//  </item>
//  


// -------------------------------  Field Item: FLASH_SR_SIZERR  ----------------------------------
// SVD Line: 463

//  <item> SFDITEM_FIELD__FLASH_SR_SIZERR
//    <name> SIZERR </name>
//    <rw> 
//    <i> [Bit 6] RW (@ 0x40022010) Size error </i>
//    <check> 
//      <loc> ( (unsigned int) FLASH_SR ) </loc>
//      <o.6..6> SIZERR
//    </check>
//  </item>
//  


// -------------------------------  Field Item: FLASH_SR_PGSERR  ----------------------------------
// SVD Line: 469

//  <item> SFDITEM_FIELD__FLASH_SR_PGSERR
//    <name> PGSERR </name>
//    <rw> 
//    <i> [Bit 7] RW (@ 0x40022010) Programming sequence error </i>
//    <check> 
//      <loc> ( (unsigned int) FLASH_SR ) </loc>
//      <o.7..7> PGSERR
//    </check>
//  </item>
//  


// -------------------------------  Field Item: FLASH_SR_MISERR  ----------------------------------
// SVD Line: 475

//  <item> SFDITEM_FIELD__FLASH_SR_MISERR
//    <name> MISERR </name>
//    <rw> 
//    <i> [Bit 8] RW (@ 0x40022010) Fast programming data miss  error </i>
//    <check> 
//      <loc> ( (unsigned int) FLASH_SR ) </loc>
//      <o.8..8> MISERR
//    </check>
//  </item>
//  


// ------------------------------  Field Item: FLASH_SR_FASTERR  ----------------------------------
// SVD Line: 482

//  <item> SFDITEM_FIELD__FLASH_SR_FASTERR
//    <name> FASTERR </name>
//    <rw> 
//    <i> [Bit 9] RW (@ 0x40022010) Fast programming error </i>
//    <check> 
//      <loc> ( (unsigned int) FLASH_SR ) </loc>
//      <o.9..9> FASTERR
//    </check>
//  </item>
//  


// -------------------------------  Field Item: FLASH_SR_RDERR  -----------------------------------
// SVD Line: 488

//  <item> SFDITEM_FIELD__FLASH_SR_RDERR
//    <name> RDERR </name>
//    <rw> 
//    <i> [Bit 14] RW (@ 0x40022010) PCROP read error </i>
//    <check> 
//      <loc> ( (unsigned int) FLASH_SR ) </loc>
//      <o.14..14> RDERR
//    </check>
//  </item>
//  


// ------------------------------  Field Item: FLASH_SR_OPTVERR  ----------------------------------
// SVD Line: 494

//  <item> SFDITEM_FIELD__FLASH_SR_OPTVERR
//    <name> OPTVERR </name>
//    <rw> 
//    <i> [Bit 15] RW (@ 0x40022010) Option and Engineering bits loading  validity error </i>
//    <check> 
//      <loc> ( (unsigned int) FLASH_SR ) </loc>
//      <o.15..15> OPTVERR
//    </check>
//  </item>
//  


// --------------------------------  Field Item: FLASH_SR_BSY  ------------------------------------
// SVD Line: 501

//  <item> SFDITEM_FIELD__FLASH_SR_BSY
//    <name> BSY </name>
//    <rw> 
//    <i> [Bit 16] RW (@ 0x40022010) Busy </i>
//    <check> 
//      <loc> ( (unsigned int) FLASH_SR ) </loc>
//      <o.16..16> BSY
//    </check>
//  </item>
//  


// -------------------------------  Field Item: FLASH_SR_CFGBSY  ----------------------------------
// SVD Line: 507

//  <item> SFDITEM_FIELD__FLASH_SR_CFGBSY
//    <name> CFGBSY </name>
//    <rw> 
//    <i> [Bit 18] RW (@ 0x40022010) Programming or erase configuration  busy. </i>
//    <check> 
//      <loc> ( (unsigned int) FLASH_SR ) </loc>
//      <o.18..18> CFGBSY
//    </check>
//  </item>
//  


// --------------------------------  Register RTree: FLASH_SR  ------------------------------------
// SVD Line: 423

//  <rtree> SFDITEM_REG__FLASH_SR
//    <name> SR </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x40022010) Status register </i>
//    <loc> ( (unsigned int)((FLASH_SR >> 0) & 0xFFFFFFFF), ((FLASH_SR = (FLASH_SR & ~(0x5C3FBUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0x5C3FB) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__FLASH_SR_EOP </item>
//    <item> SFDITEM_FIELD__FLASH_SR_OPERR </item>
//    <item> SFDITEM_FIELD__FLASH_SR_PROGERR </item>
//    <item> SFDITEM_FIELD__FLASH_SR_WRPERR </item>
//    <item> SFDITEM_FIELD__FLASH_SR_PGAERR </item>
//    <item> SFDITEM_FIELD__FLASH_SR_SIZERR </item>
//    <item> SFDITEM_FIELD__FLASH_SR_PGSERR </item>
//    <item> SFDITEM_FIELD__FLASH_SR_MISERR </item>
//    <item> SFDITEM_FIELD__FLASH_SR_FASTERR </item>
//    <item> SFDITEM_FIELD__FLASH_SR_RDERR </item>
//    <item> SFDITEM_FIELD__FLASH_SR_OPTVERR </item>
//    <item> SFDITEM_FIELD__FLASH_SR_BSY </item>
//    <item> SFDITEM_FIELD__FLASH_SR_CFGBSY </item>
//  </rtree>
//  


// -----------------------------  Register Item Address: FLASH_CR  --------------------------------
// SVD Line: 516

unsigned int FLASH_CR __AT (0x40022014);



// ---------------------------------  Field Item: FLASH_CR_PG  ------------------------------------
// SVD Line: 525

//  <item> SFDITEM_FIELD__FLASH_CR_PG
//    <name> PG </name>
//    <rw> 
//    <i> [Bit 0] RW (@ 0x40022014) Programming </i>
//    <check> 
//      <loc> ( (unsigned int) FLASH_CR ) </loc>
//      <o.0..0> PG
//    </check>
//  </item>
//  


// --------------------------------  Field Item: FLASH_CR_PER  ------------------------------------
// SVD Line: 531

//  <item> SFDITEM_FIELD__FLASH_CR_PER
//    <name> PER </name>
//    <rw> 
//    <i> [Bit 1] RW (@ 0x40022014) Page erase </i>
//    <check> 
//      <loc> ( (unsigned int) FLASH_CR ) </loc>
//      <o.1..1> PER
//    </check>
//  </item>
//  


// --------------------------------  Field Item: FLASH_CR_MER  ------------------------------------
// SVD Line: 537

//  <item> SFDITEM_FIELD__FLASH_CR_MER
//    <name> MER </name>
//    <rw> 
//    <i> [Bit 2] RW (@ 0x40022014) Mass erase </i>
//    <check> 
//      <loc> ( (unsigned int) FLASH_CR ) </loc>
//      <o.2..2> MER
//    </check>
//  </item>
//  


// --------------------------------  Field Item: FLASH_CR_PNB  ------------------------------------
// SVD Line: 543

//  <item> SFDITEM_FIELD__FLASH_CR_PNB
//    <name> PNB </name>
//    <rw> 
//    <i> [Bits 12..3] RW (@ 0x40022014) Page number </i>
//    <edit> 
//      <loc> ( (unsigned short)((FLASH_CR >> 3) & 0x3FF), ((FLASH_CR = (FLASH_CR & ~(0x3FFUL << 3 )) | ((unsigned long)(Gui_u16:GuiVal & 0x3FF) << 3 ) ) )) </loc>
//    </edit>
//  </item>
//  


// --------------------------------  Field Item: FLASH_CR_STRT  -----------------------------------
// SVD Line: 549

//  <item> SFDITEM_FIELD__FLASH_CR_STRT
//    <name> STRT </name>
//    <rw> 
//    <i> [Bit 16] RW (@ 0x40022014) Start </i>
//    <check> 
//      <loc> ( (unsigned int) FLASH_CR ) </loc>
//      <o.16..16> STRT
//    </check>
//  </item>
//  


// ------------------------------  Field Item: FLASH_CR_OPTSTRT  ----------------------------------
// SVD Line: 555

//  <item> SFDITEM_FIELD__FLASH_CR_OPTSTRT
//    <name> OPTSTRT </name>
//    <rw> 
//    <i> [Bit 17] RW (@ 0x40022014) Options modification start </i>
//    <check> 
//      <loc> ( (unsigned int) FLASH_CR ) </loc>
//      <o.17..17> OPTSTRT
//    </check>
//  </item>
//  


// -------------------------------  Field Item: FLASH_CR_FSTPG  -----------------------------------
// SVD Line: 561

//  <item> SFDITEM_FIELD__FLASH_CR_FSTPG
//    <name> FSTPG </name>
//    <rw> 
//    <i> [Bit 18] RW (@ 0x40022014) Fast programming </i>
//    <check> 
//      <loc> ( (unsigned int) FLASH_CR ) </loc>
//      <o.18..18> FSTPG
//    </check>
//  </item>
//  


// -------------------------------  Field Item: FLASH_CR_EOPIE  -----------------------------------
// SVD Line: 567

//  <item> SFDITEM_FIELD__FLASH_CR_EOPIE
//    <name> EOPIE </name>
//    <rw> 
//    <i> [Bit 24] RW (@ 0x40022014) End of operation interrupt  enable </i>
//    <check> 
//      <loc> ( (unsigned int) FLASH_CR ) </loc>
//      <o.24..24> EOPIE
//    </check>
//  </item>
//  


// -------------------------------  Field Item: FLASH_CR_ERRIE  -----------------------------------
// SVD Line: 574

//  <item> SFDITEM_FIELD__FLASH_CR_ERRIE
//    <name> ERRIE </name>
//    <rw> 
//    <i> [Bit 25] RW (@ 0x40022014) Error interrupt enable </i>
//    <check> 
//      <loc> ( (unsigned int) FLASH_CR ) </loc>
//      <o.25..25> ERRIE
//    </check>
//  </item>
//  


// ------------------------------  Field Item: FLASH_CR_RDERRIE  ----------------------------------
// SVD Line: 580

//  <item> SFDITEM_FIELD__FLASH_CR_RDERRIE
//    <name> RDERRIE </name>
//    <rw> 
//    <i> [Bit 26] RW (@ 0x40022014) PCROP read error interrupt  enable </i>
//    <check> 
//      <loc> ( (unsigned int) FLASH_CR ) </loc>
//      <o.26..26> RDERRIE
//    </check>
//  </item>
//  


// -----------------------------  Field Item: FLASH_CR_OBL_LAUNCH  --------------------------------
// SVD Line: 587

//  <item> SFDITEM_FIELD__FLASH_CR_OBL_LAUNCH
//    <name> OBL_LAUNCH </name>
//    <rw> 
//    <i> [Bit 27] RW (@ 0x40022014) Force the option byte  loading </i>
//    <check> 
//      <loc> ( (unsigned int) FLASH_CR ) </loc>
//      <o.27..27> OBL_LAUNCH
//    </check>
//  </item>
//  


// ------------------------------  Field Item: FLASH_CR_SEC_PROT  ---------------------------------
// SVD Line: 594

//  <item> SFDITEM_FIELD__FLASH_CR_SEC_PROT
//    <name> SEC_PROT </name>
//    <rw> 
//    <i> [Bit 28] RW (@ 0x40022014) Securable memory area protection  enable </i>
//    <check> 
//      <loc> ( (unsigned int) FLASH_CR ) </loc>
//      <o.28..28> SEC_PROT
//    </check>
//  </item>
//  


// ------------------------------  Field Item: FLASH_CR_OPTLOCK  ----------------------------------
// SVD Line: 601

//  <item> SFDITEM_FIELD__FLASH_CR_OPTLOCK
//    <name> OPTLOCK </name>
//    <rw> 
//    <i> [Bit 30] RW (@ 0x40022014) Options Lock </i>
//    <check> 
//      <loc> ( (unsigned int) FLASH_CR ) </loc>
//      <o.30..30> OPTLOCK
//    </check>
//  </item>
//  


// --------------------------------  Field Item: FLASH_CR_LOCK  -----------------------------------
// SVD Line: 607

//  <item> SFDITEM_FIELD__FLASH_CR_LOCK
//    <name> LOCK </name>
//    <rw> 
//    <i> [Bit 31] RW (@ 0x40022014) FLASH_CR Lock </i>
//    <check> 
//      <loc> ( (unsigned int) FLASH_CR ) </loc>
//      <o.31..31> LOCK
//    </check>
//  </item>
//  


// --------------------------------  Register RTree: FLASH_CR  ------------------------------------
// SVD Line: 516

//  <rtree> SFDITEM_REG__FLASH_CR
//    <name> CR </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x40022014) Flash control register </i>
//    <loc> ( (unsigned int)((FLASH_CR >> 0) & 0xFFFFFFFF), ((FLASH_CR = (FLASH_CR & ~(0xDF071FFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xDF071FFF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__FLASH_CR_PG </item>
//    <item> SFDITEM_FIELD__FLASH_CR_PER </item>
//    <item> SFDITEM_FIELD__FLASH_CR_MER </item>
//    <item> SFDITEM_FIELD__FLASH_CR_PNB </item>
//    <item> SFDITEM_FIELD__FLASH_CR_STRT </item>
//    <item> SFDITEM_FIELD__FLASH_CR_OPTSTRT </item>
//    <item> SFDITEM_FIELD__FLASH_CR_FSTPG </item>
//    <item> SFDITEM_FIELD__FLASH_CR_EOPIE </item>
//    <item> SFDITEM_FIELD__FLASH_CR_ERRIE </item>
//    <item> SFDITEM_FIELD__FLASH_CR_RDERRIE </item>
//    <item> SFDITEM_FIELD__FLASH_CR_OBL_LAUNCH </item>
//    <item> SFDITEM_FIELD__FLASH_CR_SEC_PROT </item>
//    <item> SFDITEM_FIELD__FLASH_CR_OPTLOCK </item>
//    <item> SFDITEM_FIELD__FLASH_CR_LOCK </item>
//  </rtree>
//  


// ----------------------------  Register Item Address: FLASH_ECCR  -------------------------------
// SVD Line: 615

unsigned int FLASH_ECCR __AT (0x40022018);



// -----------------------------  Field Item: FLASH_ECCR_ADDR_ECC  --------------------------------
// SVD Line: 623

//  <item> SFDITEM_FIELD__FLASH_ECCR_ADDR_ECC
//    <name> ADDR_ECC </name>
//    <r> 
//    <i> [Bits 13..0] RO (@ 0x40022018) ECC fail address </i>
//    <edit> 
//      <loc> ( (unsigned short)((FLASH_ECCR >> 0) & 0x3FFF) ) </loc>
//    </edit>
//  </item>
//  


// -----------------------------  Field Item: FLASH_ECCR_SYSF_ECC  --------------------------------
// SVD Line: 630

//  <item> SFDITEM_FIELD__FLASH_ECCR_SYSF_ECC
//    <name> SYSF_ECC </name>
//    <r> 
//    <i> [Bit 20] RO (@ 0x40022018) ECC fail for Corrected ECC Error or  Double ECC Error in info block </i>
//    <check> 
//      <loc> ( (unsigned int) FLASH_ECCR ) </loc>
//      <o.20..20> SYSF_ECC
//    </check>
//  </item>
//  


// ------------------------------  Field Item: FLASH_ECCR_ECCIE  ----------------------------------
// SVD Line: 638

//  <item> SFDITEM_FIELD__FLASH_ECCR_ECCIE
//    <name> ECCIE </name>
//    <rw> 
//    <i> [Bit 24] RW (@ 0x40022018) ECC correction interrupt  enable </i>
//    <check> 
//      <loc> ( (unsigned int) FLASH_ECCR ) </loc>
//      <o.24..24> ECCIE
//    </check>
//  </item>
//  


// -------------------------------  Field Item: FLASH_ECCR_ECCC  ----------------------------------
// SVD Line: 646

//  <item> SFDITEM_FIELD__FLASH_ECCR_ECCC
//    <name> ECCC </name>
//    <rw> 
//    <i> [Bit 30] RW (@ 0x40022018) ECC correction </i>
//    <check> 
//      <loc> ( (unsigned int) FLASH_ECCR ) </loc>
//      <o.30..30> ECCC
//    </check>
//  </item>
//  


// -------------------------------  Field Item: FLASH_ECCR_ECCD  ----------------------------------
// SVD Line: 653

//  <item> SFDITEM_FIELD__FLASH_ECCR_ECCD
//    <name> ECCD </name>
//    <rw> 
//    <i> [Bit 31] RW (@ 0x40022018) ECC detection </i>
//    <check> 
//      <loc> ( (unsigned int) FLASH_ECCR ) </loc>
//      <o.31..31> ECCD
//    </check>
//  </item>
//  


// -------------------------------  Register RTree: FLASH_ECCR  -----------------------------------
// SVD Line: 615

//  <rtree> SFDITEM_REG__FLASH_ECCR
//    <name> ECCR </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x40022018) Flash ECC register </i>
//    <loc> ( (unsigned int)((FLASH_ECCR >> 0) & 0xFFFFFFFF), ((FLASH_ECCR = (FLASH_ECCR & ~(0xC1000000UL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xC1000000) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__FLASH_ECCR_ADDR_ECC </item>
//    <item> SFDITEM_FIELD__FLASH_ECCR_SYSF_ECC </item>
//    <item> SFDITEM_FIELD__FLASH_ECCR_ECCIE </item>
//    <item> SFDITEM_FIELD__FLASH_ECCR_ECCC </item>
//    <item> SFDITEM_FIELD__FLASH_ECCR_ECCD </item>
//  </rtree>
//  


// ----------------------------  Register Item Address: FLASH_OPTR  -------------------------------
// SVD Line: 662

unsigned int FLASH_OPTR __AT (0x40022020);



// -------------------------------  Field Item: FLASH_OPTR_RDP  -----------------------------------
// SVD Line: 671

//  <item> SFDITEM_FIELD__FLASH_OPTR_RDP
//    <name> RDP </name>
//    <rw> 
//    <i> [Bits 7..0] RW (@ 0x40022020) Read protection level </i>
//    <edit> 
//      <loc> ( (unsigned char)((FLASH_OPTR >> 0) & 0xFF), ((FLASH_OPTR = (FLASH_OPTR & ~(0xFFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ------------------------------  Field Item: FLASH_OPTR_BOREN  ----------------------------------
// SVD Line: 677

//  <item> SFDITEM_FIELD__FLASH_OPTR_BOREN
//    <name> BOREN </name>
//    <rw> 
//    <i> [Bit 8] RW (@ 0x40022020) BOR reset Level </i>
//    <check> 
//      <loc> ( (unsigned int) FLASH_OPTR ) </loc>
//      <o.8..8> BOREN
//    </check>
//  </item>
//  


// -----------------------------  Field Item: FLASH_OPTR_BORF_LEV  --------------------------------
// SVD Line: 683

//  <item> SFDITEM_FIELD__FLASH_OPTR_BORF_LEV
//    <name> BORF_LEV </name>
//    <rw> 
//    <i> [Bits 10..9] RW (@ 0x40022020) These bits contain the VDD supply level  threshold that activates the reset </i>
//    <edit> 
//      <loc> ( (unsigned char)((FLASH_OPTR >> 9) & 0x3), ((FLASH_OPTR = (FLASH_OPTR & ~(0x3UL << 9 )) | ((unsigned long)(Gui_u8:GuiVal & 0x3) << 9 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -----------------------------  Field Item: FLASH_OPTR_BORR_LEV  --------------------------------
// SVD Line: 690

//  <item> SFDITEM_FIELD__FLASH_OPTR_BORR_LEV
//    <name> BORR_LEV </name>
//    <rw> 
//    <i> [Bits 12..11] RW (@ 0x40022020) These bits contain the VDD supply level  threshold that releases the reset. </i>
//    <edit> 
//      <loc> ( (unsigned char)((FLASH_OPTR >> 11) & 0x3), ((FLASH_OPTR = (FLASH_OPTR & ~(0x3UL << 11 )) | ((unsigned long)(Gui_u8:GuiVal & 0x3) << 11 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ----------------------------  Field Item: FLASH_OPTR_nRST_STOP  --------------------------------
// SVD Line: 697

//  <item> SFDITEM_FIELD__FLASH_OPTR_nRST_STOP
//    <name> nRST_STOP </name>
//    <rw> 
//    <i> [Bit 13] RW (@ 0x40022020) nRST_STOP </i>
//    <check> 
//      <loc> ( (unsigned int) FLASH_OPTR ) </loc>
//      <o.13..13> nRST_STOP
//    </check>
//  </item>
//  


// ----------------------------  Field Item: FLASH_OPTR_nRST_STDBY  -------------------------------
// SVD Line: 703

//  <item> SFDITEM_FIELD__FLASH_OPTR_nRST_STDBY
//    <name> nRST_STDBY </name>
//    <rw> 
//    <i> [Bit 14] RW (@ 0x40022020) nRST_STDBY </i>
//    <check> 
//      <loc> ( (unsigned int) FLASH_OPTR ) </loc>
//      <o.14..14> nRST_STDBY
//    </check>
//  </item>
//  


// ----------------------------  Field Item: FLASH_OPTR_nRSTS_HDW  --------------------------------
// SVD Line: 709

//  <item> SFDITEM_FIELD__FLASH_OPTR_nRSTS_HDW
//    <name> nRSTS_HDW </name>
//    <rw> 
//    <i> [Bit 15] RW (@ 0x40022020) nRSTS_HDW </i>
//    <check> 
//      <loc> ( (unsigned int) FLASH_OPTR ) </loc>
//      <o.15..15> nRSTS_HDW
//    </check>
//  </item>
//  


// -----------------------------  Field Item: FLASH_OPTR_IDWG_SW  ---------------------------------
// SVD Line: 715

//  <item> SFDITEM_FIELD__FLASH_OPTR_IDWG_SW
//    <name> IDWG_SW </name>
//    <rw> 
//    <i> [Bit 16] RW (@ 0x40022020) Independent watchdog  selection </i>
//    <check> 
//      <loc> ( (unsigned int) FLASH_OPTR ) </loc>
//      <o.16..16> IDWG_SW
//    </check>
//  </item>
//  


// ----------------------------  Field Item: FLASH_OPTR_IWDG_STOP  --------------------------------
// SVD Line: 722

//  <item> SFDITEM_FIELD__FLASH_OPTR_IWDG_STOP
//    <name> IWDG_STOP </name>
//    <rw> 
//    <i> [Bit 17] RW (@ 0x40022020) Independent watchdog counter freeze in  Stop mode </i>
//    <check> 
//      <loc> ( (unsigned int) FLASH_OPTR ) </loc>
//      <o.17..17> IWDG_STOP
//    </check>
//  </item>
//  


// ----------------------------  Field Item: FLASH_OPTR_IWDG_STDBY  -------------------------------
// SVD Line: 729

//  <item> SFDITEM_FIELD__FLASH_OPTR_IWDG_STDBY
//    <name> IWDG_STDBY </name>
//    <rw> 
//    <i> [Bit 18] RW (@ 0x40022020) Independent watchdog counter freeze in  Standby mode </i>
//    <check> 
//      <loc> ( (unsigned int) FLASH_OPTR ) </loc>
//      <o.18..18> IWDG_STDBY
//    </check>
//  </item>
//  


// -----------------------------  Field Item: FLASH_OPTR_WWDG_SW  ---------------------------------
// SVD Line: 736

//  <item> SFDITEM_FIELD__FLASH_OPTR_WWDG_SW
//    <name> WWDG_SW </name>
//    <rw> 
//    <i> [Bit 19] RW (@ 0x40022020) Window watchdog selection </i>
//    <check> 
//      <loc> ( (unsigned int) FLASH_OPTR ) </loc>
//      <o.19..19> WWDG_SW
//    </check>
//  </item>
//  


// -------------------------  Field Item: FLASH_OPTR_RAM_PARITY_CHECK  ----------------------------
// SVD Line: 742

//  <item> SFDITEM_FIELD__FLASH_OPTR_RAM_PARITY_CHECK
//    <name> RAM_PARITY_CHECK </name>
//    <rw> 
//    <i> [Bit 22] RW (@ 0x40022020) SRAM parity check control </i>
//    <check> 
//      <loc> ( (unsigned int) FLASH_OPTR ) </loc>
//      <o.22..22> RAM_PARITY_CHECK
//    </check>
//  </item>
//  


// ----------------------------  Field Item: FLASH_OPTR_nBOOT_SEL  --------------------------------
// SVD Line: 748

//  <item> SFDITEM_FIELD__FLASH_OPTR_nBOOT_SEL
//    <name> nBOOT_SEL </name>
//    <rw> 
//    <i> [Bit 24] RW (@ 0x40022020) nBOOT_SEL </i>
//    <check> 
//      <loc> ( (unsigned int) FLASH_OPTR ) </loc>
//      <o.24..24> nBOOT_SEL
//    </check>
//  </item>
//  


// ------------------------------  Field Item: FLASH_OPTR_nBOOT1  ---------------------------------
// SVD Line: 754

//  <item> SFDITEM_FIELD__FLASH_OPTR_nBOOT1
//    <name> nBOOT1 </name>
//    <rw> 
//    <i> [Bit 25] RW (@ 0x40022020) Boot configuration </i>
//    <check> 
//      <loc> ( (unsigned int) FLASH_OPTR ) </loc>
//      <o.25..25> nBOOT1
//    </check>
//  </item>
//  


// ------------------------------  Field Item: FLASH_OPTR_nBOOT0  ---------------------------------
// SVD Line: 760

//  <item> SFDITEM_FIELD__FLASH_OPTR_nBOOT0
//    <name> nBOOT0 </name>
//    <rw> 
//    <i> [Bit 26] RW (@ 0x40022020) nBOOT0 option bit </i>
//    <check> 
//      <loc> ( (unsigned int) FLASH_OPTR ) </loc>
//      <o.26..26> nBOOT0
//    </check>
//  </item>
//  


// ----------------------------  Field Item: FLASH_OPTR_NRST_MODE  --------------------------------
// SVD Line: 766

//  <item> SFDITEM_FIELD__FLASH_OPTR_NRST_MODE
//    <name> NRST_MODE </name>
//    <rw> 
//    <i> [Bits 28..27] RW (@ 0x40022020) NRST_MODE </i>
//    <edit> 
//      <loc> ( (unsigned char)((FLASH_OPTR >> 27) & 0x3), ((FLASH_OPTR = (FLASH_OPTR & ~(0x3UL << 27 )) | ((unsigned long)(Gui_u8:GuiVal & 0x3) << 27 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ------------------------------  Field Item: FLASH_OPTR_IRHEN  ----------------------------------
// SVD Line: 772

//  <item> SFDITEM_FIELD__FLASH_OPTR_IRHEN
//    <name> IRHEN </name>
//    <rw> 
//    <i> [Bit 29] RW (@ 0x40022020) Internal reset holder enable  bit </i>
//    <check> 
//      <loc> ( (unsigned int) FLASH_OPTR ) </loc>
//      <o.29..29> IRHEN
//    </check>
//  </item>
//  


// -------------------------------  Register RTree: FLASH_OPTR  -----------------------------------
// SVD Line: 662

//  <rtree> SFDITEM_REG__FLASH_OPTR
//    <name> OPTR </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x40022020) Flash option register </i>
//    <loc> ( (unsigned int)((FLASH_OPTR >> 0) & 0xFFFFFFFF), ((FLASH_OPTR = (FLASH_OPTR & ~(0x3F4FFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0x3F4FFFFF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__FLASH_OPTR_RDP </item>
//    <item> SFDITEM_FIELD__FLASH_OPTR_BOREN </item>
//    <item> SFDITEM_FIELD__FLASH_OPTR_BORF_LEV </item>
//    <item> SFDITEM_FIELD__FLASH_OPTR_BORR_LEV </item>
//    <item> SFDITEM_FIELD__FLASH_OPTR_nRST_STOP </item>
//    <item> SFDITEM_FIELD__FLASH_OPTR_nRST_STDBY </item>
//    <item> SFDITEM_FIELD__FLASH_OPTR_nRSTS_HDW </item>
//    <item> SFDITEM_FIELD__FLASH_OPTR_IDWG_SW </item>
//    <item> SFDITEM_FIELD__FLASH_OPTR_IWDG_STOP </item>
//    <item> SFDITEM_FIELD__FLASH_OPTR_IWDG_STDBY </item>
//    <item> SFDITEM_FIELD__FLASH_OPTR_WWDG_SW </item>
//    <item> SFDITEM_FIELD__FLASH_OPTR_RAM_PARITY_CHECK </item>
//    <item> SFDITEM_FIELD__FLASH_OPTR_nBOOT_SEL </item>
//    <item> SFDITEM_FIELD__FLASH_OPTR_nBOOT1 </item>
//    <item> SFDITEM_FIELD__FLASH_OPTR_nBOOT0 </item>
//    <item> SFDITEM_FIELD__FLASH_OPTR_NRST_MODE </item>
//    <item> SFDITEM_FIELD__FLASH_OPTR_IRHEN </item>
//  </rtree>
//  


// -------------------------  Register Item Address: FLASH_PCROP1ASR  -----------------------------
// SVD Line: 781

unsigned int FLASH_PCROP1ASR __AT (0x40022024);



// ------------------------  Field Item: FLASH_PCROP1ASR_PCROP1A_STRT  ----------------------------
// SVD Line: 791

//  <item> SFDITEM_FIELD__FLASH_PCROP1ASR_PCROP1A_STRT
//    <name> PCROP1A_STRT </name>
//    <r> 
//    <i> [Bits 7..0] RO (@ 0x40022024) PCROP1A area start offset </i>
//    <edit> 
//      <loc> ( (unsigned char)((FLASH_PCROP1ASR >> 0) & 0xFF) ) </loc>
//    </edit>
//  </item>
//  


// -----------------------------  Register RTree: FLASH_PCROP1ASR  --------------------------------
// SVD Line: 781

//  <rtree> SFDITEM_REG__FLASH_PCROP1ASR
//    <name> PCROP1ASR </name>
//    <r> 
//    <i> [Bits 31..0] RO (@ 0x40022024) Flash PCROP zone A Start address  register </i>
//    <loc> ( (unsigned int)((FLASH_PCROP1ASR >> 0) & 0xFFFFFFFF) ) </loc>
//    <item> SFDITEM_FIELD__FLASH_PCROP1ASR_PCROP1A_STRT </item>
//  </rtree>
//  


// -------------------------  Register Item Address: FLASH_PCROP1AER  -----------------------------
// SVD Line: 799

unsigned int FLASH_PCROP1AER __AT (0x40022028);



// -------------------------  Field Item: FLASH_PCROP1AER_PCROP1A_END  ----------------------------
// SVD Line: 809

//  <item> SFDITEM_FIELD__FLASH_PCROP1AER_PCROP1A_END
//    <name> PCROP1A_END </name>
//    <r> 
//    <i> [Bits 7..0] RO (@ 0x40022028) PCROP1A area end offset </i>
//    <edit> 
//      <loc> ( (unsigned char)((FLASH_PCROP1AER >> 0) & 0xFF) ) </loc>
//    </edit>
//  </item>
//  


// --------------------------  Field Item: FLASH_PCROP1AER_PCROP_RDP  -----------------------------
// SVD Line: 815

//  <item> SFDITEM_FIELD__FLASH_PCROP1AER_PCROP_RDP
//    <name> PCROP_RDP </name>
//    <r> 
//    <i> [Bit 31] RO (@ 0x40022028) PCROP area preserved when RDP level  decreased </i>
//    <check> 
//      <loc> ( (unsigned int) FLASH_PCROP1AER ) </loc>
//      <o.31..31> PCROP_RDP
//    </check>
//  </item>
//  


// -----------------------------  Register RTree: FLASH_PCROP1AER  --------------------------------
// SVD Line: 799

//  <rtree> SFDITEM_REG__FLASH_PCROP1AER
//    <name> PCROP1AER </name>
//    <r> 
//    <i> [Bits 31..0] RO (@ 0x40022028) Flash PCROP zone A End address  register </i>
//    <loc> ( (unsigned int)((FLASH_PCROP1AER >> 0) & 0xFFFFFFFF) ) </loc>
//    <item> SFDITEM_FIELD__FLASH_PCROP1AER_PCROP1A_END </item>
//    <item> SFDITEM_FIELD__FLASH_PCROP1AER_PCROP_RDP </item>
//  </rtree>
//  


// ---------------------------  Register Item Address: FLASH_WRP1AR  ------------------------------
// SVD Line: 824

unsigned int FLASH_WRP1AR __AT (0x4002202C);



// ---------------------------  Field Item: FLASH_WRP1AR_WRP1A_STRT  ------------------------------
// SVD Line: 834

//  <item> SFDITEM_FIELD__FLASH_WRP1AR_WRP1A_STRT
//    <name> WRP1A_STRT </name>
//    <r> 
//    <i> [Bits 5..0] RO (@ 0x4002202C) WRP area A start offset </i>
//    <edit> 
//      <loc> ( (unsigned char)((FLASH_WRP1AR >> 0) & 0x3F) ) </loc>
//    </edit>
//  </item>
//  


// ---------------------------  Field Item: FLASH_WRP1AR_WRP1A_END  -------------------------------
// SVD Line: 840

//  <item> SFDITEM_FIELD__FLASH_WRP1AR_WRP1A_END
//    <name> WRP1A_END </name>
//    <r> 
//    <i> [Bits 21..16] RO (@ 0x4002202C) WRP area A end offset </i>
//    <edit> 
//      <loc> ( (unsigned char)((FLASH_WRP1AR >> 16) & 0x3F) ) </loc>
//    </edit>
//  </item>
//  


// ------------------------------  Register RTree: FLASH_WRP1AR  ----------------------------------
// SVD Line: 824

//  <rtree> SFDITEM_REG__FLASH_WRP1AR
//    <name> WRP1AR </name>
//    <r> 
//    <i> [Bits 31..0] RO (@ 0x4002202C) Flash WRP area A address  register </i>
//    <loc> ( (unsigned int)((FLASH_WRP1AR >> 0) & 0xFFFFFFFF) ) </loc>
//    <item> SFDITEM_FIELD__FLASH_WRP1AR_WRP1A_STRT </item>
//    <item> SFDITEM_FIELD__FLASH_WRP1AR_WRP1A_END </item>
//  </rtree>
//  


// ---------------------------  Register Item Address: FLASH_WRP1BR  ------------------------------
// SVD Line: 848

unsigned int FLASH_WRP1BR __AT (0x40022030);



// ---------------------------  Field Item: FLASH_WRP1BR_WRP1B_STRT  ------------------------------
// SVD Line: 858

//  <item> SFDITEM_FIELD__FLASH_WRP1BR_WRP1B_STRT
//    <name> WRP1B_STRT </name>
//    <r> 
//    <i> [Bits 5..0] RO (@ 0x40022030) WRP area B start offset </i>
//    <edit> 
//      <loc> ( (unsigned char)((FLASH_WRP1BR >> 0) & 0x3F) ) </loc>
//    </edit>
//  </item>
//  


// ---------------------------  Field Item: FLASH_WRP1BR_WRP1B_END  -------------------------------
// SVD Line: 864

//  <item> SFDITEM_FIELD__FLASH_WRP1BR_WRP1B_END
//    <name> WRP1B_END </name>
//    <r> 
//    <i> [Bits 21..16] RO (@ 0x40022030) WRP area B end offset </i>
//    <edit> 
//      <loc> ( (unsigned char)((FLASH_WRP1BR >> 16) & 0x3F) ) </loc>
//    </edit>
//  </item>
//  


// ------------------------------  Register RTree: FLASH_WRP1BR  ----------------------------------
// SVD Line: 848

//  <rtree> SFDITEM_REG__FLASH_WRP1BR
//    <name> WRP1BR </name>
//    <r> 
//    <i> [Bits 31..0] RO (@ 0x40022030) Flash WRP area B address  register </i>
//    <loc> ( (unsigned int)((FLASH_WRP1BR >> 0) & 0xFFFFFFFF) ) </loc>
//    <item> SFDITEM_FIELD__FLASH_WRP1BR_WRP1B_STRT </item>
//    <item> SFDITEM_FIELD__FLASH_WRP1BR_WRP1B_END </item>
//  </rtree>
//  


// -------------------------  Register Item Address: FLASH_PCROP1BSR  -----------------------------
// SVD Line: 872

unsigned int FLASH_PCROP1BSR __AT (0x40022034);



// ------------------------  Field Item: FLASH_PCROP1BSR_PCROP1B_STRT  ----------------------------
// SVD Line: 882

//  <item> SFDITEM_FIELD__FLASH_PCROP1BSR_PCROP1B_STRT
//    <name> PCROP1B_STRT </name>
//    <r> 
//    <i> [Bits 7..0] RO (@ 0x40022034) PCROP1B area start offset </i>
//    <edit> 
//      <loc> ( (unsigned char)((FLASH_PCROP1BSR >> 0) & 0xFF) ) </loc>
//    </edit>
//  </item>
//  


// -----------------------------  Register RTree: FLASH_PCROP1BSR  --------------------------------
// SVD Line: 872

//  <rtree> SFDITEM_REG__FLASH_PCROP1BSR
//    <name> PCROP1BSR </name>
//    <r> 
//    <i> [Bits 31..0] RO (@ 0x40022034) Flash PCROP zone B Start address  register </i>
//    <loc> ( (unsigned int)((FLASH_PCROP1BSR >> 0) & 0xFFFFFFFF) ) </loc>
//    <item> SFDITEM_FIELD__FLASH_PCROP1BSR_PCROP1B_STRT </item>
//  </rtree>
//  


// -------------------------  Register Item Address: FLASH_PCROP1BER  -----------------------------
// SVD Line: 890

unsigned int FLASH_PCROP1BER __AT (0x40022038);



// -------------------------  Field Item: FLASH_PCROP1BER_PCROP1B_END  ----------------------------
// SVD Line: 900

//  <item> SFDITEM_FIELD__FLASH_PCROP1BER_PCROP1B_END
//    <name> PCROP1B_END </name>
//    <r> 
//    <i> [Bits 7..0] RO (@ 0x40022038) PCROP1B area end offset </i>
//    <edit> 
//      <loc> ( (unsigned char)((FLASH_PCROP1BER >> 0) & 0xFF) ) </loc>
//    </edit>
//  </item>
//  


// -----------------------------  Register RTree: FLASH_PCROP1BER  --------------------------------
// SVD Line: 890

//  <rtree> SFDITEM_REG__FLASH_PCROP1BER
//    <name> PCROP1BER </name>
//    <r> 
//    <i> [Bits 31..0] RO (@ 0x40022038) Flash PCROP zone B End address  register </i>
//    <loc> ( (unsigned int)((FLASH_PCROP1BER >> 0) & 0xFFFFFFFF) ) </loc>
//    <item> SFDITEM_FIELD__FLASH_PCROP1BER_PCROP1B_END </item>
//  </rtree>
//  


// ----------------------------  Register Item Address: FLASH_SECR  -------------------------------
// SVD Line: 908

unsigned int FLASH_SECR __AT (0x40022080);



// -----------------------------  Field Item: FLASH_SECR_SEC_SIZE  --------------------------------
// SVD Line: 917

//  <item> SFDITEM_FIELD__FLASH_SECR_SEC_SIZE
//    <name> SEC_SIZE </name>
//    <r> 
//    <i> [Bits 6..0] RO (@ 0x40022080) Securable memory area size </i>
//    <edit> 
//      <loc> ( (unsigned char)((FLASH_SECR >> 0) & 0x7F) ) </loc>
//    </edit>
//  </item>
//  


// ----------------------------  Field Item: FLASH_SECR_BOOT_LOCK  --------------------------------
// SVD Line: 923

//  <item> SFDITEM_FIELD__FLASH_SECR_BOOT_LOCK
//    <name> BOOT_LOCK </name>
//    <r> 
//    <i> [Bit 16] RO (@ 0x40022080) used to force boot from user  area </i>
//    <check> 
//      <loc> ( (unsigned int) FLASH_SECR ) </loc>
//      <o.16..16> BOOT_LOCK
//    </check>
//  </item>
//  


// -------------------------------  Register RTree: FLASH_SECR  -----------------------------------
// SVD Line: 908

//  <rtree> SFDITEM_REG__FLASH_SECR
//    <name> SECR </name>
//    <r> 
//    <i> [Bits 31..0] RO (@ 0x40022080) Flash Security register </i>
//    <loc> ( (unsigned int)((FLASH_SECR >> 0) & 0xFFFFFFFF) ) </loc>
//    <item> SFDITEM_FIELD__FLASH_SECR_SEC_SIZE </item>
//    <item> SFDITEM_FIELD__FLASH_SECR_BOOT_LOCK </item>
//  </rtree>
//  


// ---------------------------------  Peripheral View: FLASH  -------------------------------------
// SVD Line: 325

//  <view> FLASH
//    <name> FLASH </name>
//    <item> SFDITEM_REG__FLASH_ACR </item>
//    <item> SFDITEM_REG__FLASH_KEYR </item>
//    <item> SFDITEM_REG__FLASH_OPTKEYR </item>
//    <item> SFDITEM_REG__FLASH_SR </item>
//    <item> SFDITEM_REG__FLASH_CR </item>
//    <item> SFDITEM_REG__FLASH_ECCR </item>
//    <item> SFDITEM_REG__FLASH_OPTR </item>
//    <item> SFDITEM_REG__FLASH_PCROP1ASR </item>
//    <item> SFDITEM_REG__FLASH_PCROP1AER </item>
//    <item> SFDITEM_REG__FLASH_WRP1AR </item>
//    <item> SFDITEM_REG__FLASH_WRP1BR </item>
//    <item> SFDITEM_REG__FLASH_PCROP1BSR </item>
//    <item> SFDITEM_REG__FLASH_PCROP1BER </item>
//    <item> SFDITEM_REG__FLASH_SECR </item>
//  </view>
//  


// ----------------------------  Register Item Address: DBG_IDCODE  -------------------------------
// SVD Line: 945

unsigned int DBG_IDCODE __AT (0x40015800);



// ------------------------------  Field Item: DBG_IDCODE_DEV_ID  ---------------------------------
// SVD Line: 954

//  <item> SFDITEM_FIELD__DBG_IDCODE_DEV_ID
//    <name> DEV_ID </name>
//    <r> 
//    <i> [Bits 15..0] RO (@ 0x40015800) Device Identifier </i>
//    <edit> 
//      <loc> ( (unsigned short)((DBG_IDCODE >> 0) & 0xFFFF) ) </loc>
//    </edit>
//  </item>
//  


// ------------------------------  Field Item: DBG_IDCODE_REV_ID  ---------------------------------
// SVD Line: 960

//  <item> SFDITEM_FIELD__DBG_IDCODE_REV_ID
//    <name> REV_ID </name>
//    <r> 
//    <i> [Bits 31..16] RO (@ 0x40015800) Revision Identifier </i>
//    <edit> 
//      <loc> ( (unsigned short)((DBG_IDCODE >> 16) & 0xFFFF) ) </loc>
//    </edit>
//  </item>
//  


// -------------------------------  Register RTree: DBG_IDCODE  -----------------------------------
// SVD Line: 945

//  <rtree> SFDITEM_REG__DBG_IDCODE
//    <name> IDCODE </name>
//    <r> 
//    <i> [Bits 31..0] RO (@ 0x40015800) MCU Device ID Code Register </i>
//    <loc> ( (unsigned int)((DBG_IDCODE >> 0) & 0xFFFFFFFF) ) </loc>
//    <item> SFDITEM_FIELD__DBG_IDCODE_DEV_ID </item>
//    <item> SFDITEM_FIELD__DBG_IDCODE_REV_ID </item>
//  </rtree>
//  


// ------------------------------  Register Item Address: DBG_CR  ---------------------------------
// SVD Line: 968

unsigned int DBG_CR __AT (0x40015804);



// -------------------------------  Field Item: DBG_CR_DBG_STOP  ----------------------------------
// SVD Line: 978

//  <item> SFDITEM_FIELD__DBG_CR_DBG_STOP
//    <name> DBG_STOP </name>
//    <rw> 
//    <i> [Bit 1] RW (@ 0x40015804) Debug Stop Mode </i>
//    <check> 
//      <loc> ( (unsigned int) DBG_CR ) </loc>
//      <o.1..1> DBG_STOP
//    </check>
//  </item>
//  


// -----------------------------  Field Item: DBG_CR_DBG_STANDBY  ---------------------------------
// SVD Line: 984

//  <item> SFDITEM_FIELD__DBG_CR_DBG_STANDBY
//    <name> DBG_STANDBY </name>
//    <rw> 
//    <i> [Bit 2] RW (@ 0x40015804) Debug Standby Mode </i>
//    <check> 
//      <loc> ( (unsigned int) DBG_CR ) </loc>
//      <o.2..2> DBG_STANDBY
//    </check>
//  </item>
//  


// ---------------------------------  Register RTree: DBG_CR  -------------------------------------
// SVD Line: 968

//  <rtree> SFDITEM_REG__DBG_CR
//    <name> CR </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x40015804) Debug MCU Configuration  Register </i>
//    <loc> ( (unsigned int)((DBG_CR >> 0) & 0xFFFFFFFF), ((DBG_CR = (DBG_CR & ~(0x6UL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0x6) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__DBG_CR_DBG_STOP </item>
//    <item> SFDITEM_FIELD__DBG_CR_DBG_STANDBY </item>
//  </rtree>
//  


// ---------------------------  Register Item Address: DBG_APB_FZ1  -------------------------------
// SVD Line: 992

unsigned int DBG_APB_FZ1 __AT (0x40015808);



// -------------------------  Field Item: DBG_APB_FZ1_DBG_TIMER2_STOP  ----------------------------
// SVD Line: 1001

//  <item> SFDITEM_FIELD__DBG_APB_FZ1_DBG_TIMER2_STOP
//    <name> DBG_TIMER2_STOP </name>
//    <rw> 
//    <i> [Bit 0] RW (@ 0x40015808) Debug Timer 2 stopped when Core is  halted </i>
//    <check> 
//      <loc> ( (unsigned int) DBG_APB_FZ1 ) </loc>
//      <o.0..0> DBG_TIMER2_STOP
//    </check>
//  </item>
//  


// --------------------------  Field Item: DBG_APB_FZ1_DBG_TIM3_STOP  -----------------------------
// SVD Line: 1008

//  <item> SFDITEM_FIELD__DBG_APB_FZ1_DBG_TIM3_STOP
//    <name> DBG_TIM3_STOP </name>
//    <rw> 
//    <i> [Bit 1] RW (@ 0x40015808) TIM3 counter stopped when core is  halted </i>
//    <check> 
//      <loc> ( (unsigned int) DBG_APB_FZ1 ) </loc>
//      <o.1..1> DBG_TIM3_STOP
//    </check>
//  </item>
//  


// -------------------------  Field Item: DBG_APB_FZ1_DBG_TIMER6_STOP  ----------------------------
// SVD Line: 1015

//  <item> SFDITEM_FIELD__DBG_APB_FZ1_DBG_TIMER6_STOP
//    <name> DBG_TIMER6_STOP </name>
//    <rw> 
//    <i> [Bit 4] RW (@ 0x40015808) Debug Timer 6 stopped when Core is  halted </i>
//    <check> 
//      <loc> ( (unsigned int) DBG_APB_FZ1 ) </loc>
//      <o.4..4> DBG_TIMER6_STOP
//    </check>
//  </item>
//  


// --------------------------  Field Item: DBG_APB_FZ1_DBG_TIM7_STOP  -----------------------------
// SVD Line: 1022

//  <item> SFDITEM_FIELD__DBG_APB_FZ1_DBG_TIM7_STOP
//    <name> DBG_TIM7_STOP </name>
//    <rw> 
//    <i> [Bit 5] RW (@ 0x40015808) TIM7 counter stopped when core is  halted </i>
//    <check> 
//      <loc> ( (unsigned int) DBG_APB_FZ1 ) </loc>
//      <o.5..5> DBG_TIM7_STOP
//    </check>
//  </item>
//  


// --------------------------  Field Item: DBG_APB_FZ1_DBG_RTC_STOP  ------------------------------
// SVD Line: 1029

//  <item> SFDITEM_FIELD__DBG_APB_FZ1_DBG_RTC_STOP
//    <name> DBG_RTC_STOP </name>
//    <rw> 
//    <i> [Bit 10] RW (@ 0x40015808) Debug RTC stopped when Core is  halted </i>
//    <check> 
//      <loc> ( (unsigned int) DBG_APB_FZ1 ) </loc>
//      <o.10..10> DBG_RTC_STOP
//    </check>
//  </item>
//  


// --------------------------  Field Item: DBG_APB_FZ1_DBG_WWDG_STOP  -----------------------------
// SVD Line: 1036

//  <item> SFDITEM_FIELD__DBG_APB_FZ1_DBG_WWDG_STOP
//    <name> DBG_WWDG_STOP </name>
//    <rw> 
//    <i> [Bit 11] RW (@ 0x40015808) Debug Window Wachdog stopped when Core  is halted </i>
//    <check> 
//      <loc> ( (unsigned int) DBG_APB_FZ1 ) </loc>
//      <o.11..11> DBG_WWDG_STOP
//    </check>
//  </item>
//  


// --------------------------  Field Item: DBG_APB_FZ1_DBG_IWDG_STOP  -----------------------------
// SVD Line: 1043

//  <item> SFDITEM_FIELD__DBG_APB_FZ1_DBG_IWDG_STOP
//    <name> DBG_IWDG_STOP </name>
//    <rw> 
//    <i> [Bit 12] RW (@ 0x40015808) Debug Independent Wachdog stopped when  Core is halted </i>
//    <check> 
//      <loc> ( (unsigned int) DBG_APB_FZ1 ) </loc>
//      <o.12..12> DBG_IWDG_STOP
//    </check>
//  </item>
//  


// --------------------------  Field Item: DBG_APB_FZ1_DBG_I2C1_STOP  -----------------------------
// SVD Line: 1050

//  <item> SFDITEM_FIELD__DBG_APB_FZ1_DBG_I2C1_STOP
//    <name> DBG_I2C1_STOP </name>
//    <rw> 
//    <i> [Bit 21] RW (@ 0x40015808) I2C1 SMBUS timeout mode stopped when  core is halted </i>
//    <check> 
//      <loc> ( (unsigned int) DBG_APB_FZ1 ) </loc>
//      <o.21..21> DBG_I2C1_STOP
//    </check>
//  </item>
//  


// -------------------------  Field Item: DBG_APB_FZ1_DBG_LPTIM2_STOP  ----------------------------
// SVD Line: 1057

//  <item> SFDITEM_FIELD__DBG_APB_FZ1_DBG_LPTIM2_STOP
//    <name> DBG_LPTIM2_STOP </name>
//    <rw> 
//    <i> [Bit 30] RW (@ 0x40015808) Clocking of LPTIMER2 counter when the  core is halted </i>
//    <check> 
//      <loc> ( (unsigned int) DBG_APB_FZ1 ) </loc>
//      <o.30..30> DBG_LPTIM2_STOP
//    </check>
//  </item>
//  


// -------------------------  Field Item: DBG_APB_FZ1_DBG_LPTIM1_STOP  ----------------------------
// SVD Line: 1064

//  <item> SFDITEM_FIELD__DBG_APB_FZ1_DBG_LPTIM1_STOP
//    <name> DBG_LPTIM1_STOP </name>
//    <rw> 
//    <i> [Bit 31] RW (@ 0x40015808) Clocking of LPTIMER1 counter when the  core is halted </i>
//    <check> 
//      <loc> ( (unsigned int) DBG_APB_FZ1 ) </loc>
//      <o.31..31> DBG_LPTIM1_STOP
//    </check>
//  </item>
//  


// -------------------------------  Register RTree: DBG_APB_FZ1  ----------------------------------
// SVD Line: 992

//  <rtree> SFDITEM_REG__DBG_APB_FZ1
//    <name> APB_FZ1 </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x40015808) DBG APB freeze register 1 </i>
//    <loc> ( (unsigned int)((DBG_APB_FZ1 >> 0) & 0xFFFFFFFF), ((DBG_APB_FZ1 = (DBG_APB_FZ1 & ~(0xC0201C33UL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xC0201C33) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__DBG_APB_FZ1_DBG_TIMER2_STOP </item>
//    <item> SFDITEM_FIELD__DBG_APB_FZ1_DBG_TIM3_STOP </item>
//    <item> SFDITEM_FIELD__DBG_APB_FZ1_DBG_TIMER6_STOP </item>
//    <item> SFDITEM_FIELD__DBG_APB_FZ1_DBG_TIM7_STOP </item>
//    <item> SFDITEM_FIELD__DBG_APB_FZ1_DBG_RTC_STOP </item>
//    <item> SFDITEM_FIELD__DBG_APB_FZ1_DBG_WWDG_STOP </item>
//    <item> SFDITEM_FIELD__DBG_APB_FZ1_DBG_IWDG_STOP </item>
//    <item> SFDITEM_FIELD__DBG_APB_FZ1_DBG_I2C1_STOP </item>
//    <item> SFDITEM_FIELD__DBG_APB_FZ1_DBG_LPTIM2_STOP </item>
//    <item> SFDITEM_FIELD__DBG_APB_FZ1_DBG_LPTIM1_STOP </item>
//  </rtree>
//  


// ---------------------------  Register Item Address: DBG_APB_FZ2  -------------------------------
// SVD Line: 1073

unsigned int DBG_APB_FZ2 __AT (0x4001580C);



// --------------------------  Field Item: DBG_APB_FZ2_DBG_TIM1_STOP  -----------------------------
// SVD Line: 1082

//  <item> SFDITEM_FIELD__DBG_APB_FZ2_DBG_TIM1_STOP
//    <name> DBG_TIM1_STOP </name>
//    <rw> 
//    <i> [Bit 11] RW (@ 0x4001580C) DBG_TIM1_STOP </i>
//    <check> 
//      <loc> ( (unsigned int) DBG_APB_FZ2 ) </loc>
//      <o.11..11> DBG_TIM1_STOP
//    </check>
//  </item>
//  


// -------------------------  Field Item: DBG_APB_FZ2_DBG_TIM14_STOP  -----------------------------
// SVD Line: 1088

//  <item> SFDITEM_FIELD__DBG_APB_FZ2_DBG_TIM14_STOP
//    <name> DBG_TIM14_STOP </name>
//    <rw> 
//    <i> [Bit 15] RW (@ 0x4001580C) DBG_TIM14_STOP </i>
//    <check> 
//      <loc> ( (unsigned int) DBG_APB_FZ2 ) </loc>
//      <o.15..15> DBG_TIM14_STOP
//    </check>
//  </item>
//  


// -------------------------  Field Item: DBG_APB_FZ2_DBG_TIM15_STOP  -----------------------------
// SVD Line: 1094

//  <item> SFDITEM_FIELD__DBG_APB_FZ2_DBG_TIM15_STOP
//    <name> DBG_TIM15_STOP </name>
//    <rw> 
//    <i> [Bit 16] RW (@ 0x4001580C) DBG_TIM15_STOP </i>
//    <check> 
//      <loc> ( (unsigned int) DBG_APB_FZ2 ) </loc>
//      <o.16..16> DBG_TIM15_STOP
//    </check>
//  </item>
//  


// -------------------------  Field Item: DBG_APB_FZ2_DBG_TIM16_STOP  -----------------------------
// SVD Line: 1100

//  <item> SFDITEM_FIELD__DBG_APB_FZ2_DBG_TIM16_STOP
//    <name> DBG_TIM16_STOP </name>
//    <rw> 
//    <i> [Bit 17] RW (@ 0x4001580C) DBG_TIM16_STOP </i>
//    <check> 
//      <loc> ( (unsigned int) DBG_APB_FZ2 ) </loc>
//      <o.17..17> DBG_TIM16_STOP
//    </check>
//  </item>
//  


// -------------------------  Field Item: DBG_APB_FZ2_DBG_TIM17_STOP  -----------------------------
// SVD Line: 1106

//  <item> SFDITEM_FIELD__DBG_APB_FZ2_DBG_TIM17_STOP
//    <name> DBG_TIM17_STOP </name>
//    <rw> 
//    <i> [Bit 18] RW (@ 0x4001580C) DBG_TIM17_STOP </i>
//    <check> 
//      <loc> ( (unsigned int) DBG_APB_FZ2 ) </loc>
//      <o.18..18> DBG_TIM17_STOP
//    </check>
//  </item>
//  


// -------------------------------  Register RTree: DBG_APB_FZ2  ----------------------------------
// SVD Line: 1073

//  <rtree> SFDITEM_REG__DBG_APB_FZ2
//    <name> APB_FZ2 </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x4001580C) DBG APB freeze register 2 </i>
//    <loc> ( (unsigned int)((DBG_APB_FZ2 >> 0) & 0xFFFFFFFF), ((DBG_APB_FZ2 = (DBG_APB_FZ2 & ~(0x78800UL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0x78800) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__DBG_APB_FZ2_DBG_TIM1_STOP </item>
//    <item> SFDITEM_FIELD__DBG_APB_FZ2_DBG_TIM14_STOP </item>
//    <item> SFDITEM_FIELD__DBG_APB_FZ2_DBG_TIM15_STOP </item>
//    <item> SFDITEM_FIELD__DBG_APB_FZ2_DBG_TIM16_STOP </item>
//    <item> SFDITEM_FIELD__DBG_APB_FZ2_DBG_TIM17_STOP </item>
//  </rtree>
//  


// ----------------------------------  Peripheral View: DBG  --------------------------------------
// SVD Line: 934

//  <view> DBG
//    <name> DBG </name>
//    <item> SFDITEM_REG__DBG_IDCODE </item>
//    <item> SFDITEM_REG__DBG_CR </item>
//    <item> SFDITEM_REG__DBG_APB_FZ1 </item>
//    <item> SFDITEM_REG__DBG_APB_FZ2 </item>
//  </view>
//  


// ------------------------------  Register Item Address: RCC_CR  ---------------------------------
// SVD Line: 1132

unsigned int RCC_CR __AT (0x40021000);



// --------------------------------  Field Item: RCC_CR_HSION  ------------------------------------
// SVD Line: 1141

//  <item> SFDITEM_FIELD__RCC_CR_HSION
//    <name> HSION </name>
//    <rw> 
//    <i> [Bit 8] RW (@ 0x40021000) HSI16 clock enable </i>
//    <check> 
//      <loc> ( (unsigned int) RCC_CR ) </loc>
//      <o.8..8> HSION
//    </check>
//  </item>
//  


// -------------------------------  Field Item: RCC_CR_HSIKERON  ----------------------------------
// SVD Line: 1147

//  <item> SFDITEM_FIELD__RCC_CR_HSIKERON
//    <name> HSIKERON </name>
//    <rw> 
//    <i> [Bit 9] RW (@ 0x40021000) HSI16 always enable for peripheral  kernels </i>
//    <check> 
//      <loc> ( (unsigned int) RCC_CR ) </loc>
//      <o.9..9> HSIKERON
//    </check>
//  </item>
//  


// --------------------------------  Field Item: RCC_CR_HSIRDY  -----------------------------------
// SVD Line: 1154

//  <item> SFDITEM_FIELD__RCC_CR_HSIRDY
//    <name> HSIRDY </name>
//    <rw> 
//    <i> [Bit 10] RW (@ 0x40021000) HSI16 clock ready flag </i>
//    <check> 
//      <loc> ( (unsigned int) RCC_CR ) </loc>
//      <o.10..10> HSIRDY
//    </check>
//  </item>
//  


// --------------------------------  Field Item: RCC_CR_HSIDIV  -----------------------------------
// SVD Line: 1160

//  <item> SFDITEM_FIELD__RCC_CR_HSIDIV
//    <name> HSIDIV </name>
//    <rw> 
//    <i> [Bits 13..11] RW (@ 0x40021000) HSI16 clock division  factor </i>
//    <edit> 
//      <loc> ( (unsigned char)((RCC_CR >> 11) & 0x7), ((RCC_CR = (RCC_CR & ~(0x7UL << 11 )) | ((unsigned long)(Gui_u8:GuiVal & 0x7) << 11 ) ) )) </loc>
//    </edit>
//  </item>
//  


// --------------------------------  Field Item: RCC_CR_HSEON  ------------------------------------
// SVD Line: 1167

//  <item> SFDITEM_FIELD__RCC_CR_HSEON
//    <name> HSEON </name>
//    <rw> 
//    <i> [Bit 16] RW (@ 0x40021000) HSE clock enable </i>
//    <check> 
//      <loc> ( (unsigned int) RCC_CR ) </loc>
//      <o.16..16> HSEON
//    </check>
//  </item>
//  


// --------------------------------  Field Item: RCC_CR_HSERDY  -----------------------------------
// SVD Line: 1173

//  <item> SFDITEM_FIELD__RCC_CR_HSERDY
//    <name> HSERDY </name>
//    <rw> 
//    <i> [Bit 17] RW (@ 0x40021000) HSE clock ready flag </i>
//    <check> 
//      <loc> ( (unsigned int) RCC_CR ) </loc>
//      <o.17..17> HSERDY
//    </check>
//  </item>
//  


// --------------------------------  Field Item: RCC_CR_HSEBYP  -----------------------------------
// SVD Line: 1179

//  <item> SFDITEM_FIELD__RCC_CR_HSEBYP
//    <name> HSEBYP </name>
//    <rw> 
//    <i> [Bit 18] RW (@ 0x40021000) HSE crystal oscillator  bypass </i>
//    <check> 
//      <loc> ( (unsigned int) RCC_CR ) </loc>
//      <o.18..18> HSEBYP
//    </check>
//  </item>
//  


// --------------------------------  Field Item: RCC_CR_CSSON  ------------------------------------
// SVD Line: 1186

//  <item> SFDITEM_FIELD__RCC_CR_CSSON
//    <name> CSSON </name>
//    <rw> 
//    <i> [Bit 19] RW (@ 0x40021000) Clock security system  enable </i>
//    <check> 
//      <loc> ( (unsigned int) RCC_CR ) </loc>
//      <o.19..19> CSSON
//    </check>
//  </item>
//  


// --------------------------------  Field Item: RCC_CR_PLLON  ------------------------------------
// SVD Line: 1193

//  <item> SFDITEM_FIELD__RCC_CR_PLLON
//    <name> PLLON </name>
//    <rw> 
//    <i> [Bit 24] RW (@ 0x40021000) PLL enable </i>
//    <check> 
//      <loc> ( (unsigned int) RCC_CR ) </loc>
//      <o.24..24> PLLON
//    </check>
//  </item>
//  


// --------------------------------  Field Item: RCC_CR_PLLRDY  -----------------------------------
// SVD Line: 1199

//  <item> SFDITEM_FIELD__RCC_CR_PLLRDY
//    <name> PLLRDY </name>
//    <rw> 
//    <i> [Bit 25] RW (@ 0x40021000) PLL clock ready flag </i>
//    <check> 
//      <loc> ( (unsigned int) RCC_CR ) </loc>
//      <o.25..25> PLLRDY
//    </check>
//  </item>
//  


// ---------------------------------  Register RTree: RCC_CR  -------------------------------------
// SVD Line: 1132

//  <rtree> SFDITEM_REG__RCC_CR
//    <name> CR </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x40021000) Clock control register </i>
//    <loc> ( (unsigned int)((RCC_CR >> 0) & 0xFFFFFFFF), ((RCC_CR = (RCC_CR & ~(0x30F3F00UL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0x30F3F00) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__RCC_CR_HSION </item>
//    <item> SFDITEM_FIELD__RCC_CR_HSIKERON </item>
//    <item> SFDITEM_FIELD__RCC_CR_HSIRDY </item>
//    <item> SFDITEM_FIELD__RCC_CR_HSIDIV </item>
//    <item> SFDITEM_FIELD__RCC_CR_HSEON </item>
//    <item> SFDITEM_FIELD__RCC_CR_HSERDY </item>
//    <item> SFDITEM_FIELD__RCC_CR_HSEBYP </item>
//    <item> SFDITEM_FIELD__RCC_CR_CSSON </item>
//    <item> SFDITEM_FIELD__RCC_CR_PLLON </item>
//    <item> SFDITEM_FIELD__RCC_CR_PLLRDY </item>
//  </rtree>
//  


// ----------------------------  Register Item Address: RCC_ICSCR  --------------------------------
// SVD Line: 1207

unsigned int RCC_ICSCR __AT (0x40021004);



// ------------------------------  Field Item: RCC_ICSCR_HSICAL  ----------------------------------
// SVD Line: 1216

//  <item> SFDITEM_FIELD__RCC_ICSCR_HSICAL
//    <name> HSICAL </name>
//    <r> 
//    <i> [Bits 7..0] RO (@ 0x40021004) HSI16 clock calibration </i>
//    <edit> 
//      <loc> ( (unsigned char)((RCC_ICSCR >> 0) & 0xFF) ) </loc>
//    </edit>
//  </item>
//  


// ------------------------------  Field Item: RCC_ICSCR_HSITRIM  ---------------------------------
// SVD Line: 1223

//  <item> SFDITEM_FIELD__RCC_ICSCR_HSITRIM
//    <name> HSITRIM </name>
//    <rw> 
//    <i> [Bits 14..8] RW (@ 0x40021004) HSI16 clock trimming </i>
//    <edit> 
//      <loc> ( (unsigned char)((RCC_ICSCR >> 8) & 0x7F), ((RCC_ICSCR = (RCC_ICSCR & ~(0x7FUL << 8 )) | ((unsigned long)(Gui_u8:GuiVal & 0x7F) << 8 ) ) )) </loc>
//    </edit>
//  </item>
//  


// --------------------------------  Register RTree: RCC_ICSCR  -----------------------------------
// SVD Line: 1207

//  <rtree> SFDITEM_REG__RCC_ICSCR
//    <name> ICSCR </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x40021004) Internal clock sources calibration  register </i>
//    <loc> ( (unsigned int)((RCC_ICSCR >> 0) & 0xFFFFFFFF), ((RCC_ICSCR = (RCC_ICSCR & ~(0x7F00UL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0x7F00) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__RCC_ICSCR_HSICAL </item>
//    <item> SFDITEM_FIELD__RCC_ICSCR_HSITRIM </item>
//  </rtree>
//  


// -----------------------------  Register Item Address: RCC_CFGR  --------------------------------
// SVD Line: 1232

unsigned int RCC_CFGR __AT (0x40021008);



// -------------------------------  Field Item: RCC_CFGR_MCOPRE  ----------------------------------
// SVD Line: 1240

//  <item> SFDITEM_FIELD__RCC_CFGR_MCOPRE
//    <name> MCOPRE </name>
//    <r> 
//    <i> [Bits 30..28] RO (@ 0x40021008) Microcontroller clock output  prescaler </i>
//    <edit> 
//      <loc> ( (unsigned char)((RCC_CFGR >> 28) & 0x7) ) </loc>
//    </edit>
//  </item>
//  


// -------------------------------  Field Item: RCC_CFGR_MCOSEL  ----------------------------------
// SVD Line: 1248

//  <item> SFDITEM_FIELD__RCC_CFGR_MCOSEL
//    <name> MCOSEL </name>
//    <rw> 
//    <i> [Bits 26..24] RW (@ 0x40021008) Microcontroller clock  output </i>
//    <edit> 
//      <loc> ( (unsigned char)((RCC_CFGR >> 24) & 0x7), ((RCC_CFGR = (RCC_CFGR & ~(0x7UL << 24 )) | ((unsigned long)(Gui_u8:GuiVal & 0x7) << 24 ) ) )) </loc>
//    </edit>
//  </item>
//  


// --------------------------------  Field Item: RCC_CFGR_PPRE  -----------------------------------
// SVD Line: 1256

//  <item> SFDITEM_FIELD__RCC_CFGR_PPRE
//    <name> PPRE </name>
//    <rw> 
//    <i> [Bits 14..12] RW (@ 0x40021008) APB prescaler </i>
//    <edit> 
//      <loc> ( (unsigned char)((RCC_CFGR >> 12) & 0x7), ((RCC_CFGR = (RCC_CFGR & ~(0x7UL << 12 )) | ((unsigned long)(Gui_u8:GuiVal & 0x7) << 12 ) ) )) </loc>
//    </edit>
//  </item>
//  


// --------------------------------  Field Item: RCC_CFGR_HPRE  -----------------------------------
// SVD Line: 1263

//  <item> SFDITEM_FIELD__RCC_CFGR_HPRE
//    <name> HPRE </name>
//    <rw> 
//    <i> [Bits 11..8] RW (@ 0x40021008) AHB prescaler </i>
//    <edit> 
//      <loc> ( (unsigned char)((RCC_CFGR >> 8) & 0xF), ((RCC_CFGR = (RCC_CFGR & ~(0xFUL << 8 )) | ((unsigned long)(Gui_u8:GuiVal & 0xF) << 8 ) ) )) </loc>
//    </edit>
//  </item>
//  


// --------------------------------  Field Item: RCC_CFGR_SWS  ------------------------------------
// SVD Line: 1270

//  <item> SFDITEM_FIELD__RCC_CFGR_SWS
//    <name> SWS </name>
//    <r> 
//    <i> [Bits 5..3] RO (@ 0x40021008) System clock switch status </i>
//    <edit> 
//      <loc> ( (unsigned char)((RCC_CFGR >> 3) & 0x7) ) </loc>
//    </edit>
//  </item>
//  


// ---------------------------------  Field Item: RCC_CFGR_SW  ------------------------------------
// SVD Line: 1277

//  <item> SFDITEM_FIELD__RCC_CFGR_SW
//    <name> SW </name>
//    <rw> 
//    <i> [Bits 2..0] RW (@ 0x40021008) System clock switch </i>
//    <edit> 
//      <loc> ( (unsigned char)((RCC_CFGR >> 0) & 0x7), ((RCC_CFGR = (RCC_CFGR & ~(0x7UL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0x7) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// --------------------------------  Register RTree: RCC_CFGR  ------------------------------------
// SVD Line: 1232

//  <rtree> SFDITEM_REG__RCC_CFGR
//    <name> CFGR </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x40021008) Clock configuration register </i>
//    <loc> ( (unsigned int)((RCC_CFGR >> 0) & 0xFFFFFFFF), ((RCC_CFGR = (RCC_CFGR & ~(0x7007F07UL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0x7007F07) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__RCC_CFGR_MCOPRE </item>
//    <item> SFDITEM_FIELD__RCC_CFGR_MCOSEL </item>
//    <item> SFDITEM_FIELD__RCC_CFGR_PPRE </item>
//    <item> SFDITEM_FIELD__RCC_CFGR_HPRE </item>
//    <item> SFDITEM_FIELD__RCC_CFGR_SWS </item>
//    <item> SFDITEM_FIELD__RCC_CFGR_SW </item>
//  </rtree>
//  


// --------------------------  Register Item Address: RCC_PLLSYSCFGR  -----------------------------
// SVD Line: 1286

unsigned int RCC_PLLSYSCFGR __AT (0x4002100C);



// ----------------------------  Field Item: RCC_PLLSYSCFGR_PLLSRC  -------------------------------
// SVD Line: 1295

//  <item> SFDITEM_FIELD__RCC_PLLSYSCFGR_PLLSRC
//    <name> PLLSRC </name>
//    <rw> 
//    <i> [Bits 1..0] RW (@ 0x4002100C) PLL input clock source </i>
//    <edit> 
//      <loc> ( (unsigned char)((RCC_PLLSYSCFGR >> 0) & 0x3), ((RCC_PLLSYSCFGR = (RCC_PLLSYSCFGR & ~(0x3UL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0x3) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -----------------------------  Field Item: RCC_PLLSYSCFGR_PLLM  --------------------------------
// SVD Line: 1301

//  <item> SFDITEM_FIELD__RCC_PLLSYSCFGR_PLLM
//    <name> PLLM </name>
//    <rw> 
//    <i> [Bits 6..4] RW (@ 0x4002100C) Division factor M of the PLL input clock  divider </i>
//    <edit> 
//      <loc> ( (unsigned char)((RCC_PLLSYSCFGR >> 4) & 0x7), ((RCC_PLLSYSCFGR = (RCC_PLLSYSCFGR & ~(0x7UL << 4 )) | ((unsigned long)(Gui_u8:GuiVal & 0x7) << 4 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -----------------------------  Field Item: RCC_PLLSYSCFGR_PLLN  --------------------------------
// SVD Line: 1308

//  <item> SFDITEM_FIELD__RCC_PLLSYSCFGR_PLLN
//    <name> PLLN </name>
//    <rw> 
//    <i> [Bits 14..8] RW (@ 0x4002100C) PLL frequency multiplication factor  N </i>
//    <edit> 
//      <loc> ( (unsigned char)((RCC_PLLSYSCFGR >> 8) & 0x7F), ((RCC_PLLSYSCFGR = (RCC_PLLSYSCFGR & ~(0x7FUL << 8 )) | ((unsigned long)(Gui_u8:GuiVal & 0x7F) << 8 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ----------------------------  Field Item: RCC_PLLSYSCFGR_PLLPEN  -------------------------------
// SVD Line: 1315

//  <item> SFDITEM_FIELD__RCC_PLLSYSCFGR_PLLPEN
//    <name> PLLPEN </name>
//    <rw> 
//    <i> [Bit 16] RW (@ 0x4002100C) PLLPCLK clock output  enable </i>
//    <check> 
//      <loc> ( (unsigned int) RCC_PLLSYSCFGR ) </loc>
//      <o.16..16> PLLPEN
//    </check>
//  </item>
//  


// -----------------------------  Field Item: RCC_PLLSYSCFGR_PLLP  --------------------------------
// SVD Line: 1322

//  <item> SFDITEM_FIELD__RCC_PLLSYSCFGR_PLLP
//    <name> PLLP </name>
//    <rw> 
//    <i> [Bits 21..17] RW (@ 0x4002100C) PLL VCO division factor P for PLLPCLK  clock output </i>
//    <edit> 
//      <loc> ( (unsigned char)((RCC_PLLSYSCFGR >> 17) & 0x1F), ((RCC_PLLSYSCFGR = (RCC_PLLSYSCFGR & ~(0x1FUL << 17 )) | ((unsigned long)(Gui_u8:GuiVal & 0x1F) << 17 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ----------------------------  Field Item: RCC_PLLSYSCFGR_PLLQEN  -------------------------------
// SVD Line: 1329

//  <item> SFDITEM_FIELD__RCC_PLLSYSCFGR_PLLQEN
//    <name> PLLQEN </name>
//    <rw> 
//    <i> [Bit 24] RW (@ 0x4002100C) PLLQCLK clock output  enable </i>
//    <check> 
//      <loc> ( (unsigned int) RCC_PLLSYSCFGR ) </loc>
//      <o.24..24> PLLQEN
//    </check>
//  </item>
//  


// -----------------------------  Field Item: RCC_PLLSYSCFGR_PLLQ  --------------------------------
// SVD Line: 1336

//  <item> SFDITEM_FIELD__RCC_PLLSYSCFGR_PLLQ
//    <name> PLLQ </name>
//    <rw> 
//    <i> [Bits 27..25] RW (@ 0x4002100C) PLL VCO division factor Q for PLLQCLK  clock output </i>
//    <edit> 
//      <loc> ( (unsigned char)((RCC_PLLSYSCFGR >> 25) & 0x7), ((RCC_PLLSYSCFGR = (RCC_PLLSYSCFGR & ~(0x7UL << 25 )) | ((unsigned long)(Gui_u8:GuiVal & 0x7) << 25 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ----------------------------  Field Item: RCC_PLLSYSCFGR_PLLREN  -------------------------------
// SVD Line: 1343

//  <item> SFDITEM_FIELD__RCC_PLLSYSCFGR_PLLREN
//    <name> PLLREN </name>
//    <rw> 
//    <i> [Bit 28] RW (@ 0x4002100C) PLLRCLK clock output  enable </i>
//    <check> 
//      <loc> ( (unsigned int) RCC_PLLSYSCFGR ) </loc>
//      <o.28..28> PLLREN
//    </check>
//  </item>
//  


// -----------------------------  Field Item: RCC_PLLSYSCFGR_PLLR  --------------------------------
// SVD Line: 1350

//  <item> SFDITEM_FIELD__RCC_PLLSYSCFGR_PLLR
//    <name> PLLR </name>
//    <rw> 
//    <i> [Bits 31..29] RW (@ 0x4002100C) PLL VCO division factor R for PLLRCLK  clock output </i>
//    <edit> 
//      <loc> ( (unsigned char)((RCC_PLLSYSCFGR >> 29) & 0x7), ((RCC_PLLSYSCFGR = (RCC_PLLSYSCFGR & ~(0x7UL << 29 )) | ((unsigned long)(Gui_u8:GuiVal & 0x7) << 29 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -----------------------------  Register RTree: RCC_PLLSYSCFGR  ---------------------------------
// SVD Line: 1286

//  <rtree> SFDITEM_REG__RCC_PLLSYSCFGR
//    <name> PLLSYSCFGR </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x4002100C) PLL configuration register </i>
//    <loc> ( (unsigned int)((RCC_PLLSYSCFGR >> 0) & 0xFFFFFFFF), ((RCC_PLLSYSCFGR = (RCC_PLLSYSCFGR & ~(0xFF3F7F73UL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFF3F7F73) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__RCC_PLLSYSCFGR_PLLSRC </item>
//    <item> SFDITEM_FIELD__RCC_PLLSYSCFGR_PLLM </item>
//    <item> SFDITEM_FIELD__RCC_PLLSYSCFGR_PLLN </item>
//    <item> SFDITEM_FIELD__RCC_PLLSYSCFGR_PLLPEN </item>
//    <item> SFDITEM_FIELD__RCC_PLLSYSCFGR_PLLP </item>
//    <item> SFDITEM_FIELD__RCC_PLLSYSCFGR_PLLQEN </item>
//    <item> SFDITEM_FIELD__RCC_PLLSYSCFGR_PLLQ </item>
//    <item> SFDITEM_FIELD__RCC_PLLSYSCFGR_PLLREN </item>
//    <item> SFDITEM_FIELD__RCC_PLLSYSCFGR_PLLR </item>
//  </rtree>
//  


// -----------------------------  Register Item Address: RCC_CIER  --------------------------------
// SVD Line: 1359

unsigned int RCC_CIER __AT (0x40021018);



// ------------------------------  Field Item: RCC_CIER_LSIRDYIE  ---------------------------------
// SVD Line: 1369

//  <item> SFDITEM_FIELD__RCC_CIER_LSIRDYIE
//    <name> LSIRDYIE </name>
//    <rw> 
//    <i> [Bit 0] RW (@ 0x40021018) LSI ready interrupt enable </i>
//    <check> 
//      <loc> ( (unsigned int) RCC_CIER ) </loc>
//      <o.0..0> LSIRDYIE
//    </check>
//  </item>
//  


// ------------------------------  Field Item: RCC_CIER_LSERDYIE  ---------------------------------
// SVD Line: 1375

//  <item> SFDITEM_FIELD__RCC_CIER_LSERDYIE
//    <name> LSERDYIE </name>
//    <rw> 
//    <i> [Bit 1] RW (@ 0x40021018) LSE ready interrupt enable </i>
//    <check> 
//      <loc> ( (unsigned int) RCC_CIER ) </loc>
//      <o.1..1> LSERDYIE
//    </check>
//  </item>
//  


// ------------------------------  Field Item: RCC_CIER_HSIRDYIE  ---------------------------------
// SVD Line: 1381

//  <item> SFDITEM_FIELD__RCC_CIER_HSIRDYIE
//    <name> HSIRDYIE </name>
//    <rw> 
//    <i> [Bit 3] RW (@ 0x40021018) HSI ready interrupt enable </i>
//    <check> 
//      <loc> ( (unsigned int) RCC_CIER ) </loc>
//      <o.3..3> HSIRDYIE
//    </check>
//  </item>
//  


// ------------------------------  Field Item: RCC_CIER_HSERDYIE  ---------------------------------
// SVD Line: 1387

//  <item> SFDITEM_FIELD__RCC_CIER_HSERDYIE
//    <name> HSERDYIE </name>
//    <rw> 
//    <i> [Bit 4] RW (@ 0x40021018) HSE ready interrupt enable </i>
//    <check> 
//      <loc> ( (unsigned int) RCC_CIER ) </loc>
//      <o.4..4> HSERDYIE
//    </check>
//  </item>
//  


// ----------------------------  Field Item: RCC_CIER_PLLSYSRDYIE  --------------------------------
// SVD Line: 1393

//  <item> SFDITEM_FIELD__RCC_CIER_PLLSYSRDYIE
//    <name> PLLSYSRDYIE </name>
//    <rw> 
//    <i> [Bit 5] RW (@ 0x40021018) PLL ready interrupt enable </i>
//    <check> 
//      <loc> ( (unsigned int) RCC_CIER ) </loc>
//      <o.5..5> PLLSYSRDYIE
//    </check>
//  </item>
//  


// --------------------------------  Register RTree: RCC_CIER  ------------------------------------
// SVD Line: 1359

//  <rtree> SFDITEM_REG__RCC_CIER
//    <name> CIER </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x40021018) Clock interrupt enable  register </i>
//    <loc> ( (unsigned int)((RCC_CIER >> 0) & 0xFFFFFFFF), ((RCC_CIER = (RCC_CIER & ~(0x3BUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0x3B) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__RCC_CIER_LSIRDYIE </item>
//    <item> SFDITEM_FIELD__RCC_CIER_LSERDYIE </item>
//    <item> SFDITEM_FIELD__RCC_CIER_HSIRDYIE </item>
//    <item> SFDITEM_FIELD__RCC_CIER_HSERDYIE </item>
//    <item> SFDITEM_FIELD__RCC_CIER_PLLSYSRDYIE </item>
//  </rtree>
//  


// -----------------------------  Register Item Address: RCC_CIFR  --------------------------------
// SVD Line: 1401

unsigned int RCC_CIFR __AT (0x4002101C);



// ------------------------------  Field Item: RCC_CIFR_LSIRDYF  ----------------------------------
// SVD Line: 1410

//  <item> SFDITEM_FIELD__RCC_CIFR_LSIRDYF
//    <name> LSIRDYF </name>
//    <r> 
//    <i> [Bit 0] RO (@ 0x4002101C) LSI ready interrupt flag </i>
//    <check> 
//      <loc> ( (unsigned int) RCC_CIFR ) </loc>
//      <o.0..0> LSIRDYF
//    </check>
//  </item>
//  


// ------------------------------  Field Item: RCC_CIFR_LSERDYF  ----------------------------------
// SVD Line: 1416

//  <item> SFDITEM_FIELD__RCC_CIFR_LSERDYF
//    <name> LSERDYF </name>
//    <r> 
//    <i> [Bit 1] RO (@ 0x4002101C) LSE ready interrupt flag </i>
//    <check> 
//      <loc> ( (unsigned int) RCC_CIFR ) </loc>
//      <o.1..1> LSERDYF
//    </check>
//  </item>
//  


// ------------------------------  Field Item: RCC_CIFR_HSIRDYF  ----------------------------------
// SVD Line: 1422

//  <item> SFDITEM_FIELD__RCC_CIFR_HSIRDYF
//    <name> HSIRDYF </name>
//    <r> 
//    <i> [Bit 3] RO (@ 0x4002101C) HSI ready interrupt flag </i>
//    <check> 
//      <loc> ( (unsigned int) RCC_CIFR ) </loc>
//      <o.3..3> HSIRDYF
//    </check>
//  </item>
//  


// ------------------------------  Field Item: RCC_CIFR_HSERDYF  ----------------------------------
// SVD Line: 1428

//  <item> SFDITEM_FIELD__RCC_CIFR_HSERDYF
//    <name> HSERDYF </name>
//    <r> 
//    <i> [Bit 4] RO (@ 0x4002101C) HSE ready interrupt flag </i>
//    <check> 
//      <loc> ( (unsigned int) RCC_CIFR ) </loc>
//      <o.4..4> HSERDYF
//    </check>
//  </item>
//  


// -----------------------------  Field Item: RCC_CIFR_PLLSYSRDYF  --------------------------------
// SVD Line: 1434

//  <item> SFDITEM_FIELD__RCC_CIFR_PLLSYSRDYF
//    <name> PLLSYSRDYF </name>
//    <r> 
//    <i> [Bit 5] RO (@ 0x4002101C) PLL ready interrupt flag </i>
//    <check> 
//      <loc> ( (unsigned int) RCC_CIFR ) </loc>
//      <o.5..5> PLLSYSRDYF
//    </check>
//  </item>
//  


// --------------------------------  Field Item: RCC_CIFR_CSSF  -----------------------------------
// SVD Line: 1440

//  <item> SFDITEM_FIELD__RCC_CIFR_CSSF
//    <name> CSSF </name>
//    <r> 
//    <i> [Bit 8] RO (@ 0x4002101C) Clock security system interrupt  flag </i>
//    <check> 
//      <loc> ( (unsigned int) RCC_CIFR ) </loc>
//      <o.8..8> CSSF
//    </check>
//  </item>
//  


// ------------------------------  Field Item: RCC_CIFR_LSECSSF  ----------------------------------
// SVD Line: 1447

//  <item> SFDITEM_FIELD__RCC_CIFR_LSECSSF
//    <name> LSECSSF </name>
//    <r> 
//    <i> [Bit 9] RO (@ 0x4002101C) LSE Clock security system interrupt  flag </i>
//    <check> 
//      <loc> ( (unsigned int) RCC_CIFR ) </loc>
//      <o.9..9> LSECSSF
//    </check>
//  </item>
//  


// --------------------------------  Register RTree: RCC_CIFR  ------------------------------------
// SVD Line: 1401

//  <rtree> SFDITEM_REG__RCC_CIFR
//    <name> CIFR </name>
//    <r> 
//    <i> [Bits 31..0] RO (@ 0x4002101C) Clock interrupt flag register </i>
//    <loc> ( (unsigned int)((RCC_CIFR >> 0) & 0xFFFFFFFF) ) </loc>
//    <item> SFDITEM_FIELD__RCC_CIFR_LSIRDYF </item>
//    <item> SFDITEM_FIELD__RCC_CIFR_LSERDYF </item>
//    <item> SFDITEM_FIELD__RCC_CIFR_HSIRDYF </item>
//    <item> SFDITEM_FIELD__RCC_CIFR_HSERDYF </item>
//    <item> SFDITEM_FIELD__RCC_CIFR_PLLSYSRDYF </item>
//    <item> SFDITEM_FIELD__RCC_CIFR_CSSF </item>
//    <item> SFDITEM_FIELD__RCC_CIFR_LSECSSF </item>
//  </rtree>
//  


// -----------------------------  Register Item Address: RCC_CICR  --------------------------------
// SVD Line: 1456

unsigned int RCC_CICR __AT (0x40021020);



// ------------------------------  Field Item: RCC_CICR_LSIRDYC  ----------------------------------
// SVD Line: 1465

//  <item> SFDITEM_FIELD__RCC_CICR_LSIRDYC
//    <name> LSIRDYC </name>
//    <w> 
//    <i> [Bit 0] WO (@ 0x40021020) LSI ready interrupt clear </i>
//    <check> 
//      <loc> ( (unsigned int) RCC_CICR ) </loc>
//      <o.0..0> LSIRDYC
//    </check>
//  </item>
//  


// ------------------------------  Field Item: RCC_CICR_LSERDYC  ----------------------------------
// SVD Line: 1471

//  <item> SFDITEM_FIELD__RCC_CICR_LSERDYC
//    <name> LSERDYC </name>
//    <w> 
//    <i> [Bit 1] WO (@ 0x40021020) LSE ready interrupt clear </i>
//    <check> 
//      <loc> ( (unsigned int) RCC_CICR ) </loc>
//      <o.1..1> LSERDYC
//    </check>
//  </item>
//  


// ------------------------------  Field Item: RCC_CICR_HSIRDYC  ----------------------------------
// SVD Line: 1477

//  <item> SFDITEM_FIELD__RCC_CICR_HSIRDYC
//    <name> HSIRDYC </name>
//    <w> 
//    <i> [Bit 3] WO (@ 0x40021020) HSI ready interrupt clear </i>
//    <check> 
//      <loc> ( (unsigned int) RCC_CICR ) </loc>
//      <o.3..3> HSIRDYC
//    </check>
//  </item>
//  


// ------------------------------  Field Item: RCC_CICR_HSERDYC  ----------------------------------
// SVD Line: 1483

//  <item> SFDITEM_FIELD__RCC_CICR_HSERDYC
//    <name> HSERDYC </name>
//    <w> 
//    <i> [Bit 4] WO (@ 0x40021020) HSE ready interrupt clear </i>
//    <check> 
//      <loc> ( (unsigned int) RCC_CICR ) </loc>
//      <o.4..4> HSERDYC
//    </check>
//  </item>
//  


// -----------------------------  Field Item: RCC_CICR_PLLSYSRDYC  --------------------------------
// SVD Line: 1489

//  <item> SFDITEM_FIELD__RCC_CICR_PLLSYSRDYC
//    <name> PLLSYSRDYC </name>
//    <w> 
//    <i> [Bit 5] WO (@ 0x40021020) PLL ready interrupt clear </i>
//    <check> 
//      <loc> ( (unsigned int) RCC_CICR ) </loc>
//      <o.5..5> PLLSYSRDYC
//    </check>
//  </item>
//  


// --------------------------------  Field Item: RCC_CICR_CSSC  -----------------------------------
// SVD Line: 1495

//  <item> SFDITEM_FIELD__RCC_CICR_CSSC
//    <name> CSSC </name>
//    <w> 
//    <i> [Bit 8] WO (@ 0x40021020) Clock security system interrupt  clear </i>
//    <check> 
//      <loc> ( (unsigned int) RCC_CICR ) </loc>
//      <o.8..8> CSSC
//    </check>
//  </item>
//  


// ------------------------------  Field Item: RCC_CICR_LSECSSC  ----------------------------------
// SVD Line: 1502

//  <item> SFDITEM_FIELD__RCC_CICR_LSECSSC
//    <name> LSECSSC </name>
//    <w> 
//    <i> [Bit 9] WO (@ 0x40021020) LSE Clock security system interrupt  clear </i>
//    <check> 
//      <loc> ( (unsigned int) RCC_CICR ) </loc>
//      <o.9..9> LSECSSC
//    </check>
//  </item>
//  


// --------------------------------  Register RTree: RCC_CICR  ------------------------------------
// SVD Line: 1456

//  <rtree> SFDITEM_REG__RCC_CICR
//    <name> CICR </name>
//    <w> 
//    <i> [Bits 31..0] WO (@ 0x40021020) Clock interrupt clear register </i>
//    <loc> ( (unsigned int)((RCC_CICR >> 0) & 0xFFFFFFFF), ((RCC_CICR = (RCC_CICR & ~(0x33BUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0x33B) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__RCC_CICR_LSIRDYC </item>
//    <item> SFDITEM_FIELD__RCC_CICR_LSERDYC </item>
//    <item> SFDITEM_FIELD__RCC_CICR_HSIRDYC </item>
//    <item> SFDITEM_FIELD__RCC_CICR_HSERDYC </item>
//    <item> SFDITEM_FIELD__RCC_CICR_PLLSYSRDYC </item>
//    <item> SFDITEM_FIELD__RCC_CICR_CSSC </item>
//    <item> SFDITEM_FIELD__RCC_CICR_LSECSSC </item>
//  </rtree>
//  


// ---------------------------  Register Item Address: RCC_AHBRSTR  -------------------------------
// SVD Line: 1511

unsigned int RCC_AHBRSTR __AT (0x40021028);



// -----------------------------  Field Item: RCC_AHBRSTR_DMARST  ---------------------------------
// SVD Line: 1520

//  <item> SFDITEM_FIELD__RCC_AHBRSTR_DMARST
//    <name> DMARST </name>
//    <rw> 
//    <i> [Bit 0] RW (@ 0x40021028) DMA1 reset </i>
//    <check> 
//      <loc> ( (unsigned int) RCC_AHBRSTR ) </loc>
//      <o.0..0> DMARST
//    </check>
//  </item>
//  


// ----------------------------  Field Item: RCC_AHBRSTR_FLASHRST  --------------------------------
// SVD Line: 1526

//  <item> SFDITEM_FIELD__RCC_AHBRSTR_FLASHRST
//    <name> FLASHRST </name>
//    <rw> 
//    <i> [Bit 8] RW (@ 0x40021028) FLITF reset </i>
//    <check> 
//      <loc> ( (unsigned int) RCC_AHBRSTR ) </loc>
//      <o.8..8> FLASHRST
//    </check>
//  </item>
//  


// -----------------------------  Field Item: RCC_AHBRSTR_CRCRST  ---------------------------------
// SVD Line: 1532

//  <item> SFDITEM_FIELD__RCC_AHBRSTR_CRCRST
//    <name> CRCRST </name>
//    <rw> 
//    <i> [Bit 12] RW (@ 0x40021028) CRC reset </i>
//    <check> 
//      <loc> ( (unsigned int) RCC_AHBRSTR ) </loc>
//      <o.12..12> CRCRST
//    </check>
//  </item>
//  


// -----------------------------  Field Item: RCC_AHBRSTR_AESRST  ---------------------------------
// SVD Line: 1538

//  <item> SFDITEM_FIELD__RCC_AHBRSTR_AESRST
//    <name> AESRST </name>
//    <rw> 
//    <i> [Bit 16] RW (@ 0x40021028) AES hardware accelerator  reset </i>
//    <check> 
//      <loc> ( (unsigned int) RCC_AHBRSTR ) </loc>
//      <o.16..16> AESRST
//    </check>
//  </item>
//  


// -----------------------------  Field Item: RCC_AHBRSTR_RNGRST  ---------------------------------
// SVD Line: 1545

//  <item> SFDITEM_FIELD__RCC_AHBRSTR_RNGRST
//    <name> RNGRST </name>
//    <rw> 
//    <i> [Bit 18] RW (@ 0x40021028) Random number generator  reset </i>
//    <check> 
//      <loc> ( (unsigned int) RCC_AHBRSTR ) </loc>
//      <o.18..18> RNGRST
//    </check>
//  </item>
//  


// -------------------------------  Register RTree: RCC_AHBRSTR  ----------------------------------
// SVD Line: 1511

//  <rtree> SFDITEM_REG__RCC_AHBRSTR
//    <name> AHBRSTR </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x40021028) AHB peripheral reset register </i>
//    <loc> ( (unsigned int)((RCC_AHBRSTR >> 0) & 0xFFFFFFFF), ((RCC_AHBRSTR = (RCC_AHBRSTR & ~(0x51101UL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0x51101) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__RCC_AHBRSTR_DMARST </item>
//    <item> SFDITEM_FIELD__RCC_AHBRSTR_FLASHRST </item>
//    <item> SFDITEM_FIELD__RCC_AHBRSTR_CRCRST </item>
//    <item> SFDITEM_FIELD__RCC_AHBRSTR_AESRST </item>
//    <item> SFDITEM_FIELD__RCC_AHBRSTR_RNGRST </item>
//  </rtree>
//  


// ---------------------------  Register Item Address: RCC_IOPRSTR  -------------------------------
// SVD Line: 1554

unsigned int RCC_IOPRSTR __AT (0x40021024);



// -----------------------------  Field Item: RCC_IOPRSTR_IOPARST  --------------------------------
// SVD Line: 1563

//  <item> SFDITEM_FIELD__RCC_IOPRSTR_IOPARST
//    <name> IOPARST </name>
//    <rw> 
//    <i> [Bit 0] RW (@ 0x40021024) I/O port A reset </i>
//    <check> 
//      <loc> ( (unsigned int) RCC_IOPRSTR ) </loc>
//      <o.0..0> IOPARST
//    </check>
//  </item>
//  


// -----------------------------  Field Item: RCC_IOPRSTR_IOPBRST  --------------------------------
// SVD Line: 1569

//  <item> SFDITEM_FIELD__RCC_IOPRSTR_IOPBRST
//    <name> IOPBRST </name>
//    <rw> 
//    <i> [Bit 1] RW (@ 0x40021024) I/O port B reset </i>
//    <check> 
//      <loc> ( (unsigned int) RCC_IOPRSTR ) </loc>
//      <o.1..1> IOPBRST
//    </check>
//  </item>
//  


// -----------------------------  Field Item: RCC_IOPRSTR_IOPCRST  --------------------------------
// SVD Line: 1575

//  <item> SFDITEM_FIELD__RCC_IOPRSTR_IOPCRST
//    <name> IOPCRST </name>
//    <rw> 
//    <i> [Bit 2] RW (@ 0x40021024) I/O port C reset </i>
//    <check> 
//      <loc> ( (unsigned int) RCC_IOPRSTR ) </loc>
//      <o.2..2> IOPCRST
//    </check>
//  </item>
//  


// -----------------------------  Field Item: RCC_IOPRSTR_IOPDRST  --------------------------------
// SVD Line: 1581

//  <item> SFDITEM_FIELD__RCC_IOPRSTR_IOPDRST
//    <name> IOPDRST </name>
//    <rw> 
//    <i> [Bit 3] RW (@ 0x40021024) I/O port D reset </i>
//    <check> 
//      <loc> ( (unsigned int) RCC_IOPRSTR ) </loc>
//      <o.3..3> IOPDRST
//    </check>
//  </item>
//  


// -----------------------------  Field Item: RCC_IOPRSTR_IOPFRST  --------------------------------
// SVD Line: 1587

//  <item> SFDITEM_FIELD__RCC_IOPRSTR_IOPFRST
//    <name> IOPFRST </name>
//    <rw> 
//    <i> [Bit 5] RW (@ 0x40021024) I/O port F reset </i>
//    <check> 
//      <loc> ( (unsigned int) RCC_IOPRSTR ) </loc>
//      <o.5..5> IOPFRST
//    </check>
//  </item>
//  


// -------------------------------  Register RTree: RCC_IOPRSTR  ----------------------------------
// SVD Line: 1554

//  <rtree> SFDITEM_REG__RCC_IOPRSTR
//    <name> IOPRSTR </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x40021024) GPIO reset register </i>
//    <loc> ( (unsigned int)((RCC_IOPRSTR >> 0) & 0xFFFFFFFF), ((RCC_IOPRSTR = (RCC_IOPRSTR & ~(0x2FUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0x2F) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__RCC_IOPRSTR_IOPARST </item>
//    <item> SFDITEM_FIELD__RCC_IOPRSTR_IOPBRST </item>
//    <item> SFDITEM_FIELD__RCC_IOPRSTR_IOPCRST </item>
//    <item> SFDITEM_FIELD__RCC_IOPRSTR_IOPDRST </item>
//    <item> SFDITEM_FIELD__RCC_IOPRSTR_IOPFRST </item>
//  </rtree>
//  


// ---------------------------  Register Item Address: RCC_APBRSTR1  ------------------------------
// SVD Line: 1595

unsigned int RCC_APBRSTR1 __AT (0x4002102C);



// ----------------------------  Field Item: RCC_APBRSTR1_TIM2RST  --------------------------------
// SVD Line: 1605

//  <item> SFDITEM_FIELD__RCC_APBRSTR1_TIM2RST
//    <name> TIM2RST </name>
//    <rw> 
//    <i> [Bit 0] RW (@ 0x4002102C) TIM2 timer reset </i>
//    <check> 
//      <loc> ( (unsigned int) RCC_APBRSTR1 ) </loc>
//      <o.0..0> TIM2RST
//    </check>
//  </item>
//  


// ----------------------------  Field Item: RCC_APBRSTR1_TIM3RST  --------------------------------
// SVD Line: 1611

//  <item> SFDITEM_FIELD__RCC_APBRSTR1_TIM3RST
//    <name> TIM3RST </name>
//    <rw> 
//    <i> [Bit 1] RW (@ 0x4002102C) TIM3 timer reset </i>
//    <check> 
//      <loc> ( (unsigned int) RCC_APBRSTR1 ) </loc>
//      <o.1..1> TIM3RST
//    </check>
//  </item>
//  


// ----------------------------  Field Item: RCC_APBRSTR1_TIM6RST  --------------------------------
// SVD Line: 1617

//  <item> SFDITEM_FIELD__RCC_APBRSTR1_TIM6RST
//    <name> TIM6RST </name>
//    <rw> 
//    <i> [Bit 4] RW (@ 0x4002102C) TIM6 timer reset </i>
//    <check> 
//      <loc> ( (unsigned int) RCC_APBRSTR1 ) </loc>
//      <o.4..4> TIM6RST
//    </check>
//  </item>
//  


// ----------------------------  Field Item: RCC_APBRSTR1_TIM7RST  --------------------------------
// SVD Line: 1623

//  <item> SFDITEM_FIELD__RCC_APBRSTR1_TIM7RST
//    <name> TIM7RST </name>
//    <rw> 
//    <i> [Bit 5] RW (@ 0x4002102C) TIM7 timer reset </i>
//    <check> 
//      <loc> ( (unsigned int) RCC_APBRSTR1 ) </loc>
//      <o.5..5> TIM7RST
//    </check>
//  </item>
//  


// ----------------------------  Field Item: RCC_APBRSTR1_SPI2RST  --------------------------------
// SVD Line: 1629

//  <item> SFDITEM_FIELD__RCC_APBRSTR1_SPI2RST
//    <name> SPI2RST </name>
//    <rw> 
//    <i> [Bit 14] RW (@ 0x4002102C) SPI2 reset </i>
//    <check> 
//      <loc> ( (unsigned int) RCC_APBRSTR1 ) </loc>
//      <o.14..14> SPI2RST
//    </check>
//  </item>
//  


// ---------------------------  Field Item: RCC_APBRSTR1_USART2RST  -------------------------------
// SVD Line: 1635

//  <item> SFDITEM_FIELD__RCC_APBRSTR1_USART2RST
//    <name> USART2RST </name>
//    <rw> 
//    <i> [Bit 17] RW (@ 0x4002102C) USART2 reset </i>
//    <check> 
//      <loc> ( (unsigned int) RCC_APBRSTR1 ) </loc>
//      <o.17..17> USART2RST
//    </check>
//  </item>
//  


// ---------------------------  Field Item: RCC_APBRSTR1_USART3RST  -------------------------------
// SVD Line: 1641

//  <item> SFDITEM_FIELD__RCC_APBRSTR1_USART3RST
//    <name> USART3RST </name>
//    <rw> 
//    <i> [Bit 18] RW (@ 0x4002102C) USART3 reset </i>
//    <check> 
//      <loc> ( (unsigned int) RCC_APBRSTR1 ) </loc>
//      <o.18..18> USART3RST
//    </check>
//  </item>
//  


// ---------------------------  Field Item: RCC_APBRSTR1_USART4RST  -------------------------------
// SVD Line: 1647

//  <item> SFDITEM_FIELD__RCC_APBRSTR1_USART4RST
//    <name> USART4RST </name>
//    <rw> 
//    <i> [Bit 19] RW (@ 0x4002102C) USART4 reset </i>
//    <check> 
//      <loc> ( (unsigned int) RCC_APBRSTR1 ) </loc>
//      <o.19..19> USART4RST
//    </check>
//  </item>
//  


// ---------------------------  Field Item: RCC_APBRSTR1_LPUART1RST  ------------------------------
// SVD Line: 1653

//  <item> SFDITEM_FIELD__RCC_APBRSTR1_LPUART1RST
//    <name> LPUART1RST </name>
//    <rw> 
//    <i> [Bit 20] RW (@ 0x4002102C) LPUART1 reset </i>
//    <check> 
//      <loc> ( (unsigned int) RCC_APBRSTR1 ) </loc>
//      <o.20..20> LPUART1RST
//    </check>
//  </item>
//  


// ----------------------------  Field Item: RCC_APBRSTR1_I2C1RST  --------------------------------
// SVD Line: 1659

//  <item> SFDITEM_FIELD__RCC_APBRSTR1_I2C1RST
//    <name> I2C1RST </name>
//    <rw> 
//    <i> [Bit 21] RW (@ 0x4002102C) I2C1 reset </i>
//    <check> 
//      <loc> ( (unsigned int) RCC_APBRSTR1 ) </loc>
//      <o.21..21> I2C1RST
//    </check>
//  </item>
//  


// ----------------------------  Field Item: RCC_APBRSTR1_I2C2RST  --------------------------------
// SVD Line: 1665

//  <item> SFDITEM_FIELD__RCC_APBRSTR1_I2C2RST
//    <name> I2C2RST </name>
//    <rw> 
//    <i> [Bit 22] RW (@ 0x4002102C) I2C2 reset </i>
//    <check> 
//      <loc> ( (unsigned int) RCC_APBRSTR1 ) </loc>
//      <o.22..22> I2C2RST
//    </check>
//  </item>
//  


// -----------------------------  Field Item: RCC_APBRSTR1_CECRST  --------------------------------
// SVD Line: 1671

//  <item> SFDITEM_FIELD__RCC_APBRSTR1_CECRST
//    <name> CECRST </name>
//    <rw> 
//    <i> [Bit 24] RW (@ 0x4002102C) HDMI CEC reset </i>
//    <check> 
//      <loc> ( (unsigned int) RCC_APBRSTR1 ) </loc>
//      <o.24..24> CECRST
//    </check>
//  </item>
//  


// ----------------------------  Field Item: RCC_APBRSTR1_UCPD1RST  -------------------------------
// SVD Line: 1677

//  <item> SFDITEM_FIELD__RCC_APBRSTR1_UCPD1RST
//    <name> UCPD1RST </name>
//    <rw> 
//    <i> [Bit 25] RW (@ 0x4002102C) UCPD1 reset </i>
//    <check> 
//      <loc> ( (unsigned int) RCC_APBRSTR1 ) </loc>
//      <o.25..25> UCPD1RST
//    </check>
//  </item>
//  


// ----------------------------  Field Item: RCC_APBRSTR1_UCPD2RST  -------------------------------
// SVD Line: 1683

//  <item> SFDITEM_FIELD__RCC_APBRSTR1_UCPD2RST
//    <name> UCPD2RST </name>
//    <rw> 
//    <i> [Bit 26] RW (@ 0x4002102C) UCPD2 reset </i>
//    <check> 
//      <loc> ( (unsigned int) RCC_APBRSTR1 ) </loc>
//      <o.26..26> UCPD2RST
//    </check>
//  </item>
//  


// -----------------------------  Field Item: RCC_APBRSTR1_DBGRST  --------------------------------
// SVD Line: 1689

//  <item> SFDITEM_FIELD__RCC_APBRSTR1_DBGRST
//    <name> DBGRST </name>
//    <rw> 
//    <i> [Bit 27] RW (@ 0x4002102C) Debug support reset </i>
//    <check> 
//      <loc> ( (unsigned int) RCC_APBRSTR1 ) </loc>
//      <o.27..27> DBGRST
//    </check>
//  </item>
//  


// -----------------------------  Field Item: RCC_APBRSTR1_PWRRST  --------------------------------
// SVD Line: 1695

//  <item> SFDITEM_FIELD__RCC_APBRSTR1_PWRRST
//    <name> PWRRST </name>
//    <rw> 
//    <i> [Bit 28] RW (@ 0x4002102C) Power interface reset </i>
//    <check> 
//      <loc> ( (unsigned int) RCC_APBRSTR1 ) </loc>
//      <o.28..28> PWRRST
//    </check>
//  </item>
//  


// ----------------------------  Field Item: RCC_APBRSTR1_DAC1RST  --------------------------------
// SVD Line: 1701

//  <item> SFDITEM_FIELD__RCC_APBRSTR1_DAC1RST
//    <name> DAC1RST </name>
//    <rw> 
//    <i> [Bit 29] RW (@ 0x4002102C) DAC1 interface reset </i>
//    <check> 
//      <loc> ( (unsigned int) RCC_APBRSTR1 ) </loc>
//      <o.29..29> DAC1RST
//    </check>
//  </item>
//  


// ---------------------------  Field Item: RCC_APBRSTR1_LPTIM2RST  -------------------------------
// SVD Line: 1707

//  <item> SFDITEM_FIELD__RCC_APBRSTR1_LPTIM2RST
//    <name> LPTIM2RST </name>
//    <rw> 
//    <i> [Bit 30] RW (@ 0x4002102C) Low Power Timer 2 reset </i>
//    <check> 
//      <loc> ( (unsigned int) RCC_APBRSTR1 ) </loc>
//      <o.30..30> LPTIM2RST
//    </check>
//  </item>
//  


// ---------------------------  Field Item: RCC_APBRSTR1_LPTIM1RST  -------------------------------
// SVD Line: 1713

//  <item> SFDITEM_FIELD__RCC_APBRSTR1_LPTIM1RST
//    <name> LPTIM1RST </name>
//    <rw> 
//    <i> [Bit 31] RW (@ 0x4002102C) Low Power Timer 1 reset </i>
//    <check> 
//      <loc> ( (unsigned int) RCC_APBRSTR1 ) </loc>
//      <o.31..31> LPTIM1RST
//    </check>
//  </item>
//  


// ------------------------------  Register RTree: RCC_APBRSTR1  ----------------------------------
// SVD Line: 1595

//  <rtree> SFDITEM_REG__RCC_APBRSTR1
//    <name> APBRSTR1 </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x4002102C) APB peripheral reset register  1 </i>
//    <loc> ( (unsigned int)((RCC_APBRSTR1 >> 0) & 0xFFFFFFFF), ((RCC_APBRSTR1 = (RCC_APBRSTR1 & ~(0xFF7E4033UL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFF7E4033) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__RCC_APBRSTR1_TIM2RST </item>
//    <item> SFDITEM_FIELD__RCC_APBRSTR1_TIM3RST </item>
//    <item> SFDITEM_FIELD__RCC_APBRSTR1_TIM6RST </item>
//    <item> SFDITEM_FIELD__RCC_APBRSTR1_TIM7RST </item>
//    <item> SFDITEM_FIELD__RCC_APBRSTR1_SPI2RST </item>
//    <item> SFDITEM_FIELD__RCC_APBRSTR1_USART2RST </item>
//    <item> SFDITEM_FIELD__RCC_APBRSTR1_USART3RST </item>
//    <item> SFDITEM_FIELD__RCC_APBRSTR1_USART4RST </item>
//    <item> SFDITEM_FIELD__RCC_APBRSTR1_LPUART1RST </item>
//    <item> SFDITEM_FIELD__RCC_APBRSTR1_I2C1RST </item>
//    <item> SFDITEM_FIELD__RCC_APBRSTR1_I2C2RST </item>
//    <item> SFDITEM_FIELD__RCC_APBRSTR1_CECRST </item>
//    <item> SFDITEM_FIELD__RCC_APBRSTR1_UCPD1RST </item>
//    <item> SFDITEM_FIELD__RCC_APBRSTR1_UCPD2RST </item>
//    <item> SFDITEM_FIELD__RCC_APBRSTR1_DBGRST </item>
//    <item> SFDITEM_FIELD__RCC_APBRSTR1_PWRRST </item>
//    <item> SFDITEM_FIELD__RCC_APBRSTR1_DAC1RST </item>
//    <item> SFDITEM_FIELD__RCC_APBRSTR1_LPTIM2RST </item>
//    <item> SFDITEM_FIELD__RCC_APBRSTR1_LPTIM1RST </item>
//  </rtree>
//  


// ---------------------------  Register Item Address: RCC_APBRSTR2  ------------------------------
// SVD Line: 1721

unsigned int RCC_APBRSTR2 __AT (0x40021030);



// ---------------------------  Field Item: RCC_APBRSTR2_SYSCFGRST  -------------------------------
// SVD Line: 1731

//  <item> SFDITEM_FIELD__RCC_APBRSTR2_SYSCFGRST
//    <name> SYSCFGRST </name>
//    <rw> 
//    <i> [Bit 0] RW (@ 0x40021030) SYSCFG, COMP and VREFBUF  reset </i>
//    <check> 
//      <loc> ( (unsigned int) RCC_APBRSTR2 ) </loc>
//      <o.0..0> SYSCFGRST
//    </check>
//  </item>
//  


// ----------------------------  Field Item: RCC_APBRSTR2_TIM1RST  --------------------------------
// SVD Line: 1738

//  <item> SFDITEM_FIELD__RCC_APBRSTR2_TIM1RST
//    <name> TIM1RST </name>
//    <rw> 
//    <i> [Bit 11] RW (@ 0x40021030) TIM1 timer reset </i>
//    <check> 
//      <loc> ( (unsigned int) RCC_APBRSTR2 ) </loc>
//      <o.11..11> TIM1RST
//    </check>
//  </item>
//  


// ----------------------------  Field Item: RCC_APBRSTR2_SPI1RST  --------------------------------
// SVD Line: 1744

//  <item> SFDITEM_FIELD__RCC_APBRSTR2_SPI1RST
//    <name> SPI1RST </name>
//    <rw> 
//    <i> [Bit 12] RW (@ 0x40021030) SPI1 reset </i>
//    <check> 
//      <loc> ( (unsigned int) RCC_APBRSTR2 ) </loc>
//      <o.12..12> SPI1RST
//    </check>
//  </item>
//  


// ---------------------------  Field Item: RCC_APBRSTR2_USART1RST  -------------------------------
// SVD Line: 1750

//  <item> SFDITEM_FIELD__RCC_APBRSTR2_USART1RST
//    <name> USART1RST </name>
//    <rw> 
//    <i> [Bit 14] RW (@ 0x40021030) USART1 reset </i>
//    <check> 
//      <loc> ( (unsigned int) RCC_APBRSTR2 ) </loc>
//      <o.14..14> USART1RST
//    </check>
//  </item>
//  


// ----------------------------  Field Item: RCC_APBRSTR2_TIM14RST  -------------------------------
// SVD Line: 1756

//  <item> SFDITEM_FIELD__RCC_APBRSTR2_TIM14RST
//    <name> TIM14RST </name>
//    <rw> 
//    <i> [Bit 15] RW (@ 0x40021030) TIM14 timer reset </i>
//    <check> 
//      <loc> ( (unsigned int) RCC_APBRSTR2 ) </loc>
//      <o.15..15> TIM14RST
//    </check>
//  </item>
//  


// ----------------------------  Field Item: RCC_APBRSTR2_TIM15RST  -------------------------------
// SVD Line: 1762

//  <item> SFDITEM_FIELD__RCC_APBRSTR2_TIM15RST
//    <name> TIM15RST </name>
//    <rw> 
//    <i> [Bit 16] RW (@ 0x40021030) TIM15 timer reset </i>
//    <check> 
//      <loc> ( (unsigned int) RCC_APBRSTR2 ) </loc>
//      <o.16..16> TIM15RST
//    </check>
//  </item>
//  


// ----------------------------  Field Item: RCC_APBRSTR2_TIM16RST  -------------------------------
// SVD Line: 1768

//  <item> SFDITEM_FIELD__RCC_APBRSTR2_TIM16RST
//    <name> TIM16RST </name>
//    <rw> 
//    <i> [Bit 17] RW (@ 0x40021030) TIM16 timer reset </i>
//    <check> 
//      <loc> ( (unsigned int) RCC_APBRSTR2 ) </loc>
//      <o.17..17> TIM16RST
//    </check>
//  </item>
//  


// ----------------------------  Field Item: RCC_APBRSTR2_TIM17RST  -------------------------------
// SVD Line: 1774

//  <item> SFDITEM_FIELD__RCC_APBRSTR2_TIM17RST
//    <name> TIM17RST </name>
//    <rw> 
//    <i> [Bit 18] RW (@ 0x40021030) TIM17 timer reset </i>
//    <check> 
//      <loc> ( (unsigned int) RCC_APBRSTR2 ) </loc>
//      <o.18..18> TIM17RST
//    </check>
//  </item>
//  


// -----------------------------  Field Item: RCC_APBRSTR2_ADCRST  --------------------------------
// SVD Line: 1780

//  <item> SFDITEM_FIELD__RCC_APBRSTR2_ADCRST
//    <name> ADCRST </name>
//    <rw> 
//    <i> [Bit 20] RW (@ 0x40021030) ADC reset </i>
//    <check> 
//      <loc> ( (unsigned int) RCC_APBRSTR2 ) </loc>
//      <o.20..20> ADCRST
//    </check>
//  </item>
//  


// ------------------------------  Register RTree: RCC_APBRSTR2  ----------------------------------
// SVD Line: 1721

//  <rtree> SFDITEM_REG__RCC_APBRSTR2
//    <name> APBRSTR2 </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x40021030) APB peripheral reset register  2 </i>
//    <loc> ( (unsigned int)((RCC_APBRSTR2 >> 0) & 0xFFFFFFFF), ((RCC_APBRSTR2 = (RCC_APBRSTR2 & ~(0x17D801UL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0x17D801) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__RCC_APBRSTR2_SYSCFGRST </item>
//    <item> SFDITEM_FIELD__RCC_APBRSTR2_TIM1RST </item>
//    <item> SFDITEM_FIELD__RCC_APBRSTR2_SPI1RST </item>
//    <item> SFDITEM_FIELD__RCC_APBRSTR2_USART1RST </item>
//    <item> SFDITEM_FIELD__RCC_APBRSTR2_TIM14RST </item>
//    <item> SFDITEM_FIELD__RCC_APBRSTR2_TIM15RST </item>
//    <item> SFDITEM_FIELD__RCC_APBRSTR2_TIM16RST </item>
//    <item> SFDITEM_FIELD__RCC_APBRSTR2_TIM17RST </item>
//    <item> SFDITEM_FIELD__RCC_APBRSTR2_ADCRST </item>
//  </rtree>
//  


// ----------------------------  Register Item Address: RCC_IOPENR  -------------------------------
// SVD Line: 1788

unsigned int RCC_IOPENR __AT (0x40021034);



// ------------------------------  Field Item: RCC_IOPENR_IOPAEN  ---------------------------------
// SVD Line: 1797

//  <item> SFDITEM_FIELD__RCC_IOPENR_IOPAEN
//    <name> IOPAEN </name>
//    <rw> 
//    <i> [Bit 0] RW (@ 0x40021034) I/O port A clock enable </i>
//    <check> 
//      <loc> ( (unsigned int) RCC_IOPENR ) </loc>
//      <o.0..0> IOPAEN
//    </check>
//  </item>
//  


// ------------------------------  Field Item: RCC_IOPENR_IOPBEN  ---------------------------------
// SVD Line: 1803

//  <item> SFDITEM_FIELD__RCC_IOPENR_IOPBEN
//    <name> IOPBEN </name>
//    <rw> 
//    <i> [Bit 1] RW (@ 0x40021034) I/O port B clock enable </i>
//    <check> 
//      <loc> ( (unsigned int) RCC_IOPENR ) </loc>
//      <o.1..1> IOPBEN
//    </check>
//  </item>
//  


// ------------------------------  Field Item: RCC_IOPENR_IOPCEN  ---------------------------------
// SVD Line: 1809

//  <item> SFDITEM_FIELD__RCC_IOPENR_IOPCEN
//    <name> IOPCEN </name>
//    <rw> 
//    <i> [Bit 2] RW (@ 0x40021034) I/O port C clock enable </i>
//    <check> 
//      <loc> ( (unsigned int) RCC_IOPENR ) </loc>
//      <o.2..2> IOPCEN
//    </check>
//  </item>
//  


// ------------------------------  Field Item: RCC_IOPENR_IOPDEN  ---------------------------------
// SVD Line: 1815

//  <item> SFDITEM_FIELD__RCC_IOPENR_IOPDEN
//    <name> IOPDEN </name>
//    <rw> 
//    <i> [Bit 3] RW (@ 0x40021034) I/O port D clock enable </i>
//    <check> 
//      <loc> ( (unsigned int) RCC_IOPENR ) </loc>
//      <o.3..3> IOPDEN
//    </check>
//  </item>
//  


// ------------------------------  Field Item: RCC_IOPENR_IOPFEN  ---------------------------------
// SVD Line: 1821

//  <item> SFDITEM_FIELD__RCC_IOPENR_IOPFEN
//    <name> IOPFEN </name>
//    <rw> 
//    <i> [Bit 5] RW (@ 0x40021034) I/O port F clock enable </i>
//    <check> 
//      <loc> ( (unsigned int) RCC_IOPENR ) </loc>
//      <o.5..5> IOPFEN
//    </check>
//  </item>
//  


// -------------------------------  Register RTree: RCC_IOPENR  -----------------------------------
// SVD Line: 1788

//  <rtree> SFDITEM_REG__RCC_IOPENR
//    <name> IOPENR </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x40021034) GPIO clock enable register </i>
//    <loc> ( (unsigned int)((RCC_IOPENR >> 0) & 0xFFFFFFFF), ((RCC_IOPENR = (RCC_IOPENR & ~(0x2FUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0x2F) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__RCC_IOPENR_IOPAEN </item>
//    <item> SFDITEM_FIELD__RCC_IOPENR_IOPBEN </item>
//    <item> SFDITEM_FIELD__RCC_IOPENR_IOPCEN </item>
//    <item> SFDITEM_FIELD__RCC_IOPENR_IOPDEN </item>
//    <item> SFDITEM_FIELD__RCC_IOPENR_IOPFEN </item>
//  </rtree>
//  


// ----------------------------  Register Item Address: RCC_AHBENR  -------------------------------
// SVD Line: 1829

unsigned int RCC_AHBENR __AT (0x40021038);



// ------------------------------  Field Item: RCC_AHBENR_DMAEN  ----------------------------------
// SVD Line: 1839

//  <item> SFDITEM_FIELD__RCC_AHBENR_DMAEN
//    <name> DMAEN </name>
//    <rw> 
//    <i> [Bit 0] RW (@ 0x40021038) DMA clock enable </i>
//    <check> 
//      <loc> ( (unsigned int) RCC_AHBENR ) </loc>
//      <o.0..0> DMAEN
//    </check>
//  </item>
//  


// -----------------------------  Field Item: RCC_AHBENR_FLASHEN  ---------------------------------
// SVD Line: 1845

//  <item> SFDITEM_FIELD__RCC_AHBENR_FLASHEN
//    <name> FLASHEN </name>
//    <rw> 
//    <i> [Bit 8] RW (@ 0x40021038) Flash memory interface clock  enable </i>
//    <check> 
//      <loc> ( (unsigned int) RCC_AHBENR ) </loc>
//      <o.8..8> FLASHEN
//    </check>
//  </item>
//  


// ------------------------------  Field Item: RCC_AHBENR_CRCEN  ----------------------------------
// SVD Line: 1852

//  <item> SFDITEM_FIELD__RCC_AHBENR_CRCEN
//    <name> CRCEN </name>
//    <rw> 
//    <i> [Bit 12] RW (@ 0x40021038) CRC clock enable </i>
//    <check> 
//      <loc> ( (unsigned int) RCC_AHBENR ) </loc>
//      <o.12..12> CRCEN
//    </check>
//  </item>
//  


// ------------------------------  Field Item: RCC_AHBENR_AESEN  ----------------------------------
// SVD Line: 1858

//  <item> SFDITEM_FIELD__RCC_AHBENR_AESEN
//    <name> AESEN </name>
//    <rw> 
//    <i> [Bit 16] RW (@ 0x40021038) AES hardware accelerator </i>
//    <check> 
//      <loc> ( (unsigned int) RCC_AHBENR ) </loc>
//      <o.16..16> AESEN
//    </check>
//  </item>
//  


// ------------------------------  Field Item: RCC_AHBENR_RNGEN  ----------------------------------
// SVD Line: 1864

//  <item> SFDITEM_FIELD__RCC_AHBENR_RNGEN
//    <name> RNGEN </name>
//    <rw> 
//    <i> [Bit 18] RW (@ 0x40021038) Random number generator clock  enable </i>
//    <check> 
//      <loc> ( (unsigned int) RCC_AHBENR ) </loc>
//      <o.18..18> RNGEN
//    </check>
//  </item>
//  


// -------------------------------  Register RTree: RCC_AHBENR  -----------------------------------
// SVD Line: 1829

//  <rtree> SFDITEM_REG__RCC_AHBENR
//    <name> AHBENR </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x40021038) AHB peripheral clock enable  register </i>
//    <loc> ( (unsigned int)((RCC_AHBENR >> 0) & 0xFFFFFFFF), ((RCC_AHBENR = (RCC_AHBENR & ~(0x51101UL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0x51101) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__RCC_AHBENR_DMAEN </item>
//    <item> SFDITEM_FIELD__RCC_AHBENR_FLASHEN </item>
//    <item> SFDITEM_FIELD__RCC_AHBENR_CRCEN </item>
//    <item> SFDITEM_FIELD__RCC_AHBENR_AESEN </item>
//    <item> SFDITEM_FIELD__RCC_AHBENR_RNGEN </item>
//  </rtree>
//  


// ---------------------------  Register Item Address: RCC_APBENR1  -------------------------------
// SVD Line: 1873

unsigned int RCC_APBENR1 __AT (0x4002103C);



// -----------------------------  Field Item: RCC_APBENR1_TIM2EN  ---------------------------------
// SVD Line: 1883

//  <item> SFDITEM_FIELD__RCC_APBENR1_TIM2EN
//    <name> TIM2EN </name>
//    <rw> 
//    <i> [Bit 0] RW (@ 0x4002103C) TIM2 timer clock enable </i>
//    <check> 
//      <loc> ( (unsigned int) RCC_APBENR1 ) </loc>
//      <o.0..0> TIM2EN
//    </check>
//  </item>
//  


// -----------------------------  Field Item: RCC_APBENR1_TIM3EN  ---------------------------------
// SVD Line: 1889

//  <item> SFDITEM_FIELD__RCC_APBENR1_TIM3EN
//    <name> TIM3EN </name>
//    <rw> 
//    <i> [Bit 1] RW (@ 0x4002103C) TIM3 timer clock enable </i>
//    <check> 
//      <loc> ( (unsigned int) RCC_APBENR1 ) </loc>
//      <o.1..1> TIM3EN
//    </check>
//  </item>
//  


// -----------------------------  Field Item: RCC_APBENR1_TIM6EN  ---------------------------------
// SVD Line: 1895

//  <item> SFDITEM_FIELD__RCC_APBENR1_TIM6EN
//    <name> TIM6EN </name>
//    <rw> 
//    <i> [Bit 4] RW (@ 0x4002103C) TIM6 timer clock enable </i>
//    <check> 
//      <loc> ( (unsigned int) RCC_APBENR1 ) </loc>
//      <o.4..4> TIM6EN
//    </check>
//  </item>
//  


// -----------------------------  Field Item: RCC_APBENR1_TIM7EN  ---------------------------------
// SVD Line: 1901

//  <item> SFDITEM_FIELD__RCC_APBENR1_TIM7EN
//    <name> TIM7EN </name>
//    <rw> 
//    <i> [Bit 5] RW (@ 0x4002103C) TIM7 timer clock enable </i>
//    <check> 
//      <loc> ( (unsigned int) RCC_APBENR1 ) </loc>
//      <o.5..5> TIM7EN
//    </check>
//  </item>
//  


// ----------------------------  Field Item: RCC_APBENR1_RTCAPBEN  --------------------------------
// SVD Line: 1907

//  <item> SFDITEM_FIELD__RCC_APBENR1_RTCAPBEN
//    <name> RTCAPBEN </name>
//    <rw> 
//    <i> [Bit 10] RW (@ 0x4002103C) RTC APB clock enable </i>
//    <check> 
//      <loc> ( (unsigned int) RCC_APBENR1 ) </loc>
//      <o.10..10> RTCAPBEN
//    </check>
//  </item>
//  


// -----------------------------  Field Item: RCC_APBENR1_WWDGEN  ---------------------------------
// SVD Line: 1913

//  <item> SFDITEM_FIELD__RCC_APBENR1_WWDGEN
//    <name> WWDGEN </name>
//    <rw> 
//    <i> [Bit 11] RW (@ 0x4002103C) WWDG clock enable </i>
//    <check> 
//      <loc> ( (unsigned int) RCC_APBENR1 ) </loc>
//      <o.11..11> WWDGEN
//    </check>
//  </item>
//  


// -----------------------------  Field Item: RCC_APBENR1_SPI2EN  ---------------------------------
// SVD Line: 1919

//  <item> SFDITEM_FIELD__RCC_APBENR1_SPI2EN
//    <name> SPI2EN </name>
//    <rw> 
//    <i> [Bit 14] RW (@ 0x4002103C) SPI2 clock enable </i>
//    <check> 
//      <loc> ( (unsigned int) RCC_APBENR1 ) </loc>
//      <o.14..14> SPI2EN
//    </check>
//  </item>
//  


// ----------------------------  Field Item: RCC_APBENR1_USART2EN  --------------------------------
// SVD Line: 1925

//  <item> SFDITEM_FIELD__RCC_APBENR1_USART2EN
//    <name> USART2EN </name>
//    <rw> 
//    <i> [Bit 17] RW (@ 0x4002103C) USART2 clock enable </i>
//    <check> 
//      <loc> ( (unsigned int) RCC_APBENR1 ) </loc>
//      <o.17..17> USART2EN
//    </check>
//  </item>
//  


// ----------------------------  Field Item: RCC_APBENR1_USART3EN  --------------------------------
// SVD Line: 1931

//  <item> SFDITEM_FIELD__RCC_APBENR1_USART3EN
//    <name> USART3EN </name>
//    <rw> 
//    <i> [Bit 18] RW (@ 0x4002103C) USART3 clock enable </i>
//    <check> 
//      <loc> ( (unsigned int) RCC_APBENR1 ) </loc>
//      <o.18..18> USART3EN
//    </check>
//  </item>
//  


// ----------------------------  Field Item: RCC_APBENR1_USART4EN  --------------------------------
// SVD Line: 1937

//  <item> SFDITEM_FIELD__RCC_APBENR1_USART4EN
//    <name> USART4EN </name>
//    <rw> 
//    <i> [Bit 19] RW (@ 0x4002103C) USART4 clock enable </i>
//    <check> 
//      <loc> ( (unsigned int) RCC_APBENR1 ) </loc>
//      <o.19..19> USART4EN
//    </check>
//  </item>
//  


// ----------------------------  Field Item: RCC_APBENR1_LPUART1EN  -------------------------------
// SVD Line: 1943

//  <item> SFDITEM_FIELD__RCC_APBENR1_LPUART1EN
//    <name> LPUART1EN </name>
//    <rw> 
//    <i> [Bit 20] RW (@ 0x4002103C) LPUART1 clock enable </i>
//    <check> 
//      <loc> ( (unsigned int) RCC_APBENR1 ) </loc>
//      <o.20..20> LPUART1EN
//    </check>
//  </item>
//  


// -----------------------------  Field Item: RCC_APBENR1_I2C1EN  ---------------------------------
// SVD Line: 1949

//  <item> SFDITEM_FIELD__RCC_APBENR1_I2C1EN
//    <name> I2C1EN </name>
//    <rw> 
//    <i> [Bit 21] RW (@ 0x4002103C) I2C1 clock enable </i>
//    <check> 
//      <loc> ( (unsigned int) RCC_APBENR1 ) </loc>
//      <o.21..21> I2C1EN
//    </check>
//  </item>
//  


// -----------------------------  Field Item: RCC_APBENR1_I2C2EN  ---------------------------------
// SVD Line: 1955

//  <item> SFDITEM_FIELD__RCC_APBENR1_I2C2EN
//    <name> I2C2EN </name>
//    <rw> 
//    <i> [Bit 22] RW (@ 0x4002103C) I2C2 clock enable </i>
//    <check> 
//      <loc> ( (unsigned int) RCC_APBENR1 ) </loc>
//      <o.22..22> I2C2EN
//    </check>
//  </item>
//  


// ------------------------------  Field Item: RCC_APBENR1_CECEN  ---------------------------------
// SVD Line: 1961

//  <item> SFDITEM_FIELD__RCC_APBENR1_CECEN
//    <name> CECEN </name>
//    <rw> 
//    <i> [Bit 24] RW (@ 0x4002103C) HDMI CEC clock enable </i>
//    <check> 
//      <loc> ( (unsigned int) RCC_APBENR1 ) </loc>
//      <o.24..24> CECEN
//    </check>
//  </item>
//  


// -----------------------------  Field Item: RCC_APBENR1_UCPD1EN  --------------------------------
// SVD Line: 1967

//  <item> SFDITEM_FIELD__RCC_APBENR1_UCPD1EN
//    <name> UCPD1EN </name>
//    <rw> 
//    <i> [Bit 25] RW (@ 0x4002103C) UCPD1 clock enable </i>
//    <check> 
//      <loc> ( (unsigned int) RCC_APBENR1 ) </loc>
//      <o.25..25> UCPD1EN
//    </check>
//  </item>
//  


// -----------------------------  Field Item: RCC_APBENR1_UCPD2EN  --------------------------------
// SVD Line: 1973

//  <item> SFDITEM_FIELD__RCC_APBENR1_UCPD2EN
//    <name> UCPD2EN </name>
//    <rw> 
//    <i> [Bit 26] RW (@ 0x4002103C) UCPD2 clock enable </i>
//    <check> 
//      <loc> ( (unsigned int) RCC_APBENR1 ) </loc>
//      <o.26..26> UCPD2EN
//    </check>
//  </item>
//  


// ------------------------------  Field Item: RCC_APBENR1_DBGEN  ---------------------------------
// SVD Line: 1979

//  <item> SFDITEM_FIELD__RCC_APBENR1_DBGEN
//    <name> DBGEN </name>
//    <rw> 
//    <i> [Bit 27] RW (@ 0x4002103C) Debug support clock enable </i>
//    <check> 
//      <loc> ( (unsigned int) RCC_APBENR1 ) </loc>
//      <o.27..27> DBGEN
//    </check>
//  </item>
//  


// ------------------------------  Field Item: RCC_APBENR1_PWREN  ---------------------------------
// SVD Line: 1985

//  <item> SFDITEM_FIELD__RCC_APBENR1_PWREN
//    <name> PWREN </name>
//    <rw> 
//    <i> [Bit 28] RW (@ 0x4002103C) Power interface clock  enable </i>
//    <check> 
//      <loc> ( (unsigned int) RCC_APBENR1 ) </loc>
//      <o.28..28> PWREN
//    </check>
//  </item>
//  


// -----------------------------  Field Item: RCC_APBENR1_DAC1EN  ---------------------------------
// SVD Line: 1992

//  <item> SFDITEM_FIELD__RCC_APBENR1_DAC1EN
//    <name> DAC1EN </name>
//    <rw> 
//    <i> [Bit 29] RW (@ 0x4002103C) DAC1 interface clock  enable </i>
//    <check> 
//      <loc> ( (unsigned int) RCC_APBENR1 ) </loc>
//      <o.29..29> DAC1EN
//    </check>
//  </item>
//  


// ----------------------------  Field Item: RCC_APBENR1_LPTIM2EN  --------------------------------
// SVD Line: 1999

//  <item> SFDITEM_FIELD__RCC_APBENR1_LPTIM2EN
//    <name> LPTIM2EN </name>
//    <rw> 
//    <i> [Bit 30] RW (@ 0x4002103C) LPTIM2 clock enable </i>
//    <check> 
//      <loc> ( (unsigned int) RCC_APBENR1 ) </loc>
//      <o.30..30> LPTIM2EN
//    </check>
//  </item>
//  


// ----------------------------  Field Item: RCC_APBENR1_LPTIM1EN  --------------------------------
// SVD Line: 2005

//  <item> SFDITEM_FIELD__RCC_APBENR1_LPTIM1EN
//    <name> LPTIM1EN </name>
//    <rw> 
//    <i> [Bit 31] RW (@ 0x4002103C) LPTIM1 clock enable </i>
//    <check> 
//      <loc> ( (unsigned int) RCC_APBENR1 ) </loc>
//      <o.31..31> LPTIM1EN
//    </check>
//  </item>
//  


// -------------------------------  Register RTree: RCC_APBENR1  ----------------------------------
// SVD Line: 1873

//  <rtree> SFDITEM_REG__RCC_APBENR1
//    <name> APBENR1 </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x4002103C) APB peripheral clock enable register  1 </i>
//    <loc> ( (unsigned int)((RCC_APBENR1 >> 0) & 0xFFFFFFFF), ((RCC_APBENR1 = (RCC_APBENR1 & ~(0xFF7E4C33UL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFF7E4C33) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__RCC_APBENR1_TIM2EN </item>
//    <item> SFDITEM_FIELD__RCC_APBENR1_TIM3EN </item>
//    <item> SFDITEM_FIELD__RCC_APBENR1_TIM6EN </item>
//    <item> SFDITEM_FIELD__RCC_APBENR1_TIM7EN </item>
//    <item> SFDITEM_FIELD__RCC_APBENR1_RTCAPBEN </item>
//    <item> SFDITEM_FIELD__RCC_APBENR1_WWDGEN </item>
//    <item> SFDITEM_FIELD__RCC_APBENR1_SPI2EN </item>
//    <item> SFDITEM_FIELD__RCC_APBENR1_USART2EN </item>
//    <item> SFDITEM_FIELD__RCC_APBENR1_USART3EN </item>
//    <item> SFDITEM_FIELD__RCC_APBENR1_USART4EN </item>
//    <item> SFDITEM_FIELD__RCC_APBENR1_LPUART1EN </item>
//    <item> SFDITEM_FIELD__RCC_APBENR1_I2C1EN </item>
//    <item> SFDITEM_FIELD__RCC_APBENR1_I2C2EN </item>
//    <item> SFDITEM_FIELD__RCC_APBENR1_CECEN </item>
//    <item> SFDITEM_FIELD__RCC_APBENR1_UCPD1EN </item>
//    <item> SFDITEM_FIELD__RCC_APBENR1_UCPD2EN </item>
//    <item> SFDITEM_FIELD__RCC_APBENR1_DBGEN </item>
//    <item> SFDITEM_FIELD__RCC_APBENR1_PWREN </item>
//    <item> SFDITEM_FIELD__RCC_APBENR1_DAC1EN </item>
//    <item> SFDITEM_FIELD__RCC_APBENR1_LPTIM2EN </item>
//    <item> SFDITEM_FIELD__RCC_APBENR1_LPTIM1EN </item>
//  </rtree>
//  


// ---------------------------  Register Item Address: RCC_APBENR2  -------------------------------
// SVD Line: 2013

unsigned int RCC_APBENR2 __AT (0x40021040);



// ----------------------------  Field Item: RCC_APBENR2_SYSCFGEN  --------------------------------
// SVD Line: 2023

//  <item> SFDITEM_FIELD__RCC_APBENR2_SYSCFGEN
//    <name> SYSCFGEN </name>
//    <rw> 
//    <i> [Bit 0] RW (@ 0x40021040) SYSCFG, COMP and VREFBUF clock  enable </i>
//    <check> 
//      <loc> ( (unsigned int) RCC_APBENR2 ) </loc>
//      <o.0..0> SYSCFGEN
//    </check>
//  </item>
//  


// -----------------------------  Field Item: RCC_APBENR2_TIM1EN  ---------------------------------
// SVD Line: 2030

//  <item> SFDITEM_FIELD__RCC_APBENR2_TIM1EN
//    <name> TIM1EN </name>
//    <rw> 
//    <i> [Bit 11] RW (@ 0x40021040) TIM1 timer clock enable </i>
//    <check> 
//      <loc> ( (unsigned int) RCC_APBENR2 ) </loc>
//      <o.11..11> TIM1EN
//    </check>
//  </item>
//  


// -----------------------------  Field Item: RCC_APBENR2_SPI1EN  ---------------------------------
// SVD Line: 2036

//  <item> SFDITEM_FIELD__RCC_APBENR2_SPI1EN
//    <name> SPI1EN </name>
//    <rw> 
//    <i> [Bit 12] RW (@ 0x40021040) SPI1 clock enable </i>
//    <check> 
//      <loc> ( (unsigned int) RCC_APBENR2 ) </loc>
//      <o.12..12> SPI1EN
//    </check>
//  </item>
//  


// ----------------------------  Field Item: RCC_APBENR2_USART1EN  --------------------------------
// SVD Line: 2042

//  <item> SFDITEM_FIELD__RCC_APBENR2_USART1EN
//    <name> USART1EN </name>
//    <rw> 
//    <i> [Bit 14] RW (@ 0x40021040) USART1 clock enable </i>
//    <check> 
//      <loc> ( (unsigned int) RCC_APBENR2 ) </loc>
//      <o.14..14> USART1EN
//    </check>
//  </item>
//  


// -----------------------------  Field Item: RCC_APBENR2_TIM14EN  --------------------------------
// SVD Line: 2048

//  <item> SFDITEM_FIELD__RCC_APBENR2_TIM14EN
//    <name> TIM14EN </name>
//    <rw> 
//    <i> [Bit 15] RW (@ 0x40021040) TIM14 timer clock enable </i>
//    <check> 
//      <loc> ( (unsigned int) RCC_APBENR2 ) </loc>
//      <o.15..15> TIM14EN
//    </check>
//  </item>
//  


// -----------------------------  Field Item: RCC_APBENR2_TIM15EN  --------------------------------
// SVD Line: 2054

//  <item> SFDITEM_FIELD__RCC_APBENR2_TIM15EN
//    <name> TIM15EN </name>
//    <rw> 
//    <i> [Bit 16] RW (@ 0x40021040) TIM15 timer clock enable </i>
//    <check> 
//      <loc> ( (unsigned int) RCC_APBENR2 ) </loc>
//      <o.16..16> TIM15EN
//    </check>
//  </item>
//  


// -----------------------------  Field Item: RCC_APBENR2_TIM16EN  --------------------------------
// SVD Line: 2060

//  <item> SFDITEM_FIELD__RCC_APBENR2_TIM16EN
//    <name> TIM16EN </name>
//    <rw> 
//    <i> [Bit 17] RW (@ 0x40021040) TIM16 timer clock enable </i>
//    <check> 
//      <loc> ( (unsigned int) RCC_APBENR2 ) </loc>
//      <o.17..17> TIM16EN
//    </check>
//  </item>
//  


// -----------------------------  Field Item: RCC_APBENR2_TIM17EN  --------------------------------
// SVD Line: 2066

//  <item> SFDITEM_FIELD__RCC_APBENR2_TIM17EN
//    <name> TIM17EN </name>
//    <rw> 
//    <i> [Bit 18] RW (@ 0x40021040) TIM16 timer clock enable </i>
//    <check> 
//      <loc> ( (unsigned int) RCC_APBENR2 ) </loc>
//      <o.18..18> TIM17EN
//    </check>
//  </item>
//  


// ------------------------------  Field Item: RCC_APBENR2_ADCEN  ---------------------------------
// SVD Line: 2072

//  <item> SFDITEM_FIELD__RCC_APBENR2_ADCEN
//    <name> ADCEN </name>
//    <rw> 
//    <i> [Bit 20] RW (@ 0x40021040) ADC clock enable </i>
//    <check> 
//      <loc> ( (unsigned int) RCC_APBENR2 ) </loc>
//      <o.20..20> ADCEN
//    </check>
//  </item>
//  


// -------------------------------  Register RTree: RCC_APBENR2  ----------------------------------
// SVD Line: 2013

//  <rtree> SFDITEM_REG__RCC_APBENR2
//    <name> APBENR2 </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x40021040) APB peripheral clock enable register  2 </i>
//    <loc> ( (unsigned int)((RCC_APBENR2 >> 0) & 0xFFFFFFFF), ((RCC_APBENR2 = (RCC_APBENR2 & ~(0x17D801UL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0x17D801) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__RCC_APBENR2_SYSCFGEN </item>
//    <item> SFDITEM_FIELD__RCC_APBENR2_TIM1EN </item>
//    <item> SFDITEM_FIELD__RCC_APBENR2_SPI1EN </item>
//    <item> SFDITEM_FIELD__RCC_APBENR2_USART1EN </item>
//    <item> SFDITEM_FIELD__RCC_APBENR2_TIM14EN </item>
//    <item> SFDITEM_FIELD__RCC_APBENR2_TIM15EN </item>
//    <item> SFDITEM_FIELD__RCC_APBENR2_TIM16EN </item>
//    <item> SFDITEM_FIELD__RCC_APBENR2_TIM17EN </item>
//    <item> SFDITEM_FIELD__RCC_APBENR2_ADCEN </item>
//  </rtree>
//  


// ---------------------------  Register Item Address: RCC_IOPSMENR  ------------------------------
// SVD Line: 2080

unsigned int RCC_IOPSMENR __AT (0x40021044);



// ----------------------------  Field Item: RCC_IOPSMENR_IOPASMEN  -------------------------------
// SVD Line: 2090

//  <item> SFDITEM_FIELD__RCC_IOPSMENR_IOPASMEN
//    <name> IOPASMEN </name>
//    <rw> 
//    <i> [Bit 0] RW (@ 0x40021044) I/O port A clock enable during Sleep  mode </i>
//    <check> 
//      <loc> ( (unsigned int) RCC_IOPSMENR ) </loc>
//      <o.0..0> IOPASMEN
//    </check>
//  </item>
//  


// ----------------------------  Field Item: RCC_IOPSMENR_IOPBSMEN  -------------------------------
// SVD Line: 2097

//  <item> SFDITEM_FIELD__RCC_IOPSMENR_IOPBSMEN
//    <name> IOPBSMEN </name>
//    <rw> 
//    <i> [Bit 1] RW (@ 0x40021044) I/O port B clock enable during Sleep  mode </i>
//    <check> 
//      <loc> ( (unsigned int) RCC_IOPSMENR ) </loc>
//      <o.1..1> IOPBSMEN
//    </check>
//  </item>
//  


// ----------------------------  Field Item: RCC_IOPSMENR_IOPCSMEN  -------------------------------
// SVD Line: 2104

//  <item> SFDITEM_FIELD__RCC_IOPSMENR_IOPCSMEN
//    <name> IOPCSMEN </name>
//    <rw> 
//    <i> [Bit 2] RW (@ 0x40021044) I/O port C clock enable during Sleep  mode </i>
//    <check> 
//      <loc> ( (unsigned int) RCC_IOPSMENR ) </loc>
//      <o.2..2> IOPCSMEN
//    </check>
//  </item>
//  


// ----------------------------  Field Item: RCC_IOPSMENR_IOPDSMEN  -------------------------------
// SVD Line: 2111

//  <item> SFDITEM_FIELD__RCC_IOPSMENR_IOPDSMEN
//    <name> IOPDSMEN </name>
//    <rw> 
//    <i> [Bit 3] RW (@ 0x40021044) I/O port D clock enable during Sleep  mode </i>
//    <check> 
//      <loc> ( (unsigned int) RCC_IOPSMENR ) </loc>
//      <o.3..3> IOPDSMEN
//    </check>
//  </item>
//  


// ----------------------------  Field Item: RCC_IOPSMENR_IOPFSMEN  -------------------------------
// SVD Line: 2118

//  <item> SFDITEM_FIELD__RCC_IOPSMENR_IOPFSMEN
//    <name> IOPFSMEN </name>
//    <rw> 
//    <i> [Bit 5] RW (@ 0x40021044) I/O port F clock enable during Sleep  mode </i>
//    <check> 
//      <loc> ( (unsigned int) RCC_IOPSMENR ) </loc>
//      <o.5..5> IOPFSMEN
//    </check>
//  </item>
//  


// ------------------------------  Register RTree: RCC_IOPSMENR  ----------------------------------
// SVD Line: 2080

//  <rtree> SFDITEM_REG__RCC_IOPSMENR
//    <name> IOPSMENR </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x40021044) GPIO in Sleep mode clock enable  register </i>
//    <loc> ( (unsigned int)((RCC_IOPSMENR >> 0) & 0xFFFFFFFF), ((RCC_IOPSMENR = (RCC_IOPSMENR & ~(0x2FUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0x2F) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__RCC_IOPSMENR_IOPASMEN </item>
//    <item> SFDITEM_FIELD__RCC_IOPSMENR_IOPBSMEN </item>
//    <item> SFDITEM_FIELD__RCC_IOPSMENR_IOPCSMEN </item>
//    <item> SFDITEM_FIELD__RCC_IOPSMENR_IOPDSMEN </item>
//    <item> SFDITEM_FIELD__RCC_IOPSMENR_IOPFSMEN </item>
//  </rtree>
//  


// ---------------------------  Register Item Address: RCC_AHBSMENR  ------------------------------
// SVD Line: 2127

unsigned int RCC_AHBSMENR __AT (0x40021048);



// ----------------------------  Field Item: RCC_AHBSMENR_DMASMEN  --------------------------------
// SVD Line: 2137

//  <item> SFDITEM_FIELD__RCC_AHBSMENR_DMASMEN
//    <name> DMASMEN </name>
//    <rw> 
//    <i> [Bit 0] RW (@ 0x40021048) DMA clock enable during Sleep  mode </i>
//    <check> 
//      <loc> ( (unsigned int) RCC_AHBSMENR ) </loc>
//      <o.0..0> DMASMEN
//    </check>
//  </item>
//  


// ---------------------------  Field Item: RCC_AHBSMENR_FLASHSMEN  -------------------------------
// SVD Line: 2144

//  <item> SFDITEM_FIELD__RCC_AHBSMENR_FLASHSMEN
//    <name> FLASHSMEN </name>
//    <rw> 
//    <i> [Bit 8] RW (@ 0x40021048) Flash memory interface clock enable  during Sleep mode </i>
//    <check> 
//      <loc> ( (unsigned int) RCC_AHBSMENR ) </loc>
//      <o.8..8> FLASHSMEN
//    </check>
//  </item>
//  


// ----------------------------  Field Item: RCC_AHBSMENR_SRAMSMEN  -------------------------------
// SVD Line: 2151

//  <item> SFDITEM_FIELD__RCC_AHBSMENR_SRAMSMEN
//    <name> SRAMSMEN </name>
//    <rw> 
//    <i> [Bit 9] RW (@ 0x40021048) SRAM clock enable during Sleep  mode </i>
//    <check> 
//      <loc> ( (unsigned int) RCC_AHBSMENR ) </loc>
//      <o.9..9> SRAMSMEN
//    </check>
//  </item>
//  


// ----------------------------  Field Item: RCC_AHBSMENR_CRCSMEN  --------------------------------
// SVD Line: 2158

//  <item> SFDITEM_FIELD__RCC_AHBSMENR_CRCSMEN
//    <name> CRCSMEN </name>
//    <rw> 
//    <i> [Bit 12] RW (@ 0x40021048) CRC clock enable during Sleep  mode </i>
//    <check> 
//      <loc> ( (unsigned int) RCC_AHBSMENR ) </loc>
//      <o.12..12> CRCSMEN
//    </check>
//  </item>
//  


// ----------------------------  Field Item: RCC_AHBSMENR_AESSMEN  --------------------------------
// SVD Line: 2165

//  <item> SFDITEM_FIELD__RCC_AHBSMENR_AESSMEN
//    <name> AESSMEN </name>
//    <rw> 
//    <i> [Bit 16] RW (@ 0x40021048) AES hardware accelerator clock enable  during Sleep mode </i>
//    <check> 
//      <loc> ( (unsigned int) RCC_AHBSMENR ) </loc>
//      <o.16..16> AESSMEN
//    </check>
//  </item>
//  


// ----------------------------  Field Item: RCC_AHBSMENR_RNGSMEN  --------------------------------
// SVD Line: 2172

//  <item> SFDITEM_FIELD__RCC_AHBSMENR_RNGSMEN
//    <name> RNGSMEN </name>
//    <rw> 
//    <i> [Bit 18] RW (@ 0x40021048) Random number generator clock enable  during Sleep mode </i>
//    <check> 
//      <loc> ( (unsigned int) RCC_AHBSMENR ) </loc>
//      <o.18..18> RNGSMEN
//    </check>
//  </item>
//  


// ------------------------------  Register RTree: RCC_AHBSMENR  ----------------------------------
// SVD Line: 2127

//  <rtree> SFDITEM_REG__RCC_AHBSMENR
//    <name> AHBSMENR </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x40021048) AHB peripheral clock enable in Sleep mode  register </i>
//    <loc> ( (unsigned int)((RCC_AHBSMENR >> 0) & 0xFFFFFFFF), ((RCC_AHBSMENR = (RCC_AHBSMENR & ~(0x51301UL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0x51301) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__RCC_AHBSMENR_DMASMEN </item>
//    <item> SFDITEM_FIELD__RCC_AHBSMENR_FLASHSMEN </item>
//    <item> SFDITEM_FIELD__RCC_AHBSMENR_SRAMSMEN </item>
//    <item> SFDITEM_FIELD__RCC_AHBSMENR_CRCSMEN </item>
//    <item> SFDITEM_FIELD__RCC_AHBSMENR_AESSMEN </item>
//    <item> SFDITEM_FIELD__RCC_AHBSMENR_RNGSMEN </item>
//  </rtree>
//  


// --------------------------  Register Item Address: RCC_APBSMENR1  ------------------------------
// SVD Line: 2181

unsigned int RCC_APBSMENR1 __AT (0x4002104C);



// ---------------------------  Field Item: RCC_APBSMENR1_TIM2SMEN  -------------------------------
// SVD Line: 2191

//  <item> SFDITEM_FIELD__RCC_APBSMENR1_TIM2SMEN
//    <name> TIM2SMEN </name>
//    <rw> 
//    <i> [Bit 0] RW (@ 0x4002104C) TIM2 timer clock enable during Sleep  mode </i>
//    <check> 
//      <loc> ( (unsigned int) RCC_APBSMENR1 ) </loc>
//      <o.0..0> TIM2SMEN
//    </check>
//  </item>
//  


// ---------------------------  Field Item: RCC_APBSMENR1_TIM3SMEN  -------------------------------
// SVD Line: 2198

//  <item> SFDITEM_FIELD__RCC_APBSMENR1_TIM3SMEN
//    <name> TIM3SMEN </name>
//    <rw> 
//    <i> [Bit 1] RW (@ 0x4002104C) TIM3 timer clock enable during Sleep  mode </i>
//    <check> 
//      <loc> ( (unsigned int) RCC_APBSMENR1 ) </loc>
//      <o.1..1> TIM3SMEN
//    </check>
//  </item>
//  


// ---------------------------  Field Item: RCC_APBSMENR1_TIM6SMEN  -------------------------------
// SVD Line: 2205

//  <item> SFDITEM_FIELD__RCC_APBSMENR1_TIM6SMEN
//    <name> TIM6SMEN </name>
//    <rw> 
//    <i> [Bit 4] RW (@ 0x4002104C) TIM6 timer clock enable during Sleep  mode </i>
//    <check> 
//      <loc> ( (unsigned int) RCC_APBSMENR1 ) </loc>
//      <o.4..4> TIM6SMEN
//    </check>
//  </item>
//  


// ---------------------------  Field Item: RCC_APBSMENR1_TIM7SMEN  -------------------------------
// SVD Line: 2212

//  <item> SFDITEM_FIELD__RCC_APBSMENR1_TIM7SMEN
//    <name> TIM7SMEN </name>
//    <rw> 
//    <i> [Bit 5] RW (@ 0x4002104C) TIM7 timer clock enable during Sleep  mode </i>
//    <check> 
//      <loc> ( (unsigned int) RCC_APBSMENR1 ) </loc>
//      <o.5..5> TIM7SMEN
//    </check>
//  </item>
//  


// --------------------------  Field Item: RCC_APBSMENR1_RTCAPBSMEN  ------------------------------
// SVD Line: 2219

//  <item> SFDITEM_FIELD__RCC_APBSMENR1_RTCAPBSMEN
//    <name> RTCAPBSMEN </name>
//    <rw> 
//    <i> [Bit 10] RW (@ 0x4002104C) RTC APB clock enable during Sleep  mode </i>
//    <check> 
//      <loc> ( (unsigned int) RCC_APBSMENR1 ) </loc>
//      <o.10..10> RTCAPBSMEN
//    </check>
//  </item>
//  


// ---------------------------  Field Item: RCC_APBSMENR1_WWDGSMEN  -------------------------------
// SVD Line: 2226

//  <item> SFDITEM_FIELD__RCC_APBSMENR1_WWDGSMEN
//    <name> WWDGSMEN </name>
//    <rw> 
//    <i> [Bit 11] RW (@ 0x4002104C) WWDG clock enable during Sleep  mode </i>
//    <check> 
//      <loc> ( (unsigned int) RCC_APBSMENR1 ) </loc>
//      <o.11..11> WWDGSMEN
//    </check>
//  </item>
//  


// ---------------------------  Field Item: RCC_APBSMENR1_SPI2SMEN  -------------------------------
// SVD Line: 2233

//  <item> SFDITEM_FIELD__RCC_APBSMENR1_SPI2SMEN
//    <name> SPI2SMEN </name>
//    <rw> 
//    <i> [Bit 14] RW (@ 0x4002104C) SPI2 clock enable during Sleep  mode </i>
//    <check> 
//      <loc> ( (unsigned int) RCC_APBSMENR1 ) </loc>
//      <o.14..14> SPI2SMEN
//    </check>
//  </item>
//  


// --------------------------  Field Item: RCC_APBSMENR1_USART2SMEN  ------------------------------
// SVD Line: 2240

//  <item> SFDITEM_FIELD__RCC_APBSMENR1_USART2SMEN
//    <name> USART2SMEN </name>
//    <rw> 
//    <i> [Bit 17] RW (@ 0x4002104C) USART2 clock enable during Sleep  mode </i>
//    <check> 
//      <loc> ( (unsigned int) RCC_APBSMENR1 ) </loc>
//      <o.17..17> USART2SMEN
//    </check>
//  </item>
//  


// --------------------------  Field Item: RCC_APBSMENR1_USART3SMEN  ------------------------------
// SVD Line: 2247

//  <item> SFDITEM_FIELD__RCC_APBSMENR1_USART3SMEN
//    <name> USART3SMEN </name>
//    <rw> 
//    <i> [Bit 18] RW (@ 0x4002104C) USART3 clock enable during Sleep  mode </i>
//    <check> 
//      <loc> ( (unsigned int) RCC_APBSMENR1 ) </loc>
//      <o.18..18> USART3SMEN
//    </check>
//  </item>
//  


// --------------------------  Field Item: RCC_APBSMENR1_USART4SMEN  ------------------------------
// SVD Line: 2254

//  <item> SFDITEM_FIELD__RCC_APBSMENR1_USART4SMEN
//    <name> USART4SMEN </name>
//    <rw> 
//    <i> [Bit 19] RW (@ 0x4002104C) USART4 clock enable during Sleep  mode </i>
//    <check> 
//      <loc> ( (unsigned int) RCC_APBSMENR1 ) </loc>
//      <o.19..19> USART4SMEN
//    </check>
//  </item>
//  


// --------------------------  Field Item: RCC_APBSMENR1_LPUART1SMEN  -----------------------------
// SVD Line: 2261

//  <item> SFDITEM_FIELD__RCC_APBSMENR1_LPUART1SMEN
//    <name> LPUART1SMEN </name>
//    <rw> 
//    <i> [Bit 20] RW (@ 0x4002104C) LPUART1 clock enable during Sleep  mode </i>
//    <check> 
//      <loc> ( (unsigned int) RCC_APBSMENR1 ) </loc>
//      <o.20..20> LPUART1SMEN
//    </check>
//  </item>
//  


// ---------------------------  Field Item: RCC_APBSMENR1_I2C1SMEN  -------------------------------
// SVD Line: 2268

//  <item> SFDITEM_FIELD__RCC_APBSMENR1_I2C1SMEN
//    <name> I2C1SMEN </name>
//    <rw> 
//    <i> [Bit 21] RW (@ 0x4002104C) I2C1 clock enable during Sleep  mode </i>
//    <check> 
//      <loc> ( (unsigned int) RCC_APBSMENR1 ) </loc>
//      <o.21..21> I2C1SMEN
//    </check>
//  </item>
//  


// ---------------------------  Field Item: RCC_APBSMENR1_I2C2SMEN  -------------------------------
// SVD Line: 2275

//  <item> SFDITEM_FIELD__RCC_APBSMENR1_I2C2SMEN
//    <name> I2C2SMEN </name>
//    <rw> 
//    <i> [Bit 22] RW (@ 0x4002104C) I2C2 clock enable during Sleep  mode </i>
//    <check> 
//      <loc> ( (unsigned int) RCC_APBSMENR1 ) </loc>
//      <o.22..22> I2C2SMEN
//    </check>
//  </item>
//  


// ----------------------------  Field Item: RCC_APBSMENR1_CECSMEN  -------------------------------
// SVD Line: 2282

//  <item> SFDITEM_FIELD__RCC_APBSMENR1_CECSMEN
//    <name> CECSMEN </name>
//    <rw> 
//    <i> [Bit 24] RW (@ 0x4002104C) HDMI CEC clock enable during Sleep  mode </i>
//    <check> 
//      <loc> ( (unsigned int) RCC_APBSMENR1 ) </loc>
//      <o.24..24> CECSMEN
//    </check>
//  </item>
//  


// ---------------------------  Field Item: RCC_APBSMENR1_UCPD1SMEN  ------------------------------
// SVD Line: 2289

//  <item> SFDITEM_FIELD__RCC_APBSMENR1_UCPD1SMEN
//    <name> UCPD1SMEN </name>
//    <rw> 
//    <i> [Bit 25] RW (@ 0x4002104C) UCPD1 clock enable during Sleep  mode </i>
//    <check> 
//      <loc> ( (unsigned int) RCC_APBSMENR1 ) </loc>
//      <o.25..25> UCPD1SMEN
//    </check>
//  </item>
//  


// ---------------------------  Field Item: RCC_APBSMENR1_UCPD2SMEN  ------------------------------
// SVD Line: 2296

//  <item> SFDITEM_FIELD__RCC_APBSMENR1_UCPD2SMEN
//    <name> UCPD2SMEN </name>
//    <rw> 
//    <i> [Bit 26] RW (@ 0x4002104C) UCPD2 clock enable during Sleep  mode </i>
//    <check> 
//      <loc> ( (unsigned int) RCC_APBSMENR1 ) </loc>
//      <o.26..26> UCPD2SMEN
//    </check>
//  </item>
//  


// ----------------------------  Field Item: RCC_APBSMENR1_DBGSMEN  -------------------------------
// SVD Line: 2303

//  <item> SFDITEM_FIELD__RCC_APBSMENR1_DBGSMEN
//    <name> DBGSMEN </name>
//    <rw> 
//    <i> [Bit 27] RW (@ 0x4002104C) Debug support clock enable during Sleep  mode </i>
//    <check> 
//      <loc> ( (unsigned int) RCC_APBSMENR1 ) </loc>
//      <o.27..27> DBGSMEN
//    </check>
//  </item>
//  


// ----------------------------  Field Item: RCC_APBSMENR1_PWRSMEN  -------------------------------
// SVD Line: 2310

//  <item> SFDITEM_FIELD__RCC_APBSMENR1_PWRSMEN
//    <name> PWRSMEN </name>
//    <rw> 
//    <i> [Bit 28] RW (@ 0x4002104C) Power interface clock enable during  Sleep mode </i>
//    <check> 
//      <loc> ( (unsigned int) RCC_APBSMENR1 ) </loc>
//      <o.28..28> PWRSMEN
//    </check>
//  </item>
//  


// ---------------------------  Field Item: RCC_APBSMENR1_DAC1SMEN  -------------------------------
// SVD Line: 2317

//  <item> SFDITEM_FIELD__RCC_APBSMENR1_DAC1SMEN
//    <name> DAC1SMEN </name>
//    <rw> 
//    <i> [Bit 29] RW (@ 0x4002104C) DAC1 interface clock enable during Sleep  mode </i>
//    <check> 
//      <loc> ( (unsigned int) RCC_APBSMENR1 ) </loc>
//      <o.29..29> DAC1SMEN
//    </check>
//  </item>
//  


// --------------------------  Field Item: RCC_APBSMENR1_LPTIM2SMEN  ------------------------------
// SVD Line: 2324

//  <item> SFDITEM_FIELD__RCC_APBSMENR1_LPTIM2SMEN
//    <name> LPTIM2SMEN </name>
//    <rw> 
//    <i> [Bit 30] RW (@ 0x4002104C) Low Power Timer 2 clock enable during  Sleep mode </i>
//    <check> 
//      <loc> ( (unsigned int) RCC_APBSMENR1 ) </loc>
//      <o.30..30> LPTIM2SMEN
//    </check>
//  </item>
//  


// --------------------------  Field Item: RCC_APBSMENR1_LPTIM1SMEN  ------------------------------
// SVD Line: 2331

//  <item> SFDITEM_FIELD__RCC_APBSMENR1_LPTIM1SMEN
//    <name> LPTIM1SMEN </name>
//    <rw> 
//    <i> [Bit 31] RW (@ 0x4002104C) Low Power Timer 1 clock enable during  Sleep mode </i>
//    <check> 
//      <loc> ( (unsigned int) RCC_APBSMENR1 ) </loc>
//      <o.31..31> LPTIM1SMEN
//    </check>
//  </item>
//  


// ------------------------------  Register RTree: RCC_APBSMENR1  ---------------------------------
// SVD Line: 2181

//  <rtree> SFDITEM_REG__RCC_APBSMENR1
//    <name> APBSMENR1 </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x4002104C) APB peripheral clock enable in Sleep mode  register 1 </i>
//    <loc> ( (unsigned int)((RCC_APBSMENR1 >> 0) & 0xFFFFFFFF), ((RCC_APBSMENR1 = (RCC_APBSMENR1 & ~(0xFF7E4C33UL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFF7E4C33) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__RCC_APBSMENR1_TIM2SMEN </item>
//    <item> SFDITEM_FIELD__RCC_APBSMENR1_TIM3SMEN </item>
//    <item> SFDITEM_FIELD__RCC_APBSMENR1_TIM6SMEN </item>
//    <item> SFDITEM_FIELD__RCC_APBSMENR1_TIM7SMEN </item>
//    <item> SFDITEM_FIELD__RCC_APBSMENR1_RTCAPBSMEN </item>
//    <item> SFDITEM_FIELD__RCC_APBSMENR1_WWDGSMEN </item>
//    <item> SFDITEM_FIELD__RCC_APBSMENR1_SPI2SMEN </item>
//    <item> SFDITEM_FIELD__RCC_APBSMENR1_USART2SMEN </item>
//    <item> SFDITEM_FIELD__RCC_APBSMENR1_USART3SMEN </item>
//    <item> SFDITEM_FIELD__RCC_APBSMENR1_USART4SMEN </item>
//    <item> SFDITEM_FIELD__RCC_APBSMENR1_LPUART1SMEN </item>
//    <item> SFDITEM_FIELD__RCC_APBSMENR1_I2C1SMEN </item>
//    <item> SFDITEM_FIELD__RCC_APBSMENR1_I2C2SMEN </item>
//    <item> SFDITEM_FIELD__RCC_APBSMENR1_CECSMEN </item>
//    <item> SFDITEM_FIELD__RCC_APBSMENR1_UCPD1SMEN </item>
//    <item> SFDITEM_FIELD__RCC_APBSMENR1_UCPD2SMEN </item>
//    <item> SFDITEM_FIELD__RCC_APBSMENR1_DBGSMEN </item>
//    <item> SFDITEM_FIELD__RCC_APBSMENR1_PWRSMEN </item>
//    <item> SFDITEM_FIELD__RCC_APBSMENR1_DAC1SMEN </item>
//    <item> SFDITEM_FIELD__RCC_APBSMENR1_LPTIM2SMEN </item>
//    <item> SFDITEM_FIELD__RCC_APBSMENR1_LPTIM1SMEN </item>
//  </rtree>
//  


// --------------------------  Register Item Address: RCC_APBSMENR2  ------------------------------
// SVD Line: 2340

unsigned int RCC_APBSMENR2 __AT (0x40021050);



// --------------------------  Field Item: RCC_APBSMENR2_SYSCFGSMEN  ------------------------------
// SVD Line: 2350

//  <item> SFDITEM_FIELD__RCC_APBSMENR2_SYSCFGSMEN
//    <name> SYSCFGSMEN </name>
//    <rw> 
//    <i> [Bit 0] RW (@ 0x40021050) SYSCFG, COMP and VREFBUF clock enable  during Sleep mode </i>
//    <check> 
//      <loc> ( (unsigned int) RCC_APBSMENR2 ) </loc>
//      <o.0..0> SYSCFGSMEN
//    </check>
//  </item>
//  


// ---------------------------  Field Item: RCC_APBSMENR2_TIM1SMEN  -------------------------------
// SVD Line: 2357

//  <item> SFDITEM_FIELD__RCC_APBSMENR2_TIM1SMEN
//    <name> TIM1SMEN </name>
//    <rw> 
//    <i> [Bit 11] RW (@ 0x40021050) TIM1 timer clock enable during Sleep  mode </i>
//    <check> 
//      <loc> ( (unsigned int) RCC_APBSMENR2 ) </loc>
//      <o.11..11> TIM1SMEN
//    </check>
//  </item>
//  


// ---------------------------  Field Item: RCC_APBSMENR2_SPI1SMEN  -------------------------------
// SVD Line: 2364

//  <item> SFDITEM_FIELD__RCC_APBSMENR2_SPI1SMEN
//    <name> SPI1SMEN </name>
//    <rw> 
//    <i> [Bit 12] RW (@ 0x40021050) SPI1 clock enable during Sleep  mode </i>
//    <check> 
//      <loc> ( (unsigned int) RCC_APBSMENR2 ) </loc>
//      <o.12..12> SPI1SMEN
//    </check>
//  </item>
//  


// --------------------------  Field Item: RCC_APBSMENR2_USART1SMEN  ------------------------------
// SVD Line: 2371

//  <item> SFDITEM_FIELD__RCC_APBSMENR2_USART1SMEN
//    <name> USART1SMEN </name>
//    <rw> 
//    <i> [Bit 14] RW (@ 0x40021050) USART1 clock enable during Sleep  mode </i>
//    <check> 
//      <loc> ( (unsigned int) RCC_APBSMENR2 ) </loc>
//      <o.14..14> USART1SMEN
//    </check>
//  </item>
//  


// ---------------------------  Field Item: RCC_APBSMENR2_TIM14SMEN  ------------------------------
// SVD Line: 2378

//  <item> SFDITEM_FIELD__RCC_APBSMENR2_TIM14SMEN
//    <name> TIM14SMEN </name>
//    <rw> 
//    <i> [Bit 15] RW (@ 0x40021050) TIM14 timer clock enable during Sleep  mode </i>
//    <check> 
//      <loc> ( (unsigned int) RCC_APBSMENR2 ) </loc>
//      <o.15..15> TIM14SMEN
//    </check>
//  </item>
//  


// ---------------------------  Field Item: RCC_APBSMENR2_TIM15SMEN  ------------------------------
// SVD Line: 2385

//  <item> SFDITEM_FIELD__RCC_APBSMENR2_TIM15SMEN
//    <name> TIM15SMEN </name>
//    <rw> 
//    <i> [Bit 16] RW (@ 0x40021050) TIM15 timer clock enable during Sleep  mode </i>
//    <check> 
//      <loc> ( (unsigned int) RCC_APBSMENR2 ) </loc>
//      <o.16..16> TIM15SMEN
//    </check>
//  </item>
//  


// ---------------------------  Field Item: RCC_APBSMENR2_TIM16SMEN  ------------------------------
// SVD Line: 2392

//  <item> SFDITEM_FIELD__RCC_APBSMENR2_TIM16SMEN
//    <name> TIM16SMEN </name>
//    <rw> 
//    <i> [Bit 17] RW (@ 0x40021050) TIM16 timer clock enable during Sleep  mode </i>
//    <check> 
//      <loc> ( (unsigned int) RCC_APBSMENR2 ) </loc>
//      <o.17..17> TIM16SMEN
//    </check>
//  </item>
//  


// ---------------------------  Field Item: RCC_APBSMENR2_TIM17SMEN  ------------------------------
// SVD Line: 2399

//  <item> SFDITEM_FIELD__RCC_APBSMENR2_TIM17SMEN
//    <name> TIM17SMEN </name>
//    <rw> 
//    <i> [Bit 18] RW (@ 0x40021050) TIM16 timer clock enable during Sleep  mode </i>
//    <check> 
//      <loc> ( (unsigned int) RCC_APBSMENR2 ) </loc>
//      <o.18..18> TIM17SMEN
//    </check>
//  </item>
//  


// ----------------------------  Field Item: RCC_APBSMENR2_ADCSMEN  -------------------------------
// SVD Line: 2406

//  <item> SFDITEM_FIELD__RCC_APBSMENR2_ADCSMEN
//    <name> ADCSMEN </name>
//    <rw> 
//    <i> [Bit 20] RW (@ 0x40021050) ADC clock enable during Sleep  mode </i>
//    <check> 
//      <loc> ( (unsigned int) RCC_APBSMENR2 ) </loc>
//      <o.20..20> ADCSMEN
//    </check>
//  </item>
//  


// ------------------------------  Register RTree: RCC_APBSMENR2  ---------------------------------
// SVD Line: 2340

//  <rtree> SFDITEM_REG__RCC_APBSMENR2
//    <name> APBSMENR2 </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x40021050) APB peripheral clock enable in Sleep mode  register 2 </i>
//    <loc> ( (unsigned int)((RCC_APBSMENR2 >> 0) & 0xFFFFFFFF), ((RCC_APBSMENR2 = (RCC_APBSMENR2 & ~(0x17D801UL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0x17D801) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__RCC_APBSMENR2_SYSCFGSMEN </item>
//    <item> SFDITEM_FIELD__RCC_APBSMENR2_TIM1SMEN </item>
//    <item> SFDITEM_FIELD__RCC_APBSMENR2_SPI1SMEN </item>
//    <item> SFDITEM_FIELD__RCC_APBSMENR2_USART1SMEN </item>
//    <item> SFDITEM_FIELD__RCC_APBSMENR2_TIM14SMEN </item>
//    <item> SFDITEM_FIELD__RCC_APBSMENR2_TIM15SMEN </item>
//    <item> SFDITEM_FIELD__RCC_APBSMENR2_TIM16SMEN </item>
//    <item> SFDITEM_FIELD__RCC_APBSMENR2_TIM17SMEN </item>
//    <item> SFDITEM_FIELD__RCC_APBSMENR2_ADCSMEN </item>
//  </rtree>
//  


// ----------------------------  Register Item Address: RCC_CCIPR  --------------------------------
// SVD Line: 2415

unsigned int RCC_CCIPR __AT (0x40021054);



// -----------------------------  Field Item: RCC_CCIPR_USART1SEL  --------------------------------
// SVD Line: 2425

//  <item> SFDITEM_FIELD__RCC_CCIPR_USART1SEL
//    <name> USART1SEL </name>
//    <rw> 
//    <i> [Bits 1..0] RW (@ 0x40021054) USART1 clock source  selection </i>
//    <edit> 
//      <loc> ( (unsigned char)((RCC_CCIPR >> 0) & 0x3), ((RCC_CCIPR = (RCC_CCIPR & ~(0x3UL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0x3) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -----------------------------  Field Item: RCC_CCIPR_USART2SEL  --------------------------------
// SVD Line: 2432

//  <item> SFDITEM_FIELD__RCC_CCIPR_USART2SEL
//    <name> USART2SEL </name>
//    <rw> 
//    <i> [Bits 3..2] RW (@ 0x40021054) USART2 clock source  selection </i>
//    <edit> 
//      <loc> ( (unsigned char)((RCC_CCIPR >> 2) & 0x3), ((RCC_CCIPR = (RCC_CCIPR & ~(0x3UL << 2 )) | ((unsigned long)(Gui_u8:GuiVal & 0x3) << 2 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ------------------------------  Field Item: RCC_CCIPR_CECSEL  ----------------------------------
// SVD Line: 2439

//  <item> SFDITEM_FIELD__RCC_CCIPR_CECSEL
//    <name> CECSEL </name>
//    <rw> 
//    <i> [Bit 6] RW (@ 0x40021054) HDMI CEC clock source  selection </i>
//    <check> 
//      <loc> ( (unsigned int) RCC_CCIPR ) </loc>
//      <o.6..6> CECSEL
//    </check>
//  </item>
//  


// ----------------------------  Field Item: RCC_CCIPR_LPUART1SEL  --------------------------------
// SVD Line: 2446

//  <item> SFDITEM_FIELD__RCC_CCIPR_LPUART1SEL
//    <name> LPUART1SEL </name>
//    <rw> 
//    <i> [Bits 11..10] RW (@ 0x40021054) LPUART1 clock source  selection </i>
//    <edit> 
//      <loc> ( (unsigned char)((RCC_CCIPR >> 10) & 0x3), ((RCC_CCIPR = (RCC_CCIPR & ~(0x3UL << 10 )) | ((unsigned long)(Gui_u8:GuiVal & 0x3) << 10 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ------------------------------  Field Item: RCC_CCIPR_I2C1SEL  ---------------------------------
// SVD Line: 2453

//  <item> SFDITEM_FIELD__RCC_CCIPR_I2C1SEL
//    <name> I2C1SEL </name>
//    <rw> 
//    <i> [Bits 13..12] RW (@ 0x40021054) I2C1 clock source  selection </i>
//    <edit> 
//      <loc> ( (unsigned char)((RCC_CCIPR >> 12) & 0x3), ((RCC_CCIPR = (RCC_CCIPR & ~(0x3UL << 12 )) | ((unsigned long)(Gui_u8:GuiVal & 0x3) << 12 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ------------------------------  Field Item: RCC_CCIPR_I2S2SEL  ---------------------------------
// SVD Line: 2460

//  <item> SFDITEM_FIELD__RCC_CCIPR_I2S2SEL
//    <name> I2S2SEL </name>
//    <rw> 
//    <i> [Bits 15..14] RW (@ 0x40021054) I2S1 clock source  selection </i>
//    <edit> 
//      <loc> ( (unsigned char)((RCC_CCIPR >> 14) & 0x3), ((RCC_CCIPR = (RCC_CCIPR & ~(0x3UL << 14 )) | ((unsigned long)(Gui_u8:GuiVal & 0x3) << 14 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -----------------------------  Field Item: RCC_CCIPR_LPTIM1SEL  --------------------------------
// SVD Line: 2467

//  <item> SFDITEM_FIELD__RCC_CCIPR_LPTIM1SEL
//    <name> LPTIM1SEL </name>
//    <rw> 
//    <i> [Bits 19..18] RW (@ 0x40021054) LPTIM1 clock source  selection </i>
//    <edit> 
//      <loc> ( (unsigned char)((RCC_CCIPR >> 18) & 0x3), ((RCC_CCIPR = (RCC_CCIPR & ~(0x3UL << 18 )) | ((unsigned long)(Gui_u8:GuiVal & 0x3) << 18 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -----------------------------  Field Item: RCC_CCIPR_LPTIM2SEL  --------------------------------
// SVD Line: 2474

//  <item> SFDITEM_FIELD__RCC_CCIPR_LPTIM2SEL
//    <name> LPTIM2SEL </name>
//    <rw> 
//    <i> [Bits 21..20] RW (@ 0x40021054) LPTIM2 clock source  selection </i>
//    <edit> 
//      <loc> ( (unsigned char)((RCC_CCIPR >> 20) & 0x3), ((RCC_CCIPR = (RCC_CCIPR & ~(0x3UL << 20 )) | ((unsigned long)(Gui_u8:GuiVal & 0x3) << 20 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ------------------------------  Field Item: RCC_CCIPR_TIM1SEL  ---------------------------------
// SVD Line: 2481

//  <item> SFDITEM_FIELD__RCC_CCIPR_TIM1SEL
//    <name> TIM1SEL </name>
//    <rw> 
//    <i> [Bit 22] RW (@ 0x40021054) TIM1 clock source  selection </i>
//    <check> 
//      <loc> ( (unsigned int) RCC_CCIPR ) </loc>
//      <o.22..22> TIM1SEL
//    </check>
//  </item>
//  


// -----------------------------  Field Item: RCC_CCIPR_TIM15SEL  ---------------------------------
// SVD Line: 2488

//  <item> SFDITEM_FIELD__RCC_CCIPR_TIM15SEL
//    <name> TIM15SEL </name>
//    <rw> 
//    <i> [Bit 24] RW (@ 0x40021054) TIM15 clock source  selection </i>
//    <check> 
//      <loc> ( (unsigned int) RCC_CCIPR ) </loc>
//      <o.24..24> TIM15SEL
//    </check>
//  </item>
//  


// ------------------------------  Field Item: RCC_CCIPR_RNGSEL  ----------------------------------
// SVD Line: 2495

//  <item> SFDITEM_FIELD__RCC_CCIPR_RNGSEL
//    <name> RNGSEL </name>
//    <rw> 
//    <i> [Bits 27..26] RW (@ 0x40021054) RNG clock source selection </i>
//    <edit> 
//      <loc> ( (unsigned char)((RCC_CCIPR >> 26) & 0x3), ((RCC_CCIPR = (RCC_CCIPR & ~(0x3UL << 26 )) | ((unsigned long)(Gui_u8:GuiVal & 0x3) << 26 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ------------------------------  Field Item: RCC_CCIPR_RNGDIV  ----------------------------------
// SVD Line: 2501

//  <item> SFDITEM_FIELD__RCC_CCIPR_RNGDIV
//    <name> RNGDIV </name>
//    <rw> 
//    <i> [Bits 29..28] RW (@ 0x40021054) Division factor of RNG clock  divider </i>
//    <edit> 
//      <loc> ( (unsigned char)((RCC_CCIPR >> 28) & 0x3), ((RCC_CCIPR = (RCC_CCIPR & ~(0x3UL << 28 )) | ((unsigned long)(Gui_u8:GuiVal & 0x3) << 28 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ------------------------------  Field Item: RCC_CCIPR_ADCSEL  ----------------------------------
// SVD Line: 2508

//  <item> SFDITEM_FIELD__RCC_CCIPR_ADCSEL
//    <name> ADCSEL </name>
//    <rw> 
//    <i> [Bits 31..30] RW (@ 0x40021054) ADCs clock source  selection </i>
//    <edit> 
//      <loc> ( (unsigned char)((RCC_CCIPR >> 30) & 0x3), ((RCC_CCIPR = (RCC_CCIPR & ~(0x3UL << 30 )) | ((unsigned long)(Gui_u8:GuiVal & 0x3) << 30 ) ) )) </loc>
//    </edit>
//  </item>
//  


// --------------------------------  Register RTree: RCC_CCIPR  -----------------------------------
// SVD Line: 2415

//  <rtree> SFDITEM_REG__RCC_CCIPR
//    <name> CCIPR </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x40021054) Peripherals independent clock configuration  register </i>
//    <loc> ( (unsigned int)((RCC_CCIPR >> 0) & 0xFFFFFFFF), ((RCC_CCIPR = (RCC_CCIPR & ~(0xFD7CFC4FUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFD7CFC4F) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__RCC_CCIPR_USART1SEL </item>
//    <item> SFDITEM_FIELD__RCC_CCIPR_USART2SEL </item>
//    <item> SFDITEM_FIELD__RCC_CCIPR_CECSEL </item>
//    <item> SFDITEM_FIELD__RCC_CCIPR_LPUART1SEL </item>
//    <item> SFDITEM_FIELD__RCC_CCIPR_I2C1SEL </item>
//    <item> SFDITEM_FIELD__RCC_CCIPR_I2S2SEL </item>
//    <item> SFDITEM_FIELD__RCC_CCIPR_LPTIM1SEL </item>
//    <item> SFDITEM_FIELD__RCC_CCIPR_LPTIM2SEL </item>
//    <item> SFDITEM_FIELD__RCC_CCIPR_TIM1SEL </item>
//    <item> SFDITEM_FIELD__RCC_CCIPR_TIM15SEL </item>
//    <item> SFDITEM_FIELD__RCC_CCIPR_RNGSEL </item>
//    <item> SFDITEM_FIELD__RCC_CCIPR_RNGDIV </item>
//    <item> SFDITEM_FIELD__RCC_CCIPR_ADCSEL </item>
//  </rtree>
//  


// -----------------------------  Register Item Address: RCC_BDCR  --------------------------------
// SVD Line: 2517

unsigned int RCC_BDCR __AT (0x4002105C);



// -------------------------------  Field Item: RCC_BDCR_LSEON  -----------------------------------
// SVD Line: 2526

//  <item> SFDITEM_FIELD__RCC_BDCR_LSEON
//    <name> LSEON </name>
//    <rw> 
//    <i> [Bit 0] RW (@ 0x4002105C) LSE oscillator enable </i>
//    <check> 
//      <loc> ( (unsigned int) RCC_BDCR ) </loc>
//      <o.0..0> LSEON
//    </check>
//  </item>
//  


// -------------------------------  Field Item: RCC_BDCR_LSERDY  ----------------------------------
// SVD Line: 2532

//  <item> SFDITEM_FIELD__RCC_BDCR_LSERDY
//    <name> LSERDY </name>
//    <rw> 
//    <i> [Bit 1] RW (@ 0x4002105C) LSE oscillator ready </i>
//    <check> 
//      <loc> ( (unsigned int) RCC_BDCR ) </loc>
//      <o.1..1> LSERDY
//    </check>
//  </item>
//  


// -------------------------------  Field Item: RCC_BDCR_LSEBYP  ----------------------------------
// SVD Line: 2538

//  <item> SFDITEM_FIELD__RCC_BDCR_LSEBYP
//    <name> LSEBYP </name>
//    <rw> 
//    <i> [Bit 2] RW (@ 0x4002105C) LSE oscillator bypass </i>
//    <check> 
//      <loc> ( (unsigned int) RCC_BDCR ) </loc>
//      <o.2..2> LSEBYP
//    </check>
//  </item>
//  


// -------------------------------  Field Item: RCC_BDCR_LSEDRV  ----------------------------------
// SVD Line: 2544

//  <item> SFDITEM_FIELD__RCC_BDCR_LSEDRV
//    <name> LSEDRV </name>
//    <rw> 
//    <i> [Bits 4..3] RW (@ 0x4002105C) LSE oscillator drive  capability </i>
//    <edit> 
//      <loc> ( (unsigned char)((RCC_BDCR >> 3) & 0x3), ((RCC_BDCR = (RCC_BDCR & ~(0x3UL << 3 )) | ((unsigned long)(Gui_u8:GuiVal & 0x3) << 3 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ------------------------------  Field Item: RCC_BDCR_LSECSSON  ---------------------------------
// SVD Line: 2551

//  <item> SFDITEM_FIELD__RCC_BDCR_LSECSSON
//    <name> LSECSSON </name>
//    <rw> 
//    <i> [Bit 5] RW (@ 0x4002105C) CSS on LSE enable </i>
//    <check> 
//      <loc> ( (unsigned int) RCC_BDCR ) </loc>
//      <o.5..5> LSECSSON
//    </check>
//  </item>
//  


// ------------------------------  Field Item: RCC_BDCR_LSECSSD  ----------------------------------
// SVD Line: 2557

//  <item> SFDITEM_FIELD__RCC_BDCR_LSECSSD
//    <name> LSECSSD </name>
//    <rw> 
//    <i> [Bit 6] RW (@ 0x4002105C) CSS on LSE failure  Detection </i>
//    <check> 
//      <loc> ( (unsigned int) RCC_BDCR ) </loc>
//      <o.6..6> LSECSSD
//    </check>
//  </item>
//  


// -------------------------------  Field Item: RCC_BDCR_RTCSEL  ----------------------------------
// SVD Line: 2564

//  <item> SFDITEM_FIELD__RCC_BDCR_RTCSEL
//    <name> RTCSEL </name>
//    <rw> 
//    <i> [Bits 9..8] RW (@ 0x4002105C) RTC clock source selection </i>
//    <edit> 
//      <loc> ( (unsigned char)((RCC_BDCR >> 8) & 0x3), ((RCC_BDCR = (RCC_BDCR & ~(0x3UL << 8 )) | ((unsigned long)(Gui_u8:GuiVal & 0x3) << 8 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -------------------------------  Field Item: RCC_BDCR_RTCEN  -----------------------------------
// SVD Line: 2570

//  <item> SFDITEM_FIELD__RCC_BDCR_RTCEN
//    <name> RTCEN </name>
//    <rw> 
//    <i> [Bit 15] RW (@ 0x4002105C) RTC clock enable </i>
//    <check> 
//      <loc> ( (unsigned int) RCC_BDCR ) </loc>
//      <o.15..15> RTCEN
//    </check>
//  </item>
//  


// -------------------------------  Field Item: RCC_BDCR_BDRST  -----------------------------------
// SVD Line: 2576

//  <item> SFDITEM_FIELD__RCC_BDCR_BDRST
//    <name> BDRST </name>
//    <rw> 
//    <i> [Bit 16] RW (@ 0x4002105C) RTC domain software reset </i>
//    <check> 
//      <loc> ( (unsigned int) RCC_BDCR ) </loc>
//      <o.16..16> BDRST
//    </check>
//  </item>
//  


// -------------------------------  Field Item: RCC_BDCR_LSCOEN  ----------------------------------
// SVD Line: 2582

//  <item> SFDITEM_FIELD__RCC_BDCR_LSCOEN
//    <name> LSCOEN </name>
//    <rw> 
//    <i> [Bit 24] RW (@ 0x4002105C) Low-speed clock output (LSCO)  enable </i>
//    <check> 
//      <loc> ( (unsigned int) RCC_BDCR ) </loc>
//      <o.24..24> LSCOEN
//    </check>
//  </item>
//  


// ------------------------------  Field Item: RCC_BDCR_LSCOSEL  ----------------------------------
// SVD Line: 2589

//  <item> SFDITEM_FIELD__RCC_BDCR_LSCOSEL
//    <name> LSCOSEL </name>
//    <rw> 
//    <i> [Bit 25] RW (@ 0x4002105C) Low-speed clock output  selection </i>
//    <check> 
//      <loc> ( (unsigned int) RCC_BDCR ) </loc>
//      <o.25..25> LSCOSEL
//    </check>
//  </item>
//  


// --------------------------------  Register RTree: RCC_BDCR  ------------------------------------
// SVD Line: 2517

//  <rtree> SFDITEM_REG__RCC_BDCR
//    <name> BDCR </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x4002105C) RTC domain control register </i>
//    <loc> ( (unsigned int)((RCC_BDCR >> 0) & 0xFFFFFFFF), ((RCC_BDCR = (RCC_BDCR & ~(0x301837FUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0x301837F) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__RCC_BDCR_LSEON </item>
//    <item> SFDITEM_FIELD__RCC_BDCR_LSERDY </item>
//    <item> SFDITEM_FIELD__RCC_BDCR_LSEBYP </item>
//    <item> SFDITEM_FIELD__RCC_BDCR_LSEDRV </item>
//    <item> SFDITEM_FIELD__RCC_BDCR_LSECSSON </item>
//    <item> SFDITEM_FIELD__RCC_BDCR_LSECSSD </item>
//    <item> SFDITEM_FIELD__RCC_BDCR_RTCSEL </item>
//    <item> SFDITEM_FIELD__RCC_BDCR_RTCEN </item>
//    <item> SFDITEM_FIELD__RCC_BDCR_BDRST </item>
//    <item> SFDITEM_FIELD__RCC_BDCR_LSCOEN </item>
//    <item> SFDITEM_FIELD__RCC_BDCR_LSCOSEL </item>
//  </rtree>
//  


// -----------------------------  Register Item Address: RCC_CSR  ---------------------------------
// SVD Line: 2598

unsigned int RCC_CSR __AT (0x40021060);



// --------------------------------  Field Item: RCC_CSR_LSION  -----------------------------------
// SVD Line: 2607

//  <item> SFDITEM_FIELD__RCC_CSR_LSION
//    <name> LSION </name>
//    <rw> 
//    <i> [Bit 0] RW (@ 0x40021060) LSI oscillator enable </i>
//    <check> 
//      <loc> ( (unsigned int) RCC_CSR ) </loc>
//      <o.0..0> LSION
//    </check>
//  </item>
//  


// -------------------------------  Field Item: RCC_CSR_LSIRDY  -----------------------------------
// SVD Line: 2613

//  <item> SFDITEM_FIELD__RCC_CSR_LSIRDY
//    <name> LSIRDY </name>
//    <rw> 
//    <i> [Bit 1] RW (@ 0x40021060) LSI oscillator ready </i>
//    <check> 
//      <loc> ( (unsigned int) RCC_CSR ) </loc>
//      <o.1..1> LSIRDY
//    </check>
//  </item>
//  


// --------------------------------  Field Item: RCC_CSR_RMVF  ------------------------------------
// SVD Line: 2619

//  <item> SFDITEM_FIELD__RCC_CSR_RMVF
//    <name> RMVF </name>
//    <rw> 
//    <i> [Bit 23] RW (@ 0x40021060) Remove reset flags </i>
//    <check> 
//      <loc> ( (unsigned int) RCC_CSR ) </loc>
//      <o.23..23> RMVF
//    </check>
//  </item>
//  


// -------------------------------  Field Item: RCC_CSR_OBLRSTF  ----------------------------------
// SVD Line: 2625

//  <item> SFDITEM_FIELD__RCC_CSR_OBLRSTF
//    <name> OBLRSTF </name>
//    <rw> 
//    <i> [Bit 25] RW (@ 0x40021060) Option byte loader reset  flag </i>
//    <check> 
//      <loc> ( (unsigned int) RCC_CSR ) </loc>
//      <o.25..25> OBLRSTF
//    </check>
//  </item>
//  


// -------------------------------  Field Item: RCC_CSR_PINRSTF  ----------------------------------
// SVD Line: 2632

//  <item> SFDITEM_FIELD__RCC_CSR_PINRSTF
//    <name> PINRSTF </name>
//    <rw> 
//    <i> [Bit 26] RW (@ 0x40021060) Pin reset flag </i>
//    <check> 
//      <loc> ( (unsigned int) RCC_CSR ) </loc>
//      <o.26..26> PINRSTF
//    </check>
//  </item>
//  


// -------------------------------  Field Item: RCC_CSR_PWRRSTF  ----------------------------------
// SVD Line: 2638

//  <item> SFDITEM_FIELD__RCC_CSR_PWRRSTF
//    <name> PWRRSTF </name>
//    <rw> 
//    <i> [Bit 27] RW (@ 0x40021060) BOR or POR/PDR flag </i>
//    <check> 
//      <loc> ( (unsigned int) RCC_CSR ) </loc>
//      <o.27..27> PWRRSTF
//    </check>
//  </item>
//  


// -------------------------------  Field Item: RCC_CSR_SFTRSTF  ----------------------------------
// SVD Line: 2644

//  <item> SFDITEM_FIELD__RCC_CSR_SFTRSTF
//    <name> SFTRSTF </name>
//    <rw> 
//    <i> [Bit 28] RW (@ 0x40021060) Software reset flag </i>
//    <check> 
//      <loc> ( (unsigned int) RCC_CSR ) </loc>
//      <o.28..28> SFTRSTF
//    </check>
//  </item>
//  


// ------------------------------  Field Item: RCC_CSR_IWDGRSTF  ----------------------------------
// SVD Line: 2650

//  <item> SFDITEM_FIELD__RCC_CSR_IWDGRSTF
//    <name> IWDGRSTF </name>
//    <rw> 
//    <i> [Bit 29] RW (@ 0x40021060) Independent window watchdog reset  flag </i>
//    <check> 
//      <loc> ( (unsigned int) RCC_CSR ) </loc>
//      <o.29..29> IWDGRSTF
//    </check>
//  </item>
//  


// ------------------------------  Field Item: RCC_CSR_WWDGRSTF  ----------------------------------
// SVD Line: 2657

//  <item> SFDITEM_FIELD__RCC_CSR_WWDGRSTF
//    <name> WWDGRSTF </name>
//    <rw> 
//    <i> [Bit 30] RW (@ 0x40021060) Window watchdog reset flag </i>
//    <check> 
//      <loc> ( (unsigned int) RCC_CSR ) </loc>
//      <o.30..30> WWDGRSTF
//    </check>
//  </item>
//  


// ------------------------------  Field Item: RCC_CSR_LPWRRSTF  ----------------------------------
// SVD Line: 2663

//  <item> SFDITEM_FIELD__RCC_CSR_LPWRRSTF
//    <name> LPWRRSTF </name>
//    <rw> 
//    <i> [Bit 31] RW (@ 0x40021060) Low-power reset flag </i>
//    <check> 
//      <loc> ( (unsigned int) RCC_CSR ) </loc>
//      <o.31..31> LPWRRSTF
//    </check>
//  </item>
//  


// ---------------------------------  Register RTree: RCC_CSR  ------------------------------------
// SVD Line: 2598

//  <rtree> SFDITEM_REG__RCC_CSR
//    <name> CSR </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x40021060) Control/status register </i>
//    <loc> ( (unsigned int)((RCC_CSR >> 0) & 0xFFFFFFFF), ((RCC_CSR = (RCC_CSR & ~(0xFE800003UL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFE800003) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__RCC_CSR_LSION </item>
//    <item> SFDITEM_FIELD__RCC_CSR_LSIRDY </item>
//    <item> SFDITEM_FIELD__RCC_CSR_RMVF </item>
//    <item> SFDITEM_FIELD__RCC_CSR_OBLRSTF </item>
//    <item> SFDITEM_FIELD__RCC_CSR_PINRSTF </item>
//    <item> SFDITEM_FIELD__RCC_CSR_PWRRSTF </item>
//    <item> SFDITEM_FIELD__RCC_CSR_SFTRSTF </item>
//    <item> SFDITEM_FIELD__RCC_CSR_IWDGRSTF </item>
//    <item> SFDITEM_FIELD__RCC_CSR_WWDGRSTF </item>
//    <item> SFDITEM_FIELD__RCC_CSR_LPWRRSTF </item>
//  </rtree>
//  


// ----------------------------------  Peripheral View: RCC  --------------------------------------
// SVD Line: 1116

//  <view> RCC
//    <name> RCC </name>
//    <item> SFDITEM_REG__RCC_CR </item>
//    <item> SFDITEM_REG__RCC_ICSCR </item>
//    <item> SFDITEM_REG__RCC_CFGR </item>
//    <item> SFDITEM_REG__RCC_PLLSYSCFGR </item>
//    <item> SFDITEM_REG__RCC_CIER </item>
//    <item> SFDITEM_REG__RCC_CIFR </item>
//    <item> SFDITEM_REG__RCC_CICR </item>
//    <item> SFDITEM_REG__RCC_AHBRSTR </item>
//    <item> SFDITEM_REG__RCC_IOPRSTR </item>
//    <item> SFDITEM_REG__RCC_APBRSTR1 </item>
//    <item> SFDITEM_REG__RCC_APBRSTR2 </item>
//    <item> SFDITEM_REG__RCC_IOPENR </item>
//    <item> SFDITEM_REG__RCC_AHBENR </item>
//    <item> SFDITEM_REG__RCC_APBENR1 </item>
//    <item> SFDITEM_REG__RCC_APBENR2 </item>
//    <item> SFDITEM_REG__RCC_IOPSMENR </item>
//    <item> SFDITEM_REG__RCC_AHBSMENR </item>
//    <item> SFDITEM_REG__RCC_APBSMENR1 </item>
//    <item> SFDITEM_REG__RCC_APBSMENR2 </item>
//    <item> SFDITEM_REG__RCC_CCIPR </item>
//    <item> SFDITEM_REG__RCC_BDCR </item>
//    <item> SFDITEM_REG__RCC_CSR </item>
//  </view>
//  


// -----------------------------  Register Item Address: PWR_CR1  ---------------------------------
// SVD Line: 2689

unsigned int PWR_CR1 __AT (0x40007000);



// ---------------------------------  Field Item: PWR_CR1_LPR  ------------------------------------
// SVD Line: 2698

//  <item> SFDITEM_FIELD__PWR_CR1_LPR
//    <name> LPR </name>
//    <rw> 
//    <i> [Bit 14] RW (@ 0x40007000) Low-power run </i>
//    <check> 
//      <loc> ( (unsigned int) PWR_CR1 ) </loc>
//      <o.14..14> LPR
//    </check>
//  </item>
//  


// ---------------------------------  Field Item: PWR_CR1_VOS  ------------------------------------
// SVD Line: 2704

//  <item> SFDITEM_FIELD__PWR_CR1_VOS
//    <name> VOS </name>
//    <rw> 
//    <i> [Bits 10..9] RW (@ 0x40007000) Voltage scaling range  selection </i>
//    <edit> 
//      <loc> ( (unsigned char)((PWR_CR1 >> 9) & 0x3), ((PWR_CR1 = (PWR_CR1 & ~(0x3UL << 9 )) | ((unsigned long)(Gui_u8:GuiVal & 0x3) << 9 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ---------------------------------  Field Item: PWR_CR1_DBP  ------------------------------------
// SVD Line: 2711

//  <item> SFDITEM_FIELD__PWR_CR1_DBP
//    <name> DBP </name>
//    <rw> 
//    <i> [Bit 8] RW (@ 0x40007000) Disable backup domain write  protection </i>
//    <check> 
//      <loc> ( (unsigned int) PWR_CR1 ) </loc>
//      <o.8..8> DBP
//    </check>
//  </item>
//  


// ------------------------------  Field Item: PWR_CR1_FPD_LPSLP  ---------------------------------
// SVD Line: 2718

//  <item> SFDITEM_FIELD__PWR_CR1_FPD_LPSLP
//    <name> FPD_LPSLP </name>
//    <rw> 
//    <i> [Bit 5] RW (@ 0x40007000) Flash memory powered down during  Low-power sleep mode </i>
//    <check> 
//      <loc> ( (unsigned int) PWR_CR1 ) </loc>
//      <o.5..5> FPD_LPSLP
//    </check>
//  </item>
//  


// ------------------------------  Field Item: PWR_CR1_FPD_LPRUN  ---------------------------------
// SVD Line: 2725

//  <item> SFDITEM_FIELD__PWR_CR1_FPD_LPRUN
//    <name> FPD_LPRUN </name>
//    <rw> 
//    <i> [Bit 4] RW (@ 0x40007000) Flash memory powered down during  Low-power run mode </i>
//    <check> 
//      <loc> ( (unsigned int) PWR_CR1 ) </loc>
//      <o.4..4> FPD_LPRUN
//    </check>
//  </item>
//  


// ------------------------------  Field Item: PWR_CR1_FPD_STOP  ----------------------------------
// SVD Line: 2732

//  <item> SFDITEM_FIELD__PWR_CR1_FPD_STOP
//    <name> FPD_STOP </name>
//    <rw> 
//    <i> [Bit 3] RW (@ 0x40007000) Flash memory powered down during Stop  mode </i>
//    <check> 
//      <loc> ( (unsigned int) PWR_CR1 ) </loc>
//      <o.3..3> FPD_STOP
//    </check>
//  </item>
//  


// --------------------------------  Field Item: PWR_CR1_LPMS  ------------------------------------
// SVD Line: 2739

//  <item> SFDITEM_FIELD__PWR_CR1_LPMS
//    <name> LPMS </name>
//    <rw> 
//    <i> [Bits 2..0] RW (@ 0x40007000) Low-power mode selection </i>
//    <edit> 
//      <loc> ( (unsigned char)((PWR_CR1 >> 0) & 0x7), ((PWR_CR1 = (PWR_CR1 & ~(0x7UL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0x7) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ---------------------------------  Register RTree: PWR_CR1  ------------------------------------
// SVD Line: 2689

//  <rtree> SFDITEM_REG__PWR_CR1
//    <name> CR1 </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x40007000) Power control register 1 </i>
//    <loc> ( (unsigned int)((PWR_CR1 >> 0) & 0xFFFFFFFF), ((PWR_CR1 = (PWR_CR1 & ~(0x473FUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0x473F) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__PWR_CR1_LPR </item>
//    <item> SFDITEM_FIELD__PWR_CR1_VOS </item>
//    <item> SFDITEM_FIELD__PWR_CR1_DBP </item>
//    <item> SFDITEM_FIELD__PWR_CR1_FPD_LPSLP </item>
//    <item> SFDITEM_FIELD__PWR_CR1_FPD_LPRUN </item>
//    <item> SFDITEM_FIELD__PWR_CR1_FPD_STOP </item>
//    <item> SFDITEM_FIELD__PWR_CR1_LPMS </item>
//  </rtree>
//  


// -----------------------------  Register Item Address: PWR_CR2  ---------------------------------
// SVD Line: 2747

unsigned int PWR_CR2 __AT (0x40007004);



// --------------------------------  Field Item: PWR_CR2_PVDE  ------------------------------------
// SVD Line: 2756

//  <item> SFDITEM_FIELD__PWR_CR2_PVDE
//    <name> PVDE </name>
//    <rw> 
//    <i> [Bit 0] RW (@ 0x40007004) Power voltage detector  enable </i>
//    <check> 
//      <loc> ( (unsigned int) PWR_CR2 ) </loc>
//      <o.0..0> PVDE
//    </check>
//  </item>
//  


// --------------------------------  Field Item: PWR_CR2_PVDFT  -----------------------------------
// SVD Line: 2763

//  <item> SFDITEM_FIELD__PWR_CR2_PVDFT
//    <name> PVDFT </name>
//    <rw> 
//    <i> [Bits 3..1] RW (@ 0x40007004) Power voltage detector falling threshold  selection </i>
//    <edit> 
//      <loc> ( (unsigned char)((PWR_CR2 >> 1) & 0x7), ((PWR_CR2 = (PWR_CR2 & ~(0x7UL << 1 )) | ((unsigned long)(Gui_u8:GuiVal & 0x7) << 1 ) ) )) </loc>
//    </edit>
//  </item>
//  


// --------------------------------  Field Item: PWR_CR2_PVDRT  -----------------------------------
// SVD Line: 2770

//  <item> SFDITEM_FIELD__PWR_CR2_PVDRT
//    <name> PVDRT </name>
//    <rw> 
//    <i> [Bits 6..4] RW (@ 0x40007004) Power voltage detector rising threshold  selection </i>
//    <edit> 
//      <loc> ( (unsigned char)((PWR_CR2 >> 4) & 0x7), ((PWR_CR2 = (PWR_CR2 & ~(0x7UL << 4 )) | ((unsigned long)(Gui_u8:GuiVal & 0x7) << 4 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ---------------------------------  Register RTree: PWR_CR2  ------------------------------------
// SVD Line: 2747

//  <rtree> SFDITEM_REG__PWR_CR2
//    <name> CR2 </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x40007004) Power control register 2 </i>
//    <loc> ( (unsigned int)((PWR_CR2 >> 0) & 0xFFFFFFFF), ((PWR_CR2 = (PWR_CR2 & ~(0x7FUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0x7F) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__PWR_CR2_PVDE </item>
//    <item> SFDITEM_FIELD__PWR_CR2_PVDFT </item>
//    <item> SFDITEM_FIELD__PWR_CR2_PVDRT </item>
//  </rtree>
//  


// -----------------------------  Register Item Address: PWR_CR3  ---------------------------------
// SVD Line: 2779

unsigned int PWR_CR3 __AT (0x40007008);



// --------------------------------  Field Item: PWR_CR3_EWUP1  -----------------------------------
// SVD Line: 2788

//  <item> SFDITEM_FIELD__PWR_CR3_EWUP1
//    <name> EWUP1 </name>
//    <rw> 
//    <i> [Bit 0] RW (@ 0x40007008) Enable Wakeup pin WKUP1 </i>
//    <check> 
//      <loc> ( (unsigned int) PWR_CR3 ) </loc>
//      <o.0..0> EWUP1
//    </check>
//  </item>
//  


// --------------------------------  Field Item: PWR_CR3_EWUP2  -----------------------------------
// SVD Line: 2794

//  <item> SFDITEM_FIELD__PWR_CR3_EWUP2
//    <name> EWUP2 </name>
//    <rw> 
//    <i> [Bit 1] RW (@ 0x40007008) Enable Wakeup pin WKUP2 </i>
//    <check> 
//      <loc> ( (unsigned int) PWR_CR3 ) </loc>
//      <o.1..1> EWUP2
//    </check>
//  </item>
//  


// --------------------------------  Field Item: PWR_CR3_EWUP4  -----------------------------------
// SVD Line: 2800

//  <item> SFDITEM_FIELD__PWR_CR3_EWUP4
//    <name> EWUP4 </name>
//    <rw> 
//    <i> [Bit 3] RW (@ 0x40007008) Enable Wakeup pin WKUP4 </i>
//    <check> 
//      <loc> ( (unsigned int) PWR_CR3 ) </loc>
//      <o.3..3> EWUP4
//    </check>
//  </item>
//  


// --------------------------------  Field Item: PWR_CR3_EWUP5  -----------------------------------
// SVD Line: 2806

//  <item> SFDITEM_FIELD__PWR_CR3_EWUP5
//    <name> EWUP5 </name>
//    <rw> 
//    <i> [Bit 4] RW (@ 0x40007008) Enable WKUP5 wakeup pin </i>
//    <check> 
//      <loc> ( (unsigned int) PWR_CR3 ) </loc>
//      <o.4..4> EWUP5
//    </check>
//  </item>
//  


// --------------------------------  Field Item: PWR_CR3_EWUP6  -----------------------------------
// SVD Line: 2812

//  <item> SFDITEM_FIELD__PWR_CR3_EWUP6
//    <name> EWUP6 </name>
//    <rw> 
//    <i> [Bit 5] RW (@ 0x40007008) Enable WKUP6 wakeup pin </i>
//    <check> 
//      <loc> ( (unsigned int) PWR_CR3 ) </loc>
//      <o.5..5> EWUP6
//    </check>
//  </item>
//  


// ---------------------------------  Field Item: PWR_CR3_RRS  ------------------------------------
// SVD Line: 2818

//  <item> SFDITEM_FIELD__PWR_CR3_RRS
//    <name> RRS </name>
//    <rw> 
//    <i> [Bit 8] RW (@ 0x40007008) SRAM retention in Standby  mode </i>
//    <check> 
//      <loc> ( (unsigned int) PWR_CR3 ) </loc>
//      <o.8..8> RRS
//    </check>
//  </item>
//  


// --------------------------------  Field Item: PWR_CR3_ULPEN  -----------------------------------
// SVD Line: 2825

//  <item> SFDITEM_FIELD__PWR_CR3_ULPEN
//    <name> ULPEN </name>
//    <rw> 
//    <i> [Bit 9] RW (@ 0x40007008) Enable the periodical sampling mode for  PDR detection </i>
//    <check> 
//      <loc> ( (unsigned int) PWR_CR3 ) </loc>
//      <o.9..9> ULPEN
//    </check>
//  </item>
//  


// ---------------------------------  Field Item: PWR_CR3_APC  ------------------------------------
// SVD Line: 2832

//  <item> SFDITEM_FIELD__PWR_CR3_APC
//    <name> APC </name>
//    <rw> 
//    <i> [Bit 10] RW (@ 0x40007008) Apply pull-up and pull-down  configuration </i>
//    <check> 
//      <loc> ( (unsigned int) PWR_CR3 ) </loc>
//      <o.10..10> APC
//    </check>
//  </item>
//  


// --------------------------------  Field Item: PWR_CR3_EIWUL  -----------------------------------
// SVD Line: 2839

//  <item> SFDITEM_FIELD__PWR_CR3_EIWUL
//    <name> EIWUL </name>
//    <rw> 
//    <i> [Bit 15] RW (@ 0x40007008) Enable internal wakeup  line </i>
//    <check> 
//      <loc> ( (unsigned int) PWR_CR3 ) </loc>
//      <o.15..15> EIWUL
//    </check>
//  </item>
//  


// ---------------------------------  Register RTree: PWR_CR3  ------------------------------------
// SVD Line: 2779

//  <rtree> SFDITEM_REG__PWR_CR3
//    <name> CR3 </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x40007008) Power control register 3 </i>
//    <loc> ( (unsigned int)((PWR_CR3 >> 0) & 0xFFFFFFFF), ((PWR_CR3 = (PWR_CR3 & ~(0x873BUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0x873B) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__PWR_CR3_EWUP1 </item>
//    <item> SFDITEM_FIELD__PWR_CR3_EWUP2 </item>
//    <item> SFDITEM_FIELD__PWR_CR3_EWUP4 </item>
//    <item> SFDITEM_FIELD__PWR_CR3_EWUP5 </item>
//    <item> SFDITEM_FIELD__PWR_CR3_EWUP6 </item>
//    <item> SFDITEM_FIELD__PWR_CR3_RRS </item>
//    <item> SFDITEM_FIELD__PWR_CR3_ULPEN </item>
//    <item> SFDITEM_FIELD__PWR_CR3_APC </item>
//    <item> SFDITEM_FIELD__PWR_CR3_EIWUL </item>
//  </rtree>
//  


// -----------------------------  Register Item Address: PWR_CR4  ---------------------------------
// SVD Line: 2848

unsigned int PWR_CR4 __AT (0x4000700C);



// ---------------------------------  Field Item: PWR_CR4_WP1  ------------------------------------
// SVD Line: 2857

//  <item> SFDITEM_FIELD__PWR_CR4_WP1
//    <name> WP1 </name>
//    <rw> 
//    <i> [Bit 0] RW (@ 0x4000700C) Wakeup pin WKUP1 polarity </i>
//    <check> 
//      <loc> ( (unsigned int) PWR_CR4 ) </loc>
//      <o.0..0> WP1
//    </check>
//  </item>
//  


// ---------------------------------  Field Item: PWR_CR4_WP2  ------------------------------------
// SVD Line: 2863

//  <item> SFDITEM_FIELD__PWR_CR4_WP2
//    <name> WP2 </name>
//    <rw> 
//    <i> [Bit 1] RW (@ 0x4000700C) Wakeup pin WKUP2 polarity </i>
//    <check> 
//      <loc> ( (unsigned int) PWR_CR4 ) </loc>
//      <o.1..1> WP2
//    </check>
//  </item>
//  


// ---------------------------------  Field Item: PWR_CR4_WP4  ------------------------------------
// SVD Line: 2869

//  <item> SFDITEM_FIELD__PWR_CR4_WP4
//    <name> WP4 </name>
//    <rw> 
//    <i> [Bit 3] RW (@ 0x4000700C) Wakeup pin WKUP4 polarity </i>
//    <check> 
//      <loc> ( (unsigned int) PWR_CR4 ) </loc>
//      <o.3..3> WP4
//    </check>
//  </item>
//  


// ---------------------------------  Field Item: PWR_CR4_WP5  ------------------------------------
// SVD Line: 2875

//  <item> SFDITEM_FIELD__PWR_CR4_WP5
//    <name> WP5 </name>
//    <rw> 
//    <i> [Bit 4] RW (@ 0x4000700C) Wakeup pin WKUP5 polarity </i>
//    <check> 
//      <loc> ( (unsigned int) PWR_CR4 ) </loc>
//      <o.4..4> WP5
//    </check>
//  </item>
//  


// ---------------------------------  Field Item: PWR_CR4_WP6  ------------------------------------
// SVD Line: 2881

//  <item> SFDITEM_FIELD__PWR_CR4_WP6
//    <name> WP6 </name>
//    <rw> 
//    <i> [Bit 5] RW (@ 0x4000700C) WKUP6 wakeup pin polarity </i>
//    <check> 
//      <loc> ( (unsigned int) PWR_CR4 ) </loc>
//      <o.5..5> WP6
//    </check>
//  </item>
//  


// ---------------------------------  Field Item: PWR_CR4_VBE  ------------------------------------
// SVD Line: 2887

//  <item> SFDITEM_FIELD__PWR_CR4_VBE
//    <name> VBE </name>
//    <rw> 
//    <i> [Bit 8] RW (@ 0x4000700C) VBAT battery charging  enable </i>
//    <check> 
//      <loc> ( (unsigned int) PWR_CR4 ) </loc>
//      <o.8..8> VBE
//    </check>
//  </item>
//  


// --------------------------------  Field Item: PWR_CR4_VBRS  ------------------------------------
// SVD Line: 2894

//  <item> SFDITEM_FIELD__PWR_CR4_VBRS
//    <name> VBRS </name>
//    <rw> 
//    <i> [Bit 9] RW (@ 0x4000700C) VBAT battery charging resistor  selection </i>
//    <check> 
//      <loc> ( (unsigned int) PWR_CR4 ) </loc>
//      <o.9..9> VBRS
//    </check>
//  </item>
//  


// ---------------------------------  Register RTree: PWR_CR4  ------------------------------------
// SVD Line: 2848

//  <rtree> SFDITEM_REG__PWR_CR4
//    <name> CR4 </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x4000700C) Power control register 4 </i>
//    <loc> ( (unsigned int)((PWR_CR4 >> 0) & 0xFFFFFFFF), ((PWR_CR4 = (PWR_CR4 & ~(0x33BUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0x33B) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__PWR_CR4_WP1 </item>
//    <item> SFDITEM_FIELD__PWR_CR4_WP2 </item>
//    <item> SFDITEM_FIELD__PWR_CR4_WP4 </item>
//    <item> SFDITEM_FIELD__PWR_CR4_WP5 </item>
//    <item> SFDITEM_FIELD__PWR_CR4_WP6 </item>
//    <item> SFDITEM_FIELD__PWR_CR4_VBE </item>
//    <item> SFDITEM_FIELD__PWR_CR4_VBRS </item>
//  </rtree>
//  


// -----------------------------  Register Item Address: PWR_SR1  ---------------------------------
// SVD Line: 2903

unsigned int PWR_SR1 __AT (0x40007010);



// --------------------------------  Field Item: PWR_SR1_WUF1  ------------------------------------
// SVD Line: 2912

//  <item> SFDITEM_FIELD__PWR_SR1_WUF1
//    <name> WUF1 </name>
//    <r> 
//    <i> [Bit 0] RO (@ 0x40007010) Wakeup flag 1 </i>
//    <check> 
//      <loc> ( (unsigned int) PWR_SR1 ) </loc>
//      <o.0..0> WUF1
//    </check>
//  </item>
//  


// --------------------------------  Field Item: PWR_SR1_WUF2  ------------------------------------
// SVD Line: 2918

//  <item> SFDITEM_FIELD__PWR_SR1_WUF2
//    <name> WUF2 </name>
//    <r> 
//    <i> [Bit 1] RO (@ 0x40007010) Wakeup flag 2 </i>
//    <check> 
//      <loc> ( (unsigned int) PWR_SR1 ) </loc>
//      <o.1..1> WUF2
//    </check>
//  </item>
//  


// --------------------------------  Field Item: PWR_SR1_WUF4  ------------------------------------
// SVD Line: 2924

//  <item> SFDITEM_FIELD__PWR_SR1_WUF4
//    <name> WUF4 </name>
//    <r> 
//    <i> [Bit 3] RO (@ 0x40007010) Wakeup flag 4 </i>
//    <check> 
//      <loc> ( (unsigned int) PWR_SR1 ) </loc>
//      <o.3..3> WUF4
//    </check>
//  </item>
//  


// --------------------------------  Field Item: PWR_SR1_WUF5  ------------------------------------
// SVD Line: 2930

//  <item> SFDITEM_FIELD__PWR_SR1_WUF5
//    <name> WUF5 </name>
//    <r> 
//    <i> [Bit 4] RO (@ 0x40007010) Wakeup flag 5 </i>
//    <check> 
//      <loc> ( (unsigned int) PWR_SR1 ) </loc>
//      <o.4..4> WUF5
//    </check>
//  </item>
//  


// --------------------------------  Field Item: PWR_SR1_WUF6  ------------------------------------
// SVD Line: 2936

//  <item> SFDITEM_FIELD__PWR_SR1_WUF6
//    <name> WUF6 </name>
//    <r> 
//    <i> [Bit 5] RO (@ 0x40007010) Wakeup flag 6 </i>
//    <check> 
//      <loc> ( (unsigned int) PWR_SR1 ) </loc>
//      <o.5..5> WUF6
//    </check>
//  </item>
//  


// ---------------------------------  Field Item: PWR_SR1_SBF  ------------------------------------
// SVD Line: 2942

//  <item> SFDITEM_FIELD__PWR_SR1_SBF
//    <name> SBF </name>
//    <r> 
//    <i> [Bit 8] RO (@ 0x40007010) Standby flag </i>
//    <check> 
//      <loc> ( (unsigned int) PWR_SR1 ) </loc>
//      <o.8..8> SBF
//    </check>
//  </item>
//  


// --------------------------------  Field Item: PWR_SR1_WUFI  ------------------------------------
// SVD Line: 2948

//  <item> SFDITEM_FIELD__PWR_SR1_WUFI
//    <name> WUFI </name>
//    <r> 
//    <i> [Bit 15] RO (@ 0x40007010) Wakeup flag internal </i>
//    <check> 
//      <loc> ( (unsigned int) PWR_SR1 ) </loc>
//      <o.15..15> WUFI
//    </check>
//  </item>
//  


// ---------------------------------  Register RTree: PWR_SR1  ------------------------------------
// SVD Line: 2903

//  <rtree> SFDITEM_REG__PWR_SR1
//    <name> SR1 </name>
//    <r> 
//    <i> [Bits 31..0] RO (@ 0x40007010) Power status register 1 </i>
//    <loc> ( (unsigned int)((PWR_SR1 >> 0) & 0xFFFFFFFF) ) </loc>
//    <item> SFDITEM_FIELD__PWR_SR1_WUF1 </item>
//    <item> SFDITEM_FIELD__PWR_SR1_WUF2 </item>
//    <item> SFDITEM_FIELD__PWR_SR1_WUF4 </item>
//    <item> SFDITEM_FIELD__PWR_SR1_WUF5 </item>
//    <item> SFDITEM_FIELD__PWR_SR1_WUF6 </item>
//    <item> SFDITEM_FIELD__PWR_SR1_SBF </item>
//    <item> SFDITEM_FIELD__PWR_SR1_WUFI </item>
//  </rtree>
//  


// -----------------------------  Register Item Address: PWR_SR2  ---------------------------------
// SVD Line: 2956

unsigned int PWR_SR2 __AT (0x40007014);



// --------------------------------  Field Item: PWR_SR2_PVDO  ------------------------------------
// SVD Line: 2965

//  <item> SFDITEM_FIELD__PWR_SR2_PVDO
//    <name> PVDO </name>
//    <r> 
//    <i> [Bit 11] RO (@ 0x40007014) Power voltage detector  output </i>
//    <check> 
//      <loc> ( (unsigned int) PWR_SR2 ) </loc>
//      <o.11..11> PVDO
//    </check>
//  </item>
//  


// --------------------------------  Field Item: PWR_SR2_VOSF  ------------------------------------
// SVD Line: 2972

//  <item> SFDITEM_FIELD__PWR_SR2_VOSF
//    <name> VOSF </name>
//    <r> 
//    <i> [Bit 10] RO (@ 0x40007014) Voltage scaling flag </i>
//    <check> 
//      <loc> ( (unsigned int) PWR_SR2 ) </loc>
//      <o.10..10> VOSF
//    </check>
//  </item>
//  


// -------------------------------  Field Item: PWR_SR2_REGLPF  -----------------------------------
// SVD Line: 2978

//  <item> SFDITEM_FIELD__PWR_SR2_REGLPF
//    <name> REGLPF </name>
//    <r> 
//    <i> [Bit 9] RO (@ 0x40007014) Low-power regulator flag </i>
//    <check> 
//      <loc> ( (unsigned int) PWR_SR2 ) </loc>
//      <o.9..9> REGLPF
//    </check>
//  </item>
//  


// -------------------------------  Field Item: PWR_SR2_REGLPS  -----------------------------------
// SVD Line: 2984

//  <item> SFDITEM_FIELD__PWR_SR2_REGLPS
//    <name> REGLPS </name>
//    <r> 
//    <i> [Bit 8] RO (@ 0x40007014) Low-power regulator  started </i>
//    <check> 
//      <loc> ( (unsigned int) PWR_SR2 ) </loc>
//      <o.8..8> REGLPS
//    </check>
//  </item>
//  


// ------------------------------  Field Item: PWR_SR2_FLASH_RDY  ---------------------------------
// SVD Line: 2991

//  <item> SFDITEM_FIELD__PWR_SR2_FLASH_RDY
//    <name> FLASH_RDY </name>
//    <r> 
//    <i> [Bit 7] RO (@ 0x40007014) Flash ready flag </i>
//    <check> 
//      <loc> ( (unsigned int) PWR_SR2 ) </loc>
//      <o.7..7> FLASH_RDY
//    </check>
//  </item>
//  


// ---------------------------------  Register RTree: PWR_SR2  ------------------------------------
// SVD Line: 2956

//  <rtree> SFDITEM_REG__PWR_SR2
//    <name> SR2 </name>
//    <r> 
//    <i> [Bits 31..0] RO (@ 0x40007014) Power status register 2 </i>
//    <loc> ( (unsigned int)((PWR_SR2 >> 0) & 0xFFFFFFFF) ) </loc>
//    <item> SFDITEM_FIELD__PWR_SR2_PVDO </item>
//    <item> SFDITEM_FIELD__PWR_SR2_VOSF </item>
//    <item> SFDITEM_FIELD__PWR_SR2_REGLPF </item>
//    <item> SFDITEM_FIELD__PWR_SR2_REGLPS </item>
//    <item> SFDITEM_FIELD__PWR_SR2_FLASH_RDY </item>
//  </rtree>
//  


// -----------------------------  Register Item Address: PWR_SCR  ---------------------------------
// SVD Line: 2999

unsigned int PWR_SCR __AT (0x40007018);



// --------------------------------  Field Item: PWR_SCR_CSBF  ------------------------------------
// SVD Line: 3008

//  <item> SFDITEM_FIELD__PWR_SCR_CSBF
//    <name> CSBF </name>
//    <w> 
//    <i> [Bit 8] WO (@ 0x40007018) Clear standby flag </i>
//    <check> 
//      <loc> ( (unsigned int) PWR_SCR ) </loc>
//      <o.8..8> CSBF
//    </check>
//  </item>
//  


// --------------------------------  Field Item: PWR_SCR_CWUF6  -----------------------------------
// SVD Line: 3014

//  <item> SFDITEM_FIELD__PWR_SCR_CWUF6
//    <name> CWUF6 </name>
//    <w> 
//    <i> [Bit 5] WO (@ 0x40007018) Clear wakeup flag 6 </i>
//    <check> 
//      <loc> ( (unsigned int) PWR_SCR ) </loc>
//      <o.5..5> CWUF6
//    </check>
//  </item>
//  


// --------------------------------  Field Item: PWR_SCR_CWUF5  -----------------------------------
// SVD Line: 3020

//  <item> SFDITEM_FIELD__PWR_SCR_CWUF5
//    <name> CWUF5 </name>
//    <w> 
//    <i> [Bit 4] WO (@ 0x40007018) Clear wakeup flag 5 </i>
//    <check> 
//      <loc> ( (unsigned int) PWR_SCR ) </loc>
//      <o.4..4> CWUF5
//    </check>
//  </item>
//  


// --------------------------------  Field Item: PWR_SCR_CWUF4  -----------------------------------
// SVD Line: 3026

//  <item> SFDITEM_FIELD__PWR_SCR_CWUF4
//    <name> CWUF4 </name>
//    <w> 
//    <i> [Bit 3] WO (@ 0x40007018) Clear wakeup flag 4 </i>
//    <check> 
//      <loc> ( (unsigned int) PWR_SCR ) </loc>
//      <o.3..3> CWUF4
//    </check>
//  </item>
//  


// --------------------------------  Field Item: PWR_SCR_CWUF2  -----------------------------------
// SVD Line: 3032

//  <item> SFDITEM_FIELD__PWR_SCR_CWUF2
//    <name> CWUF2 </name>
//    <w> 
//    <i> [Bit 1] WO (@ 0x40007018) Clear wakeup flag 2 </i>
//    <check> 
//      <loc> ( (unsigned int) PWR_SCR ) </loc>
//      <o.1..1> CWUF2
//    </check>
//  </item>
//  


// --------------------------------  Field Item: PWR_SCR_CWUF1  -----------------------------------
// SVD Line: 3038

//  <item> SFDITEM_FIELD__PWR_SCR_CWUF1
//    <name> CWUF1 </name>
//    <w> 
//    <i> [Bit 0] WO (@ 0x40007018) Clear wakeup flag 1 </i>
//    <check> 
//      <loc> ( (unsigned int) PWR_SCR ) </loc>
//      <o.0..0> CWUF1
//    </check>
//  </item>
//  


// ---------------------------------  Register RTree: PWR_SCR  ------------------------------------
// SVD Line: 2999

//  <rtree> SFDITEM_REG__PWR_SCR
//    <name> SCR </name>
//    <w> 
//    <i> [Bits 31..0] WO (@ 0x40007018) Power status clear register </i>
//    <loc> ( (unsigned int)((PWR_SCR >> 0) & 0xFFFFFFFF), ((PWR_SCR = (PWR_SCR & ~(0x13BUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0x13B) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__PWR_SCR_CSBF </item>
//    <item> SFDITEM_FIELD__PWR_SCR_CWUF6 </item>
//    <item> SFDITEM_FIELD__PWR_SCR_CWUF5 </item>
//    <item> SFDITEM_FIELD__PWR_SCR_CWUF4 </item>
//    <item> SFDITEM_FIELD__PWR_SCR_CWUF2 </item>
//    <item> SFDITEM_FIELD__PWR_SCR_CWUF1 </item>
//  </rtree>
//  


// ----------------------------  Register Item Address: PWR_PUCRA  --------------------------------
// SVD Line: 3046

unsigned int PWR_PUCRA __AT (0x40007020);



// -------------------------------  Field Item: PWR_PUCRA_PU15  -----------------------------------
// SVD Line: 3056

//  <item> SFDITEM_FIELD__PWR_PUCRA_PU15
//    <name> PU15 </name>
//    <rw> 
//    <i> [Bit 15] RW (@ 0x40007020) Port A pull-up bit y  (y=0..15) </i>
//    <check> 
//      <loc> ( (unsigned int) PWR_PUCRA ) </loc>
//      <o.15..15> PU15
//    </check>
//  </item>
//  


// -------------------------------  Field Item: PWR_PUCRA_PU14  -----------------------------------
// SVD Line: 3063

//  <item> SFDITEM_FIELD__PWR_PUCRA_PU14
//    <name> PU14 </name>
//    <rw> 
//    <i> [Bit 14] RW (@ 0x40007020) Port A pull-up bit y  (y=0..15) </i>
//    <check> 
//      <loc> ( (unsigned int) PWR_PUCRA ) </loc>
//      <o.14..14> PU14
//    </check>
//  </item>
//  


// -------------------------------  Field Item: PWR_PUCRA_PU13  -----------------------------------
// SVD Line: 3070

//  <item> SFDITEM_FIELD__PWR_PUCRA_PU13
//    <name> PU13 </name>
//    <rw> 
//    <i> [Bit 13] RW (@ 0x40007020) Port A pull-up bit y  (y=0..15) </i>
//    <check> 
//      <loc> ( (unsigned int) PWR_PUCRA ) </loc>
//      <o.13..13> PU13
//    </check>
//  </item>
//  


// -------------------------------  Field Item: PWR_PUCRA_PU12  -----------------------------------
// SVD Line: 3077

//  <item> SFDITEM_FIELD__PWR_PUCRA_PU12
//    <name> PU12 </name>
//    <rw> 
//    <i> [Bit 12] RW (@ 0x40007020) Port A pull-up bit y  (y=0..15) </i>
//    <check> 
//      <loc> ( (unsigned int) PWR_PUCRA ) </loc>
//      <o.12..12> PU12
//    </check>
//  </item>
//  


// -------------------------------  Field Item: PWR_PUCRA_PU11  -----------------------------------
// SVD Line: 3084

//  <item> SFDITEM_FIELD__PWR_PUCRA_PU11
//    <name> PU11 </name>
//    <rw> 
//    <i> [Bit 11] RW (@ 0x40007020) Port A pull-up bit y  (y=0..15) </i>
//    <check> 
//      <loc> ( (unsigned int) PWR_PUCRA ) </loc>
//      <o.11..11> PU11
//    </check>
//  </item>
//  


// -------------------------------  Field Item: PWR_PUCRA_PU10  -----------------------------------
// SVD Line: 3091

//  <item> SFDITEM_FIELD__PWR_PUCRA_PU10
//    <name> PU10 </name>
//    <rw> 
//    <i> [Bit 10] RW (@ 0x40007020) Port A pull-up bit y  (y=0..15) </i>
//    <check> 
//      <loc> ( (unsigned int) PWR_PUCRA ) </loc>
//      <o.10..10> PU10
//    </check>
//  </item>
//  


// --------------------------------  Field Item: PWR_PUCRA_PU9  -----------------------------------
// SVD Line: 3098

//  <item> SFDITEM_FIELD__PWR_PUCRA_PU9
//    <name> PU9 </name>
//    <rw> 
//    <i> [Bit 9] RW (@ 0x40007020) Port A pull-up bit y  (y=0..15) </i>
//    <check> 
//      <loc> ( (unsigned int) PWR_PUCRA ) </loc>
//      <o.9..9> PU9
//    </check>
//  </item>
//  


// --------------------------------  Field Item: PWR_PUCRA_PU8  -----------------------------------
// SVD Line: 3105

//  <item> SFDITEM_FIELD__PWR_PUCRA_PU8
//    <name> PU8 </name>
//    <rw> 
//    <i> [Bit 8] RW (@ 0x40007020) Port A pull-up bit y  (y=0..15) </i>
//    <check> 
//      <loc> ( (unsigned int) PWR_PUCRA ) </loc>
//      <o.8..8> PU8
//    </check>
//  </item>
//  


// --------------------------------  Field Item: PWR_PUCRA_PU7  -----------------------------------
// SVD Line: 3112

//  <item> SFDITEM_FIELD__PWR_PUCRA_PU7
//    <name> PU7 </name>
//    <rw> 
//    <i> [Bit 7] RW (@ 0x40007020) Port A pull-up bit y  (y=0..15) </i>
//    <check> 
//      <loc> ( (unsigned int) PWR_PUCRA ) </loc>
//      <o.7..7> PU7
//    </check>
//  </item>
//  


// --------------------------------  Field Item: PWR_PUCRA_PU6  -----------------------------------
// SVD Line: 3119

//  <item> SFDITEM_FIELD__PWR_PUCRA_PU6
//    <name> PU6 </name>
//    <rw> 
//    <i> [Bit 6] RW (@ 0x40007020) Port A pull-up bit y  (y=0..15) </i>
//    <check> 
//      <loc> ( (unsigned int) PWR_PUCRA ) </loc>
//      <o.6..6> PU6
//    </check>
//  </item>
//  


// --------------------------------  Field Item: PWR_PUCRA_PU5  -----------------------------------
// SVD Line: 3126

//  <item> SFDITEM_FIELD__PWR_PUCRA_PU5
//    <name> PU5 </name>
//    <rw> 
//    <i> [Bit 5] RW (@ 0x40007020) Port A pull-up bit y  (y=0..15) </i>
//    <check> 
//      <loc> ( (unsigned int) PWR_PUCRA ) </loc>
//      <o.5..5> PU5
//    </check>
//  </item>
//  


// --------------------------------  Field Item: PWR_PUCRA_PU4  -----------------------------------
// SVD Line: 3133

//  <item> SFDITEM_FIELD__PWR_PUCRA_PU4
//    <name> PU4 </name>
//    <rw> 
//    <i> [Bit 4] RW (@ 0x40007020) Port A pull-up bit y  (y=0..15) </i>
//    <check> 
//      <loc> ( (unsigned int) PWR_PUCRA ) </loc>
//      <o.4..4> PU4
//    </check>
//  </item>
//  


// --------------------------------  Field Item: PWR_PUCRA_PU3  -----------------------------------
// SVD Line: 3140

//  <item> SFDITEM_FIELD__PWR_PUCRA_PU3
//    <name> PU3 </name>
//    <rw> 
//    <i> [Bit 3] RW (@ 0x40007020) Port A pull-up bit y  (y=0..15) </i>
//    <check> 
//      <loc> ( (unsigned int) PWR_PUCRA ) </loc>
//      <o.3..3> PU3
//    </check>
//  </item>
//  


// --------------------------------  Field Item: PWR_PUCRA_PU2  -----------------------------------
// SVD Line: 3147

//  <item> SFDITEM_FIELD__PWR_PUCRA_PU2
//    <name> PU2 </name>
//    <rw> 
//    <i> [Bit 2] RW (@ 0x40007020) Port A pull-up bit y  (y=0..15) </i>
//    <check> 
//      <loc> ( (unsigned int) PWR_PUCRA ) </loc>
//      <o.2..2> PU2
//    </check>
//  </item>
//  


// --------------------------------  Field Item: PWR_PUCRA_PU1  -----------------------------------
// SVD Line: 3154

//  <item> SFDITEM_FIELD__PWR_PUCRA_PU1
//    <name> PU1 </name>
//    <rw> 
//    <i> [Bit 1] RW (@ 0x40007020) Port A pull-up bit y  (y=0..15) </i>
//    <check> 
//      <loc> ( (unsigned int) PWR_PUCRA ) </loc>
//      <o.1..1> PU1
//    </check>
//  </item>
//  


// --------------------------------  Field Item: PWR_PUCRA_PU0  -----------------------------------
// SVD Line: 3161

//  <item> SFDITEM_FIELD__PWR_PUCRA_PU0
//    <name> PU0 </name>
//    <rw> 
//    <i> [Bit 0] RW (@ 0x40007020) Port A pull-up bit y  (y=0..15) </i>
//    <check> 
//      <loc> ( (unsigned int) PWR_PUCRA ) </loc>
//      <o.0..0> PU0
//    </check>
//  </item>
//  


// --------------------------------  Register RTree: PWR_PUCRA  -----------------------------------
// SVD Line: 3046

//  <rtree> SFDITEM_REG__PWR_PUCRA
//    <name> PUCRA </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x40007020) Power Port A pull-up control  register </i>
//    <loc> ( (unsigned int)((PWR_PUCRA >> 0) & 0xFFFFFFFF), ((PWR_PUCRA = (PWR_PUCRA & ~(0xFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__PWR_PUCRA_PU15 </item>
//    <item> SFDITEM_FIELD__PWR_PUCRA_PU14 </item>
//    <item> SFDITEM_FIELD__PWR_PUCRA_PU13 </item>
//    <item> SFDITEM_FIELD__PWR_PUCRA_PU12 </item>
//    <item> SFDITEM_FIELD__PWR_PUCRA_PU11 </item>
//    <item> SFDITEM_FIELD__PWR_PUCRA_PU10 </item>
//    <item> SFDITEM_FIELD__PWR_PUCRA_PU9 </item>
//    <item> SFDITEM_FIELD__PWR_PUCRA_PU8 </item>
//    <item> SFDITEM_FIELD__PWR_PUCRA_PU7 </item>
//    <item> SFDITEM_FIELD__PWR_PUCRA_PU6 </item>
//    <item> SFDITEM_FIELD__PWR_PUCRA_PU5 </item>
//    <item> SFDITEM_FIELD__PWR_PUCRA_PU4 </item>
//    <item> SFDITEM_FIELD__PWR_PUCRA_PU3 </item>
//    <item> SFDITEM_FIELD__PWR_PUCRA_PU2 </item>
//    <item> SFDITEM_FIELD__PWR_PUCRA_PU1 </item>
//    <item> SFDITEM_FIELD__PWR_PUCRA_PU0 </item>
//  </rtree>
//  


// ----------------------------  Register Item Address: PWR_PDCRA  --------------------------------
// SVD Line: 3170

unsigned int PWR_PDCRA __AT (0x40007024);



// -------------------------------  Field Item: PWR_PDCRA_PD15  -----------------------------------
// SVD Line: 3180

//  <item> SFDITEM_FIELD__PWR_PDCRA_PD15
//    <name> PD15 </name>
//    <rw> 
//    <i> [Bit 15] RW (@ 0x40007024) Port A pull-down bit y  (y=0..15) </i>
//    <check> 
//      <loc> ( (unsigned int) PWR_PDCRA ) </loc>
//      <o.15..15> PD15
//    </check>
//  </item>
//  


// -------------------------------  Field Item: PWR_PDCRA_PD14  -----------------------------------
// SVD Line: 3187

//  <item> SFDITEM_FIELD__PWR_PDCRA_PD14
//    <name> PD14 </name>
//    <rw> 
//    <i> [Bit 14] RW (@ 0x40007024) Port A pull-down bit y  (y=0..15) </i>
//    <check> 
//      <loc> ( (unsigned int) PWR_PDCRA ) </loc>
//      <o.14..14> PD14
//    </check>
//  </item>
//  


// -------------------------------  Field Item: PWR_PDCRA_PD13  -----------------------------------
// SVD Line: 3194

//  <item> SFDITEM_FIELD__PWR_PDCRA_PD13
//    <name> PD13 </name>
//    <rw> 
//    <i> [Bit 13] RW (@ 0x40007024) Port A pull-down bit y  (y=0..15) </i>
//    <check> 
//      <loc> ( (unsigned int) PWR_PDCRA ) </loc>
//      <o.13..13> PD13
//    </check>
//  </item>
//  


// -------------------------------  Field Item: PWR_PDCRA_PD12  -----------------------------------
// SVD Line: 3201

//  <item> SFDITEM_FIELD__PWR_PDCRA_PD12
//    <name> PD12 </name>
//    <rw> 
//    <i> [Bit 12] RW (@ 0x40007024) Port A pull-down bit y  (y=0..15) </i>
//    <check> 
//      <loc> ( (unsigned int) PWR_PDCRA ) </loc>
//      <o.12..12> PD12
//    </check>
//  </item>
//  


// -------------------------------  Field Item: PWR_PDCRA_PD11  -----------------------------------
// SVD Line: 3208

//  <item> SFDITEM_FIELD__PWR_PDCRA_PD11
//    <name> PD11 </name>
//    <rw> 
//    <i> [Bit 11] RW (@ 0x40007024) Port A pull-down bit y  (y=0..15) </i>
//    <check> 
//      <loc> ( (unsigned int) PWR_PDCRA ) </loc>
//      <o.11..11> PD11
//    </check>
//  </item>
//  


// -------------------------------  Field Item: PWR_PDCRA_PD10  -----------------------------------
// SVD Line: 3215

//  <item> SFDITEM_FIELD__PWR_PDCRA_PD10
//    <name> PD10 </name>
//    <rw> 
//    <i> [Bit 10] RW (@ 0x40007024) Port A pull-down bit y  (y=0..15) </i>
//    <check> 
//      <loc> ( (unsigned int) PWR_PDCRA ) </loc>
//      <o.10..10> PD10
//    </check>
//  </item>
//  


// --------------------------------  Field Item: PWR_PDCRA_PD9  -----------------------------------
// SVD Line: 3222

//  <item> SFDITEM_FIELD__PWR_PDCRA_PD9
//    <name> PD9 </name>
//    <rw> 
//    <i> [Bit 9] RW (@ 0x40007024) Port A pull-down bit y  (y=0..15) </i>
//    <check> 
//      <loc> ( (unsigned int) PWR_PDCRA ) </loc>
//      <o.9..9> PD9
//    </check>
//  </item>
//  


// --------------------------------  Field Item: PWR_PDCRA_PD8  -----------------------------------
// SVD Line: 3229

//  <item> SFDITEM_FIELD__PWR_PDCRA_PD8
//    <name> PD8 </name>
//    <rw> 
//    <i> [Bit 8] RW (@ 0x40007024) Port A pull-down bit y  (y=0..15) </i>
//    <check> 
//      <loc> ( (unsigned int) PWR_PDCRA ) </loc>
//      <o.8..8> PD8
//    </check>
//  </item>
//  


// --------------------------------  Field Item: PWR_PDCRA_PD7  -----------------------------------
// SVD Line: 3236

//  <item> SFDITEM_FIELD__PWR_PDCRA_PD7
//    <name> PD7 </name>
//    <rw> 
//    <i> [Bit 7] RW (@ 0x40007024) Port A pull-down bit y  (y=0..15) </i>
//    <check> 
//      <loc> ( (unsigned int) PWR_PDCRA ) </loc>
//      <o.7..7> PD7
//    </check>
//  </item>
//  


// --------------------------------  Field Item: PWR_PDCRA_PD6  -----------------------------------
// SVD Line: 3243

//  <item> SFDITEM_FIELD__PWR_PDCRA_PD6
//    <name> PD6 </name>
//    <rw> 
//    <i> [Bit 6] RW (@ 0x40007024) Port A pull-down bit y  (y=0..15) </i>
//    <check> 
//      <loc> ( (unsigned int) PWR_PDCRA ) </loc>
//      <o.6..6> PD6
//    </check>
//  </item>
//  


// --------------------------------  Field Item: PWR_PDCRA_PD5  -----------------------------------
// SVD Line: 3250

//  <item> SFDITEM_FIELD__PWR_PDCRA_PD5
//    <name> PD5 </name>
//    <rw> 
//    <i> [Bit 5] RW (@ 0x40007024) Port A pull-down bit y  (y=0..15) </i>
//    <check> 
//      <loc> ( (unsigned int) PWR_PDCRA ) </loc>
//      <o.5..5> PD5
//    </check>
//  </item>
//  


// --------------------------------  Field Item: PWR_PDCRA_PD4  -----------------------------------
// SVD Line: 3257

//  <item> SFDITEM_FIELD__PWR_PDCRA_PD4
//    <name> PD4 </name>
//    <rw> 
//    <i> [Bit 4] RW (@ 0x40007024) Port A pull-down bit y  (y=0..15) </i>
//    <check> 
//      <loc> ( (unsigned int) PWR_PDCRA ) </loc>
//      <o.4..4> PD4
//    </check>
//  </item>
//  


// --------------------------------  Field Item: PWR_PDCRA_PD3  -----------------------------------
// SVD Line: 3264

//  <item> SFDITEM_FIELD__PWR_PDCRA_PD3
//    <name> PD3 </name>
//    <rw> 
//    <i> [Bit 3] RW (@ 0x40007024) Port A pull-down bit y  (y=0..15) </i>
//    <check> 
//      <loc> ( (unsigned int) PWR_PDCRA ) </loc>
//      <o.3..3> PD3
//    </check>
//  </item>
//  


// --------------------------------  Field Item: PWR_PDCRA_PD2  -----------------------------------
// SVD Line: 3271

//  <item> SFDITEM_FIELD__PWR_PDCRA_PD2
//    <name> PD2 </name>
//    <rw> 
//    <i> [Bit 2] RW (@ 0x40007024) Port A pull-down bit y  (y=0..15) </i>
//    <check> 
//      <loc> ( (unsigned int) PWR_PDCRA ) </loc>
//      <o.2..2> PD2
//    </check>
//  </item>
//  


// --------------------------------  Field Item: PWR_PDCRA_PD1  -----------------------------------
// SVD Line: 3278

//  <item> SFDITEM_FIELD__PWR_PDCRA_PD1
//    <name> PD1 </name>
//    <rw> 
//    <i> [Bit 1] RW (@ 0x40007024) Port A pull-down bit y  (y=0..15) </i>
//    <check> 
//      <loc> ( (unsigned int) PWR_PDCRA ) </loc>
//      <o.1..1> PD1
//    </check>
//  </item>
//  


// --------------------------------  Field Item: PWR_PDCRA_PD0  -----------------------------------
// SVD Line: 3285

//  <item> SFDITEM_FIELD__PWR_PDCRA_PD0
//    <name> PD0 </name>
//    <rw> 
//    <i> [Bit 0] RW (@ 0x40007024) Port A pull-down bit y  (y=0..15) </i>
//    <check> 
//      <loc> ( (unsigned int) PWR_PDCRA ) </loc>
//      <o.0..0> PD0
//    </check>
//  </item>
//  


// --------------------------------  Register RTree: PWR_PDCRA  -----------------------------------
// SVD Line: 3170

//  <rtree> SFDITEM_REG__PWR_PDCRA
//    <name> PDCRA </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x40007024) Power Port A pull-down control  register </i>
//    <loc> ( (unsigned int)((PWR_PDCRA >> 0) & 0xFFFFFFFF), ((PWR_PDCRA = (PWR_PDCRA & ~(0xFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__PWR_PDCRA_PD15 </item>
//    <item> SFDITEM_FIELD__PWR_PDCRA_PD14 </item>
//    <item> SFDITEM_FIELD__PWR_PDCRA_PD13 </item>
//    <item> SFDITEM_FIELD__PWR_PDCRA_PD12 </item>
//    <item> SFDITEM_FIELD__PWR_PDCRA_PD11 </item>
//    <item> SFDITEM_FIELD__PWR_PDCRA_PD10 </item>
//    <item> SFDITEM_FIELD__PWR_PDCRA_PD9 </item>
//    <item> SFDITEM_FIELD__PWR_PDCRA_PD8 </item>
//    <item> SFDITEM_FIELD__PWR_PDCRA_PD7 </item>
//    <item> SFDITEM_FIELD__PWR_PDCRA_PD6 </item>
//    <item> SFDITEM_FIELD__PWR_PDCRA_PD5 </item>
//    <item> SFDITEM_FIELD__PWR_PDCRA_PD4 </item>
//    <item> SFDITEM_FIELD__PWR_PDCRA_PD3 </item>
//    <item> SFDITEM_FIELD__PWR_PDCRA_PD2 </item>
//    <item> SFDITEM_FIELD__PWR_PDCRA_PD1 </item>
//    <item> SFDITEM_FIELD__PWR_PDCRA_PD0 </item>
//  </rtree>
//  


// ----------------------------  Register Item Address: PWR_PUCRB  --------------------------------
// SVD Line: 3294

unsigned int PWR_PUCRB __AT (0x40007028);



// -------------------------------  Field Item: PWR_PUCRB_PU15  -----------------------------------
// SVD Line: 3304

//  <item> SFDITEM_FIELD__PWR_PUCRB_PU15
//    <name> PU15 </name>
//    <rw> 
//    <i> [Bit 15] RW (@ 0x40007028) Port B pull-up bit y  (y=0..15) </i>
//    <check> 
//      <loc> ( (unsigned int) PWR_PUCRB ) </loc>
//      <o.15..15> PU15
//    </check>
//  </item>
//  


// -------------------------------  Field Item: PWR_PUCRB_PU14  -----------------------------------
// SVD Line: 3311

//  <item> SFDITEM_FIELD__PWR_PUCRB_PU14
//    <name> PU14 </name>
//    <rw> 
//    <i> [Bit 14] RW (@ 0x40007028) Port B pull-up bit y  (y=0..15) </i>
//    <check> 
//      <loc> ( (unsigned int) PWR_PUCRB ) </loc>
//      <o.14..14> PU14
//    </check>
//  </item>
//  


// -------------------------------  Field Item: PWR_PUCRB_PU13  -----------------------------------
// SVD Line: 3318

//  <item> SFDITEM_FIELD__PWR_PUCRB_PU13
//    <name> PU13 </name>
//    <rw> 
//    <i> [Bit 13] RW (@ 0x40007028) Port B pull-up bit y  (y=0..15) </i>
//    <check> 
//      <loc> ( (unsigned int) PWR_PUCRB ) </loc>
//      <o.13..13> PU13
//    </check>
//  </item>
//  


// -------------------------------  Field Item: PWR_PUCRB_PU12  -----------------------------------
// SVD Line: 3325

//  <item> SFDITEM_FIELD__PWR_PUCRB_PU12
//    <name> PU12 </name>
//    <rw> 
//    <i> [Bit 12] RW (@ 0x40007028) Port B pull-up bit y  (y=0..15) </i>
//    <check> 
//      <loc> ( (unsigned int) PWR_PUCRB ) </loc>
//      <o.12..12> PU12
//    </check>
//  </item>
//  


// -------------------------------  Field Item: PWR_PUCRB_PU11  -----------------------------------
// SVD Line: 3332

//  <item> SFDITEM_FIELD__PWR_PUCRB_PU11
//    <name> PU11 </name>
//    <rw> 
//    <i> [Bit 11] RW (@ 0x40007028) Port B pull-up bit y  (y=0..15) </i>
//    <check> 
//      <loc> ( (unsigned int) PWR_PUCRB ) </loc>
//      <o.11..11> PU11
//    </check>
//  </item>
//  


// -------------------------------  Field Item: PWR_PUCRB_PU10  -----------------------------------
// SVD Line: 3339

//  <item> SFDITEM_FIELD__PWR_PUCRB_PU10
//    <name> PU10 </name>
//    <rw> 
//    <i> [Bit 10] RW (@ 0x40007028) Port B pull-up bit y  (y=0..15) </i>
//    <check> 
//      <loc> ( (unsigned int) PWR_PUCRB ) </loc>
//      <o.10..10> PU10
//    </check>
//  </item>
//  


// --------------------------------  Field Item: PWR_PUCRB_PU9  -----------------------------------
// SVD Line: 3346

//  <item> SFDITEM_FIELD__PWR_PUCRB_PU9
//    <name> PU9 </name>
//    <rw> 
//    <i> [Bit 9] RW (@ 0x40007028) Port B pull-up bit y  (y=0..15) </i>
//    <check> 
//      <loc> ( (unsigned int) PWR_PUCRB ) </loc>
//      <o.9..9> PU9
//    </check>
//  </item>
//  


// --------------------------------  Field Item: PWR_PUCRB_PU8  -----------------------------------
// SVD Line: 3353

//  <item> SFDITEM_FIELD__PWR_PUCRB_PU8
//    <name> PU8 </name>
//    <rw> 
//    <i> [Bit 8] RW (@ 0x40007028) Port B pull-up bit y  (y=0..15) </i>
//    <check> 
//      <loc> ( (unsigned int) PWR_PUCRB ) </loc>
//      <o.8..8> PU8
//    </check>
//  </item>
//  


// --------------------------------  Field Item: PWR_PUCRB_PU7  -----------------------------------
// SVD Line: 3360

//  <item> SFDITEM_FIELD__PWR_PUCRB_PU7
//    <name> PU7 </name>
//    <rw> 
//    <i> [Bit 7] RW (@ 0x40007028) Port B pull-up bit y  (y=0..15) </i>
//    <check> 
//      <loc> ( (unsigned int) PWR_PUCRB ) </loc>
//      <o.7..7> PU7
//    </check>
//  </item>
//  


// --------------------------------  Field Item: PWR_PUCRB_PU6  -----------------------------------
// SVD Line: 3367

//  <item> SFDITEM_FIELD__PWR_PUCRB_PU6
//    <name> PU6 </name>
//    <rw> 
//    <i> [Bit 6] RW (@ 0x40007028) Port B pull-up bit y  (y=0..15) </i>
//    <check> 
//      <loc> ( (unsigned int) PWR_PUCRB ) </loc>
//      <o.6..6> PU6
//    </check>
//  </item>
//  


// --------------------------------  Field Item: PWR_PUCRB_PU5  -----------------------------------
// SVD Line: 3374

//  <item> SFDITEM_FIELD__PWR_PUCRB_PU5
//    <name> PU5 </name>
//    <rw> 
//    <i> [Bit 5] RW (@ 0x40007028) Port B pull-up bit y  (y=0..15) </i>
//    <check> 
//      <loc> ( (unsigned int) PWR_PUCRB ) </loc>
//      <o.5..5> PU5
//    </check>
//  </item>
//  


// --------------------------------  Field Item: PWR_PUCRB_PU4  -----------------------------------
// SVD Line: 3381

//  <item> SFDITEM_FIELD__PWR_PUCRB_PU4
//    <name> PU4 </name>
//    <rw> 
//    <i> [Bit 4] RW (@ 0x40007028) Port B pull-up bit y  (y=0..15) </i>
//    <check> 
//      <loc> ( (unsigned int) PWR_PUCRB ) </loc>
//      <o.4..4> PU4
//    </check>
//  </item>
//  


// --------------------------------  Field Item: PWR_PUCRB_PU3  -----------------------------------
// SVD Line: 3388

//  <item> SFDITEM_FIELD__PWR_PUCRB_PU3
//    <name> PU3 </name>
//    <rw> 
//    <i> [Bit 3] RW (@ 0x40007028) Port B pull-up bit y  (y=0..15) </i>
//    <check> 
//      <loc> ( (unsigned int) PWR_PUCRB ) </loc>
//      <o.3..3> PU3
//    </check>
//  </item>
//  


// --------------------------------  Field Item: PWR_PUCRB_PU2  -----------------------------------
// SVD Line: 3395

//  <item> SFDITEM_FIELD__PWR_PUCRB_PU2
//    <name> PU2 </name>
//    <rw> 
//    <i> [Bit 2] RW (@ 0x40007028) Port B pull-up bit y  (y=0..15) </i>
//    <check> 
//      <loc> ( (unsigned int) PWR_PUCRB ) </loc>
//      <o.2..2> PU2
//    </check>
//  </item>
//  


// --------------------------------  Field Item: PWR_PUCRB_PU1  -----------------------------------
// SVD Line: 3402

//  <item> SFDITEM_FIELD__PWR_PUCRB_PU1
//    <name> PU1 </name>
//    <rw> 
//    <i> [Bit 1] RW (@ 0x40007028) Port B pull-up bit y  (y=0..15) </i>
//    <check> 
//      <loc> ( (unsigned int) PWR_PUCRB ) </loc>
//      <o.1..1> PU1
//    </check>
//  </item>
//  


// --------------------------------  Field Item: PWR_PUCRB_PU0  -----------------------------------
// SVD Line: 3409

//  <item> SFDITEM_FIELD__PWR_PUCRB_PU0
//    <name> PU0 </name>
//    <rw> 
//    <i> [Bit 0] RW (@ 0x40007028) Port B pull-up bit y  (y=0..15) </i>
//    <check> 
//      <loc> ( (unsigned int) PWR_PUCRB ) </loc>
//      <o.0..0> PU0
//    </check>
//  </item>
//  


// --------------------------------  Register RTree: PWR_PUCRB  -----------------------------------
// SVD Line: 3294

//  <rtree> SFDITEM_REG__PWR_PUCRB
//    <name> PUCRB </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x40007028) Power Port B pull-up control  register </i>
//    <loc> ( (unsigned int)((PWR_PUCRB >> 0) & 0xFFFFFFFF), ((PWR_PUCRB = (PWR_PUCRB & ~(0xFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__PWR_PUCRB_PU15 </item>
//    <item> SFDITEM_FIELD__PWR_PUCRB_PU14 </item>
//    <item> SFDITEM_FIELD__PWR_PUCRB_PU13 </item>
//    <item> SFDITEM_FIELD__PWR_PUCRB_PU12 </item>
//    <item> SFDITEM_FIELD__PWR_PUCRB_PU11 </item>
//    <item> SFDITEM_FIELD__PWR_PUCRB_PU10 </item>
//    <item> SFDITEM_FIELD__PWR_PUCRB_PU9 </item>
//    <item> SFDITEM_FIELD__PWR_PUCRB_PU8 </item>
//    <item> SFDITEM_FIELD__PWR_PUCRB_PU7 </item>
//    <item> SFDITEM_FIELD__PWR_PUCRB_PU6 </item>
//    <item> SFDITEM_FIELD__PWR_PUCRB_PU5 </item>
//    <item> SFDITEM_FIELD__PWR_PUCRB_PU4 </item>
//    <item> SFDITEM_FIELD__PWR_PUCRB_PU3 </item>
//    <item> SFDITEM_FIELD__PWR_PUCRB_PU2 </item>
//    <item> SFDITEM_FIELD__PWR_PUCRB_PU1 </item>
//    <item> SFDITEM_FIELD__PWR_PUCRB_PU0 </item>
//  </rtree>
//  


// ----------------------------  Register Item Address: PWR_PDCRB  --------------------------------
// SVD Line: 3418

unsigned int PWR_PDCRB __AT (0x4000702C);



// -------------------------------  Field Item: PWR_PDCRB_PD15  -----------------------------------
// SVD Line: 3428

//  <item> SFDITEM_FIELD__PWR_PDCRB_PD15
//    <name> PD15 </name>
//    <rw> 
//    <i> [Bit 15] RW (@ 0x4000702C) Port B pull-down bit y  (y=0..15) </i>
//    <check> 
//      <loc> ( (unsigned int) PWR_PDCRB ) </loc>
//      <o.15..15> PD15
//    </check>
//  </item>
//  


// -------------------------------  Field Item: PWR_PDCRB_PD14  -----------------------------------
// SVD Line: 3435

//  <item> SFDITEM_FIELD__PWR_PDCRB_PD14
//    <name> PD14 </name>
//    <rw> 
//    <i> [Bit 14] RW (@ 0x4000702C) Port B pull-down bit y  (y=0..15) </i>
//    <check> 
//      <loc> ( (unsigned int) PWR_PDCRB ) </loc>
//      <o.14..14> PD14
//    </check>
//  </item>
//  


// -------------------------------  Field Item: PWR_PDCRB_PD13  -----------------------------------
// SVD Line: 3442

//  <item> SFDITEM_FIELD__PWR_PDCRB_PD13
//    <name> PD13 </name>
//    <rw> 
//    <i> [Bit 13] RW (@ 0x4000702C) Port B pull-down bit y  (y=0..15) </i>
//    <check> 
//      <loc> ( (unsigned int) PWR_PDCRB ) </loc>
//      <o.13..13> PD13
//    </check>
//  </item>
//  


// -------------------------------  Field Item: PWR_PDCRB_PD12  -----------------------------------
// SVD Line: 3449

//  <item> SFDITEM_FIELD__PWR_PDCRB_PD12
//    <name> PD12 </name>
//    <rw> 
//    <i> [Bit 12] RW (@ 0x4000702C) Port B pull-down bit y  (y=0..15) </i>
//    <check> 
//      <loc> ( (unsigned int) PWR_PDCRB ) </loc>
//      <o.12..12> PD12
//    </check>
//  </item>
//  


// -------------------------------  Field Item: PWR_PDCRB_PD11  -----------------------------------
// SVD Line: 3456

//  <item> SFDITEM_FIELD__PWR_PDCRB_PD11
//    <name> PD11 </name>
//    <rw> 
//    <i> [Bit 11] RW (@ 0x4000702C) Port B pull-down bit y  (y=0..15) </i>
//    <check> 
//      <loc> ( (unsigned int) PWR_PDCRB ) </loc>
//      <o.11..11> PD11
//    </check>
//  </item>
//  


// -------------------------------  Field Item: PWR_PDCRB_PD10  -----------------------------------
// SVD Line: 3463

//  <item> SFDITEM_FIELD__PWR_PDCRB_PD10
//    <name> PD10 </name>
//    <rw> 
//    <i> [Bit 10] RW (@ 0x4000702C) Port B pull-down bit y  (y=0..15) </i>
//    <check> 
//      <loc> ( (unsigned int) PWR_PDCRB ) </loc>
//      <o.10..10> PD10
//    </check>
//  </item>
//  


// --------------------------------  Field Item: PWR_PDCRB_PD9  -----------------------------------
// SVD Line: 3470

//  <item> SFDITEM_FIELD__PWR_PDCRB_PD9
//    <name> PD9 </name>
//    <rw> 
//    <i> [Bit 9] RW (@ 0x4000702C) Port B pull-down bit y  (y=0..15) </i>
//    <check> 
//      <loc> ( (unsigned int) PWR_PDCRB ) </loc>
//      <o.9..9> PD9
//    </check>
//  </item>
//  


// --------------------------------  Field Item: PWR_PDCRB_PD8  -----------------------------------
// SVD Line: 3477

//  <item> SFDITEM_FIELD__PWR_PDCRB_PD8
//    <name> PD8 </name>
//    <rw> 
//    <i> [Bit 8] RW (@ 0x4000702C) Port B pull-down bit y  (y=0..15) </i>
//    <check> 
//      <loc> ( (unsigned int) PWR_PDCRB ) </loc>
//      <o.8..8> PD8
//    </check>
//  </item>
//  


// --------------------------------  Field Item: PWR_PDCRB_PD7  -----------------------------------
// SVD Line: 3484

//  <item> SFDITEM_FIELD__PWR_PDCRB_PD7
//    <name> PD7 </name>
//    <rw> 
//    <i> [Bit 7] RW (@ 0x4000702C) Port B pull-down bit y  (y=0..15) </i>
//    <check> 
//      <loc> ( (unsigned int) PWR_PDCRB ) </loc>
//      <o.7..7> PD7
//    </check>
//  </item>
//  


// --------------------------------  Field Item: PWR_PDCRB_PD6  -----------------------------------
// SVD Line: 3491

//  <item> SFDITEM_FIELD__PWR_PDCRB_PD6
//    <name> PD6 </name>
//    <rw> 
//    <i> [Bit 6] RW (@ 0x4000702C) Port B pull-down bit y  (y=0..15) </i>
//    <check> 
//      <loc> ( (unsigned int) PWR_PDCRB ) </loc>
//      <o.6..6> PD6
//    </check>
//  </item>
//  


// --------------------------------  Field Item: PWR_PDCRB_PD5  -----------------------------------
// SVD Line: 3498

//  <item> SFDITEM_FIELD__PWR_PDCRB_PD5
//    <name> PD5 </name>
//    <rw> 
//    <i> [Bit 5] RW (@ 0x4000702C) Port B pull-down bit y  (y=0..15) </i>
//    <check> 
//      <loc> ( (unsigned int) PWR_PDCRB ) </loc>
//      <o.5..5> PD5
//    </check>
//  </item>
//  


// --------------------------------  Field Item: PWR_PDCRB_PD4  -----------------------------------
// SVD Line: 3505

//  <item> SFDITEM_FIELD__PWR_PDCRB_PD4
//    <name> PD4 </name>
//    <rw> 
//    <i> [Bit 4] RW (@ 0x4000702C) Port B pull-down bit y  (y=0..15) </i>
//    <check> 
//      <loc> ( (unsigned int) PWR_PDCRB ) </loc>
//      <o.4..4> PD4
//    </check>
//  </item>
//  


// --------------------------------  Field Item: PWR_PDCRB_PD3  -----------------------------------
// SVD Line: 3512

//  <item> SFDITEM_FIELD__PWR_PDCRB_PD3
//    <name> PD3 </name>
//    <rw> 
//    <i> [Bit 3] RW (@ 0x4000702C) Port B pull-down bit y  (y=0..15) </i>
//    <check> 
//      <loc> ( (unsigned int) PWR_PDCRB ) </loc>
//      <o.3..3> PD3
//    </check>
//  </item>
//  


// --------------------------------  Field Item: PWR_PDCRB_PD2  -----------------------------------
// SVD Line: 3519

//  <item> SFDITEM_FIELD__PWR_PDCRB_PD2
//    <name> PD2 </name>
//    <rw> 
//    <i> [Bit 2] RW (@ 0x4000702C) Port B pull-down bit y  (y=0..15) </i>
//    <check> 
//      <loc> ( (unsigned int) PWR_PDCRB ) </loc>
//      <o.2..2> PD2
//    </check>
//  </item>
//  


// --------------------------------  Field Item: PWR_PDCRB_PD1  -----------------------------------
// SVD Line: 3526

//  <item> SFDITEM_FIELD__PWR_PDCRB_PD1
//    <name> PD1 </name>
//    <rw> 
//    <i> [Bit 1] RW (@ 0x4000702C) Port B pull-down bit y  (y=0..15) </i>
//    <check> 
//      <loc> ( (unsigned int) PWR_PDCRB ) </loc>
//      <o.1..1> PD1
//    </check>
//  </item>
//  


// --------------------------------  Field Item: PWR_PDCRB_PD0  -----------------------------------
// SVD Line: 3533

//  <item> SFDITEM_FIELD__PWR_PDCRB_PD0
//    <name> PD0 </name>
//    <rw> 
//    <i> [Bit 0] RW (@ 0x4000702C) Port B pull-down bit y  (y=0..15) </i>
//    <check> 
//      <loc> ( (unsigned int) PWR_PDCRB ) </loc>
//      <o.0..0> PD0
//    </check>
//  </item>
//  


// --------------------------------  Register RTree: PWR_PDCRB  -----------------------------------
// SVD Line: 3418

//  <rtree> SFDITEM_REG__PWR_PDCRB
//    <name> PDCRB </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x4000702C) Power Port B pull-down control  register </i>
//    <loc> ( (unsigned int)((PWR_PDCRB >> 0) & 0xFFFFFFFF), ((PWR_PDCRB = (PWR_PDCRB & ~(0xFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__PWR_PDCRB_PD15 </item>
//    <item> SFDITEM_FIELD__PWR_PDCRB_PD14 </item>
//    <item> SFDITEM_FIELD__PWR_PDCRB_PD13 </item>
//    <item> SFDITEM_FIELD__PWR_PDCRB_PD12 </item>
//    <item> SFDITEM_FIELD__PWR_PDCRB_PD11 </item>
//    <item> SFDITEM_FIELD__PWR_PDCRB_PD10 </item>
//    <item> SFDITEM_FIELD__PWR_PDCRB_PD9 </item>
//    <item> SFDITEM_FIELD__PWR_PDCRB_PD8 </item>
//    <item> SFDITEM_FIELD__PWR_PDCRB_PD7 </item>
//    <item> SFDITEM_FIELD__PWR_PDCRB_PD6 </item>
//    <item> SFDITEM_FIELD__PWR_PDCRB_PD5 </item>
//    <item> SFDITEM_FIELD__PWR_PDCRB_PD4 </item>
//    <item> SFDITEM_FIELD__PWR_PDCRB_PD3 </item>
//    <item> SFDITEM_FIELD__PWR_PDCRB_PD2 </item>
//    <item> SFDITEM_FIELD__PWR_PDCRB_PD1 </item>
//    <item> SFDITEM_FIELD__PWR_PDCRB_PD0 </item>
//  </rtree>
//  


// ----------------------------  Register Item Address: PWR_PUCRC  --------------------------------
// SVD Line: 3542

unsigned int PWR_PUCRC __AT (0x40007030);



// -------------------------------  Field Item: PWR_PUCRC_PU15  -----------------------------------
// SVD Line: 3552

//  <item> SFDITEM_FIELD__PWR_PUCRC_PU15
//    <name> PU15 </name>
//    <rw> 
//    <i> [Bit 15] RW (@ 0x40007030) Port C pull-up bit y  (y=0..15) </i>
//    <check> 
//      <loc> ( (unsigned int) PWR_PUCRC ) </loc>
//      <o.15..15> PU15
//    </check>
//  </item>
//  


// -------------------------------  Field Item: PWR_PUCRC_PU14  -----------------------------------
// SVD Line: 3559

//  <item> SFDITEM_FIELD__PWR_PUCRC_PU14
//    <name> PU14 </name>
//    <rw> 
//    <i> [Bit 14] RW (@ 0x40007030) Port C pull-up bit y  (y=0..15) </i>
//    <check> 
//      <loc> ( (unsigned int) PWR_PUCRC ) </loc>
//      <o.14..14> PU14
//    </check>
//  </item>
//  


// -------------------------------  Field Item: PWR_PUCRC_PU13  -----------------------------------
// SVD Line: 3566

//  <item> SFDITEM_FIELD__PWR_PUCRC_PU13
//    <name> PU13 </name>
//    <rw> 
//    <i> [Bit 13] RW (@ 0x40007030) Port C pull-up bit y  (y=0..15) </i>
//    <check> 
//      <loc> ( (unsigned int) PWR_PUCRC ) </loc>
//      <o.13..13> PU13
//    </check>
//  </item>
//  


// -------------------------------  Field Item: PWR_PUCRC_PU12  -----------------------------------
// SVD Line: 3573

//  <item> SFDITEM_FIELD__PWR_PUCRC_PU12
//    <name> PU12 </name>
//    <rw> 
//    <i> [Bit 12] RW (@ 0x40007030) Port C pull-up bit y  (y=0..15) </i>
//    <check> 
//      <loc> ( (unsigned int) PWR_PUCRC ) </loc>
//      <o.12..12> PU12
//    </check>
//  </item>
//  


// -------------------------------  Field Item: PWR_PUCRC_PU11  -----------------------------------
// SVD Line: 3580

//  <item> SFDITEM_FIELD__PWR_PUCRC_PU11
//    <name> PU11 </name>
//    <rw> 
//    <i> [Bit 11] RW (@ 0x40007030) Port C pull-up bit y  (y=0..15) </i>
//    <check> 
//      <loc> ( (unsigned int) PWR_PUCRC ) </loc>
//      <o.11..11> PU11
//    </check>
//  </item>
//  


// -------------------------------  Field Item: PWR_PUCRC_PU10  -----------------------------------
// SVD Line: 3587

//  <item> SFDITEM_FIELD__PWR_PUCRC_PU10
//    <name> PU10 </name>
//    <rw> 
//    <i> [Bit 10] RW (@ 0x40007030) Port C pull-up bit y  (y=0..15) </i>
//    <check> 
//      <loc> ( (unsigned int) PWR_PUCRC ) </loc>
//      <o.10..10> PU10
//    </check>
//  </item>
//  


// --------------------------------  Field Item: PWR_PUCRC_PU9  -----------------------------------
// SVD Line: 3594

//  <item> SFDITEM_FIELD__PWR_PUCRC_PU9
//    <name> PU9 </name>
//    <rw> 
//    <i> [Bit 9] RW (@ 0x40007030) Port C pull-up bit y  (y=0..15) </i>
//    <check> 
//      <loc> ( (unsigned int) PWR_PUCRC ) </loc>
//      <o.9..9> PU9
//    </check>
//  </item>
//  


// --------------------------------  Field Item: PWR_PUCRC_PU8  -----------------------------------
// SVD Line: 3601

//  <item> SFDITEM_FIELD__PWR_PUCRC_PU8
//    <name> PU8 </name>
//    <rw> 
//    <i> [Bit 8] RW (@ 0x40007030) Port C pull-up bit y  (y=0..15) </i>
//    <check> 
//      <loc> ( (unsigned int) PWR_PUCRC ) </loc>
//      <o.8..8> PU8
//    </check>
//  </item>
//  


// --------------------------------  Field Item: PWR_PUCRC_PU7  -----------------------------------
// SVD Line: 3608

//  <item> SFDITEM_FIELD__PWR_PUCRC_PU7
//    <name> PU7 </name>
//    <rw> 
//    <i> [Bit 7] RW (@ 0x40007030) Port C pull-up bit y  (y=0..15) </i>
//    <check> 
//      <loc> ( (unsigned int) PWR_PUCRC ) </loc>
//      <o.7..7> PU7
//    </check>
//  </item>
//  


// --------------------------------  Field Item: PWR_PUCRC_PU6  -----------------------------------
// SVD Line: 3615

//  <item> SFDITEM_FIELD__PWR_PUCRC_PU6
//    <name> PU6 </name>
//    <rw> 
//    <i> [Bit 6] RW (@ 0x40007030) Port C pull-up bit y  (y=0..15) </i>
//    <check> 
//      <loc> ( (unsigned int) PWR_PUCRC ) </loc>
//      <o.6..6> PU6
//    </check>
//  </item>
//  


// --------------------------------  Field Item: PWR_PUCRC_PU5  -----------------------------------
// SVD Line: 3622

//  <item> SFDITEM_FIELD__PWR_PUCRC_PU5
//    <name> PU5 </name>
//    <rw> 
//    <i> [Bit 5] RW (@ 0x40007030) Port C pull-up bit y  (y=0..15) </i>
//    <check> 
//      <loc> ( (unsigned int) PWR_PUCRC ) </loc>
//      <o.5..5> PU5
//    </check>
//  </item>
//  


// --------------------------------  Field Item: PWR_PUCRC_PU4  -----------------------------------
// SVD Line: 3629

//  <item> SFDITEM_FIELD__PWR_PUCRC_PU4
//    <name> PU4 </name>
//    <rw> 
//    <i> [Bit 4] RW (@ 0x40007030) Port C pull-up bit y  (y=0..15) </i>
//    <check> 
//      <loc> ( (unsigned int) PWR_PUCRC ) </loc>
//      <o.4..4> PU4
//    </check>
//  </item>
//  


// --------------------------------  Field Item: PWR_PUCRC_PU3  -----------------------------------
// SVD Line: 3636

//  <item> SFDITEM_FIELD__PWR_PUCRC_PU3
//    <name> PU3 </name>
//    <rw> 
//    <i> [Bit 3] RW (@ 0x40007030) Port C pull-up bit y  (y=0..15) </i>
//    <check> 
//      <loc> ( (unsigned int) PWR_PUCRC ) </loc>
//      <o.3..3> PU3
//    </check>
//  </item>
//  


// --------------------------------  Field Item: PWR_PUCRC_PU2  -----------------------------------
// SVD Line: 3643

//  <item> SFDITEM_FIELD__PWR_PUCRC_PU2
//    <name> PU2 </name>
//    <rw> 
//    <i> [Bit 2] RW (@ 0x40007030) Port C pull-up bit y  (y=0..15) </i>
//    <check> 
//      <loc> ( (unsigned int) PWR_PUCRC ) </loc>
//      <o.2..2> PU2
//    </check>
//  </item>
//  


// --------------------------------  Field Item: PWR_PUCRC_PU1  -----------------------------------
// SVD Line: 3650

//  <item> SFDITEM_FIELD__PWR_PUCRC_PU1
//    <name> PU1 </name>
//    <rw> 
//    <i> [Bit 1] RW (@ 0x40007030) Port C pull-up bit y  (y=0..15) </i>
//    <check> 
//      <loc> ( (unsigned int) PWR_PUCRC ) </loc>
//      <o.1..1> PU1
//    </check>
//  </item>
//  


// --------------------------------  Field Item: PWR_PUCRC_PU0  -----------------------------------
// SVD Line: 3657

//  <item> SFDITEM_FIELD__PWR_PUCRC_PU0
//    <name> PU0 </name>
//    <rw> 
//    <i> [Bit 0] RW (@ 0x40007030) Port C pull-up bit y  (y=0..15) </i>
//    <check> 
//      <loc> ( (unsigned int) PWR_PUCRC ) </loc>
//      <o.0..0> PU0
//    </check>
//  </item>
//  


// --------------------------------  Register RTree: PWR_PUCRC  -----------------------------------
// SVD Line: 3542

//  <rtree> SFDITEM_REG__PWR_PUCRC
//    <name> PUCRC </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x40007030) Power Port C pull-up control  register </i>
//    <loc> ( (unsigned int)((PWR_PUCRC >> 0) & 0xFFFFFFFF), ((PWR_PUCRC = (PWR_PUCRC & ~(0xFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__PWR_PUCRC_PU15 </item>
//    <item> SFDITEM_FIELD__PWR_PUCRC_PU14 </item>
//    <item> SFDITEM_FIELD__PWR_PUCRC_PU13 </item>
//    <item> SFDITEM_FIELD__PWR_PUCRC_PU12 </item>
//    <item> SFDITEM_FIELD__PWR_PUCRC_PU11 </item>
//    <item> SFDITEM_FIELD__PWR_PUCRC_PU10 </item>
//    <item> SFDITEM_FIELD__PWR_PUCRC_PU9 </item>
//    <item> SFDITEM_FIELD__PWR_PUCRC_PU8 </item>
//    <item> SFDITEM_FIELD__PWR_PUCRC_PU7 </item>
//    <item> SFDITEM_FIELD__PWR_PUCRC_PU6 </item>
//    <item> SFDITEM_FIELD__PWR_PUCRC_PU5 </item>
//    <item> SFDITEM_FIELD__PWR_PUCRC_PU4 </item>
//    <item> SFDITEM_FIELD__PWR_PUCRC_PU3 </item>
//    <item> SFDITEM_FIELD__PWR_PUCRC_PU2 </item>
//    <item> SFDITEM_FIELD__PWR_PUCRC_PU1 </item>
//    <item> SFDITEM_FIELD__PWR_PUCRC_PU0 </item>
//  </rtree>
//  


// ----------------------------  Register Item Address: PWR_PDCRC  --------------------------------
// SVD Line: 3666

unsigned int PWR_PDCRC __AT (0x40007034);



// -------------------------------  Field Item: PWR_PDCRC_PD15  -----------------------------------
// SVD Line: 3676

//  <item> SFDITEM_FIELD__PWR_PDCRC_PD15
//    <name> PD15 </name>
//    <rw> 
//    <i> [Bit 15] RW (@ 0x40007034) Port C pull-down bit y  (y=0..15) </i>
//    <check> 
//      <loc> ( (unsigned int) PWR_PDCRC ) </loc>
//      <o.15..15> PD15
//    </check>
//  </item>
//  


// -------------------------------  Field Item: PWR_PDCRC_PD14  -----------------------------------
// SVD Line: 3683

//  <item> SFDITEM_FIELD__PWR_PDCRC_PD14
//    <name> PD14 </name>
//    <rw> 
//    <i> [Bit 14] RW (@ 0x40007034) Port C pull-down bit y  (y=0..15) </i>
//    <check> 
//      <loc> ( (unsigned int) PWR_PDCRC ) </loc>
//      <o.14..14> PD14
//    </check>
//  </item>
//  


// -------------------------------  Field Item: PWR_PDCRC_PD13  -----------------------------------
// SVD Line: 3690

//  <item> SFDITEM_FIELD__PWR_PDCRC_PD13
//    <name> PD13 </name>
//    <rw> 
//    <i> [Bit 13] RW (@ 0x40007034) Port C pull-down bit y  (y=0..15) </i>
//    <check> 
//      <loc> ( (unsigned int) PWR_PDCRC ) </loc>
//      <o.13..13> PD13
//    </check>
//  </item>
//  


// -------------------------------  Field Item: PWR_PDCRC_PD12  -----------------------------------
// SVD Line: 3697

//  <item> SFDITEM_FIELD__PWR_PDCRC_PD12
//    <name> PD12 </name>
//    <rw> 
//    <i> [Bit 12] RW (@ 0x40007034) Port C pull-down bit y  (y=0..15) </i>
//    <check> 
//      <loc> ( (unsigned int) PWR_PDCRC ) </loc>
//      <o.12..12> PD12
//    </check>
//  </item>
//  


// -------------------------------  Field Item: PWR_PDCRC_PD11  -----------------------------------
// SVD Line: 3704

//  <item> SFDITEM_FIELD__PWR_PDCRC_PD11
//    <name> PD11 </name>
//    <rw> 
//    <i> [Bit 11] RW (@ 0x40007034) Port C pull-down bit y  (y=0..15) </i>
//    <check> 
//      <loc> ( (unsigned int) PWR_PDCRC ) </loc>
//      <o.11..11> PD11
//    </check>
//  </item>
//  


// -------------------------------  Field Item: PWR_PDCRC_PD10  -----------------------------------
// SVD Line: 3711

//  <item> SFDITEM_FIELD__PWR_PDCRC_PD10
//    <name> PD10 </name>
//    <rw> 
//    <i> [Bit 10] RW (@ 0x40007034) Port C pull-down bit y  (y=0..15) </i>
//    <check> 
//      <loc> ( (unsigned int) PWR_PDCRC ) </loc>
//      <o.10..10> PD10
//    </check>
//  </item>
//  


// --------------------------------  Field Item: PWR_PDCRC_PD9  -----------------------------------
// SVD Line: 3718

//  <item> SFDITEM_FIELD__PWR_PDCRC_PD9
//    <name> PD9 </name>
//    <rw> 
//    <i> [Bit 9] RW (@ 0x40007034) Port C pull-down bit y  (y=0..15) </i>
//    <check> 
//      <loc> ( (unsigned int) PWR_PDCRC ) </loc>
//      <o.9..9> PD9
//    </check>
//  </item>
//  


// --------------------------------  Field Item: PWR_PDCRC_PD8  -----------------------------------
// SVD Line: 3725

//  <item> SFDITEM_FIELD__PWR_PDCRC_PD8
//    <name> PD8 </name>
//    <rw> 
//    <i> [Bit 8] RW (@ 0x40007034) Port C pull-down bit y  (y=0..15) </i>
//    <check> 
//      <loc> ( (unsigned int) PWR_PDCRC ) </loc>
//      <o.8..8> PD8
//    </check>
//  </item>
//  


// --------------------------------  Field Item: PWR_PDCRC_PD7  -----------------------------------
// SVD Line: 3732

//  <item> SFDITEM_FIELD__PWR_PDCRC_PD7
//    <name> PD7 </name>
//    <rw> 
//    <i> [Bit 7] RW (@ 0x40007034) Port C pull-down bit y  (y=0..15) </i>
//    <check> 
//      <loc> ( (unsigned int) PWR_PDCRC ) </loc>
//      <o.7..7> PD7
//    </check>
//  </item>
//  


// --------------------------------  Field Item: PWR_PDCRC_PD6  -----------------------------------
// SVD Line: 3739

//  <item> SFDITEM_FIELD__PWR_PDCRC_PD6
//    <name> PD6 </name>
//    <rw> 
//    <i> [Bit 6] RW (@ 0x40007034) Port C pull-down bit y  (y=0..15) </i>
//    <check> 
//      <loc> ( (unsigned int) PWR_PDCRC ) </loc>
//      <o.6..6> PD6
//    </check>
//  </item>
//  


// --------------------------------  Field Item: PWR_PDCRC_PD5  -----------------------------------
// SVD Line: 3746

//  <item> SFDITEM_FIELD__PWR_PDCRC_PD5
//    <name> PD5 </name>
//    <rw> 
//    <i> [Bit 5] RW (@ 0x40007034) Port C pull-down bit y  (y=0..15) </i>
//    <check> 
//      <loc> ( (unsigned int) PWR_PDCRC ) </loc>
//      <o.5..5> PD5
//    </check>
//  </item>
//  


// --------------------------------  Field Item: PWR_PDCRC_PD4  -----------------------------------
// SVD Line: 3753

//  <item> SFDITEM_FIELD__PWR_PDCRC_PD4
//    <name> PD4 </name>
//    <rw> 
//    <i> [Bit 4] RW (@ 0x40007034) Port C pull-down bit y  (y=0..15) </i>
//    <check> 
//      <loc> ( (unsigned int) PWR_PDCRC ) </loc>
//      <o.4..4> PD4
//    </check>
//  </item>
//  


// --------------------------------  Field Item: PWR_PDCRC_PD3  -----------------------------------
// SVD Line: 3760

//  <item> SFDITEM_FIELD__PWR_PDCRC_PD3
//    <name> PD3 </name>
//    <rw> 
//    <i> [Bit 3] RW (@ 0x40007034) Port C pull-down bit y  (y=0..15) </i>
//    <check> 
//      <loc> ( (unsigned int) PWR_PDCRC ) </loc>
//      <o.3..3> PD3
//    </check>
//  </item>
//  


// --------------------------------  Field Item: PWR_PDCRC_PD2  -----------------------------------
// SVD Line: 3767

//  <item> SFDITEM_FIELD__PWR_PDCRC_PD2
//    <name> PD2 </name>
//    <rw> 
//    <i> [Bit 2] RW (@ 0x40007034) Port C pull-down bit y  (y=0..15) </i>
//    <check> 
//      <loc> ( (unsigned int) PWR_PDCRC ) </loc>
//      <o.2..2> PD2
//    </check>
//  </item>
//  


// --------------------------------  Field Item: PWR_PDCRC_PD1  -----------------------------------
// SVD Line: 3774

//  <item> SFDITEM_FIELD__PWR_PDCRC_PD1
//    <name> PD1 </name>
//    <rw> 
//    <i> [Bit 1] RW (@ 0x40007034) Port C pull-down bit y  (y=0..15) </i>
//    <check> 
//      <loc> ( (unsigned int) PWR_PDCRC ) </loc>
//      <o.1..1> PD1
//    </check>
//  </item>
//  


// --------------------------------  Field Item: PWR_PDCRC_PD0  -----------------------------------
// SVD Line: 3781

//  <item> SFDITEM_FIELD__PWR_PDCRC_PD0
//    <name> PD0 </name>
//    <rw> 
//    <i> [Bit 0] RW (@ 0x40007034) Port C pull-down bit y  (y=0..15) </i>
//    <check> 
//      <loc> ( (unsigned int) PWR_PDCRC ) </loc>
//      <o.0..0> PD0
//    </check>
//  </item>
//  


// --------------------------------  Register RTree: PWR_PDCRC  -----------------------------------
// SVD Line: 3666

//  <rtree> SFDITEM_REG__PWR_PDCRC
//    <name> PDCRC </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x40007034) Power Port C pull-down control  register </i>
//    <loc> ( (unsigned int)((PWR_PDCRC >> 0) & 0xFFFFFFFF), ((PWR_PDCRC = (PWR_PDCRC & ~(0xFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__PWR_PDCRC_PD15 </item>
//    <item> SFDITEM_FIELD__PWR_PDCRC_PD14 </item>
//    <item> SFDITEM_FIELD__PWR_PDCRC_PD13 </item>
//    <item> SFDITEM_FIELD__PWR_PDCRC_PD12 </item>
//    <item> SFDITEM_FIELD__PWR_PDCRC_PD11 </item>
//    <item> SFDITEM_FIELD__PWR_PDCRC_PD10 </item>
//    <item> SFDITEM_FIELD__PWR_PDCRC_PD9 </item>
//    <item> SFDITEM_FIELD__PWR_PDCRC_PD8 </item>
//    <item> SFDITEM_FIELD__PWR_PDCRC_PD7 </item>
//    <item> SFDITEM_FIELD__PWR_PDCRC_PD6 </item>
//    <item> SFDITEM_FIELD__PWR_PDCRC_PD5 </item>
//    <item> SFDITEM_FIELD__PWR_PDCRC_PD4 </item>
//    <item> SFDITEM_FIELD__PWR_PDCRC_PD3 </item>
//    <item> SFDITEM_FIELD__PWR_PDCRC_PD2 </item>
//    <item> SFDITEM_FIELD__PWR_PDCRC_PD1 </item>
//    <item> SFDITEM_FIELD__PWR_PDCRC_PD0 </item>
//  </rtree>
//  


// ----------------------------  Register Item Address: PWR_PUCRD  --------------------------------
// SVD Line: 3790

unsigned int PWR_PUCRD __AT (0x40007038);



// --------------------------------  Field Item: PWR_PUCRD_PU9  -----------------------------------
// SVD Line: 3800

//  <item> SFDITEM_FIELD__PWR_PUCRD_PU9
//    <name> PU9 </name>
//    <rw> 
//    <i> [Bit 9] RW (@ 0x40007038) Port D pull-up bit y  (y=0..15) </i>
//    <check> 
//      <loc> ( (unsigned int) PWR_PUCRD ) </loc>
//      <o.9..9> PU9
//    </check>
//  </item>
//  


// --------------------------------  Field Item: PWR_PUCRD_PU8  -----------------------------------
// SVD Line: 3807

//  <item> SFDITEM_FIELD__PWR_PUCRD_PU8
//    <name> PU8 </name>
//    <rw> 
//    <i> [Bit 8] RW (@ 0x40007038) Port D pull-up bit y  (y=0..15) </i>
//    <check> 
//      <loc> ( (unsigned int) PWR_PUCRD ) </loc>
//      <o.8..8> PU8
//    </check>
//  </item>
//  


// --------------------------------  Field Item: PWR_PUCRD_PU6  -----------------------------------
// SVD Line: 3814

//  <item> SFDITEM_FIELD__PWR_PUCRD_PU6
//    <name> PU6 </name>
//    <rw> 
//    <i> [Bit 6] RW (@ 0x40007038) Port D pull-up bit y  (y=0..15) </i>
//    <check> 
//      <loc> ( (unsigned int) PWR_PUCRD ) </loc>
//      <o.6..6> PU6
//    </check>
//  </item>
//  


// --------------------------------  Field Item: PWR_PUCRD_PU5  -----------------------------------
// SVD Line: 3821

//  <item> SFDITEM_FIELD__PWR_PUCRD_PU5
//    <name> PU5 </name>
//    <rw> 
//    <i> [Bit 5] RW (@ 0x40007038) Port D pull-up bit y  (y=0..15) </i>
//    <check> 
//      <loc> ( (unsigned int) PWR_PUCRD ) </loc>
//      <o.5..5> PU5
//    </check>
//  </item>
//  


// --------------------------------  Field Item: PWR_PUCRD_PU4  -----------------------------------
// SVD Line: 3828

//  <item> SFDITEM_FIELD__PWR_PUCRD_PU4
//    <name> PU4 </name>
//    <rw> 
//    <i> [Bit 4] RW (@ 0x40007038) Port D pull-up bit y  (y=0..15) </i>
//    <check> 
//      <loc> ( (unsigned int) PWR_PUCRD ) </loc>
//      <o.4..4> PU4
//    </check>
//  </item>
//  


// --------------------------------  Field Item: PWR_PUCRD_PU3  -----------------------------------
// SVD Line: 3835

//  <item> SFDITEM_FIELD__PWR_PUCRD_PU3
//    <name> PU3 </name>
//    <rw> 
//    <i> [Bit 3] RW (@ 0x40007038) Port D pull-up bit y  (y=0..15) </i>
//    <check> 
//      <loc> ( (unsigned int) PWR_PUCRD ) </loc>
//      <o.3..3> PU3
//    </check>
//  </item>
//  


// --------------------------------  Field Item: PWR_PUCRD_PU2  -----------------------------------
// SVD Line: 3842

//  <item> SFDITEM_FIELD__PWR_PUCRD_PU2
//    <name> PU2 </name>
//    <rw> 
//    <i> [Bit 2] RW (@ 0x40007038) Port D pull-up bit y  (y=0..15) </i>
//    <check> 
//      <loc> ( (unsigned int) PWR_PUCRD ) </loc>
//      <o.2..2> PU2
//    </check>
//  </item>
//  


// --------------------------------  Field Item: PWR_PUCRD_PU1  -----------------------------------
// SVD Line: 3849

//  <item> SFDITEM_FIELD__PWR_PUCRD_PU1
//    <name> PU1 </name>
//    <rw> 
//    <i> [Bit 1] RW (@ 0x40007038) Port D pull-up bit y  (y=0..15) </i>
//    <check> 
//      <loc> ( (unsigned int) PWR_PUCRD ) </loc>
//      <o.1..1> PU1
//    </check>
//  </item>
//  


// --------------------------------  Field Item: PWR_PUCRD_PU0  -----------------------------------
// SVD Line: 3856

//  <item> SFDITEM_FIELD__PWR_PUCRD_PU0
//    <name> PU0 </name>
//    <rw> 
//    <i> [Bit 0] RW (@ 0x40007038) Port D pull-up bit y  (y=0..15) </i>
//    <check> 
//      <loc> ( (unsigned int) PWR_PUCRD ) </loc>
//      <o.0..0> PU0
//    </check>
//  </item>
//  


// --------------------------------  Register RTree: PWR_PUCRD  -----------------------------------
// SVD Line: 3790

//  <rtree> SFDITEM_REG__PWR_PUCRD
//    <name> PUCRD </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x40007038) Power Port D pull-up control  register </i>
//    <loc> ( (unsigned int)((PWR_PUCRD >> 0) & 0xFFFFFFFF), ((PWR_PUCRD = (PWR_PUCRD & ~(0x37FUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0x37F) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__PWR_PUCRD_PU9 </item>
//    <item> SFDITEM_FIELD__PWR_PUCRD_PU8 </item>
//    <item> SFDITEM_FIELD__PWR_PUCRD_PU6 </item>
//    <item> SFDITEM_FIELD__PWR_PUCRD_PU5 </item>
//    <item> SFDITEM_FIELD__PWR_PUCRD_PU4 </item>
//    <item> SFDITEM_FIELD__PWR_PUCRD_PU3 </item>
//    <item> SFDITEM_FIELD__PWR_PUCRD_PU2 </item>
//    <item> SFDITEM_FIELD__PWR_PUCRD_PU1 </item>
//    <item> SFDITEM_FIELD__PWR_PUCRD_PU0 </item>
//  </rtree>
//  


// ----------------------------  Register Item Address: PWR_PDCRD  --------------------------------
// SVD Line: 3865

unsigned int PWR_PDCRD __AT (0x4000703C);



// --------------------------------  Field Item: PWR_PDCRD_PD9  -----------------------------------
// SVD Line: 3875

//  <item> SFDITEM_FIELD__PWR_PDCRD_PD9
//    <name> PD9 </name>
//    <rw> 
//    <i> [Bit 9] RW (@ 0x4000703C) Port D pull-down bit y  (y=0..15) </i>
//    <check> 
//      <loc> ( (unsigned int) PWR_PDCRD ) </loc>
//      <o.9..9> PD9
//    </check>
//  </item>
//  


// --------------------------------  Field Item: PWR_PDCRD_PD8  -----------------------------------
// SVD Line: 3882

//  <item> SFDITEM_FIELD__PWR_PDCRD_PD8
//    <name> PD8 </name>
//    <rw> 
//    <i> [Bit 8] RW (@ 0x4000703C) Port D pull-down bit y  (y=0..15) </i>
//    <check> 
//      <loc> ( (unsigned int) PWR_PDCRD ) </loc>
//      <o.8..8> PD8
//    </check>
//  </item>
//  


// --------------------------------  Field Item: PWR_PDCRD_PD6  -----------------------------------
// SVD Line: 3889

//  <item> SFDITEM_FIELD__PWR_PDCRD_PD6
//    <name> PD6 </name>
//    <rw> 
//    <i> [Bit 6] RW (@ 0x4000703C) Port D pull-down bit y  (y=0..15) </i>
//    <check> 
//      <loc> ( (unsigned int) PWR_PDCRD ) </loc>
//      <o.6..6> PD6
//    </check>
//  </item>
//  


// --------------------------------  Field Item: PWR_PDCRD_PD5  -----------------------------------
// SVD Line: 3896

//  <item> SFDITEM_FIELD__PWR_PDCRD_PD5
//    <name> PD5 </name>
//    <rw> 
//    <i> [Bit 5] RW (@ 0x4000703C) Port D pull-down bit y  (y=0..15) </i>
//    <check> 
//      <loc> ( (unsigned int) PWR_PDCRD ) </loc>
//      <o.5..5> PD5
//    </check>
//  </item>
//  


// --------------------------------  Field Item: PWR_PDCRD_PD4  -----------------------------------
// SVD Line: 3903

//  <item> SFDITEM_FIELD__PWR_PDCRD_PD4
//    <name> PD4 </name>
//    <rw> 
//    <i> [Bit 4] RW (@ 0x4000703C) Port D pull-down bit y  (y=0..15) </i>
//    <check> 
//      <loc> ( (unsigned int) PWR_PDCRD ) </loc>
//      <o.4..4> PD4
//    </check>
//  </item>
//  


// --------------------------------  Field Item: PWR_PDCRD_PD3  -----------------------------------
// SVD Line: 3910

//  <item> SFDITEM_FIELD__PWR_PDCRD_PD3
//    <name> PD3 </name>
//    <rw> 
//    <i> [Bit 3] RW (@ 0x4000703C) Port D pull-down bit y  (y=0..15) </i>
//    <check> 
//      <loc> ( (unsigned int) PWR_PDCRD ) </loc>
//      <o.3..3> PD3
//    </check>
//  </item>
//  


// --------------------------------  Field Item: PWR_PDCRD_PD2  -----------------------------------
// SVD Line: 3917

//  <item> SFDITEM_FIELD__PWR_PDCRD_PD2
//    <name> PD2 </name>
//    <rw> 
//    <i> [Bit 2] RW (@ 0x4000703C) Port D pull-down bit y  (y=0..15) </i>
//    <check> 
//      <loc> ( (unsigned int) PWR_PDCRD ) </loc>
//      <o.2..2> PD2
//    </check>
//  </item>
//  


// --------------------------------  Field Item: PWR_PDCRD_PD1  -----------------------------------
// SVD Line: 3924

//  <item> SFDITEM_FIELD__PWR_PDCRD_PD1
//    <name> PD1 </name>
//    <rw> 
//    <i> [Bit 1] RW (@ 0x4000703C) Port D pull-down bit y  (y=0..15) </i>
//    <check> 
//      <loc> ( (unsigned int) PWR_PDCRD ) </loc>
//      <o.1..1> PD1
//    </check>
//  </item>
//  


// --------------------------------  Field Item: PWR_PDCRD_PD0  -----------------------------------
// SVD Line: 3931

//  <item> SFDITEM_FIELD__PWR_PDCRD_PD0
//    <name> PD0 </name>
//    <rw> 
//    <i> [Bit 0] RW (@ 0x4000703C) Port D pull-down bit y  (y=0..15) </i>
//    <check> 
//      <loc> ( (unsigned int) PWR_PDCRD ) </loc>
//      <o.0..0> PD0
//    </check>
//  </item>
//  


// --------------------------------  Register RTree: PWR_PDCRD  -----------------------------------
// SVD Line: 3865

//  <rtree> SFDITEM_REG__PWR_PDCRD
//    <name> PDCRD </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x4000703C) Power Port D pull-down control  register </i>
//    <loc> ( (unsigned int)((PWR_PDCRD >> 0) & 0xFFFFFFFF), ((PWR_PDCRD = (PWR_PDCRD & ~(0x37FUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0x37F) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__PWR_PDCRD_PD9 </item>
//    <item> SFDITEM_FIELD__PWR_PDCRD_PD8 </item>
//    <item> SFDITEM_FIELD__PWR_PDCRD_PD6 </item>
//    <item> SFDITEM_FIELD__PWR_PDCRD_PD5 </item>
//    <item> SFDITEM_FIELD__PWR_PDCRD_PD4 </item>
//    <item> SFDITEM_FIELD__PWR_PDCRD_PD3 </item>
//    <item> SFDITEM_FIELD__PWR_PDCRD_PD2 </item>
//    <item> SFDITEM_FIELD__PWR_PDCRD_PD1 </item>
//    <item> SFDITEM_FIELD__PWR_PDCRD_PD0 </item>
//  </rtree>
//  


// ----------------------------  Register Item Address: PWR_PUCRF  --------------------------------
// SVD Line: 3940

unsigned int PWR_PUCRF __AT (0x40007048);



// --------------------------------  Field Item: PWR_PUCRF_PU2  -----------------------------------
// SVD Line: 3950

//  <item> SFDITEM_FIELD__PWR_PUCRF_PU2
//    <name> PU2 </name>
//    <rw> 
//    <i> [Bit 2] RW (@ 0x40007048) Port F pull-up bit y  (y=0..15) </i>
//    <check> 
//      <loc> ( (unsigned int) PWR_PUCRF ) </loc>
//      <o.2..2> PU2
//    </check>
//  </item>
//  


// --------------------------------  Field Item: PWR_PUCRF_PU1  -----------------------------------
// SVD Line: 3957

//  <item> SFDITEM_FIELD__PWR_PUCRF_PU1
//    <name> PU1 </name>
//    <rw> 
//    <i> [Bit 1] RW (@ 0x40007048) Port F pull-up bit y  (y=0..15) </i>
//    <check> 
//      <loc> ( (unsigned int) PWR_PUCRF ) </loc>
//      <o.1..1> PU1
//    </check>
//  </item>
//  


// --------------------------------  Field Item: PWR_PUCRF_PU0  -----------------------------------
// SVD Line: 3964

//  <item> SFDITEM_FIELD__PWR_PUCRF_PU0
//    <name> PU0 </name>
//    <rw> 
//    <i> [Bit 0] RW (@ 0x40007048) Port F pull-up bit y  (y=0..15) </i>
//    <check> 
//      <loc> ( (unsigned int) PWR_PUCRF ) </loc>
//      <o.0..0> PU0
//    </check>
//  </item>
//  


// --------------------------------  Register RTree: PWR_PUCRF  -----------------------------------
// SVD Line: 3940

//  <rtree> SFDITEM_REG__PWR_PUCRF
//    <name> PUCRF </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x40007048) Power Port F pull-up control  register </i>
//    <loc> ( (unsigned int)((PWR_PUCRF >> 0) & 0xFFFFFFFF), ((PWR_PUCRF = (PWR_PUCRF & ~(0x7UL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0x7) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__PWR_PUCRF_PU2 </item>
//    <item> SFDITEM_FIELD__PWR_PUCRF_PU1 </item>
//    <item> SFDITEM_FIELD__PWR_PUCRF_PU0 </item>
//  </rtree>
//  


// ----------------------------  Register Item Address: PWR_PDCRF  --------------------------------
// SVD Line: 3973

unsigned int PWR_PDCRF __AT (0x4000704C);



// --------------------------------  Field Item: PWR_PDCRF_PD2  -----------------------------------
// SVD Line: 3983

//  <item> SFDITEM_FIELD__PWR_PDCRF_PD2
//    <name> PD2 </name>
//    <rw> 
//    <i> [Bit 2] RW (@ 0x4000704C) Port F pull-down bit y  (y=0..15) </i>
//    <check> 
//      <loc> ( (unsigned int) PWR_PDCRF ) </loc>
//      <o.2..2> PD2
//    </check>
//  </item>
//  


// --------------------------------  Field Item: PWR_PDCRF_PD1  -----------------------------------
// SVD Line: 3990

//  <item> SFDITEM_FIELD__PWR_PDCRF_PD1
//    <name> PD1 </name>
//    <rw> 
//    <i> [Bit 1] RW (@ 0x4000704C) Port F pull-down bit y  (y=0..15) </i>
//    <check> 
//      <loc> ( (unsigned int) PWR_PDCRF ) </loc>
//      <o.1..1> PD1
//    </check>
//  </item>
//  


// --------------------------------  Field Item: PWR_PDCRF_PD0  -----------------------------------
// SVD Line: 3997

//  <item> SFDITEM_FIELD__PWR_PDCRF_PD0
//    <name> PD0 </name>
//    <rw> 
//    <i> [Bit 0] RW (@ 0x4000704C) Port F pull-down bit y  (y=0..15) </i>
//    <check> 
//      <loc> ( (unsigned int) PWR_PDCRF ) </loc>
//      <o.0..0> PD0
//    </check>
//  </item>
//  


// --------------------------------  Register RTree: PWR_PDCRF  -----------------------------------
// SVD Line: 3973

//  <rtree> SFDITEM_REG__PWR_PDCRF
//    <name> PDCRF </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x4000704C) Power Port F pull-down control  register </i>
//    <loc> ( (unsigned int)((PWR_PDCRF >> 0) & 0xFFFFFFFF), ((PWR_PDCRF = (PWR_PDCRF & ~(0x7UL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0x7) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__PWR_PDCRF_PD2 </item>
//    <item> SFDITEM_FIELD__PWR_PDCRF_PD1 </item>
//    <item> SFDITEM_FIELD__PWR_PDCRF_PD0 </item>
//  </rtree>
//  


// ----------------------------------  Peripheral View: PWR  --------------------------------------
// SVD Line: 2673

//  <view> PWR
//    <name> PWR </name>
//    <item> SFDITEM_REG__PWR_CR1 </item>
//    <item> SFDITEM_REG__PWR_CR2 </item>
//    <item> SFDITEM_REG__PWR_CR3 </item>
//    <item> SFDITEM_REG__PWR_CR4 </item>
//    <item> SFDITEM_REG__PWR_SR1 </item>
//    <item> SFDITEM_REG__PWR_SR2 </item>
//    <item> SFDITEM_REG__PWR_SCR </item>
//    <item> SFDITEM_REG__PWR_PUCRA </item>
//    <item> SFDITEM_REG__PWR_PDCRA </item>
//    <item> SFDITEM_REG__PWR_PUCRB </item>
//    <item> SFDITEM_REG__PWR_PDCRB </item>
//    <item> SFDITEM_REG__PWR_PUCRC </item>
//    <item> SFDITEM_REG__PWR_PDCRC </item>
//    <item> SFDITEM_REG__PWR_PUCRD </item>
//    <item> SFDITEM_REG__PWR_PDCRD </item>
//    <item> SFDITEM_REG__PWR_PUCRF </item>
//    <item> SFDITEM_REG__PWR_PDCRF </item>
//  </view>
//  


// -----------------------------  Register Item Address: DMA_ISR  ---------------------------------
// SVD Line: 4029

unsigned int DMA_ISR __AT (0x40020000);



// --------------------------------  Field Item: DMA_ISR_GIF0  ------------------------------------
// SVD Line: 4038

//  <item> SFDITEM_FIELD__DMA_ISR_GIF0
//    <name> GIF0 </name>
//    <r> 
//    <i> [Bit 0] RO (@ 0x40020000) Channel global interrupt  flag </i>
//    <check> 
//      <loc> ( (unsigned int) DMA_ISR ) </loc>
//      <o.0..0> GIF0
//    </check>
//  </item>
//  


// --------------------------------  Field Item: DMA_ISR_TCIF1  -----------------------------------
// SVD Line: 4045

//  <item> SFDITEM_FIELD__DMA_ISR_TCIF1
//    <name> TCIF1 </name>
//    <r> 
//    <i> [Bit 1] RO (@ 0x40020000) Channel transfer complete  flag </i>
//    <check> 
//      <loc> ( (unsigned int) DMA_ISR ) </loc>
//      <o.1..1> TCIF1
//    </check>
//  </item>
//  


// --------------------------------  Field Item: DMA_ISR_HTIF2  -----------------------------------
// SVD Line: 4052

//  <item> SFDITEM_FIELD__DMA_ISR_HTIF2
//    <name> HTIF2 </name>
//    <r> 
//    <i> [Bit 2] RO (@ 0x40020000) Channel half transfer flag </i>
//    <check> 
//      <loc> ( (unsigned int) DMA_ISR ) </loc>
//      <o.2..2> HTIF2
//    </check>
//  </item>
//  


// --------------------------------  Field Item: DMA_ISR_TEIF3  -----------------------------------
// SVD Line: 4058

//  <item> SFDITEM_FIELD__DMA_ISR_TEIF3
//    <name> TEIF3 </name>
//    <r> 
//    <i> [Bit 3] RO (@ 0x40020000) Channel transfer error  flag </i>
//    <check> 
//      <loc> ( (unsigned int) DMA_ISR ) </loc>
//      <o.3..3> TEIF3
//    </check>
//  </item>
//  


// --------------------------------  Field Item: DMA_ISR_GIF4  ------------------------------------
// SVD Line: 4065

//  <item> SFDITEM_FIELD__DMA_ISR_GIF4
//    <name> GIF4 </name>
//    <r> 
//    <i> [Bit 4] RO (@ 0x40020000) Channel global interrupt  flag </i>
//    <check> 
//      <loc> ( (unsigned int) DMA_ISR ) </loc>
//      <o.4..4> GIF4
//    </check>
//  </item>
//  


// --------------------------------  Field Item: DMA_ISR_TCIF5  -----------------------------------
// SVD Line: 4072

//  <item> SFDITEM_FIELD__DMA_ISR_TCIF5
//    <name> TCIF5 </name>
//    <r> 
//    <i> [Bit 5] RO (@ 0x40020000) Channel transfer complete  flag </i>
//    <check> 
//      <loc> ( (unsigned int) DMA_ISR ) </loc>
//      <o.5..5> TCIF5
//    </check>
//  </item>
//  


// --------------------------------  Field Item: DMA_ISR_HTIF6  -----------------------------------
// SVD Line: 4079

//  <item> SFDITEM_FIELD__DMA_ISR_HTIF6
//    <name> HTIF6 </name>
//    <r> 
//    <i> [Bit 6] RO (@ 0x40020000) Channel half transfer flag </i>
//    <check> 
//      <loc> ( (unsigned int) DMA_ISR ) </loc>
//      <o.6..6> HTIF6
//    </check>
//  </item>
//  


// --------------------------------  Field Item: DMA_ISR_TEIF7  -----------------------------------
// SVD Line: 4085

//  <item> SFDITEM_FIELD__DMA_ISR_TEIF7
//    <name> TEIF7 </name>
//    <r> 
//    <i> [Bit 7] RO (@ 0x40020000) Channel transfer error  flag </i>
//    <check> 
//      <loc> ( (unsigned int) DMA_ISR ) </loc>
//      <o.7..7> TEIF7
//    </check>
//  </item>
//  


// --------------------------------  Field Item: DMA_ISR_GIF8  ------------------------------------
// SVD Line: 4092

//  <item> SFDITEM_FIELD__DMA_ISR_GIF8
//    <name> GIF8 </name>
//    <r> 
//    <i> [Bit 8] RO (@ 0x40020000) Channel global interrupt  flag </i>
//    <check> 
//      <loc> ( (unsigned int) DMA_ISR ) </loc>
//      <o.8..8> GIF8
//    </check>
//  </item>
//  


// --------------------------------  Field Item: DMA_ISR_TCIF9  -----------------------------------
// SVD Line: 4099

//  <item> SFDITEM_FIELD__DMA_ISR_TCIF9
//    <name> TCIF9 </name>
//    <r> 
//    <i> [Bit 9] RO (@ 0x40020000) Channel transfer complete  flag </i>
//    <check> 
//      <loc> ( (unsigned int) DMA_ISR ) </loc>
//      <o.9..9> TCIF9
//    </check>
//  </item>
//  


// -------------------------------  Field Item: DMA_ISR_HTIF10  -----------------------------------
// SVD Line: 4106

//  <item> SFDITEM_FIELD__DMA_ISR_HTIF10
//    <name> HTIF10 </name>
//    <r> 
//    <i> [Bit 10] RO (@ 0x40020000) Channel half transfer flag </i>
//    <check> 
//      <loc> ( (unsigned int) DMA_ISR ) </loc>
//      <o.10..10> HTIF10
//    </check>
//  </item>
//  


// -------------------------------  Field Item: DMA_ISR_TEIF11  -----------------------------------
// SVD Line: 4112

//  <item> SFDITEM_FIELD__DMA_ISR_TEIF11
//    <name> TEIF11 </name>
//    <r> 
//    <i> [Bit 11] RO (@ 0x40020000) Channel transfer error  flag </i>
//    <check> 
//      <loc> ( (unsigned int) DMA_ISR ) </loc>
//      <o.11..11> TEIF11
//    </check>
//  </item>
//  


// --------------------------------  Field Item: DMA_ISR_GIF12  -----------------------------------
// SVD Line: 4119

//  <item> SFDITEM_FIELD__DMA_ISR_GIF12
//    <name> GIF12 </name>
//    <r> 
//    <i> [Bit 12] RO (@ 0x40020000) Channel global interrupt  flag </i>
//    <check> 
//      <loc> ( (unsigned int) DMA_ISR ) </loc>
//      <o.12..12> GIF12
//    </check>
//  </item>
//  


// -------------------------------  Field Item: DMA_ISR_TCIF13  -----------------------------------
// SVD Line: 4126

//  <item> SFDITEM_FIELD__DMA_ISR_TCIF13
//    <name> TCIF13 </name>
//    <r> 
//    <i> [Bit 13] RO (@ 0x40020000) Channel transfer complete  flag </i>
//    <check> 
//      <loc> ( (unsigned int) DMA_ISR ) </loc>
//      <o.13..13> TCIF13
//    </check>
//  </item>
//  


// -------------------------------  Field Item: DMA_ISR_HTIF14  -----------------------------------
// SVD Line: 4133

//  <item> SFDITEM_FIELD__DMA_ISR_HTIF14
//    <name> HTIF14 </name>
//    <r> 
//    <i> [Bit 14] RO (@ 0x40020000) Channel half transfer flag </i>
//    <check> 
//      <loc> ( (unsigned int) DMA_ISR ) </loc>
//      <o.14..14> HTIF14
//    </check>
//  </item>
//  


// -------------------------------  Field Item: DMA_ISR_TEIF15  -----------------------------------
// SVD Line: 4139

//  <item> SFDITEM_FIELD__DMA_ISR_TEIF15
//    <name> TEIF15 </name>
//    <r> 
//    <i> [Bit 15] RO (@ 0x40020000) Channel transfer error  flag </i>
//    <check> 
//      <loc> ( (unsigned int) DMA_ISR ) </loc>
//      <o.15..15> TEIF15
//    </check>
//  </item>
//  


// --------------------------------  Field Item: DMA_ISR_GIF16  -----------------------------------
// SVD Line: 4146

//  <item> SFDITEM_FIELD__DMA_ISR_GIF16
//    <name> GIF16 </name>
//    <r> 
//    <i> [Bit 16] RO (@ 0x40020000) Channel global interrupt  flag </i>
//    <check> 
//      <loc> ( (unsigned int) DMA_ISR ) </loc>
//      <o.16..16> GIF16
//    </check>
//  </item>
//  


// -------------------------------  Field Item: DMA_ISR_TCIF17  -----------------------------------
// SVD Line: 4153

//  <item> SFDITEM_FIELD__DMA_ISR_TCIF17
//    <name> TCIF17 </name>
//    <r> 
//    <i> [Bit 17] RO (@ 0x40020000) Channel transfer complete  flag </i>
//    <check> 
//      <loc> ( (unsigned int) DMA_ISR ) </loc>
//      <o.17..17> TCIF17
//    </check>
//  </item>
//  


// -------------------------------  Field Item: DMA_ISR_HTIF18  -----------------------------------
// SVD Line: 4160

//  <item> SFDITEM_FIELD__DMA_ISR_HTIF18
//    <name> HTIF18 </name>
//    <r> 
//    <i> [Bit 18] RO (@ 0x40020000) Channel half transfer flag </i>
//    <check> 
//      <loc> ( (unsigned int) DMA_ISR ) </loc>
//      <o.18..18> HTIF18
//    </check>
//  </item>
//  


// -------------------------------  Field Item: DMA_ISR_TEIF19  -----------------------------------
// SVD Line: 4166

//  <item> SFDITEM_FIELD__DMA_ISR_TEIF19
//    <name> TEIF19 </name>
//    <r> 
//    <i> [Bit 19] RO (@ 0x40020000) Channel transfer error  flag </i>
//    <check> 
//      <loc> ( (unsigned int) DMA_ISR ) </loc>
//      <o.19..19> TEIF19
//    </check>
//  </item>
//  


// --------------------------------  Field Item: DMA_ISR_GIF20  -----------------------------------
// SVD Line: 4173

//  <item> SFDITEM_FIELD__DMA_ISR_GIF20
//    <name> GIF20 </name>
//    <r> 
//    <i> [Bit 20] RO (@ 0x40020000) Channel global interrupt  flag </i>
//    <check> 
//      <loc> ( (unsigned int) DMA_ISR ) </loc>
//      <o.20..20> GIF20
//    </check>
//  </item>
//  


// -------------------------------  Field Item: DMA_ISR_TCIF21  -----------------------------------
// SVD Line: 4180

//  <item> SFDITEM_FIELD__DMA_ISR_TCIF21
//    <name> TCIF21 </name>
//    <r> 
//    <i> [Bit 21] RO (@ 0x40020000) Channel transfer complete  flag </i>
//    <check> 
//      <loc> ( (unsigned int) DMA_ISR ) </loc>
//      <o.21..21> TCIF21
//    </check>
//  </item>
//  


// -------------------------------  Field Item: DMA_ISR_HTIF22  -----------------------------------
// SVD Line: 4187

//  <item> SFDITEM_FIELD__DMA_ISR_HTIF22
//    <name> HTIF22 </name>
//    <r> 
//    <i> [Bit 22] RO (@ 0x40020000) Channel half transfer flag </i>
//    <check> 
//      <loc> ( (unsigned int) DMA_ISR ) </loc>
//      <o.22..22> HTIF22
//    </check>
//  </item>
//  


// -------------------------------  Field Item: DMA_ISR_TEIF23  -----------------------------------
// SVD Line: 4193

//  <item> SFDITEM_FIELD__DMA_ISR_TEIF23
//    <name> TEIF23 </name>
//    <r> 
//    <i> [Bit 23] RO (@ 0x40020000) Channel transfer error  flag </i>
//    <check> 
//      <loc> ( (unsigned int) DMA_ISR ) </loc>
//      <o.23..23> TEIF23
//    </check>
//  </item>
//  


// --------------------------------  Field Item: DMA_ISR_GIF24  -----------------------------------
// SVD Line: 4200

//  <item> SFDITEM_FIELD__DMA_ISR_GIF24
//    <name> GIF24 </name>
//    <r> 
//    <i> [Bit 24] RO (@ 0x40020000) Channel global interrupt  flag </i>
//    <check> 
//      <loc> ( (unsigned int) DMA_ISR ) </loc>
//      <o.24..24> GIF24
//    </check>
//  </item>
//  


// -------------------------------  Field Item: DMA_ISR_TCIF25  -----------------------------------
// SVD Line: 4207

//  <item> SFDITEM_FIELD__DMA_ISR_TCIF25
//    <name> TCIF25 </name>
//    <r> 
//    <i> [Bit 25] RO (@ 0x40020000) Channel transfer complete  flag </i>
//    <check> 
//      <loc> ( (unsigned int) DMA_ISR ) </loc>
//      <o.25..25> TCIF25
//    </check>
//  </item>
//  


// -------------------------------  Field Item: DMA_ISR_HTIF26  -----------------------------------
// SVD Line: 4214

//  <item> SFDITEM_FIELD__DMA_ISR_HTIF26
//    <name> HTIF26 </name>
//    <r> 
//    <i> [Bit 26] RO (@ 0x40020000) Channel half transfer flag </i>
//    <check> 
//      <loc> ( (unsigned int) DMA_ISR ) </loc>
//      <o.26..26> HTIF26
//    </check>
//  </item>
//  


// -------------------------------  Field Item: DMA_ISR_TEIF27  -----------------------------------
// SVD Line: 4220

//  <item> SFDITEM_FIELD__DMA_ISR_TEIF27
//    <name> TEIF27 </name>
//    <r> 
//    <i> [Bit 27] RO (@ 0x40020000) Channel transfer error  flag </i>
//    <check> 
//      <loc> ( (unsigned int) DMA_ISR ) </loc>
//      <o.27..27> TEIF27
//    </check>
//  </item>
//  


// ---------------------------------  Register RTree: DMA_ISR  ------------------------------------
// SVD Line: 4029

//  <rtree> SFDITEM_REG__DMA_ISR
//    <name> ISR </name>
//    <r> 
//    <i> [Bits 31..0] RO (@ 0x40020000) low interrupt status register </i>
//    <loc> ( (unsigned int)((DMA_ISR >> 0) & 0xFFFFFFFF) ) </loc>
//    <item> SFDITEM_FIELD__DMA_ISR_GIF0 </item>
//    <item> SFDITEM_FIELD__DMA_ISR_TCIF1 </item>
//    <item> SFDITEM_FIELD__DMA_ISR_HTIF2 </item>
//    <item> SFDITEM_FIELD__DMA_ISR_TEIF3 </item>
//    <item> SFDITEM_FIELD__DMA_ISR_GIF4 </item>
//    <item> SFDITEM_FIELD__DMA_ISR_TCIF5 </item>
//    <item> SFDITEM_FIELD__DMA_ISR_HTIF6 </item>
//    <item> SFDITEM_FIELD__DMA_ISR_TEIF7 </item>
//    <item> SFDITEM_FIELD__DMA_ISR_GIF8 </item>
//    <item> SFDITEM_FIELD__DMA_ISR_TCIF9 </item>
//    <item> SFDITEM_FIELD__DMA_ISR_HTIF10 </item>
//    <item> SFDITEM_FIELD__DMA_ISR_TEIF11 </item>
//    <item> SFDITEM_FIELD__DMA_ISR_GIF12 </item>
//    <item> SFDITEM_FIELD__DMA_ISR_TCIF13 </item>
//    <item> SFDITEM_FIELD__DMA_ISR_HTIF14 </item>
//    <item> SFDITEM_FIELD__DMA_ISR_TEIF15 </item>
//    <item> SFDITEM_FIELD__DMA_ISR_GIF16 </item>
//    <item> SFDITEM_FIELD__DMA_ISR_TCIF17 </item>
//    <item> SFDITEM_FIELD__DMA_ISR_HTIF18 </item>
//    <item> SFDITEM_FIELD__DMA_ISR_TEIF19 </item>
//    <item> SFDITEM_FIELD__DMA_ISR_GIF20 </item>
//    <item> SFDITEM_FIELD__DMA_ISR_TCIF21 </item>
//    <item> SFDITEM_FIELD__DMA_ISR_HTIF22 </item>
//    <item> SFDITEM_FIELD__DMA_ISR_TEIF23 </item>
//    <item> SFDITEM_FIELD__DMA_ISR_GIF24 </item>
//    <item> SFDITEM_FIELD__DMA_ISR_TCIF25 </item>
//    <item> SFDITEM_FIELD__DMA_ISR_HTIF26 </item>
//    <item> SFDITEM_FIELD__DMA_ISR_TEIF27 </item>
//  </rtree>
//  


// -----------------------------  Register Item Address: DMA_IFCR  --------------------------------
// SVD Line: 4229

unsigned int DMA_IFCR __AT (0x40020004);



// -------------------------------  Field Item: DMA_IFCR_CGIF0  -----------------------------------
// SVD Line: 4238

//  <item> SFDITEM_FIELD__DMA_IFCR_CGIF0
//    <name> CGIF0 </name>
//    <r> 
//    <i> [Bit 0] RO (@ 0x40020004) Channel global interrupt  flag </i>
//    <check> 
//      <loc> ( (unsigned int) DMA_IFCR ) </loc>
//      <o.0..0> CGIF0
//    </check>
//  </item>
//  


// -------------------------------  Field Item: DMA_IFCR_CTCIF1  ----------------------------------
// SVD Line: 4245

//  <item> SFDITEM_FIELD__DMA_IFCR_CTCIF1
//    <name> CTCIF1 </name>
//    <r> 
//    <i> [Bit 1] RO (@ 0x40020004) Channel transfer complete  flag </i>
//    <check> 
//      <loc> ( (unsigned int) DMA_IFCR ) </loc>
//      <o.1..1> CTCIF1
//    </check>
//  </item>
//  


// -------------------------------  Field Item: DMA_IFCR_CHTIF2  ----------------------------------
// SVD Line: 4252

//  <item> SFDITEM_FIELD__DMA_IFCR_CHTIF2
//    <name> CHTIF2 </name>
//    <r> 
//    <i> [Bit 2] RO (@ 0x40020004) Channel half transfer flag </i>
//    <check> 
//      <loc> ( (unsigned int) DMA_IFCR ) </loc>
//      <o.2..2> CHTIF2
//    </check>
//  </item>
//  


// -------------------------------  Field Item: DMA_IFCR_CTEIF3  ----------------------------------
// SVD Line: 4258

//  <item> SFDITEM_FIELD__DMA_IFCR_CTEIF3
//    <name> CTEIF3 </name>
//    <r> 
//    <i> [Bit 3] RO (@ 0x40020004) Channel transfer error  flag </i>
//    <check> 
//      <loc> ( (unsigned int) DMA_IFCR ) </loc>
//      <o.3..3> CTEIF3
//    </check>
//  </item>
//  


// -------------------------------  Field Item: DMA_IFCR_CGIF4  -----------------------------------
// SVD Line: 4265

//  <item> SFDITEM_FIELD__DMA_IFCR_CGIF4
//    <name> CGIF4 </name>
//    <r> 
//    <i> [Bit 4] RO (@ 0x40020004) Channel global interrupt  flag </i>
//    <check> 
//      <loc> ( (unsigned int) DMA_IFCR ) </loc>
//      <o.4..4> CGIF4
//    </check>
//  </item>
//  


// -------------------------------  Field Item: DMA_IFCR_CTCIF5  ----------------------------------
// SVD Line: 4272

//  <item> SFDITEM_FIELD__DMA_IFCR_CTCIF5
//    <name> CTCIF5 </name>
//    <r> 
//    <i> [Bit 5] RO (@ 0x40020004) Channel transfer complete  flag </i>
//    <check> 
//      <loc> ( (unsigned int) DMA_IFCR ) </loc>
//      <o.5..5> CTCIF5
//    </check>
//  </item>
//  


// -------------------------------  Field Item: DMA_IFCR_CHTIF6  ----------------------------------
// SVD Line: 4279

//  <item> SFDITEM_FIELD__DMA_IFCR_CHTIF6
//    <name> CHTIF6 </name>
//    <r> 
//    <i> [Bit 6] RO (@ 0x40020004) Channel half transfer flag </i>
//    <check> 
//      <loc> ( (unsigned int) DMA_IFCR ) </loc>
//      <o.6..6> CHTIF6
//    </check>
//  </item>
//  


// -------------------------------  Field Item: DMA_IFCR_CTEIF7  ----------------------------------
// SVD Line: 4285

//  <item> SFDITEM_FIELD__DMA_IFCR_CTEIF7
//    <name> CTEIF7 </name>
//    <r> 
//    <i> [Bit 7] RO (@ 0x40020004) Channel transfer error  flag </i>
//    <check> 
//      <loc> ( (unsigned int) DMA_IFCR ) </loc>
//      <o.7..7> CTEIF7
//    </check>
//  </item>
//  


// -------------------------------  Field Item: DMA_IFCR_CGIF8  -----------------------------------
// SVD Line: 4292

//  <item> SFDITEM_FIELD__DMA_IFCR_CGIF8
//    <name> CGIF8 </name>
//    <r> 
//    <i> [Bit 8] RO (@ 0x40020004) Channel global interrupt  flag </i>
//    <check> 
//      <loc> ( (unsigned int) DMA_IFCR ) </loc>
//      <o.8..8> CGIF8
//    </check>
//  </item>
//  


// -------------------------------  Field Item: DMA_IFCR_CTCIF9  ----------------------------------
// SVD Line: 4299

//  <item> SFDITEM_FIELD__DMA_IFCR_CTCIF9
//    <name> CTCIF9 </name>
//    <r> 
//    <i> [Bit 9] RO (@ 0x40020004) Channel transfer complete  flag </i>
//    <check> 
//      <loc> ( (unsigned int) DMA_IFCR ) </loc>
//      <o.9..9> CTCIF9
//    </check>
//  </item>
//  


// ------------------------------  Field Item: DMA_IFCR_CHTIF10  ----------------------------------
// SVD Line: 4306

//  <item> SFDITEM_FIELD__DMA_IFCR_CHTIF10
//    <name> CHTIF10 </name>
//    <r> 
//    <i> [Bit 10] RO (@ 0x40020004) Channel half transfer flag </i>
//    <check> 
//      <loc> ( (unsigned int) DMA_IFCR ) </loc>
//      <o.10..10> CHTIF10
//    </check>
//  </item>
//  


// ------------------------------  Field Item: DMA_IFCR_CTEIF11  ----------------------------------
// SVD Line: 4312

//  <item> SFDITEM_FIELD__DMA_IFCR_CTEIF11
//    <name> CTEIF11 </name>
//    <r> 
//    <i> [Bit 11] RO (@ 0x40020004) Channel transfer error  flag </i>
//    <check> 
//      <loc> ( (unsigned int) DMA_IFCR ) </loc>
//      <o.11..11> CTEIF11
//    </check>
//  </item>
//  


// -------------------------------  Field Item: DMA_IFCR_CGIF12  ----------------------------------
// SVD Line: 4319

//  <item> SFDITEM_FIELD__DMA_IFCR_CGIF12
//    <name> CGIF12 </name>
//    <r> 
//    <i> [Bit 12] RO (@ 0x40020004) Channel global interrupt  flag </i>
//    <check> 
//      <loc> ( (unsigned int) DMA_IFCR ) </loc>
//      <o.12..12> CGIF12
//    </check>
//  </item>
//  


// ------------------------------  Field Item: DMA_IFCR_CTCIF13  ----------------------------------
// SVD Line: 4326

//  <item> SFDITEM_FIELD__DMA_IFCR_CTCIF13
//    <name> CTCIF13 </name>
//    <r> 
//    <i> [Bit 13] RO (@ 0x40020004) Channel transfer complete  flag </i>
//    <check> 
//      <loc> ( (unsigned int) DMA_IFCR ) </loc>
//      <o.13..13> CTCIF13
//    </check>
//  </item>
//  


// ------------------------------  Field Item: DMA_IFCR_CHTIF14  ----------------------------------
// SVD Line: 4333

//  <item> SFDITEM_FIELD__DMA_IFCR_CHTIF14
//    <name> CHTIF14 </name>
//    <r> 
//    <i> [Bit 14] RO (@ 0x40020004) Channel half transfer flag </i>
//    <check> 
//      <loc> ( (unsigned int) DMA_IFCR ) </loc>
//      <o.14..14> CHTIF14
//    </check>
//  </item>
//  


// ------------------------------  Field Item: DMA_IFCR_CTEIF15  ----------------------------------
// SVD Line: 4339

//  <item> SFDITEM_FIELD__DMA_IFCR_CTEIF15
//    <name> CTEIF15 </name>
//    <r> 
//    <i> [Bit 15] RO (@ 0x40020004) Channel transfer error  flag </i>
//    <check> 
//      <loc> ( (unsigned int) DMA_IFCR ) </loc>
//      <o.15..15> CTEIF15
//    </check>
//  </item>
//  


// -------------------------------  Field Item: DMA_IFCR_CGIF16  ----------------------------------
// SVD Line: 4346

//  <item> SFDITEM_FIELD__DMA_IFCR_CGIF16
//    <name> CGIF16 </name>
//    <r> 
//    <i> [Bit 16] RO (@ 0x40020004) Channel global interrupt  flag </i>
//    <check> 
//      <loc> ( (unsigned int) DMA_IFCR ) </loc>
//      <o.16..16> CGIF16
//    </check>
//  </item>
//  


// ------------------------------  Field Item: DMA_IFCR_CTCIF17  ----------------------------------
// SVD Line: 4353

//  <item> SFDITEM_FIELD__DMA_IFCR_CTCIF17
//    <name> CTCIF17 </name>
//    <r> 
//    <i> [Bit 17] RO (@ 0x40020004) Channel transfer complete  flag </i>
//    <check> 
//      <loc> ( (unsigned int) DMA_IFCR ) </loc>
//      <o.17..17> CTCIF17
//    </check>
//  </item>
//  


// ------------------------------  Field Item: DMA_IFCR_CHTIF18  ----------------------------------
// SVD Line: 4360

//  <item> SFDITEM_FIELD__DMA_IFCR_CHTIF18
//    <name> CHTIF18 </name>
//    <r> 
//    <i> [Bit 18] RO (@ 0x40020004) Channel half transfer flag </i>
//    <check> 
//      <loc> ( (unsigned int) DMA_IFCR ) </loc>
//      <o.18..18> CHTIF18
//    </check>
//  </item>
//  


// ------------------------------  Field Item: DMA_IFCR_CTEIF19  ----------------------------------
// SVD Line: 4366

//  <item> SFDITEM_FIELD__DMA_IFCR_CTEIF19
//    <name> CTEIF19 </name>
//    <r> 
//    <i> [Bit 19] RO (@ 0x40020004) Channel transfer error  flag </i>
//    <check> 
//      <loc> ( (unsigned int) DMA_IFCR ) </loc>
//      <o.19..19> CTEIF19
//    </check>
//  </item>
//  


// -------------------------------  Field Item: DMA_IFCR_CGIF20  ----------------------------------
// SVD Line: 4373

//  <item> SFDITEM_FIELD__DMA_IFCR_CGIF20
//    <name> CGIF20 </name>
//    <r> 
//    <i> [Bit 20] RO (@ 0x40020004) Channel global interrupt  flag </i>
//    <check> 
//      <loc> ( (unsigned int) DMA_IFCR ) </loc>
//      <o.20..20> CGIF20
//    </check>
//  </item>
//  


// ------------------------------  Field Item: DMA_IFCR_CTCIF21  ----------------------------------
// SVD Line: 4380

//  <item> SFDITEM_FIELD__DMA_IFCR_CTCIF21
//    <name> CTCIF21 </name>
//    <r> 
//    <i> [Bit 21] RO (@ 0x40020004) Channel transfer complete  flag </i>
//    <check> 
//      <loc> ( (unsigned int) DMA_IFCR ) </loc>
//      <o.21..21> CTCIF21
//    </check>
//  </item>
//  


// ------------------------------  Field Item: DMA_IFCR_CHTIF22  ----------------------------------
// SVD Line: 4387

//  <item> SFDITEM_FIELD__DMA_IFCR_CHTIF22
//    <name> CHTIF22 </name>
//    <r> 
//    <i> [Bit 22] RO (@ 0x40020004) Channel half transfer flag </i>
//    <check> 
//      <loc> ( (unsigned int) DMA_IFCR ) </loc>
//      <o.22..22> CHTIF22
//    </check>
//  </item>
//  


// ------------------------------  Field Item: DMA_IFCR_CTEIF23  ----------------------------------
// SVD Line: 4393

//  <item> SFDITEM_FIELD__DMA_IFCR_CTEIF23
//    <name> CTEIF23 </name>
//    <r> 
//    <i> [Bit 23] RO (@ 0x40020004) Channel transfer error  flag </i>
//    <check> 
//      <loc> ( (unsigned int) DMA_IFCR ) </loc>
//      <o.23..23> CTEIF23
//    </check>
//  </item>
//  


// -------------------------------  Field Item: DMA_IFCR_CGIF24  ----------------------------------
// SVD Line: 4400

//  <item> SFDITEM_FIELD__DMA_IFCR_CGIF24
//    <name> CGIF24 </name>
//    <r> 
//    <i> [Bit 24] RO (@ 0x40020004) Channel global interrupt  flag </i>
//    <check> 
//      <loc> ( (unsigned int) DMA_IFCR ) </loc>
//      <o.24..24> CGIF24
//    </check>
//  </item>
//  


// ------------------------------  Field Item: DMA_IFCR_CTCIF25  ----------------------------------
// SVD Line: 4407

//  <item> SFDITEM_FIELD__DMA_IFCR_CTCIF25
//    <name> CTCIF25 </name>
//    <r> 
//    <i> [Bit 25] RO (@ 0x40020004) Channel transfer complete  flag </i>
//    <check> 
//      <loc> ( (unsigned int) DMA_IFCR ) </loc>
//      <o.25..25> CTCIF25
//    </check>
//  </item>
//  


// ------------------------------  Field Item: DMA_IFCR_CHTIF26  ----------------------------------
// SVD Line: 4414

//  <item> SFDITEM_FIELD__DMA_IFCR_CHTIF26
//    <name> CHTIF26 </name>
//    <r> 
//    <i> [Bit 26] RO (@ 0x40020004) Channel half transfer flag </i>
//    <check> 
//      <loc> ( (unsigned int) DMA_IFCR ) </loc>
//      <o.26..26> CHTIF26
//    </check>
//  </item>
//  


// ------------------------------  Field Item: DMA_IFCR_CTEIF27  ----------------------------------
// SVD Line: 4420

//  <item> SFDITEM_FIELD__DMA_IFCR_CTEIF27
//    <name> CTEIF27 </name>
//    <r> 
//    <i> [Bit 27] RO (@ 0x40020004) Channel transfer error  flag </i>
//    <check> 
//      <loc> ( (unsigned int) DMA_IFCR ) </loc>
//      <o.27..27> CTEIF27
//    </check>
//  </item>
//  


// --------------------------------  Register RTree: DMA_IFCR  ------------------------------------
// SVD Line: 4229

//  <rtree> SFDITEM_REG__DMA_IFCR
//    <name> IFCR </name>
//    <r> 
//    <i> [Bits 31..0] RO (@ 0x40020004) high interrupt status register </i>
//    <loc> ( (unsigned int)((DMA_IFCR >> 0) & 0xFFFFFFFF) ) </loc>
//    <item> SFDITEM_FIELD__DMA_IFCR_CGIF0 </item>
//    <item> SFDITEM_FIELD__DMA_IFCR_CTCIF1 </item>
//    <item> SFDITEM_FIELD__DMA_IFCR_CHTIF2 </item>
//    <item> SFDITEM_FIELD__DMA_IFCR_CTEIF3 </item>
//    <item> SFDITEM_FIELD__DMA_IFCR_CGIF4 </item>
//    <item> SFDITEM_FIELD__DMA_IFCR_CTCIF5 </item>
//    <item> SFDITEM_FIELD__DMA_IFCR_CHTIF6 </item>
//    <item> SFDITEM_FIELD__DMA_IFCR_CTEIF7 </item>
//    <item> SFDITEM_FIELD__DMA_IFCR_CGIF8 </item>
//    <item> SFDITEM_FIELD__DMA_IFCR_CTCIF9 </item>
//    <item> SFDITEM_FIELD__DMA_IFCR_CHTIF10 </item>
//    <item> SFDITEM_FIELD__DMA_IFCR_CTEIF11 </item>
//    <item> SFDITEM_FIELD__DMA_IFCR_CGIF12 </item>
//    <item> SFDITEM_FIELD__DMA_IFCR_CTCIF13 </item>
//    <item> SFDITEM_FIELD__DMA_IFCR_CHTIF14 </item>
//    <item> SFDITEM_FIELD__DMA_IFCR_CTEIF15 </item>
//    <item> SFDITEM_FIELD__DMA_IFCR_CGIF16 </item>
//    <item> SFDITEM_FIELD__DMA_IFCR_CTCIF17 </item>
//    <item> SFDITEM_FIELD__DMA_IFCR_CHTIF18 </item>
//    <item> SFDITEM_FIELD__DMA_IFCR_CTEIF19 </item>
//    <item> SFDITEM_FIELD__DMA_IFCR_CGIF20 </item>
//    <item> SFDITEM_FIELD__DMA_IFCR_CTCIF21 </item>
//    <item> SFDITEM_FIELD__DMA_IFCR_CHTIF22 </item>
//    <item> SFDITEM_FIELD__DMA_IFCR_CTEIF23 </item>
//    <item> SFDITEM_FIELD__DMA_IFCR_CGIF24 </item>
//    <item> SFDITEM_FIELD__DMA_IFCR_CTCIF25 </item>
//    <item> SFDITEM_FIELD__DMA_IFCR_CHTIF26 </item>
//    <item> SFDITEM_FIELD__DMA_IFCR_CTEIF27 </item>
//  </rtree>
//  


// -----------------------------  Register Item Address: DMA_CCR1  --------------------------------
// SVD Line: 4429

unsigned int DMA_CCR1 __AT (0x40020008);



// ---------------------------------  Field Item: DMA_CCR1_EN  ------------------------------------
// SVD Line: 4439

//  <item> SFDITEM_FIELD__DMA_CCR1_EN
//    <name> EN </name>
//    <rw> 
//    <i> [Bit 0] RW (@ 0x40020008) Channel enable </i>
//    <check> 
//      <loc> ( (unsigned int) DMA_CCR1 ) </loc>
//      <o.0..0> EN
//    </check>
//  </item>
//  


// --------------------------------  Field Item: DMA_CCR1_TCIE  -----------------------------------
// SVD Line: 4445

//  <item> SFDITEM_FIELD__DMA_CCR1_TCIE
//    <name> TCIE </name>
//    <rw> 
//    <i> [Bit 1] RW (@ 0x40020008) Transfer complete interrupt  enable </i>
//    <check> 
//      <loc> ( (unsigned int) DMA_CCR1 ) </loc>
//      <o.1..1> TCIE
//    </check>
//  </item>
//  


// --------------------------------  Field Item: DMA_CCR1_HTIE  -----------------------------------
// SVD Line: 4452

//  <item> SFDITEM_FIELD__DMA_CCR1_HTIE
//    <name> HTIE </name>
//    <rw> 
//    <i> [Bit 2] RW (@ 0x40020008) Half transfer interrupt  enable </i>
//    <check> 
//      <loc> ( (unsigned int) DMA_CCR1 ) </loc>
//      <o.2..2> HTIE
//    </check>
//  </item>
//  


// --------------------------------  Field Item: DMA_CCR1_TEIE  -----------------------------------
// SVD Line: 4459

//  <item> SFDITEM_FIELD__DMA_CCR1_TEIE
//    <name> TEIE </name>
//    <rw> 
//    <i> [Bit 3] RW (@ 0x40020008) Transfer error interrupt  enable </i>
//    <check> 
//      <loc> ( (unsigned int) DMA_CCR1 ) </loc>
//      <o.3..3> TEIE
//    </check>
//  </item>
//  


// --------------------------------  Field Item: DMA_CCR1_DIR  ------------------------------------
// SVD Line: 4466

//  <item> SFDITEM_FIELD__DMA_CCR1_DIR
//    <name> DIR </name>
//    <rw> 
//    <i> [Bit 4] RW (@ 0x40020008) Data transfer direction </i>
//    <check> 
//      <loc> ( (unsigned int) DMA_CCR1 ) </loc>
//      <o.4..4> DIR
//    </check>
//  </item>
//  


// --------------------------------  Field Item: DMA_CCR1_CIRC  -----------------------------------
// SVD Line: 4472

//  <item> SFDITEM_FIELD__DMA_CCR1_CIRC
//    <name> CIRC </name>
//    <rw> 
//    <i> [Bit 5] RW (@ 0x40020008) Circular mode </i>
//    <check> 
//      <loc> ( (unsigned int) DMA_CCR1 ) </loc>
//      <o.5..5> CIRC
//    </check>
//  </item>
//  


// --------------------------------  Field Item: DMA_CCR1_PINC  -----------------------------------
// SVD Line: 4478

//  <item> SFDITEM_FIELD__DMA_CCR1_PINC
//    <name> PINC </name>
//    <rw> 
//    <i> [Bit 6] RW (@ 0x40020008) Peripheral increment mode </i>
//    <check> 
//      <loc> ( (unsigned int) DMA_CCR1 ) </loc>
//      <o.6..6> PINC
//    </check>
//  </item>
//  


// --------------------------------  Field Item: DMA_CCR1_MINC  -----------------------------------
// SVD Line: 4484

//  <item> SFDITEM_FIELD__DMA_CCR1_MINC
//    <name> MINC </name>
//    <rw> 
//    <i> [Bit 7] RW (@ 0x40020008) Memory increment mode </i>
//    <check> 
//      <loc> ( (unsigned int) DMA_CCR1 ) </loc>
//      <o.7..7> MINC
//    </check>
//  </item>
//  


// -------------------------------  Field Item: DMA_CCR1_PSIZE  -----------------------------------
// SVD Line: 4490

//  <item> SFDITEM_FIELD__DMA_CCR1_PSIZE
//    <name> PSIZE </name>
//    <rw> 
//    <i> [Bits 9..8] RW (@ 0x40020008) Peripheral size </i>
//    <edit> 
//      <loc> ( (unsigned char)((DMA_CCR1 >> 8) & 0x3), ((DMA_CCR1 = (DMA_CCR1 & ~(0x3UL << 8 )) | ((unsigned long)(Gui_u8:GuiVal & 0x3) << 8 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -------------------------------  Field Item: DMA_CCR1_MSIZE  -----------------------------------
// SVD Line: 4496

//  <item> SFDITEM_FIELD__DMA_CCR1_MSIZE
//    <name> MSIZE </name>
//    <rw> 
//    <i> [Bits 11..10] RW (@ 0x40020008) Memory size </i>
//    <edit> 
//      <loc> ( (unsigned char)((DMA_CCR1 >> 10) & 0x3), ((DMA_CCR1 = (DMA_CCR1 & ~(0x3UL << 10 )) | ((unsigned long)(Gui_u8:GuiVal & 0x3) << 10 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ---------------------------------  Field Item: DMA_CCR1_PL  ------------------------------------
// SVD Line: 4502

//  <item> SFDITEM_FIELD__DMA_CCR1_PL
//    <name> PL </name>
//    <rw> 
//    <i> [Bits 13..12] RW (@ 0x40020008) Channel priority level </i>
//    <edit> 
//      <loc> ( (unsigned char)((DMA_CCR1 >> 12) & 0x3), ((DMA_CCR1 = (DMA_CCR1 & ~(0x3UL << 12 )) | ((unsigned long)(Gui_u8:GuiVal & 0x3) << 12 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ------------------------------  Field Item: DMA_CCR1_MEM2MEM  ----------------------------------
// SVD Line: 4508

//  <item> SFDITEM_FIELD__DMA_CCR1_MEM2MEM
//    <name> MEM2MEM </name>
//    <rw> 
//    <i> [Bit 14] RW (@ 0x40020008) Memory to memory mode </i>
//    <check> 
//      <loc> ( (unsigned int) DMA_CCR1 ) </loc>
//      <o.14..14> MEM2MEM
//    </check>
//  </item>
//  


// --------------------------------  Register RTree: DMA_CCR1  ------------------------------------
// SVD Line: 4429

//  <rtree> SFDITEM_REG__DMA_CCR1
//    <name> CCR1 </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x40020008) DMA channel x configuration  register </i>
//    <loc> ( (unsigned int)((DMA_CCR1 >> 0) & 0xFFFFFFFF), ((DMA_CCR1 = (DMA_CCR1 & ~(0x7FFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0x7FFF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__DMA_CCR1_EN </item>
//    <item> SFDITEM_FIELD__DMA_CCR1_TCIE </item>
//    <item> SFDITEM_FIELD__DMA_CCR1_HTIE </item>
//    <item> SFDITEM_FIELD__DMA_CCR1_TEIE </item>
//    <item> SFDITEM_FIELD__DMA_CCR1_DIR </item>
//    <item> SFDITEM_FIELD__DMA_CCR1_CIRC </item>
//    <item> SFDITEM_FIELD__DMA_CCR1_PINC </item>
//    <item> SFDITEM_FIELD__DMA_CCR1_MINC </item>
//    <item> SFDITEM_FIELD__DMA_CCR1_PSIZE </item>
//    <item> SFDITEM_FIELD__DMA_CCR1_MSIZE </item>
//    <item> SFDITEM_FIELD__DMA_CCR1_PL </item>
//    <item> SFDITEM_FIELD__DMA_CCR1_MEM2MEM </item>
//  </rtree>
//  


// -----------------------------  Register Item Address: DMA_CCR2  --------------------------------
// SVD Line: 4516

unsigned int DMA_CCR2 __AT (0x4002001C);



// ---------------------------------  Field Item: DMA_CCR2_EN  ------------------------------------
// SVD Line: 4526

//  <item> SFDITEM_FIELD__DMA_CCR2_EN
//    <name> EN </name>
//    <rw> 
//    <i> [Bit 0] RW (@ 0x4002001C) Channel enable </i>
//    <check> 
//      <loc> ( (unsigned int) DMA_CCR2 ) </loc>
//      <o.0..0> EN
//    </check>
//  </item>
//  


// --------------------------------  Field Item: DMA_CCR2_TCIE  -----------------------------------
// SVD Line: 4532

//  <item> SFDITEM_FIELD__DMA_CCR2_TCIE
//    <name> TCIE </name>
//    <rw> 
//    <i> [Bit 1] RW (@ 0x4002001C) Transfer complete interrupt  enable </i>
//    <check> 
//      <loc> ( (unsigned int) DMA_CCR2 ) </loc>
//      <o.1..1> TCIE
//    </check>
//  </item>
//  


// --------------------------------  Field Item: DMA_CCR2_HTIE  -----------------------------------
// SVD Line: 4539

//  <item> SFDITEM_FIELD__DMA_CCR2_HTIE
//    <name> HTIE </name>
//    <rw> 
//    <i> [Bit 2] RW (@ 0x4002001C) Half transfer interrupt  enable </i>
//    <check> 
//      <loc> ( (unsigned int) DMA_CCR2 ) </loc>
//      <o.2..2> HTIE
//    </check>
//  </item>
//  


// --------------------------------  Field Item: DMA_CCR2_TEIE  -----------------------------------
// SVD Line: 4546

//  <item> SFDITEM_FIELD__DMA_CCR2_TEIE
//    <name> TEIE </name>
//    <rw> 
//    <i> [Bit 3] RW (@ 0x4002001C) Transfer error interrupt  enable </i>
//    <check> 
//      <loc> ( (unsigned int) DMA_CCR2 ) </loc>
//      <o.3..3> TEIE
//    </check>
//  </item>
//  


// --------------------------------  Field Item: DMA_CCR2_DIR  ------------------------------------
// SVD Line: 4553

//  <item> SFDITEM_FIELD__DMA_CCR2_DIR
//    <name> DIR </name>
//    <rw> 
//    <i> [Bit 4] RW (@ 0x4002001C) Data transfer direction </i>
//    <check> 
//      <loc> ( (unsigned int) DMA_CCR2 ) </loc>
//      <o.4..4> DIR
//    </check>
//  </item>
//  


// --------------------------------  Field Item: DMA_CCR2_CIRC  -----------------------------------
// SVD Line: 4559

//  <item> SFDITEM_FIELD__DMA_CCR2_CIRC
//    <name> CIRC </name>
//    <rw> 
//    <i> [Bit 5] RW (@ 0x4002001C) Circular mode </i>
//    <check> 
//      <loc> ( (unsigned int) DMA_CCR2 ) </loc>
//      <o.5..5> CIRC
//    </check>
//  </item>
//  


// --------------------------------  Field Item: DMA_CCR2_PINC  -----------------------------------
// SVD Line: 4565

//  <item> SFDITEM_FIELD__DMA_CCR2_PINC
//    <name> PINC </name>
//    <rw> 
//    <i> [Bit 6] RW (@ 0x4002001C) Peripheral increment mode </i>
//    <check> 
//      <loc> ( (unsigned int) DMA_CCR2 ) </loc>
//      <o.6..6> PINC
//    </check>
//  </item>
//  


// --------------------------------  Field Item: DMA_CCR2_MINC  -----------------------------------
// SVD Line: 4571

//  <item> SFDITEM_FIELD__DMA_CCR2_MINC
//    <name> MINC </name>
//    <rw> 
//    <i> [Bit 7] RW (@ 0x4002001C) Memory increment mode </i>
//    <check> 
//      <loc> ( (unsigned int) DMA_CCR2 ) </loc>
//      <o.7..7> MINC
//    </check>
//  </item>
//  


// -------------------------------  Field Item: DMA_CCR2_PSIZE  -----------------------------------
// SVD Line: 4577

//  <item> SFDITEM_FIELD__DMA_CCR2_PSIZE
//    <name> PSIZE </name>
//    <rw> 
//    <i> [Bits 9..8] RW (@ 0x4002001C) Peripheral size </i>
//    <edit> 
//      <loc> ( (unsigned char)((DMA_CCR2 >> 8) & 0x3), ((DMA_CCR2 = (DMA_CCR2 & ~(0x3UL << 8 )) | ((unsigned long)(Gui_u8:GuiVal & 0x3) << 8 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -------------------------------  Field Item: DMA_CCR2_MSIZE  -----------------------------------
// SVD Line: 4583

//  <item> SFDITEM_FIELD__DMA_CCR2_MSIZE
//    <name> MSIZE </name>
//    <rw> 
//    <i> [Bits 11..10] RW (@ 0x4002001C) Memory size </i>
//    <edit> 
//      <loc> ( (unsigned char)((DMA_CCR2 >> 10) & 0x3), ((DMA_CCR2 = (DMA_CCR2 & ~(0x3UL << 10 )) | ((unsigned long)(Gui_u8:GuiVal & 0x3) << 10 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ---------------------------------  Field Item: DMA_CCR2_PL  ------------------------------------
// SVD Line: 4589

//  <item> SFDITEM_FIELD__DMA_CCR2_PL
//    <name> PL </name>
//    <rw> 
//    <i> [Bits 13..12] RW (@ 0x4002001C) Channel priority level </i>
//    <edit> 
//      <loc> ( (unsigned char)((DMA_CCR2 >> 12) & 0x3), ((DMA_CCR2 = (DMA_CCR2 & ~(0x3UL << 12 )) | ((unsigned long)(Gui_u8:GuiVal & 0x3) << 12 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ------------------------------  Field Item: DMA_CCR2_MEM2MEM  ----------------------------------
// SVD Line: 4595

//  <item> SFDITEM_FIELD__DMA_CCR2_MEM2MEM
//    <name> MEM2MEM </name>
//    <rw> 
//    <i> [Bit 14] RW (@ 0x4002001C) Memory to memory mode </i>
//    <check> 
//      <loc> ( (unsigned int) DMA_CCR2 ) </loc>
//      <o.14..14> MEM2MEM
//    </check>
//  </item>
//  


// --------------------------------  Register RTree: DMA_CCR2  ------------------------------------
// SVD Line: 4516

//  <rtree> SFDITEM_REG__DMA_CCR2
//    <name> CCR2 </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x4002001C) DMA channel x configuration  register </i>
//    <loc> ( (unsigned int)((DMA_CCR2 >> 0) & 0xFFFFFFFF), ((DMA_CCR2 = (DMA_CCR2 & ~(0x7FFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0x7FFF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__DMA_CCR2_EN </item>
//    <item> SFDITEM_FIELD__DMA_CCR2_TCIE </item>
//    <item> SFDITEM_FIELD__DMA_CCR2_HTIE </item>
//    <item> SFDITEM_FIELD__DMA_CCR2_TEIE </item>
//    <item> SFDITEM_FIELD__DMA_CCR2_DIR </item>
//    <item> SFDITEM_FIELD__DMA_CCR2_CIRC </item>
//    <item> SFDITEM_FIELD__DMA_CCR2_PINC </item>
//    <item> SFDITEM_FIELD__DMA_CCR2_MINC </item>
//    <item> SFDITEM_FIELD__DMA_CCR2_PSIZE </item>
//    <item> SFDITEM_FIELD__DMA_CCR2_MSIZE </item>
//    <item> SFDITEM_FIELD__DMA_CCR2_PL </item>
//    <item> SFDITEM_FIELD__DMA_CCR2_MEM2MEM </item>
//  </rtree>
//  


// -----------------------------  Register Item Address: DMA_CCR3  --------------------------------
// SVD Line: 4603

unsigned int DMA_CCR3 __AT (0x40020030);



// ---------------------------------  Field Item: DMA_CCR3_EN  ------------------------------------
// SVD Line: 4613

//  <item> SFDITEM_FIELD__DMA_CCR3_EN
//    <name> EN </name>
//    <rw> 
//    <i> [Bit 0] RW (@ 0x40020030) Channel enable </i>
//    <check> 
//      <loc> ( (unsigned int) DMA_CCR3 ) </loc>
//      <o.0..0> EN
//    </check>
//  </item>
//  


// --------------------------------  Field Item: DMA_CCR3_TCIE  -----------------------------------
// SVD Line: 4619

//  <item> SFDITEM_FIELD__DMA_CCR3_TCIE
//    <name> TCIE </name>
//    <rw> 
//    <i> [Bit 1] RW (@ 0x40020030) Transfer complete interrupt  enable </i>
//    <check> 
//      <loc> ( (unsigned int) DMA_CCR3 ) </loc>
//      <o.1..1> TCIE
//    </check>
//  </item>
//  


// --------------------------------  Field Item: DMA_CCR3_HTIE  -----------------------------------
// SVD Line: 4626

//  <item> SFDITEM_FIELD__DMA_CCR3_HTIE
//    <name> HTIE </name>
//    <rw> 
//    <i> [Bit 2] RW (@ 0x40020030) Half transfer interrupt  enable </i>
//    <check> 
//      <loc> ( (unsigned int) DMA_CCR3 ) </loc>
//      <o.2..2> HTIE
//    </check>
//  </item>
//  


// --------------------------------  Field Item: DMA_CCR3_TEIE  -----------------------------------
// SVD Line: 4633

//  <item> SFDITEM_FIELD__DMA_CCR3_TEIE
//    <name> TEIE </name>
//    <rw> 
//    <i> [Bit 3] RW (@ 0x40020030) Transfer error interrupt  enable </i>
//    <check> 
//      <loc> ( (unsigned int) DMA_CCR3 ) </loc>
//      <o.3..3> TEIE
//    </check>
//  </item>
//  


// --------------------------------  Field Item: DMA_CCR3_DIR  ------------------------------------
// SVD Line: 4640

//  <item> SFDITEM_FIELD__DMA_CCR3_DIR
//    <name> DIR </name>
//    <rw> 
//    <i> [Bit 4] RW (@ 0x40020030) Data transfer direction </i>
//    <check> 
//      <loc> ( (unsigned int) DMA_CCR3 ) </loc>
//      <o.4..4> DIR
//    </check>
//  </item>
//  


// --------------------------------  Field Item: DMA_CCR3_CIRC  -----------------------------------
// SVD Line: 4646

//  <item> SFDITEM_FIELD__DMA_CCR3_CIRC
//    <name> CIRC </name>
//    <rw> 
//    <i> [Bit 5] RW (@ 0x40020030) Circular mode </i>
//    <check> 
//      <loc> ( (unsigned int) DMA_CCR3 ) </loc>
//      <o.5..5> CIRC
//    </check>
//  </item>
//  


// --------------------------------  Field Item: DMA_CCR3_PINC  -----------------------------------
// SVD Line: 4652

//  <item> SFDITEM_FIELD__DMA_CCR3_PINC
//    <name> PINC </name>
//    <rw> 
//    <i> [Bit 6] RW (@ 0x40020030) Peripheral increment mode </i>
//    <check> 
//      <loc> ( (unsigned int) DMA_CCR3 ) </loc>
//      <o.6..6> PINC
//    </check>
//  </item>
//  


// --------------------------------  Field Item: DMA_CCR3_MINC  -----------------------------------
// SVD Line: 4658

//  <item> SFDITEM_FIELD__DMA_CCR3_MINC
//    <name> MINC </name>
//    <rw> 
//    <i> [Bit 7] RW (@ 0x40020030) Memory increment mode </i>
//    <check> 
//      <loc> ( (unsigned int) DMA_CCR3 ) </loc>
//      <o.7..7> MINC
//    </check>
//  </item>
//  


// -------------------------------  Field Item: DMA_CCR3_PSIZE  -----------------------------------
// SVD Line: 4664

//  <item> SFDITEM_FIELD__DMA_CCR3_PSIZE
//    <name> PSIZE </name>
//    <rw> 
//    <i> [Bits 9..8] RW (@ 0x40020030) Peripheral size </i>
//    <edit> 
//      <loc> ( (unsigned char)((DMA_CCR3 >> 8) & 0x3), ((DMA_CCR3 = (DMA_CCR3 & ~(0x3UL << 8 )) | ((unsigned long)(Gui_u8:GuiVal & 0x3) << 8 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -------------------------------  Field Item: DMA_CCR3_MSIZE  -----------------------------------
// SVD Line: 4670

//  <item> SFDITEM_FIELD__DMA_CCR3_MSIZE
//    <name> MSIZE </name>
//    <rw> 
//    <i> [Bits 11..10] RW (@ 0x40020030) Memory size </i>
//    <edit> 
//      <loc> ( (unsigned char)((DMA_CCR3 >> 10) & 0x3), ((DMA_CCR3 = (DMA_CCR3 & ~(0x3UL << 10 )) | ((unsigned long)(Gui_u8:GuiVal & 0x3) << 10 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ---------------------------------  Field Item: DMA_CCR3_PL  ------------------------------------
// SVD Line: 4676

//  <item> SFDITEM_FIELD__DMA_CCR3_PL
//    <name> PL </name>
//    <rw> 
//    <i> [Bits 13..12] RW (@ 0x40020030) Channel priority level </i>
//    <edit> 
//      <loc> ( (unsigned char)((DMA_CCR3 >> 12) & 0x3), ((DMA_CCR3 = (DMA_CCR3 & ~(0x3UL << 12 )) | ((unsigned long)(Gui_u8:GuiVal & 0x3) << 12 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ------------------------------  Field Item: DMA_CCR3_MEM2MEM  ----------------------------------
// SVD Line: 4682

//  <item> SFDITEM_FIELD__DMA_CCR3_MEM2MEM
//    <name> MEM2MEM </name>
//    <rw> 
//    <i> [Bit 14] RW (@ 0x40020030) Memory to memory mode </i>
//    <check> 
//      <loc> ( (unsigned int) DMA_CCR3 ) </loc>
//      <o.14..14> MEM2MEM
//    </check>
//  </item>
//  


// --------------------------------  Register RTree: DMA_CCR3  ------------------------------------
// SVD Line: 4603

//  <rtree> SFDITEM_REG__DMA_CCR3
//    <name> CCR3 </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x40020030) DMA channel x configuration  register </i>
//    <loc> ( (unsigned int)((DMA_CCR3 >> 0) & 0xFFFFFFFF), ((DMA_CCR3 = (DMA_CCR3 & ~(0x7FFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0x7FFF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__DMA_CCR3_EN </item>
//    <item> SFDITEM_FIELD__DMA_CCR3_TCIE </item>
//    <item> SFDITEM_FIELD__DMA_CCR3_HTIE </item>
//    <item> SFDITEM_FIELD__DMA_CCR3_TEIE </item>
//    <item> SFDITEM_FIELD__DMA_CCR3_DIR </item>
//    <item> SFDITEM_FIELD__DMA_CCR3_CIRC </item>
//    <item> SFDITEM_FIELD__DMA_CCR3_PINC </item>
//    <item> SFDITEM_FIELD__DMA_CCR3_MINC </item>
//    <item> SFDITEM_FIELD__DMA_CCR3_PSIZE </item>
//    <item> SFDITEM_FIELD__DMA_CCR3_MSIZE </item>
//    <item> SFDITEM_FIELD__DMA_CCR3_PL </item>
//    <item> SFDITEM_FIELD__DMA_CCR3_MEM2MEM </item>
//  </rtree>
//  


// -----------------------------  Register Item Address: DMA_CCR4  --------------------------------
// SVD Line: 4690

unsigned int DMA_CCR4 __AT (0x40020044);



// ---------------------------------  Field Item: DMA_CCR4_EN  ------------------------------------
// SVD Line: 4700

//  <item> SFDITEM_FIELD__DMA_CCR4_EN
//    <name> EN </name>
//    <rw> 
//    <i> [Bit 0] RW (@ 0x40020044) Channel enable </i>
//    <check> 
//      <loc> ( (unsigned int) DMA_CCR4 ) </loc>
//      <o.0..0> EN
//    </check>
//  </item>
//  


// --------------------------------  Field Item: DMA_CCR4_TCIE  -----------------------------------
// SVD Line: 4706

//  <item> SFDITEM_FIELD__DMA_CCR4_TCIE
//    <name> TCIE </name>
//    <rw> 
//    <i> [Bit 1] RW (@ 0x40020044) Transfer complete interrupt  enable </i>
//    <check> 
//      <loc> ( (unsigned int) DMA_CCR4 ) </loc>
//      <o.1..1> TCIE
//    </check>
//  </item>
//  


// --------------------------------  Field Item: DMA_CCR4_HTIE  -----------------------------------
// SVD Line: 4713

//  <item> SFDITEM_FIELD__DMA_CCR4_HTIE
//    <name> HTIE </name>
//    <rw> 
//    <i> [Bit 2] RW (@ 0x40020044) Half transfer interrupt  enable </i>
//    <check> 
//      <loc> ( (unsigned int) DMA_CCR4 ) </loc>
//      <o.2..2> HTIE
//    </check>
//  </item>
//  


// --------------------------------  Field Item: DMA_CCR4_TEIE  -----------------------------------
// SVD Line: 4720

//  <item> SFDITEM_FIELD__DMA_CCR4_TEIE
//    <name> TEIE </name>
//    <rw> 
//    <i> [Bit 3] RW (@ 0x40020044) Transfer error interrupt  enable </i>
//    <check> 
//      <loc> ( (unsigned int) DMA_CCR4 ) </loc>
//      <o.3..3> TEIE
//    </check>
//  </item>
//  


// --------------------------------  Field Item: DMA_CCR4_DIR  ------------------------------------
// SVD Line: 4727

//  <item> SFDITEM_FIELD__DMA_CCR4_DIR
//    <name> DIR </name>
//    <rw> 
//    <i> [Bit 4] RW (@ 0x40020044) Data transfer direction </i>
//    <check> 
//      <loc> ( (unsigned int) DMA_CCR4 ) </loc>
//      <o.4..4> DIR
//    </check>
//  </item>
//  


// --------------------------------  Field Item: DMA_CCR4_CIRC  -----------------------------------
// SVD Line: 4733

//  <item> SFDITEM_FIELD__DMA_CCR4_CIRC
//    <name> CIRC </name>
//    <rw> 
//    <i> [Bit 5] RW (@ 0x40020044) Circular mode </i>
//    <check> 
//      <loc> ( (unsigned int) DMA_CCR4 ) </loc>
//      <o.5..5> CIRC
//    </check>
//  </item>
//  


// --------------------------------  Field Item: DMA_CCR4_PINC  -----------------------------------
// SVD Line: 4739

//  <item> SFDITEM_FIELD__DMA_CCR4_PINC
//    <name> PINC </name>
//    <rw> 
//    <i> [Bit 6] RW (@ 0x40020044) Peripheral increment mode </i>
//    <check> 
//      <loc> ( (unsigned int) DMA_CCR4 ) </loc>
//      <o.6..6> PINC
//    </check>
//  </item>
//  


// --------------------------------  Field Item: DMA_CCR4_MINC  -----------------------------------
// SVD Line: 4745

//  <item> SFDITEM_FIELD__DMA_CCR4_MINC
//    <name> MINC </name>
//    <rw> 
//    <i> [Bit 7] RW (@ 0x40020044) Memory increment mode </i>
//    <check> 
//      <loc> ( (unsigned int) DMA_CCR4 ) </loc>
//      <o.7..7> MINC
//    </check>
//  </item>
//  


// -------------------------------  Field Item: DMA_CCR4_PSIZE  -----------------------------------
// SVD Line: 4751

//  <item> SFDITEM_FIELD__DMA_CCR4_PSIZE
//    <name> PSIZE </name>
//    <rw> 
//    <i> [Bits 9..8] RW (@ 0x40020044) Peripheral size </i>
//    <edit> 
//      <loc> ( (unsigned char)((DMA_CCR4 >> 8) & 0x3), ((DMA_CCR4 = (DMA_CCR4 & ~(0x3UL << 8 )) | ((unsigned long)(Gui_u8:GuiVal & 0x3) << 8 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -------------------------------  Field Item: DMA_CCR4_MSIZE  -----------------------------------
// SVD Line: 4757

//  <item> SFDITEM_FIELD__DMA_CCR4_MSIZE
//    <name> MSIZE </name>
//    <rw> 
//    <i> [Bits 11..10] RW (@ 0x40020044) Memory size </i>
//    <edit> 
//      <loc> ( (unsigned char)((DMA_CCR4 >> 10) & 0x3), ((DMA_CCR4 = (DMA_CCR4 & ~(0x3UL << 10 )) | ((unsigned long)(Gui_u8:GuiVal & 0x3) << 10 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ---------------------------------  Field Item: DMA_CCR4_PL  ------------------------------------
// SVD Line: 4763

//  <item> SFDITEM_FIELD__DMA_CCR4_PL
//    <name> PL </name>
//    <rw> 
//    <i> [Bits 13..12] RW (@ 0x40020044) Channel priority level </i>
//    <edit> 
//      <loc> ( (unsigned char)((DMA_CCR4 >> 12) & 0x3), ((DMA_CCR4 = (DMA_CCR4 & ~(0x3UL << 12 )) | ((unsigned long)(Gui_u8:GuiVal & 0x3) << 12 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ------------------------------  Field Item: DMA_CCR4_MEM2MEM  ----------------------------------
// SVD Line: 4769

//  <item> SFDITEM_FIELD__DMA_CCR4_MEM2MEM
//    <name> MEM2MEM </name>
//    <rw> 
//    <i> [Bit 14] RW (@ 0x40020044) Memory to memory mode </i>
//    <check> 
//      <loc> ( (unsigned int) DMA_CCR4 ) </loc>
//      <o.14..14> MEM2MEM
//    </check>
//  </item>
//  


// --------------------------------  Register RTree: DMA_CCR4  ------------------------------------
// SVD Line: 4690

//  <rtree> SFDITEM_REG__DMA_CCR4
//    <name> CCR4 </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x40020044) DMA channel x configuration  register </i>
//    <loc> ( (unsigned int)((DMA_CCR4 >> 0) & 0xFFFFFFFF), ((DMA_CCR4 = (DMA_CCR4 & ~(0x7FFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0x7FFF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__DMA_CCR4_EN </item>
//    <item> SFDITEM_FIELD__DMA_CCR4_TCIE </item>
//    <item> SFDITEM_FIELD__DMA_CCR4_HTIE </item>
//    <item> SFDITEM_FIELD__DMA_CCR4_TEIE </item>
//    <item> SFDITEM_FIELD__DMA_CCR4_DIR </item>
//    <item> SFDITEM_FIELD__DMA_CCR4_CIRC </item>
//    <item> SFDITEM_FIELD__DMA_CCR4_PINC </item>
//    <item> SFDITEM_FIELD__DMA_CCR4_MINC </item>
//    <item> SFDITEM_FIELD__DMA_CCR4_PSIZE </item>
//    <item> SFDITEM_FIELD__DMA_CCR4_MSIZE </item>
//    <item> SFDITEM_FIELD__DMA_CCR4_PL </item>
//    <item> SFDITEM_FIELD__DMA_CCR4_MEM2MEM </item>
//  </rtree>
//  


// -----------------------------  Register Item Address: DMA_CCR5  --------------------------------
// SVD Line: 4777

unsigned int DMA_CCR5 __AT (0x40020058);



// ---------------------------------  Field Item: DMA_CCR5_EN  ------------------------------------
// SVD Line: 4787

//  <item> SFDITEM_FIELD__DMA_CCR5_EN
//    <name> EN </name>
//    <rw> 
//    <i> [Bit 0] RW (@ 0x40020058) Channel enable </i>
//    <check> 
//      <loc> ( (unsigned int) DMA_CCR5 ) </loc>
//      <o.0..0> EN
//    </check>
//  </item>
//  


// --------------------------------  Field Item: DMA_CCR5_TCIE  -----------------------------------
// SVD Line: 4793

//  <item> SFDITEM_FIELD__DMA_CCR5_TCIE
//    <name> TCIE </name>
//    <rw> 
//    <i> [Bit 1] RW (@ 0x40020058) Transfer complete interrupt  enable </i>
//    <check> 
//      <loc> ( (unsigned int) DMA_CCR5 ) </loc>
//      <o.1..1> TCIE
//    </check>
//  </item>
//  


// --------------------------------  Field Item: DMA_CCR5_HTIE  -----------------------------------
// SVD Line: 4800

//  <item> SFDITEM_FIELD__DMA_CCR5_HTIE
//    <name> HTIE </name>
//    <rw> 
//    <i> [Bit 2] RW (@ 0x40020058) Half transfer interrupt  enable </i>
//    <check> 
//      <loc> ( (unsigned int) DMA_CCR5 ) </loc>
//      <o.2..2> HTIE
//    </check>
//  </item>
//  


// --------------------------------  Field Item: DMA_CCR5_TEIE  -----------------------------------
// SVD Line: 4807

//  <item> SFDITEM_FIELD__DMA_CCR5_TEIE
//    <name> TEIE </name>
//    <rw> 
//    <i> [Bit 3] RW (@ 0x40020058) Transfer error interrupt  enable </i>
//    <check> 
//      <loc> ( (unsigned int) DMA_CCR5 ) </loc>
//      <o.3..3> TEIE
//    </check>
//  </item>
//  


// --------------------------------  Field Item: DMA_CCR5_DIR  ------------------------------------
// SVD Line: 4814

//  <item> SFDITEM_FIELD__DMA_CCR5_DIR
//    <name> DIR </name>
//    <rw> 
//    <i> [Bit 4] RW (@ 0x40020058) Data transfer direction </i>
//    <check> 
//      <loc> ( (unsigned int) DMA_CCR5 ) </loc>
//      <o.4..4> DIR
//    </check>
//  </item>
//  


// --------------------------------  Field Item: DMA_CCR5_CIRC  -----------------------------------
// SVD Line: 4820

//  <item> SFDITEM_FIELD__DMA_CCR5_CIRC
//    <name> CIRC </name>
//    <rw> 
//    <i> [Bit 5] RW (@ 0x40020058) Circular mode </i>
//    <check> 
//      <loc> ( (unsigned int) DMA_CCR5 ) </loc>
//      <o.5..5> CIRC
//    </check>
//  </item>
//  


// --------------------------------  Field Item: DMA_CCR5_PINC  -----------------------------------
// SVD Line: 4826

//  <item> SFDITEM_FIELD__DMA_CCR5_PINC
//    <name> PINC </name>
//    <rw> 
//    <i> [Bit 6] RW (@ 0x40020058) Peripheral increment mode </i>
//    <check> 
//      <loc> ( (unsigned int) DMA_CCR5 ) </loc>
//      <o.6..6> PINC
//    </check>
//  </item>
//  


// --------------------------------  Field Item: DMA_CCR5_MINC  -----------------------------------
// SVD Line: 4832

//  <item> SFDITEM_FIELD__DMA_CCR5_MINC
//    <name> MINC </name>
//    <rw> 
//    <i> [Bit 7] RW (@ 0x40020058) Memory increment mode </i>
//    <check> 
//      <loc> ( (unsigned int) DMA_CCR5 ) </loc>
//      <o.7..7> MINC
//    </check>
//  </item>
//  


// -------------------------------  Field Item: DMA_CCR5_PSIZE  -----------------------------------
// SVD Line: 4838

//  <item> SFDITEM_FIELD__DMA_CCR5_PSIZE
//    <name> PSIZE </name>
//    <rw> 
//    <i> [Bits 9..8] RW (@ 0x40020058) Peripheral size </i>
//    <edit> 
//      <loc> ( (unsigned char)((DMA_CCR5 >> 8) & 0x3), ((DMA_CCR5 = (DMA_CCR5 & ~(0x3UL << 8 )) | ((unsigned long)(Gui_u8:GuiVal & 0x3) << 8 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -------------------------------  Field Item: DMA_CCR5_MSIZE  -----------------------------------
// SVD Line: 4844

//  <item> SFDITEM_FIELD__DMA_CCR5_MSIZE
//    <name> MSIZE </name>
//    <rw> 
//    <i> [Bits 11..10] RW (@ 0x40020058) Memory size </i>
//    <edit> 
//      <loc> ( (unsigned char)((DMA_CCR5 >> 10) & 0x3), ((DMA_CCR5 = (DMA_CCR5 & ~(0x3UL << 10 )) | ((unsigned long)(Gui_u8:GuiVal & 0x3) << 10 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ---------------------------------  Field Item: DMA_CCR5_PL  ------------------------------------
// SVD Line: 4850

//  <item> SFDITEM_FIELD__DMA_CCR5_PL
//    <name> PL </name>
//    <rw> 
//    <i> [Bits 13..12] RW (@ 0x40020058) Channel priority level </i>
//    <edit> 
//      <loc> ( (unsigned char)((DMA_CCR5 >> 12) & 0x3), ((DMA_CCR5 = (DMA_CCR5 & ~(0x3UL << 12 )) | ((unsigned long)(Gui_u8:GuiVal & 0x3) << 12 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ------------------------------  Field Item: DMA_CCR5_MEM2MEM  ----------------------------------
// SVD Line: 4856

//  <item> SFDITEM_FIELD__DMA_CCR5_MEM2MEM
//    <name> MEM2MEM </name>
//    <rw> 
//    <i> [Bit 14] RW (@ 0x40020058) Memory to memory mode </i>
//    <check> 
//      <loc> ( (unsigned int) DMA_CCR5 ) </loc>
//      <o.14..14> MEM2MEM
//    </check>
//  </item>
//  


// --------------------------------  Register RTree: DMA_CCR5  ------------------------------------
// SVD Line: 4777

//  <rtree> SFDITEM_REG__DMA_CCR5
//    <name> CCR5 </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x40020058) DMA channel x configuration  register </i>
//    <loc> ( (unsigned int)((DMA_CCR5 >> 0) & 0xFFFFFFFF), ((DMA_CCR5 = (DMA_CCR5 & ~(0x7FFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0x7FFF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__DMA_CCR5_EN </item>
//    <item> SFDITEM_FIELD__DMA_CCR5_TCIE </item>
//    <item> SFDITEM_FIELD__DMA_CCR5_HTIE </item>
//    <item> SFDITEM_FIELD__DMA_CCR5_TEIE </item>
//    <item> SFDITEM_FIELD__DMA_CCR5_DIR </item>
//    <item> SFDITEM_FIELD__DMA_CCR5_CIRC </item>
//    <item> SFDITEM_FIELD__DMA_CCR5_PINC </item>
//    <item> SFDITEM_FIELD__DMA_CCR5_MINC </item>
//    <item> SFDITEM_FIELD__DMA_CCR5_PSIZE </item>
//    <item> SFDITEM_FIELD__DMA_CCR5_MSIZE </item>
//    <item> SFDITEM_FIELD__DMA_CCR5_PL </item>
//    <item> SFDITEM_FIELD__DMA_CCR5_MEM2MEM </item>
//  </rtree>
//  


// -----------------------------  Register Item Address: DMA_CCR6  --------------------------------
// SVD Line: 4864

unsigned int DMA_CCR6 __AT (0x4002006C);



// ---------------------------------  Field Item: DMA_CCR6_EN  ------------------------------------
// SVD Line: 4874

//  <item> SFDITEM_FIELD__DMA_CCR6_EN
//    <name> EN </name>
//    <rw> 
//    <i> [Bit 0] RW (@ 0x4002006C) Channel enable </i>
//    <check> 
//      <loc> ( (unsigned int) DMA_CCR6 ) </loc>
//      <o.0..0> EN
//    </check>
//  </item>
//  


// --------------------------------  Field Item: DMA_CCR6_TCIE  -----------------------------------
// SVD Line: 4880

//  <item> SFDITEM_FIELD__DMA_CCR6_TCIE
//    <name> TCIE </name>
//    <rw> 
//    <i> [Bit 1] RW (@ 0x4002006C) Transfer complete interrupt  enable </i>
//    <check> 
//      <loc> ( (unsigned int) DMA_CCR6 ) </loc>
//      <o.1..1> TCIE
//    </check>
//  </item>
//  


// --------------------------------  Field Item: DMA_CCR6_HTIE  -----------------------------------
// SVD Line: 4887

//  <item> SFDITEM_FIELD__DMA_CCR6_HTIE
//    <name> HTIE </name>
//    <rw> 
//    <i> [Bit 2] RW (@ 0x4002006C) Half transfer interrupt  enable </i>
//    <check> 
//      <loc> ( (unsigned int) DMA_CCR6 ) </loc>
//      <o.2..2> HTIE
//    </check>
//  </item>
//  


// --------------------------------  Field Item: DMA_CCR6_TEIE  -----------------------------------
// SVD Line: 4894

//  <item> SFDITEM_FIELD__DMA_CCR6_TEIE
//    <name> TEIE </name>
//    <rw> 
//    <i> [Bit 3] RW (@ 0x4002006C) Transfer error interrupt  enable </i>
//    <check> 
//      <loc> ( (unsigned int) DMA_CCR6 ) </loc>
//      <o.3..3> TEIE
//    </check>
//  </item>
//  


// --------------------------------  Field Item: DMA_CCR6_DIR  ------------------------------------
// SVD Line: 4901

//  <item> SFDITEM_FIELD__DMA_CCR6_DIR
//    <name> DIR </name>
//    <rw> 
//    <i> [Bit 4] RW (@ 0x4002006C) Data transfer direction </i>
//    <check> 
//      <loc> ( (unsigned int) DMA_CCR6 ) </loc>
//      <o.4..4> DIR
//    </check>
//  </item>
//  


// --------------------------------  Field Item: DMA_CCR6_CIRC  -----------------------------------
// SVD Line: 4907

//  <item> SFDITEM_FIELD__DMA_CCR6_CIRC
//    <name> CIRC </name>
//    <rw> 
//    <i> [Bit 5] RW (@ 0x4002006C) Circular mode </i>
//    <check> 
//      <loc> ( (unsigned int) DMA_CCR6 ) </loc>
//      <o.5..5> CIRC
//    </check>
//  </item>
//  


// --------------------------------  Field Item: DMA_CCR6_PINC  -----------------------------------
// SVD Line: 4913

//  <item> SFDITEM_FIELD__DMA_CCR6_PINC
//    <name> PINC </name>
//    <rw> 
//    <i> [Bit 6] RW (@ 0x4002006C) Peripheral increment mode </i>
//    <check> 
//      <loc> ( (unsigned int) DMA_CCR6 ) </loc>
//      <o.6..6> PINC
//    </check>
//  </item>
//  


// --------------------------------  Field Item: DMA_CCR6_MINC  -----------------------------------
// SVD Line: 4919

//  <item> SFDITEM_FIELD__DMA_CCR6_MINC
//    <name> MINC </name>
//    <rw> 
//    <i> [Bit 7] RW (@ 0x4002006C) Memory increment mode </i>
//    <check> 
//      <loc> ( (unsigned int) DMA_CCR6 ) </loc>
//      <o.7..7> MINC
//    </check>
//  </item>
//  


// -------------------------------  Field Item: DMA_CCR6_PSIZE  -----------------------------------
// SVD Line: 4925

//  <item> SFDITEM_FIELD__DMA_CCR6_PSIZE
//    <name> PSIZE </name>
//    <rw> 
//    <i> [Bits 9..8] RW (@ 0x4002006C) Peripheral size </i>
//    <edit> 
//      <loc> ( (unsigned char)((DMA_CCR6 >> 8) & 0x3), ((DMA_CCR6 = (DMA_CCR6 & ~(0x3UL << 8 )) | ((unsigned long)(Gui_u8:GuiVal & 0x3) << 8 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -------------------------------  Field Item: DMA_CCR6_MSIZE  -----------------------------------
// SVD Line: 4931

//  <item> SFDITEM_FIELD__DMA_CCR6_MSIZE
//    <name> MSIZE </name>
//    <rw> 
//    <i> [Bits 11..10] RW (@ 0x4002006C) Memory size </i>
//    <edit> 
//      <loc> ( (unsigned char)((DMA_CCR6 >> 10) & 0x3), ((DMA_CCR6 = (DMA_CCR6 & ~(0x3UL << 10 )) | ((unsigned long)(Gui_u8:GuiVal & 0x3) << 10 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ---------------------------------  Field Item: DMA_CCR6_PL  ------------------------------------
// SVD Line: 4937

//  <item> SFDITEM_FIELD__DMA_CCR6_PL
//    <name> PL </name>
//    <rw> 
//    <i> [Bits 13..12] RW (@ 0x4002006C) Channel priority level </i>
//    <edit> 
//      <loc> ( (unsigned char)((DMA_CCR6 >> 12) & 0x3), ((DMA_CCR6 = (DMA_CCR6 & ~(0x3UL << 12 )) | ((unsigned long)(Gui_u8:GuiVal & 0x3) << 12 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ------------------------------  Field Item: DMA_CCR6_MEM2MEM  ----------------------------------
// SVD Line: 4943

//  <item> SFDITEM_FIELD__DMA_CCR6_MEM2MEM
//    <name> MEM2MEM </name>
//    <rw> 
//    <i> [Bit 14] RW (@ 0x4002006C) Memory to memory mode </i>
//    <check> 
//      <loc> ( (unsigned int) DMA_CCR6 ) </loc>
//      <o.14..14> MEM2MEM
//    </check>
//  </item>
//  


// --------------------------------  Register RTree: DMA_CCR6  ------------------------------------
// SVD Line: 4864

//  <rtree> SFDITEM_REG__DMA_CCR6
//    <name> CCR6 </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x4002006C) DMA channel x configuration  register </i>
//    <loc> ( (unsigned int)((DMA_CCR6 >> 0) & 0xFFFFFFFF), ((DMA_CCR6 = (DMA_CCR6 & ~(0x7FFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0x7FFF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__DMA_CCR6_EN </item>
//    <item> SFDITEM_FIELD__DMA_CCR6_TCIE </item>
//    <item> SFDITEM_FIELD__DMA_CCR6_HTIE </item>
//    <item> SFDITEM_FIELD__DMA_CCR6_TEIE </item>
//    <item> SFDITEM_FIELD__DMA_CCR6_DIR </item>
//    <item> SFDITEM_FIELD__DMA_CCR6_CIRC </item>
//    <item> SFDITEM_FIELD__DMA_CCR6_PINC </item>
//    <item> SFDITEM_FIELD__DMA_CCR6_MINC </item>
//    <item> SFDITEM_FIELD__DMA_CCR6_PSIZE </item>
//    <item> SFDITEM_FIELD__DMA_CCR6_MSIZE </item>
//    <item> SFDITEM_FIELD__DMA_CCR6_PL </item>
//    <item> SFDITEM_FIELD__DMA_CCR6_MEM2MEM </item>
//  </rtree>
//  


// -----------------------------  Register Item Address: DMA_CCR7  --------------------------------
// SVD Line: 4951

unsigned int DMA_CCR7 __AT (0x40020080);



// ---------------------------------  Field Item: DMA_CCR7_EN  ------------------------------------
// SVD Line: 4961

//  <item> SFDITEM_FIELD__DMA_CCR7_EN
//    <name> EN </name>
//    <rw> 
//    <i> [Bit 0] RW (@ 0x40020080) Channel enable </i>
//    <check> 
//      <loc> ( (unsigned int) DMA_CCR7 ) </loc>
//      <o.0..0> EN
//    </check>
//  </item>
//  


// --------------------------------  Field Item: DMA_CCR7_TCIE  -----------------------------------
// SVD Line: 4967

//  <item> SFDITEM_FIELD__DMA_CCR7_TCIE
//    <name> TCIE </name>
//    <rw> 
//    <i> [Bit 1] RW (@ 0x40020080) Transfer complete interrupt  enable </i>
//    <check> 
//      <loc> ( (unsigned int) DMA_CCR7 ) </loc>
//      <o.1..1> TCIE
//    </check>
//  </item>
//  


// --------------------------------  Field Item: DMA_CCR7_HTIE  -----------------------------------
// SVD Line: 4974

//  <item> SFDITEM_FIELD__DMA_CCR7_HTIE
//    <name> HTIE </name>
//    <rw> 
//    <i> [Bit 2] RW (@ 0x40020080) Half transfer interrupt  enable </i>
//    <check> 
//      <loc> ( (unsigned int) DMA_CCR7 ) </loc>
//      <o.2..2> HTIE
//    </check>
//  </item>
//  


// --------------------------------  Field Item: DMA_CCR7_TEIE  -----------------------------------
// SVD Line: 4981

//  <item> SFDITEM_FIELD__DMA_CCR7_TEIE
//    <name> TEIE </name>
//    <rw> 
//    <i> [Bit 3] RW (@ 0x40020080) Transfer error interrupt  enable </i>
//    <check> 
//      <loc> ( (unsigned int) DMA_CCR7 ) </loc>
//      <o.3..3> TEIE
//    </check>
//  </item>
//  


// --------------------------------  Field Item: DMA_CCR7_DIR  ------------------------------------
// SVD Line: 4988

//  <item> SFDITEM_FIELD__DMA_CCR7_DIR
//    <name> DIR </name>
//    <rw> 
//    <i> [Bit 4] RW (@ 0x40020080) Data transfer direction </i>
//    <check> 
//      <loc> ( (unsigned int) DMA_CCR7 ) </loc>
//      <o.4..4> DIR
//    </check>
//  </item>
//  


// --------------------------------  Field Item: DMA_CCR7_CIRC  -----------------------------------
// SVD Line: 4994

//  <item> SFDITEM_FIELD__DMA_CCR7_CIRC
//    <name> CIRC </name>
//    <rw> 
//    <i> [Bit 5] RW (@ 0x40020080) Circular mode </i>
//    <check> 
//      <loc> ( (unsigned int) DMA_CCR7 ) </loc>
//      <o.5..5> CIRC
//    </check>
//  </item>
//  


// --------------------------------  Field Item: DMA_CCR7_PINC  -----------------------------------
// SVD Line: 5000

//  <item> SFDITEM_FIELD__DMA_CCR7_PINC
//    <name> PINC </name>
//    <rw> 
//    <i> [Bit 6] RW (@ 0x40020080) Peripheral increment mode </i>
//    <check> 
//      <loc> ( (unsigned int) DMA_CCR7 ) </loc>
//      <o.6..6> PINC
//    </check>
//  </item>
//  


// --------------------------------  Field Item: DMA_CCR7_MINC  -----------------------------------
// SVD Line: 5006

//  <item> SFDITEM_FIELD__DMA_CCR7_MINC
//    <name> MINC </name>
//    <rw> 
//    <i> [Bit 7] RW (@ 0x40020080) Memory increment mode </i>
//    <check> 
//      <loc> ( (unsigned int) DMA_CCR7 ) </loc>
//      <o.7..7> MINC
//    </check>
//  </item>
//  


// -------------------------------  Field Item: DMA_CCR7_PSIZE  -----------------------------------
// SVD Line: 5012

//  <item> SFDITEM_FIELD__DMA_CCR7_PSIZE
//    <name> PSIZE </name>
//    <rw> 
//    <i> [Bits 9..8] RW (@ 0x40020080) Peripheral size </i>
//    <edit> 
//      <loc> ( (unsigned char)((DMA_CCR7 >> 8) & 0x3), ((DMA_CCR7 = (DMA_CCR7 & ~(0x3UL << 8 )) | ((unsigned long)(Gui_u8:GuiVal & 0x3) << 8 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -------------------------------  Field Item: DMA_CCR7_MSIZE  -----------------------------------
// SVD Line: 5018

//  <item> SFDITEM_FIELD__DMA_CCR7_MSIZE
//    <name> MSIZE </name>
//    <rw> 
//    <i> [Bits 11..10] RW (@ 0x40020080) Memory size </i>
//    <edit> 
//      <loc> ( (unsigned char)((DMA_CCR7 >> 10) & 0x3), ((DMA_CCR7 = (DMA_CCR7 & ~(0x3UL << 10 )) | ((unsigned long)(Gui_u8:GuiVal & 0x3) << 10 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ---------------------------------  Field Item: DMA_CCR7_PL  ------------------------------------
// SVD Line: 5024

//  <item> SFDITEM_FIELD__DMA_CCR7_PL
//    <name> PL </name>
//    <rw> 
//    <i> [Bits 13..12] RW (@ 0x40020080) Channel priority level </i>
//    <edit> 
//      <loc> ( (unsigned char)((DMA_CCR7 >> 12) & 0x3), ((DMA_CCR7 = (DMA_CCR7 & ~(0x3UL << 12 )) | ((unsigned long)(Gui_u8:GuiVal & 0x3) << 12 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ------------------------------  Field Item: DMA_CCR7_MEM2MEM  ----------------------------------
// SVD Line: 5030

//  <item> SFDITEM_FIELD__DMA_CCR7_MEM2MEM
//    <name> MEM2MEM </name>
//    <rw> 
//    <i> [Bit 14] RW (@ 0x40020080) Memory to memory mode </i>
//    <check> 
//      <loc> ( (unsigned int) DMA_CCR7 ) </loc>
//      <o.14..14> MEM2MEM
//    </check>
//  </item>
//  


// --------------------------------  Register RTree: DMA_CCR7  ------------------------------------
// SVD Line: 4951

//  <rtree> SFDITEM_REG__DMA_CCR7
//    <name> CCR7 </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x40020080) DMA channel x configuration  register </i>
//    <loc> ( (unsigned int)((DMA_CCR7 >> 0) & 0xFFFFFFFF), ((DMA_CCR7 = (DMA_CCR7 & ~(0x7FFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0x7FFF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__DMA_CCR7_EN </item>
//    <item> SFDITEM_FIELD__DMA_CCR7_TCIE </item>
//    <item> SFDITEM_FIELD__DMA_CCR7_HTIE </item>
//    <item> SFDITEM_FIELD__DMA_CCR7_TEIE </item>
//    <item> SFDITEM_FIELD__DMA_CCR7_DIR </item>
//    <item> SFDITEM_FIELD__DMA_CCR7_CIRC </item>
//    <item> SFDITEM_FIELD__DMA_CCR7_PINC </item>
//    <item> SFDITEM_FIELD__DMA_CCR7_MINC </item>
//    <item> SFDITEM_FIELD__DMA_CCR7_PSIZE </item>
//    <item> SFDITEM_FIELD__DMA_CCR7_MSIZE </item>
//    <item> SFDITEM_FIELD__DMA_CCR7_PL </item>
//    <item> SFDITEM_FIELD__DMA_CCR7_MEM2MEM </item>
//  </rtree>
//  


// ----------------------------  Register Item Address: DMA_CNDTR1  -------------------------------
// SVD Line: 5038

unsigned int DMA_CNDTR1 __AT (0x4002000C);



// -------------------------------  Field Item: DMA_CNDTR1_NDT  -----------------------------------
// SVD Line: 5048

//  <item> SFDITEM_FIELD__DMA_CNDTR1_NDT
//    <name> NDT </name>
//    <rw> 
//    <i> [Bits 15..0] RW (@ 0x4002000C) Number of data to transfer </i>
//    <edit> 
//      <loc> ( (unsigned short)((DMA_CNDTR1 >> 0) & 0xFFFF), ((DMA_CNDTR1 = (DMA_CNDTR1 & ~(0xFFFFUL << 0 )) | ((unsigned long)(Gui_u16:GuiVal & 0xFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -------------------------------  Register RTree: DMA_CNDTR1  -----------------------------------
// SVD Line: 5038

//  <rtree> SFDITEM_REG__DMA_CNDTR1
//    <name> CNDTR1 </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x4002000C) DMA channel x number of data  register </i>
//    <loc> ( (unsigned int)((DMA_CNDTR1 >> 0) & 0xFFFFFFFF), ((DMA_CNDTR1 = (DMA_CNDTR1 & ~(0xFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__DMA_CNDTR1_NDT </item>
//  </rtree>
//  


// ----------------------------  Register Item Address: DMA_CNDTR2  -------------------------------
// SVD Line: 5056

unsigned int DMA_CNDTR2 __AT (0x40020020);



// -------------------------------  Field Item: DMA_CNDTR2_NDT  -----------------------------------
// SVD Line: 5066

//  <item> SFDITEM_FIELD__DMA_CNDTR2_NDT
//    <name> NDT </name>
//    <rw> 
//    <i> [Bits 15..0] RW (@ 0x40020020) Number of data to transfer </i>
//    <edit> 
//      <loc> ( (unsigned short)((DMA_CNDTR2 >> 0) & 0xFFFF), ((DMA_CNDTR2 = (DMA_CNDTR2 & ~(0xFFFFUL << 0 )) | ((unsigned long)(Gui_u16:GuiVal & 0xFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -------------------------------  Register RTree: DMA_CNDTR2  -----------------------------------
// SVD Line: 5056

//  <rtree> SFDITEM_REG__DMA_CNDTR2
//    <name> CNDTR2 </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x40020020) DMA channel x number of data  register </i>
//    <loc> ( (unsigned int)((DMA_CNDTR2 >> 0) & 0xFFFFFFFF), ((DMA_CNDTR2 = (DMA_CNDTR2 & ~(0xFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__DMA_CNDTR2_NDT </item>
//  </rtree>
//  


// ----------------------------  Register Item Address: DMA_CNDTR3  -------------------------------
// SVD Line: 5074

unsigned int DMA_CNDTR3 __AT (0x40020034);



// -------------------------------  Field Item: DMA_CNDTR3_NDT  -----------------------------------
// SVD Line: 5084

//  <item> SFDITEM_FIELD__DMA_CNDTR3_NDT
//    <name> NDT </name>
//    <rw> 
//    <i> [Bits 15..0] RW (@ 0x40020034) Number of data to transfer </i>
//    <edit> 
//      <loc> ( (unsigned short)((DMA_CNDTR3 >> 0) & 0xFFFF), ((DMA_CNDTR3 = (DMA_CNDTR3 & ~(0xFFFFUL << 0 )) | ((unsigned long)(Gui_u16:GuiVal & 0xFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -------------------------------  Register RTree: DMA_CNDTR3  -----------------------------------
// SVD Line: 5074

//  <rtree> SFDITEM_REG__DMA_CNDTR3
//    <name> CNDTR3 </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x40020034) DMA channel x configuration  register </i>
//    <loc> ( (unsigned int)((DMA_CNDTR3 >> 0) & 0xFFFFFFFF), ((DMA_CNDTR3 = (DMA_CNDTR3 & ~(0xFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__DMA_CNDTR3_NDT </item>
//  </rtree>
//  


// ----------------------------  Register Item Address: DMA_CNDTR4  -------------------------------
// SVD Line: 5092

unsigned int DMA_CNDTR4 __AT (0x40020048);



// -------------------------------  Field Item: DMA_CNDTR4_NDT  -----------------------------------
// SVD Line: 5102

//  <item> SFDITEM_FIELD__DMA_CNDTR4_NDT
//    <name> NDT </name>
//    <rw> 
//    <i> [Bits 15..0] RW (@ 0x40020048) Number of data to transfer </i>
//    <edit> 
//      <loc> ( (unsigned short)((DMA_CNDTR4 >> 0) & 0xFFFF), ((DMA_CNDTR4 = (DMA_CNDTR4 & ~(0xFFFFUL << 0 )) | ((unsigned long)(Gui_u16:GuiVal & 0xFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -------------------------------  Register RTree: DMA_CNDTR4  -----------------------------------
// SVD Line: 5092

//  <rtree> SFDITEM_REG__DMA_CNDTR4
//    <name> CNDTR4 </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x40020048) DMA channel x configuration  register </i>
//    <loc> ( (unsigned int)((DMA_CNDTR4 >> 0) & 0xFFFFFFFF), ((DMA_CNDTR4 = (DMA_CNDTR4 & ~(0xFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__DMA_CNDTR4_NDT </item>
//  </rtree>
//  


// ----------------------------  Register Item Address: DMA_CNDTR5  -------------------------------
// SVD Line: 5110

unsigned int DMA_CNDTR5 __AT (0x4002005C);



// -------------------------------  Field Item: DMA_CNDTR5_NDT  -----------------------------------
// SVD Line: 5120

//  <item> SFDITEM_FIELD__DMA_CNDTR5_NDT
//    <name> NDT </name>
//    <rw> 
//    <i> [Bits 15..0] RW (@ 0x4002005C) Number of data to transfer </i>
//    <edit> 
//      <loc> ( (unsigned short)((DMA_CNDTR5 >> 0) & 0xFFFF), ((DMA_CNDTR5 = (DMA_CNDTR5 & ~(0xFFFFUL << 0 )) | ((unsigned long)(Gui_u16:GuiVal & 0xFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -------------------------------  Register RTree: DMA_CNDTR5  -----------------------------------
// SVD Line: 5110

//  <rtree> SFDITEM_REG__DMA_CNDTR5
//    <name> CNDTR5 </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x4002005C) DMA channel x configuration  register </i>
//    <loc> ( (unsigned int)((DMA_CNDTR5 >> 0) & 0xFFFFFFFF), ((DMA_CNDTR5 = (DMA_CNDTR5 & ~(0xFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__DMA_CNDTR5_NDT </item>
//  </rtree>
//  


// ----------------------------  Register Item Address: DMA_CNDTR6  -------------------------------
// SVD Line: 5128

unsigned int DMA_CNDTR6 __AT (0x40020070);



// -------------------------------  Field Item: DMA_CNDTR6_NDT  -----------------------------------
// SVD Line: 5138

//  <item> SFDITEM_FIELD__DMA_CNDTR6_NDT
//    <name> NDT </name>
//    <rw> 
//    <i> [Bits 15..0] RW (@ 0x40020070) Number of data to transfer </i>
//    <edit> 
//      <loc> ( (unsigned short)((DMA_CNDTR6 >> 0) & 0xFFFF), ((DMA_CNDTR6 = (DMA_CNDTR6 & ~(0xFFFFUL << 0 )) | ((unsigned long)(Gui_u16:GuiVal & 0xFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -------------------------------  Register RTree: DMA_CNDTR6  -----------------------------------
// SVD Line: 5128

//  <rtree> SFDITEM_REG__DMA_CNDTR6
//    <name> CNDTR6 </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x40020070) DMA channel x configuration  register </i>
//    <loc> ( (unsigned int)((DMA_CNDTR6 >> 0) & 0xFFFFFFFF), ((DMA_CNDTR6 = (DMA_CNDTR6 & ~(0xFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__DMA_CNDTR6_NDT </item>
//  </rtree>
//  


// ----------------------------  Register Item Address: DMA_CNDTR7  -------------------------------
// SVD Line: 5146

unsigned int DMA_CNDTR7 __AT (0x40020084);



// -------------------------------  Field Item: DMA_CNDTR7_NDT  -----------------------------------
// SVD Line: 5156

//  <item> SFDITEM_FIELD__DMA_CNDTR7_NDT
//    <name> NDT </name>
//    <rw> 
//    <i> [Bits 15..0] RW (@ 0x40020084) Number of data to transfer </i>
//    <edit> 
//      <loc> ( (unsigned short)((DMA_CNDTR7 >> 0) & 0xFFFF), ((DMA_CNDTR7 = (DMA_CNDTR7 & ~(0xFFFFUL << 0 )) | ((unsigned long)(Gui_u16:GuiVal & 0xFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -------------------------------  Register RTree: DMA_CNDTR7  -----------------------------------
// SVD Line: 5146

//  <rtree> SFDITEM_REG__DMA_CNDTR7
//    <name> CNDTR7 </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x40020084) DMA channel x configuration  register </i>
//    <loc> ( (unsigned int)((DMA_CNDTR7 >> 0) & 0xFFFFFFFF), ((DMA_CNDTR7 = (DMA_CNDTR7 & ~(0xFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__DMA_CNDTR7_NDT </item>
//  </rtree>
//  


// ----------------------------  Register Item Address: DMA_CPAR1  --------------------------------
// SVD Line: 5164

unsigned int DMA_CPAR1 __AT (0x40020010);



// --------------------------------  Field Item: DMA_CPAR1_PA  ------------------------------------
// SVD Line: 5174

//  <item> SFDITEM_FIELD__DMA_CPAR1_PA
//    <name> PA </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x40020010) Peripheral address </i>
//    <edit> 
//      <loc> ( (unsigned int)((DMA_CPAR1 >> 0) & 0xFFFFFFFF), ((DMA_CPAR1 = (DMA_CPAR1 & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// --------------------------------  Register RTree: DMA_CPAR1  -----------------------------------
// SVD Line: 5164

//  <rtree> SFDITEM_REG__DMA_CPAR1
//    <name> CPAR1 </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x40020010) DMA channel x peripheral address  register </i>
//    <loc> ( (unsigned int)((DMA_CPAR1 >> 0) & 0xFFFFFFFF), ((DMA_CPAR1 = (DMA_CPAR1 & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__DMA_CPAR1_PA </item>
//  </rtree>
//  


// ----------------------------  Register Item Address: DMA_CPAR2  --------------------------------
// SVD Line: 5182

unsigned int DMA_CPAR2 __AT (0x40020024);



// --------------------------------  Field Item: DMA_CPAR2_PA  ------------------------------------
// SVD Line: 5192

//  <item> SFDITEM_FIELD__DMA_CPAR2_PA
//    <name> PA </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x40020024) Peripheral address </i>
//    <edit> 
//      <loc> ( (unsigned int)((DMA_CPAR2 >> 0) & 0xFFFFFFFF), ((DMA_CPAR2 = (DMA_CPAR2 & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// --------------------------------  Register RTree: DMA_CPAR2  -----------------------------------
// SVD Line: 5182

//  <rtree> SFDITEM_REG__DMA_CPAR2
//    <name> CPAR2 </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x40020024) DMA channel x peripheral address  register </i>
//    <loc> ( (unsigned int)((DMA_CPAR2 >> 0) & 0xFFFFFFFF), ((DMA_CPAR2 = (DMA_CPAR2 & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__DMA_CPAR2_PA </item>
//  </rtree>
//  


// ----------------------------  Register Item Address: DMA_CPAR3  --------------------------------
// SVD Line: 5200

unsigned int DMA_CPAR3 __AT (0x40020038);



// --------------------------------  Field Item: DMA_CPAR3_PA  ------------------------------------
// SVD Line: 5210

//  <item> SFDITEM_FIELD__DMA_CPAR3_PA
//    <name> PA </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x40020038) Peripheral address </i>
//    <edit> 
//      <loc> ( (unsigned int)((DMA_CPAR3 >> 0) & 0xFFFFFFFF), ((DMA_CPAR3 = (DMA_CPAR3 & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// --------------------------------  Register RTree: DMA_CPAR3  -----------------------------------
// SVD Line: 5200

//  <rtree> SFDITEM_REG__DMA_CPAR3
//    <name> CPAR3 </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x40020038) DMA channel x peripheral address  register </i>
//    <loc> ( (unsigned int)((DMA_CPAR3 >> 0) & 0xFFFFFFFF), ((DMA_CPAR3 = (DMA_CPAR3 & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__DMA_CPAR3_PA </item>
//  </rtree>
//  


// ----------------------------  Register Item Address: DMA_CPAR4  --------------------------------
// SVD Line: 5218

unsigned int DMA_CPAR4 __AT (0x4002004C);



// --------------------------------  Field Item: DMA_CPAR4_PA  ------------------------------------
// SVD Line: 5228

//  <item> SFDITEM_FIELD__DMA_CPAR4_PA
//    <name> PA </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x4002004C) Peripheral address </i>
//    <edit> 
//      <loc> ( (unsigned int)((DMA_CPAR4 >> 0) & 0xFFFFFFFF), ((DMA_CPAR4 = (DMA_CPAR4 & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// --------------------------------  Register RTree: DMA_CPAR4  -----------------------------------
// SVD Line: 5218

//  <rtree> SFDITEM_REG__DMA_CPAR4
//    <name> CPAR4 </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x4002004C) DMA channel x peripheral address  register </i>
//    <loc> ( (unsigned int)((DMA_CPAR4 >> 0) & 0xFFFFFFFF), ((DMA_CPAR4 = (DMA_CPAR4 & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__DMA_CPAR4_PA </item>
//  </rtree>
//  


// ----------------------------  Register Item Address: DMA_CPAR5  --------------------------------
// SVD Line: 5236

unsigned int DMA_CPAR5 __AT (0x40020060);



// --------------------------------  Field Item: DMA_CPAR5_PA  ------------------------------------
// SVD Line: 5246

//  <item> SFDITEM_FIELD__DMA_CPAR5_PA
//    <name> PA </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x40020060) Peripheral address </i>
//    <edit> 
//      <loc> ( (unsigned int)((DMA_CPAR5 >> 0) & 0xFFFFFFFF), ((DMA_CPAR5 = (DMA_CPAR5 & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// --------------------------------  Register RTree: DMA_CPAR5  -----------------------------------
// SVD Line: 5236

//  <rtree> SFDITEM_REG__DMA_CPAR5
//    <name> CPAR5 </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x40020060) DMA channel x peripheral address  register </i>
//    <loc> ( (unsigned int)((DMA_CPAR5 >> 0) & 0xFFFFFFFF), ((DMA_CPAR5 = (DMA_CPAR5 & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__DMA_CPAR5_PA </item>
//  </rtree>
//  


// ----------------------------  Register Item Address: DMA_CPAR6  --------------------------------
// SVD Line: 5254

unsigned int DMA_CPAR6 __AT (0x40020074);



// --------------------------------  Field Item: DMA_CPAR6_PA  ------------------------------------
// SVD Line: 5264

//  <item> SFDITEM_FIELD__DMA_CPAR6_PA
//    <name> PA </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x40020074) Peripheral address </i>
//    <edit> 
//      <loc> ( (unsigned int)((DMA_CPAR6 >> 0) & 0xFFFFFFFF), ((DMA_CPAR6 = (DMA_CPAR6 & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// --------------------------------  Register RTree: DMA_CPAR6  -----------------------------------
// SVD Line: 5254

//  <rtree> SFDITEM_REG__DMA_CPAR6
//    <name> CPAR6 </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x40020074) DMA channel x peripheral address  register </i>
//    <loc> ( (unsigned int)((DMA_CPAR6 >> 0) & 0xFFFFFFFF), ((DMA_CPAR6 = (DMA_CPAR6 & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__DMA_CPAR6_PA </item>
//  </rtree>
//  


// ----------------------------  Register Item Address: DMA_CPAR7  --------------------------------
// SVD Line: 5272

unsigned int DMA_CPAR7 __AT (0x40020088);



// --------------------------------  Field Item: DMA_CPAR7_PA  ------------------------------------
// SVD Line: 5282

//  <item> SFDITEM_FIELD__DMA_CPAR7_PA
//    <name> PA </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x40020088) Peripheral address </i>
//    <edit> 
//      <loc> ( (unsigned int)((DMA_CPAR7 >> 0) & 0xFFFFFFFF), ((DMA_CPAR7 = (DMA_CPAR7 & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// --------------------------------  Register RTree: DMA_CPAR7  -----------------------------------
// SVD Line: 5272

//  <rtree> SFDITEM_REG__DMA_CPAR7
//    <name> CPAR7 </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x40020088) DMA channel x peripheral address  register </i>
//    <loc> ( (unsigned int)((DMA_CPAR7 >> 0) & 0xFFFFFFFF), ((DMA_CPAR7 = (DMA_CPAR7 & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__DMA_CPAR7_PA </item>
//  </rtree>
//  


// ----------------------------  Register Item Address: DMA_CMAR1  --------------------------------
// SVD Line: 5290

unsigned int DMA_CMAR1 __AT (0x40020014);



// --------------------------------  Field Item: DMA_CMAR1_MA  ------------------------------------
// SVD Line: 5300

//  <item> SFDITEM_FIELD__DMA_CMAR1_MA
//    <name> MA </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x40020014) Memory address </i>
//    <edit> 
//      <loc> ( (unsigned int)((DMA_CMAR1 >> 0) & 0xFFFFFFFF), ((DMA_CMAR1 = (DMA_CMAR1 & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// --------------------------------  Register RTree: DMA_CMAR1  -----------------------------------
// SVD Line: 5290

//  <rtree> SFDITEM_REG__DMA_CMAR1
//    <name> CMAR1 </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x40020014) DMA channel x memory address  register </i>
//    <loc> ( (unsigned int)((DMA_CMAR1 >> 0) & 0xFFFFFFFF), ((DMA_CMAR1 = (DMA_CMAR1 & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__DMA_CMAR1_MA </item>
//  </rtree>
//  


// ----------------------------  Register Item Address: DMA_CMAR2  --------------------------------
// SVD Line: 5308

unsigned int DMA_CMAR2 __AT (0x40020028);



// --------------------------------  Field Item: DMA_CMAR2_MA  ------------------------------------
// SVD Line: 5318

//  <item> SFDITEM_FIELD__DMA_CMAR2_MA
//    <name> MA </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x40020028) Memory address </i>
//    <edit> 
//      <loc> ( (unsigned int)((DMA_CMAR2 >> 0) & 0xFFFFFFFF), ((DMA_CMAR2 = (DMA_CMAR2 & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// --------------------------------  Register RTree: DMA_CMAR2  -----------------------------------
// SVD Line: 5308

//  <rtree> SFDITEM_REG__DMA_CMAR2
//    <name> CMAR2 </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x40020028) DMA channel x memory address  register </i>
//    <loc> ( (unsigned int)((DMA_CMAR2 >> 0) & 0xFFFFFFFF), ((DMA_CMAR2 = (DMA_CMAR2 & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__DMA_CMAR2_MA </item>
//  </rtree>
//  


// ----------------------------  Register Item Address: DMA_CMAR3  --------------------------------
// SVD Line: 5326

unsigned int DMA_CMAR3 __AT (0x4002003C);



// --------------------------------  Field Item: DMA_CMAR3_MA  ------------------------------------
// SVD Line: 5336

//  <item> SFDITEM_FIELD__DMA_CMAR3_MA
//    <name> MA </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x4002003C) Memory address </i>
//    <edit> 
//      <loc> ( (unsigned int)((DMA_CMAR3 >> 0) & 0xFFFFFFFF), ((DMA_CMAR3 = (DMA_CMAR3 & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// --------------------------------  Register RTree: DMA_CMAR3  -----------------------------------
// SVD Line: 5326

//  <rtree> SFDITEM_REG__DMA_CMAR3
//    <name> CMAR3 </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x4002003C) DMA channel x memory address  register </i>
//    <loc> ( (unsigned int)((DMA_CMAR3 >> 0) & 0xFFFFFFFF), ((DMA_CMAR3 = (DMA_CMAR3 & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__DMA_CMAR3_MA </item>
//  </rtree>
//  


// ----------------------------  Register Item Address: DMA_CMAR4  --------------------------------
// SVD Line: 5344

unsigned int DMA_CMAR4 __AT (0x40020050);



// --------------------------------  Field Item: DMA_CMAR4_MA  ------------------------------------
// SVD Line: 5354

//  <item> SFDITEM_FIELD__DMA_CMAR4_MA
//    <name> MA </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x40020050) Memory address </i>
//    <edit> 
//      <loc> ( (unsigned int)((DMA_CMAR4 >> 0) & 0xFFFFFFFF), ((DMA_CMAR4 = (DMA_CMAR4 & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// --------------------------------  Register RTree: DMA_CMAR4  -----------------------------------
// SVD Line: 5344

//  <rtree> SFDITEM_REG__DMA_CMAR4
//    <name> CMAR4 </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x40020050) DMA channel x memory address  register </i>
//    <loc> ( (unsigned int)((DMA_CMAR4 >> 0) & 0xFFFFFFFF), ((DMA_CMAR4 = (DMA_CMAR4 & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__DMA_CMAR4_MA </item>
//  </rtree>
//  


// ----------------------------  Register Item Address: DMA_CMAR5  --------------------------------
// SVD Line: 5362

unsigned int DMA_CMAR5 __AT (0x40020064);



// --------------------------------  Field Item: DMA_CMAR5_MA  ------------------------------------
// SVD Line: 5372

//  <item> SFDITEM_FIELD__DMA_CMAR5_MA
//    <name> MA </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x40020064) Memory address </i>
//    <edit> 
//      <loc> ( (unsigned int)((DMA_CMAR5 >> 0) & 0xFFFFFFFF), ((DMA_CMAR5 = (DMA_CMAR5 & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// --------------------------------  Register RTree: DMA_CMAR5  -----------------------------------
// SVD Line: 5362

//  <rtree> SFDITEM_REG__DMA_CMAR5
//    <name> CMAR5 </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x40020064) DMA channel x memory address  register </i>
//    <loc> ( (unsigned int)((DMA_CMAR5 >> 0) & 0xFFFFFFFF), ((DMA_CMAR5 = (DMA_CMAR5 & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__DMA_CMAR5_MA </item>
//  </rtree>
//  


// ----------------------------  Register Item Address: DMA_CMAR6  --------------------------------
// SVD Line: 5380

unsigned int DMA_CMAR6 __AT (0x40020078);



// --------------------------------  Field Item: DMA_CMAR6_MA  ------------------------------------
// SVD Line: 5390

//  <item> SFDITEM_FIELD__DMA_CMAR6_MA
//    <name> MA </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x40020078) Memory address </i>
//    <edit> 
//      <loc> ( (unsigned int)((DMA_CMAR6 >> 0) & 0xFFFFFFFF), ((DMA_CMAR6 = (DMA_CMAR6 & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// --------------------------------  Register RTree: DMA_CMAR6  -----------------------------------
// SVD Line: 5380

//  <rtree> SFDITEM_REG__DMA_CMAR6
//    <name> CMAR6 </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x40020078) DMA channel x memory address  register </i>
//    <loc> ( (unsigned int)((DMA_CMAR6 >> 0) & 0xFFFFFFFF), ((DMA_CMAR6 = (DMA_CMAR6 & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__DMA_CMAR6_MA </item>
//  </rtree>
//  


// ----------------------------  Register Item Address: DMA_CMAR7  --------------------------------
// SVD Line: 5398

unsigned int DMA_CMAR7 __AT (0x4002008C);



// --------------------------------  Field Item: DMA_CMAR7_MA  ------------------------------------
// SVD Line: 5408

//  <item> SFDITEM_FIELD__DMA_CMAR7_MA
//    <name> MA </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x4002008C) Memory address </i>
//    <edit> 
//      <loc> ( (unsigned int)((DMA_CMAR7 >> 0) & 0xFFFFFFFF), ((DMA_CMAR7 = (DMA_CMAR7 & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// --------------------------------  Register RTree: DMA_CMAR7  -----------------------------------
// SVD Line: 5398

//  <rtree> SFDITEM_REG__DMA_CMAR7
//    <name> CMAR7 </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x4002008C) DMA channel x memory address  register </i>
//    <loc> ( (unsigned int)((DMA_CMAR7 >> 0) & 0xFFFFFFFF), ((DMA_CMAR7 = (DMA_CMAR7 & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__DMA_CMAR7_MA </item>
//  </rtree>
//  


// ----------------------------------  Peripheral View: DMA  --------------------------------------
// SVD Line: 4008

//  <view> DMA
//    <name> DMA </name>
//    <item> SFDITEM_REG__DMA_ISR </item>
//    <item> SFDITEM_REG__DMA_IFCR </item>
//    <item> SFDITEM_REG__DMA_CCR1 </item>
//    <item> SFDITEM_REG__DMA_CCR2 </item>
//    <item> SFDITEM_REG__DMA_CCR3 </item>
//    <item> SFDITEM_REG__DMA_CCR4 </item>
//    <item> SFDITEM_REG__DMA_CCR5 </item>
//    <item> SFDITEM_REG__DMA_CCR6 </item>
//    <item> SFDITEM_REG__DMA_CCR7 </item>
//    <item> SFDITEM_REG__DMA_CNDTR1 </item>
//    <item> SFDITEM_REG__DMA_CNDTR2 </item>
//    <item> SFDITEM_REG__DMA_CNDTR3 </item>
//    <item> SFDITEM_REG__DMA_CNDTR4 </item>
//    <item> SFDITEM_REG__DMA_CNDTR5 </item>
//    <item> SFDITEM_REG__DMA_CNDTR6 </item>
//    <item> SFDITEM_REG__DMA_CNDTR7 </item>
//    <item> SFDITEM_REG__DMA_CPAR1 </item>
//    <item> SFDITEM_REG__DMA_CPAR2 </item>
//    <item> SFDITEM_REG__DMA_CPAR3 </item>
//    <item> SFDITEM_REG__DMA_CPAR4 </item>
//    <item> SFDITEM_REG__DMA_CPAR5 </item>
//    <item> SFDITEM_REG__DMA_CPAR6 </item>
//    <item> SFDITEM_REG__DMA_CPAR7 </item>
//    <item> SFDITEM_REG__DMA_CMAR1 </item>
//    <item> SFDITEM_REG__DMA_CMAR2 </item>
//    <item> SFDITEM_REG__DMA_CMAR3 </item>
//    <item> SFDITEM_REG__DMA_CMAR4 </item>
//    <item> SFDITEM_REG__DMA_CMAR5 </item>
//    <item> SFDITEM_REG__DMA_CMAR6 </item>
//    <item> SFDITEM_REG__DMA_CMAR7 </item>
//  </view>
//  


// ------------------------  Register Item Address: DMAMUX_DMAMUX_C0CR  ---------------------------
// SVD Line: 5435

unsigned int DMAMUX_DMAMUX_C0CR __AT (0x40020800);



// ------------------------  Field Item: DMAMUX_DMAMUX_C0CR_DMAREQ_ID  ----------------------------
// SVD Line: 5445

//  <item> SFDITEM_FIELD__DMAMUX_DMAMUX_C0CR_DMAREQ_ID
//    <name> DMAREQ_ID </name>
//    <rw> 
//    <i> [Bits 7..0] RW (@ 0x40020800) Input DMA request line  selected </i>
//    <edit> 
//      <loc> ( (unsigned char)((DMAMUX_DMAMUX_C0CR >> 0) & 0xFF), ((DMAMUX_DMAMUX_C0CR = (DMAMUX_DMAMUX_C0CR & ~(0xFFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ---------------------------  Field Item: DMAMUX_DMAMUX_C0CR_SOIE  ------------------------------
// SVD Line: 5452

//  <item> SFDITEM_FIELD__DMAMUX_DMAMUX_C0CR_SOIE
//    <name> SOIE </name>
//    <rw> 
//    <i> [Bit 8] RW (@ 0x40020800) Interrupt enable at synchronization  event overrun </i>
//    <check> 
//      <loc> ( (unsigned int) DMAMUX_DMAMUX_C0CR ) </loc>
//      <o.8..8> SOIE
//    </check>
//  </item>
//  


// ---------------------------  Field Item: DMAMUX_DMAMUX_C0CR_EGE  -------------------------------
// SVD Line: 5459

//  <item> SFDITEM_FIELD__DMAMUX_DMAMUX_C0CR_EGE
//    <name> EGE </name>
//    <rw> 
//    <i> [Bit 9] RW (@ 0x40020800) Event generation  enable/disable </i>
//    <check> 
//      <loc> ( (unsigned int) DMAMUX_DMAMUX_C0CR ) </loc>
//      <o.9..9> EGE
//    </check>
//  </item>
//  


// ----------------------------  Field Item: DMAMUX_DMAMUX_C0CR_SE  -------------------------------
// SVD Line: 5466

//  <item> SFDITEM_FIELD__DMAMUX_DMAMUX_C0CR_SE
//    <name> SE </name>
//    <rw> 
//    <i> [Bit 16] RW (@ 0x40020800) Synchronous operating mode  enable/disable </i>
//    <check> 
//      <loc> ( (unsigned int) DMAMUX_DMAMUX_C0CR ) </loc>
//      <o.16..16> SE
//    </check>
//  </item>
//  


// ---------------------------  Field Item: DMAMUX_DMAMUX_C0CR_SPOL  ------------------------------
// SVD Line: 5473

//  <item> SFDITEM_FIELD__DMAMUX_DMAMUX_C0CR_SPOL
//    <name> SPOL </name>
//    <rw> 
//    <i> [Bits 18..17] RW (@ 0x40020800) Synchronization event type selector  Defines the synchronization event on the selected  synchronization input: </i>
//    <edit> 
//      <loc> ( (unsigned char)((DMAMUX_DMAMUX_C0CR >> 17) & 0x3), ((DMAMUX_DMAMUX_C0CR = (DMAMUX_DMAMUX_C0CR & ~(0x3UL << 17 )) | ((unsigned long)(Gui_u8:GuiVal & 0x3) << 17 ) ) )) </loc>
//    </edit>
//  </item>
//  


// --------------------------  Field Item: DMAMUX_DMAMUX_C0CR_NBREQ  ------------------------------
// SVD Line: 5481

//  <item> SFDITEM_FIELD__DMAMUX_DMAMUX_C0CR_NBREQ
//    <name> NBREQ </name>
//    <rw> 
//    <i> [Bits 23..19] RW (@ 0x40020800) Number of DMA requests to forward  Defines the number of DMA requests forwarded before  output event is generated. In synchronous mode, it  also defines the number of DMA requests to forward  after a synchronization event, then stop forwarding.  The actual number of DMA requests forwarded is  NBREQ+1. Note: This field can only be written when  both SE and EGE bits are reset. </i>
//    <edit> 
//      <loc> ( (unsigned char)((DMAMUX_DMAMUX_C0CR >> 19) & 0x1F), ((DMAMUX_DMAMUX_C0CR = (DMAMUX_DMAMUX_C0CR & ~(0x1FUL << 19 )) | ((unsigned long)(Gui_u8:GuiVal & 0x1F) << 19 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -------------------------  Field Item: DMAMUX_DMAMUX_C0CR_SYNC_ID  -----------------------------
// SVD Line: 5494

//  <item> SFDITEM_FIELD__DMAMUX_DMAMUX_C0CR_SYNC_ID
//    <name> SYNC_ID </name>
//    <rw> 
//    <i> [Bits 28..24] RW (@ 0x40020800) Synchronization input  selected </i>
//    <edit> 
//      <loc> ( (unsigned char)((DMAMUX_DMAMUX_C0CR >> 24) & 0x1F), ((DMAMUX_DMAMUX_C0CR = (DMAMUX_DMAMUX_C0CR & ~(0x1FUL << 24 )) | ((unsigned long)(Gui_u8:GuiVal & 0x1F) << 24 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ---------------------------  Register RTree: DMAMUX_DMAMUX_C0CR  -------------------------------
// SVD Line: 5435

//  <rtree> SFDITEM_REG__DMAMUX_DMAMUX_C0CR
//    <name> DMAMUX_C0CR </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x40020800) DMAMux - DMA request line multiplexer  channel x control register </i>
//    <loc> ( (unsigned int)((DMAMUX_DMAMUX_C0CR >> 0) & 0xFFFFFFFF), ((DMAMUX_DMAMUX_C0CR = (DMAMUX_DMAMUX_C0CR & ~(0x1FFF03FFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0x1FFF03FF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__DMAMUX_DMAMUX_C0CR_DMAREQ_ID </item>
//    <item> SFDITEM_FIELD__DMAMUX_DMAMUX_C0CR_SOIE </item>
//    <item> SFDITEM_FIELD__DMAMUX_DMAMUX_C0CR_EGE </item>
//    <item> SFDITEM_FIELD__DMAMUX_DMAMUX_C0CR_SE </item>
//    <item> SFDITEM_FIELD__DMAMUX_DMAMUX_C0CR_SPOL </item>
//    <item> SFDITEM_FIELD__DMAMUX_DMAMUX_C0CR_NBREQ </item>
//    <item> SFDITEM_FIELD__DMAMUX_DMAMUX_C0CR_SYNC_ID </item>
//  </rtree>
//  


// ------------------------  Register Item Address: DMAMUX_DMAMUX_C1CR  ---------------------------
// SVD Line: 5503

unsigned int DMAMUX_DMAMUX_C1CR __AT (0x40020804);



// ------------------------  Field Item: DMAMUX_DMAMUX_C1CR_DMAREQ_ID  ----------------------------
// SVD Line: 5513

//  <item> SFDITEM_FIELD__DMAMUX_DMAMUX_C1CR_DMAREQ_ID
//    <name> DMAREQ_ID </name>
//    <rw> 
//    <i> [Bits 7..0] RW (@ 0x40020804) Input DMA request line  selected </i>
//    <edit> 
//      <loc> ( (unsigned char)((DMAMUX_DMAMUX_C1CR >> 0) & 0xFF), ((DMAMUX_DMAMUX_C1CR = (DMAMUX_DMAMUX_C1CR & ~(0xFFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ---------------------------  Field Item: DMAMUX_DMAMUX_C1CR_SOIE  ------------------------------
// SVD Line: 5520

//  <item> SFDITEM_FIELD__DMAMUX_DMAMUX_C1CR_SOIE
//    <name> SOIE </name>
//    <rw> 
//    <i> [Bit 8] RW (@ 0x40020804) Interrupt enable at synchronization  event overrun </i>
//    <check> 
//      <loc> ( (unsigned int) DMAMUX_DMAMUX_C1CR ) </loc>
//      <o.8..8> SOIE
//    </check>
//  </item>
//  


// ---------------------------  Field Item: DMAMUX_DMAMUX_C1CR_EGE  -------------------------------
// SVD Line: 5527

//  <item> SFDITEM_FIELD__DMAMUX_DMAMUX_C1CR_EGE
//    <name> EGE </name>
//    <rw> 
//    <i> [Bit 9] RW (@ 0x40020804) Event generation  enable/disable </i>
//    <check> 
//      <loc> ( (unsigned int) DMAMUX_DMAMUX_C1CR ) </loc>
//      <o.9..9> EGE
//    </check>
//  </item>
//  


// ----------------------------  Field Item: DMAMUX_DMAMUX_C1CR_SE  -------------------------------
// SVD Line: 5534

//  <item> SFDITEM_FIELD__DMAMUX_DMAMUX_C1CR_SE
//    <name> SE </name>
//    <rw> 
//    <i> [Bit 16] RW (@ 0x40020804) Synchronous operating mode  enable/disable </i>
//    <check> 
//      <loc> ( (unsigned int) DMAMUX_DMAMUX_C1CR ) </loc>
//      <o.16..16> SE
//    </check>
//  </item>
//  


// ---------------------------  Field Item: DMAMUX_DMAMUX_C1CR_SPOL  ------------------------------
// SVD Line: 5541

//  <item> SFDITEM_FIELD__DMAMUX_DMAMUX_C1CR_SPOL
//    <name> SPOL </name>
//    <rw> 
//    <i> [Bits 18..17] RW (@ 0x40020804) Synchronization event type selector  Defines the synchronization event on the selected  synchronization input: </i>
//    <edit> 
//      <loc> ( (unsigned char)((DMAMUX_DMAMUX_C1CR >> 17) & 0x3), ((DMAMUX_DMAMUX_C1CR = (DMAMUX_DMAMUX_C1CR & ~(0x3UL << 17 )) | ((unsigned long)(Gui_u8:GuiVal & 0x3) << 17 ) ) )) </loc>
//    </edit>
//  </item>
//  


// --------------------------  Field Item: DMAMUX_DMAMUX_C1CR_NBREQ  ------------------------------
// SVD Line: 5549

//  <item> SFDITEM_FIELD__DMAMUX_DMAMUX_C1CR_NBREQ
//    <name> NBREQ </name>
//    <rw> 
//    <i> [Bits 23..19] RW (@ 0x40020804) Number of DMA requests to forward  Defines the number of DMA requests forwarded before  output event is generated. In synchronous mode, it  also defines the number of DMA requests to forward  after a synchronization event, then stop forwarding.  The actual number of DMA requests forwarded is  NBREQ+1. Note: This field can only be written when  both SE and EGE bits are reset. </i>
//    <edit> 
//      <loc> ( (unsigned char)((DMAMUX_DMAMUX_C1CR >> 19) & 0x1F), ((DMAMUX_DMAMUX_C1CR = (DMAMUX_DMAMUX_C1CR & ~(0x1FUL << 19 )) | ((unsigned long)(Gui_u8:GuiVal & 0x1F) << 19 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -------------------------  Field Item: DMAMUX_DMAMUX_C1CR_SYNC_ID  -----------------------------
// SVD Line: 5562

//  <item> SFDITEM_FIELD__DMAMUX_DMAMUX_C1CR_SYNC_ID
//    <name> SYNC_ID </name>
//    <rw> 
//    <i> [Bits 28..24] RW (@ 0x40020804) Synchronization input  selected </i>
//    <edit> 
//      <loc> ( (unsigned char)((DMAMUX_DMAMUX_C1CR >> 24) & 0x1F), ((DMAMUX_DMAMUX_C1CR = (DMAMUX_DMAMUX_C1CR & ~(0x1FUL << 24 )) | ((unsigned long)(Gui_u8:GuiVal & 0x1F) << 24 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ---------------------------  Register RTree: DMAMUX_DMAMUX_C1CR  -------------------------------
// SVD Line: 5503

//  <rtree> SFDITEM_REG__DMAMUX_DMAMUX_C1CR
//    <name> DMAMUX_C1CR </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x40020804) DMAMux - DMA request line multiplexer  channel x control register </i>
//    <loc> ( (unsigned int)((DMAMUX_DMAMUX_C1CR >> 0) & 0xFFFFFFFF), ((DMAMUX_DMAMUX_C1CR = (DMAMUX_DMAMUX_C1CR & ~(0x1FFF03FFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0x1FFF03FF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__DMAMUX_DMAMUX_C1CR_DMAREQ_ID </item>
//    <item> SFDITEM_FIELD__DMAMUX_DMAMUX_C1CR_SOIE </item>
//    <item> SFDITEM_FIELD__DMAMUX_DMAMUX_C1CR_EGE </item>
//    <item> SFDITEM_FIELD__DMAMUX_DMAMUX_C1CR_SE </item>
//    <item> SFDITEM_FIELD__DMAMUX_DMAMUX_C1CR_SPOL </item>
//    <item> SFDITEM_FIELD__DMAMUX_DMAMUX_C1CR_NBREQ </item>
//    <item> SFDITEM_FIELD__DMAMUX_DMAMUX_C1CR_SYNC_ID </item>
//  </rtree>
//  


// ------------------------  Register Item Address: DMAMUX_DMAMUX_C2CR  ---------------------------
// SVD Line: 5571

unsigned int DMAMUX_DMAMUX_C2CR __AT (0x40020808);



// ------------------------  Field Item: DMAMUX_DMAMUX_C2CR_DMAREQ_ID  ----------------------------
// SVD Line: 5581

//  <item> SFDITEM_FIELD__DMAMUX_DMAMUX_C2CR_DMAREQ_ID
//    <name> DMAREQ_ID </name>
//    <rw> 
//    <i> [Bits 7..0] RW (@ 0x40020808) Input DMA request line  selected </i>
//    <edit> 
//      <loc> ( (unsigned char)((DMAMUX_DMAMUX_C2CR >> 0) & 0xFF), ((DMAMUX_DMAMUX_C2CR = (DMAMUX_DMAMUX_C2CR & ~(0xFFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ---------------------------  Field Item: DMAMUX_DMAMUX_C2CR_SOIE  ------------------------------
// SVD Line: 5588

//  <item> SFDITEM_FIELD__DMAMUX_DMAMUX_C2CR_SOIE
//    <name> SOIE </name>
//    <rw> 
//    <i> [Bit 8] RW (@ 0x40020808) Interrupt enable at synchronization  event overrun </i>
//    <check> 
//      <loc> ( (unsigned int) DMAMUX_DMAMUX_C2CR ) </loc>
//      <o.8..8> SOIE
//    </check>
//  </item>
//  


// ---------------------------  Field Item: DMAMUX_DMAMUX_C2CR_EGE  -------------------------------
// SVD Line: 5595

//  <item> SFDITEM_FIELD__DMAMUX_DMAMUX_C2CR_EGE
//    <name> EGE </name>
//    <rw> 
//    <i> [Bit 9] RW (@ 0x40020808) Event generation  enable/disable </i>
//    <check> 
//      <loc> ( (unsigned int) DMAMUX_DMAMUX_C2CR ) </loc>
//      <o.9..9> EGE
//    </check>
//  </item>
//  


// ----------------------------  Field Item: DMAMUX_DMAMUX_C2CR_SE  -------------------------------
// SVD Line: 5602

//  <item> SFDITEM_FIELD__DMAMUX_DMAMUX_C2CR_SE
//    <name> SE </name>
//    <rw> 
//    <i> [Bit 16] RW (@ 0x40020808) Synchronous operating mode  enable/disable </i>
//    <check> 
//      <loc> ( (unsigned int) DMAMUX_DMAMUX_C2CR ) </loc>
//      <o.16..16> SE
//    </check>
//  </item>
//  


// ---------------------------  Field Item: DMAMUX_DMAMUX_C2CR_SPOL  ------------------------------
// SVD Line: 5609

//  <item> SFDITEM_FIELD__DMAMUX_DMAMUX_C2CR_SPOL
//    <name> SPOL </name>
//    <rw> 
//    <i> [Bits 18..17] RW (@ 0x40020808) Synchronization event type selector  Defines the synchronization event on the selected  synchronization input: </i>
//    <edit> 
//      <loc> ( (unsigned char)((DMAMUX_DMAMUX_C2CR >> 17) & 0x3), ((DMAMUX_DMAMUX_C2CR = (DMAMUX_DMAMUX_C2CR & ~(0x3UL << 17 )) | ((unsigned long)(Gui_u8:GuiVal & 0x3) << 17 ) ) )) </loc>
//    </edit>
//  </item>
//  


// --------------------------  Field Item: DMAMUX_DMAMUX_C2CR_NBREQ  ------------------------------
// SVD Line: 5617

//  <item> SFDITEM_FIELD__DMAMUX_DMAMUX_C2CR_NBREQ
//    <name> NBREQ </name>
//    <rw> 
//    <i> [Bits 23..19] RW (@ 0x40020808) Number of DMA requests to forward  Defines the number of DMA requests forwarded before  output event is generated. In synchronous mode, it  also defines the number of DMA requests to forward  after a synchronization event, then stop forwarding.  The actual number of DMA requests forwarded is  NBREQ+1. Note: This field can only be written when  both SE and EGE bits are reset. </i>
//    <edit> 
//      <loc> ( (unsigned char)((DMAMUX_DMAMUX_C2CR >> 19) & 0x1F), ((DMAMUX_DMAMUX_C2CR = (DMAMUX_DMAMUX_C2CR & ~(0x1FUL << 19 )) | ((unsigned long)(Gui_u8:GuiVal & 0x1F) << 19 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -------------------------  Field Item: DMAMUX_DMAMUX_C2CR_SYNC_ID  -----------------------------
// SVD Line: 5630

//  <item> SFDITEM_FIELD__DMAMUX_DMAMUX_C2CR_SYNC_ID
//    <name> SYNC_ID </name>
//    <rw> 
//    <i> [Bits 28..24] RW (@ 0x40020808) Synchronization input  selected </i>
//    <edit> 
//      <loc> ( (unsigned char)((DMAMUX_DMAMUX_C2CR >> 24) & 0x1F), ((DMAMUX_DMAMUX_C2CR = (DMAMUX_DMAMUX_C2CR & ~(0x1FUL << 24 )) | ((unsigned long)(Gui_u8:GuiVal & 0x1F) << 24 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ---------------------------  Register RTree: DMAMUX_DMAMUX_C2CR  -------------------------------
// SVD Line: 5571

//  <rtree> SFDITEM_REG__DMAMUX_DMAMUX_C2CR
//    <name> DMAMUX_C2CR </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x40020808) DMAMux - DMA request line multiplexer  channel x control register </i>
//    <loc> ( (unsigned int)((DMAMUX_DMAMUX_C2CR >> 0) & 0xFFFFFFFF), ((DMAMUX_DMAMUX_C2CR = (DMAMUX_DMAMUX_C2CR & ~(0x1FFF03FFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0x1FFF03FF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__DMAMUX_DMAMUX_C2CR_DMAREQ_ID </item>
//    <item> SFDITEM_FIELD__DMAMUX_DMAMUX_C2CR_SOIE </item>
//    <item> SFDITEM_FIELD__DMAMUX_DMAMUX_C2CR_EGE </item>
//    <item> SFDITEM_FIELD__DMAMUX_DMAMUX_C2CR_SE </item>
//    <item> SFDITEM_FIELD__DMAMUX_DMAMUX_C2CR_SPOL </item>
//    <item> SFDITEM_FIELD__DMAMUX_DMAMUX_C2CR_NBREQ </item>
//    <item> SFDITEM_FIELD__DMAMUX_DMAMUX_C2CR_SYNC_ID </item>
//  </rtree>
//  


// ------------------------  Register Item Address: DMAMUX_DMAMUX_C3CR  ---------------------------
// SVD Line: 5639

unsigned int DMAMUX_DMAMUX_C3CR __AT (0x4002080C);



// ------------------------  Field Item: DMAMUX_DMAMUX_C3CR_DMAREQ_ID  ----------------------------
// SVD Line: 5649

//  <item> SFDITEM_FIELD__DMAMUX_DMAMUX_C3CR_DMAREQ_ID
//    <name> DMAREQ_ID </name>
//    <rw> 
//    <i> [Bits 7..0] RW (@ 0x4002080C) Input DMA request line  selected </i>
//    <edit> 
//      <loc> ( (unsigned char)((DMAMUX_DMAMUX_C3CR >> 0) & 0xFF), ((DMAMUX_DMAMUX_C3CR = (DMAMUX_DMAMUX_C3CR & ~(0xFFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ---------------------------  Field Item: DMAMUX_DMAMUX_C3CR_SOIE  ------------------------------
// SVD Line: 5656

//  <item> SFDITEM_FIELD__DMAMUX_DMAMUX_C3CR_SOIE
//    <name> SOIE </name>
//    <rw> 
//    <i> [Bit 8] RW (@ 0x4002080C) Interrupt enable at synchronization  event overrun </i>
//    <check> 
//      <loc> ( (unsigned int) DMAMUX_DMAMUX_C3CR ) </loc>
//      <o.8..8> SOIE
//    </check>
//  </item>
//  


// ---------------------------  Field Item: DMAMUX_DMAMUX_C3CR_EGE  -------------------------------
// SVD Line: 5663

//  <item> SFDITEM_FIELD__DMAMUX_DMAMUX_C3CR_EGE
//    <name> EGE </name>
//    <rw> 
//    <i> [Bit 9] RW (@ 0x4002080C) Event generation  enable/disable </i>
//    <check> 
//      <loc> ( (unsigned int) DMAMUX_DMAMUX_C3CR ) </loc>
//      <o.9..9> EGE
//    </check>
//  </item>
//  


// ----------------------------  Field Item: DMAMUX_DMAMUX_C3CR_SE  -------------------------------
// SVD Line: 5670

//  <item> SFDITEM_FIELD__DMAMUX_DMAMUX_C3CR_SE
//    <name> SE </name>
//    <rw> 
//    <i> [Bit 16] RW (@ 0x4002080C) Synchronous operating mode  enable/disable </i>
//    <check> 
//      <loc> ( (unsigned int) DMAMUX_DMAMUX_C3CR ) </loc>
//      <o.16..16> SE
//    </check>
//  </item>
//  


// ---------------------------  Field Item: DMAMUX_DMAMUX_C3CR_SPOL  ------------------------------
// SVD Line: 5677

//  <item> SFDITEM_FIELD__DMAMUX_DMAMUX_C3CR_SPOL
//    <name> SPOL </name>
//    <rw> 
//    <i> [Bits 18..17] RW (@ 0x4002080C) Synchronization event type selector  Defines the synchronization event on the selected  synchronization input: </i>
//    <edit> 
//      <loc> ( (unsigned char)((DMAMUX_DMAMUX_C3CR >> 17) & 0x3), ((DMAMUX_DMAMUX_C3CR = (DMAMUX_DMAMUX_C3CR & ~(0x3UL << 17 )) | ((unsigned long)(Gui_u8:GuiVal & 0x3) << 17 ) ) )) </loc>
//    </edit>
//  </item>
//  


// --------------------------  Field Item: DMAMUX_DMAMUX_C3CR_NBREQ  ------------------------------
// SVD Line: 5685

//  <item> SFDITEM_FIELD__DMAMUX_DMAMUX_C3CR_NBREQ
//    <name> NBREQ </name>
//    <rw> 
//    <i> [Bits 23..19] RW (@ 0x4002080C) Number of DMA requests to forward  Defines the number of DMA requests forwarded before  output event is generated. In synchronous mode, it  also defines the number of DMA requests to forward  after a synchronization event, then stop forwarding.  The actual number of DMA requests forwarded is  NBREQ+1. Note: This field can only be written when  both SE and EGE bits are reset. </i>
//    <edit> 
//      <loc> ( (unsigned char)((DMAMUX_DMAMUX_C3CR >> 19) & 0x1F), ((DMAMUX_DMAMUX_C3CR = (DMAMUX_DMAMUX_C3CR & ~(0x1FUL << 19 )) | ((unsigned long)(Gui_u8:GuiVal & 0x1F) << 19 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -------------------------  Field Item: DMAMUX_DMAMUX_C3CR_SYNC_ID  -----------------------------
// SVD Line: 5698

//  <item> SFDITEM_FIELD__DMAMUX_DMAMUX_C3CR_SYNC_ID
//    <name> SYNC_ID </name>
//    <rw> 
//    <i> [Bits 28..24] RW (@ 0x4002080C) Synchronization input  selected </i>
//    <edit> 
//      <loc> ( (unsigned char)((DMAMUX_DMAMUX_C3CR >> 24) & 0x1F), ((DMAMUX_DMAMUX_C3CR = (DMAMUX_DMAMUX_C3CR & ~(0x1FUL << 24 )) | ((unsigned long)(Gui_u8:GuiVal & 0x1F) << 24 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ---------------------------  Register RTree: DMAMUX_DMAMUX_C3CR  -------------------------------
// SVD Line: 5639

//  <rtree> SFDITEM_REG__DMAMUX_DMAMUX_C3CR
//    <name> DMAMUX_C3CR </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x4002080C) DMAMux - DMA request line multiplexer  channel x control register </i>
//    <loc> ( (unsigned int)((DMAMUX_DMAMUX_C3CR >> 0) & 0xFFFFFFFF), ((DMAMUX_DMAMUX_C3CR = (DMAMUX_DMAMUX_C3CR & ~(0x1FFF03FFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0x1FFF03FF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__DMAMUX_DMAMUX_C3CR_DMAREQ_ID </item>
//    <item> SFDITEM_FIELD__DMAMUX_DMAMUX_C3CR_SOIE </item>
//    <item> SFDITEM_FIELD__DMAMUX_DMAMUX_C3CR_EGE </item>
//    <item> SFDITEM_FIELD__DMAMUX_DMAMUX_C3CR_SE </item>
//    <item> SFDITEM_FIELD__DMAMUX_DMAMUX_C3CR_SPOL </item>
//    <item> SFDITEM_FIELD__DMAMUX_DMAMUX_C3CR_NBREQ </item>
//    <item> SFDITEM_FIELD__DMAMUX_DMAMUX_C3CR_SYNC_ID </item>
//  </rtree>
//  


// ------------------------  Register Item Address: DMAMUX_DMAMUX_C4CR  ---------------------------
// SVD Line: 5707

unsigned int DMAMUX_DMAMUX_C4CR __AT (0x40020810);



// ------------------------  Field Item: DMAMUX_DMAMUX_C4CR_DMAREQ_ID  ----------------------------
// SVD Line: 5717

//  <item> SFDITEM_FIELD__DMAMUX_DMAMUX_C4CR_DMAREQ_ID
//    <name> DMAREQ_ID </name>
//    <rw> 
//    <i> [Bits 7..0] RW (@ 0x40020810) Input DMA request line  selected </i>
//    <edit> 
//      <loc> ( (unsigned char)((DMAMUX_DMAMUX_C4CR >> 0) & 0xFF), ((DMAMUX_DMAMUX_C4CR = (DMAMUX_DMAMUX_C4CR & ~(0xFFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ---------------------------  Field Item: DMAMUX_DMAMUX_C4CR_SOIE  ------------------------------
// SVD Line: 5724

//  <item> SFDITEM_FIELD__DMAMUX_DMAMUX_C4CR_SOIE
//    <name> SOIE </name>
//    <rw> 
//    <i> [Bit 8] RW (@ 0x40020810) Interrupt enable at synchronization  event overrun </i>
//    <check> 
//      <loc> ( (unsigned int) DMAMUX_DMAMUX_C4CR ) </loc>
//      <o.8..8> SOIE
//    </check>
//  </item>
//  


// ---------------------------  Field Item: DMAMUX_DMAMUX_C4CR_EGE  -------------------------------
// SVD Line: 5731

//  <item> SFDITEM_FIELD__DMAMUX_DMAMUX_C4CR_EGE
//    <name> EGE </name>
//    <rw> 
//    <i> [Bit 9] RW (@ 0x40020810) Event generation  enable/disable </i>
//    <check> 
//      <loc> ( (unsigned int) DMAMUX_DMAMUX_C4CR ) </loc>
//      <o.9..9> EGE
//    </check>
//  </item>
//  


// ----------------------------  Field Item: DMAMUX_DMAMUX_C4CR_SE  -------------------------------
// SVD Line: 5738

//  <item> SFDITEM_FIELD__DMAMUX_DMAMUX_C4CR_SE
//    <name> SE </name>
//    <rw> 
//    <i> [Bit 16] RW (@ 0x40020810) Synchronous operating mode  enable/disable </i>
//    <check> 
//      <loc> ( (unsigned int) DMAMUX_DMAMUX_C4CR ) </loc>
//      <o.16..16> SE
//    </check>
//  </item>
//  


// ---------------------------  Field Item: DMAMUX_DMAMUX_C4CR_SPOL  ------------------------------
// SVD Line: 5745

//  <item> SFDITEM_FIELD__DMAMUX_DMAMUX_C4CR_SPOL
//    <name> SPOL </name>
//    <rw> 
//    <i> [Bits 18..17] RW (@ 0x40020810) Synchronization event type selector  Defines the synchronization event on the selected  synchronization input: </i>
//    <edit> 
//      <loc> ( (unsigned char)((DMAMUX_DMAMUX_C4CR >> 17) & 0x3), ((DMAMUX_DMAMUX_C4CR = (DMAMUX_DMAMUX_C4CR & ~(0x3UL << 17 )) | ((unsigned long)(Gui_u8:GuiVal & 0x3) << 17 ) ) )) </loc>
//    </edit>
//  </item>
//  


// --------------------------  Field Item: DMAMUX_DMAMUX_C4CR_NBREQ  ------------------------------
// SVD Line: 5753

//  <item> SFDITEM_FIELD__DMAMUX_DMAMUX_C4CR_NBREQ
//    <name> NBREQ </name>
//    <rw> 
//    <i> [Bits 23..19] RW (@ 0x40020810) Number of DMA requests to forward  Defines the number of DMA requests forwarded before  output event is generated. In synchronous mode, it  also defines the number of DMA requests to forward  after a synchronization event, then stop forwarding.  The actual number of DMA requests forwarded is  NBREQ+1. Note: This field can only be written when  both SE and EGE bits are reset. </i>
//    <edit> 
//      <loc> ( (unsigned char)((DMAMUX_DMAMUX_C4CR >> 19) & 0x1F), ((DMAMUX_DMAMUX_C4CR = (DMAMUX_DMAMUX_C4CR & ~(0x1FUL << 19 )) | ((unsigned long)(Gui_u8:GuiVal & 0x1F) << 19 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -------------------------  Field Item: DMAMUX_DMAMUX_C4CR_SYNC_ID  -----------------------------
// SVD Line: 5766

//  <item> SFDITEM_FIELD__DMAMUX_DMAMUX_C4CR_SYNC_ID
//    <name> SYNC_ID </name>
//    <rw> 
//    <i> [Bits 28..24] RW (@ 0x40020810) Synchronization input  selected </i>
//    <edit> 
//      <loc> ( (unsigned char)((DMAMUX_DMAMUX_C4CR >> 24) & 0x1F), ((DMAMUX_DMAMUX_C4CR = (DMAMUX_DMAMUX_C4CR & ~(0x1FUL << 24 )) | ((unsigned long)(Gui_u8:GuiVal & 0x1F) << 24 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ---------------------------  Register RTree: DMAMUX_DMAMUX_C4CR  -------------------------------
// SVD Line: 5707

//  <rtree> SFDITEM_REG__DMAMUX_DMAMUX_C4CR
//    <name> DMAMUX_C4CR </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x40020810) DMAMux - DMA request line multiplexer  channel x control register </i>
//    <loc> ( (unsigned int)((DMAMUX_DMAMUX_C4CR >> 0) & 0xFFFFFFFF), ((DMAMUX_DMAMUX_C4CR = (DMAMUX_DMAMUX_C4CR & ~(0x1FFF03FFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0x1FFF03FF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__DMAMUX_DMAMUX_C4CR_DMAREQ_ID </item>
//    <item> SFDITEM_FIELD__DMAMUX_DMAMUX_C4CR_SOIE </item>
//    <item> SFDITEM_FIELD__DMAMUX_DMAMUX_C4CR_EGE </item>
//    <item> SFDITEM_FIELD__DMAMUX_DMAMUX_C4CR_SE </item>
//    <item> SFDITEM_FIELD__DMAMUX_DMAMUX_C4CR_SPOL </item>
//    <item> SFDITEM_FIELD__DMAMUX_DMAMUX_C4CR_NBREQ </item>
//    <item> SFDITEM_FIELD__DMAMUX_DMAMUX_C4CR_SYNC_ID </item>
//  </rtree>
//  


// ------------------------  Register Item Address: DMAMUX_DMAMUX_C5CR  ---------------------------
// SVD Line: 5775

unsigned int DMAMUX_DMAMUX_C5CR __AT (0x40020814);



// ------------------------  Field Item: DMAMUX_DMAMUX_C5CR_DMAREQ_ID  ----------------------------
// SVD Line: 5785

//  <item> SFDITEM_FIELD__DMAMUX_DMAMUX_C5CR_DMAREQ_ID
//    <name> DMAREQ_ID </name>
//    <rw> 
//    <i> [Bits 7..0] RW (@ 0x40020814) Input DMA request line  selected </i>
//    <edit> 
//      <loc> ( (unsigned char)((DMAMUX_DMAMUX_C5CR >> 0) & 0xFF), ((DMAMUX_DMAMUX_C5CR = (DMAMUX_DMAMUX_C5CR & ~(0xFFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ---------------------------  Field Item: DMAMUX_DMAMUX_C5CR_SOIE  ------------------------------
// SVD Line: 5792

//  <item> SFDITEM_FIELD__DMAMUX_DMAMUX_C5CR_SOIE
//    <name> SOIE </name>
//    <rw> 
//    <i> [Bit 8] RW (@ 0x40020814) Interrupt enable at synchronization  event overrun </i>
//    <check> 
//      <loc> ( (unsigned int) DMAMUX_DMAMUX_C5CR ) </loc>
//      <o.8..8> SOIE
//    </check>
//  </item>
//  


// ---------------------------  Field Item: DMAMUX_DMAMUX_C5CR_EGE  -------------------------------
// SVD Line: 5799

//  <item> SFDITEM_FIELD__DMAMUX_DMAMUX_C5CR_EGE
//    <name> EGE </name>
//    <rw> 
//    <i> [Bit 9] RW (@ 0x40020814) Event generation  enable/disable </i>
//    <check> 
//      <loc> ( (unsigned int) DMAMUX_DMAMUX_C5CR ) </loc>
//      <o.9..9> EGE
//    </check>
//  </item>
//  


// ----------------------------  Field Item: DMAMUX_DMAMUX_C5CR_SE  -------------------------------
// SVD Line: 5806

//  <item> SFDITEM_FIELD__DMAMUX_DMAMUX_C5CR_SE
//    <name> SE </name>
//    <rw> 
//    <i> [Bit 16] RW (@ 0x40020814) Synchronous operating mode  enable/disable </i>
//    <check> 
//      <loc> ( (unsigned int) DMAMUX_DMAMUX_C5CR ) </loc>
//      <o.16..16> SE
//    </check>
//  </item>
//  


// ---------------------------  Field Item: DMAMUX_DMAMUX_C5CR_SPOL  ------------------------------
// SVD Line: 5813

//  <item> SFDITEM_FIELD__DMAMUX_DMAMUX_C5CR_SPOL
//    <name> SPOL </name>
//    <rw> 
//    <i> [Bits 18..17] RW (@ 0x40020814) Synchronization event type selector  Defines the synchronization event on the selected  synchronization input: </i>
//    <edit> 
//      <loc> ( (unsigned char)((DMAMUX_DMAMUX_C5CR >> 17) & 0x3), ((DMAMUX_DMAMUX_C5CR = (DMAMUX_DMAMUX_C5CR & ~(0x3UL << 17 )) | ((unsigned long)(Gui_u8:GuiVal & 0x3) << 17 ) ) )) </loc>
//    </edit>
//  </item>
//  


// --------------------------  Field Item: DMAMUX_DMAMUX_C5CR_NBREQ  ------------------------------
// SVD Line: 5821

//  <item> SFDITEM_FIELD__DMAMUX_DMAMUX_C5CR_NBREQ
//    <name> NBREQ </name>
//    <rw> 
//    <i> [Bits 23..19] RW (@ 0x40020814) Number of DMA requests to forward  Defines the number of DMA requests forwarded before  output event is generated. In synchronous mode, it  also defines the number of DMA requests to forward  after a synchronization event, then stop forwarding.  The actual number of DMA requests forwarded is  NBREQ+1. Note: This field can only be written when  both SE and EGE bits are reset. </i>
//    <edit> 
//      <loc> ( (unsigned char)((DMAMUX_DMAMUX_C5CR >> 19) & 0x1F), ((DMAMUX_DMAMUX_C5CR = (DMAMUX_DMAMUX_C5CR & ~(0x1FUL << 19 )) | ((unsigned long)(Gui_u8:GuiVal & 0x1F) << 19 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -------------------------  Field Item: DMAMUX_DMAMUX_C5CR_SYNC_ID  -----------------------------
// SVD Line: 5834

//  <item> SFDITEM_FIELD__DMAMUX_DMAMUX_C5CR_SYNC_ID
//    <name> SYNC_ID </name>
//    <rw> 
//    <i> [Bits 28..24] RW (@ 0x40020814) Synchronization input  selected </i>
//    <edit> 
//      <loc> ( (unsigned char)((DMAMUX_DMAMUX_C5CR >> 24) & 0x1F), ((DMAMUX_DMAMUX_C5CR = (DMAMUX_DMAMUX_C5CR & ~(0x1FUL << 24 )) | ((unsigned long)(Gui_u8:GuiVal & 0x1F) << 24 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ---------------------------  Register RTree: DMAMUX_DMAMUX_C5CR  -------------------------------
// SVD Line: 5775

//  <rtree> SFDITEM_REG__DMAMUX_DMAMUX_C5CR
//    <name> DMAMUX_C5CR </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x40020814) DMAMux - DMA request line multiplexer  channel x control register </i>
//    <loc> ( (unsigned int)((DMAMUX_DMAMUX_C5CR >> 0) & 0xFFFFFFFF), ((DMAMUX_DMAMUX_C5CR = (DMAMUX_DMAMUX_C5CR & ~(0x1FFF03FFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0x1FFF03FF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__DMAMUX_DMAMUX_C5CR_DMAREQ_ID </item>
//    <item> SFDITEM_FIELD__DMAMUX_DMAMUX_C5CR_SOIE </item>
//    <item> SFDITEM_FIELD__DMAMUX_DMAMUX_C5CR_EGE </item>
//    <item> SFDITEM_FIELD__DMAMUX_DMAMUX_C5CR_SE </item>
//    <item> SFDITEM_FIELD__DMAMUX_DMAMUX_C5CR_SPOL </item>
//    <item> SFDITEM_FIELD__DMAMUX_DMAMUX_C5CR_NBREQ </item>
//    <item> SFDITEM_FIELD__DMAMUX_DMAMUX_C5CR_SYNC_ID </item>
//  </rtree>
//  


// ------------------------  Register Item Address: DMAMUX_DMAMUX_C6CR  ---------------------------
// SVD Line: 5843

unsigned int DMAMUX_DMAMUX_C6CR __AT (0x40020818);



// ------------------------  Field Item: DMAMUX_DMAMUX_C6CR_DMAREQ_ID  ----------------------------
// SVD Line: 5853

//  <item> SFDITEM_FIELD__DMAMUX_DMAMUX_C6CR_DMAREQ_ID
//    <name> DMAREQ_ID </name>
//    <rw> 
//    <i> [Bits 7..0] RW (@ 0x40020818) Input DMA request line  selected </i>
//    <edit> 
//      <loc> ( (unsigned char)((DMAMUX_DMAMUX_C6CR >> 0) & 0xFF), ((DMAMUX_DMAMUX_C6CR = (DMAMUX_DMAMUX_C6CR & ~(0xFFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ---------------------------  Field Item: DMAMUX_DMAMUX_C6CR_SOIE  ------------------------------
// SVD Line: 5860

//  <item> SFDITEM_FIELD__DMAMUX_DMAMUX_C6CR_SOIE
//    <name> SOIE </name>
//    <rw> 
//    <i> [Bit 8] RW (@ 0x40020818) Interrupt enable at synchronization  event overrun </i>
//    <check> 
//      <loc> ( (unsigned int) DMAMUX_DMAMUX_C6CR ) </loc>
//      <o.8..8> SOIE
//    </check>
//  </item>
//  


// ---------------------------  Field Item: DMAMUX_DMAMUX_C6CR_EGE  -------------------------------
// SVD Line: 5867

//  <item> SFDITEM_FIELD__DMAMUX_DMAMUX_C6CR_EGE
//    <name> EGE </name>
//    <rw> 
//    <i> [Bit 9] RW (@ 0x40020818) Event generation  enable/disable </i>
//    <check> 
//      <loc> ( (unsigned int) DMAMUX_DMAMUX_C6CR ) </loc>
//      <o.9..9> EGE
//    </check>
//  </item>
//  


// ----------------------------  Field Item: DMAMUX_DMAMUX_C6CR_SE  -------------------------------
// SVD Line: 5874

//  <item> SFDITEM_FIELD__DMAMUX_DMAMUX_C6CR_SE
//    <name> SE </name>
//    <rw> 
//    <i> [Bit 16] RW (@ 0x40020818) Synchronous operating mode  enable/disable </i>
//    <check> 
//      <loc> ( (unsigned int) DMAMUX_DMAMUX_C6CR ) </loc>
//      <o.16..16> SE
//    </check>
//  </item>
//  


// ---------------------------  Field Item: DMAMUX_DMAMUX_C6CR_SPOL  ------------------------------
// SVD Line: 5881

//  <item> SFDITEM_FIELD__DMAMUX_DMAMUX_C6CR_SPOL
//    <name> SPOL </name>
//    <rw> 
//    <i> [Bits 18..17] RW (@ 0x40020818) Synchronization event type selector  Defines the synchronization event on the selected  synchronization input: </i>
//    <edit> 
//      <loc> ( (unsigned char)((DMAMUX_DMAMUX_C6CR >> 17) & 0x3), ((DMAMUX_DMAMUX_C6CR = (DMAMUX_DMAMUX_C6CR & ~(0x3UL << 17 )) | ((unsigned long)(Gui_u8:GuiVal & 0x3) << 17 ) ) )) </loc>
//    </edit>
//  </item>
//  


// --------------------------  Field Item: DMAMUX_DMAMUX_C6CR_NBREQ  ------------------------------
// SVD Line: 5889

//  <item> SFDITEM_FIELD__DMAMUX_DMAMUX_C6CR_NBREQ
//    <name> NBREQ </name>
//    <rw> 
//    <i> [Bits 23..19] RW (@ 0x40020818) Number of DMA requests to forward  Defines the number of DMA requests forwarded before  output event is generated. In synchronous mode, it  also defines the number of DMA requests to forward  after a synchronization event, then stop forwarding.  The actual number of DMA requests forwarded is  NBREQ+1. Note: This field can only be written when  both SE and EGE bits are reset. </i>
//    <edit> 
//      <loc> ( (unsigned char)((DMAMUX_DMAMUX_C6CR >> 19) & 0x1F), ((DMAMUX_DMAMUX_C6CR = (DMAMUX_DMAMUX_C6CR & ~(0x1FUL << 19 )) | ((unsigned long)(Gui_u8:GuiVal & 0x1F) << 19 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -------------------------  Field Item: DMAMUX_DMAMUX_C6CR_SYNC_ID  -----------------------------
// SVD Line: 5902

//  <item> SFDITEM_FIELD__DMAMUX_DMAMUX_C6CR_SYNC_ID
//    <name> SYNC_ID </name>
//    <rw> 
//    <i> [Bits 28..24] RW (@ 0x40020818) Synchronization input  selected </i>
//    <edit> 
//      <loc> ( (unsigned char)((DMAMUX_DMAMUX_C6CR >> 24) & 0x1F), ((DMAMUX_DMAMUX_C6CR = (DMAMUX_DMAMUX_C6CR & ~(0x1FUL << 24 )) | ((unsigned long)(Gui_u8:GuiVal & 0x1F) << 24 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ---------------------------  Register RTree: DMAMUX_DMAMUX_C6CR  -------------------------------
// SVD Line: 5843

//  <rtree> SFDITEM_REG__DMAMUX_DMAMUX_C6CR
//    <name> DMAMUX_C6CR </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x40020818) DMAMux - DMA request line multiplexer  channel x control register </i>
//    <loc> ( (unsigned int)((DMAMUX_DMAMUX_C6CR >> 0) & 0xFFFFFFFF), ((DMAMUX_DMAMUX_C6CR = (DMAMUX_DMAMUX_C6CR & ~(0x1FFF03FFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0x1FFF03FF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__DMAMUX_DMAMUX_C6CR_DMAREQ_ID </item>
//    <item> SFDITEM_FIELD__DMAMUX_DMAMUX_C6CR_SOIE </item>
//    <item> SFDITEM_FIELD__DMAMUX_DMAMUX_C6CR_EGE </item>
//    <item> SFDITEM_FIELD__DMAMUX_DMAMUX_C6CR_SE </item>
//    <item> SFDITEM_FIELD__DMAMUX_DMAMUX_C6CR_SPOL </item>
//    <item> SFDITEM_FIELD__DMAMUX_DMAMUX_C6CR_NBREQ </item>
//    <item> SFDITEM_FIELD__DMAMUX_DMAMUX_C6CR_SYNC_ID </item>
//  </rtree>
//  


// -----------------------  Register Item Address: DMAMUX_DMAMUX_RG0CR  ---------------------------
// SVD Line: 5911

unsigned int DMAMUX_DMAMUX_RG0CR __AT (0x40020900);



// -------------------------  Field Item: DMAMUX_DMAMUX_RG0CR_SIG_ID  -----------------------------
// SVD Line: 5921

//  <item> SFDITEM_FIELD__DMAMUX_DMAMUX_RG0CR_SIG_ID
//    <name> SIG_ID </name>
//    <rw> 
//    <i> [Bits 4..0] RW (@ 0x40020900) DMA request trigger input  selected </i>
//    <edit> 
//      <loc> ( (unsigned char)((DMAMUX_DMAMUX_RG0CR >> 0) & 0x1F), ((DMAMUX_DMAMUX_RG0CR = (DMAMUX_DMAMUX_RG0CR & ~(0x1FUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0x1F) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ---------------------------  Field Item: DMAMUX_DMAMUX_RG0CR_OIE  ------------------------------
// SVD Line: 5928

//  <item> SFDITEM_FIELD__DMAMUX_DMAMUX_RG0CR_OIE
//    <name> OIE </name>
//    <rw> 
//    <i> [Bit 8] RW (@ 0x40020900) Interrupt enable at trigger event  overrun </i>
//    <check> 
//      <loc> ( (unsigned int) DMAMUX_DMAMUX_RG0CR ) </loc>
//      <o.8..8> OIE
//    </check>
//  </item>
//  


// ---------------------------  Field Item: DMAMUX_DMAMUX_RG0CR_GE  -------------------------------
// SVD Line: 5935

//  <item> SFDITEM_FIELD__DMAMUX_DMAMUX_RG0CR_GE
//    <name> GE </name>
//    <rw> 
//    <i> [Bit 16] RW (@ 0x40020900) DMA request generator channel  enable/disable </i>
//    <check> 
//      <loc> ( (unsigned int) DMAMUX_DMAMUX_RG0CR ) </loc>
//      <o.16..16> GE
//    </check>
//  </item>
//  


// --------------------------  Field Item: DMAMUX_DMAMUX_RG0CR_GPOL  ------------------------------
// SVD Line: 5942

//  <item> SFDITEM_FIELD__DMAMUX_DMAMUX_RG0CR_GPOL
//    <name> GPOL </name>
//    <rw> 
//    <i> [Bits 18..17] RW (@ 0x40020900) DMA request generator trigger event type  selection Defines the trigger event on the selected  DMA request trigger input </i>
//    <edit> 
//      <loc> ( (unsigned char)((DMAMUX_DMAMUX_RG0CR >> 17) & 0x3), ((DMAMUX_DMAMUX_RG0CR = (DMAMUX_DMAMUX_RG0CR & ~(0x3UL << 17 )) | ((unsigned long)(Gui_u8:GuiVal & 0x3) << 17 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -------------------------  Field Item: DMAMUX_DMAMUX_RG0CR_GNBREQ  -----------------------------
// SVD Line: 5950

//  <item> SFDITEM_FIELD__DMAMUX_DMAMUX_RG0CR_GNBREQ
//    <name> GNBREQ </name>
//    <rw> 
//    <i> [Bits 23..19] RW (@ 0x40020900) Number of DMA requests to generate  Defines the number of DMA requests generated after a  trigger event, then stop generating. The actual  number of generated DMA requests is GNBREQ+1. Note:  This field can only be written when GE bit is  reset. </i>
//    <edit> 
//      <loc> ( (unsigned char)((DMAMUX_DMAMUX_RG0CR >> 19) & 0x1F), ((DMAMUX_DMAMUX_RG0CR = (DMAMUX_DMAMUX_RG0CR & ~(0x1FUL << 19 )) | ((unsigned long)(Gui_u8:GuiVal & 0x1F) << 19 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ---------------------------  Register RTree: DMAMUX_DMAMUX_RG0CR  ------------------------------
// SVD Line: 5911

//  <rtree> SFDITEM_REG__DMAMUX_DMAMUX_RG0CR
//    <name> DMAMUX_RG0CR </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x40020900) DMAMux - DMA request generator channel x  control register </i>
//    <loc> ( (unsigned int)((DMAMUX_DMAMUX_RG0CR >> 0) & 0xFFFFFFFF), ((DMAMUX_DMAMUX_RG0CR = (DMAMUX_DMAMUX_RG0CR & ~(0xFF011FUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFF011F) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__DMAMUX_DMAMUX_RG0CR_SIG_ID </item>
//    <item> SFDITEM_FIELD__DMAMUX_DMAMUX_RG0CR_OIE </item>
//    <item> SFDITEM_FIELD__DMAMUX_DMAMUX_RG0CR_GE </item>
//    <item> SFDITEM_FIELD__DMAMUX_DMAMUX_RG0CR_GPOL </item>
//    <item> SFDITEM_FIELD__DMAMUX_DMAMUX_RG0CR_GNBREQ </item>
//  </rtree>
//  


// -----------------------  Register Item Address: DMAMUX_DMAMUX_RG1CR  ---------------------------
// SVD Line: 5963

unsigned int DMAMUX_DMAMUX_RG1CR __AT (0x40020904);



// -------------------------  Field Item: DMAMUX_DMAMUX_RG1CR_SIG_ID  -----------------------------
// SVD Line: 5973

//  <item> SFDITEM_FIELD__DMAMUX_DMAMUX_RG1CR_SIG_ID
//    <name> SIG_ID </name>
//    <rw> 
//    <i> [Bits 4..0] RW (@ 0x40020904) DMA request trigger input  selected </i>
//    <edit> 
//      <loc> ( (unsigned char)((DMAMUX_DMAMUX_RG1CR >> 0) & 0x1F), ((DMAMUX_DMAMUX_RG1CR = (DMAMUX_DMAMUX_RG1CR & ~(0x1FUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0x1F) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ---------------------------  Field Item: DMAMUX_DMAMUX_RG1CR_OIE  ------------------------------
// SVD Line: 5980

//  <item> SFDITEM_FIELD__DMAMUX_DMAMUX_RG1CR_OIE
//    <name> OIE </name>
//    <rw> 
//    <i> [Bit 8] RW (@ 0x40020904) Interrupt enable at trigger event  overrun </i>
//    <check> 
//      <loc> ( (unsigned int) DMAMUX_DMAMUX_RG1CR ) </loc>
//      <o.8..8> OIE
//    </check>
//  </item>
//  


// ---------------------------  Field Item: DMAMUX_DMAMUX_RG1CR_GE  -------------------------------
// SVD Line: 5987

//  <item> SFDITEM_FIELD__DMAMUX_DMAMUX_RG1CR_GE
//    <name> GE </name>
//    <rw> 
//    <i> [Bit 16] RW (@ 0x40020904) DMA request generator channel  enable/disable </i>
//    <check> 
//      <loc> ( (unsigned int) DMAMUX_DMAMUX_RG1CR ) </loc>
//      <o.16..16> GE
//    </check>
//  </item>
//  


// --------------------------  Field Item: DMAMUX_DMAMUX_RG1CR_GPOL  ------------------------------
// SVD Line: 5994

//  <item> SFDITEM_FIELD__DMAMUX_DMAMUX_RG1CR_GPOL
//    <name> GPOL </name>
//    <rw> 
//    <i> [Bits 18..17] RW (@ 0x40020904) DMA request generator trigger event type  selection Defines the trigger event on the selected  DMA request trigger input </i>
//    <edit> 
//      <loc> ( (unsigned char)((DMAMUX_DMAMUX_RG1CR >> 17) & 0x3), ((DMAMUX_DMAMUX_RG1CR = (DMAMUX_DMAMUX_RG1CR & ~(0x3UL << 17 )) | ((unsigned long)(Gui_u8:GuiVal & 0x3) << 17 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -------------------------  Field Item: DMAMUX_DMAMUX_RG1CR_GNBREQ  -----------------------------
// SVD Line: 6002

//  <item> SFDITEM_FIELD__DMAMUX_DMAMUX_RG1CR_GNBREQ
//    <name> GNBREQ </name>
//    <rw> 
//    <i> [Bits 23..19] RW (@ 0x40020904) Number of DMA requests to generate  Defines the number of DMA requests generated after a  trigger event, then stop generating. The actual  number of generated DMA requests is GNBREQ+1. Note:  This field can only be written when GE bit is  reset. </i>
//    <edit> 
//      <loc> ( (unsigned char)((DMAMUX_DMAMUX_RG1CR >> 19) & 0x1F), ((DMAMUX_DMAMUX_RG1CR = (DMAMUX_DMAMUX_RG1CR & ~(0x1FUL << 19 )) | ((unsigned long)(Gui_u8:GuiVal & 0x1F) << 19 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ---------------------------  Register RTree: DMAMUX_DMAMUX_RG1CR  ------------------------------
// SVD Line: 5963

//  <rtree> SFDITEM_REG__DMAMUX_DMAMUX_RG1CR
//    <name> DMAMUX_RG1CR </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x40020904) DMAMux - DMA request generator channel x  control register </i>
//    <loc> ( (unsigned int)((DMAMUX_DMAMUX_RG1CR >> 0) & 0xFFFFFFFF), ((DMAMUX_DMAMUX_RG1CR = (DMAMUX_DMAMUX_RG1CR & ~(0xFF011FUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFF011F) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__DMAMUX_DMAMUX_RG1CR_SIG_ID </item>
//    <item> SFDITEM_FIELD__DMAMUX_DMAMUX_RG1CR_OIE </item>
//    <item> SFDITEM_FIELD__DMAMUX_DMAMUX_RG1CR_GE </item>
//    <item> SFDITEM_FIELD__DMAMUX_DMAMUX_RG1CR_GPOL </item>
//    <item> SFDITEM_FIELD__DMAMUX_DMAMUX_RG1CR_GNBREQ </item>
//  </rtree>
//  


// -----------------------  Register Item Address: DMAMUX_DMAMUX_RG2CR  ---------------------------
// SVD Line: 6015

unsigned int DMAMUX_DMAMUX_RG2CR __AT (0x40020908);



// -------------------------  Field Item: DMAMUX_DMAMUX_RG2CR_SIG_ID  -----------------------------
// SVD Line: 6025

//  <item> SFDITEM_FIELD__DMAMUX_DMAMUX_RG2CR_SIG_ID
//    <name> SIG_ID </name>
//    <rw> 
//    <i> [Bits 4..0] RW (@ 0x40020908) DMA request trigger input  selected </i>
//    <edit> 
//      <loc> ( (unsigned char)((DMAMUX_DMAMUX_RG2CR >> 0) & 0x1F), ((DMAMUX_DMAMUX_RG2CR = (DMAMUX_DMAMUX_RG2CR & ~(0x1FUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0x1F) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ---------------------------  Field Item: DMAMUX_DMAMUX_RG2CR_OIE  ------------------------------
// SVD Line: 6032

//  <item> SFDITEM_FIELD__DMAMUX_DMAMUX_RG2CR_OIE
//    <name> OIE </name>
//    <rw> 
//    <i> [Bit 8] RW (@ 0x40020908) Interrupt enable at trigger event  overrun </i>
//    <check> 
//      <loc> ( (unsigned int) DMAMUX_DMAMUX_RG2CR ) </loc>
//      <o.8..8> OIE
//    </check>
//  </item>
//  


// ---------------------------  Field Item: DMAMUX_DMAMUX_RG2CR_GE  -------------------------------
// SVD Line: 6039

//  <item> SFDITEM_FIELD__DMAMUX_DMAMUX_RG2CR_GE
//    <name> GE </name>
//    <rw> 
//    <i> [Bit 16] RW (@ 0x40020908) DMA request generator channel  enable/disable </i>
//    <check> 
//      <loc> ( (unsigned int) DMAMUX_DMAMUX_RG2CR ) </loc>
//      <o.16..16> GE
//    </check>
//  </item>
//  


// --------------------------  Field Item: DMAMUX_DMAMUX_RG2CR_GPOL  ------------------------------
// SVD Line: 6046

//  <item> SFDITEM_FIELD__DMAMUX_DMAMUX_RG2CR_GPOL
//    <name> GPOL </name>
//    <rw> 
//    <i> [Bits 18..17] RW (@ 0x40020908) DMA request generator trigger event type  selection Defines the trigger event on the selected  DMA request trigger input </i>
//    <edit> 
//      <loc> ( (unsigned char)((DMAMUX_DMAMUX_RG2CR >> 17) & 0x3), ((DMAMUX_DMAMUX_RG2CR = (DMAMUX_DMAMUX_RG2CR & ~(0x3UL << 17 )) | ((unsigned long)(Gui_u8:GuiVal & 0x3) << 17 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -------------------------  Field Item: DMAMUX_DMAMUX_RG2CR_GNBREQ  -----------------------------
// SVD Line: 6054

//  <item> SFDITEM_FIELD__DMAMUX_DMAMUX_RG2CR_GNBREQ
//    <name> GNBREQ </name>
//    <rw> 
//    <i> [Bits 23..19] RW (@ 0x40020908) Number of DMA requests to generate  Defines the number of DMA requests generated after a  trigger event, then stop generating. The actual  number of generated DMA requests is GNBREQ+1. Note:  This field can only be written when GE bit is  reset. </i>
//    <edit> 
//      <loc> ( (unsigned char)((DMAMUX_DMAMUX_RG2CR >> 19) & 0x1F), ((DMAMUX_DMAMUX_RG2CR = (DMAMUX_DMAMUX_RG2CR & ~(0x1FUL << 19 )) | ((unsigned long)(Gui_u8:GuiVal & 0x1F) << 19 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ---------------------------  Register RTree: DMAMUX_DMAMUX_RG2CR  ------------------------------
// SVD Line: 6015

//  <rtree> SFDITEM_REG__DMAMUX_DMAMUX_RG2CR
//    <name> DMAMUX_RG2CR </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x40020908) DMAMux - DMA request generator channel x  control register </i>
//    <loc> ( (unsigned int)((DMAMUX_DMAMUX_RG2CR >> 0) & 0xFFFFFFFF), ((DMAMUX_DMAMUX_RG2CR = (DMAMUX_DMAMUX_RG2CR & ~(0xFF011FUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFF011F) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__DMAMUX_DMAMUX_RG2CR_SIG_ID </item>
//    <item> SFDITEM_FIELD__DMAMUX_DMAMUX_RG2CR_OIE </item>
//    <item> SFDITEM_FIELD__DMAMUX_DMAMUX_RG2CR_GE </item>
//    <item> SFDITEM_FIELD__DMAMUX_DMAMUX_RG2CR_GPOL </item>
//    <item> SFDITEM_FIELD__DMAMUX_DMAMUX_RG2CR_GNBREQ </item>
//  </rtree>
//  


// -----------------------  Register Item Address: DMAMUX_DMAMUX_RG3CR  ---------------------------
// SVD Line: 6067

unsigned int DMAMUX_DMAMUX_RG3CR __AT (0x4002090C);



// -------------------------  Field Item: DMAMUX_DMAMUX_RG3CR_SIG_ID  -----------------------------
// SVD Line: 6077

//  <item> SFDITEM_FIELD__DMAMUX_DMAMUX_RG3CR_SIG_ID
//    <name> SIG_ID </name>
//    <rw> 
//    <i> [Bits 4..0] RW (@ 0x4002090C) DMA request trigger input  selected </i>
//    <edit> 
//      <loc> ( (unsigned char)((DMAMUX_DMAMUX_RG3CR >> 0) & 0x1F), ((DMAMUX_DMAMUX_RG3CR = (DMAMUX_DMAMUX_RG3CR & ~(0x1FUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0x1F) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ---------------------------  Field Item: DMAMUX_DMAMUX_RG3CR_OIE  ------------------------------
// SVD Line: 6084

//  <item> SFDITEM_FIELD__DMAMUX_DMAMUX_RG3CR_OIE
//    <name> OIE </name>
//    <rw> 
//    <i> [Bit 8] RW (@ 0x4002090C) Interrupt enable at trigger event  overrun </i>
//    <check> 
//      <loc> ( (unsigned int) DMAMUX_DMAMUX_RG3CR ) </loc>
//      <o.8..8> OIE
//    </check>
//  </item>
//  


// ---------------------------  Field Item: DMAMUX_DMAMUX_RG3CR_GE  -------------------------------
// SVD Line: 6091

//  <item> SFDITEM_FIELD__DMAMUX_DMAMUX_RG3CR_GE
//    <name> GE </name>
//    <rw> 
//    <i> [Bit 16] RW (@ 0x4002090C) DMA request generator channel  enable/disable </i>
//    <check> 
//      <loc> ( (unsigned int) DMAMUX_DMAMUX_RG3CR ) </loc>
//      <o.16..16> GE
//    </check>
//  </item>
//  


// --------------------------  Field Item: DMAMUX_DMAMUX_RG3CR_GPOL  ------------------------------
// SVD Line: 6098

//  <item> SFDITEM_FIELD__DMAMUX_DMAMUX_RG3CR_GPOL
//    <name> GPOL </name>
//    <rw> 
//    <i> [Bits 18..17] RW (@ 0x4002090C) DMA request generator trigger event type  selection Defines the trigger event on the selected  DMA request trigger input </i>
//    <edit> 
//      <loc> ( (unsigned char)((DMAMUX_DMAMUX_RG3CR >> 17) & 0x3), ((DMAMUX_DMAMUX_RG3CR = (DMAMUX_DMAMUX_RG3CR & ~(0x3UL << 17 )) | ((unsigned long)(Gui_u8:GuiVal & 0x3) << 17 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -------------------------  Field Item: DMAMUX_DMAMUX_RG3CR_GNBREQ  -----------------------------
// SVD Line: 6106

//  <item> SFDITEM_FIELD__DMAMUX_DMAMUX_RG3CR_GNBREQ
//    <name> GNBREQ </name>
//    <rw> 
//    <i> [Bits 23..19] RW (@ 0x4002090C) Number of DMA requests to generate  Defines the number of DMA requests generated after a  trigger event, then stop generating. The actual  number of generated DMA requests is GNBREQ+1. Note:  This field can only be written when GE bit is  reset. </i>
//    <edit> 
//      <loc> ( (unsigned char)((DMAMUX_DMAMUX_RG3CR >> 19) & 0x1F), ((DMAMUX_DMAMUX_RG3CR = (DMAMUX_DMAMUX_RG3CR & ~(0x1FUL << 19 )) | ((unsigned long)(Gui_u8:GuiVal & 0x1F) << 19 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ---------------------------  Register RTree: DMAMUX_DMAMUX_RG3CR  ------------------------------
// SVD Line: 6067

//  <rtree> SFDITEM_REG__DMAMUX_DMAMUX_RG3CR
//    <name> DMAMUX_RG3CR </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x4002090C) DMAMux - DMA request generator channel x  control register </i>
//    <loc> ( (unsigned int)((DMAMUX_DMAMUX_RG3CR >> 0) & 0xFFFFFFFF), ((DMAMUX_DMAMUX_RG3CR = (DMAMUX_DMAMUX_RG3CR & ~(0xFF011FUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFF011F) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__DMAMUX_DMAMUX_RG3CR_SIG_ID </item>
//    <item> SFDITEM_FIELD__DMAMUX_DMAMUX_RG3CR_OIE </item>
//    <item> SFDITEM_FIELD__DMAMUX_DMAMUX_RG3CR_GE </item>
//    <item> SFDITEM_FIELD__DMAMUX_DMAMUX_RG3CR_GPOL </item>
//    <item> SFDITEM_FIELD__DMAMUX_DMAMUX_RG3CR_GNBREQ </item>
//  </rtree>
//  


// ------------------------  Register Item Address: DMAMUX_DMAMUX_RGSR  ---------------------------
// SVD Line: 6119

unsigned int DMAMUX_DMAMUX_RGSR __AT (0x40020940);



// ----------------------------  Field Item: DMAMUX_DMAMUX_RGSR_OF  -------------------------------
// SVD Line: 6129

//  <item> SFDITEM_FIELD__DMAMUX_DMAMUX_RGSR_OF
//    <name> OF </name>
//    <r> 
//    <i> [Bits 3..0] RO (@ 0x40020940) Trigger event overrun flag The flag is  set when a trigger event occurs on DMA request  generator channel x, while the DMA request generator  counter value is lower than GNBREQ. The flag is  cleared by writing 1 to the corresponding COFx bit in  DMAMUX_RGCFR register. </i>
//    <edit> 
//      <loc> ( (unsigned char)((DMAMUX_DMAMUX_RGSR >> 0) & 0xF) ) </loc>
//    </edit>
//  </item>
//  


// ---------------------------  Register RTree: DMAMUX_DMAMUX_RGSR  -------------------------------
// SVD Line: 6119

//  <rtree> SFDITEM_REG__DMAMUX_DMAMUX_RGSR
//    <name> DMAMUX_RGSR </name>
//    <r> 
//    <i> [Bits 31..0] RO (@ 0x40020940) DMAMux - DMA request generator status  register </i>
//    <loc> ( (unsigned int)((DMAMUX_DMAMUX_RGSR >> 0) & 0xFFFFFFFF) ) </loc>
//    <item> SFDITEM_FIELD__DMAMUX_DMAMUX_RGSR_OF </item>
//  </rtree>
//  


// -----------------------  Register Item Address: DMAMUX_DMAMUX_RGCFR  ---------------------------
// SVD Line: 6142

unsigned int DMAMUX_DMAMUX_RGCFR __AT (0x40020944);



// ---------------------------  Field Item: DMAMUX_DMAMUX_RGCFR_COF  ------------------------------
// SVD Line: 6152

//  <item> SFDITEM_FIELD__DMAMUX_DMAMUX_RGCFR_COF
//    <name> COF </name>
//    <w> 
//    <i> [Bits 3..0] WO (@ 0x40020944) Clear trigger event overrun flag Upon  setting, this bit clears the corresponding overrun  flag OFx in the DMAMUX_RGCSR register. </i>
//    <edit> 
//      <loc> ( (unsigned char)((DMAMUX_DMAMUX_RGCFR >> 0) & 0x0), ((DMAMUX_DMAMUX_RGCFR = (DMAMUX_DMAMUX_RGCFR & ~(0xFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ---------------------------  Register RTree: DMAMUX_DMAMUX_RGCFR  ------------------------------
// SVD Line: 6142

//  <rtree> SFDITEM_REG__DMAMUX_DMAMUX_RGCFR
//    <name> DMAMUX_RGCFR </name>
//    <w> 
//    <i> [Bits 31..0] WO (@ 0x40020944) DMAMux - DMA request generator clear flag  register </i>
//    <loc> ( (unsigned int)((DMAMUX_DMAMUX_RGCFR >> 0) & 0xFFFFFFFF), ((DMAMUX_DMAMUX_RGCFR = (DMAMUX_DMAMUX_RGCFR & ~(0xFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__DMAMUX_DMAMUX_RGCFR_COF </item>
//  </rtree>
//  


// ------------------------  Register Item Address: DMAMUX_DMAMUX_CSR  ----------------------------
// SVD Line: 6162

unsigned int DMAMUX_DMAMUX_CSR __AT (0x40020880);



// ----------------------------  Field Item: DMAMUX_DMAMUX_CSR_SOF  -------------------------------
// SVD Line: 6172

//  <item> SFDITEM_FIELD__DMAMUX_DMAMUX_CSR_SOF
//    <name> SOF </name>
//    <r> 
//    <i> [Bits 6..0] RO (@ 0x40020880) Synchronization overrun event  flag </i>
//    <edit> 
//      <loc> ( (unsigned char)((DMAMUX_DMAMUX_CSR >> 0) & 0x7F) ) </loc>
//    </edit>
//  </item>
//  


// ----------------------------  Register RTree: DMAMUX_DMAMUX_CSR  -------------------------------
// SVD Line: 6162

//  <rtree> SFDITEM_REG__DMAMUX_DMAMUX_CSR
//    <name> DMAMUX_CSR </name>
//    <r> 
//    <i> [Bits 31..0] RO (@ 0x40020880) DMAMUX request line multiplexer interrupt  channel status register </i>
//    <loc> ( (unsigned int)((DMAMUX_DMAMUX_CSR >> 0) & 0xFFFFFFFF) ) </loc>
//    <item> SFDITEM_FIELD__DMAMUX_DMAMUX_CSR_SOF </item>
//  </rtree>
//  


// ------------------------  Register Item Address: DMAMUX_DMAMUX_CFR  ----------------------------
// SVD Line: 6181

unsigned int DMAMUX_DMAMUX_CFR __AT (0x40020884);



// ---------------------------  Field Item: DMAMUX_DMAMUX_CFR_CSOF  -------------------------------
// SVD Line: 6191

//  <item> SFDITEM_FIELD__DMAMUX_DMAMUX_CFR_CSOF
//    <name> CSOF </name>
//    <w> 
//    <i> [Bits 6..0] WO (@ 0x40020884) Clear synchronization overrun event  flag </i>
//    <edit> 
//      <loc> ( (unsigned char)((DMAMUX_DMAMUX_CFR >> 0) & 0x0), ((DMAMUX_DMAMUX_CFR = (DMAMUX_DMAMUX_CFR & ~(0x7FUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0x7F) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ----------------------------  Register RTree: DMAMUX_DMAMUX_CFR  -------------------------------
// SVD Line: 6181

//  <rtree> SFDITEM_REG__DMAMUX_DMAMUX_CFR
//    <name> DMAMUX_CFR </name>
//    <w> 
//    <i> [Bits 31..0] WO (@ 0x40020884) DMAMUX request line multiplexer interrupt  clear flag register </i>
//    <loc> ( (unsigned int)((DMAMUX_DMAMUX_CFR >> 0) & 0xFFFFFFFF), ((DMAMUX_DMAMUX_CFR = (DMAMUX_DMAMUX_CFR & ~(0x7FUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0x7F) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__DMAMUX_DMAMUX_CFR_CSOF </item>
//  </rtree>
//  


// ------------------------  Register Item Address: DMAMUX_DMAMUX_SIDR  ---------------------------
// SVD Line: 6200

unsigned int DMAMUX_DMAMUX_SIDR __AT (0x40020BFC);



// ---------------------------  Field Item: DMAMUX_DMAMUX_SIDR_SID  -------------------------------
// SVD Line: 6210

//  <item> SFDITEM_FIELD__DMAMUX_DMAMUX_SIDR_SID
//    <name> SID </name>
//    <r> 
//    <i> [Bits 31..0] RO (@ 0x40020BFC) Size identification </i>
//    <edit> 
//      <loc> ( (unsigned int)((DMAMUX_DMAMUX_SIDR >> 0) & 0xFFFFFFFF) ) </loc>
//    </edit>
//  </item>
//  


// ---------------------------  Register RTree: DMAMUX_DMAMUX_SIDR  -------------------------------
// SVD Line: 6200

//  <rtree> SFDITEM_REG__DMAMUX_DMAMUX_SIDR
//    <name> DMAMUX_SIDR </name>
//    <r> 
//    <i> [Bits 31..0] RO (@ 0x40020BFC) DMAMUX size identification  register </i>
//    <loc> ( (unsigned int)((DMAMUX_DMAMUX_SIDR >> 0) & 0xFFFFFFFF) ) </loc>
//    <item> SFDITEM_FIELD__DMAMUX_DMAMUX_SIDR_SID </item>
//  </rtree>
//  


// -----------------------  Register Item Address: DMAMUX_DMAMUX_IPIDR  ---------------------------
// SVD Line: 6218

unsigned int DMAMUX_DMAMUX_IPIDR __AT (0x40020BF8);



// ---------------------------  Field Item: DMAMUX_DMAMUX_IPIDR_ID  -------------------------------
// SVD Line: 6228

//  <item> SFDITEM_FIELD__DMAMUX_DMAMUX_IPIDR_ID
//    <name> ID </name>
//    <r> 
//    <i> [Bits 31..0] RO (@ 0x40020BF8) IP identification </i>
//    <edit> 
//      <loc> ( (unsigned int)((DMAMUX_DMAMUX_IPIDR >> 0) & 0xFFFFFFFF) ) </loc>
//    </edit>
//  </item>
//  


// ---------------------------  Register RTree: DMAMUX_DMAMUX_IPIDR  ------------------------------
// SVD Line: 6218

//  <rtree> SFDITEM_REG__DMAMUX_DMAMUX_IPIDR
//    <name> DMAMUX_IPIDR </name>
//    <r> 
//    <i> [Bits 31..0] RO (@ 0x40020BF8) DMAMUX IP identification  register </i>
//    <loc> ( (unsigned int)((DMAMUX_DMAMUX_IPIDR >> 0) & 0xFFFFFFFF) ) </loc>
//    <item> SFDITEM_FIELD__DMAMUX_DMAMUX_IPIDR_ID </item>
//  </rtree>
//  


// ------------------------  Register Item Address: DMAMUX_DMAMUX_VERR  ---------------------------
// SVD Line: 6236

unsigned int DMAMUX_DMAMUX_VERR __AT (0x40020BF4);



// --------------------------  Field Item: DMAMUX_DMAMUX_VERR_MINREV  -----------------------------
// SVD Line: 6245

//  <item> SFDITEM_FIELD__DMAMUX_DMAMUX_VERR_MINREV
//    <name> MINREV </name>
//    <r> 
//    <i> [Bits 3..0] RO (@ 0x40020BF4) Minor IP revision </i>
//    <edit> 
//      <loc> ( (unsigned char)((DMAMUX_DMAMUX_VERR >> 0) & 0xF) ) </loc>
//    </edit>
//  </item>
//  


// --------------------------  Field Item: DMAMUX_DMAMUX_VERR_MAJREV  -----------------------------
// SVD Line: 6251

//  <item> SFDITEM_FIELD__DMAMUX_DMAMUX_VERR_MAJREV
//    <name> MAJREV </name>
//    <r> 
//    <i> [Bits 7..4] RO (@ 0x40020BF4) Major IP revision </i>
//    <edit> 
//      <loc> ( (unsigned char)((DMAMUX_DMAMUX_VERR >> 4) & 0xF) ) </loc>
//    </edit>
//  </item>
//  


// ---------------------------  Register RTree: DMAMUX_DMAMUX_VERR  -------------------------------
// SVD Line: 6236

//  <rtree> SFDITEM_REG__DMAMUX_DMAMUX_VERR
//    <name> DMAMUX_VERR </name>
//    <r> 
//    <i> [Bits 31..0] RO (@ 0x40020BF4) DMAMUX version register </i>
//    <loc> ( (unsigned int)((DMAMUX_DMAMUX_VERR >> 0) & 0xFFFFFFFF) ) </loc>
//    <item> SFDITEM_FIELD__DMAMUX_DMAMUX_VERR_MINREV </item>
//    <item> SFDITEM_FIELD__DMAMUX_DMAMUX_VERR_MAJREV </item>
//  </rtree>
//  


// ----------------------  Register Item Address: DMAMUX_DMAMUX_HWCFGR1  --------------------------
// SVD Line: 6259

unsigned int DMAMUX_DMAMUX_HWCFGR1 __AT (0x40020BF0);



// --------------------  Field Item: DMAMUX_DMAMUX_HWCFGR1_NUM_DMA_STREAMS  -----------------------
// SVD Line: 6269

//  <item> SFDITEM_FIELD__DMAMUX_DMAMUX_HWCFGR1_NUM_DMA_STREAMS
//    <name> NUM_DMA_STREAMS </name>
//    <r> 
//    <i> [Bits 7..0] RO (@ 0x40020BF0) number of DMA request line multiplexer  (output) channels </i>
//    <edit> 
//      <loc> ( (unsigned char)((DMAMUX_DMAMUX_HWCFGR1 >> 0) & 0xFF) ) </loc>
//    </edit>
//  </item>
//  


// ------------------  Field Item: DMAMUX_DMAMUX_HWCFGR1_NUM_DMA_PERIPH_REQ  ----------------------
// SVD Line: 6276

//  <item> SFDITEM_FIELD__DMAMUX_DMAMUX_HWCFGR1_NUM_DMA_PERIPH_REQ
//    <name> NUM_DMA_PERIPH_REQ </name>
//    <r> 
//    <i> [Bits 15..8] RO (@ 0x40020BF0) number of DMA request lines from  peripherals </i>
//    <edit> 
//      <loc> ( (unsigned char)((DMAMUX_DMAMUX_HWCFGR1 >> 8) & 0xFF) ) </loc>
//    </edit>
//  </item>
//  


// ---------------------  Field Item: DMAMUX_DMAMUX_HWCFGR1_NUM_DMA_TRIG  -------------------------
// SVD Line: 6283

//  <item> SFDITEM_FIELD__DMAMUX_DMAMUX_HWCFGR1_NUM_DMA_TRIG
//    <name> NUM_DMA_TRIG </name>
//    <r> 
//    <i> [Bits 23..16] RO (@ 0x40020BF0) number of synchronization  inputs </i>
//    <edit> 
//      <loc> ( (unsigned char)((DMAMUX_DMAMUX_HWCFGR1 >> 16) & 0xFF) ) </loc>
//    </edit>
//  </item>
//  


// --------------------  Field Item: DMAMUX_DMAMUX_HWCFGR1_NUM_DMA_REQGEN  ------------------------
// SVD Line: 6290

//  <item> SFDITEM_FIELD__DMAMUX_DMAMUX_HWCFGR1_NUM_DMA_REQGEN
//    <name> NUM_DMA_REQGEN </name>
//    <r> 
//    <i> [Bits 31..24] RO (@ 0x40020BF0) number of DMA request generator  channels </i>
//    <edit> 
//      <loc> ( (unsigned char)((DMAMUX_DMAMUX_HWCFGR1 >> 24) & 0xFF) ) </loc>
//    </edit>
//  </item>
//  


// --------------------------  Register RTree: DMAMUX_DMAMUX_HWCFGR1  -----------------------------
// SVD Line: 6259

//  <rtree> SFDITEM_REG__DMAMUX_DMAMUX_HWCFGR1
//    <name> DMAMUX_HWCFGR1 </name>
//    <r> 
//    <i> [Bits 31..0] RO (@ 0x40020BF0) DMAMUX hardware configuration 1  register </i>
//    <loc> ( (unsigned int)((DMAMUX_DMAMUX_HWCFGR1 >> 0) & 0xFFFFFFFF) ) </loc>
//    <item> SFDITEM_FIELD__DMAMUX_DMAMUX_HWCFGR1_NUM_DMA_STREAMS </item>
//    <item> SFDITEM_FIELD__DMAMUX_DMAMUX_HWCFGR1_NUM_DMA_PERIPH_REQ </item>
//    <item> SFDITEM_FIELD__DMAMUX_DMAMUX_HWCFGR1_NUM_DMA_TRIG </item>
//    <item> SFDITEM_FIELD__DMAMUX_DMAMUX_HWCFGR1_NUM_DMA_REQGEN </item>
//  </rtree>
//  


// ----------------------  Register Item Address: DMAMUX_DMAMUX_HWCFGR2  --------------------------
// SVD Line: 6299

unsigned int DMAMUX_DMAMUX_HWCFGR2 __AT (0x40020BEC);



// --------------------  Field Item: DMAMUX_DMAMUX_HWCFGR2_NUM_DMA_EXT_REQ  -----------------------
// SVD Line: 6309

//  <item> SFDITEM_FIELD__DMAMUX_DMAMUX_HWCFGR2_NUM_DMA_EXT_REQ
//    <name> NUM_DMA_EXT_REQ </name>
//    <r> 
//    <i> [Bits 7..0] RO (@ 0x40020BEC) Number of DMA request trigger  inputs </i>
//    <edit> 
//      <loc> ( (unsigned char)((DMAMUX_DMAMUX_HWCFGR2 >> 0) & 0xFF) ) </loc>
//    </edit>
//  </item>
//  


// --------------------------  Register RTree: DMAMUX_DMAMUX_HWCFGR2  -----------------------------
// SVD Line: 6299

//  <rtree> SFDITEM_REG__DMAMUX_DMAMUX_HWCFGR2
//    <name> DMAMUX_HWCFGR2 </name>
//    <r> 
//    <i> [Bits 31..0] RO (@ 0x40020BEC) DMAMUX hardware configuration 2  register </i>
//    <loc> ( (unsigned int)((DMAMUX_DMAMUX_HWCFGR2 >> 0) & 0xFFFFFFFF) ) </loc>
//    <item> SFDITEM_FIELD__DMAMUX_DMAMUX_HWCFGR2_NUM_DMA_EXT_REQ </item>
//  </rtree>
//  


// ---------------------------------  Peripheral View: DMAMUX  ------------------------------------
// SVD Line: 5418

//  <view> DMAMUX
//    <name> DMAMUX </name>
//    <item> SFDITEM_REG__DMAMUX_DMAMUX_C0CR </item>
//    <item> SFDITEM_REG__DMAMUX_DMAMUX_C1CR </item>
//    <item> SFDITEM_REG__DMAMUX_DMAMUX_C2CR </item>
//    <item> SFDITEM_REG__DMAMUX_DMAMUX_C3CR </item>
//    <item> SFDITEM_REG__DMAMUX_DMAMUX_C4CR </item>
//    <item> SFDITEM_REG__DMAMUX_DMAMUX_C5CR </item>
//    <item> SFDITEM_REG__DMAMUX_DMAMUX_C6CR </item>
//    <item> SFDITEM_REG__DMAMUX_DMAMUX_RG0CR </item>
//    <item> SFDITEM_REG__DMAMUX_DMAMUX_RG1CR </item>
//    <item> SFDITEM_REG__DMAMUX_DMAMUX_RG2CR </item>
//    <item> SFDITEM_REG__DMAMUX_DMAMUX_RG3CR </item>
//    <item> SFDITEM_REG__DMAMUX_DMAMUX_RGSR </item>
//    <item> SFDITEM_REG__DMAMUX_DMAMUX_RGCFR </item>
//    <item> SFDITEM_REG__DMAMUX_DMAMUX_CSR </item>
//    <item> SFDITEM_REG__DMAMUX_DMAMUX_CFR </item>
//    <item> SFDITEM_REG__DMAMUX_DMAMUX_SIDR </item>
//    <item> SFDITEM_REG__DMAMUX_DMAMUX_IPIDR </item>
//    <item> SFDITEM_REG__DMAMUX_DMAMUX_VERR </item>
//    <item> SFDITEM_REG__DMAMUX_DMAMUX_HWCFGR1 </item>
//    <item> SFDITEM_REG__DMAMUX_DMAMUX_HWCFGR2 </item>
//  </view>
//  


// ---------------------------  Register Item Address: GPIOA_MODER  -------------------------------
// SVD Line: 6331

unsigned int GPIOA_MODER __AT (0x50000000);



// -----------------------------  Field Item: GPIOA_MODER_MODER15  --------------------------------
// SVD Line: 6340

//  <item> SFDITEM_FIELD__GPIOA_MODER_MODER15
//    <name> MODER15 </name>
//    <rw> 
//    <i> [Bits 31..30] RW (@ 0x50000000) Port x configuration bits (y =  0..15) </i>
//    <edit> 
//      <loc> ( (unsigned char)((GPIOA_MODER >> 30) & 0x3), ((GPIOA_MODER = (GPIOA_MODER & ~(0x3UL << 30 )) | ((unsigned long)(Gui_u8:GuiVal & 0x3) << 30 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -----------------------------  Field Item: GPIOA_MODER_MODER14  --------------------------------
// SVD Line: 6347

//  <item> SFDITEM_FIELD__GPIOA_MODER_MODER14
//    <name> MODER14 </name>
//    <rw> 
//    <i> [Bits 29..28] RW (@ 0x50000000) Port x configuration bits (y =  0..15) </i>
//    <edit> 
//      <loc> ( (unsigned char)((GPIOA_MODER >> 28) & 0x3), ((GPIOA_MODER = (GPIOA_MODER & ~(0x3UL << 28 )) | ((unsigned long)(Gui_u8:GuiVal & 0x3) << 28 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -----------------------------  Field Item: GPIOA_MODER_MODER13  --------------------------------
// SVD Line: 6354

//  <item> SFDITEM_FIELD__GPIOA_MODER_MODER13
//    <name> MODER13 </name>
//    <rw> 
//    <i> [Bits 27..26] RW (@ 0x50000000) Port x configuration bits (y =  0..15) </i>
//    <edit> 
//      <loc> ( (unsigned char)((GPIOA_MODER >> 26) & 0x3), ((GPIOA_MODER = (GPIOA_MODER & ~(0x3UL << 26 )) | ((unsigned long)(Gui_u8:GuiVal & 0x3) << 26 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -----------------------------  Field Item: GPIOA_MODER_MODER12  --------------------------------
// SVD Line: 6361

//  <item> SFDITEM_FIELD__GPIOA_MODER_MODER12
//    <name> MODER12 </name>
//    <rw> 
//    <i> [Bits 25..24] RW (@ 0x50000000) Port x configuration bits (y =  0..15) </i>
//    <edit> 
//      <loc> ( (unsigned char)((GPIOA_MODER >> 24) & 0x3), ((GPIOA_MODER = (GPIOA_MODER & ~(0x3UL << 24 )) | ((unsigned long)(Gui_u8:GuiVal & 0x3) << 24 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -----------------------------  Field Item: GPIOA_MODER_MODER11  --------------------------------
// SVD Line: 6368

//  <item> SFDITEM_FIELD__GPIOA_MODER_MODER11
//    <name> MODER11 </name>
//    <rw> 
//    <i> [Bits 23..22] RW (@ 0x50000000) Port x configuration bits (y =  0..15) </i>
//    <edit> 
//      <loc> ( (unsigned char)((GPIOA_MODER >> 22) & 0x3), ((GPIOA_MODER = (GPIOA_MODER & ~(0x3UL << 22 )) | ((unsigned long)(Gui_u8:GuiVal & 0x3) << 22 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -----------------------------  Field Item: GPIOA_MODER_MODER10  --------------------------------
// SVD Line: 6375

//  <item> SFDITEM_FIELD__GPIOA_MODER_MODER10
//    <name> MODER10 </name>
//    <rw> 
//    <i> [Bits 21..20] RW (@ 0x50000000) Port x configuration bits (y =  0..15) </i>
//    <edit> 
//      <loc> ( (unsigned char)((GPIOA_MODER >> 20) & 0x3), ((GPIOA_MODER = (GPIOA_MODER & ~(0x3UL << 20 )) | ((unsigned long)(Gui_u8:GuiVal & 0x3) << 20 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -----------------------------  Field Item: GPIOA_MODER_MODER9  ---------------------------------
// SVD Line: 6382

//  <item> SFDITEM_FIELD__GPIOA_MODER_MODER9
//    <name> MODER9 </name>
//    <rw> 
//    <i> [Bits 19..18] RW (@ 0x50000000) Port x configuration bits (y =  0..15) </i>
//    <edit> 
//      <loc> ( (unsigned char)((GPIOA_MODER >> 18) & 0x3), ((GPIOA_MODER = (GPIOA_MODER & ~(0x3UL << 18 )) | ((unsigned long)(Gui_u8:GuiVal & 0x3) << 18 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -----------------------------  Field Item: GPIOA_MODER_MODER8  ---------------------------------
// SVD Line: 6389

//  <item> SFDITEM_FIELD__GPIOA_MODER_MODER8
//    <name> MODER8 </name>
//    <rw> 
//    <i> [Bits 17..16] RW (@ 0x50000000) Port x configuration bits (y =  0..15) </i>
//    <edit> 
//      <loc> ( (unsigned char)((GPIOA_MODER >> 16) & 0x3), ((GPIOA_MODER = (GPIOA_MODER & ~(0x3UL << 16 )) | ((unsigned long)(Gui_u8:GuiVal & 0x3) << 16 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -----------------------------  Field Item: GPIOA_MODER_MODER7  ---------------------------------
// SVD Line: 6396

//  <item> SFDITEM_FIELD__GPIOA_MODER_MODER7
//    <name> MODER7 </name>
//    <rw> 
//    <i> [Bits 15..14] RW (@ 0x50000000) Port x configuration bits (y =  0..15) </i>
//    <edit> 
//      <loc> ( (unsigned char)((GPIOA_MODER >> 14) & 0x3), ((GPIOA_MODER = (GPIOA_MODER & ~(0x3UL << 14 )) | ((unsigned long)(Gui_u8:GuiVal & 0x3) << 14 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -----------------------------  Field Item: GPIOA_MODER_MODER6  ---------------------------------
// SVD Line: 6403

//  <item> SFDITEM_FIELD__GPIOA_MODER_MODER6
//    <name> MODER6 </name>
//    <rw> 
//    <i> [Bits 13..12] RW (@ 0x50000000) Port x configuration bits (y =  0..15) </i>
//    <edit> 
//      <loc> ( (unsigned char)((GPIOA_MODER >> 12) & 0x3), ((GPIOA_MODER = (GPIOA_MODER & ~(0x3UL << 12 )) | ((unsigned long)(Gui_u8:GuiVal & 0x3) << 12 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -----------------------------  Field Item: GPIOA_MODER_MODER5  ---------------------------------
// SVD Line: 6410

//  <item> SFDITEM_FIELD__GPIOA_MODER_MODER5
//    <name> MODER5 </name>
//    <rw> 
//    <i> [Bits 11..10] RW (@ 0x50000000) Port x configuration bits (y =  0..15) </i>
//    <edit> 
//      <loc> ( (unsigned char)((GPIOA_MODER >> 10) & 0x3), ((GPIOA_MODER = (GPIOA_MODER & ~(0x3UL << 10 )) | ((unsigned long)(Gui_u8:GuiVal & 0x3) << 10 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -----------------------------  Field Item: GPIOA_MODER_MODER4  ---------------------------------
// SVD Line: 6417

//  <item> SFDITEM_FIELD__GPIOA_MODER_MODER4
//    <name> MODER4 </name>
//    <rw> 
//    <i> [Bits 9..8] RW (@ 0x50000000) Port x configuration bits (y =  0..15) </i>
//    <edit> 
//      <loc> ( (unsigned char)((GPIOA_MODER >> 8) & 0x3), ((GPIOA_MODER = (GPIOA_MODER & ~(0x3UL << 8 )) | ((unsigned long)(Gui_u8:GuiVal & 0x3) << 8 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -----------------------------  Field Item: GPIOA_MODER_MODER3  ---------------------------------
// SVD Line: 6424

//  <item> SFDITEM_FIELD__GPIOA_MODER_MODER3
//    <name> MODER3 </name>
//    <rw> 
//    <i> [Bits 7..6] RW (@ 0x50000000) Port x configuration bits (y =  0..15) </i>
//    <edit> 
//      <loc> ( (unsigned char)((GPIOA_MODER >> 6) & 0x3), ((GPIOA_MODER = (GPIOA_MODER & ~(0x3UL << 6 )) | ((unsigned long)(Gui_u8:GuiVal & 0x3) << 6 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -----------------------------  Field Item: GPIOA_MODER_MODER2  ---------------------------------
// SVD Line: 6431

//  <item> SFDITEM_FIELD__GPIOA_MODER_MODER2
//    <name> MODER2 </name>
//    <rw> 
//    <i> [Bits 5..4] RW (@ 0x50000000) Port x configuration bits (y =  0..15) </i>
//    <edit> 
//      <loc> ( (unsigned char)((GPIOA_MODER >> 4) & 0x3), ((GPIOA_MODER = (GPIOA_MODER & ~(0x3UL << 4 )) | ((unsigned long)(Gui_u8:GuiVal & 0x3) << 4 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -----------------------------  Field Item: GPIOA_MODER_MODER1  ---------------------------------
// SVD Line: 6438

//  <item> SFDITEM_FIELD__GPIOA_MODER_MODER1
//    <name> MODER1 </name>
//    <rw> 
//    <i> [Bits 3..2] RW (@ 0x50000000) Port x configuration bits (y =  0..15) </i>
//    <edit> 
//      <loc> ( (unsigned char)((GPIOA_MODER >> 2) & 0x3), ((GPIOA_MODER = (GPIOA_MODER & ~(0x3UL << 2 )) | ((unsigned long)(Gui_u8:GuiVal & 0x3) << 2 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -----------------------------  Field Item: GPIOA_MODER_MODER0  ---------------------------------
// SVD Line: 6445

//  <item> SFDITEM_FIELD__GPIOA_MODER_MODER0
//    <name> MODER0 </name>
//    <rw> 
//    <i> [Bits 1..0] RW (@ 0x50000000) Port x configuration bits (y =  0..15) </i>
//    <edit> 
//      <loc> ( (unsigned char)((GPIOA_MODER >> 0) & 0x3), ((GPIOA_MODER = (GPIOA_MODER & ~(0x3UL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0x3) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -------------------------------  Register RTree: GPIOA_MODER  ----------------------------------
// SVD Line: 6331

//  <rtree> SFDITEM_REG__GPIOA_MODER
//    <name> MODER </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x50000000) GPIO port mode register </i>
//    <loc> ( (unsigned int)((GPIOA_MODER >> 0) & 0xFFFFFFFF), ((GPIOA_MODER = (GPIOA_MODER & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__GPIOA_MODER_MODER15 </item>
//    <item> SFDITEM_FIELD__GPIOA_MODER_MODER14 </item>
//    <item> SFDITEM_FIELD__GPIOA_MODER_MODER13 </item>
//    <item> SFDITEM_FIELD__GPIOA_MODER_MODER12 </item>
//    <item> SFDITEM_FIELD__GPIOA_MODER_MODER11 </item>
//    <item> SFDITEM_FIELD__GPIOA_MODER_MODER10 </item>
//    <item> SFDITEM_FIELD__GPIOA_MODER_MODER9 </item>
//    <item> SFDITEM_FIELD__GPIOA_MODER_MODER8 </item>
//    <item> SFDITEM_FIELD__GPIOA_MODER_MODER7 </item>
//    <item> SFDITEM_FIELD__GPIOA_MODER_MODER6 </item>
//    <item> SFDITEM_FIELD__GPIOA_MODER_MODER5 </item>
//    <item> SFDITEM_FIELD__GPIOA_MODER_MODER4 </item>
//    <item> SFDITEM_FIELD__GPIOA_MODER_MODER3 </item>
//    <item> SFDITEM_FIELD__GPIOA_MODER_MODER2 </item>
//    <item> SFDITEM_FIELD__GPIOA_MODER_MODER1 </item>
//    <item> SFDITEM_FIELD__GPIOA_MODER_MODER0 </item>
//  </rtree>
//  


// ---------------------------  Register Item Address: GPIOA_OTYPER  ------------------------------
// SVD Line: 6454

unsigned int GPIOA_OTYPER __AT (0x50000004);



// ------------------------------  Field Item: GPIOA_OTYPER_OT15  ---------------------------------
// SVD Line: 6463

//  <item> SFDITEM_FIELD__GPIOA_OTYPER_OT15
//    <name> OT15 </name>
//    <rw> 
//    <i> [Bit 15] RW (@ 0x50000004) Port x configuration bits (y =  0..15) </i>
//    <check> 
//      <loc> ( (unsigned int) GPIOA_OTYPER ) </loc>
//      <o.15..15> OT15
//    </check>
//  </item>
//  


// ------------------------------  Field Item: GPIOA_OTYPER_OT14  ---------------------------------
// SVD Line: 6470

//  <item> SFDITEM_FIELD__GPIOA_OTYPER_OT14
//    <name> OT14 </name>
//    <rw> 
//    <i> [Bit 14] RW (@ 0x50000004) Port x configuration bits (y =  0..15) </i>
//    <check> 
//      <loc> ( (unsigned int) GPIOA_OTYPER ) </loc>
//      <o.14..14> OT14
//    </check>
//  </item>
//  


// ------------------------------  Field Item: GPIOA_OTYPER_OT13  ---------------------------------
// SVD Line: 6477

//  <item> SFDITEM_FIELD__GPIOA_OTYPER_OT13
//    <name> OT13 </name>
//    <rw> 
//    <i> [Bit 13] RW (@ 0x50000004) Port x configuration bits (y =  0..15) </i>
//    <check> 
//      <loc> ( (unsigned int) GPIOA_OTYPER ) </loc>
//      <o.13..13> OT13
//    </check>
//  </item>
//  


// ------------------------------  Field Item: GPIOA_OTYPER_OT12  ---------------------------------
// SVD Line: 6484

//  <item> SFDITEM_FIELD__GPIOA_OTYPER_OT12
//    <name> OT12 </name>
//    <rw> 
//    <i> [Bit 12] RW (@ 0x50000004) Port x configuration bits (y =  0..15) </i>
//    <check> 
//      <loc> ( (unsigned int) GPIOA_OTYPER ) </loc>
//      <o.12..12> OT12
//    </check>
//  </item>
//  


// ------------------------------  Field Item: GPIOA_OTYPER_OT11  ---------------------------------
// SVD Line: 6491

//  <item> SFDITEM_FIELD__GPIOA_OTYPER_OT11
//    <name> OT11 </name>
//    <rw> 
//    <i> [Bit 11] RW (@ 0x50000004) Port x configuration bits (y =  0..15) </i>
//    <check> 
//      <loc> ( (unsigned int) GPIOA_OTYPER ) </loc>
//      <o.11..11> OT11
//    </check>
//  </item>
//  


// ------------------------------  Field Item: GPIOA_OTYPER_OT10  ---------------------------------
// SVD Line: 6498

//  <item> SFDITEM_FIELD__GPIOA_OTYPER_OT10
//    <name> OT10 </name>
//    <rw> 
//    <i> [Bit 10] RW (@ 0x50000004) Port x configuration bits (y =  0..15) </i>
//    <check> 
//      <loc> ( (unsigned int) GPIOA_OTYPER ) </loc>
//      <o.10..10> OT10
//    </check>
//  </item>
//  


// ------------------------------  Field Item: GPIOA_OTYPER_OT9  ----------------------------------
// SVD Line: 6505

//  <item> SFDITEM_FIELD__GPIOA_OTYPER_OT9
//    <name> OT9 </name>
//    <rw> 
//    <i> [Bit 9] RW (@ 0x50000004) Port x configuration bits (y =  0..15) </i>
//    <check> 
//      <loc> ( (unsigned int) GPIOA_OTYPER ) </loc>
//      <o.9..9> OT9
//    </check>
//  </item>
//  


// ------------------------------  Field Item: GPIOA_OTYPER_OT8  ----------------------------------
// SVD Line: 6512

//  <item> SFDITEM_FIELD__GPIOA_OTYPER_OT8
//    <name> OT8 </name>
//    <rw> 
//    <i> [Bit 8] RW (@ 0x50000004) Port x configuration bits (y =  0..15) </i>
//    <check> 
//      <loc> ( (unsigned int) GPIOA_OTYPER ) </loc>
//      <o.8..8> OT8
//    </check>
//  </item>
//  


// ------------------------------  Field Item: GPIOA_OTYPER_OT7  ----------------------------------
// SVD Line: 6519

//  <item> SFDITEM_FIELD__GPIOA_OTYPER_OT7
//    <name> OT7 </name>
//    <rw> 
//    <i> [Bit 7] RW (@ 0x50000004) Port x configuration bits (y =  0..15) </i>
//    <check> 
//      <loc> ( (unsigned int) GPIOA_OTYPER ) </loc>
//      <o.7..7> OT7
//    </check>
//  </item>
//  


// ------------------------------  Field Item: GPIOA_OTYPER_OT6  ----------------------------------
// SVD Line: 6526

//  <item> SFDITEM_FIELD__GPIOA_OTYPER_OT6
//    <name> OT6 </name>
//    <rw> 
//    <i> [Bit 6] RW (@ 0x50000004) Port x configuration bits (y =  0..15) </i>
//    <check> 
//      <loc> ( (unsigned int) GPIOA_OTYPER ) </loc>
//      <o.6..6> OT6
//    </check>
//  </item>
//  


// ------------------------------  Field Item: GPIOA_OTYPER_OT5  ----------------------------------
// SVD Line: 6533

//  <item> SFDITEM_FIELD__GPIOA_OTYPER_OT5
//    <name> OT5 </name>
//    <rw> 
//    <i> [Bit 5] RW (@ 0x50000004) Port x configuration bits (y =  0..15) </i>
//    <check> 
//      <loc> ( (unsigned int) GPIOA_OTYPER ) </loc>
//      <o.5..5> OT5
//    </check>
//  </item>
//  


// ------------------------------  Field Item: GPIOA_OTYPER_OT4  ----------------------------------
// SVD Line: 6540

//  <item> SFDITEM_FIELD__GPIOA_OTYPER_OT4
//    <name> OT4 </name>
//    <rw> 
//    <i> [Bit 4] RW (@ 0x50000004) Port x configuration bits (y =  0..15) </i>
//    <check> 
//      <loc> ( (unsigned int) GPIOA_OTYPER ) </loc>
//      <o.4..4> OT4
//    </check>
//  </item>
//  


// ------------------------------  Field Item: GPIOA_OTYPER_OT3  ----------------------------------
// SVD Line: 6547

//  <item> SFDITEM_FIELD__GPIOA_OTYPER_OT3
//    <name> OT3 </name>
//    <rw> 
//    <i> [Bit 3] RW (@ 0x50000004) Port x configuration bits (y =  0..15) </i>
//    <check> 
//      <loc> ( (unsigned int) GPIOA_OTYPER ) </loc>
//      <o.3..3> OT3
//    </check>
//  </item>
//  


// ------------------------------  Field Item: GPIOA_OTYPER_OT2  ----------------------------------
// SVD Line: 6554

//  <item> SFDITEM_FIELD__GPIOA_OTYPER_OT2
//    <name> OT2 </name>
//    <rw> 
//    <i> [Bit 2] RW (@ 0x50000004) Port x configuration bits (y =  0..15) </i>
//    <check> 
//      <loc> ( (unsigned int) GPIOA_OTYPER ) </loc>
//      <o.2..2> OT2
//    </check>
//  </item>
//  


// ------------------------------  Field Item: GPIOA_OTYPER_OT1  ----------------------------------
// SVD Line: 6561

//  <item> SFDITEM_FIELD__GPIOA_OTYPER_OT1
//    <name> OT1 </name>
//    <rw> 
//    <i> [Bit 1] RW (@ 0x50000004) Port x configuration bits (y =  0..15) </i>
//    <check> 
//      <loc> ( (unsigned int) GPIOA_OTYPER ) </loc>
//      <o.1..1> OT1
//    </check>
//  </item>
//  


// ------------------------------  Field Item: GPIOA_OTYPER_OT0  ----------------------------------
// SVD Line: 6568

//  <item> SFDITEM_FIELD__GPIOA_OTYPER_OT0
//    <name> OT0 </name>
//    <rw> 
//    <i> [Bit 0] RW (@ 0x50000004) Port x configuration bits (y =  0..15) </i>
//    <check> 
//      <loc> ( (unsigned int) GPIOA_OTYPER ) </loc>
//      <o.0..0> OT0
//    </check>
//  </item>
//  


// ------------------------------  Register RTree: GPIOA_OTYPER  ----------------------------------
// SVD Line: 6454

//  <rtree> SFDITEM_REG__GPIOA_OTYPER
//    <name> OTYPER </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x50000004) GPIO port output type register </i>
//    <loc> ( (unsigned int)((GPIOA_OTYPER >> 0) & 0xFFFFFFFF), ((GPIOA_OTYPER = (GPIOA_OTYPER & ~(0xFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__GPIOA_OTYPER_OT15 </item>
//    <item> SFDITEM_FIELD__GPIOA_OTYPER_OT14 </item>
//    <item> SFDITEM_FIELD__GPIOA_OTYPER_OT13 </item>
//    <item> SFDITEM_FIELD__GPIOA_OTYPER_OT12 </item>
//    <item> SFDITEM_FIELD__GPIOA_OTYPER_OT11 </item>
//    <item> SFDITEM_FIELD__GPIOA_OTYPER_OT10 </item>
//    <item> SFDITEM_FIELD__GPIOA_OTYPER_OT9 </item>
//    <item> SFDITEM_FIELD__GPIOA_OTYPER_OT8 </item>
//    <item> SFDITEM_FIELD__GPIOA_OTYPER_OT7 </item>
//    <item> SFDITEM_FIELD__GPIOA_OTYPER_OT6 </item>
//    <item> SFDITEM_FIELD__GPIOA_OTYPER_OT5 </item>
//    <item> SFDITEM_FIELD__GPIOA_OTYPER_OT4 </item>
//    <item> SFDITEM_FIELD__GPIOA_OTYPER_OT3 </item>
//    <item> SFDITEM_FIELD__GPIOA_OTYPER_OT2 </item>
//    <item> SFDITEM_FIELD__GPIOA_OTYPER_OT1 </item>
//    <item> SFDITEM_FIELD__GPIOA_OTYPER_OT0 </item>
//  </rtree>
//  


// --------------------------  Register Item Address: GPIOA_OSPEEDR  ------------------------------
// SVD Line: 6577

unsigned int GPIOA_OSPEEDR __AT (0x50000008);



// ---------------------------  Field Item: GPIOA_OSPEEDR_OSPEEDR15  ------------------------------
// SVD Line: 6587

//  <item> SFDITEM_FIELD__GPIOA_OSPEEDR_OSPEEDR15
//    <name> OSPEEDR15 </name>
//    <rw> 
//    <i> [Bits 31..30] RW (@ 0x50000008) Port x configuration bits (y =  0..15) </i>
//    <edit> 
//      <loc> ( (unsigned char)((GPIOA_OSPEEDR >> 30) & 0x3), ((GPIOA_OSPEEDR = (GPIOA_OSPEEDR & ~(0x3UL << 30 )) | ((unsigned long)(Gui_u8:GuiVal & 0x3) << 30 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ---------------------------  Field Item: GPIOA_OSPEEDR_OSPEEDR14  ------------------------------
// SVD Line: 6594

//  <item> SFDITEM_FIELD__GPIOA_OSPEEDR_OSPEEDR14
//    <name> OSPEEDR14 </name>
//    <rw> 
//    <i> [Bits 29..28] RW (@ 0x50000008) Port x configuration bits (y =  0..15) </i>
//    <edit> 
//      <loc> ( (unsigned char)((GPIOA_OSPEEDR >> 28) & 0x3), ((GPIOA_OSPEEDR = (GPIOA_OSPEEDR & ~(0x3UL << 28 )) | ((unsigned long)(Gui_u8:GuiVal & 0x3) << 28 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ---------------------------  Field Item: GPIOA_OSPEEDR_OSPEEDR13  ------------------------------
// SVD Line: 6601

//  <item> SFDITEM_FIELD__GPIOA_OSPEEDR_OSPEEDR13
//    <name> OSPEEDR13 </name>
//    <rw> 
//    <i> [Bits 27..26] RW (@ 0x50000008) Port x configuration bits (y =  0..15) </i>
//    <edit> 
//      <loc> ( (unsigned char)((GPIOA_OSPEEDR >> 26) & 0x3), ((GPIOA_OSPEEDR = (GPIOA_OSPEEDR & ~(0x3UL << 26 )) | ((unsigned long)(Gui_u8:GuiVal & 0x3) << 26 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ---------------------------  Field Item: GPIOA_OSPEEDR_OSPEEDR12  ------------------------------
// SVD Line: 6608

//  <item> SFDITEM_FIELD__GPIOA_OSPEEDR_OSPEEDR12
//    <name> OSPEEDR12 </name>
//    <rw> 
//    <i> [Bits 25..24] RW (@ 0x50000008) Port x configuration bits (y =  0..15) </i>
//    <edit> 
//      <loc> ( (unsigned char)((GPIOA_OSPEEDR >> 24) & 0x3), ((GPIOA_OSPEEDR = (GPIOA_OSPEEDR & ~(0x3UL << 24 )) | ((unsigned long)(Gui_u8:GuiVal & 0x3) << 24 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ---------------------------  Field Item: GPIOA_OSPEEDR_OSPEEDR11  ------------------------------
// SVD Line: 6615

//  <item> SFDITEM_FIELD__GPIOA_OSPEEDR_OSPEEDR11
//    <name> OSPEEDR11 </name>
//    <rw> 
//    <i> [Bits 23..22] RW (@ 0x50000008) Port x configuration bits (y =  0..15) </i>
//    <edit> 
//      <loc> ( (unsigned char)((GPIOA_OSPEEDR >> 22) & 0x3), ((GPIOA_OSPEEDR = (GPIOA_OSPEEDR & ~(0x3UL << 22 )) | ((unsigned long)(Gui_u8:GuiVal & 0x3) << 22 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ---------------------------  Field Item: GPIOA_OSPEEDR_OSPEEDR10  ------------------------------
// SVD Line: 6622

//  <item> SFDITEM_FIELD__GPIOA_OSPEEDR_OSPEEDR10
//    <name> OSPEEDR10 </name>
//    <rw> 
//    <i> [Bits 21..20] RW (@ 0x50000008) Port x configuration bits (y =  0..15) </i>
//    <edit> 
//      <loc> ( (unsigned char)((GPIOA_OSPEEDR >> 20) & 0x3), ((GPIOA_OSPEEDR = (GPIOA_OSPEEDR & ~(0x3UL << 20 )) | ((unsigned long)(Gui_u8:GuiVal & 0x3) << 20 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ---------------------------  Field Item: GPIOA_OSPEEDR_OSPEEDR9  -------------------------------
// SVD Line: 6629

//  <item> SFDITEM_FIELD__GPIOA_OSPEEDR_OSPEEDR9
//    <name> OSPEEDR9 </name>
//    <rw> 
//    <i> [Bits 19..18] RW (@ 0x50000008) Port x configuration bits (y =  0..15) </i>
//    <edit> 
//      <loc> ( (unsigned char)((GPIOA_OSPEEDR >> 18) & 0x3), ((GPIOA_OSPEEDR = (GPIOA_OSPEEDR & ~(0x3UL << 18 )) | ((unsigned long)(Gui_u8:GuiVal & 0x3) << 18 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ---------------------------  Field Item: GPIOA_OSPEEDR_OSPEEDR8  -------------------------------
// SVD Line: 6636

//  <item> SFDITEM_FIELD__GPIOA_OSPEEDR_OSPEEDR8
//    <name> OSPEEDR8 </name>
//    <rw> 
//    <i> [Bits 17..16] RW (@ 0x50000008) Port x configuration bits (y =  0..15) </i>
//    <edit> 
//      <loc> ( (unsigned char)((GPIOA_OSPEEDR >> 16) & 0x3), ((GPIOA_OSPEEDR = (GPIOA_OSPEEDR & ~(0x3UL << 16 )) | ((unsigned long)(Gui_u8:GuiVal & 0x3) << 16 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ---------------------------  Field Item: GPIOA_OSPEEDR_OSPEEDR7  -------------------------------
// SVD Line: 6643

//  <item> SFDITEM_FIELD__GPIOA_OSPEEDR_OSPEEDR7
//    <name> OSPEEDR7 </name>
//    <rw> 
//    <i> [Bits 15..14] RW (@ 0x50000008) Port x configuration bits (y =  0..15) </i>
//    <edit> 
//      <loc> ( (unsigned char)((GPIOA_OSPEEDR >> 14) & 0x3), ((GPIOA_OSPEEDR = (GPIOA_OSPEEDR & ~(0x3UL << 14 )) | ((unsigned long)(Gui_u8:GuiVal & 0x3) << 14 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ---------------------------  Field Item: GPIOA_OSPEEDR_OSPEEDR6  -------------------------------
// SVD Line: 6650

//  <item> SFDITEM_FIELD__GPIOA_OSPEEDR_OSPEEDR6
//    <name> OSPEEDR6 </name>
//    <rw> 
//    <i> [Bits 13..12] RW (@ 0x50000008) Port x configuration bits (y =  0..15) </i>
//    <edit> 
//      <loc> ( (unsigned char)((GPIOA_OSPEEDR >> 12) & 0x3), ((GPIOA_OSPEEDR = (GPIOA_OSPEEDR & ~(0x3UL << 12 )) | ((unsigned long)(Gui_u8:GuiVal & 0x3) << 12 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ---------------------------  Field Item: GPIOA_OSPEEDR_OSPEEDR5  -------------------------------
// SVD Line: 6657

//  <item> SFDITEM_FIELD__GPIOA_OSPEEDR_OSPEEDR5
//    <name> OSPEEDR5 </name>
//    <rw> 
//    <i> [Bits 11..10] RW (@ 0x50000008) Port x configuration bits (y =  0..15) </i>
//    <edit> 
//      <loc> ( (unsigned char)((GPIOA_OSPEEDR >> 10) & 0x3), ((GPIOA_OSPEEDR = (GPIOA_OSPEEDR & ~(0x3UL << 10 )) | ((unsigned long)(Gui_u8:GuiVal & 0x3) << 10 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ---------------------------  Field Item: GPIOA_OSPEEDR_OSPEEDR4  -------------------------------
// SVD Line: 6664

//  <item> SFDITEM_FIELD__GPIOA_OSPEEDR_OSPEEDR4
//    <name> OSPEEDR4 </name>
//    <rw> 
//    <i> [Bits 9..8] RW (@ 0x50000008) Port x configuration bits (y =  0..15) </i>
//    <edit> 
//      <loc> ( (unsigned char)((GPIOA_OSPEEDR >> 8) & 0x3), ((GPIOA_OSPEEDR = (GPIOA_OSPEEDR & ~(0x3UL << 8 )) | ((unsigned long)(Gui_u8:GuiVal & 0x3) << 8 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ---------------------------  Field Item: GPIOA_OSPEEDR_OSPEEDR3  -------------------------------
// SVD Line: 6671

//  <item> SFDITEM_FIELD__GPIOA_OSPEEDR_OSPEEDR3
//    <name> OSPEEDR3 </name>
//    <rw> 
//    <i> [Bits 7..6] RW (@ 0x50000008) Port x configuration bits (y =  0..15) </i>
//    <edit> 
//      <loc> ( (unsigned char)((GPIOA_OSPEEDR >> 6) & 0x3), ((GPIOA_OSPEEDR = (GPIOA_OSPEEDR & ~(0x3UL << 6 )) | ((unsigned long)(Gui_u8:GuiVal & 0x3) << 6 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ---------------------------  Field Item: GPIOA_OSPEEDR_OSPEEDR2  -------------------------------
// SVD Line: 6678

//  <item> SFDITEM_FIELD__GPIOA_OSPEEDR_OSPEEDR2
//    <name> OSPEEDR2 </name>
//    <rw> 
//    <i> [Bits 5..4] RW (@ 0x50000008) Port x configuration bits (y =  0..15) </i>
//    <edit> 
//      <loc> ( (unsigned char)((GPIOA_OSPEEDR >> 4) & 0x3), ((GPIOA_OSPEEDR = (GPIOA_OSPEEDR & ~(0x3UL << 4 )) | ((unsigned long)(Gui_u8:GuiVal & 0x3) << 4 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ---------------------------  Field Item: GPIOA_OSPEEDR_OSPEEDR1  -------------------------------
// SVD Line: 6685

//  <item> SFDITEM_FIELD__GPIOA_OSPEEDR_OSPEEDR1
//    <name> OSPEEDR1 </name>
//    <rw> 
//    <i> [Bits 3..2] RW (@ 0x50000008) Port x configuration bits (y =  0..15) </i>
//    <edit> 
//      <loc> ( (unsigned char)((GPIOA_OSPEEDR >> 2) & 0x3), ((GPIOA_OSPEEDR = (GPIOA_OSPEEDR & ~(0x3UL << 2 )) | ((unsigned long)(Gui_u8:GuiVal & 0x3) << 2 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ---------------------------  Field Item: GPIOA_OSPEEDR_OSPEEDR0  -------------------------------
// SVD Line: 6692

//  <item> SFDITEM_FIELD__GPIOA_OSPEEDR_OSPEEDR0
//    <name> OSPEEDR0 </name>
//    <rw> 
//    <i> [Bits 1..0] RW (@ 0x50000008) Port x configuration bits (y =  0..15) </i>
//    <edit> 
//      <loc> ( (unsigned char)((GPIOA_OSPEEDR >> 0) & 0x3), ((GPIOA_OSPEEDR = (GPIOA_OSPEEDR & ~(0x3UL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0x3) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ------------------------------  Register RTree: GPIOA_OSPEEDR  ---------------------------------
// SVD Line: 6577

//  <rtree> SFDITEM_REG__GPIOA_OSPEEDR
//    <name> OSPEEDR </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x50000008) GPIO port output speed  register </i>
//    <loc> ( (unsigned int)((GPIOA_OSPEEDR >> 0) & 0xFFFFFFFF), ((GPIOA_OSPEEDR = (GPIOA_OSPEEDR & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__GPIOA_OSPEEDR_OSPEEDR15 </item>
//    <item> SFDITEM_FIELD__GPIOA_OSPEEDR_OSPEEDR14 </item>
//    <item> SFDITEM_FIELD__GPIOA_OSPEEDR_OSPEEDR13 </item>
//    <item> SFDITEM_FIELD__GPIOA_OSPEEDR_OSPEEDR12 </item>
//    <item> SFDITEM_FIELD__GPIOA_OSPEEDR_OSPEEDR11 </item>
//    <item> SFDITEM_FIELD__GPIOA_OSPEEDR_OSPEEDR10 </item>
//    <item> SFDITEM_FIELD__GPIOA_OSPEEDR_OSPEEDR9 </item>
//    <item> SFDITEM_FIELD__GPIOA_OSPEEDR_OSPEEDR8 </item>
//    <item> SFDITEM_FIELD__GPIOA_OSPEEDR_OSPEEDR7 </item>
//    <item> SFDITEM_FIELD__GPIOA_OSPEEDR_OSPEEDR6 </item>
//    <item> SFDITEM_FIELD__GPIOA_OSPEEDR_OSPEEDR5 </item>
//    <item> SFDITEM_FIELD__GPIOA_OSPEEDR_OSPEEDR4 </item>
//    <item> SFDITEM_FIELD__GPIOA_OSPEEDR_OSPEEDR3 </item>
//    <item> SFDITEM_FIELD__GPIOA_OSPEEDR_OSPEEDR2 </item>
//    <item> SFDITEM_FIELD__GPIOA_OSPEEDR_OSPEEDR1 </item>
//    <item> SFDITEM_FIELD__GPIOA_OSPEEDR_OSPEEDR0 </item>
//  </rtree>
//  


// ---------------------------  Register Item Address: GPIOA_PUPDR  -------------------------------
// SVD Line: 6701

unsigned int GPIOA_PUPDR __AT (0x5000000C);



// -----------------------------  Field Item: GPIOA_PUPDR_PUPDR15  --------------------------------
// SVD Line: 6711

//  <item> SFDITEM_FIELD__GPIOA_PUPDR_PUPDR15
//    <name> PUPDR15 </name>
//    <rw> 
//    <i> [Bits 31..30] RW (@ 0x5000000C) Port x configuration bits (y =  0..15) </i>
//    <edit> 
//      <loc> ( (unsigned char)((GPIOA_PUPDR >> 30) & 0x3), ((GPIOA_PUPDR = (GPIOA_PUPDR & ~(0x3UL << 30 )) | ((unsigned long)(Gui_u8:GuiVal & 0x3) << 30 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -----------------------------  Field Item: GPIOA_PUPDR_PUPDR14  --------------------------------
// SVD Line: 6718

//  <item> SFDITEM_FIELD__GPIOA_PUPDR_PUPDR14
//    <name> PUPDR14 </name>
//    <rw> 
//    <i> [Bits 29..28] RW (@ 0x5000000C) Port x configuration bits (y =  0..15) </i>
//    <edit> 
//      <loc> ( (unsigned char)((GPIOA_PUPDR >> 28) & 0x3), ((GPIOA_PUPDR = (GPIOA_PUPDR & ~(0x3UL << 28 )) | ((unsigned long)(Gui_u8:GuiVal & 0x3) << 28 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -----------------------------  Field Item: GPIOA_PUPDR_PUPDR13  --------------------------------
// SVD Line: 6725

//  <item> SFDITEM_FIELD__GPIOA_PUPDR_PUPDR13
//    <name> PUPDR13 </name>
//    <rw> 
//    <i> [Bits 27..26] RW (@ 0x5000000C) Port x configuration bits (y =  0..15) </i>
//    <edit> 
//      <loc> ( (unsigned char)((GPIOA_PUPDR >> 26) & 0x3), ((GPIOA_PUPDR = (GPIOA_PUPDR & ~(0x3UL << 26 )) | ((unsigned long)(Gui_u8:GuiVal & 0x3) << 26 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -----------------------------  Field Item: GPIOA_PUPDR_PUPDR12  --------------------------------
// SVD Line: 6732

//  <item> SFDITEM_FIELD__GPIOA_PUPDR_PUPDR12
//    <name> PUPDR12 </name>
//    <rw> 
//    <i> [Bits 25..24] RW (@ 0x5000000C) Port x configuration bits (y =  0..15) </i>
//    <edit> 
//      <loc> ( (unsigned char)((GPIOA_PUPDR >> 24) & 0x3), ((GPIOA_PUPDR = (GPIOA_PUPDR & ~(0x3UL << 24 )) | ((unsigned long)(Gui_u8:GuiVal & 0x3) << 24 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -----------------------------  Field Item: GPIOA_PUPDR_PUPDR11  --------------------------------
// SVD Line: 6739

//  <item> SFDITEM_FIELD__GPIOA_PUPDR_PUPDR11
//    <name> PUPDR11 </name>
//    <rw> 
//    <i> [Bits 23..22] RW (@ 0x5000000C) Port x configuration bits (y =  0..15) </i>
//    <edit> 
//      <loc> ( (unsigned char)((GPIOA_PUPDR >> 22) & 0x3), ((GPIOA_PUPDR = (GPIOA_PUPDR & ~(0x3UL << 22 )) | ((unsigned long)(Gui_u8:GuiVal & 0x3) << 22 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -----------------------------  Field Item: GPIOA_PUPDR_PUPDR10  --------------------------------
// SVD Line: 6746

//  <item> SFDITEM_FIELD__GPIOA_PUPDR_PUPDR10
//    <name> PUPDR10 </name>
//    <rw> 
//    <i> [Bits 21..20] RW (@ 0x5000000C) Port x configuration bits (y =  0..15) </i>
//    <edit> 
//      <loc> ( (unsigned char)((GPIOA_PUPDR >> 20) & 0x3), ((GPIOA_PUPDR = (GPIOA_PUPDR & ~(0x3UL << 20 )) | ((unsigned long)(Gui_u8:GuiVal & 0x3) << 20 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -----------------------------  Field Item: GPIOA_PUPDR_PUPDR9  ---------------------------------
// SVD Line: 6753

//  <item> SFDITEM_FIELD__GPIOA_PUPDR_PUPDR9
//    <name> PUPDR9 </name>
//    <rw> 
//    <i> [Bits 19..18] RW (@ 0x5000000C) Port x configuration bits (y =  0..15) </i>
//    <edit> 
//      <loc> ( (unsigned char)((GPIOA_PUPDR >> 18) & 0x3), ((GPIOA_PUPDR = (GPIOA_PUPDR & ~(0x3UL << 18 )) | ((unsigned long)(Gui_u8:GuiVal & 0x3) << 18 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -----------------------------  Field Item: GPIOA_PUPDR_PUPDR8  ---------------------------------
// SVD Line: 6760

//  <item> SFDITEM_FIELD__GPIOA_PUPDR_PUPDR8
//    <name> PUPDR8 </name>
//    <rw> 
//    <i> [Bits 17..16] RW (@ 0x5000000C) Port x configuration bits (y =  0..15) </i>
//    <edit> 
//      <loc> ( (unsigned char)((GPIOA_PUPDR >> 16) & 0x3), ((GPIOA_PUPDR = (GPIOA_PUPDR & ~(0x3UL << 16 )) | ((unsigned long)(Gui_u8:GuiVal & 0x3) << 16 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -----------------------------  Field Item: GPIOA_PUPDR_PUPDR7  ---------------------------------
// SVD Line: 6767

//  <item> SFDITEM_FIELD__GPIOA_PUPDR_PUPDR7
//    <name> PUPDR7 </name>
//    <rw> 
//    <i> [Bits 15..14] RW (@ 0x5000000C) Port x configuration bits (y =  0..15) </i>
//    <edit> 
//      <loc> ( (unsigned char)((GPIOA_PUPDR >> 14) & 0x3), ((GPIOA_PUPDR = (GPIOA_PUPDR & ~(0x3UL << 14 )) | ((unsigned long)(Gui_u8:GuiVal & 0x3) << 14 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -----------------------------  Field Item: GPIOA_PUPDR_PUPDR6  ---------------------------------
// SVD Line: 6774

//  <item> SFDITEM_FIELD__GPIOA_PUPDR_PUPDR6
//    <name> PUPDR6 </name>
//    <rw> 
//    <i> [Bits 13..12] RW (@ 0x5000000C) Port x configuration bits (y =  0..15) </i>
//    <edit> 
//      <loc> ( (unsigned char)((GPIOA_PUPDR >> 12) & 0x3), ((GPIOA_PUPDR = (GPIOA_PUPDR & ~(0x3UL << 12 )) | ((unsigned long)(Gui_u8:GuiVal & 0x3) << 12 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -----------------------------  Field Item: GPIOA_PUPDR_PUPDR5  ---------------------------------
// SVD Line: 6781

//  <item> SFDITEM_FIELD__GPIOA_PUPDR_PUPDR5
//    <name> PUPDR5 </name>
//    <rw> 
//    <i> [Bits 11..10] RW (@ 0x5000000C) Port x configuration bits (y =  0..15) </i>
//    <edit> 
//      <loc> ( (unsigned char)((GPIOA_PUPDR >> 10) & 0x3), ((GPIOA_PUPDR = (GPIOA_PUPDR & ~(0x3UL << 10 )) | ((unsigned long)(Gui_u8:GuiVal & 0x3) << 10 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -----------------------------  Field Item: GPIOA_PUPDR_PUPDR4  ---------------------------------
// SVD Line: 6788

//  <item> SFDITEM_FIELD__GPIOA_PUPDR_PUPDR4
//    <name> PUPDR4 </name>
//    <rw> 
//    <i> [Bits 9..8] RW (@ 0x5000000C) Port x configuration bits (y =  0..15) </i>
//    <edit> 
//      <loc> ( (unsigned char)((GPIOA_PUPDR >> 8) & 0x3), ((GPIOA_PUPDR = (GPIOA_PUPDR & ~(0x3UL << 8 )) | ((unsigned long)(Gui_u8:GuiVal & 0x3) << 8 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -----------------------------  Field Item: GPIOA_PUPDR_PUPDR3  ---------------------------------
// SVD Line: 6795

//  <item> SFDITEM_FIELD__GPIOA_PUPDR_PUPDR3
//    <name> PUPDR3 </name>
//    <rw> 
//    <i> [Bits 7..6] RW (@ 0x5000000C) Port x configuration bits (y =  0..15) </i>
//    <edit> 
//      <loc> ( (unsigned char)((GPIOA_PUPDR >> 6) & 0x3), ((GPIOA_PUPDR = (GPIOA_PUPDR & ~(0x3UL << 6 )) | ((unsigned long)(Gui_u8:GuiVal & 0x3) << 6 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -----------------------------  Field Item: GPIOA_PUPDR_PUPDR2  ---------------------------------
// SVD Line: 6802

//  <item> SFDITEM_FIELD__GPIOA_PUPDR_PUPDR2
//    <name> PUPDR2 </name>
//    <rw> 
//    <i> [Bits 5..4] RW (@ 0x5000000C) Port x configuration bits (y =  0..15) </i>
//    <edit> 
//      <loc> ( (unsigned char)((GPIOA_PUPDR >> 4) & 0x3), ((GPIOA_PUPDR = (GPIOA_PUPDR & ~(0x3UL << 4 )) | ((unsigned long)(Gui_u8:GuiVal & 0x3) << 4 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -----------------------------  Field Item: GPIOA_PUPDR_PUPDR1  ---------------------------------
// SVD Line: 6809

//  <item> SFDITEM_FIELD__GPIOA_PUPDR_PUPDR1
//    <name> PUPDR1 </name>
//    <rw> 
//    <i> [Bits 3..2] RW (@ 0x5000000C) Port x configuration bits (y =  0..15) </i>
//    <edit> 
//      <loc> ( (unsigned char)((GPIOA_PUPDR >> 2) & 0x3), ((GPIOA_PUPDR = (GPIOA_PUPDR & ~(0x3UL << 2 )) | ((unsigned long)(Gui_u8:GuiVal & 0x3) << 2 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -----------------------------  Field Item: GPIOA_PUPDR_PUPDR0  ---------------------------------
// SVD Line: 6816

//  <item> SFDITEM_FIELD__GPIOA_PUPDR_PUPDR0
//    <name> PUPDR0 </name>
//    <rw> 
//    <i> [Bits 1..0] RW (@ 0x5000000C) Port x configuration bits (y =  0..15) </i>
//    <edit> 
//      <loc> ( (unsigned char)((GPIOA_PUPDR >> 0) & 0x3), ((GPIOA_PUPDR = (GPIOA_PUPDR & ~(0x3UL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0x3) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -------------------------------  Register RTree: GPIOA_PUPDR  ----------------------------------
// SVD Line: 6701

//  <rtree> SFDITEM_REG__GPIOA_PUPDR
//    <name> PUPDR </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x5000000C) GPIO port pull-up/pull-down  register </i>
//    <loc> ( (unsigned int)((GPIOA_PUPDR >> 0) & 0xFFFFFFFF), ((GPIOA_PUPDR = (GPIOA_PUPDR & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__GPIOA_PUPDR_PUPDR15 </item>
//    <item> SFDITEM_FIELD__GPIOA_PUPDR_PUPDR14 </item>
//    <item> SFDITEM_FIELD__GPIOA_PUPDR_PUPDR13 </item>
//    <item> SFDITEM_FIELD__GPIOA_PUPDR_PUPDR12 </item>
//    <item> SFDITEM_FIELD__GPIOA_PUPDR_PUPDR11 </item>
//    <item> SFDITEM_FIELD__GPIOA_PUPDR_PUPDR10 </item>
//    <item> SFDITEM_FIELD__GPIOA_PUPDR_PUPDR9 </item>
//    <item> SFDITEM_FIELD__GPIOA_PUPDR_PUPDR8 </item>
//    <item> SFDITEM_FIELD__GPIOA_PUPDR_PUPDR7 </item>
//    <item> SFDITEM_FIELD__GPIOA_PUPDR_PUPDR6 </item>
//    <item> SFDITEM_FIELD__GPIOA_PUPDR_PUPDR5 </item>
//    <item> SFDITEM_FIELD__GPIOA_PUPDR_PUPDR4 </item>
//    <item> SFDITEM_FIELD__GPIOA_PUPDR_PUPDR3 </item>
//    <item> SFDITEM_FIELD__GPIOA_PUPDR_PUPDR2 </item>
//    <item> SFDITEM_FIELD__GPIOA_PUPDR_PUPDR1 </item>
//    <item> SFDITEM_FIELD__GPIOA_PUPDR_PUPDR0 </item>
//  </rtree>
//  


// ----------------------------  Register Item Address: GPIOA_IDR  --------------------------------
// SVD Line: 6825

unsigned int GPIOA_IDR __AT (0x50000010);



// -------------------------------  Field Item: GPIOA_IDR_IDR15  ----------------------------------
// SVD Line: 6834

//  <item> SFDITEM_FIELD__GPIOA_IDR_IDR15
//    <name> IDR15 </name>
//    <r> 
//    <i> [Bit 15] RO (@ 0x50000010) Port input data (y =  0..15) </i>
//    <check> 
//      <loc> ( (unsigned int) GPIOA_IDR ) </loc>
//      <o.15..15> IDR15
//    </check>
//  </item>
//  


// -------------------------------  Field Item: GPIOA_IDR_IDR14  ----------------------------------
// SVD Line: 6841

//  <item> SFDITEM_FIELD__GPIOA_IDR_IDR14
//    <name> IDR14 </name>
//    <r> 
//    <i> [Bit 14] RO (@ 0x50000010) Port input data (y =  0..15) </i>
//    <check> 
//      <loc> ( (unsigned int) GPIOA_IDR ) </loc>
//      <o.14..14> IDR14
//    </check>
//  </item>
//  


// -------------------------------  Field Item: GPIOA_IDR_IDR13  ----------------------------------
// SVD Line: 6848

//  <item> SFDITEM_FIELD__GPIOA_IDR_IDR13
//    <name> IDR13 </name>
//    <r> 
//    <i> [Bit 13] RO (@ 0x50000010) Port input data (y =  0..15) </i>
//    <check> 
//      <loc> ( (unsigned int) GPIOA_IDR ) </loc>
//      <o.13..13> IDR13
//    </check>
//  </item>
//  


// -------------------------------  Field Item: GPIOA_IDR_IDR12  ----------------------------------
// SVD Line: 6855

//  <item> SFDITEM_FIELD__GPIOA_IDR_IDR12
//    <name> IDR12 </name>
//    <r> 
//    <i> [Bit 12] RO (@ 0x50000010) Port input data (y =  0..15) </i>
//    <check> 
//      <loc> ( (unsigned int) GPIOA_IDR ) </loc>
//      <o.12..12> IDR12
//    </check>
//  </item>
//  


// -------------------------------  Field Item: GPIOA_IDR_IDR11  ----------------------------------
// SVD Line: 6862

//  <item> SFDITEM_FIELD__GPIOA_IDR_IDR11
//    <name> IDR11 </name>
//    <r> 
//    <i> [Bit 11] RO (@ 0x50000010) Port input data (y =  0..15) </i>
//    <check> 
//      <loc> ( (unsigned int) GPIOA_IDR ) </loc>
//      <o.11..11> IDR11
//    </check>
//  </item>
//  


// -------------------------------  Field Item: GPIOA_IDR_IDR10  ----------------------------------
// SVD Line: 6869

//  <item> SFDITEM_FIELD__GPIOA_IDR_IDR10
//    <name> IDR10 </name>
//    <r> 
//    <i> [Bit 10] RO (@ 0x50000010) Port input data (y =  0..15) </i>
//    <check> 
//      <loc> ( (unsigned int) GPIOA_IDR ) </loc>
//      <o.10..10> IDR10
//    </check>
//  </item>
//  


// -------------------------------  Field Item: GPIOA_IDR_IDR9  -----------------------------------
// SVD Line: 6876

//  <item> SFDITEM_FIELD__GPIOA_IDR_IDR9
//    <name> IDR9 </name>
//    <r> 
//    <i> [Bit 9] RO (@ 0x50000010) Port input data (y =  0..15) </i>
//    <check> 
//      <loc> ( (unsigned int) GPIOA_IDR ) </loc>
//      <o.9..9> IDR9
//    </check>
//  </item>
//  


// -------------------------------  Field Item: GPIOA_IDR_IDR8  -----------------------------------
// SVD Line: 6883

//  <item> SFDITEM_FIELD__GPIOA_IDR_IDR8
//    <name> IDR8 </name>
//    <r> 
//    <i> [Bit 8] RO (@ 0x50000010) Port input data (y =  0..15) </i>
//    <check> 
//      <loc> ( (unsigned int) GPIOA_IDR ) </loc>
//      <o.8..8> IDR8
//    </check>
//  </item>
//  


// -------------------------------  Field Item: GPIOA_IDR_IDR7  -----------------------------------
// SVD Line: 6890

//  <item> SFDITEM_FIELD__GPIOA_IDR_IDR7
//    <name> IDR7 </name>
//    <r> 
//    <i> [Bit 7] RO (@ 0x50000010) Port input data (y =  0..15) </i>
//    <check> 
//      <loc> ( (unsigned int) GPIOA_IDR ) </loc>
//      <o.7..7> IDR7
//    </check>
//  </item>
//  


// -------------------------------  Field Item: GPIOA_IDR_IDR6  -----------------------------------
// SVD Line: 6897

//  <item> SFDITEM_FIELD__GPIOA_IDR_IDR6
//    <name> IDR6 </name>
//    <r> 
//    <i> [Bit 6] RO (@ 0x50000010) Port input data (y =  0..15) </i>
//    <check> 
//      <loc> ( (unsigned int) GPIOA_IDR ) </loc>
//      <o.6..6> IDR6
//    </check>
//  </item>
//  


// -------------------------------  Field Item: GPIOA_IDR_IDR5  -----------------------------------
// SVD Line: 6904

//  <item> SFDITEM_FIELD__GPIOA_IDR_IDR5
//    <name> IDR5 </name>
//    <r> 
//    <i> [Bit 5] RO (@ 0x50000010) Port input data (y =  0..15) </i>
//    <check> 
//      <loc> ( (unsigned int) GPIOA_IDR ) </loc>
//      <o.5..5> IDR5
//    </check>
//  </item>
//  


// -------------------------------  Field Item: GPIOA_IDR_IDR4  -----------------------------------
// SVD Line: 6911

//  <item> SFDITEM_FIELD__GPIOA_IDR_IDR4
//    <name> IDR4 </name>
//    <r> 
//    <i> [Bit 4] RO (@ 0x50000010) Port input data (y =  0..15) </i>
//    <check> 
//      <loc> ( (unsigned int) GPIOA_IDR ) </loc>
//      <o.4..4> IDR4
//    </check>
//  </item>
//  


// -------------------------------  Field Item: GPIOA_IDR_IDR3  -----------------------------------
// SVD Line: 6918

//  <item> SFDITEM_FIELD__GPIOA_IDR_IDR3
//    <name> IDR3 </name>
//    <r> 
//    <i> [Bit 3] RO (@ 0x50000010) Port input data (y =  0..15) </i>
//    <check> 
//      <loc> ( (unsigned int) GPIOA_IDR ) </loc>
//      <o.3..3> IDR3
//    </check>
//  </item>
//  


// -------------------------------  Field Item: GPIOA_IDR_IDR2  -----------------------------------
// SVD Line: 6925

//  <item> SFDITEM_FIELD__GPIOA_IDR_IDR2
//    <name> IDR2 </name>
//    <r> 
//    <i> [Bit 2] RO (@ 0x50000010) Port input data (y =  0..15) </i>
//    <check> 
//      <loc> ( (unsigned int) GPIOA_IDR ) </loc>
//      <o.2..2> IDR2
//    </check>
//  </item>
//  


// -------------------------------  Field Item: GPIOA_IDR_IDR1  -----------------------------------
// SVD Line: 6932

//  <item> SFDITEM_FIELD__GPIOA_IDR_IDR1
//    <name> IDR1 </name>
//    <r> 
//    <i> [Bit 1] RO (@ 0x50000010) Port input data (y =  0..15) </i>
//    <check> 
//      <loc> ( (unsigned int) GPIOA_IDR ) </loc>
//      <o.1..1> IDR1
//    </check>
//  </item>
//  


// -------------------------------  Field Item: GPIOA_IDR_IDR0  -----------------------------------
// SVD Line: 6939

//  <item> SFDITEM_FIELD__GPIOA_IDR_IDR0
//    <name> IDR0 </name>
//    <r> 
//    <i> [Bit 0] RO (@ 0x50000010) Port input data (y =  0..15) </i>
//    <check> 
//      <loc> ( (unsigned int) GPIOA_IDR ) </loc>
//      <o.0..0> IDR0
//    </check>
//  </item>
//  


// --------------------------------  Register RTree: GPIOA_IDR  -----------------------------------
// SVD Line: 6825

//  <rtree> SFDITEM_REG__GPIOA_IDR
//    <name> IDR </name>
//    <r> 
//    <i> [Bits 31..0] RO (@ 0x50000010) GPIO port input data register </i>
//    <loc> ( (unsigned int)((GPIOA_IDR >> 0) & 0xFFFFFFFF) ) </loc>
//    <item> SFDITEM_FIELD__GPIOA_IDR_IDR15 </item>
//    <item> SFDITEM_FIELD__GPIOA_IDR_IDR14 </item>
//    <item> SFDITEM_FIELD__GPIOA_IDR_IDR13 </item>
//    <item> SFDITEM_FIELD__GPIOA_IDR_IDR12 </item>
//    <item> SFDITEM_FIELD__GPIOA_IDR_IDR11 </item>
//    <item> SFDITEM_FIELD__GPIOA_IDR_IDR10 </item>
//    <item> SFDITEM_FIELD__GPIOA_IDR_IDR9 </item>
//    <item> SFDITEM_FIELD__GPIOA_IDR_IDR8 </item>
//    <item> SFDITEM_FIELD__GPIOA_IDR_IDR7 </item>
//    <item> SFDITEM_FIELD__GPIOA_IDR_IDR6 </item>
//    <item> SFDITEM_FIELD__GPIOA_IDR_IDR5 </item>
//    <item> SFDITEM_FIELD__GPIOA_IDR_IDR4 </item>
//    <item> SFDITEM_FIELD__GPIOA_IDR_IDR3 </item>
//    <item> SFDITEM_FIELD__GPIOA_IDR_IDR2 </item>
//    <item> SFDITEM_FIELD__GPIOA_IDR_IDR1 </item>
//    <item> SFDITEM_FIELD__GPIOA_IDR_IDR0 </item>
//  </rtree>
//  


// ----------------------------  Register Item Address: GPIOA_ODR  --------------------------------
// SVD Line: 6948

unsigned int GPIOA_ODR __AT (0x50000014);



// -------------------------------  Field Item: GPIOA_ODR_ODR15  ----------------------------------
// SVD Line: 6957

//  <item> SFDITEM_FIELD__GPIOA_ODR_ODR15
//    <name> ODR15 </name>
//    <rw> 
//    <i> [Bit 15] RW (@ 0x50000014) Port output data (y =  0..15) </i>
//    <check> 
//      <loc> ( (unsigned int) GPIOA_ODR ) </loc>
//      <o.15..15> ODR15
//    </check>
//  </item>
//  


// -------------------------------  Field Item: GPIOA_ODR_ODR14  ----------------------------------
// SVD Line: 6964

//  <item> SFDITEM_FIELD__GPIOA_ODR_ODR14
//    <name> ODR14 </name>
//    <rw> 
//    <i> [Bit 14] RW (@ 0x50000014) Port output data (y =  0..15) </i>
//    <check> 
//      <loc> ( (unsigned int) GPIOA_ODR ) </loc>
//      <o.14..14> ODR14
//    </check>
//  </item>
//  


// -------------------------------  Field Item: GPIOA_ODR_ODR13  ----------------------------------
// SVD Line: 6971

//  <item> SFDITEM_FIELD__GPIOA_ODR_ODR13
//    <name> ODR13 </name>
//    <rw> 
//    <i> [Bit 13] RW (@ 0x50000014) Port output data (y =  0..15) </i>
//    <check> 
//      <loc> ( (unsigned int) GPIOA_ODR ) </loc>
//      <o.13..13> ODR13
//    </check>
//  </item>
//  


// -------------------------------  Field Item: GPIOA_ODR_ODR12  ----------------------------------
// SVD Line: 6978

//  <item> SFDITEM_FIELD__GPIOA_ODR_ODR12
//    <name> ODR12 </name>
//    <rw> 
//    <i> [Bit 12] RW (@ 0x50000014) Port output data (y =  0..15) </i>
//    <check> 
//      <loc> ( (unsigned int) GPIOA_ODR ) </loc>
//      <o.12..12> ODR12
//    </check>
//  </item>
//  


// -------------------------------  Field Item: GPIOA_ODR_ODR11  ----------------------------------
// SVD Line: 6985

//  <item> SFDITEM_FIELD__GPIOA_ODR_ODR11
//    <name> ODR11 </name>
//    <rw> 
//    <i> [Bit 11] RW (@ 0x50000014) Port output data (y =  0..15) </i>
//    <check> 
//      <loc> ( (unsigned int) GPIOA_ODR ) </loc>
//      <o.11..11> ODR11
//    </check>
//  </item>
//  


// -------------------------------  Field Item: GPIOA_ODR_ODR10  ----------------------------------
// SVD Line: 6992

//  <item> SFDITEM_FIELD__GPIOA_ODR_ODR10
//    <name> ODR10 </name>
//    <rw> 
//    <i> [Bit 10] RW (@ 0x50000014) Port output data (y =  0..15) </i>
//    <check> 
//      <loc> ( (unsigned int) GPIOA_ODR ) </loc>
//      <o.10..10> ODR10
//    </check>
//  </item>
//  


// -------------------------------  Field Item: GPIOA_ODR_ODR9  -----------------------------------
// SVD Line: 6999

//  <item> SFDITEM_FIELD__GPIOA_ODR_ODR9
//    <name> ODR9 </name>
//    <rw> 
//    <i> [Bit 9] RW (@ 0x50000014) Port output data (y =  0..15) </i>
//    <check> 
//      <loc> ( (unsigned int) GPIOA_ODR ) </loc>
//      <o.9..9> ODR9
//    </check>
//  </item>
//  


// -------------------------------  Field Item: GPIOA_ODR_ODR8  -----------------------------------
// SVD Line: 7006

//  <item> SFDITEM_FIELD__GPIOA_ODR_ODR8
//    <name> ODR8 </name>
//    <rw> 
//    <i> [Bit 8] RW (@ 0x50000014) Port output data (y =  0..15) </i>
//    <check> 
//      <loc> ( (unsigned int) GPIOA_ODR ) </loc>
//      <o.8..8> ODR8
//    </check>
//  </item>
//  


// -------------------------------  Field Item: GPIOA_ODR_ODR7  -----------------------------------
// SVD Line: 7013

//  <item> SFDITEM_FIELD__GPIOA_ODR_ODR7
//    <name> ODR7 </name>
//    <rw> 
//    <i> [Bit 7] RW (@ 0x50000014) Port output data (y =  0..15) </i>
//    <check> 
//      <loc> ( (unsigned int) GPIOA_ODR ) </loc>
//      <o.7..7> ODR7
//    </check>
//  </item>
//  


// -------------------------------  Field Item: GPIOA_ODR_ODR6  -----------------------------------
// SVD Line: 7020

//  <item> SFDITEM_FIELD__GPIOA_ODR_ODR6
//    <name> ODR6 </name>
//    <rw> 
//    <i> [Bit 6] RW (@ 0x50000014) Port output data (y =  0..15) </i>
//    <check> 
//      <loc> ( (unsigned int) GPIOA_ODR ) </loc>
//      <o.6..6> ODR6
//    </check>
//  </item>
//  


// -------------------------------  Field Item: GPIOA_ODR_ODR5  -----------------------------------
// SVD Line: 7027

//  <item> SFDITEM_FIELD__GPIOA_ODR_ODR5
//    <name> ODR5 </name>
//    <rw> 
//    <i> [Bit 5] RW (@ 0x50000014) Port output data (y =  0..15) </i>
//    <check> 
//      <loc> ( (unsigned int) GPIOA_ODR ) </loc>
//      <o.5..5> ODR5
//    </check>
//  </item>
//  


// -------------------------------  Field Item: GPIOA_ODR_ODR4  -----------------------------------
// SVD Line: 7034

//  <item> SFDITEM_FIELD__GPIOA_ODR_ODR4
//    <name> ODR4 </name>
//    <rw> 
//    <i> [Bit 4] RW (@ 0x50000014) Port output data (y =  0..15) </i>
//    <check> 
//      <loc> ( (unsigned int) GPIOA_ODR ) </loc>
//      <o.4..4> ODR4
//    </check>
//  </item>
//  


// -------------------------------  Field Item: GPIOA_ODR_ODR3  -----------------------------------
// SVD Line: 7041

//  <item> SFDITEM_FIELD__GPIOA_ODR_ODR3
//    <name> ODR3 </name>
//    <rw> 
//    <i> [Bit 3] RW (@ 0x50000014) Port output data (y =  0..15) </i>
//    <check> 
//      <loc> ( (unsigned int) GPIOA_ODR ) </loc>
//      <o.3..3> ODR3
//    </check>
//  </item>
//  


// -------------------------------  Field Item: GPIOA_ODR_ODR2  -----------------------------------
// SVD Line: 7048

//  <item> SFDITEM_FIELD__GPIOA_ODR_ODR2
//    <name> ODR2 </name>
//    <rw> 
//    <i> [Bit 2] RW (@ 0x50000014) Port output data (y =  0..15) </i>
//    <check> 
//      <loc> ( (unsigned int) GPIOA_ODR ) </loc>
//      <o.2..2> ODR2
//    </check>
//  </item>
//  


// -------------------------------  Field Item: GPIOA_ODR_ODR1  -----------------------------------
// SVD Line: 7055

//  <item> SFDITEM_FIELD__GPIOA_ODR_ODR1
//    <name> ODR1 </name>
//    <rw> 
//    <i> [Bit 1] RW (@ 0x50000014) Port output data (y =  0..15) </i>
//    <check> 
//      <loc> ( (unsigned int) GPIOA_ODR ) </loc>
//      <o.1..1> ODR1
//    </check>
//  </item>
//  


// -------------------------------  Field Item: GPIOA_ODR_ODR0  -----------------------------------
// SVD Line: 7062

//  <item> SFDITEM_FIELD__GPIOA_ODR_ODR0
//    <name> ODR0 </name>
//    <rw> 
//    <i> [Bit 0] RW (@ 0x50000014) Port output data (y =  0..15) </i>
//    <check> 
//      <loc> ( (unsigned int) GPIOA_ODR ) </loc>
//      <o.0..0> ODR0
//    </check>
//  </item>
//  


// --------------------------------  Register RTree: GPIOA_ODR  -----------------------------------
// SVD Line: 6948

//  <rtree> SFDITEM_REG__GPIOA_ODR
//    <name> ODR </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x50000014) GPIO port output data register </i>
//    <loc> ( (unsigned int)((GPIOA_ODR >> 0) & 0xFFFFFFFF), ((GPIOA_ODR = (GPIOA_ODR & ~(0xFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__GPIOA_ODR_ODR15 </item>
//    <item> SFDITEM_FIELD__GPIOA_ODR_ODR14 </item>
//    <item> SFDITEM_FIELD__GPIOA_ODR_ODR13 </item>
//    <item> SFDITEM_FIELD__GPIOA_ODR_ODR12 </item>
//    <item> SFDITEM_FIELD__GPIOA_ODR_ODR11 </item>
//    <item> SFDITEM_FIELD__GPIOA_ODR_ODR10 </item>
//    <item> SFDITEM_FIELD__GPIOA_ODR_ODR9 </item>
//    <item> SFDITEM_FIELD__GPIOA_ODR_ODR8 </item>
//    <item> SFDITEM_FIELD__GPIOA_ODR_ODR7 </item>
//    <item> SFDITEM_FIELD__GPIOA_ODR_ODR6 </item>
//    <item> SFDITEM_FIELD__GPIOA_ODR_ODR5 </item>
//    <item> SFDITEM_FIELD__GPIOA_ODR_ODR4 </item>
//    <item> SFDITEM_FIELD__GPIOA_ODR_ODR3 </item>
//    <item> SFDITEM_FIELD__GPIOA_ODR_ODR2 </item>
//    <item> SFDITEM_FIELD__GPIOA_ODR_ODR1 </item>
//    <item> SFDITEM_FIELD__GPIOA_ODR_ODR0 </item>
//  </rtree>
//  


// ----------------------------  Register Item Address: GPIOA_BSRR  -------------------------------
// SVD Line: 7071

unsigned int GPIOA_BSRR __AT (0x50000018);



// -------------------------------  Field Item: GPIOA_BSRR_BR15  ----------------------------------
// SVD Line: 7081

//  <item> SFDITEM_FIELD__GPIOA_BSRR_BR15
//    <name> BR15 </name>
//    <w> 
//    <i> [Bit 31] WO (@ 0x50000018) Port x reset bit y (y =  0..15) </i>
//    <check> 
//      <loc> ( (unsigned int) GPIOA_BSRR ) </loc>
//      <o.31..31> BR15
//    </check>
//  </item>
//  


// -------------------------------  Field Item: GPIOA_BSRR_BR14  ----------------------------------
// SVD Line: 7088

//  <item> SFDITEM_FIELD__GPIOA_BSRR_BR14
//    <name> BR14 </name>
//    <w> 
//    <i> [Bit 30] WO (@ 0x50000018) Port x reset bit y (y =  0..15) </i>
//    <check> 
//      <loc> ( (unsigned int) GPIOA_BSRR ) </loc>
//      <o.30..30> BR14
//    </check>
//  </item>
//  


// -------------------------------  Field Item: GPIOA_BSRR_BR13  ----------------------------------
// SVD Line: 7095

//  <item> SFDITEM_FIELD__GPIOA_BSRR_BR13
//    <name> BR13 </name>
//    <w> 
//    <i> [Bit 29] WO (@ 0x50000018) Port x reset bit y (y =  0..15) </i>
//    <check> 
//      <loc> ( (unsigned int) GPIOA_BSRR ) </loc>
//      <o.29..29> BR13
//    </check>
//  </item>
//  


// -------------------------------  Field Item: GPIOA_BSRR_BR12  ----------------------------------
// SVD Line: 7102

//  <item> SFDITEM_FIELD__GPIOA_BSRR_BR12
//    <name> BR12 </name>
//    <w> 
//    <i> [Bit 28] WO (@ 0x50000018) Port x reset bit y (y =  0..15) </i>
//    <check> 
//      <loc> ( (unsigned int) GPIOA_BSRR ) </loc>
//      <o.28..28> BR12
//    </check>
//  </item>
//  


// -------------------------------  Field Item: GPIOA_BSRR_BR11  ----------------------------------
// SVD Line: 7109

//  <item> SFDITEM_FIELD__GPIOA_BSRR_BR11
//    <name> BR11 </name>
//    <w> 
//    <i> [Bit 27] WO (@ 0x50000018) Port x reset bit y (y =  0..15) </i>
//    <check> 
//      <loc> ( (unsigned int) GPIOA_BSRR ) </loc>
//      <o.27..27> BR11
//    </check>
//  </item>
//  


// -------------------------------  Field Item: GPIOA_BSRR_BR10  ----------------------------------
// SVD Line: 7116

//  <item> SFDITEM_FIELD__GPIOA_BSRR_BR10
//    <name> BR10 </name>
//    <w> 
//    <i> [Bit 26] WO (@ 0x50000018) Port x reset bit y (y =  0..15) </i>
//    <check> 
//      <loc> ( (unsigned int) GPIOA_BSRR ) </loc>
//      <o.26..26> BR10
//    </check>
//  </item>
//  


// -------------------------------  Field Item: GPIOA_BSRR_BR9  -----------------------------------
// SVD Line: 7123

//  <item> SFDITEM_FIELD__GPIOA_BSRR_BR9
//    <name> BR9 </name>
//    <w> 
//    <i> [Bit 25] WO (@ 0x50000018) Port x reset bit y (y =  0..15) </i>
//    <check> 
//      <loc> ( (unsigned int) GPIOA_BSRR ) </loc>
//      <o.25..25> BR9
//    </check>
//  </item>
//  


// -------------------------------  Field Item: GPIOA_BSRR_BR8  -----------------------------------
// SVD Line: 7130

//  <item> SFDITEM_FIELD__GPIOA_BSRR_BR8
//    <name> BR8 </name>
//    <w> 
//    <i> [Bit 24] WO (@ 0x50000018) Port x reset bit y (y =  0..15) </i>
//    <check> 
//      <loc> ( (unsigned int) GPIOA_BSRR ) </loc>
//      <o.24..24> BR8
//    </check>
//  </item>
//  


// -------------------------------  Field Item: GPIOA_BSRR_BR7  -----------------------------------
// SVD Line: 7137

//  <item> SFDITEM_FIELD__GPIOA_BSRR_BR7
//    <name> BR7 </name>
//    <w> 
//    <i> [Bit 23] WO (@ 0x50000018) Port x reset bit y (y =  0..15) </i>
//    <check> 
//      <loc> ( (unsigned int) GPIOA_BSRR ) </loc>
//      <o.23..23> BR7
//    </check>
//  </item>
//  


// -------------------------------  Field Item: GPIOA_BSRR_BR6  -----------------------------------
// SVD Line: 7144

//  <item> SFDITEM_FIELD__GPIOA_BSRR_BR6
//    <name> BR6 </name>
//    <w> 
//    <i> [Bit 22] WO (@ 0x50000018) Port x reset bit y (y =  0..15) </i>
//    <check> 
//      <loc> ( (unsigned int) GPIOA_BSRR ) </loc>
//      <o.22..22> BR6
//    </check>
//  </item>
//  


// -------------------------------  Field Item: GPIOA_BSRR_BR5  -----------------------------------
// SVD Line: 7151

//  <item> SFDITEM_FIELD__GPIOA_BSRR_BR5
//    <name> BR5 </name>
//    <w> 
//    <i> [Bit 21] WO (@ 0x50000018) Port x reset bit y (y =  0..15) </i>
//    <check> 
//      <loc> ( (unsigned int) GPIOA_BSRR ) </loc>
//      <o.21..21> BR5
//    </check>
//  </item>
//  


// -------------------------------  Field Item: GPIOA_BSRR_BR4  -----------------------------------
// SVD Line: 7158

//  <item> SFDITEM_FIELD__GPIOA_BSRR_BR4
//    <name> BR4 </name>
//    <w> 
//    <i> [Bit 20] WO (@ 0x50000018) Port x reset bit y (y =  0..15) </i>
//    <check> 
//      <loc> ( (unsigned int) GPIOA_BSRR ) </loc>
//      <o.20..20> BR4
//    </check>
//  </item>
//  


// -------------------------------  Field Item: GPIOA_BSRR_BR3  -----------------------------------
// SVD Line: 7165

//  <item> SFDITEM_FIELD__GPIOA_BSRR_BR3
//    <name> BR3 </name>
//    <w> 
//    <i> [Bit 19] WO (@ 0x50000018) Port x reset bit y (y =  0..15) </i>
//    <check> 
//      <loc> ( (unsigned int) GPIOA_BSRR ) </loc>
//      <o.19..19> BR3
//    </check>
//  </item>
//  


// -------------------------------  Field Item: GPIOA_BSRR_BR2  -----------------------------------
// SVD Line: 7172

//  <item> SFDITEM_FIELD__GPIOA_BSRR_BR2
//    <name> BR2 </name>
//    <w> 
//    <i> [Bit 18] WO (@ 0x50000018) Port x reset bit y (y =  0..15) </i>
//    <check> 
//      <loc> ( (unsigned int) GPIOA_BSRR ) </loc>
//      <o.18..18> BR2
//    </check>
//  </item>
//  


// -------------------------------  Field Item: GPIOA_BSRR_BR1  -----------------------------------
// SVD Line: 7179

//  <item> SFDITEM_FIELD__GPIOA_BSRR_BR1
//    <name> BR1 </name>
//    <w> 
//    <i> [Bit 17] WO (@ 0x50000018) Port x reset bit y (y =  0..15) </i>
//    <check> 
//      <loc> ( (unsigned int) GPIOA_BSRR ) </loc>
//      <o.17..17> BR1
//    </check>
//  </item>
//  


// -------------------------------  Field Item: GPIOA_BSRR_BR0  -----------------------------------
// SVD Line: 7186

//  <item> SFDITEM_FIELD__GPIOA_BSRR_BR0
//    <name> BR0 </name>
//    <w> 
//    <i> [Bit 16] WO (@ 0x50000018) Port x set bit y (y=  0..15) </i>
//    <check> 
//      <loc> ( (unsigned int) GPIOA_BSRR ) </loc>
//      <o.16..16> BR0
//    </check>
//  </item>
//  


// -------------------------------  Field Item: GPIOA_BSRR_BS15  ----------------------------------
// SVD Line: 7193

//  <item> SFDITEM_FIELD__GPIOA_BSRR_BS15
//    <name> BS15 </name>
//    <w> 
//    <i> [Bit 15] WO (@ 0x50000018) Port x set bit y (y=  0..15) </i>
//    <check> 
//      <loc> ( (unsigned int) GPIOA_BSRR ) </loc>
//      <o.15..15> BS15
//    </check>
//  </item>
//  


// -------------------------------  Field Item: GPIOA_BSRR_BS14  ----------------------------------
// SVD Line: 7200

//  <item> SFDITEM_FIELD__GPIOA_BSRR_BS14
//    <name> BS14 </name>
//    <w> 
//    <i> [Bit 14] WO (@ 0x50000018) Port x set bit y (y=  0..15) </i>
//    <check> 
//      <loc> ( (unsigned int) GPIOA_BSRR ) </loc>
//      <o.14..14> BS14
//    </check>
//  </item>
//  


// -------------------------------  Field Item: GPIOA_BSRR_BS13  ----------------------------------
// SVD Line: 7207

//  <item> SFDITEM_FIELD__GPIOA_BSRR_BS13
//    <name> BS13 </name>
//    <w> 
//    <i> [Bit 13] WO (@ 0x50000018) Port x set bit y (y=  0..15) </i>
//    <check> 
//      <loc> ( (unsigned int) GPIOA_BSRR ) </loc>
//      <o.13..13> BS13
//    </check>
//  </item>
//  


// -------------------------------  Field Item: GPIOA_BSRR_BS12  ----------------------------------
// SVD Line: 7214

//  <item> SFDITEM_FIELD__GPIOA_BSRR_BS12
//    <name> BS12 </name>
//    <w> 
//    <i> [Bit 12] WO (@ 0x50000018) Port x set bit y (y=  0..15) </i>
//    <check> 
//      <loc> ( (unsigned int) GPIOA_BSRR ) </loc>
//      <o.12..12> BS12
//    </check>
//  </item>
//  


// -------------------------------  Field Item: GPIOA_BSRR_BS11  ----------------------------------
// SVD Line: 7221

//  <item> SFDITEM_FIELD__GPIOA_BSRR_BS11
//    <name> BS11 </name>
//    <w> 
//    <i> [Bit 11] WO (@ 0x50000018) Port x set bit y (y=  0..15) </i>
//    <check> 
//      <loc> ( (unsigned int) GPIOA_BSRR ) </loc>
//      <o.11..11> BS11
//    </check>
//  </item>
//  


// -------------------------------  Field Item: GPIOA_BSRR_BS10  ----------------------------------
// SVD Line: 7228

//  <item> SFDITEM_FIELD__GPIOA_BSRR_BS10
//    <name> BS10 </name>
//    <w> 
//    <i> [Bit 10] WO (@ 0x50000018) Port x set bit y (y=  0..15) </i>
//    <check> 
//      <loc> ( (unsigned int) GPIOA_BSRR ) </loc>
//      <o.10..10> BS10
//    </check>
//  </item>
//  


// -------------------------------  Field Item: GPIOA_BSRR_BS9  -----------------------------------
// SVD Line: 7235

//  <item> SFDITEM_FIELD__GPIOA_BSRR_BS9
//    <name> BS9 </name>
//    <w> 
//    <i> [Bit 9] WO (@ 0x50000018) Port x set bit y (y=  0..15) </i>
//    <check> 
//      <loc> ( (unsigned int) GPIOA_BSRR ) </loc>
//      <o.9..9> BS9
//    </check>
//  </item>
//  


// -------------------------------  Field Item: GPIOA_BSRR_BS8  -----------------------------------
// SVD Line: 7242

//  <item> SFDITEM_FIELD__GPIOA_BSRR_BS8
//    <name> BS8 </name>
//    <w> 
//    <i> [Bit 8] WO (@ 0x50000018) Port x set bit y (y=  0..15) </i>
//    <check> 
//      <loc> ( (unsigned int) GPIOA_BSRR ) </loc>
//      <o.8..8> BS8
//    </check>
//  </item>
//  


// -------------------------------  Field Item: GPIOA_BSRR_BS7  -----------------------------------
// SVD Line: 7249

//  <item> SFDITEM_FIELD__GPIOA_BSRR_BS7
//    <name> BS7 </name>
//    <w> 
//    <i> [Bit 7] WO (@ 0x50000018) Port x set bit y (y=  0..15) </i>
//    <check> 
//      <loc> ( (unsigned int) GPIOA_BSRR ) </loc>
//      <o.7..7> BS7
//    </check>
//  </item>
//  


// -------------------------------  Field Item: GPIOA_BSRR_BS6  -----------------------------------
// SVD Line: 7256

//  <item> SFDITEM_FIELD__GPIOA_BSRR_BS6
//    <name> BS6 </name>
//    <w> 
//    <i> [Bit 6] WO (@ 0x50000018) Port x set bit y (y=  0..15) </i>
//    <check> 
//      <loc> ( (unsigned int) GPIOA_BSRR ) </loc>
//      <o.6..6> BS6
//    </check>
//  </item>
//  


// -------------------------------  Field Item: GPIOA_BSRR_BS5  -----------------------------------
// SVD Line: 7263

//  <item> SFDITEM_FIELD__GPIOA_BSRR_BS5
//    <name> BS5 </name>
//    <w> 
//    <i> [Bit 5] WO (@ 0x50000018) Port x set bit y (y=  0..15) </i>
//    <check> 
//      <loc> ( (unsigned int) GPIOA_BSRR ) </loc>
//      <o.5..5> BS5
//    </check>
//  </item>
//  


// -------------------------------  Field Item: GPIOA_BSRR_BS4  -----------------------------------
// SVD Line: 7270

//  <item> SFDITEM_FIELD__GPIOA_BSRR_BS4
//    <name> BS4 </name>
//    <w> 
//    <i> [Bit 4] WO (@ 0x50000018) Port x set bit y (y=  0..15) </i>
//    <check> 
//      <loc> ( (unsigned int) GPIOA_BSRR ) </loc>
//      <o.4..4> BS4
//    </check>
//  </item>
//  


// -------------------------------  Field Item: GPIOA_BSRR_BS3  -----------------------------------
// SVD Line: 7277

//  <item> SFDITEM_FIELD__GPIOA_BSRR_BS3
//    <name> BS3 </name>
//    <w> 
//    <i> [Bit 3] WO (@ 0x50000018) Port x set bit y (y=  0..15) </i>
//    <check> 
//      <loc> ( (unsigned int) GPIOA_BSRR ) </loc>
//      <o.3..3> BS3
//    </check>
//  </item>
//  


// -------------------------------  Field Item: GPIOA_BSRR_BS2  -----------------------------------
// SVD Line: 7284

//  <item> SFDITEM_FIELD__GPIOA_BSRR_BS2
//    <name> BS2 </name>
//    <w> 
//    <i> [Bit 2] WO (@ 0x50000018) Port x set bit y (y=  0..15) </i>
//    <check> 
//      <loc> ( (unsigned int) GPIOA_BSRR ) </loc>
//      <o.2..2> BS2
//    </check>
//  </item>
//  


// -------------------------------  Field Item: GPIOA_BSRR_BS1  -----------------------------------
// SVD Line: 7291

//  <item> SFDITEM_FIELD__GPIOA_BSRR_BS1
//    <name> BS1 </name>
//    <w> 
//    <i> [Bit 1] WO (@ 0x50000018) Port x set bit y (y=  0..15) </i>
//    <check> 
//      <loc> ( (unsigned int) GPIOA_BSRR ) </loc>
//      <o.1..1> BS1
//    </check>
//  </item>
//  


// -------------------------------  Field Item: GPIOA_BSRR_BS0  -----------------------------------
// SVD Line: 7298

//  <item> SFDITEM_FIELD__GPIOA_BSRR_BS0
//    <name> BS0 </name>
//    <w> 
//    <i> [Bit 0] WO (@ 0x50000018) Port x set bit y (y=  0..15) </i>
//    <check> 
//      <loc> ( (unsigned int) GPIOA_BSRR ) </loc>
//      <o.0..0> BS0
//    </check>
//  </item>
//  


// -------------------------------  Register RTree: GPIOA_BSRR  -----------------------------------
// SVD Line: 7071

//  <rtree> SFDITEM_REG__GPIOA_BSRR
//    <name> BSRR </name>
//    <w> 
//    <i> [Bits 31..0] WO (@ 0x50000018) GPIO port bit set/reset  register </i>
//    <loc> ( (unsigned int)((GPIOA_BSRR >> 0) & 0xFFFFFFFF), ((GPIOA_BSRR = (GPIOA_BSRR & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__GPIOA_BSRR_BR15 </item>
//    <item> SFDITEM_FIELD__GPIOA_BSRR_BR14 </item>
//    <item> SFDITEM_FIELD__GPIOA_BSRR_BR13 </item>
//    <item> SFDITEM_FIELD__GPIOA_BSRR_BR12 </item>
//    <item> SFDITEM_FIELD__GPIOA_BSRR_BR11 </item>
//    <item> SFDITEM_FIELD__GPIOA_BSRR_BR10 </item>
//    <item> SFDITEM_FIELD__GPIOA_BSRR_BR9 </item>
//    <item> SFDITEM_FIELD__GPIOA_BSRR_BR8 </item>
//    <item> SFDITEM_FIELD__GPIOA_BSRR_BR7 </item>
//    <item> SFDITEM_FIELD__GPIOA_BSRR_BR6 </item>
//    <item> SFDITEM_FIELD__GPIOA_BSRR_BR5 </item>
//    <item> SFDITEM_FIELD__GPIOA_BSRR_BR4 </item>
//    <item> SFDITEM_FIELD__GPIOA_BSRR_BR3 </item>
//    <item> SFDITEM_FIELD__GPIOA_BSRR_BR2 </item>
//    <item> SFDITEM_FIELD__GPIOA_BSRR_BR1 </item>
//    <item> SFDITEM_FIELD__GPIOA_BSRR_BR0 </item>
//    <item> SFDITEM_FIELD__GPIOA_BSRR_BS15 </item>
//    <item> SFDITEM_FIELD__GPIOA_BSRR_BS14 </item>
//    <item> SFDITEM_FIELD__GPIOA_BSRR_BS13 </item>
//    <item> SFDITEM_FIELD__GPIOA_BSRR_BS12 </item>
//    <item> SFDITEM_FIELD__GPIOA_BSRR_BS11 </item>
//    <item> SFDITEM_FIELD__GPIOA_BSRR_BS10 </item>
//    <item> SFDITEM_FIELD__GPIOA_BSRR_BS9 </item>
//    <item> SFDITEM_FIELD__GPIOA_BSRR_BS8 </item>
//    <item> SFDITEM_FIELD__GPIOA_BSRR_BS7 </item>
//    <item> SFDITEM_FIELD__GPIOA_BSRR_BS6 </item>
//    <item> SFDITEM_FIELD__GPIOA_BSRR_BS5 </item>
//    <item> SFDITEM_FIELD__GPIOA_BSRR_BS4 </item>
//    <item> SFDITEM_FIELD__GPIOA_BSRR_BS3 </item>
//    <item> SFDITEM_FIELD__GPIOA_BSRR_BS2 </item>
//    <item> SFDITEM_FIELD__GPIOA_BSRR_BS1 </item>
//    <item> SFDITEM_FIELD__GPIOA_BSRR_BS0 </item>
//  </rtree>
//  


// ----------------------------  Register Item Address: GPIOA_LCKR  -------------------------------
// SVD Line: 7307

unsigned int GPIOA_LCKR __AT (0x5000001C);



// -------------------------------  Field Item: GPIOA_LCKR_LCKK  ----------------------------------
// SVD Line: 7317

//  <item> SFDITEM_FIELD__GPIOA_LCKR_LCKK
//    <name> LCKK </name>
//    <rw> 
//    <i> [Bit 16] RW (@ 0x5000001C) Port x lock bit y (y=  0..15) </i>
//    <check> 
//      <loc> ( (unsigned int) GPIOA_LCKR ) </loc>
//      <o.16..16> LCKK
//    </check>
//  </item>
//  


// ------------------------------  Field Item: GPIOA_LCKR_LCK15  ----------------------------------
// SVD Line: 7324

//  <item> SFDITEM_FIELD__GPIOA_LCKR_LCK15
//    <name> LCK15 </name>
//    <rw> 
//    <i> [Bit 15] RW (@ 0x5000001C) Port x lock bit y (y=  0..15) </i>
//    <check> 
//      <loc> ( (unsigned int) GPIOA_LCKR ) </loc>
//      <o.15..15> LCK15
//    </check>
//  </item>
//  


// ------------------------------  Field Item: GPIOA_LCKR_LCK14  ----------------------------------
// SVD Line: 7331

//  <item> SFDITEM_FIELD__GPIOA_LCKR_LCK14
//    <name> LCK14 </name>
//    <rw> 
//    <i> [Bit 14] RW (@ 0x5000001C) Port x lock bit y (y=  0..15) </i>
//    <check> 
//      <loc> ( (unsigned int) GPIOA_LCKR ) </loc>
//      <o.14..14> LCK14
//    </check>
//  </item>
//  


// ------------------------------  Field Item: GPIOA_LCKR_LCK13  ----------------------------------
// SVD Line: 7338

//  <item> SFDITEM_FIELD__GPIOA_LCKR_LCK13
//    <name> LCK13 </name>
//    <rw> 
//    <i> [Bit 13] RW (@ 0x5000001C) Port x lock bit y (y=  0..15) </i>
//    <check> 
//      <loc> ( (unsigned int) GPIOA_LCKR ) </loc>
//      <o.13..13> LCK13
//    </check>
//  </item>
//  


// ------------------------------  Field Item: GPIOA_LCKR_LCK12  ----------------------------------
// SVD Line: 7345

//  <item> SFDITEM_FIELD__GPIOA_LCKR_LCK12
//    <name> LCK12 </name>
//    <rw> 
//    <i> [Bit 12] RW (@ 0x5000001C) Port x lock bit y (y=  0..15) </i>
//    <check> 
//      <loc> ( (unsigned int) GPIOA_LCKR ) </loc>
//      <o.12..12> LCK12
//    </check>
//  </item>
//  


// ------------------------------  Field Item: GPIOA_LCKR_LCK11  ----------------------------------
// SVD Line: 7352

//  <item> SFDITEM_FIELD__GPIOA_LCKR_LCK11
//    <name> LCK11 </name>
//    <rw> 
//    <i> [Bit 11] RW (@ 0x5000001C) Port x lock bit y (y=  0..15) </i>
//    <check> 
//      <loc> ( (unsigned int) GPIOA_LCKR ) </loc>
//      <o.11..11> LCK11
//    </check>
//  </item>
//  


// ------------------------------  Field Item: GPIOA_LCKR_LCK10  ----------------------------------
// SVD Line: 7359

//  <item> SFDITEM_FIELD__GPIOA_LCKR_LCK10
//    <name> LCK10 </name>
//    <rw> 
//    <i> [Bit 10] RW (@ 0x5000001C) Port x lock bit y (y=  0..15) </i>
//    <check> 
//      <loc> ( (unsigned int) GPIOA_LCKR ) </loc>
//      <o.10..10> LCK10
//    </check>
//  </item>
//  


// -------------------------------  Field Item: GPIOA_LCKR_LCK9  ----------------------------------
// SVD Line: 7366

//  <item> SFDITEM_FIELD__GPIOA_LCKR_LCK9
//    <name> LCK9 </name>
//    <rw> 
//    <i> [Bit 9] RW (@ 0x5000001C) Port x lock bit y (y=  0..15) </i>
//    <check> 
//      <loc> ( (unsigned int) GPIOA_LCKR ) </loc>
//      <o.9..9> LCK9
//    </check>
//  </item>
//  


// -------------------------------  Field Item: GPIOA_LCKR_LCK8  ----------------------------------
// SVD Line: 7373

//  <item> SFDITEM_FIELD__GPIOA_LCKR_LCK8
//    <name> LCK8 </name>
//    <rw> 
//    <i> [Bit 8] RW (@ 0x5000001C) Port x lock bit y (y=  0..15) </i>
//    <check> 
//      <loc> ( (unsigned int) GPIOA_LCKR ) </loc>
//      <o.8..8> LCK8
//    </check>
//  </item>
//  


// -------------------------------  Field Item: GPIOA_LCKR_LCK7  ----------------------------------
// SVD Line: 7380

//  <item> SFDITEM_FIELD__GPIOA_LCKR_LCK7
//    <name> LCK7 </name>
//    <rw> 
//    <i> [Bit 7] RW (@ 0x5000001C) Port x lock bit y (y=  0..15) </i>
//    <check> 
//      <loc> ( (unsigned int) GPIOA_LCKR ) </loc>
//      <o.7..7> LCK7
//    </check>
//  </item>
//  


// -------------------------------  Field Item: GPIOA_LCKR_LCK6  ----------------------------------
// SVD Line: 7387

//  <item> SFDITEM_FIELD__GPIOA_LCKR_LCK6
//    <name> LCK6 </name>
//    <rw> 
//    <i> [Bit 6] RW (@ 0x5000001C) Port x lock bit y (y=  0..15) </i>
//    <check> 
//      <loc> ( (unsigned int) GPIOA_LCKR ) </loc>
//      <o.6..6> LCK6
//    </check>
//  </item>
//  


// -------------------------------  Field Item: GPIOA_LCKR_LCK5  ----------------------------------
// SVD Line: 7394

//  <item> SFDITEM_FIELD__GPIOA_LCKR_LCK5
//    <name> LCK5 </name>
//    <rw> 
//    <i> [Bit 5] RW (@ 0x5000001C) Port x lock bit y (y=  0..15) </i>
//    <check> 
//      <loc> ( (unsigned int) GPIOA_LCKR ) </loc>
//      <o.5..5> LCK5
//    </check>
//  </item>
//  


// -------------------------------  Field Item: GPIOA_LCKR_LCK4  ----------------------------------
// SVD Line: 7401

//  <item> SFDITEM_FIELD__GPIOA_LCKR_LCK4
//    <name> LCK4 </name>
//    <rw> 
//    <i> [Bit 4] RW (@ 0x5000001C) Port x lock bit y (y=  0..15) </i>
//    <check> 
//      <loc> ( (unsigned int) GPIOA_LCKR ) </loc>
//      <o.4..4> LCK4
//    </check>
//  </item>
//  


// -------------------------------  Field Item: GPIOA_LCKR_LCK3  ----------------------------------
// SVD Line: 7408

//  <item> SFDITEM_FIELD__GPIOA_LCKR_LCK3
//    <name> LCK3 </name>
//    <rw> 
//    <i> [Bit 3] RW (@ 0x5000001C) Port x lock bit y (y=  0..15) </i>
//    <check> 
//      <loc> ( (unsigned int) GPIOA_LCKR ) </loc>
//      <o.3..3> LCK3
//    </check>
//  </item>
//  


// -------------------------------  Field Item: GPIOA_LCKR_LCK2  ----------------------------------
// SVD Line: 7415

//  <item> SFDITEM_FIELD__GPIOA_LCKR_LCK2
//    <name> LCK2 </name>
//    <rw> 
//    <i> [Bit 2] RW (@ 0x5000001C) Port x lock bit y (y=  0..15) </i>
//    <check> 
//      <loc> ( (unsigned int) GPIOA_LCKR ) </loc>
//      <o.2..2> LCK2
//    </check>
//  </item>
//  


// -------------------------------  Field Item: GPIOA_LCKR_LCK1  ----------------------------------
// SVD Line: 7422

//  <item> SFDITEM_FIELD__GPIOA_LCKR_LCK1
//    <name> LCK1 </name>
//    <rw> 
//    <i> [Bit 1] RW (@ 0x5000001C) Port x lock bit y (y=  0..15) </i>
//    <check> 
//      <loc> ( (unsigned int) GPIOA_LCKR ) </loc>
//      <o.1..1> LCK1
//    </check>
//  </item>
//  


// -------------------------------  Field Item: GPIOA_LCKR_LCK0  ----------------------------------
// SVD Line: 7429

//  <item> SFDITEM_FIELD__GPIOA_LCKR_LCK0
//    <name> LCK0 </name>
//    <rw> 
//    <i> [Bit 0] RW (@ 0x5000001C) Port x lock bit y (y=  0..15) </i>
//    <check> 
//      <loc> ( (unsigned int) GPIOA_LCKR ) </loc>
//      <o.0..0> LCK0
//    </check>
//  </item>
//  


// -------------------------------  Register RTree: GPIOA_LCKR  -----------------------------------
// SVD Line: 7307

//  <rtree> SFDITEM_REG__GPIOA_LCKR
//    <name> LCKR </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x5000001C) GPIO port configuration lock  register </i>
//    <loc> ( (unsigned int)((GPIOA_LCKR >> 0) & 0xFFFFFFFF), ((GPIOA_LCKR = (GPIOA_LCKR & ~(0x1FFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0x1FFFF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__GPIOA_LCKR_LCKK </item>
//    <item> SFDITEM_FIELD__GPIOA_LCKR_LCK15 </item>
//    <item> SFDITEM_FIELD__GPIOA_LCKR_LCK14 </item>
//    <item> SFDITEM_FIELD__GPIOA_LCKR_LCK13 </item>
//    <item> SFDITEM_FIELD__GPIOA_LCKR_LCK12 </item>
//    <item> SFDITEM_FIELD__GPIOA_LCKR_LCK11 </item>
//    <item> SFDITEM_FIELD__GPIOA_LCKR_LCK10 </item>
//    <item> SFDITEM_FIELD__GPIOA_LCKR_LCK9 </item>
//    <item> SFDITEM_FIELD__GPIOA_LCKR_LCK8 </item>
//    <item> SFDITEM_FIELD__GPIOA_LCKR_LCK7 </item>
//    <item> SFDITEM_FIELD__GPIOA_LCKR_LCK6 </item>
//    <item> SFDITEM_FIELD__GPIOA_LCKR_LCK5 </item>
//    <item> SFDITEM_FIELD__GPIOA_LCKR_LCK4 </item>
//    <item> SFDITEM_FIELD__GPIOA_LCKR_LCK3 </item>
//    <item> SFDITEM_FIELD__GPIOA_LCKR_LCK2 </item>
//    <item> SFDITEM_FIELD__GPIOA_LCKR_LCK1 </item>
//    <item> SFDITEM_FIELD__GPIOA_LCKR_LCK0 </item>
//  </rtree>
//  


// ----------------------------  Register Item Address: GPIOA_AFRL  -------------------------------
// SVD Line: 7438

unsigned int GPIOA_AFRL __AT (0x50000020);



// ------------------------------  Field Item: GPIOA_AFRL_AFSEL7  ---------------------------------
// SVD Line: 7448

//  <item> SFDITEM_FIELD__GPIOA_AFRL_AFSEL7
//    <name> AFSEL7 </name>
//    <rw> 
//    <i> [Bits 31..28] RW (@ 0x50000020) Alternate function selection for port x  bit y (y = 0..7) </i>
//    <edit> 
//      <loc> ( (unsigned char)((GPIOA_AFRL >> 28) & 0xF), ((GPIOA_AFRL = (GPIOA_AFRL & ~(0xFUL << 28 )) | ((unsigned long)(Gui_u8:GuiVal & 0xF) << 28 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ------------------------------  Field Item: GPIOA_AFRL_AFSEL6  ---------------------------------
// SVD Line: 7455

//  <item> SFDITEM_FIELD__GPIOA_AFRL_AFSEL6
//    <name> AFSEL6 </name>
//    <rw> 
//    <i> [Bits 27..24] RW (@ 0x50000020) Alternate function selection for port x  bit y (y = 0..7) </i>
//    <edit> 
//      <loc> ( (unsigned char)((GPIOA_AFRL >> 24) & 0xF), ((GPIOA_AFRL = (GPIOA_AFRL & ~(0xFUL << 24 )) | ((unsigned long)(Gui_u8:GuiVal & 0xF) << 24 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ------------------------------  Field Item: GPIOA_AFRL_AFSEL5  ---------------------------------
// SVD Line: 7462

//  <item> SFDITEM_FIELD__GPIOA_AFRL_AFSEL5
//    <name> AFSEL5 </name>
//    <rw> 
//    <i> [Bits 23..20] RW (@ 0x50000020) Alternate function selection for port x  bit y (y = 0..7) </i>
//    <edit> 
//      <loc> ( (unsigned char)((GPIOA_AFRL >> 20) & 0xF), ((GPIOA_AFRL = (GPIOA_AFRL & ~(0xFUL << 20 )) | ((unsigned long)(Gui_u8:GuiVal & 0xF) << 20 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ------------------------------  Field Item: GPIOA_AFRL_AFSEL4  ---------------------------------
// SVD Line: 7469

//  <item> SFDITEM_FIELD__GPIOA_AFRL_AFSEL4
//    <name> AFSEL4 </name>
//    <rw> 
//    <i> [Bits 19..16] RW (@ 0x50000020) Alternate function selection for port x  bit y (y = 0..7) </i>
//    <edit> 
//      <loc> ( (unsigned char)((GPIOA_AFRL >> 16) & 0xF), ((GPIOA_AFRL = (GPIOA_AFRL & ~(0xFUL << 16 )) | ((unsigned long)(Gui_u8:GuiVal & 0xF) << 16 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ------------------------------  Field Item: GPIOA_AFRL_AFSEL3  ---------------------------------
// SVD Line: 7476

//  <item> SFDITEM_FIELD__GPIOA_AFRL_AFSEL3
//    <name> AFSEL3 </name>
//    <rw> 
//    <i> [Bits 15..12] RW (@ 0x50000020) Alternate function selection for port x  bit y (y = 0..7) </i>
//    <edit> 
//      <loc> ( (unsigned char)((GPIOA_AFRL >> 12) & 0xF), ((GPIOA_AFRL = (GPIOA_AFRL & ~(0xFUL << 12 )) | ((unsigned long)(Gui_u8:GuiVal & 0xF) << 12 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ------------------------------  Field Item: GPIOA_AFRL_AFSEL2  ---------------------------------
// SVD Line: 7483

//  <item> SFDITEM_FIELD__GPIOA_AFRL_AFSEL2
//    <name> AFSEL2 </name>
//    <rw> 
//    <i> [Bits 11..8] RW (@ 0x50000020) Alternate function selection for port x  bit y (y = 0..7) </i>
//    <edit> 
//      <loc> ( (unsigned char)((GPIOA_AFRL >> 8) & 0xF), ((GPIOA_AFRL = (GPIOA_AFRL & ~(0xFUL << 8 )) | ((unsigned long)(Gui_u8:GuiVal & 0xF) << 8 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ------------------------------  Field Item: GPIOA_AFRL_AFSEL1  ---------------------------------
// SVD Line: 7490

//  <item> SFDITEM_FIELD__GPIOA_AFRL_AFSEL1
//    <name> AFSEL1 </name>
//    <rw> 
//    <i> [Bits 7..4] RW (@ 0x50000020) Alternate function selection for port x  bit y (y = 0..7) </i>
//    <edit> 
//      <loc> ( (unsigned char)((GPIOA_AFRL >> 4) & 0xF), ((GPIOA_AFRL = (GPIOA_AFRL & ~(0xFUL << 4 )) | ((unsigned long)(Gui_u8:GuiVal & 0xF) << 4 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ------------------------------  Field Item: GPIOA_AFRL_AFSEL0  ---------------------------------
// SVD Line: 7497

//  <item> SFDITEM_FIELD__GPIOA_AFRL_AFSEL0
//    <name> AFSEL0 </name>
//    <rw> 
//    <i> [Bits 3..0] RW (@ 0x50000020) Alternate function selection for port x  bit y (y = 0..7) </i>
//    <edit> 
//      <loc> ( (unsigned char)((GPIOA_AFRL >> 0) & 0xF), ((GPIOA_AFRL = (GPIOA_AFRL & ~(0xFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -------------------------------  Register RTree: GPIOA_AFRL  -----------------------------------
// SVD Line: 7438

//  <rtree> SFDITEM_REG__GPIOA_AFRL
//    <name> AFRL </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x50000020) GPIO alternate function low  register </i>
//    <loc> ( (unsigned int)((GPIOA_AFRL >> 0) & 0xFFFFFFFF), ((GPIOA_AFRL = (GPIOA_AFRL & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__GPIOA_AFRL_AFSEL7 </item>
//    <item> SFDITEM_FIELD__GPIOA_AFRL_AFSEL6 </item>
//    <item> SFDITEM_FIELD__GPIOA_AFRL_AFSEL5 </item>
//    <item> SFDITEM_FIELD__GPIOA_AFRL_AFSEL4 </item>
//    <item> SFDITEM_FIELD__GPIOA_AFRL_AFSEL3 </item>
//    <item> SFDITEM_FIELD__GPIOA_AFRL_AFSEL2 </item>
//    <item> SFDITEM_FIELD__GPIOA_AFRL_AFSEL1 </item>
//    <item> SFDITEM_FIELD__GPIOA_AFRL_AFSEL0 </item>
//  </rtree>
//  


// ----------------------------  Register Item Address: GPIOA_AFRH  -------------------------------
// SVD Line: 7506

unsigned int GPIOA_AFRH __AT (0x50000024);



// -----------------------------  Field Item: GPIOA_AFRH_AFSEL15  ---------------------------------
// SVD Line: 7516

//  <item> SFDITEM_FIELD__GPIOA_AFRH_AFSEL15
//    <name> AFSEL15 </name>
//    <rw> 
//    <i> [Bits 31..28] RW (@ 0x50000024) Alternate function selection for port x  bit y (y = 8..15) </i>
//    <edit> 
//      <loc> ( (unsigned char)((GPIOA_AFRH >> 28) & 0xF), ((GPIOA_AFRH = (GPIOA_AFRH & ~(0xFUL << 28 )) | ((unsigned long)(Gui_u8:GuiVal & 0xF) << 28 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -----------------------------  Field Item: GPIOA_AFRH_AFSEL14  ---------------------------------
// SVD Line: 7523

//  <item> SFDITEM_FIELD__GPIOA_AFRH_AFSEL14
//    <name> AFSEL14 </name>
//    <rw> 
//    <i> [Bits 27..24] RW (@ 0x50000024) Alternate function selection for port x  bit y (y = 8..15) </i>
//    <edit> 
//      <loc> ( (unsigned char)((GPIOA_AFRH >> 24) & 0xF), ((GPIOA_AFRH = (GPIOA_AFRH & ~(0xFUL << 24 )) | ((unsigned long)(Gui_u8:GuiVal & 0xF) << 24 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -----------------------------  Field Item: GPIOA_AFRH_AFSEL13  ---------------------------------
// SVD Line: 7530

//  <item> SFDITEM_FIELD__GPIOA_AFRH_AFSEL13
//    <name> AFSEL13 </name>
//    <rw> 
//    <i> [Bits 23..20] RW (@ 0x50000024) Alternate function selection for port x  bit y (y = 8..15) </i>
//    <edit> 
//      <loc> ( (unsigned char)((GPIOA_AFRH >> 20) & 0xF), ((GPIOA_AFRH = (GPIOA_AFRH & ~(0xFUL << 20 )) | ((unsigned long)(Gui_u8:GuiVal & 0xF) << 20 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -----------------------------  Field Item: GPIOA_AFRH_AFSEL12  ---------------------------------
// SVD Line: 7537

//  <item> SFDITEM_FIELD__GPIOA_AFRH_AFSEL12
//    <name> AFSEL12 </name>
//    <rw> 
//    <i> [Bits 19..16] RW (@ 0x50000024) Alternate function selection for port x  bit y (y = 8..15) </i>
//    <edit> 
//      <loc> ( (unsigned char)((GPIOA_AFRH >> 16) & 0xF), ((GPIOA_AFRH = (GPIOA_AFRH & ~(0xFUL << 16 )) | ((unsigned long)(Gui_u8:GuiVal & 0xF) << 16 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -----------------------------  Field Item: GPIOA_AFRH_AFSEL11  ---------------------------------
// SVD Line: 7544

//  <item> SFDITEM_FIELD__GPIOA_AFRH_AFSEL11
//    <name> AFSEL11 </name>
//    <rw> 
//    <i> [Bits 15..12] RW (@ 0x50000024) Alternate function selection for port x  bit y (y = 8..15) </i>
//    <edit> 
//      <loc> ( (unsigned char)((GPIOA_AFRH >> 12) & 0xF), ((GPIOA_AFRH = (GPIOA_AFRH & ~(0xFUL << 12 )) | ((unsigned long)(Gui_u8:GuiVal & 0xF) << 12 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -----------------------------  Field Item: GPIOA_AFRH_AFSEL10  ---------------------------------
// SVD Line: 7551

//  <item> SFDITEM_FIELD__GPIOA_AFRH_AFSEL10
//    <name> AFSEL10 </name>
//    <rw> 
//    <i> [Bits 11..8] RW (@ 0x50000024) Alternate function selection for port x  bit y (y = 8..15) </i>
//    <edit> 
//      <loc> ( (unsigned char)((GPIOA_AFRH >> 8) & 0xF), ((GPIOA_AFRH = (GPIOA_AFRH & ~(0xFUL << 8 )) | ((unsigned long)(Gui_u8:GuiVal & 0xF) << 8 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ------------------------------  Field Item: GPIOA_AFRH_AFSEL9  ---------------------------------
// SVD Line: 7558

//  <item> SFDITEM_FIELD__GPIOA_AFRH_AFSEL9
//    <name> AFSEL9 </name>
//    <rw> 
//    <i> [Bits 7..4] RW (@ 0x50000024) Alternate function selection for port x  bit y (y = 8..15) </i>
//    <edit> 
//      <loc> ( (unsigned char)((GPIOA_AFRH >> 4) & 0xF), ((GPIOA_AFRH = (GPIOA_AFRH & ~(0xFUL << 4 )) | ((unsigned long)(Gui_u8:GuiVal & 0xF) << 4 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ------------------------------  Field Item: GPIOA_AFRH_AFSEL8  ---------------------------------
// SVD Line: 7565

//  <item> SFDITEM_FIELD__GPIOA_AFRH_AFSEL8
//    <name> AFSEL8 </name>
//    <rw> 
//    <i> [Bits 3..0] RW (@ 0x50000024) Alternate function selection for port x  bit y (y = 8..15) </i>
//    <edit> 
//      <loc> ( (unsigned char)((GPIOA_AFRH >> 0) & 0xF), ((GPIOA_AFRH = (GPIOA_AFRH & ~(0xFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -------------------------------  Register RTree: GPIOA_AFRH  -----------------------------------
// SVD Line: 7506

//  <rtree> SFDITEM_REG__GPIOA_AFRH
//    <name> AFRH </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x50000024) GPIO alternate function high  register </i>
//    <loc> ( (unsigned int)((GPIOA_AFRH >> 0) & 0xFFFFFFFF), ((GPIOA_AFRH = (GPIOA_AFRH & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__GPIOA_AFRH_AFSEL15 </item>
//    <item> SFDITEM_FIELD__GPIOA_AFRH_AFSEL14 </item>
//    <item> SFDITEM_FIELD__GPIOA_AFRH_AFSEL13 </item>
//    <item> SFDITEM_FIELD__GPIOA_AFRH_AFSEL12 </item>
//    <item> SFDITEM_FIELD__GPIOA_AFRH_AFSEL11 </item>
//    <item> SFDITEM_FIELD__GPIOA_AFRH_AFSEL10 </item>
//    <item> SFDITEM_FIELD__GPIOA_AFRH_AFSEL9 </item>
//    <item> SFDITEM_FIELD__GPIOA_AFRH_AFSEL8 </item>
//  </rtree>
//  


// ----------------------------  Register Item Address: GPIOA_BRR  --------------------------------
// SVD Line: 7574

unsigned int GPIOA_BRR __AT (0x50000028);



// --------------------------------  Field Item: GPIOA_BRR_BR0  -----------------------------------
// SVD Line: 7583

//  <item> SFDITEM_FIELD__GPIOA_BRR_BR0
//    <name> BR0 </name>
//    <w> 
//    <i> [Bit 0] WO (@ 0x50000028) Port Reset bit </i>
//    <check> 
//      <loc> ( (unsigned int) GPIOA_BRR ) </loc>
//      <o.0..0> BR0
//    </check>
//  </item>
//  


// --------------------------------  Field Item: GPIOA_BRR_BR1  -----------------------------------
// SVD Line: 7589

//  <item> SFDITEM_FIELD__GPIOA_BRR_BR1
//    <name> BR1 </name>
//    <w> 
//    <i> [Bit 1] WO (@ 0x50000028) Port Reset bit </i>
//    <check> 
//      <loc> ( (unsigned int) GPIOA_BRR ) </loc>
//      <o.1..1> BR1
//    </check>
//  </item>
//  


// --------------------------------  Field Item: GPIOA_BRR_BR2  -----------------------------------
// SVD Line: 7595

//  <item> SFDITEM_FIELD__GPIOA_BRR_BR2
//    <name> BR2 </name>
//    <w> 
//    <i> [Bit 2] WO (@ 0x50000028) Port Reset bit </i>
//    <check> 
//      <loc> ( (unsigned int) GPIOA_BRR ) </loc>
//      <o.2..2> BR2
//    </check>
//  </item>
//  


// --------------------------------  Field Item: GPIOA_BRR_BR3  -----------------------------------
// SVD Line: 7601

//  <item> SFDITEM_FIELD__GPIOA_BRR_BR3
//    <name> BR3 </name>
//    <w> 
//    <i> [Bit 3] WO (@ 0x50000028) Port Reset bit </i>
//    <check> 
//      <loc> ( (unsigned int) GPIOA_BRR ) </loc>
//      <o.3..3> BR3
//    </check>
//  </item>
//  


// --------------------------------  Field Item: GPIOA_BRR_BR4  -----------------------------------
// SVD Line: 7607

//  <item> SFDITEM_FIELD__GPIOA_BRR_BR4
//    <name> BR4 </name>
//    <w> 
//    <i> [Bit 4] WO (@ 0x50000028) Port Reset bit </i>
//    <check> 
//      <loc> ( (unsigned int) GPIOA_BRR ) </loc>
//      <o.4..4> BR4
//    </check>
//  </item>
//  


// --------------------------------  Field Item: GPIOA_BRR_BR5  -----------------------------------
// SVD Line: 7613

//  <item> SFDITEM_FIELD__GPIOA_BRR_BR5
//    <name> BR5 </name>
//    <w> 
//    <i> [Bit 5] WO (@ 0x50000028) Port Reset bit </i>
//    <check> 
//      <loc> ( (unsigned int) GPIOA_BRR ) </loc>
//      <o.5..5> BR5
//    </check>
//  </item>
//  


// --------------------------------  Field Item: GPIOA_BRR_BR6  -----------------------------------
// SVD Line: 7619

//  <item> SFDITEM_FIELD__GPIOA_BRR_BR6
//    <name> BR6 </name>
//    <w> 
//    <i> [Bit 6] WO (@ 0x50000028) Port Reset bit </i>
//    <check> 
//      <loc> ( (unsigned int) GPIOA_BRR ) </loc>
//      <o.6..6> BR6
//    </check>
//  </item>
//  


// --------------------------------  Field Item: GPIOA_BRR_BR7  -----------------------------------
// SVD Line: 7625

//  <item> SFDITEM_FIELD__GPIOA_BRR_BR7
//    <name> BR7 </name>
//    <w> 
//    <i> [Bit 7] WO (@ 0x50000028) Port Reset bit </i>
//    <check> 
//      <loc> ( (unsigned int) GPIOA_BRR ) </loc>
//      <o.7..7> BR7
//    </check>
//  </item>
//  


// --------------------------------  Field Item: GPIOA_BRR_BR8  -----------------------------------
// SVD Line: 7631

//  <item> SFDITEM_FIELD__GPIOA_BRR_BR8
//    <name> BR8 </name>
//    <w> 
//    <i> [Bit 8] WO (@ 0x50000028) Port Reset bit </i>
//    <check> 
//      <loc> ( (unsigned int) GPIOA_BRR ) </loc>
//      <o.8..8> BR8
//    </check>
//  </item>
//  


// --------------------------------  Field Item: GPIOA_BRR_BR9  -----------------------------------
// SVD Line: 7637

//  <item> SFDITEM_FIELD__GPIOA_BRR_BR9
//    <name> BR9 </name>
//    <w> 
//    <i> [Bit 9] WO (@ 0x50000028) Port Reset bit </i>
//    <check> 
//      <loc> ( (unsigned int) GPIOA_BRR ) </loc>
//      <o.9..9> BR9
//    </check>
//  </item>
//  


// -------------------------------  Field Item: GPIOA_BRR_BR10  -----------------------------------
// SVD Line: 7643

//  <item> SFDITEM_FIELD__GPIOA_BRR_BR10
//    <name> BR10 </name>
//    <w> 
//    <i> [Bit 10] WO (@ 0x50000028) Port Reset bit </i>
//    <check> 
//      <loc> ( (unsigned int) GPIOA_BRR ) </loc>
//      <o.10..10> BR10
//    </check>
//  </item>
//  


// -------------------------------  Field Item: GPIOA_BRR_BR11  -----------------------------------
// SVD Line: 7649

//  <item> SFDITEM_FIELD__GPIOA_BRR_BR11
//    <name> BR11 </name>
//    <w> 
//    <i> [Bit 11] WO (@ 0x50000028) Port Reset bit </i>
//    <check> 
//      <loc> ( (unsigned int) GPIOA_BRR ) </loc>
//      <o.11..11> BR11
//    </check>
//  </item>
//  


// -------------------------------  Field Item: GPIOA_BRR_BR12  -----------------------------------
// SVD Line: 7655

//  <item> SFDITEM_FIELD__GPIOA_BRR_BR12
//    <name> BR12 </name>
//    <w> 
//    <i> [Bit 12] WO (@ 0x50000028) Port Reset bit </i>
//    <check> 
//      <loc> ( (unsigned int) GPIOA_BRR ) </loc>
//      <o.12..12> BR12
//    </check>
//  </item>
//  


// -------------------------------  Field Item: GPIOA_BRR_BR13  -----------------------------------
// SVD Line: 7661

//  <item> SFDITEM_FIELD__GPIOA_BRR_BR13
//    <name> BR13 </name>
//    <w> 
//    <i> [Bit 13] WO (@ 0x50000028) Port Reset bit </i>
//    <check> 
//      <loc> ( (unsigned int) GPIOA_BRR ) </loc>
//      <o.13..13> BR13
//    </check>
//  </item>
//  


// -------------------------------  Field Item: GPIOA_BRR_BR14  -----------------------------------
// SVD Line: 7667

//  <item> SFDITEM_FIELD__GPIOA_BRR_BR14
//    <name> BR14 </name>
//    <w> 
//    <i> [Bit 14] WO (@ 0x50000028) Port Reset bit </i>
//    <check> 
//      <loc> ( (unsigned int) GPIOA_BRR ) </loc>
//      <o.14..14> BR14
//    </check>
//  </item>
//  


// -------------------------------  Field Item: GPIOA_BRR_BR15  -----------------------------------
// SVD Line: 7673

//  <item> SFDITEM_FIELD__GPIOA_BRR_BR15
//    <name> BR15 </name>
//    <w> 
//    <i> [Bit 15] WO (@ 0x50000028) Port Reset bit </i>
//    <check> 
//      <loc> ( (unsigned int) GPIOA_BRR ) </loc>
//      <o.15..15> BR15
//    </check>
//  </item>
//  


// --------------------------------  Register RTree: GPIOA_BRR  -----------------------------------
// SVD Line: 7574

//  <rtree> SFDITEM_REG__GPIOA_BRR
//    <name> BRR </name>
//    <w> 
//    <i> [Bits 31..0] WO (@ 0x50000028) port bit reset register </i>
//    <loc> ( (unsigned int)((GPIOA_BRR >> 0) & 0xFFFFFFFF), ((GPIOA_BRR = (GPIOA_BRR & ~(0xFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__GPIOA_BRR_BR0 </item>
//    <item> SFDITEM_FIELD__GPIOA_BRR_BR1 </item>
//    <item> SFDITEM_FIELD__GPIOA_BRR_BR2 </item>
//    <item> SFDITEM_FIELD__GPIOA_BRR_BR3 </item>
//    <item> SFDITEM_FIELD__GPIOA_BRR_BR4 </item>
//    <item> SFDITEM_FIELD__GPIOA_BRR_BR5 </item>
//    <item> SFDITEM_FIELD__GPIOA_BRR_BR6 </item>
//    <item> SFDITEM_FIELD__GPIOA_BRR_BR7 </item>
//    <item> SFDITEM_FIELD__GPIOA_BRR_BR8 </item>
//    <item> SFDITEM_FIELD__GPIOA_BRR_BR9 </item>
//    <item> SFDITEM_FIELD__GPIOA_BRR_BR10 </item>
//    <item> SFDITEM_FIELD__GPIOA_BRR_BR11 </item>
//    <item> SFDITEM_FIELD__GPIOA_BRR_BR12 </item>
//    <item> SFDITEM_FIELD__GPIOA_BRR_BR13 </item>
//    <item> SFDITEM_FIELD__GPIOA_BRR_BR14 </item>
//    <item> SFDITEM_FIELD__GPIOA_BRR_BR15 </item>
//  </rtree>
//  


// ---------------------------------  Peripheral View: GPIOA  -------------------------------------
// SVD Line: 6320

//  <view> GPIOA
//    <name> GPIOA </name>
//    <item> SFDITEM_REG__GPIOA_MODER </item>
//    <item> SFDITEM_REG__GPIOA_OTYPER </item>
//    <item> SFDITEM_REG__GPIOA_OSPEEDR </item>
//    <item> SFDITEM_REG__GPIOA_PUPDR </item>
//    <item> SFDITEM_REG__GPIOA_IDR </item>
//    <item> SFDITEM_REG__GPIOA_ODR </item>
//    <item> SFDITEM_REG__GPIOA_BSRR </item>
//    <item> SFDITEM_REG__GPIOA_LCKR </item>
//    <item> SFDITEM_REG__GPIOA_AFRL </item>
//    <item> SFDITEM_REG__GPIOA_AFRH </item>
//    <item> SFDITEM_REG__GPIOA_BRR </item>
//  </view>
//  


// ---------------------------  Register Item Address: GPIOB_MODER  -------------------------------
// SVD Line: 7694

unsigned int GPIOB_MODER __AT (0x50000400);



// -----------------------------  Field Item: GPIOB_MODER_MODER15  --------------------------------
// SVD Line: 7703

//  <item> SFDITEM_FIELD__GPIOB_MODER_MODER15
//    <name> MODER15 </name>
//    <rw> 
//    <i> [Bits 31..30] RW (@ 0x50000400) Port x configuration bits (y =  0..15) </i>
//    <edit> 
//      <loc> ( (unsigned char)((GPIOB_MODER >> 30) & 0x3), ((GPIOB_MODER = (GPIOB_MODER & ~(0x3UL << 30 )) | ((unsigned long)(Gui_u8:GuiVal & 0x3) << 30 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -----------------------------  Field Item: GPIOB_MODER_MODER14  --------------------------------
// SVD Line: 7710

//  <item> SFDITEM_FIELD__GPIOB_MODER_MODER14
//    <name> MODER14 </name>
//    <rw> 
//    <i> [Bits 29..28] RW (@ 0x50000400) Port x configuration bits (y =  0..15) </i>
//    <edit> 
//      <loc> ( (unsigned char)((GPIOB_MODER >> 28) & 0x3), ((GPIOB_MODER = (GPIOB_MODER & ~(0x3UL << 28 )) | ((unsigned long)(Gui_u8:GuiVal & 0x3) << 28 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -----------------------------  Field Item: GPIOB_MODER_MODER13  --------------------------------
// SVD Line: 7717

//  <item> SFDITEM_FIELD__GPIOB_MODER_MODER13
//    <name> MODER13 </name>
//    <rw> 
//    <i> [Bits 27..26] RW (@ 0x50000400) Port x configuration bits (y =  0..15) </i>
//    <edit> 
//      <loc> ( (unsigned char)((GPIOB_MODER >> 26) & 0x3), ((GPIOB_MODER = (GPIOB_MODER & ~(0x3UL << 26 )) | ((unsigned long)(Gui_u8:GuiVal & 0x3) << 26 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -----------------------------  Field Item: GPIOB_MODER_MODER12  --------------------------------
// SVD Line: 7724

//  <item> SFDITEM_FIELD__GPIOB_MODER_MODER12
//    <name> MODER12 </name>
//    <rw> 
//    <i> [Bits 25..24] RW (@ 0x50000400) Port x configuration bits (y =  0..15) </i>
//    <edit> 
//      <loc> ( (unsigned char)((GPIOB_MODER >> 24) & 0x3), ((GPIOB_MODER = (GPIOB_MODER & ~(0x3UL << 24 )) | ((unsigned long)(Gui_u8:GuiVal & 0x3) << 24 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -----------------------------  Field Item: GPIOB_MODER_MODER11  --------------------------------
// SVD Line: 7731

//  <item> SFDITEM_FIELD__GPIOB_MODER_MODER11
//    <name> MODER11 </name>
//    <rw> 
//    <i> [Bits 23..22] RW (@ 0x50000400) Port x configuration bits (y =  0..15) </i>
//    <edit> 
//      <loc> ( (unsigned char)((GPIOB_MODER >> 22) & 0x3), ((GPIOB_MODER = (GPIOB_MODER & ~(0x3UL << 22 )) | ((unsigned long)(Gui_u8:GuiVal & 0x3) << 22 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -----------------------------  Field Item: GPIOB_MODER_MODER10  --------------------------------
// SVD Line: 7738

//  <item> SFDITEM_FIELD__GPIOB_MODER_MODER10
//    <name> MODER10 </name>
//    <rw> 
//    <i> [Bits 21..20] RW (@ 0x50000400) Port x configuration bits (y =  0..15) </i>
//    <edit> 
//      <loc> ( (unsigned char)((GPIOB_MODER >> 20) & 0x3), ((GPIOB_MODER = (GPIOB_MODER & ~(0x3UL << 20 )) | ((unsigned long)(Gui_u8:GuiVal & 0x3) << 20 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -----------------------------  Field Item: GPIOB_MODER_MODER9  ---------------------------------
// SVD Line: 7745

//  <item> SFDITEM_FIELD__GPIOB_MODER_MODER9
//    <name> MODER9 </name>
//    <rw> 
//    <i> [Bits 19..18] RW (@ 0x50000400) Port x configuration bits (y =  0..15) </i>
//    <edit> 
//      <loc> ( (unsigned char)((GPIOB_MODER >> 18) & 0x3), ((GPIOB_MODER = (GPIOB_MODER & ~(0x3UL << 18 )) | ((unsigned long)(Gui_u8:GuiVal & 0x3) << 18 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -----------------------------  Field Item: GPIOB_MODER_MODER8  ---------------------------------
// SVD Line: 7752

//  <item> SFDITEM_FIELD__GPIOB_MODER_MODER8
//    <name> MODER8 </name>
//    <rw> 
//    <i> [Bits 17..16] RW (@ 0x50000400) Port x configuration bits (y =  0..15) </i>
//    <edit> 
//      <loc> ( (unsigned char)((GPIOB_MODER >> 16) & 0x3), ((GPIOB_MODER = (GPIOB_MODER & ~(0x3UL << 16 )) | ((unsigned long)(Gui_u8:GuiVal & 0x3) << 16 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -----------------------------  Field Item: GPIOB_MODER_MODER7  ---------------------------------
// SVD Line: 7759

//  <item> SFDITEM_FIELD__GPIOB_MODER_MODER7
//    <name> MODER7 </name>
//    <rw> 
//    <i> [Bits 15..14] RW (@ 0x50000400) Port x configuration bits (y =  0..15) </i>
//    <edit> 
//      <loc> ( (unsigned char)((GPIOB_MODER >> 14) & 0x3), ((GPIOB_MODER = (GPIOB_MODER & ~(0x3UL << 14 )) | ((unsigned long)(Gui_u8:GuiVal & 0x3) << 14 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -----------------------------  Field Item: GPIOB_MODER_MODER6  ---------------------------------
// SVD Line: 7766

//  <item> SFDITEM_FIELD__GPIOB_MODER_MODER6
//    <name> MODER6 </name>
//    <rw> 
//    <i> [Bits 13..12] RW (@ 0x50000400) Port x configuration bits (y =  0..15) </i>
//    <edit> 
//      <loc> ( (unsigned char)((GPIOB_MODER >> 12) & 0x3), ((GPIOB_MODER = (GPIOB_MODER & ~(0x3UL << 12 )) | ((unsigned long)(Gui_u8:GuiVal & 0x3) << 12 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -----------------------------  Field Item: GPIOB_MODER_MODER5  ---------------------------------
// SVD Line: 7773

//  <item> SFDITEM_FIELD__GPIOB_MODER_MODER5
//    <name> MODER5 </name>
//    <rw> 
//    <i> [Bits 11..10] RW (@ 0x50000400) Port x configuration bits (y =  0..15) </i>
//    <edit> 
//      <loc> ( (unsigned char)((GPIOB_MODER >> 10) & 0x3), ((GPIOB_MODER = (GPIOB_MODER & ~(0x3UL << 10 )) | ((unsigned long)(Gui_u8:GuiVal & 0x3) << 10 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -----------------------------  Field Item: GPIOB_MODER_MODER4  ---------------------------------
// SVD Line: 7780

//  <item> SFDITEM_FIELD__GPIOB_MODER_MODER4
//    <name> MODER4 </name>
//    <rw> 
//    <i> [Bits 9..8] RW (@ 0x50000400) Port x configuration bits (y =  0..15) </i>
//    <edit> 
//      <loc> ( (unsigned char)((GPIOB_MODER >> 8) & 0x3), ((GPIOB_MODER = (GPIOB_MODER & ~(0x3UL << 8 )) | ((unsigned long)(Gui_u8:GuiVal & 0x3) << 8 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -----------------------------  Field Item: GPIOB_MODER_MODER3  ---------------------------------
// SVD Line: 7787

//  <item> SFDITEM_FIELD__GPIOB_MODER_MODER3
//    <name> MODER3 </name>
//    <rw> 
//    <i> [Bits 7..6] RW (@ 0x50000400) Port x configuration bits (y =  0..15) </i>
//    <edit> 
//      <loc> ( (unsigned char)((GPIOB_MODER >> 6) & 0x3), ((GPIOB_MODER = (GPIOB_MODER & ~(0x3UL << 6 )) | ((unsigned long)(Gui_u8:GuiVal & 0x3) << 6 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -----------------------------  Field Item: GPIOB_MODER_MODER2  ---------------------------------
// SVD Line: 7794

//  <item> SFDITEM_FIELD__GPIOB_MODER_MODER2
//    <name> MODER2 </name>
//    <rw> 
//    <i> [Bits 5..4] RW (@ 0x50000400) Port x configuration bits (y =  0..15) </i>
//    <edit> 
//      <loc> ( (unsigned char)((GPIOB_MODER >> 4) & 0x3), ((GPIOB_MODER = (GPIOB_MODER & ~(0x3UL << 4 )) | ((unsigned long)(Gui_u8:GuiVal & 0x3) << 4 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -----------------------------  Field Item: GPIOB_MODER_MODER1  ---------------------------------
// SVD Line: 7801

//  <item> SFDITEM_FIELD__GPIOB_MODER_MODER1
//    <name> MODER1 </name>
//    <rw> 
//    <i> [Bits 3..2] RW (@ 0x50000400) Port x configuration bits (y =  0..15) </i>
//    <edit> 
//      <loc> ( (unsigned char)((GPIOB_MODER >> 2) & 0x3), ((GPIOB_MODER = (GPIOB_MODER & ~(0x3UL << 2 )) | ((unsigned long)(Gui_u8:GuiVal & 0x3) << 2 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -----------------------------  Field Item: GPIOB_MODER_MODER0  ---------------------------------
// SVD Line: 7808

//  <item> SFDITEM_FIELD__GPIOB_MODER_MODER0
//    <name> MODER0 </name>
//    <rw> 
//    <i> [Bits 1..0] RW (@ 0x50000400) Port x configuration bits (y =  0..15) </i>
//    <edit> 
//      <loc> ( (unsigned char)((GPIOB_MODER >> 0) & 0x3), ((GPIOB_MODER = (GPIOB_MODER & ~(0x3UL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0x3) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -------------------------------  Register RTree: GPIOB_MODER  ----------------------------------
// SVD Line: 7694

//  <rtree> SFDITEM_REG__GPIOB_MODER
//    <name> MODER </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x50000400) GPIO port mode register </i>
//    <loc> ( (unsigned int)((GPIOB_MODER >> 0) & 0xFFFFFFFF), ((GPIOB_MODER = (GPIOB_MODER & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__GPIOB_MODER_MODER15 </item>
//    <item> SFDITEM_FIELD__GPIOB_MODER_MODER14 </item>
//    <item> SFDITEM_FIELD__GPIOB_MODER_MODER13 </item>
//    <item> SFDITEM_FIELD__GPIOB_MODER_MODER12 </item>
//    <item> SFDITEM_FIELD__GPIOB_MODER_MODER11 </item>
//    <item> SFDITEM_FIELD__GPIOB_MODER_MODER10 </item>
//    <item> SFDITEM_FIELD__GPIOB_MODER_MODER9 </item>
//    <item> SFDITEM_FIELD__GPIOB_MODER_MODER8 </item>
//    <item> SFDITEM_FIELD__GPIOB_MODER_MODER7 </item>
//    <item> SFDITEM_FIELD__GPIOB_MODER_MODER6 </item>
//    <item> SFDITEM_FIELD__GPIOB_MODER_MODER5 </item>
//    <item> SFDITEM_FIELD__GPIOB_MODER_MODER4 </item>
//    <item> SFDITEM_FIELD__GPIOB_MODER_MODER3 </item>
//    <item> SFDITEM_FIELD__GPIOB_MODER_MODER2 </item>
//    <item> SFDITEM_FIELD__GPIOB_MODER_MODER1 </item>
//    <item> SFDITEM_FIELD__GPIOB_MODER_MODER0 </item>
//  </rtree>
//  


// ---------------------------  Register Item Address: GPIOB_OTYPER  ------------------------------
// SVD Line: 7817

unsigned int GPIOB_OTYPER __AT (0x50000404);



// ------------------------------  Field Item: GPIOB_OTYPER_OT15  ---------------------------------
// SVD Line: 7826

//  <item> SFDITEM_FIELD__GPIOB_OTYPER_OT15
//    <name> OT15 </name>
//    <rw> 
//    <i> [Bit 15] RW (@ 0x50000404) Port x configuration bits (y =  0..15) </i>
//    <check> 
//      <loc> ( (unsigned int) GPIOB_OTYPER ) </loc>
//      <o.15..15> OT15
//    </check>
//  </item>
//  


// ------------------------------  Field Item: GPIOB_OTYPER_OT14  ---------------------------------
// SVD Line: 7833

//  <item> SFDITEM_FIELD__GPIOB_OTYPER_OT14
//    <name> OT14 </name>
//    <rw> 
//    <i> [Bit 14] RW (@ 0x50000404) Port x configuration bits (y =  0..15) </i>
//    <check> 
//      <loc> ( (unsigned int) GPIOB_OTYPER ) </loc>
//      <o.14..14> OT14
//    </check>
//  </item>
//  


// ------------------------------  Field Item: GPIOB_OTYPER_OT13  ---------------------------------
// SVD Line: 7840

//  <item> SFDITEM_FIELD__GPIOB_OTYPER_OT13
//    <name> OT13 </name>
//    <rw> 
//    <i> [Bit 13] RW (@ 0x50000404) Port x configuration bits (y =  0..15) </i>
//    <check> 
//      <loc> ( (unsigned int) GPIOB_OTYPER ) </loc>
//      <o.13..13> OT13
//    </check>
//  </item>
//  


// ------------------------------  Field Item: GPIOB_OTYPER_OT12  ---------------------------------
// SVD Line: 7847

//  <item> SFDITEM_FIELD__GPIOB_OTYPER_OT12
//    <name> OT12 </name>
//    <rw> 
//    <i> [Bit 12] RW (@ 0x50000404) Port x configuration bits (y =  0..15) </i>
//    <check> 
//      <loc> ( (unsigned int) GPIOB_OTYPER ) </loc>
//      <o.12..12> OT12
//    </check>
//  </item>
//  


// ------------------------------  Field Item: GPIOB_OTYPER_OT11  ---------------------------------
// SVD Line: 7854

//  <item> SFDITEM_FIELD__GPIOB_OTYPER_OT11
//    <name> OT11 </name>
//    <rw> 
//    <i> [Bit 11] RW (@ 0x50000404) Port x configuration bits (y =  0..15) </i>
//    <check> 
//      <loc> ( (unsigned int) GPIOB_OTYPER ) </loc>
//      <o.11..11> OT11
//    </check>
//  </item>
//  


// ------------------------------  Field Item: GPIOB_OTYPER_OT10  ---------------------------------
// SVD Line: 7861

//  <item> SFDITEM_FIELD__GPIOB_OTYPER_OT10
//    <name> OT10 </name>
//    <rw> 
//    <i> [Bit 10] RW (@ 0x50000404) Port x configuration bits (y =  0..15) </i>
//    <check> 
//      <loc> ( (unsigned int) GPIOB_OTYPER ) </loc>
//      <o.10..10> OT10
//    </check>
//  </item>
//  


// ------------------------------  Field Item: GPIOB_OTYPER_OT9  ----------------------------------
// SVD Line: 7868

//  <item> SFDITEM_FIELD__GPIOB_OTYPER_OT9
//    <name> OT9 </name>
//    <rw> 
//    <i> [Bit 9] RW (@ 0x50000404) Port x configuration bits (y =  0..15) </i>
//    <check> 
//      <loc> ( (unsigned int) GPIOB_OTYPER ) </loc>
//      <o.9..9> OT9
//    </check>
//  </item>
//  


// ------------------------------  Field Item: GPIOB_OTYPER_OT8  ----------------------------------
// SVD Line: 7875

//  <item> SFDITEM_FIELD__GPIOB_OTYPER_OT8
//    <name> OT8 </name>
//    <rw> 
//    <i> [Bit 8] RW (@ 0x50000404) Port x configuration bits (y =  0..15) </i>
//    <check> 
//      <loc> ( (unsigned int) GPIOB_OTYPER ) </loc>
//      <o.8..8> OT8
//    </check>
//  </item>
//  


// ------------------------------  Field Item: GPIOB_OTYPER_OT7  ----------------------------------
// SVD Line: 7882

//  <item> SFDITEM_FIELD__GPIOB_OTYPER_OT7
//    <name> OT7 </name>
//    <rw> 
//    <i> [Bit 7] RW (@ 0x50000404) Port x configuration bits (y =  0..15) </i>
//    <check> 
//      <loc> ( (unsigned int) GPIOB_OTYPER ) </loc>
//      <o.7..7> OT7
//    </check>
//  </item>
//  


// ------------------------------  Field Item: GPIOB_OTYPER_OT6  ----------------------------------
// SVD Line: 7889

//  <item> SFDITEM_FIELD__GPIOB_OTYPER_OT6
//    <name> OT6 </name>
//    <rw> 
//    <i> [Bit 6] RW (@ 0x50000404) Port x configuration bits (y =  0..15) </i>
//    <check> 
//      <loc> ( (unsigned int) GPIOB_OTYPER ) </loc>
//      <o.6..6> OT6
//    </check>
//  </item>
//  


// ------------------------------  Field Item: GPIOB_OTYPER_OT5  ----------------------------------
// SVD Line: 7896

//  <item> SFDITEM_FIELD__GPIOB_OTYPER_OT5
//    <name> OT5 </name>
//    <rw> 
//    <i> [Bit 5] RW (@ 0x50000404) Port x configuration bits (y =  0..15) </i>
//    <check> 
//      <loc> ( (unsigned int) GPIOB_OTYPER ) </loc>
//      <o.5..5> OT5
//    </check>
//  </item>
//  


// ------------------------------  Field Item: GPIOB_OTYPER_OT4  ----------------------------------
// SVD Line: 7903

//  <item> SFDITEM_FIELD__GPIOB_OTYPER_OT4
//    <name> OT4 </name>
//    <rw> 
//    <i> [Bit 4] RW (@ 0x50000404) Port x configuration bits (y =  0..15) </i>
//    <check> 
//      <loc> ( (unsigned int) GPIOB_OTYPER ) </loc>
//      <o.4..4> OT4
//    </check>
//  </item>
//  


// ------------------------------  Field Item: GPIOB_OTYPER_OT3  ----------------------------------
// SVD Line: 7910

//  <item> SFDITEM_FIELD__GPIOB_OTYPER_OT3
//    <name> OT3 </name>
//    <rw> 
//    <i> [Bit 3] RW (@ 0x50000404) Port x configuration bits (y =  0..15) </i>
//    <check> 
//      <loc> ( (unsigned int) GPIOB_OTYPER ) </loc>
//      <o.3..3> OT3
//    </check>
//  </item>
//  


// ------------------------------  Field Item: GPIOB_OTYPER_OT2  ----------------------------------
// SVD Line: 7917

//  <item> SFDITEM_FIELD__GPIOB_OTYPER_OT2
//    <name> OT2 </name>
//    <rw> 
//    <i> [Bit 2] RW (@ 0x50000404) Port x configuration bits (y =  0..15) </i>
//    <check> 
//      <loc> ( (unsigned int) GPIOB_OTYPER ) </loc>
//      <o.2..2> OT2
//    </check>
//  </item>
//  


// ------------------------------  Field Item: GPIOB_OTYPER_OT1  ----------------------------------
// SVD Line: 7924

//  <item> SFDITEM_FIELD__GPIOB_OTYPER_OT1
//    <name> OT1 </name>
//    <rw> 
//    <i> [Bit 1] RW (@ 0x50000404) Port x configuration bits (y =  0..15) </i>
//    <check> 
//      <loc> ( (unsigned int) GPIOB_OTYPER ) </loc>
//      <o.1..1> OT1
//    </check>
//  </item>
//  


// ------------------------------  Field Item: GPIOB_OTYPER_OT0  ----------------------------------
// SVD Line: 7931

//  <item> SFDITEM_FIELD__GPIOB_OTYPER_OT0
//    <name> OT0 </name>
//    <rw> 
//    <i> [Bit 0] RW (@ 0x50000404) Port x configuration bits (y =  0..15) </i>
//    <check> 
//      <loc> ( (unsigned int) GPIOB_OTYPER ) </loc>
//      <o.0..0> OT0
//    </check>
//  </item>
//  


// ------------------------------  Register RTree: GPIOB_OTYPER  ----------------------------------
// SVD Line: 7817

//  <rtree> SFDITEM_REG__GPIOB_OTYPER
//    <name> OTYPER </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x50000404) GPIO port output type register </i>
//    <loc> ( (unsigned int)((GPIOB_OTYPER >> 0) & 0xFFFFFFFF), ((GPIOB_OTYPER = (GPIOB_OTYPER & ~(0xFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__GPIOB_OTYPER_OT15 </item>
//    <item> SFDITEM_FIELD__GPIOB_OTYPER_OT14 </item>
//    <item> SFDITEM_FIELD__GPIOB_OTYPER_OT13 </item>
//    <item> SFDITEM_FIELD__GPIOB_OTYPER_OT12 </item>
//    <item> SFDITEM_FIELD__GPIOB_OTYPER_OT11 </item>
//    <item> SFDITEM_FIELD__GPIOB_OTYPER_OT10 </item>
//    <item> SFDITEM_FIELD__GPIOB_OTYPER_OT9 </item>
//    <item> SFDITEM_FIELD__GPIOB_OTYPER_OT8 </item>
//    <item> SFDITEM_FIELD__GPIOB_OTYPER_OT7 </item>
//    <item> SFDITEM_FIELD__GPIOB_OTYPER_OT6 </item>
//    <item> SFDITEM_FIELD__GPIOB_OTYPER_OT5 </item>
//    <item> SFDITEM_FIELD__GPIOB_OTYPER_OT4 </item>
//    <item> SFDITEM_FIELD__GPIOB_OTYPER_OT3 </item>
//    <item> SFDITEM_FIELD__GPIOB_OTYPER_OT2 </item>
//    <item> SFDITEM_FIELD__GPIOB_OTYPER_OT1 </item>
//    <item> SFDITEM_FIELD__GPIOB_OTYPER_OT0 </item>
//  </rtree>
//  


// --------------------------  Register Item Address: GPIOB_OSPEEDR  ------------------------------
// SVD Line: 7940

unsigned int GPIOB_OSPEEDR __AT (0x50000408);



// ---------------------------  Field Item: GPIOB_OSPEEDR_OSPEEDR15  ------------------------------
// SVD Line: 7950

//  <item> SFDITEM_FIELD__GPIOB_OSPEEDR_OSPEEDR15
//    <name> OSPEEDR15 </name>
//    <rw> 
//    <i> [Bits 31..30] RW (@ 0x50000408) Port x configuration bits (y =  0..15) </i>
//    <edit> 
//      <loc> ( (unsigned char)((GPIOB_OSPEEDR >> 30) & 0x3), ((GPIOB_OSPEEDR = (GPIOB_OSPEEDR & ~(0x3UL << 30 )) | ((unsigned long)(Gui_u8:GuiVal & 0x3) << 30 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ---------------------------  Field Item: GPIOB_OSPEEDR_OSPEEDR14  ------------------------------
// SVD Line: 7957

//  <item> SFDITEM_FIELD__GPIOB_OSPEEDR_OSPEEDR14
//    <name> OSPEEDR14 </name>
//    <rw> 
//    <i> [Bits 29..28] RW (@ 0x50000408) Port x configuration bits (y =  0..15) </i>
//    <edit> 
//      <loc> ( (unsigned char)((GPIOB_OSPEEDR >> 28) & 0x3), ((GPIOB_OSPEEDR = (GPIOB_OSPEEDR & ~(0x3UL << 28 )) | ((unsigned long)(Gui_u8:GuiVal & 0x3) << 28 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ---------------------------  Field Item: GPIOB_OSPEEDR_OSPEEDR13  ------------------------------
// SVD Line: 7964

//  <item> SFDITEM_FIELD__GPIOB_OSPEEDR_OSPEEDR13
//    <name> OSPEEDR13 </name>
//    <rw> 
//    <i> [Bits 27..26] RW (@ 0x50000408) Port x configuration bits (y =  0..15) </i>
//    <edit> 
//      <loc> ( (unsigned char)((GPIOB_OSPEEDR >> 26) & 0x3), ((GPIOB_OSPEEDR = (GPIOB_OSPEEDR & ~(0x3UL << 26 )) | ((unsigned long)(Gui_u8:GuiVal & 0x3) << 26 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ---------------------------  Field Item: GPIOB_OSPEEDR_OSPEEDR12  ------------------------------
// SVD Line: 7971

//  <item> SFDITEM_FIELD__GPIOB_OSPEEDR_OSPEEDR12
//    <name> OSPEEDR12 </name>
//    <rw> 
//    <i> [Bits 25..24] RW (@ 0x50000408) Port x configuration bits (y =  0..15) </i>
//    <edit> 
//      <loc> ( (unsigned char)((GPIOB_OSPEEDR >> 24) & 0x3), ((GPIOB_OSPEEDR = (GPIOB_OSPEEDR & ~(0x3UL << 24 )) | ((unsigned long)(Gui_u8:GuiVal & 0x3) << 24 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ---------------------------  Field Item: GPIOB_OSPEEDR_OSPEEDR11  ------------------------------
// SVD Line: 7978

//  <item> SFDITEM_FIELD__GPIOB_OSPEEDR_OSPEEDR11
//    <name> OSPEEDR11 </name>
//    <rw> 
//    <i> [Bits 23..22] RW (@ 0x50000408) Port x configuration bits (y =  0..15) </i>
//    <edit> 
//      <loc> ( (unsigned char)((GPIOB_OSPEEDR >> 22) & 0x3), ((GPIOB_OSPEEDR = (GPIOB_OSPEEDR & ~(0x3UL << 22 )) | ((unsigned long)(Gui_u8:GuiVal & 0x3) << 22 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ---------------------------  Field Item: GPIOB_OSPEEDR_OSPEEDR10  ------------------------------
// SVD Line: 7985

//  <item> SFDITEM_FIELD__GPIOB_OSPEEDR_OSPEEDR10
//    <name> OSPEEDR10 </name>
//    <rw> 
//    <i> [Bits 21..20] RW (@ 0x50000408) Port x configuration bits (y =  0..15) </i>
//    <edit> 
//      <loc> ( (unsigned char)((GPIOB_OSPEEDR >> 20) & 0x3), ((GPIOB_OSPEEDR = (GPIOB_OSPEEDR & ~(0x3UL << 20 )) | ((unsigned long)(Gui_u8:GuiVal & 0x3) << 20 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ---------------------------  Field Item: GPIOB_OSPEEDR_OSPEEDR9  -------------------------------
// SVD Line: 7992

//  <item> SFDITEM_FIELD__GPIOB_OSPEEDR_OSPEEDR9
//    <name> OSPEEDR9 </name>
//    <rw> 
//    <i> [Bits 19..18] RW (@ 0x50000408) Port x configuration bits (y =  0..15) </i>
//    <edit> 
//      <loc> ( (unsigned char)((GPIOB_OSPEEDR >> 18) & 0x3), ((GPIOB_OSPEEDR = (GPIOB_OSPEEDR & ~(0x3UL << 18 )) | ((unsigned long)(Gui_u8:GuiVal & 0x3) << 18 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ---------------------------  Field Item: GPIOB_OSPEEDR_OSPEEDR8  -------------------------------
// SVD Line: 7999

//  <item> SFDITEM_FIELD__GPIOB_OSPEEDR_OSPEEDR8
//    <name> OSPEEDR8 </name>
//    <rw> 
//    <i> [Bits 17..16] RW (@ 0x50000408) Port x configuration bits (y =  0..15) </i>
//    <edit> 
//      <loc> ( (unsigned char)((GPIOB_OSPEEDR >> 16) & 0x3), ((GPIOB_OSPEEDR = (GPIOB_OSPEEDR & ~(0x3UL << 16 )) | ((unsigned long)(Gui_u8:GuiVal & 0x3) << 16 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ---------------------------  Field Item: GPIOB_OSPEEDR_OSPEEDR7  -------------------------------
// SVD Line: 8006

//  <item> SFDITEM_FIELD__GPIOB_OSPEEDR_OSPEEDR7
//    <name> OSPEEDR7 </name>
//    <rw> 
//    <i> [Bits 15..14] RW (@ 0x50000408) Port x configuration bits (y =  0..15) </i>
//    <edit> 
//      <loc> ( (unsigned char)((GPIOB_OSPEEDR >> 14) & 0x3), ((GPIOB_OSPEEDR = (GPIOB_OSPEEDR & ~(0x3UL << 14 )) | ((unsigned long)(Gui_u8:GuiVal & 0x3) << 14 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ---------------------------  Field Item: GPIOB_OSPEEDR_OSPEEDR6  -------------------------------
// SVD Line: 8013

//  <item> SFDITEM_FIELD__GPIOB_OSPEEDR_OSPEEDR6
//    <name> OSPEEDR6 </name>
//    <rw> 
//    <i> [Bits 13..12] RW (@ 0x50000408) Port x configuration bits (y =  0..15) </i>
//    <edit> 
//      <loc> ( (unsigned char)((GPIOB_OSPEEDR >> 12) & 0x3), ((GPIOB_OSPEEDR = (GPIOB_OSPEEDR & ~(0x3UL << 12 )) | ((unsigned long)(Gui_u8:GuiVal & 0x3) << 12 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ---------------------------  Field Item: GPIOB_OSPEEDR_OSPEEDR5  -------------------------------
// SVD Line: 8020

//  <item> SFDITEM_FIELD__GPIOB_OSPEEDR_OSPEEDR5
//    <name> OSPEEDR5 </name>
//    <rw> 
//    <i> [Bits 11..10] RW (@ 0x50000408) Port x configuration bits (y =  0..15) </i>
//    <edit> 
//      <loc> ( (unsigned char)((GPIOB_OSPEEDR >> 10) & 0x3), ((GPIOB_OSPEEDR = (GPIOB_OSPEEDR & ~(0x3UL << 10 )) | ((unsigned long)(Gui_u8:GuiVal & 0x3) << 10 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ---------------------------  Field Item: GPIOB_OSPEEDR_OSPEEDR4  -------------------------------
// SVD Line: 8027

//  <item> SFDITEM_FIELD__GPIOB_OSPEEDR_OSPEEDR4
//    <name> OSPEEDR4 </name>
//    <rw> 
//    <i> [Bits 9..8] RW (@ 0x50000408) Port x configuration bits (y =  0..15) </i>
//    <edit> 
//      <loc> ( (unsigned char)((GPIOB_OSPEEDR >> 8) & 0x3), ((GPIOB_OSPEEDR = (GPIOB_OSPEEDR & ~(0x3UL << 8 )) | ((unsigned long)(Gui_u8:GuiVal & 0x3) << 8 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ---------------------------  Field Item: GPIOB_OSPEEDR_OSPEEDR3  -------------------------------
// SVD Line: 8034

//  <item> SFDITEM_FIELD__GPIOB_OSPEEDR_OSPEEDR3
//    <name> OSPEEDR3 </name>
//    <rw> 
//    <i> [Bits 7..6] RW (@ 0x50000408) Port x configuration bits (y =  0..15) </i>
//    <edit> 
//      <loc> ( (unsigned char)((GPIOB_OSPEEDR >> 6) & 0x3), ((GPIOB_OSPEEDR = (GPIOB_OSPEEDR & ~(0x3UL << 6 )) | ((unsigned long)(Gui_u8:GuiVal & 0x3) << 6 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ---------------------------  Field Item: GPIOB_OSPEEDR_OSPEEDR2  -------------------------------
// SVD Line: 8041

//  <item> SFDITEM_FIELD__GPIOB_OSPEEDR_OSPEEDR2
//    <name> OSPEEDR2 </name>
//    <rw> 
//    <i> [Bits 5..4] RW (@ 0x50000408) Port x configuration bits (y =  0..15) </i>
//    <edit> 
//      <loc> ( (unsigned char)((GPIOB_OSPEEDR >> 4) & 0x3), ((GPIOB_OSPEEDR = (GPIOB_OSPEEDR & ~(0x3UL << 4 )) | ((unsigned long)(Gui_u8:GuiVal & 0x3) << 4 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ---------------------------  Field Item: GPIOB_OSPEEDR_OSPEEDR1  -------------------------------
// SVD Line: 8048

//  <item> SFDITEM_FIELD__GPIOB_OSPEEDR_OSPEEDR1
//    <name> OSPEEDR1 </name>
//    <rw> 
//    <i> [Bits 3..2] RW (@ 0x50000408) Port x configuration bits (y =  0..15) </i>
//    <edit> 
//      <loc> ( (unsigned char)((GPIOB_OSPEEDR >> 2) & 0x3), ((GPIOB_OSPEEDR = (GPIOB_OSPEEDR & ~(0x3UL << 2 )) | ((unsigned long)(Gui_u8:GuiVal & 0x3) << 2 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ---------------------------  Field Item: GPIOB_OSPEEDR_OSPEEDR0  -------------------------------
// SVD Line: 8055

//  <item> SFDITEM_FIELD__GPIOB_OSPEEDR_OSPEEDR0
//    <name> OSPEEDR0 </name>
//    <rw> 
//    <i> [Bits 1..0] RW (@ 0x50000408) Port x configuration bits (y =  0..15) </i>
//    <edit> 
//      <loc> ( (unsigned char)((GPIOB_OSPEEDR >> 0) & 0x3), ((GPIOB_OSPEEDR = (GPIOB_OSPEEDR & ~(0x3UL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0x3) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ------------------------------  Register RTree: GPIOB_OSPEEDR  ---------------------------------
// SVD Line: 7940

//  <rtree> SFDITEM_REG__GPIOB_OSPEEDR
//    <name> OSPEEDR </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x50000408) GPIO port output speed  register </i>
//    <loc> ( (unsigned int)((GPIOB_OSPEEDR >> 0) & 0xFFFFFFFF), ((GPIOB_OSPEEDR = (GPIOB_OSPEEDR & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__GPIOB_OSPEEDR_OSPEEDR15 </item>
//    <item> SFDITEM_FIELD__GPIOB_OSPEEDR_OSPEEDR14 </item>
//    <item> SFDITEM_FIELD__GPIOB_OSPEEDR_OSPEEDR13 </item>
//    <item> SFDITEM_FIELD__GPIOB_OSPEEDR_OSPEEDR12 </item>
//    <item> SFDITEM_FIELD__GPIOB_OSPEEDR_OSPEEDR11 </item>
//    <item> SFDITEM_FIELD__GPIOB_OSPEEDR_OSPEEDR10 </item>
//    <item> SFDITEM_FIELD__GPIOB_OSPEEDR_OSPEEDR9 </item>
//    <item> SFDITEM_FIELD__GPIOB_OSPEEDR_OSPEEDR8 </item>
//    <item> SFDITEM_FIELD__GPIOB_OSPEEDR_OSPEEDR7 </item>
//    <item> SFDITEM_FIELD__GPIOB_OSPEEDR_OSPEEDR6 </item>
//    <item> SFDITEM_FIELD__GPIOB_OSPEEDR_OSPEEDR5 </item>
//    <item> SFDITEM_FIELD__GPIOB_OSPEEDR_OSPEEDR4 </item>
//    <item> SFDITEM_FIELD__GPIOB_OSPEEDR_OSPEEDR3 </item>
//    <item> SFDITEM_FIELD__GPIOB_OSPEEDR_OSPEEDR2 </item>
//    <item> SFDITEM_FIELD__GPIOB_OSPEEDR_OSPEEDR1 </item>
//    <item> SFDITEM_FIELD__GPIOB_OSPEEDR_OSPEEDR0 </item>
//  </rtree>
//  


// ---------------------------  Register Item Address: GPIOB_PUPDR  -------------------------------
// SVD Line: 8064

unsigned int GPIOB_PUPDR __AT (0x5000040C);



// -----------------------------  Field Item: GPIOB_PUPDR_PUPDR15  --------------------------------
// SVD Line: 8074

//  <item> SFDITEM_FIELD__GPIOB_PUPDR_PUPDR15
//    <name> PUPDR15 </name>
//    <rw> 
//    <i> [Bits 31..30] RW (@ 0x5000040C) Port x configuration bits (y =  0..15) </i>
//    <edit> 
//      <loc> ( (unsigned char)((GPIOB_PUPDR >> 30) & 0x3), ((GPIOB_PUPDR = (GPIOB_PUPDR & ~(0x3UL << 30 )) | ((unsigned long)(Gui_u8:GuiVal & 0x3) << 30 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -----------------------------  Field Item: GPIOB_PUPDR_PUPDR14  --------------------------------
// SVD Line: 8081

//  <item> SFDITEM_FIELD__GPIOB_PUPDR_PUPDR14
//    <name> PUPDR14 </name>
//    <rw> 
//    <i> [Bits 29..28] RW (@ 0x5000040C) Port x configuration bits (y =  0..15) </i>
//    <edit> 
//      <loc> ( (unsigned char)((GPIOB_PUPDR >> 28) & 0x3), ((GPIOB_PUPDR = (GPIOB_PUPDR & ~(0x3UL << 28 )) | ((unsigned long)(Gui_u8:GuiVal & 0x3) << 28 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -----------------------------  Field Item: GPIOB_PUPDR_PUPDR13  --------------------------------
// SVD Line: 8088

//  <item> SFDITEM_FIELD__GPIOB_PUPDR_PUPDR13
//    <name> PUPDR13 </name>
//    <rw> 
//    <i> [Bits 27..26] RW (@ 0x5000040C) Port x configuration bits (y =  0..15) </i>
//    <edit> 
//      <loc> ( (unsigned char)((GPIOB_PUPDR >> 26) & 0x3), ((GPIOB_PUPDR = (GPIOB_PUPDR & ~(0x3UL << 26 )) | ((unsigned long)(Gui_u8:GuiVal & 0x3) << 26 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -----------------------------  Field Item: GPIOB_PUPDR_PUPDR12  --------------------------------
// SVD Line: 8095

//  <item> SFDITEM_FIELD__GPIOB_PUPDR_PUPDR12
//    <name> PUPDR12 </name>
//    <rw> 
//    <i> [Bits 25..24] RW (@ 0x5000040C) Port x configuration bits (y =  0..15) </i>
//    <edit> 
//      <loc> ( (unsigned char)((GPIOB_PUPDR >> 24) & 0x3), ((GPIOB_PUPDR = (GPIOB_PUPDR & ~(0x3UL << 24 )) | ((unsigned long)(Gui_u8:GuiVal & 0x3) << 24 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -----------------------------  Field Item: GPIOB_PUPDR_PUPDR11  --------------------------------
// SVD Line: 8102

//  <item> SFDITEM_FIELD__GPIOB_PUPDR_PUPDR11
//    <name> PUPDR11 </name>
//    <rw> 
//    <i> [Bits 23..22] RW (@ 0x5000040C) Port x configuration bits (y =  0..15) </i>
//    <edit> 
//      <loc> ( (unsigned char)((GPIOB_PUPDR >> 22) & 0x3), ((GPIOB_PUPDR = (GPIOB_PUPDR & ~(0x3UL << 22 )) | ((unsigned long)(Gui_u8:GuiVal & 0x3) << 22 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -----------------------------  Field Item: GPIOB_PUPDR_PUPDR10  --------------------------------
// SVD Line: 8109

//  <item> SFDITEM_FIELD__GPIOB_PUPDR_PUPDR10
//    <name> PUPDR10 </name>
//    <rw> 
//    <i> [Bits 21..20] RW (@ 0x5000040C) Port x configuration bits (y =  0..15) </i>
//    <edit> 
//      <loc> ( (unsigned char)((GPIOB_PUPDR >> 20) & 0x3), ((GPIOB_PUPDR = (GPIOB_PUPDR & ~(0x3UL << 20 )) | ((unsigned long)(Gui_u8:GuiVal & 0x3) << 20 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -----------------------------  Field Item: GPIOB_PUPDR_PUPDR9  ---------------------------------
// SVD Line: 8116

//  <item> SFDITEM_FIELD__GPIOB_PUPDR_PUPDR9
//    <name> PUPDR9 </name>
//    <rw> 
//    <i> [Bits 19..18] RW (@ 0x5000040C) Port x configuration bits (y =  0..15) </i>
//    <edit> 
//      <loc> ( (unsigned char)((GPIOB_PUPDR >> 18) & 0x3), ((GPIOB_PUPDR = (GPIOB_PUPDR & ~(0x3UL << 18 )) | ((unsigned long)(Gui_u8:GuiVal & 0x3) << 18 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -----------------------------  Field Item: GPIOB_PUPDR_PUPDR8  ---------------------------------
// SVD Line: 8123

//  <item> SFDITEM_FIELD__GPIOB_PUPDR_PUPDR8
//    <name> PUPDR8 </name>
//    <rw> 
//    <i> [Bits 17..16] RW (@ 0x5000040C) Port x configuration bits (y =  0..15) </i>
//    <edit> 
//      <loc> ( (unsigned char)((GPIOB_PUPDR >> 16) & 0x3), ((GPIOB_PUPDR = (GPIOB_PUPDR & ~(0x3UL << 16 )) | ((unsigned long)(Gui_u8:GuiVal & 0x3) << 16 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -----------------------------  Field Item: GPIOB_PUPDR_PUPDR7  ---------------------------------
// SVD Line: 8130

//  <item> SFDITEM_FIELD__GPIOB_PUPDR_PUPDR7
//    <name> PUPDR7 </name>
//    <rw> 
//    <i> [Bits 15..14] RW (@ 0x5000040C) Port x configuration bits (y =  0..15) </i>
//    <edit> 
//      <loc> ( (unsigned char)((GPIOB_PUPDR >> 14) & 0x3), ((GPIOB_PUPDR = (GPIOB_PUPDR & ~(0x3UL << 14 )) | ((unsigned long)(Gui_u8:GuiVal & 0x3) << 14 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -----------------------------  Field Item: GPIOB_PUPDR_PUPDR6  ---------------------------------
// SVD Line: 8137

//  <item> SFDITEM_FIELD__GPIOB_PUPDR_PUPDR6
//    <name> PUPDR6 </name>
//    <rw> 
//    <i> [Bits 13..12] RW (@ 0x5000040C) Port x configuration bits (y =  0..15) </i>
//    <edit> 
//      <loc> ( (unsigned char)((GPIOB_PUPDR >> 12) & 0x3), ((GPIOB_PUPDR = (GPIOB_PUPDR & ~(0x3UL << 12 )) | ((unsigned long)(Gui_u8:GuiVal & 0x3) << 12 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -----------------------------  Field Item: GPIOB_PUPDR_PUPDR5  ---------------------------------
// SVD Line: 8144

//  <item> SFDITEM_FIELD__GPIOB_PUPDR_PUPDR5
//    <name> PUPDR5 </name>
//    <rw> 
//    <i> [Bits 11..10] RW (@ 0x5000040C) Port x configuration bits (y =  0..15) </i>
//    <edit> 
//      <loc> ( (unsigned char)((GPIOB_PUPDR >> 10) & 0x3), ((GPIOB_PUPDR = (GPIOB_PUPDR & ~(0x3UL << 10 )) | ((unsigned long)(Gui_u8:GuiVal & 0x3) << 10 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -----------------------------  Field Item: GPIOB_PUPDR_PUPDR4  ---------------------------------
// SVD Line: 8151

//  <item> SFDITEM_FIELD__GPIOB_PUPDR_PUPDR4
//    <name> PUPDR4 </name>
//    <rw> 
//    <i> [Bits 9..8] RW (@ 0x5000040C) Port x configuration bits (y =  0..15) </i>
//    <edit> 
//      <loc> ( (unsigned char)((GPIOB_PUPDR >> 8) & 0x3), ((GPIOB_PUPDR = (GPIOB_PUPDR & ~(0x3UL << 8 )) | ((unsigned long)(Gui_u8:GuiVal & 0x3) << 8 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -----------------------------  Field Item: GPIOB_PUPDR_PUPDR3  ---------------------------------
// SVD Line: 8158

//  <item> SFDITEM_FIELD__GPIOB_PUPDR_PUPDR3
//    <name> PUPDR3 </name>
//    <rw> 
//    <i> [Bits 7..6] RW (@ 0x5000040C) Port x configuration bits (y =  0..15) </i>
//    <edit> 
//      <loc> ( (unsigned char)((GPIOB_PUPDR >> 6) & 0x3), ((GPIOB_PUPDR = (GPIOB_PUPDR & ~(0x3UL << 6 )) | ((unsigned long)(Gui_u8:GuiVal & 0x3) << 6 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -----------------------------  Field Item: GPIOB_PUPDR_PUPDR2  ---------------------------------
// SVD Line: 8165

//  <item> SFDITEM_FIELD__GPIOB_PUPDR_PUPDR2
//    <name> PUPDR2 </name>
//    <rw> 
//    <i> [Bits 5..4] RW (@ 0x5000040C) Port x configuration bits (y =  0..15) </i>
//    <edit> 
//      <loc> ( (unsigned char)((GPIOB_PUPDR >> 4) & 0x3), ((GPIOB_PUPDR = (GPIOB_PUPDR & ~(0x3UL << 4 )) | ((unsigned long)(Gui_u8:GuiVal & 0x3) << 4 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -----------------------------  Field Item: GPIOB_PUPDR_PUPDR1  ---------------------------------
// SVD Line: 8172

//  <item> SFDITEM_FIELD__GPIOB_PUPDR_PUPDR1
//    <name> PUPDR1 </name>
//    <rw> 
//    <i> [Bits 3..2] RW (@ 0x5000040C) Port x configuration bits (y =  0..15) </i>
//    <edit> 
//      <loc> ( (unsigned char)((GPIOB_PUPDR >> 2) & 0x3), ((GPIOB_PUPDR = (GPIOB_PUPDR & ~(0x3UL << 2 )) | ((unsigned long)(Gui_u8:GuiVal & 0x3) << 2 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -----------------------------  Field Item: GPIOB_PUPDR_PUPDR0  ---------------------------------
// SVD Line: 8179

//  <item> SFDITEM_FIELD__GPIOB_PUPDR_PUPDR0
//    <name> PUPDR0 </name>
//    <rw> 
//    <i> [Bits 1..0] RW (@ 0x5000040C) Port x configuration bits (y =  0..15) </i>
//    <edit> 
//      <loc> ( (unsigned char)((GPIOB_PUPDR >> 0) & 0x3), ((GPIOB_PUPDR = (GPIOB_PUPDR & ~(0x3UL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0x3) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -------------------------------  Register RTree: GPIOB_PUPDR  ----------------------------------
// SVD Line: 8064

//  <rtree> SFDITEM_REG__GPIOB_PUPDR
//    <name> PUPDR </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x5000040C) GPIO port pull-up/pull-down  register </i>
//    <loc> ( (unsigned int)((GPIOB_PUPDR >> 0) & 0xFFFFFFFF), ((GPIOB_PUPDR = (GPIOB_PUPDR & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__GPIOB_PUPDR_PUPDR15 </item>
//    <item> SFDITEM_FIELD__GPIOB_PUPDR_PUPDR14 </item>
//    <item> SFDITEM_FIELD__GPIOB_PUPDR_PUPDR13 </item>
//    <item> SFDITEM_FIELD__GPIOB_PUPDR_PUPDR12 </item>
//    <item> SFDITEM_FIELD__GPIOB_PUPDR_PUPDR11 </item>
//    <item> SFDITEM_FIELD__GPIOB_PUPDR_PUPDR10 </item>
//    <item> SFDITEM_FIELD__GPIOB_PUPDR_PUPDR9 </item>
//    <item> SFDITEM_FIELD__GPIOB_PUPDR_PUPDR8 </item>
//    <item> SFDITEM_FIELD__GPIOB_PUPDR_PUPDR7 </item>
//    <item> SFDITEM_FIELD__GPIOB_PUPDR_PUPDR6 </item>
//    <item> SFDITEM_FIELD__GPIOB_PUPDR_PUPDR5 </item>
//    <item> SFDITEM_FIELD__GPIOB_PUPDR_PUPDR4 </item>
//    <item> SFDITEM_FIELD__GPIOB_PUPDR_PUPDR3 </item>
//    <item> SFDITEM_FIELD__GPIOB_PUPDR_PUPDR2 </item>
//    <item> SFDITEM_FIELD__GPIOB_PUPDR_PUPDR1 </item>
//    <item> SFDITEM_FIELD__GPIOB_PUPDR_PUPDR0 </item>
//  </rtree>
//  


// ----------------------------  Register Item Address: GPIOB_IDR  --------------------------------
// SVD Line: 8188

unsigned int GPIOB_IDR __AT (0x50000410);



// -------------------------------  Field Item: GPIOB_IDR_IDR15  ----------------------------------
// SVD Line: 8197

//  <item> SFDITEM_FIELD__GPIOB_IDR_IDR15
//    <name> IDR15 </name>
//    <r> 
//    <i> [Bit 15] RO (@ 0x50000410) Port input data (y =  0..15) </i>
//    <check> 
//      <loc> ( (unsigned int) GPIOB_IDR ) </loc>
//      <o.15..15> IDR15
//    </check>
//  </item>
//  


// -------------------------------  Field Item: GPIOB_IDR_IDR14  ----------------------------------
// SVD Line: 8204

//  <item> SFDITEM_FIELD__GPIOB_IDR_IDR14
//    <name> IDR14 </name>
//    <r> 
//    <i> [Bit 14] RO (@ 0x50000410) Port input data (y =  0..15) </i>
//    <check> 
//      <loc> ( (unsigned int) GPIOB_IDR ) </loc>
//      <o.14..14> IDR14
//    </check>
//  </item>
//  


// -------------------------------  Field Item: GPIOB_IDR_IDR13  ----------------------------------
// SVD Line: 8211

//  <item> SFDITEM_FIELD__GPIOB_IDR_IDR13
//    <name> IDR13 </name>
//    <r> 
//    <i> [Bit 13] RO (@ 0x50000410) Port input data (y =  0..15) </i>
//    <check> 
//      <loc> ( (unsigned int) GPIOB_IDR ) </loc>
//      <o.13..13> IDR13
//    </check>
//  </item>
//  


// -------------------------------  Field Item: GPIOB_IDR_IDR12  ----------------------------------
// SVD Line: 8218

//  <item> SFDITEM_FIELD__GPIOB_IDR_IDR12
//    <name> IDR12 </name>
//    <r> 
//    <i> [Bit 12] RO (@ 0x50000410) Port input data (y =  0..15) </i>
//    <check> 
//      <loc> ( (unsigned int) GPIOB_IDR ) </loc>
//      <o.12..12> IDR12
//    </check>
//  </item>
//  


// -------------------------------  Field Item: GPIOB_IDR_IDR11  ----------------------------------
// SVD Line: 8225

//  <item> SFDITEM_FIELD__GPIOB_IDR_IDR11
//    <name> IDR11 </name>
//    <r> 
//    <i> [Bit 11] RO (@ 0x50000410) Port input data (y =  0..15) </i>
//    <check> 
//      <loc> ( (unsigned int) GPIOB_IDR ) </loc>
//      <o.11..11> IDR11
//    </check>
//  </item>
//  


// -------------------------------  Field Item: GPIOB_IDR_IDR10  ----------------------------------
// SVD Line: 8232

//  <item> SFDITEM_FIELD__GPIOB_IDR_IDR10
//    <name> IDR10 </name>
//    <r> 
//    <i> [Bit 10] RO (@ 0x50000410) Port input data (y =  0..15) </i>
//    <check> 
//      <loc> ( (unsigned int) GPIOB_IDR ) </loc>
//      <o.10..10> IDR10
//    </check>
//  </item>
//  


// -------------------------------  Field Item: GPIOB_IDR_IDR9  -----------------------------------
// SVD Line: 8239

//  <item> SFDITEM_FIELD__GPIOB_IDR_IDR9
//    <name> IDR9 </name>
//    <r> 
//    <i> [Bit 9] RO (@ 0x50000410) Port input data (y =  0..15) </i>
//    <check> 
//      <loc> ( (unsigned int) GPIOB_IDR ) </loc>
//      <o.9..9> IDR9
//    </check>
//  </item>
//  


// -------------------------------  Field Item: GPIOB_IDR_IDR8  -----------------------------------
// SVD Line: 8246

//  <item> SFDITEM_FIELD__GPIOB_IDR_IDR8
//    <name> IDR8 </name>
//    <r> 
//    <i> [Bit 8] RO (@ 0x50000410) Port input data (y =  0..15) </i>
//    <check> 
//      <loc> ( (unsigned int) GPIOB_IDR ) </loc>
//      <o.8..8> IDR8
//    </check>
//  </item>
//  


// -------------------------------  Field Item: GPIOB_IDR_IDR7  -----------------------------------
// SVD Line: 8253

//  <item> SFDITEM_FIELD__GPIOB_IDR_IDR7
//    <name> IDR7 </name>
//    <r> 
//    <i> [Bit 7] RO (@ 0x50000410) Port input data (y =  0..15) </i>
//    <check> 
//      <loc> ( (unsigned int) GPIOB_IDR ) </loc>
//      <o.7..7> IDR7
//    </check>
//  </item>
//  


// -------------------------------  Field Item: GPIOB_IDR_IDR6  -----------------------------------
// SVD Line: 8260

//  <item> SFDITEM_FIELD__GPIOB_IDR_IDR6
//    <name> IDR6 </name>
//    <r> 
//    <i> [Bit 6] RO (@ 0x50000410) Port input data (y =  0..15) </i>
//    <check> 
//      <loc> ( (unsigned int) GPIOB_IDR ) </loc>
//      <o.6..6> IDR6
//    </check>
//  </item>
//  


// -------------------------------  Field Item: GPIOB_IDR_IDR5  -----------------------------------
// SVD Line: 8267

//  <item> SFDITEM_FIELD__GPIOB_IDR_IDR5
//    <name> IDR5 </name>
//    <r> 
//    <i> [Bit 5] RO (@ 0x50000410) Port input data (y =  0..15) </i>
//    <check> 
//      <loc> ( (unsigned int) GPIOB_IDR ) </loc>
//      <o.5..5> IDR5
//    </check>
//  </item>
//  


// -------------------------------  Field Item: GPIOB_IDR_IDR4  -----------------------------------
// SVD Line: 8274

//  <item> SFDITEM_FIELD__GPIOB_IDR_IDR4
//    <name> IDR4 </name>
//    <r> 
//    <i> [Bit 4] RO (@ 0x50000410) Port input data (y =  0..15) </i>
//    <check> 
//      <loc> ( (unsigned int) GPIOB_IDR ) </loc>
//      <o.4..4> IDR4
//    </check>
//  </item>
//  


// -------------------------------  Field Item: GPIOB_IDR_IDR3  -----------------------------------
// SVD Line: 8281

//  <item> SFDITEM_FIELD__GPIOB_IDR_IDR3
//    <name> IDR3 </name>
//    <r> 
//    <i> [Bit 3] RO (@ 0x50000410) Port input data (y =  0..15) </i>
//    <check> 
//      <loc> ( (unsigned int) GPIOB_IDR ) </loc>
//      <o.3..3> IDR3
//    </check>
//  </item>
//  


// -------------------------------  Field Item: GPIOB_IDR_IDR2  -----------------------------------
// SVD Line: 8288

//  <item> SFDITEM_FIELD__GPIOB_IDR_IDR2
//    <name> IDR2 </name>
//    <r> 
//    <i> [Bit 2] RO (@ 0x50000410) Port input data (y =  0..15) </i>
//    <check> 
//      <loc> ( (unsigned int) GPIOB_IDR ) </loc>
//      <o.2..2> IDR2
//    </check>
//  </item>
//  


// -------------------------------  Field Item: GPIOB_IDR_IDR1  -----------------------------------
// SVD Line: 8295

//  <item> SFDITEM_FIELD__GPIOB_IDR_IDR1
//    <name> IDR1 </name>
//    <r> 
//    <i> [Bit 1] RO (@ 0x50000410) Port input data (y =  0..15) </i>
//    <check> 
//      <loc> ( (unsigned int) GPIOB_IDR ) </loc>
//      <o.1..1> IDR1
//    </check>
//  </item>
//  


// -------------------------------  Field Item: GPIOB_IDR_IDR0  -----------------------------------
// SVD Line: 8302

//  <item> SFDITEM_FIELD__GPIOB_IDR_IDR0
//    <name> IDR0 </name>
//    <r> 
//    <i> [Bit 0] RO (@ 0x50000410) Port input data (y =  0..15) </i>
//    <check> 
//      <loc> ( (unsigned int) GPIOB_IDR ) </loc>
//      <o.0..0> IDR0
//    </check>
//  </item>
//  


// --------------------------------  Register RTree: GPIOB_IDR  -----------------------------------
// SVD Line: 8188

//  <rtree> SFDITEM_REG__GPIOB_IDR
//    <name> IDR </name>
//    <r> 
//    <i> [Bits 31..0] RO (@ 0x50000410) GPIO port input data register </i>
//    <loc> ( (unsigned int)((GPIOB_IDR >> 0) & 0xFFFFFFFF) ) </loc>
//    <item> SFDITEM_FIELD__GPIOB_IDR_IDR15 </item>
//    <item> SFDITEM_FIELD__GPIOB_IDR_IDR14 </item>
//    <item> SFDITEM_FIELD__GPIOB_IDR_IDR13 </item>
//    <item> SFDITEM_FIELD__GPIOB_IDR_IDR12 </item>
//    <item> SFDITEM_FIELD__GPIOB_IDR_IDR11 </item>
//    <item> SFDITEM_FIELD__GPIOB_IDR_IDR10 </item>
//    <item> SFDITEM_FIELD__GPIOB_IDR_IDR9 </item>
//    <item> SFDITEM_FIELD__GPIOB_IDR_IDR8 </item>
//    <item> SFDITEM_FIELD__GPIOB_IDR_IDR7 </item>
//    <item> SFDITEM_FIELD__GPIOB_IDR_IDR6 </item>
//    <item> SFDITEM_FIELD__GPIOB_IDR_IDR5 </item>
//    <item> SFDITEM_FIELD__GPIOB_IDR_IDR4 </item>
//    <item> SFDITEM_FIELD__GPIOB_IDR_IDR3 </item>
//    <item> SFDITEM_FIELD__GPIOB_IDR_IDR2 </item>
//    <item> SFDITEM_FIELD__GPIOB_IDR_IDR1 </item>
//    <item> SFDITEM_FIELD__GPIOB_IDR_IDR0 </item>
//  </rtree>
//  


// ----------------------------  Register Item Address: GPIOB_ODR  --------------------------------
// SVD Line: 8311

unsigned int GPIOB_ODR __AT (0x50000414);



// -------------------------------  Field Item: GPIOB_ODR_ODR15  ----------------------------------
// SVD Line: 8320

//  <item> SFDITEM_FIELD__GPIOB_ODR_ODR15
//    <name> ODR15 </name>
//    <rw> 
//    <i> [Bit 15] RW (@ 0x50000414) Port output data (y =  0..15) </i>
//    <check> 
//      <loc> ( (unsigned int) GPIOB_ODR ) </loc>
//      <o.15..15> ODR15
//    </check>
//  </item>
//  


// -------------------------------  Field Item: GPIOB_ODR_ODR14  ----------------------------------
// SVD Line: 8327

//  <item> SFDITEM_FIELD__GPIOB_ODR_ODR14
//    <name> ODR14 </name>
//    <rw> 
//    <i> [Bit 14] RW (@ 0x50000414) Port output data (y =  0..15) </i>
//    <check> 
//      <loc> ( (unsigned int) GPIOB_ODR ) </loc>
//      <o.14..14> ODR14
//    </check>
//  </item>
//  


// -------------------------------  Field Item: GPIOB_ODR_ODR13  ----------------------------------
// SVD Line: 8334

//  <item> SFDITEM_FIELD__GPIOB_ODR_ODR13
//    <name> ODR13 </name>
//    <rw> 
//    <i> [Bit 13] RW (@ 0x50000414) Port output data (y =  0..15) </i>
//    <check> 
//      <loc> ( (unsigned int) GPIOB_ODR ) </loc>
//      <o.13..13> ODR13
//    </check>
//  </item>
//  


// -------------------------------  Field Item: GPIOB_ODR_ODR12  ----------------------------------
// SVD Line: 8341

//  <item> SFDITEM_FIELD__GPIOB_ODR_ODR12
//    <name> ODR12 </name>
//    <rw> 
//    <i> [Bit 12] RW (@ 0x50000414) Port output data (y =  0..15) </i>
//    <check> 
//      <loc> ( (unsigned int) GPIOB_ODR ) </loc>
//      <o.12..12> ODR12
//    </check>
//  </item>
//  


// -------------------------------  Field Item: GPIOB_ODR_ODR11  ----------------------------------
// SVD Line: 8348

//  <item> SFDITEM_FIELD__GPIOB_ODR_ODR11
//    <name> ODR11 </name>
//    <rw> 
//    <i> [Bit 11] RW (@ 0x50000414) Port output data (y =  0..15) </i>
//    <check> 
//      <loc> ( (unsigned int) GPIOB_ODR ) </loc>
//      <o.11..11> ODR11
//    </check>
//  </item>
//  


// -------------------------------  Field Item: GPIOB_ODR_ODR10  ----------------------------------
// SVD Line: 8355

//  <item> SFDITEM_FIELD__GPIOB_ODR_ODR10
//    <name> ODR10 </name>
//    <rw> 
//    <i> [Bit 10] RW (@ 0x50000414) Port output data (y =  0..15) </i>
//    <check> 
//      <loc> ( (unsigned int) GPIOB_ODR ) </loc>
//      <o.10..10> ODR10
//    </check>
//  </item>
//  


// -------------------------------  Field Item: GPIOB_ODR_ODR9  -----------------------------------
// SVD Line: 8362

//  <item> SFDITEM_FIELD__GPIOB_ODR_ODR9
//    <name> ODR9 </name>
//    <rw> 
//    <i> [Bit 9] RW (@ 0x50000414) Port output data (y =  0..15) </i>
//    <check> 
//      <loc> ( (unsigned int) GPIOB_ODR ) </loc>
//      <o.9..9> ODR9
//    </check>
//  </item>
//  


// -------------------------------  Field Item: GPIOB_ODR_ODR8  -----------------------------------
// SVD Line: 8369

//  <item> SFDITEM_FIELD__GPIOB_ODR_ODR8
//    <name> ODR8 </name>
//    <rw> 
//    <i> [Bit 8] RW (@ 0x50000414) Port output data (y =  0..15) </i>
//    <check> 
//      <loc> ( (unsigned int) GPIOB_ODR ) </loc>
//      <o.8..8> ODR8
//    </check>
//  </item>
//  


// -------------------------------  Field Item: GPIOB_ODR_ODR7  -----------------------------------
// SVD Line: 8376

//  <item> SFDITEM_FIELD__GPIOB_ODR_ODR7
//    <name> ODR7 </name>
//    <rw> 
//    <i> [Bit 7] RW (@ 0x50000414) Port output data (y =  0..15) </i>
//    <check> 
//      <loc> ( (unsigned int) GPIOB_ODR ) </loc>
//      <o.7..7> ODR7
//    </check>
//  </item>
//  


// -------------------------------  Field Item: GPIOB_ODR_ODR6  -----------------------------------
// SVD Line: 8383

//  <item> SFDITEM_FIELD__GPIOB_ODR_ODR6
//    <name> ODR6 </name>
//    <rw> 
//    <i> [Bit 6] RW (@ 0x50000414) Port output data (y =  0..15) </i>
//    <check> 
//      <loc> ( (unsigned int) GPIOB_ODR ) </loc>
//      <o.6..6> ODR6
//    </check>
//  </item>
//  


// -------------------------------  Field Item: GPIOB_ODR_ODR5  -----------------------------------
// SVD Line: 8390

//  <item> SFDITEM_FIELD__GPIOB_ODR_ODR5
//    <name> ODR5 </name>
//    <rw> 
//    <i> [Bit 5] RW (@ 0x50000414) Port output data (y =  0..15) </i>
//    <check> 
//      <loc> ( (unsigned int) GPIOB_ODR ) </loc>
//      <o.5..5> ODR5
//    </check>
//  </item>
//  


// -------------------------------  Field Item: GPIOB_ODR_ODR4  -----------------------------------
// SVD Line: 8397

//  <item> SFDITEM_FIELD__GPIOB_ODR_ODR4
//    <name> ODR4 </name>
//    <rw> 
//    <i> [Bit 4] RW (@ 0x50000414) Port output data (y =  0..15) </i>
//    <check> 
//      <loc> ( (unsigned int) GPIOB_ODR ) </loc>
//      <o.4..4> ODR4
//    </check>
//  </item>
//  


// -------------------------------  Field Item: GPIOB_ODR_ODR3  -----------------------------------
// SVD Line: 8404

//  <item> SFDITEM_FIELD__GPIOB_ODR_ODR3
//    <name> ODR3 </name>
//    <rw> 
//    <i> [Bit 3] RW (@ 0x50000414) Port output data (y =  0..15) </i>
//    <check> 
//      <loc> ( (unsigned int) GPIOB_ODR ) </loc>
//      <o.3..3> ODR3
//    </check>
//  </item>
//  


// -------------------------------  Field Item: GPIOB_ODR_ODR2  -----------------------------------
// SVD Line: 8411

//  <item> SFDITEM_FIELD__GPIOB_ODR_ODR2
//    <name> ODR2 </name>
//    <rw> 
//    <i> [Bit 2] RW (@ 0x50000414) Port output data (y =  0..15) </i>
//    <check> 
//      <loc> ( (unsigned int) GPIOB_ODR ) </loc>
//      <o.2..2> ODR2
//    </check>
//  </item>
//  


// -------------------------------  Field Item: GPIOB_ODR_ODR1  -----------------------------------
// SVD Line: 8418

//  <item> SFDITEM_FIELD__GPIOB_ODR_ODR1
//    <name> ODR1 </name>
//    <rw> 
//    <i> [Bit 1] RW (@ 0x50000414) Port output data (y =  0..15) </i>
//    <check> 
//      <loc> ( (unsigned int) GPIOB_ODR ) </loc>
//      <o.1..1> ODR1
//    </check>
//  </item>
//  


// -------------------------------  Field Item: GPIOB_ODR_ODR0  -----------------------------------
// SVD Line: 8425

//  <item> SFDITEM_FIELD__GPIOB_ODR_ODR0
//    <name> ODR0 </name>
//    <rw> 
//    <i> [Bit 0] RW (@ 0x50000414) Port output data (y =  0..15) </i>
//    <check> 
//      <loc> ( (unsigned int) GPIOB_ODR ) </loc>
//      <o.0..0> ODR0
//    </check>
//  </item>
//  


// --------------------------------  Register RTree: GPIOB_ODR  -----------------------------------
// SVD Line: 8311

//  <rtree> SFDITEM_REG__GPIOB_ODR
//    <name> ODR </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x50000414) GPIO port output data register </i>
//    <loc> ( (unsigned int)((GPIOB_ODR >> 0) & 0xFFFFFFFF), ((GPIOB_ODR = (GPIOB_ODR & ~(0xFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__GPIOB_ODR_ODR15 </item>
//    <item> SFDITEM_FIELD__GPIOB_ODR_ODR14 </item>
//    <item> SFDITEM_FIELD__GPIOB_ODR_ODR13 </item>
//    <item> SFDITEM_FIELD__GPIOB_ODR_ODR12 </item>
//    <item> SFDITEM_FIELD__GPIOB_ODR_ODR11 </item>
//    <item> SFDITEM_FIELD__GPIOB_ODR_ODR10 </item>
//    <item> SFDITEM_FIELD__GPIOB_ODR_ODR9 </item>
//    <item> SFDITEM_FIELD__GPIOB_ODR_ODR8 </item>
//    <item> SFDITEM_FIELD__GPIOB_ODR_ODR7 </item>
//    <item> SFDITEM_FIELD__GPIOB_ODR_ODR6 </item>
//    <item> SFDITEM_FIELD__GPIOB_ODR_ODR5 </item>
//    <item> SFDITEM_FIELD__GPIOB_ODR_ODR4 </item>
//    <item> SFDITEM_FIELD__GPIOB_ODR_ODR3 </item>
//    <item> SFDITEM_FIELD__GPIOB_ODR_ODR2 </item>
//    <item> SFDITEM_FIELD__GPIOB_ODR_ODR1 </item>
//    <item> SFDITEM_FIELD__GPIOB_ODR_ODR0 </item>
//  </rtree>
//  


// ----------------------------  Register Item Address: GPIOB_BSRR  -------------------------------
// SVD Line: 8434

unsigned int GPIOB_BSRR __AT (0x50000418);



// -------------------------------  Field Item: GPIOB_BSRR_BR15  ----------------------------------
// SVD Line: 8444

//  <item> SFDITEM_FIELD__GPIOB_BSRR_BR15
//    <name> BR15 </name>
//    <w> 
//    <i> [Bit 31] WO (@ 0x50000418) Port x reset bit y (y =  0..15) </i>
//    <check> 
//      <loc> ( (unsigned int) GPIOB_BSRR ) </loc>
//      <o.31..31> BR15
//    </check>
//  </item>
//  


// -------------------------------  Field Item: GPIOB_BSRR_BR14  ----------------------------------
// SVD Line: 8451

//  <item> SFDITEM_FIELD__GPIOB_BSRR_BR14
//    <name> BR14 </name>
//    <w> 
//    <i> [Bit 30] WO (@ 0x50000418) Port x reset bit y (y =  0..15) </i>
//    <check> 
//      <loc> ( (unsigned int) GPIOB_BSRR ) </loc>
//      <o.30..30> BR14
//    </check>
//  </item>
//  


// -------------------------------  Field Item: GPIOB_BSRR_BR13  ----------------------------------
// SVD Line: 8458

//  <item> SFDITEM_FIELD__GPIOB_BSRR_BR13
//    <name> BR13 </name>
//    <w> 
//    <i> [Bit 29] WO (@ 0x50000418) Port x reset bit y (y =  0..15) </i>
//    <check> 
//      <loc> ( (unsigned int) GPIOB_BSRR ) </loc>
//      <o.29..29> BR13
//    </check>
//  </item>
//  


// -------------------------------  Field Item: GPIOB_BSRR_BR12  ----------------------------------
// SVD Line: 8465

//  <item> SFDITEM_FIELD__GPIOB_BSRR_BR12
//    <name> BR12 </name>
//    <w> 
//    <i> [Bit 28] WO (@ 0x50000418) Port x reset bit y (y =  0..15) </i>
//    <check> 
//      <loc> ( (unsigned int) GPIOB_BSRR ) </loc>
//      <o.28..28> BR12
//    </check>
//  </item>
//  


// -------------------------------  Field Item: GPIOB_BSRR_BR11  ----------------------------------
// SVD Line: 8472

//  <item> SFDITEM_FIELD__GPIOB_BSRR_BR11
//    <name> BR11 </name>
//    <w> 
//    <i> [Bit 27] WO (@ 0x50000418) Port x reset bit y (y =  0..15) </i>
//    <check> 
//      <loc> ( (unsigned int) GPIOB_BSRR ) </loc>
//      <o.27..27> BR11
//    </check>
//  </item>
//  


// -------------------------------  Field Item: GPIOB_BSRR_BR10  ----------------------------------
// SVD Line: 8479

//  <item> SFDITEM_FIELD__GPIOB_BSRR_BR10
//    <name> BR10 </name>
//    <w> 
//    <i> [Bit 26] WO (@ 0x50000418) Port x reset bit y (y =  0..15) </i>
//    <check> 
//      <loc> ( (unsigned int) GPIOB_BSRR ) </loc>
//      <o.26..26> BR10
//    </check>
//  </item>
//  


// -------------------------------  Field Item: GPIOB_BSRR_BR9  -----------------------------------
// SVD Line: 8486

//  <item> SFDITEM_FIELD__GPIOB_BSRR_BR9
//    <name> BR9 </name>
//    <w> 
//    <i> [Bit 25] WO (@ 0x50000418) Port x reset bit y (y =  0..15) </i>
//    <check> 
//      <loc> ( (unsigned int) GPIOB_BSRR ) </loc>
//      <o.25..25> BR9
//    </check>
//  </item>
//  


// -------------------------------  Field Item: GPIOB_BSRR_BR8  -----------------------------------
// SVD Line: 8493

//  <item> SFDITEM_FIELD__GPIOB_BSRR_BR8
//    <name> BR8 </name>
//    <w> 
//    <i> [Bit 24] WO (@ 0x50000418) Port x reset bit y (y =  0..15) </i>
//    <check> 
//      <loc> ( (unsigned int) GPIOB_BSRR ) </loc>
//      <o.24..24> BR8
//    </check>
//  </item>
//  


// -------------------------------  Field Item: GPIOB_BSRR_BR7  -----------------------------------
// SVD Line: 8500

//  <item> SFDITEM_FIELD__GPIOB_BSRR_BR7
//    <name> BR7 </name>
//    <w> 
//    <i> [Bit 23] WO (@ 0x50000418) Port x reset bit y (y =  0..15) </i>
//    <check> 
//      <loc> ( (unsigned int) GPIOB_BSRR ) </loc>
//      <o.23..23> BR7
//    </check>
//  </item>
//  


// -------------------------------  Field Item: GPIOB_BSRR_BR6  -----------------------------------
// SVD Line: 8507

//  <item> SFDITEM_FIELD__GPIOB_BSRR_BR6
//    <name> BR6 </name>
//    <w> 
//    <i> [Bit 22] WO (@ 0x50000418) Port x reset bit y (y =  0..15) </i>
//    <check> 
//      <loc> ( (unsigned int) GPIOB_BSRR ) </loc>
//      <o.22..22> BR6
//    </check>
//  </item>
//  


// -------------------------------  Field Item: GPIOB_BSRR_BR5  -----------------------------------
// SVD Line: 8514

//  <item> SFDITEM_FIELD__GPIOB_BSRR_BR5
//    <name> BR5 </name>
//    <w> 
//    <i> [Bit 21] WO (@ 0x50000418) Port x reset bit y (y =  0..15) </i>
//    <check> 
//      <loc> ( (unsigned int) GPIOB_BSRR ) </loc>
//      <o.21..21> BR5
//    </check>
//  </item>
//  


// -------------------------------  Field Item: GPIOB_BSRR_BR4  -----------------------------------
// SVD Line: 8521

//  <item> SFDITEM_FIELD__GPIOB_BSRR_BR4
//    <name> BR4 </name>
//    <w> 
//    <i> [Bit 20] WO (@ 0x50000418) Port x reset bit y (y =  0..15) </i>
//    <check> 
//      <loc> ( (unsigned int) GPIOB_BSRR ) </loc>
//      <o.20..20> BR4
//    </check>
//  </item>
//  


// -------------------------------  Field Item: GPIOB_BSRR_BR3  -----------------------------------
// SVD Line: 8528

//  <item> SFDITEM_FIELD__GPIOB_BSRR_BR3
//    <name> BR3 </name>
//    <w> 
//    <i> [Bit 19] WO (@ 0x50000418) Port x reset bit y (y =  0..15) </i>
//    <check> 
//      <loc> ( (unsigned int) GPIOB_BSRR ) </loc>
//      <o.19..19> BR3
//    </check>
//  </item>
//  


// -------------------------------  Field Item: GPIOB_BSRR_BR2  -----------------------------------
// SVD Line: 8535

//  <item> SFDITEM_FIELD__GPIOB_BSRR_BR2
//    <name> BR2 </name>
//    <w> 
//    <i> [Bit 18] WO (@ 0x50000418) Port x reset bit y (y =  0..15) </i>
//    <check> 
//      <loc> ( (unsigned int) GPIOB_BSRR ) </loc>
//      <o.18..18> BR2
//    </check>
//  </item>
//  


// -------------------------------  Field Item: GPIOB_BSRR_BR1  -----------------------------------
// SVD Line: 8542

//  <item> SFDITEM_FIELD__GPIOB_BSRR_BR1
//    <name> BR1 </name>
//    <w> 
//    <i> [Bit 17] WO (@ 0x50000418) Port x reset bit y (y =  0..15) </i>
//    <check> 
//      <loc> ( (unsigned int) GPIOB_BSRR ) </loc>
//      <o.17..17> BR1
//    </check>
//  </item>
//  


// -------------------------------  Field Item: GPIOB_BSRR_BR0  -----------------------------------
// SVD Line: 8549

//  <item> SFDITEM_FIELD__GPIOB_BSRR_BR0
//    <name> BR0 </name>
//    <w> 
//    <i> [Bit 16] WO (@ 0x50000418) Port x set bit y (y=  0..15) </i>
//    <check> 
//      <loc> ( (unsigned int) GPIOB_BSRR ) </loc>
//      <o.16..16> BR0
//    </check>
//  </item>
//  


// -------------------------------  Field Item: GPIOB_BSRR_BS15  ----------------------------------
// SVD Line: 8556

//  <item> SFDITEM_FIELD__GPIOB_BSRR_BS15
//    <name> BS15 </name>
//    <w> 
//    <i> [Bit 15] WO (@ 0x50000418) Port x set bit y (y=  0..15) </i>
//    <check> 
//      <loc> ( (unsigned int) GPIOB_BSRR ) </loc>
//      <o.15..15> BS15
//    </check>
//  </item>
//  


// -------------------------------  Field Item: GPIOB_BSRR_BS14  ----------------------------------
// SVD Line: 8563

//  <item> SFDITEM_FIELD__GPIOB_BSRR_BS14
//    <name> BS14 </name>
//    <w> 
//    <i> [Bit 14] WO (@ 0x50000418) Port x set bit y (y=  0..15) </i>
//    <check> 
//      <loc> ( (unsigned int) GPIOB_BSRR ) </loc>
//      <o.14..14> BS14
//    </check>
//  </item>
//  


// -------------------------------  Field Item: GPIOB_BSRR_BS13  ----------------------------------
// SVD Line: 8570

//  <item> SFDITEM_FIELD__GPIOB_BSRR_BS13
//    <name> BS13 </name>
//    <w> 
//    <i> [Bit 13] WO (@ 0x50000418) Port x set bit y (y=  0..15) </i>
//    <check> 
//      <loc> ( (unsigned int) GPIOB_BSRR ) </loc>
//      <o.13..13> BS13
//    </check>
//  </item>
//  


// -------------------------------  Field Item: GPIOB_BSRR_BS12  ----------------------------------
// SVD Line: 8577

//  <item> SFDITEM_FIELD__GPIOB_BSRR_BS12
//    <name> BS12 </name>
//    <w> 
//    <i> [Bit 12] WO (@ 0x50000418) Port x set bit y (y=  0..15) </i>
//    <check> 
//      <loc> ( (unsigned int) GPIOB_BSRR ) </loc>
//      <o.12..12> BS12
//    </check>
//  </item>
//  


// -------------------------------  Field Item: GPIOB_BSRR_BS11  ----------------------------------
// SVD Line: 8584

//  <item> SFDITEM_FIELD__GPIOB_BSRR_BS11
//    <name> BS11 </name>
//    <w> 
//    <i> [Bit 11] WO (@ 0x50000418) Port x set bit y (y=  0..15) </i>
//    <check> 
//      <loc> ( (unsigned int) GPIOB_BSRR ) </loc>
//      <o.11..11> BS11
//    </check>
//  </item>
//  


// -------------------------------  Field Item: GPIOB_BSRR_BS10  ----------------------------------
// SVD Line: 8591

//  <item> SFDITEM_FIELD__GPIOB_BSRR_BS10
//    <name> BS10 </name>
//    <w> 
//    <i> [Bit 10] WO (@ 0x50000418) Port x set bit y (y=  0..15) </i>
//    <check> 
//      <loc> ( (unsigned int) GPIOB_BSRR ) </loc>
//      <o.10..10> BS10
//    </check>
//  </item>
//  


// -------------------------------  Field Item: GPIOB_BSRR_BS9  -----------------------------------
// SVD Line: 8598

//  <item> SFDITEM_FIELD__GPIOB_BSRR_BS9
//    <name> BS9 </name>
//    <w> 
//    <i> [Bit 9] WO (@ 0x50000418) Port x set bit y (y=  0..15) </i>
//    <check> 
//      <loc> ( (unsigned int) GPIOB_BSRR ) </loc>
//      <o.9..9> BS9
//    </check>
//  </item>
//  


// -------------------------------  Field Item: GPIOB_BSRR_BS8  -----------------------------------
// SVD Line: 8605

//  <item> SFDITEM_FIELD__GPIOB_BSRR_BS8
//    <name> BS8 </name>
//    <w> 
//    <i> [Bit 8] WO (@ 0x50000418) Port x set bit y (y=  0..15) </i>
//    <check> 
//      <loc> ( (unsigned int) GPIOB_BSRR ) </loc>
//      <o.8..8> BS8
//    </check>
//  </item>
//  


// -------------------------------  Field Item: GPIOB_BSRR_BS7  -----------------------------------
// SVD Line: 8612

//  <item> SFDITEM_FIELD__GPIOB_BSRR_BS7
//    <name> BS7 </name>
//    <w> 
//    <i> [Bit 7] WO (@ 0x50000418) Port x set bit y (y=  0..15) </i>
//    <check> 
//      <loc> ( (unsigned int) GPIOB_BSRR ) </loc>
//      <o.7..7> BS7
//    </check>
//  </item>
//  


// -------------------------------  Field Item: GPIOB_BSRR_BS6  -----------------------------------
// SVD Line: 8619

//  <item> SFDITEM_FIELD__GPIOB_BSRR_BS6
//    <name> BS6 </name>
//    <w> 
//    <i> [Bit 6] WO (@ 0x50000418) Port x set bit y (y=  0..15) </i>
//    <check> 
//      <loc> ( (unsigned int) GPIOB_BSRR ) </loc>
//      <o.6..6> BS6
//    </check>
//  </item>
//  


// -------------------------------  Field Item: GPIOB_BSRR_BS5  -----------------------------------
// SVD Line: 8626

//  <item> SFDITEM_FIELD__GPIOB_BSRR_BS5
//    <name> BS5 </name>
//    <w> 
//    <i> [Bit 5] WO (@ 0x50000418) Port x set bit y (y=  0..15) </i>
//    <check> 
//      <loc> ( (unsigned int) GPIOB_BSRR ) </loc>
//      <o.5..5> BS5
//    </check>
//  </item>
//  


// -------------------------------  Field Item: GPIOB_BSRR_BS4  -----------------------------------
// SVD Line: 8633

//  <item> SFDITEM_FIELD__GPIOB_BSRR_BS4
//    <name> BS4 </name>
//    <w> 
//    <i> [Bit 4] WO (@ 0x50000418) Port x set bit y (y=  0..15) </i>
//    <check> 
//      <loc> ( (unsigned int) GPIOB_BSRR ) </loc>
//      <o.4..4> BS4
//    </check>
//  </item>
//  


// -------------------------------  Field Item: GPIOB_BSRR_BS3  -----------------------------------
// SVD Line: 8640

//  <item> SFDITEM_FIELD__GPIOB_BSRR_BS3
//    <name> BS3 </name>
//    <w> 
//    <i> [Bit 3] WO (@ 0x50000418) Port x set bit y (y=  0..15) </i>
//    <check> 
//      <loc> ( (unsigned int) GPIOB_BSRR ) </loc>
//      <o.3..3> BS3
//    </check>
//  </item>
//  


// -------------------------------  Field Item: GPIOB_BSRR_BS2  -----------------------------------
// SVD Line: 8647

//  <item> SFDITEM_FIELD__GPIOB_BSRR_BS2
//    <name> BS2 </name>
//    <w> 
//    <i> [Bit 2] WO (@ 0x50000418) Port x set bit y (y=  0..15) </i>
//    <check> 
//      <loc> ( (unsigned int) GPIOB_BSRR ) </loc>
//      <o.2..2> BS2
//    </check>
//  </item>
//  


// -------------------------------  Field Item: GPIOB_BSRR_BS1  -----------------------------------
// SVD Line: 8654

//  <item> SFDITEM_FIELD__GPIOB_BSRR_BS1
//    <name> BS1 </name>
//    <w> 
//    <i> [Bit 1] WO (@ 0x50000418) Port x set bit y (y=  0..15) </i>
//    <check> 
//      <loc> ( (unsigned int) GPIOB_BSRR ) </loc>
//      <o.1..1> BS1
//    </check>
//  </item>
//  


// -------------------------------  Field Item: GPIOB_BSRR_BS0  -----------------------------------
// SVD Line: 8661

//  <item> SFDITEM_FIELD__GPIOB_BSRR_BS0
//    <name> BS0 </name>
//    <w> 
//    <i> [Bit 0] WO (@ 0x50000418) Port x set bit y (y=  0..15) </i>
//    <check> 
//      <loc> ( (unsigned int) GPIOB_BSRR ) </loc>
//      <o.0..0> BS0
//    </check>
//  </item>
//  


// -------------------------------  Register RTree: GPIOB_BSRR  -----------------------------------
// SVD Line: 8434

//  <rtree> SFDITEM_REG__GPIOB_BSRR
//    <name> BSRR </name>
//    <w> 
//    <i> [Bits 31..0] WO (@ 0x50000418) GPIO port bit set/reset  register </i>
//    <loc> ( (unsigned int)((GPIOB_BSRR >> 0) & 0xFFFFFFFF), ((GPIOB_BSRR = (GPIOB_BSRR & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__GPIOB_BSRR_BR15 </item>
//    <item> SFDITEM_FIELD__GPIOB_BSRR_BR14 </item>
//    <item> SFDITEM_FIELD__GPIOB_BSRR_BR13 </item>
//    <item> SFDITEM_FIELD__GPIOB_BSRR_BR12 </item>
//    <item> SFDITEM_FIELD__GPIOB_BSRR_BR11 </item>
//    <item> SFDITEM_FIELD__GPIOB_BSRR_BR10 </item>
//    <item> SFDITEM_FIELD__GPIOB_BSRR_BR9 </item>
//    <item> SFDITEM_FIELD__GPIOB_BSRR_BR8 </item>
//    <item> SFDITEM_FIELD__GPIOB_BSRR_BR7 </item>
//    <item> SFDITEM_FIELD__GPIOB_BSRR_BR6 </item>
//    <item> SFDITEM_FIELD__GPIOB_BSRR_BR5 </item>
//    <item> SFDITEM_FIELD__GPIOB_BSRR_BR4 </item>
//    <item> SFDITEM_FIELD__GPIOB_BSRR_BR3 </item>
//    <item> SFDITEM_FIELD__GPIOB_BSRR_BR2 </item>
//    <item> SFDITEM_FIELD__GPIOB_BSRR_BR1 </item>
//    <item> SFDITEM_FIELD__GPIOB_BSRR_BR0 </item>
//    <item> SFDITEM_FIELD__GPIOB_BSRR_BS15 </item>
//    <item> SFDITEM_FIELD__GPIOB_BSRR_BS14 </item>
//    <item> SFDITEM_FIELD__GPIOB_BSRR_BS13 </item>
//    <item> SFDITEM_FIELD__GPIOB_BSRR_BS12 </item>
//    <item> SFDITEM_FIELD__GPIOB_BSRR_BS11 </item>
//    <item> SFDITEM_FIELD__GPIOB_BSRR_BS10 </item>
//    <item> SFDITEM_FIELD__GPIOB_BSRR_BS9 </item>
//    <item> SFDITEM_FIELD__GPIOB_BSRR_BS8 </item>
//    <item> SFDITEM_FIELD__GPIOB_BSRR_BS7 </item>
//    <item> SFDITEM_FIELD__GPIOB_BSRR_BS6 </item>
//    <item> SFDITEM_FIELD__GPIOB_BSRR_BS5 </item>
//    <item> SFDITEM_FIELD__GPIOB_BSRR_BS4 </item>
//    <item> SFDITEM_FIELD__GPIOB_BSRR_BS3 </item>
//    <item> SFDITEM_FIELD__GPIOB_BSRR_BS2 </item>
//    <item> SFDITEM_FIELD__GPIOB_BSRR_BS1 </item>
//    <item> SFDITEM_FIELD__GPIOB_BSRR_BS0 </item>
//  </rtree>
//  


// ----------------------------  Register Item Address: GPIOB_LCKR  -------------------------------
// SVD Line: 8670

unsigned int GPIOB_LCKR __AT (0x5000041C);



// -------------------------------  Field Item: GPIOB_LCKR_LCKK  ----------------------------------
// SVD Line: 8680

//  <item> SFDITEM_FIELD__GPIOB_LCKR_LCKK
//    <name> LCKK </name>
//    <rw> 
//    <i> [Bit 16] RW (@ 0x5000041C) Port x lock bit y (y=  0..15) </i>
//    <check> 
//      <loc> ( (unsigned int) GPIOB_LCKR ) </loc>
//      <o.16..16> LCKK
//    </check>
//  </item>
//  


// ------------------------------  Field Item: GPIOB_LCKR_LCK15  ----------------------------------
// SVD Line: 8687

//  <item> SFDITEM_FIELD__GPIOB_LCKR_LCK15
//    <name> LCK15 </name>
//    <rw> 
//    <i> [Bit 15] RW (@ 0x5000041C) Port x lock bit y (y=  0..15) </i>
//    <check> 
//      <loc> ( (unsigned int) GPIOB_LCKR ) </loc>
//      <o.15..15> LCK15
//    </check>
//  </item>
//  


// ------------------------------  Field Item: GPIOB_LCKR_LCK14  ----------------------------------
// SVD Line: 8694

//  <item> SFDITEM_FIELD__GPIOB_LCKR_LCK14
//    <name> LCK14 </name>
//    <rw> 
//    <i> [Bit 14] RW (@ 0x5000041C) Port x lock bit y (y=  0..15) </i>
//    <check> 
//      <loc> ( (unsigned int) GPIOB_LCKR ) </loc>
//      <o.14..14> LCK14
//    </check>
//  </item>
//  


// ------------------------------  Field Item: GPIOB_LCKR_LCK13  ----------------------------------
// SVD Line: 8701

//  <item> SFDITEM_FIELD__GPIOB_LCKR_LCK13
//    <name> LCK13 </name>
//    <rw> 
//    <i> [Bit 13] RW (@ 0x5000041C) Port x lock bit y (y=  0..15) </i>
//    <check> 
//      <loc> ( (unsigned int) GPIOB_LCKR ) </loc>
//      <o.13..13> LCK13
//    </check>
//  </item>
//  


// ------------------------------  Field Item: GPIOB_LCKR_LCK12  ----------------------------------
// SVD Line: 8708

//  <item> SFDITEM_FIELD__GPIOB_LCKR_LCK12
//    <name> LCK12 </name>
//    <rw> 
//    <i> [Bit 12] RW (@ 0x5000041C) Port x lock bit y (y=  0..15) </i>
//    <check> 
//      <loc> ( (unsigned int) GPIOB_LCKR ) </loc>
//      <o.12..12> LCK12
//    </check>
//  </item>
//  


// ------------------------------  Field Item: GPIOB_LCKR_LCK11  ----------------------------------
// SVD Line: 8715

//  <item> SFDITEM_FIELD__GPIOB_LCKR_LCK11
//    <name> LCK11 </name>
//    <rw> 
//    <i> [Bit 11] RW (@ 0x5000041C) Port x lock bit y (y=  0..15) </i>
//    <check> 
//      <loc> ( (unsigned int) GPIOB_LCKR ) </loc>
//      <o.11..11> LCK11
//    </check>
//  </item>
//  


// ------------------------------  Field Item: GPIOB_LCKR_LCK10  ----------------------------------
// SVD Line: 8722

//  <item> SFDITEM_FIELD__GPIOB_LCKR_LCK10
//    <name> LCK10 </name>
//    <rw> 
//    <i> [Bit 10] RW (@ 0x5000041C) Port x lock bit y (y=  0..15) </i>
//    <check> 
//      <loc> ( (unsigned int) GPIOB_LCKR ) </loc>
//      <o.10..10> LCK10
//    </check>
//  </item>
//  


// -------------------------------  Field Item: GPIOB_LCKR_LCK9  ----------------------------------
// SVD Line: 8729

//  <item> SFDITEM_FIELD__GPIOB_LCKR_LCK9
//    <name> LCK9 </name>
//    <rw> 
//    <i> [Bit 9] RW (@ 0x5000041C) Port x lock bit y (y=  0..15) </i>
//    <check> 
//      <loc> ( (unsigned int) GPIOB_LCKR ) </loc>
//      <o.9..9> LCK9
//    </check>
//  </item>
//  


// -------------------------------  Field Item: GPIOB_LCKR_LCK8  ----------------------------------
// SVD Line: 8736

//  <item> SFDITEM_FIELD__GPIOB_LCKR_LCK8
//    <name> LCK8 </name>
//    <rw> 
//    <i> [Bit 8] RW (@ 0x5000041C) Port x lock bit y (y=  0..15) </i>
//    <check> 
//      <loc> ( (unsigned int) GPIOB_LCKR ) </loc>
//      <o.8..8> LCK8
//    </check>
//  </item>
//  


// -------------------------------  Field Item: GPIOB_LCKR_LCK7  ----------------------------------
// SVD Line: 8743

//  <item> SFDITEM_FIELD__GPIOB_LCKR_LCK7
//    <name> LCK7 </name>
//    <rw> 
//    <i> [Bit 7] RW (@ 0x5000041C) Port x lock bit y (y=  0..15) </i>
//    <check> 
//      <loc> ( (unsigned int) GPIOB_LCKR ) </loc>
//      <o.7..7> LCK7
//    </check>
//  </item>
//  


// -------------------------------  Field Item: GPIOB_LCKR_LCK6  ----------------------------------
// SVD Line: 8750

//  <item> SFDITEM_FIELD__GPIOB_LCKR_LCK6
//    <name> LCK6 </name>
//    <rw> 
//    <i> [Bit 6] RW (@ 0x5000041C) Port x lock bit y (y=  0..15) </i>
//    <check> 
//      <loc> ( (unsigned int) GPIOB_LCKR ) </loc>
//      <o.6..6> LCK6
//    </check>
//  </item>
//  


// -------------------------------  Field Item: GPIOB_LCKR_LCK5  ----------------------------------
// SVD Line: 8757

//  <item> SFDITEM_FIELD__GPIOB_LCKR_LCK5
//    <name> LCK5 </name>
//    <rw> 
//    <i> [Bit 5] RW (@ 0x5000041C) Port x lock bit y (y=  0..15) </i>
//    <check> 
//      <loc> ( (unsigned int) GPIOB_LCKR ) </loc>
//      <o.5..5> LCK5
//    </check>
//  </item>
//  


// -------------------------------  Field Item: GPIOB_LCKR_LCK4  ----------------------------------
// SVD Line: 8764

//  <item> SFDITEM_FIELD__GPIOB_LCKR_LCK4
//    <name> LCK4 </name>
//    <rw> 
//    <i> [Bit 4] RW (@ 0x5000041C) Port x lock bit y (y=  0..15) </i>
//    <check> 
//      <loc> ( (unsigned int) GPIOB_LCKR ) </loc>
//      <o.4..4> LCK4
//    </check>
//  </item>
//  


// -------------------------------  Field Item: GPIOB_LCKR_LCK3  ----------------------------------
// SVD Line: 8771

//  <item> SFDITEM_FIELD__GPIOB_LCKR_LCK3
//    <name> LCK3 </name>
//    <rw> 
//    <i> [Bit 3] RW (@ 0x5000041C) Port x lock bit y (y=  0..15) </i>
//    <check> 
//      <loc> ( (unsigned int) GPIOB_LCKR ) </loc>
//      <o.3..3> LCK3
//    </check>
//  </item>
//  


// -------------------------------  Field Item: GPIOB_LCKR_LCK2  ----------------------------------
// SVD Line: 8778

//  <item> SFDITEM_FIELD__GPIOB_LCKR_LCK2
//    <name> LCK2 </name>
//    <rw> 
//    <i> [Bit 2] RW (@ 0x5000041C) Port x lock bit y (y=  0..15) </i>
//    <check> 
//      <loc> ( (unsigned int) GPIOB_LCKR ) </loc>
//      <o.2..2> LCK2
//    </check>
//  </item>
//  


// -------------------------------  Field Item: GPIOB_LCKR_LCK1  ----------------------------------
// SVD Line: 8785

//  <item> SFDITEM_FIELD__GPIOB_LCKR_LCK1
//    <name> LCK1 </name>
//    <rw> 
//    <i> [Bit 1] RW (@ 0x5000041C) Port x lock bit y (y=  0..15) </i>
//    <check> 
//      <loc> ( (unsigned int) GPIOB_LCKR ) </loc>
//      <o.1..1> LCK1
//    </check>
//  </item>
//  


// -------------------------------  Field Item: GPIOB_LCKR_LCK0  ----------------------------------
// SVD Line: 8792

//  <item> SFDITEM_FIELD__GPIOB_LCKR_LCK0
//    <name> LCK0 </name>
//    <rw> 
//    <i> [Bit 0] RW (@ 0x5000041C) Port x lock bit y (y=  0..15) </i>
//    <check> 
//      <loc> ( (unsigned int) GPIOB_LCKR ) </loc>
//      <o.0..0> LCK0
//    </check>
//  </item>
//  


// -------------------------------  Register RTree: GPIOB_LCKR  -----------------------------------
// SVD Line: 8670

//  <rtree> SFDITEM_REG__GPIOB_LCKR
//    <name> LCKR </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x5000041C) GPIO port configuration lock  register </i>
//    <loc> ( (unsigned int)((GPIOB_LCKR >> 0) & 0xFFFFFFFF), ((GPIOB_LCKR = (GPIOB_LCKR & ~(0x1FFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0x1FFFF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__GPIOB_LCKR_LCKK </item>
//    <item> SFDITEM_FIELD__GPIOB_LCKR_LCK15 </item>
//    <item> SFDITEM_FIELD__GPIOB_LCKR_LCK14 </item>
//    <item> SFDITEM_FIELD__GPIOB_LCKR_LCK13 </item>
//    <item> SFDITEM_FIELD__GPIOB_LCKR_LCK12 </item>
//    <item> SFDITEM_FIELD__GPIOB_LCKR_LCK11 </item>
//    <item> SFDITEM_FIELD__GPIOB_LCKR_LCK10 </item>
//    <item> SFDITEM_FIELD__GPIOB_LCKR_LCK9 </item>
//    <item> SFDITEM_FIELD__GPIOB_LCKR_LCK8 </item>
//    <item> SFDITEM_FIELD__GPIOB_LCKR_LCK7 </item>
//    <item> SFDITEM_FIELD__GPIOB_LCKR_LCK6 </item>
//    <item> SFDITEM_FIELD__GPIOB_LCKR_LCK5 </item>
//    <item> SFDITEM_FIELD__GPIOB_LCKR_LCK4 </item>
//    <item> SFDITEM_FIELD__GPIOB_LCKR_LCK3 </item>
//    <item> SFDITEM_FIELD__GPIOB_LCKR_LCK2 </item>
//    <item> SFDITEM_FIELD__GPIOB_LCKR_LCK1 </item>
//    <item> SFDITEM_FIELD__GPIOB_LCKR_LCK0 </item>
//  </rtree>
//  


// ----------------------------  Register Item Address: GPIOB_AFRL  -------------------------------
// SVD Line: 8801

unsigned int GPIOB_AFRL __AT (0x50000420);



// ------------------------------  Field Item: GPIOB_AFRL_AFSEL7  ---------------------------------
// SVD Line: 8811

//  <item> SFDITEM_FIELD__GPIOB_AFRL_AFSEL7
//    <name> AFSEL7 </name>
//    <rw> 
//    <i> [Bits 31..28] RW (@ 0x50000420) Alternate function selection for port x  bit y (y = 0..7) </i>
//    <edit> 
//      <loc> ( (unsigned char)((GPIOB_AFRL >> 28) & 0xF), ((GPIOB_AFRL = (GPIOB_AFRL & ~(0xFUL << 28 )) | ((unsigned long)(Gui_u8:GuiVal & 0xF) << 28 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ------------------------------  Field Item: GPIOB_AFRL_AFSEL6  ---------------------------------
// SVD Line: 8818

//  <item> SFDITEM_FIELD__GPIOB_AFRL_AFSEL6
//    <name> AFSEL6 </name>
//    <rw> 
//    <i> [Bits 27..24] RW (@ 0x50000420) Alternate function selection for port x  bit y (y = 0..7) </i>
//    <edit> 
//      <loc> ( (unsigned char)((GPIOB_AFRL >> 24) & 0xF), ((GPIOB_AFRL = (GPIOB_AFRL & ~(0xFUL << 24 )) | ((unsigned long)(Gui_u8:GuiVal & 0xF) << 24 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ------------------------------  Field Item: GPIOB_AFRL_AFSEL5  ---------------------------------
// SVD Line: 8825

//  <item> SFDITEM_FIELD__GPIOB_AFRL_AFSEL5
//    <name> AFSEL5 </name>
//    <rw> 
//    <i> [Bits 23..20] RW (@ 0x50000420) Alternate function selection for port x  bit y (y = 0..7) </i>
//    <edit> 
//      <loc> ( (unsigned char)((GPIOB_AFRL >> 20) & 0xF), ((GPIOB_AFRL = (GPIOB_AFRL & ~(0xFUL << 20 )) | ((unsigned long)(Gui_u8:GuiVal & 0xF) << 20 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ------------------------------  Field Item: GPIOB_AFRL_AFSEL4  ---------------------------------
// SVD Line: 8832

//  <item> SFDITEM_FIELD__GPIOB_AFRL_AFSEL4
//    <name> AFSEL4 </name>
//    <rw> 
//    <i> [Bits 19..16] RW (@ 0x50000420) Alternate function selection for port x  bit y (y = 0..7) </i>
//    <edit> 
//      <loc> ( (unsigned char)((GPIOB_AFRL >> 16) & 0xF), ((GPIOB_AFRL = (GPIOB_AFRL & ~(0xFUL << 16 )) | ((unsigned long)(Gui_u8:GuiVal & 0xF) << 16 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ------------------------------  Field Item: GPIOB_AFRL_AFSEL3  ---------------------------------
// SVD Line: 8839

//  <item> SFDITEM_FIELD__GPIOB_AFRL_AFSEL3
//    <name> AFSEL3 </name>
//    <rw> 
//    <i> [Bits 15..12] RW (@ 0x50000420) Alternate function selection for port x  bit y (y = 0..7) </i>
//    <edit> 
//      <loc> ( (unsigned char)((GPIOB_AFRL >> 12) & 0xF), ((GPIOB_AFRL = (GPIOB_AFRL & ~(0xFUL << 12 )) | ((unsigned long)(Gui_u8:GuiVal & 0xF) << 12 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ------------------------------  Field Item: GPIOB_AFRL_AFSEL2  ---------------------------------
// SVD Line: 8846

//  <item> SFDITEM_FIELD__GPIOB_AFRL_AFSEL2
//    <name> AFSEL2 </name>
//    <rw> 
//    <i> [Bits 11..8] RW (@ 0x50000420) Alternate function selection for port x  bit y (y = 0..7) </i>
//    <edit> 
//      <loc> ( (unsigned char)((GPIOB_AFRL >> 8) & 0xF), ((GPIOB_AFRL = (GPIOB_AFRL & ~(0xFUL << 8 )) | ((unsigned long)(Gui_u8:GuiVal & 0xF) << 8 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ------------------------------  Field Item: GPIOB_AFRL_AFSEL1  ---------------------------------
// SVD Line: 8853

//  <item> SFDITEM_FIELD__GPIOB_AFRL_AFSEL1
//    <name> AFSEL1 </name>
//    <rw> 
//    <i> [Bits 7..4] RW (@ 0x50000420) Alternate function selection for port x  bit y (y = 0..7) </i>
//    <edit> 
//      <loc> ( (unsigned char)((GPIOB_AFRL >> 4) & 0xF), ((GPIOB_AFRL = (GPIOB_AFRL & ~(0xFUL << 4 )) | ((unsigned long)(Gui_u8:GuiVal & 0xF) << 4 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ------------------------------  Field Item: GPIOB_AFRL_AFSEL0  ---------------------------------
// SVD Line: 8860

//  <item> SFDITEM_FIELD__GPIOB_AFRL_AFSEL0
//    <name> AFSEL0 </name>
//    <rw> 
//    <i> [Bits 3..0] RW (@ 0x50000420) Alternate function selection for port x  bit y (y = 0..7) </i>
//    <edit> 
//      <loc> ( (unsigned char)((GPIOB_AFRL >> 0) & 0xF), ((GPIOB_AFRL = (GPIOB_AFRL & ~(0xFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -------------------------------  Register RTree: GPIOB_AFRL  -----------------------------------
// SVD Line: 8801

//  <rtree> SFDITEM_REG__GPIOB_AFRL
//    <name> AFRL </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x50000420) GPIO alternate function low  register </i>
//    <loc> ( (unsigned int)((GPIOB_AFRL >> 0) & 0xFFFFFFFF), ((GPIOB_AFRL = (GPIOB_AFRL & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__GPIOB_AFRL_AFSEL7 </item>
//    <item> SFDITEM_FIELD__GPIOB_AFRL_AFSEL6 </item>
//    <item> SFDITEM_FIELD__GPIOB_AFRL_AFSEL5 </item>
//    <item> SFDITEM_FIELD__GPIOB_AFRL_AFSEL4 </item>
//    <item> SFDITEM_FIELD__GPIOB_AFRL_AFSEL3 </item>
//    <item> SFDITEM_FIELD__GPIOB_AFRL_AFSEL2 </item>
//    <item> SFDITEM_FIELD__GPIOB_AFRL_AFSEL1 </item>
//    <item> SFDITEM_FIELD__GPIOB_AFRL_AFSEL0 </item>
//  </rtree>
//  


// ----------------------------  Register Item Address: GPIOB_AFRH  -------------------------------
// SVD Line: 8869

unsigned int GPIOB_AFRH __AT (0x50000424);



// -----------------------------  Field Item: GPIOB_AFRH_AFSEL15  ---------------------------------
// SVD Line: 8879

//  <item> SFDITEM_FIELD__GPIOB_AFRH_AFSEL15
//    <name> AFSEL15 </name>
//    <rw> 
//    <i> [Bits 31..28] RW (@ 0x50000424) Alternate function selection for port x  bit y (y = 8..15) </i>
//    <edit> 
//      <loc> ( (unsigned char)((GPIOB_AFRH >> 28) & 0xF), ((GPIOB_AFRH = (GPIOB_AFRH & ~(0xFUL << 28 )) | ((unsigned long)(Gui_u8:GuiVal & 0xF) << 28 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -----------------------------  Field Item: GPIOB_AFRH_AFSEL14  ---------------------------------
// SVD Line: 8886

//  <item> SFDITEM_FIELD__GPIOB_AFRH_AFSEL14
//    <name> AFSEL14 </name>
//    <rw> 
//    <i> [Bits 27..24] RW (@ 0x50000424) Alternate function selection for port x  bit y (y = 8..15) </i>
//    <edit> 
//      <loc> ( (unsigned char)((GPIOB_AFRH >> 24) & 0xF), ((GPIOB_AFRH = (GPIOB_AFRH & ~(0xFUL << 24 )) | ((unsigned long)(Gui_u8:GuiVal & 0xF) << 24 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -----------------------------  Field Item: GPIOB_AFRH_AFSEL13  ---------------------------------
// SVD Line: 8893

//  <item> SFDITEM_FIELD__GPIOB_AFRH_AFSEL13
//    <name> AFSEL13 </name>
//    <rw> 
//    <i> [Bits 23..20] RW (@ 0x50000424) Alternate function selection for port x  bit y (y = 8..15) </i>
//    <edit> 
//      <loc> ( (unsigned char)((GPIOB_AFRH >> 20) & 0xF), ((GPIOB_AFRH = (GPIOB_AFRH & ~(0xFUL << 20 )) | ((unsigned long)(Gui_u8:GuiVal & 0xF) << 20 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -----------------------------  Field Item: GPIOB_AFRH_AFSEL12  ---------------------------------
// SVD Line: 8900

//  <item> SFDITEM_FIELD__GPIOB_AFRH_AFSEL12
//    <name> AFSEL12 </name>
//    <rw> 
//    <i> [Bits 19..16] RW (@ 0x50000424) Alternate function selection for port x  bit y (y = 8..15) </i>
//    <edit> 
//      <loc> ( (unsigned char)((GPIOB_AFRH >> 16) & 0xF), ((GPIOB_AFRH = (GPIOB_AFRH & ~(0xFUL << 16 )) | ((unsigned long)(Gui_u8:GuiVal & 0xF) << 16 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -----------------------------  Field Item: GPIOB_AFRH_AFSEL11  ---------------------------------
// SVD Line: 8907

//  <item> SFDITEM_FIELD__GPIOB_AFRH_AFSEL11
//    <name> AFSEL11 </name>
//    <rw> 
//    <i> [Bits 15..12] RW (@ 0x50000424) Alternate function selection for port x  bit y (y = 8..15) </i>
//    <edit> 
//      <loc> ( (unsigned char)((GPIOB_AFRH >> 12) & 0xF), ((GPIOB_AFRH = (GPIOB_AFRH & ~(0xFUL << 12 )) | ((unsigned long)(Gui_u8:GuiVal & 0xF) << 12 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -----------------------------  Field Item: GPIOB_AFRH_AFSEL10  ---------------------------------
// SVD Line: 8914

//  <item> SFDITEM_FIELD__GPIOB_AFRH_AFSEL10
//    <name> AFSEL10 </name>
//    <rw> 
//    <i> [Bits 11..8] RW (@ 0x50000424) Alternate function selection for port x  bit y (y = 8..15) </i>
//    <edit> 
//      <loc> ( (unsigned char)((GPIOB_AFRH >> 8) & 0xF), ((GPIOB_AFRH = (GPIOB_AFRH & ~(0xFUL << 8 )) | ((unsigned long)(Gui_u8:GuiVal & 0xF) << 8 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ------------------------------  Field Item: GPIOB_AFRH_AFSEL9  ---------------------------------
// SVD Line: 8921

//  <item> SFDITEM_FIELD__GPIOB_AFRH_AFSEL9
//    <name> AFSEL9 </name>
//    <rw> 
//    <i> [Bits 7..4] RW (@ 0x50000424) Alternate function selection for port x  bit y (y = 8..15) </i>
//    <edit> 
//      <loc> ( (unsigned char)((GPIOB_AFRH >> 4) & 0xF), ((GPIOB_AFRH = (GPIOB_AFRH & ~(0xFUL << 4 )) | ((unsigned long)(Gui_u8:GuiVal & 0xF) << 4 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ------------------------------  Field Item: GPIOB_AFRH_AFSEL8  ---------------------------------
// SVD Line: 8928

//  <item> SFDITEM_FIELD__GPIOB_AFRH_AFSEL8
//    <name> AFSEL8 </name>
//    <rw> 
//    <i> [Bits 3..0] RW (@ 0x50000424) Alternate function selection for port x  bit y (y = 8..15) </i>
//    <edit> 
//      <loc> ( (unsigned char)((GPIOB_AFRH >> 0) & 0xF), ((GPIOB_AFRH = (GPIOB_AFRH & ~(0xFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -------------------------------  Register RTree: GPIOB_AFRH  -----------------------------------
// SVD Line: 8869

//  <rtree> SFDITEM_REG__GPIOB_AFRH
//    <name> AFRH </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x50000424) GPIO alternate function high  register </i>
//    <loc> ( (unsigned int)((GPIOB_AFRH >> 0) & 0xFFFFFFFF), ((GPIOB_AFRH = (GPIOB_AFRH & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__GPIOB_AFRH_AFSEL15 </item>
//    <item> SFDITEM_FIELD__GPIOB_AFRH_AFSEL14 </item>
//    <item> SFDITEM_FIELD__GPIOB_AFRH_AFSEL13 </item>
//    <item> SFDITEM_FIELD__GPIOB_AFRH_AFSEL12 </item>
//    <item> SFDITEM_FIELD__GPIOB_AFRH_AFSEL11 </item>
//    <item> SFDITEM_FIELD__GPIOB_AFRH_AFSEL10 </item>
//    <item> SFDITEM_FIELD__GPIOB_AFRH_AFSEL9 </item>
//    <item> SFDITEM_FIELD__GPIOB_AFRH_AFSEL8 </item>
//  </rtree>
//  


// ----------------------------  Register Item Address: GPIOB_BRR  --------------------------------
// SVD Line: 8937

unsigned int GPIOB_BRR __AT (0x50000428);



// --------------------------------  Field Item: GPIOB_BRR_BR0  -----------------------------------
// SVD Line: 8946

//  <item> SFDITEM_FIELD__GPIOB_BRR_BR0
//    <name> BR0 </name>
//    <w> 
//    <i> [Bit 0] WO (@ 0x50000428) Port Reset bit </i>
//    <check> 
//      <loc> ( (unsigned int) GPIOB_BRR ) </loc>
//      <o.0..0> BR0
//    </check>
//  </item>
//  


// --------------------------------  Field Item: GPIOB_BRR_BR1  -----------------------------------
// SVD Line: 8952

//  <item> SFDITEM_FIELD__GPIOB_BRR_BR1
//    <name> BR1 </name>
//    <w> 
//    <i> [Bit 1] WO (@ 0x50000428) Port Reset bit </i>
//    <check> 
//      <loc> ( (unsigned int) GPIOB_BRR ) </loc>
//      <o.1..1> BR1
//    </check>
//  </item>
//  


// --------------------------------  Field Item: GPIOB_BRR_BR2  -----------------------------------
// SVD Line: 8958

//  <item> SFDITEM_FIELD__GPIOB_BRR_BR2
//    <name> BR2 </name>
//    <w> 
//    <i> [Bit 2] WO (@ 0x50000428) Port Reset bit </i>
//    <check> 
//      <loc> ( (unsigned int) GPIOB_BRR ) </loc>
//      <o.2..2> BR2
//    </check>
//  </item>
//  


// --------------------------------  Field Item: GPIOB_BRR_BR3  -----------------------------------
// SVD Line: 8964

//  <item> SFDITEM_FIELD__GPIOB_BRR_BR3
//    <name> BR3 </name>
//    <w> 
//    <i> [Bit 3] WO (@ 0x50000428) Port Reset bit </i>
//    <check> 
//      <loc> ( (unsigned int) GPIOB_BRR ) </loc>
//      <o.3..3> BR3
//    </check>
//  </item>
//  


// --------------------------------  Field Item: GPIOB_BRR_BR4  -----------------------------------
// SVD Line: 8970

//  <item> SFDITEM_FIELD__GPIOB_BRR_BR4
//    <name> BR4 </name>
//    <w> 
//    <i> [Bit 4] WO (@ 0x50000428) Port Reset bit </i>
//    <check> 
//      <loc> ( (unsigned int) GPIOB_BRR ) </loc>
//      <o.4..4> BR4
//    </check>
//  </item>
//  


// --------------------------------  Field Item: GPIOB_BRR_BR5  -----------------------------------
// SVD Line: 8976

//  <item> SFDITEM_FIELD__GPIOB_BRR_BR5
//    <name> BR5 </name>
//    <w> 
//    <i> [Bit 5] WO (@ 0x50000428) Port Reset bit </i>
//    <check> 
//      <loc> ( (unsigned int) GPIOB_BRR ) </loc>
//      <o.5..5> BR5
//    </check>
//  </item>
//  


// --------------------------------  Field Item: GPIOB_BRR_BR6  -----------------------------------
// SVD Line: 8982

//  <item> SFDITEM_FIELD__GPIOB_BRR_BR6
//    <name> BR6 </name>
//    <w> 
//    <i> [Bit 6] WO (@ 0x50000428) Port Reset bit </i>
//    <check> 
//      <loc> ( (unsigned int) GPIOB_BRR ) </loc>
//      <o.6..6> BR6
//    </check>
//  </item>
//  


// --------------------------------  Field Item: GPIOB_BRR_BR7  -----------------------------------
// SVD Line: 8988

//  <item> SFDITEM_FIELD__GPIOB_BRR_BR7
//    <name> BR7 </name>
//    <w> 
//    <i> [Bit 7] WO (@ 0x50000428) Port Reset bit </i>
//    <check> 
//      <loc> ( (unsigned int) GPIOB_BRR ) </loc>
//      <o.7..7> BR7
//    </check>
//  </item>
//  


// --------------------------------  Field Item: GPIOB_BRR_BR8  -----------------------------------
// SVD Line: 8994

//  <item> SFDITEM_FIELD__GPIOB_BRR_BR8
//    <name> BR8 </name>
//    <w> 
//    <i> [Bit 8] WO (@ 0x50000428) Port Reset bit </i>
//    <check> 
//      <loc> ( (unsigned int) GPIOB_BRR ) </loc>
//      <o.8..8> BR8
//    </check>
//  </item>
//  


// --------------------------------  Field Item: GPIOB_BRR_BR9  -----------------------------------
// SVD Line: 9000

//  <item> SFDITEM_FIELD__GPIOB_BRR_BR9
//    <name> BR9 </name>
//    <w> 
//    <i> [Bit 9] WO (@ 0x50000428) Port Reset bit </i>
//    <check> 
//      <loc> ( (unsigned int) GPIOB_BRR ) </loc>
//      <o.9..9> BR9
//    </check>
//  </item>
//  


// -------------------------------  Field Item: GPIOB_BRR_BR10  -----------------------------------
// SVD Line: 9006

//  <item> SFDITEM_FIELD__GPIOB_BRR_BR10
//    <name> BR10 </name>
//    <w> 
//    <i> [Bit 10] WO (@ 0x50000428) Port Reset bit </i>
//    <check> 
//      <loc> ( (unsigned int) GPIOB_BRR ) </loc>
//      <o.10..10> BR10
//    </check>
//  </item>
//  


// -------------------------------  Field Item: GPIOB_BRR_BR11  -----------------------------------
// SVD Line: 9012

//  <item> SFDITEM_FIELD__GPIOB_BRR_BR11
//    <name> BR11 </name>
//    <w> 
//    <i> [Bit 11] WO (@ 0x50000428) Port Reset bit </i>
//    <check> 
//      <loc> ( (unsigned int) GPIOB_BRR ) </loc>
//      <o.11..11> BR11
//    </check>
//  </item>
//  


// -------------------------------  Field Item: GPIOB_BRR_BR12  -----------------------------------
// SVD Line: 9018

//  <item> SFDITEM_FIELD__GPIOB_BRR_BR12
//    <name> BR12 </name>
//    <w> 
//    <i> [Bit 12] WO (@ 0x50000428) Port Reset bit </i>
//    <check> 
//      <loc> ( (unsigned int) GPIOB_BRR ) </loc>
//      <o.12..12> BR12
//    </check>
//  </item>
//  


// -------------------------------  Field Item: GPIOB_BRR_BR13  -----------------------------------
// SVD Line: 9024

//  <item> SFDITEM_FIELD__GPIOB_BRR_BR13
//    <name> BR13 </name>
//    <w> 
//    <i> [Bit 13] WO (@ 0x50000428) Port Reset bit </i>
//    <check> 
//      <loc> ( (unsigned int) GPIOB_BRR ) </loc>
//      <o.13..13> BR13
//    </check>
//  </item>
//  


// -------------------------------  Field Item: GPIOB_BRR_BR14  -----------------------------------
// SVD Line: 9030

//  <item> SFDITEM_FIELD__GPIOB_BRR_BR14
//    <name> BR14 </name>
//    <w> 
//    <i> [Bit 14] WO (@ 0x50000428) Port Reset bit </i>
//    <check> 
//      <loc> ( (unsigned int) GPIOB_BRR ) </loc>
//      <o.14..14> BR14
//    </check>
//  </item>
//  


// -------------------------------  Field Item: GPIOB_BRR_BR15  -----------------------------------
// SVD Line: 9036

//  <item> SFDITEM_FIELD__GPIOB_BRR_BR15
//    <name> BR15 </name>
//    <w> 
//    <i> [Bit 15] WO (@ 0x50000428) Port Reset bit </i>
//    <check> 
//      <loc> ( (unsigned int) GPIOB_BRR ) </loc>
//      <o.15..15> BR15
//    </check>
//  </item>
//  


// --------------------------------  Register RTree: GPIOB_BRR  -----------------------------------
// SVD Line: 8937

//  <rtree> SFDITEM_REG__GPIOB_BRR
//    <name> BRR </name>
//    <w> 
//    <i> [Bits 31..0] WO (@ 0x50000428) port bit reset register </i>
//    <loc> ( (unsigned int)((GPIOB_BRR >> 0) & 0xFFFFFFFF), ((GPIOB_BRR = (GPIOB_BRR & ~(0xFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__GPIOB_BRR_BR0 </item>
//    <item> SFDITEM_FIELD__GPIOB_BRR_BR1 </item>
//    <item> SFDITEM_FIELD__GPIOB_BRR_BR2 </item>
//    <item> SFDITEM_FIELD__GPIOB_BRR_BR3 </item>
//    <item> SFDITEM_FIELD__GPIOB_BRR_BR4 </item>
//    <item> SFDITEM_FIELD__GPIOB_BRR_BR5 </item>
//    <item> SFDITEM_FIELD__GPIOB_BRR_BR6 </item>
//    <item> SFDITEM_FIELD__GPIOB_BRR_BR7 </item>
//    <item> SFDITEM_FIELD__GPIOB_BRR_BR8 </item>
//    <item> SFDITEM_FIELD__GPIOB_BRR_BR9 </item>
//    <item> SFDITEM_FIELD__GPIOB_BRR_BR10 </item>
//    <item> SFDITEM_FIELD__GPIOB_BRR_BR11 </item>
//    <item> SFDITEM_FIELD__GPIOB_BRR_BR12 </item>
//    <item> SFDITEM_FIELD__GPIOB_BRR_BR13 </item>
//    <item> SFDITEM_FIELD__GPIOB_BRR_BR14 </item>
//    <item> SFDITEM_FIELD__GPIOB_BRR_BR15 </item>
//  </rtree>
//  


// ---------------------------------  Peripheral View: GPIOB  -------------------------------------
// SVD Line: 7683

//  <view> GPIOB
//    <name> GPIOB </name>
//    <item> SFDITEM_REG__GPIOB_MODER </item>
//    <item> SFDITEM_REG__GPIOB_OTYPER </item>
//    <item> SFDITEM_REG__GPIOB_OSPEEDR </item>
//    <item> SFDITEM_REG__GPIOB_PUPDR </item>
//    <item> SFDITEM_REG__GPIOB_IDR </item>
//    <item> SFDITEM_REG__GPIOB_ODR </item>
//    <item> SFDITEM_REG__GPIOB_BSRR </item>
//    <item> SFDITEM_REG__GPIOB_LCKR </item>
//    <item> SFDITEM_REG__GPIOB_AFRL </item>
//    <item> SFDITEM_REG__GPIOB_AFRH </item>
//    <item> SFDITEM_REG__GPIOB_BRR </item>
//  </view>
//  


// ---------------------------  Register Item Address: GPIOC_MODER  -------------------------------
// SVD Line: 7694

unsigned int GPIOC_MODER __AT (0x50000800);



// -----------------------------  Field Item: GPIOC_MODER_MODER15  --------------------------------
// SVD Line: 7703

//  <item> SFDITEM_FIELD__GPIOC_MODER_MODER15
//    <name> MODER15 </name>
//    <rw> 
//    <i> [Bits 31..30] RW (@ 0x50000800) Port x configuration bits (y =  0..15) </i>
//    <edit> 
//      <loc> ( (unsigned char)((GPIOC_MODER >> 30) & 0x3), ((GPIOC_MODER = (GPIOC_MODER & ~(0x3UL << 30 )) | ((unsigned long)(Gui_u8:GuiVal & 0x3) << 30 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -----------------------------  Field Item: GPIOC_MODER_MODER14  --------------------------------
// SVD Line: 7710

//  <item> SFDITEM_FIELD__GPIOC_MODER_MODER14
//    <name> MODER14 </name>
//    <rw> 
//    <i> [Bits 29..28] RW (@ 0x50000800) Port x configuration bits (y =  0..15) </i>
//    <edit> 
//      <loc> ( (unsigned char)((GPIOC_MODER >> 28) & 0x3), ((GPIOC_MODER = (GPIOC_MODER & ~(0x3UL << 28 )) | ((unsigned long)(Gui_u8:GuiVal & 0x3) << 28 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -----------------------------  Field Item: GPIOC_MODER_MODER13  --------------------------------
// SVD Line: 7717

//  <item> SFDITEM_FIELD__GPIOC_MODER_MODER13
//    <name> MODER13 </name>
//    <rw> 
//    <i> [Bits 27..26] RW (@ 0x50000800) Port x configuration bits (y =  0..15) </i>
//    <edit> 
//      <loc> ( (unsigned char)((GPIOC_MODER >> 26) & 0x3), ((GPIOC_MODER = (GPIOC_MODER & ~(0x3UL << 26 )) | ((unsigned long)(Gui_u8:GuiVal & 0x3) << 26 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -----------------------------  Field Item: GPIOC_MODER_MODER12  --------------------------------
// SVD Line: 7724

//  <item> SFDITEM_FIELD__GPIOC_MODER_MODER12
//    <name> MODER12 </name>
//    <rw> 
//    <i> [Bits 25..24] RW (@ 0x50000800) Port x configuration bits (y =  0..15) </i>
//    <edit> 
//      <loc> ( (unsigned char)((GPIOC_MODER >> 24) & 0x3), ((GPIOC_MODER = (GPIOC_MODER & ~(0x3UL << 24 )) | ((unsigned long)(Gui_u8:GuiVal & 0x3) << 24 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -----------------------------  Field Item: GPIOC_MODER_MODER11  --------------------------------
// SVD Line: 7731

//  <item> SFDITEM_FIELD__GPIOC_MODER_MODER11
//    <name> MODER11 </name>
//    <rw> 
//    <i> [Bits 23..22] RW (@ 0x50000800) Port x configuration bits (y =  0..15) </i>
//    <edit> 
//      <loc> ( (unsigned char)((GPIOC_MODER >> 22) & 0x3), ((GPIOC_MODER = (GPIOC_MODER & ~(0x3UL << 22 )) | ((unsigned long)(Gui_u8:GuiVal & 0x3) << 22 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -----------------------------  Field Item: GPIOC_MODER_MODER10  --------------------------------
// SVD Line: 7738

//  <item> SFDITEM_FIELD__GPIOC_MODER_MODER10
//    <name> MODER10 </name>
//    <rw> 
//    <i> [Bits 21..20] RW (@ 0x50000800) Port x configuration bits (y =  0..15) </i>
//    <edit> 
//      <loc> ( (unsigned char)((GPIOC_MODER >> 20) & 0x3), ((GPIOC_MODER = (GPIOC_MODER & ~(0x3UL << 20 )) | ((unsigned long)(Gui_u8:GuiVal & 0x3) << 20 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -----------------------------  Field Item: GPIOC_MODER_MODER9  ---------------------------------
// SVD Line: 7745

//  <item> SFDITEM_FIELD__GPIOC_MODER_MODER9
//    <name> MODER9 </name>
//    <rw> 
//    <i> [Bits 19..18] RW (@ 0x50000800) Port x configuration bits (y =  0..15) </i>
//    <edit> 
//      <loc> ( (unsigned char)((GPIOC_MODER >> 18) & 0x3), ((GPIOC_MODER = (GPIOC_MODER & ~(0x3UL << 18 )) | ((unsigned long)(Gui_u8:GuiVal & 0x3) << 18 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -----------------------------  Field Item: GPIOC_MODER_MODER8  ---------------------------------
// SVD Line: 7752

//  <item> SFDITEM_FIELD__GPIOC_MODER_MODER8
//    <name> MODER8 </name>
//    <rw> 
//    <i> [Bits 17..16] RW (@ 0x50000800) Port x configuration bits (y =  0..15) </i>
//    <edit> 
//      <loc> ( (unsigned char)((GPIOC_MODER >> 16) & 0x3), ((GPIOC_MODER = (GPIOC_MODER & ~(0x3UL << 16 )) | ((unsigned long)(Gui_u8:GuiVal & 0x3) << 16 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -----------------------------  Field Item: GPIOC_MODER_MODER7  ---------------------------------
// SVD Line: 7759

//  <item> SFDITEM_FIELD__GPIOC_MODER_MODER7
//    <name> MODER7 </name>
//    <rw> 
//    <i> [Bits 15..14] RW (@ 0x50000800) Port x configuration bits (y =  0..15) </i>
//    <edit> 
//      <loc> ( (unsigned char)((GPIOC_MODER >> 14) & 0x3), ((GPIOC_MODER = (GPIOC_MODER & ~(0x3UL << 14 )) | ((unsigned long)(Gui_u8:GuiVal & 0x3) << 14 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -----------------------------  Field Item: GPIOC_MODER_MODER6  ---------------------------------
// SVD Line: 7766

//  <item> SFDITEM_FIELD__GPIOC_MODER_MODER6
//    <name> MODER6 </name>
//    <rw> 
//    <i> [Bits 13..12] RW (@ 0x50000800) Port x configuration bits (y =  0..15) </i>
//    <edit> 
//      <loc> ( (unsigned char)((GPIOC_MODER >> 12) & 0x3), ((GPIOC_MODER = (GPIOC_MODER & ~(0x3UL << 12 )) | ((unsigned long)(Gui_u8:GuiVal & 0x3) << 12 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -----------------------------  Field Item: GPIOC_MODER_MODER5  ---------------------------------
// SVD Line: 7773

//  <item> SFDITEM_FIELD__GPIOC_MODER_MODER5
//    <name> MODER5 </name>
//    <rw> 
//    <i> [Bits 11..10] RW (@ 0x50000800) Port x configuration bits (y =  0..15) </i>
//    <edit> 
//      <loc> ( (unsigned char)((GPIOC_MODER >> 10) & 0x3), ((GPIOC_MODER = (GPIOC_MODER & ~(0x3UL << 10 )) | ((unsigned long)(Gui_u8:GuiVal & 0x3) << 10 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -----------------------------  Field Item: GPIOC_MODER_MODER4  ---------------------------------
// SVD Line: 7780

//  <item> SFDITEM_FIELD__GPIOC_MODER_MODER4
//    <name> MODER4 </name>
//    <rw> 
//    <i> [Bits 9..8] RW (@ 0x50000800) Port x configuration bits (y =  0..15) </i>
//    <edit> 
//      <loc> ( (unsigned char)((GPIOC_MODER >> 8) & 0x3), ((GPIOC_MODER = (GPIOC_MODER & ~(0x3UL << 8 )) | ((unsigned long)(Gui_u8:GuiVal & 0x3) << 8 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -----------------------------  Field Item: GPIOC_MODER_MODER3  ---------------------------------
// SVD Line: 7787

//  <item> SFDITEM_FIELD__GPIOC_MODER_MODER3
//    <name> MODER3 </name>
//    <rw> 
//    <i> [Bits 7..6] RW (@ 0x50000800) Port x configuration bits (y =  0..15) </i>
//    <edit> 
//      <loc> ( (unsigned char)((GPIOC_MODER >> 6) & 0x3), ((GPIOC_MODER = (GPIOC_MODER & ~(0x3UL << 6 )) | ((unsigned long)(Gui_u8:GuiVal & 0x3) << 6 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -----------------------------  Field Item: GPIOC_MODER_MODER2  ---------------------------------
// SVD Line: 7794

//  <item> SFDITEM_FIELD__GPIOC_MODER_MODER2
//    <name> MODER2 </name>
//    <rw> 
//    <i> [Bits 5..4] RW (@ 0x50000800) Port x configuration bits (y =  0..15) </i>
//    <edit> 
//      <loc> ( (unsigned char)((GPIOC_MODER >> 4) & 0x3), ((GPIOC_MODER = (GPIOC_MODER & ~(0x3UL << 4 )) | ((unsigned long)(Gui_u8:GuiVal & 0x3) << 4 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -----------------------------  Field Item: GPIOC_MODER_MODER1  ---------------------------------
// SVD Line: 7801

//  <item> SFDITEM_FIELD__GPIOC_MODER_MODER1
//    <name> MODER1 </name>
//    <rw> 
//    <i> [Bits 3..2] RW (@ 0x50000800) Port x configuration bits (y =  0..15) </i>
//    <edit> 
//      <loc> ( (unsigned char)((GPIOC_MODER >> 2) & 0x3), ((GPIOC_MODER = (GPIOC_MODER & ~(0x3UL << 2 )) | ((unsigned long)(Gui_u8:GuiVal & 0x3) << 2 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -----------------------------  Field Item: GPIOC_MODER_MODER0  ---------------------------------
// SVD Line: 7808

//  <item> SFDITEM_FIELD__GPIOC_MODER_MODER0
//    <name> MODER0 </name>
//    <rw> 
//    <i> [Bits 1..0] RW (@ 0x50000800) Port x configuration bits (y =  0..15) </i>
//    <edit> 
//      <loc> ( (unsigned char)((GPIOC_MODER >> 0) & 0x3), ((GPIOC_MODER = (GPIOC_MODER & ~(0x3UL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0x3) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -------------------------------  Register RTree: GPIOC_MODER  ----------------------------------
// SVD Line: 7694

//  <rtree> SFDITEM_REG__GPIOC_MODER
//    <name> MODER </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x50000800) GPIO port mode register </i>
//    <loc> ( (unsigned int)((GPIOC_MODER >> 0) & 0xFFFFFFFF), ((GPIOC_MODER = (GPIOC_MODER & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__GPIOC_MODER_MODER15 </item>
//    <item> SFDITEM_FIELD__GPIOC_MODER_MODER14 </item>
//    <item> SFDITEM_FIELD__GPIOC_MODER_MODER13 </item>
//    <item> SFDITEM_FIELD__GPIOC_MODER_MODER12 </item>
//    <item> SFDITEM_FIELD__GPIOC_MODER_MODER11 </item>
//    <item> SFDITEM_FIELD__GPIOC_MODER_MODER10 </item>
//    <item> SFDITEM_FIELD__GPIOC_MODER_MODER9 </item>
//    <item> SFDITEM_FIELD__GPIOC_MODER_MODER8 </item>
//    <item> SFDITEM_FIELD__GPIOC_MODER_MODER7 </item>
//    <item> SFDITEM_FIELD__GPIOC_MODER_MODER6 </item>
//    <item> SFDITEM_FIELD__GPIOC_MODER_MODER5 </item>
//    <item> SFDITEM_FIELD__GPIOC_MODER_MODER4 </item>
//    <item> SFDITEM_FIELD__GPIOC_MODER_MODER3 </item>
//    <item> SFDITEM_FIELD__GPIOC_MODER_MODER2 </item>
//    <item> SFDITEM_FIELD__GPIOC_MODER_MODER1 </item>
//    <item> SFDITEM_FIELD__GPIOC_MODER_MODER0 </item>
//  </rtree>
//  


// ---------------------------  Register Item Address: GPIOC_OTYPER  ------------------------------
// SVD Line: 7817

unsigned int GPIOC_OTYPER __AT (0x50000804);



// ------------------------------  Field Item: GPIOC_OTYPER_OT15  ---------------------------------
// SVD Line: 7826

//  <item> SFDITEM_FIELD__GPIOC_OTYPER_OT15
//    <name> OT15 </name>
//    <rw> 
//    <i> [Bit 15] RW (@ 0x50000804) Port x configuration bits (y =  0..15) </i>
//    <check> 
//      <loc> ( (unsigned int) GPIOC_OTYPER ) </loc>
//      <o.15..15> OT15
//    </check>
//  </item>
//  


// ------------------------------  Field Item: GPIOC_OTYPER_OT14  ---------------------------------
// SVD Line: 7833

//  <item> SFDITEM_FIELD__GPIOC_OTYPER_OT14
//    <name> OT14 </name>
//    <rw> 
//    <i> [Bit 14] RW (@ 0x50000804) Port x configuration bits (y =  0..15) </i>
//    <check> 
//      <loc> ( (unsigned int) GPIOC_OTYPER ) </loc>
//      <o.14..14> OT14
//    </check>
//  </item>
//  


// ------------------------------  Field Item: GPIOC_OTYPER_OT13  ---------------------------------
// SVD Line: 7840

//  <item> SFDITEM_FIELD__GPIOC_OTYPER_OT13
//    <name> OT13 </name>
//    <rw> 
//    <i> [Bit 13] RW (@ 0x50000804) Port x configuration bits (y =  0..15) </i>
//    <check> 
//      <loc> ( (unsigned int) GPIOC_OTYPER ) </loc>
//      <o.13..13> OT13
//    </check>
//  </item>
//  


// ------------------------------  Field Item: GPIOC_OTYPER_OT12  ---------------------------------
// SVD Line: 7847

//  <item> SFDITEM_FIELD__GPIOC_OTYPER_OT12
//    <name> OT12 </name>
//    <rw> 
//    <i> [Bit 12] RW (@ 0x50000804) Port x configuration bits (y =  0..15) </i>
//    <check> 
//      <loc> ( (unsigned int) GPIOC_OTYPER ) </loc>
//      <o.12..12> OT12
//    </check>
//  </item>
//  


// ------------------------------  Field Item: GPIOC_OTYPER_OT11  ---------------------------------
// SVD Line: 7854

//  <item> SFDITEM_FIELD__GPIOC_OTYPER_OT11
//    <name> OT11 </name>
//    <rw> 
//    <i> [Bit 11] RW (@ 0x50000804) Port x configuration bits (y =  0..15) </i>
//    <check> 
//      <loc> ( (unsigned int) GPIOC_OTYPER ) </loc>
//      <o.11..11> OT11
//    </check>
//  </item>
//  


// ------------------------------  Field Item: GPIOC_OTYPER_OT10  ---------------------------------
// SVD Line: 7861

//  <item> SFDITEM_FIELD__GPIOC_OTYPER_OT10
//    <name> OT10 </name>
//    <rw> 
//    <i> [Bit 10] RW (@ 0x50000804) Port x configuration bits (y =  0..15) </i>
//    <check> 
//      <loc> ( (unsigned int) GPIOC_OTYPER ) </loc>
//      <o.10..10> OT10
//    </check>
//  </item>
//  


// ------------------------------  Field Item: GPIOC_OTYPER_OT9  ----------------------------------
// SVD Line: 7868

//  <item> SFDITEM_FIELD__GPIOC_OTYPER_OT9
//    <name> OT9 </name>
//    <rw> 
//    <i> [Bit 9] RW (@ 0x50000804) Port x configuration bits (y =  0..15) </i>
//    <check> 
//      <loc> ( (unsigned int) GPIOC_OTYPER ) </loc>
//      <o.9..9> OT9
//    </check>
//  </item>
//  


// ------------------------------  Field Item: GPIOC_OTYPER_OT8  ----------------------------------
// SVD Line: 7875

//  <item> SFDITEM_FIELD__GPIOC_OTYPER_OT8
//    <name> OT8 </name>
//    <rw> 
//    <i> [Bit 8] RW (@ 0x50000804) Port x configuration bits (y =  0..15) </i>
//    <check> 
//      <loc> ( (unsigned int) GPIOC_OTYPER ) </loc>
//      <o.8..8> OT8
//    </check>
//  </item>
//  


// ------------------------------  Field Item: GPIOC_OTYPER_OT7  ----------------------------------
// SVD Line: 7882

//  <item> SFDITEM_FIELD__GPIOC_OTYPER_OT7
//    <name> OT7 </name>
//    <rw> 
//    <i> [Bit 7] RW (@ 0x50000804) Port x configuration bits (y =  0..15) </i>
//    <check> 
//      <loc> ( (unsigned int) GPIOC_OTYPER ) </loc>
//      <o.7..7> OT7
//    </check>
//  </item>
//  


// ------------------------------  Field Item: GPIOC_OTYPER_OT6  ----------------------------------
// SVD Line: 7889

//  <item> SFDITEM_FIELD__GPIOC_OTYPER_OT6
//    <name> OT6 </name>
//    <rw> 
//    <i> [Bit 6] RW (@ 0x50000804) Port x configuration bits (y =  0..15) </i>
//    <check> 
//      <loc> ( (unsigned int) GPIOC_OTYPER ) </loc>
//      <o.6..6> OT6
//    </check>
//  </item>
//  


// ------------------------------  Field Item: GPIOC_OTYPER_OT5  ----------------------------------
// SVD Line: 7896

//  <item> SFDITEM_FIELD__GPIOC_OTYPER_OT5
//    <name> OT5 </name>
//    <rw> 
//    <i> [Bit 5] RW (@ 0x50000804) Port x configuration bits (y =  0..15) </i>
//    <check> 
//      <loc> ( (unsigned int) GPIOC_OTYPER ) </loc>
//      <o.5..5> OT5
//    </check>
//  </item>
//  


// ------------------------------  Field Item: GPIOC_OTYPER_OT4  ----------------------------------
// SVD Line: 7903

//  <item> SFDITEM_FIELD__GPIOC_OTYPER_OT4
//    <name> OT4 </name>
//    <rw> 
//    <i> [Bit 4] RW (@ 0x50000804) Port x configuration bits (y =  0..15) </i>
//    <check> 
//      <loc> ( (unsigned int) GPIOC_OTYPER ) </loc>
//      <o.4..4> OT4
//    </check>
//  </item>
//  


// ------------------------------  Field Item: GPIOC_OTYPER_OT3  ----------------------------------
// SVD Line: 7910

//  <item> SFDITEM_FIELD__GPIOC_OTYPER_OT3
//    <name> OT3 </name>
//    <rw> 
//    <i> [Bit 3] RW (@ 0x50000804) Port x configuration bits (y =  0..15) </i>
//    <check> 
//      <loc> ( (unsigned int) GPIOC_OTYPER ) </loc>
//      <o.3..3> OT3
//    </check>
//  </item>
//  


// ------------------------------  Field Item: GPIOC_OTYPER_OT2  ----------------------------------
// SVD Line: 7917

//  <item> SFDITEM_FIELD__GPIOC_OTYPER_OT2
//    <name> OT2 </name>
//    <rw> 
//    <i> [Bit 2] RW (@ 0x50000804) Port x configuration bits (y =  0..15) </i>
//    <check> 
//      <loc> ( (unsigned int) GPIOC_OTYPER ) </loc>
//      <o.2..2> OT2
//    </check>
//  </item>
//  


// ------------------------------  Field Item: GPIOC_OTYPER_OT1  ----------------------------------
// SVD Line: 7924

//  <item> SFDITEM_FIELD__GPIOC_OTYPER_OT1
//    <name> OT1 </name>
//    <rw> 
//    <i> [Bit 1] RW (@ 0x50000804) Port x configuration bits (y =  0..15) </i>
//    <check> 
//      <loc> ( (unsigned int) GPIOC_OTYPER ) </loc>
//      <o.1..1> OT1
//    </check>
//  </item>
//  


// ------------------------------  Field Item: GPIOC_OTYPER_OT0  ----------------------------------
// SVD Line: 7931

//  <item> SFDITEM_FIELD__GPIOC_OTYPER_OT0
//    <name> OT0 </name>
//    <rw> 
//    <i> [Bit 0] RW (@ 0x50000804) Port x configuration bits (y =  0..15) </i>
//    <check> 
//      <loc> ( (unsigned int) GPIOC_OTYPER ) </loc>
//      <o.0..0> OT0
//    </check>
//  </item>
//  


// ------------------------------  Register RTree: GPIOC_OTYPER  ----------------------------------
// SVD Line: 7817

//  <rtree> SFDITEM_REG__GPIOC_OTYPER
//    <name> OTYPER </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x50000804) GPIO port output type register </i>
//    <loc> ( (unsigned int)((GPIOC_OTYPER >> 0) & 0xFFFFFFFF), ((GPIOC_OTYPER = (GPIOC_OTYPER & ~(0xFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__GPIOC_OTYPER_OT15 </item>
//    <item> SFDITEM_FIELD__GPIOC_OTYPER_OT14 </item>
//    <item> SFDITEM_FIELD__GPIOC_OTYPER_OT13 </item>
//    <item> SFDITEM_FIELD__GPIOC_OTYPER_OT12 </item>
//    <item> SFDITEM_FIELD__GPIOC_OTYPER_OT11 </item>
//    <item> SFDITEM_FIELD__GPIOC_OTYPER_OT10 </item>
//    <item> SFDITEM_FIELD__GPIOC_OTYPER_OT9 </item>
//    <item> SFDITEM_FIELD__GPIOC_OTYPER_OT8 </item>
//    <item> SFDITEM_FIELD__GPIOC_OTYPER_OT7 </item>
//    <item> SFDITEM_FIELD__GPIOC_OTYPER_OT6 </item>
//    <item> SFDITEM_FIELD__GPIOC_OTYPER_OT5 </item>
//    <item> SFDITEM_FIELD__GPIOC_OTYPER_OT4 </item>
//    <item> SFDITEM_FIELD__GPIOC_OTYPER_OT3 </item>
//    <item> SFDITEM_FIELD__GPIOC_OTYPER_OT2 </item>
//    <item> SFDITEM_FIELD__GPIOC_OTYPER_OT1 </item>
//    <item> SFDITEM_FIELD__GPIOC_OTYPER_OT0 </item>
//  </rtree>
//  


// --------------------------  Register Item Address: GPIOC_OSPEEDR  ------------------------------
// SVD Line: 7940

unsigned int GPIOC_OSPEEDR __AT (0x50000808);



// ---------------------------  Field Item: GPIOC_OSPEEDR_OSPEEDR15  ------------------------------
// SVD Line: 7950

//  <item> SFDITEM_FIELD__GPIOC_OSPEEDR_OSPEEDR15
//    <name> OSPEEDR15 </name>
//    <rw> 
//    <i> [Bits 31..30] RW (@ 0x50000808) Port x configuration bits (y =  0..15) </i>
//    <edit> 
//      <loc> ( (unsigned char)((GPIOC_OSPEEDR >> 30) & 0x3), ((GPIOC_OSPEEDR = (GPIOC_OSPEEDR & ~(0x3UL << 30 )) | ((unsigned long)(Gui_u8:GuiVal & 0x3) << 30 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ---------------------------  Field Item: GPIOC_OSPEEDR_OSPEEDR14  ------------------------------
// SVD Line: 7957

//  <item> SFDITEM_FIELD__GPIOC_OSPEEDR_OSPEEDR14
//    <name> OSPEEDR14 </name>
//    <rw> 
//    <i> [Bits 29..28] RW (@ 0x50000808) Port x configuration bits (y =  0..15) </i>
//    <edit> 
//      <loc> ( (unsigned char)((GPIOC_OSPEEDR >> 28) & 0x3), ((GPIOC_OSPEEDR = (GPIOC_OSPEEDR & ~(0x3UL << 28 )) | ((unsigned long)(Gui_u8:GuiVal & 0x3) << 28 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ---------------------------  Field Item: GPIOC_OSPEEDR_OSPEEDR13  ------------------------------
// SVD Line: 7964

//  <item> SFDITEM_FIELD__GPIOC_OSPEEDR_OSPEEDR13
//    <name> OSPEEDR13 </name>
//    <rw> 
//    <i> [Bits 27..26] RW (@ 0x50000808) Port x configuration bits (y =  0..15) </i>
//    <edit> 
//      <loc> ( (unsigned char)((GPIOC_OSPEEDR >> 26) & 0x3), ((GPIOC_OSPEEDR = (GPIOC_OSPEEDR & ~(0x3UL << 26 )) | ((unsigned long)(Gui_u8:GuiVal & 0x3) << 26 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ---------------------------  Field Item: GPIOC_OSPEEDR_OSPEEDR12  ------------------------------
// SVD Line: 7971

//  <item> SFDITEM_FIELD__GPIOC_OSPEEDR_OSPEEDR12
//    <name> OSPEEDR12 </name>
//    <rw> 
//    <i> [Bits 25..24] RW (@ 0x50000808) Port x configuration bits (y =  0..15) </i>
//    <edit> 
//      <loc> ( (unsigned char)((GPIOC_OSPEEDR >> 24) & 0x3), ((GPIOC_OSPEEDR = (GPIOC_OSPEEDR & ~(0x3UL << 24 )) | ((unsigned long)(Gui_u8:GuiVal & 0x3) << 24 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ---------------------------  Field Item: GPIOC_OSPEEDR_OSPEEDR11  ------------------------------
// SVD Line: 7978

//  <item> SFDITEM_FIELD__GPIOC_OSPEEDR_OSPEEDR11
//    <name> OSPEEDR11 </name>
//    <rw> 
//    <i> [Bits 23..22] RW (@ 0x50000808) Port x configuration bits (y =  0..15) </i>
//    <edit> 
//      <loc> ( (unsigned char)((GPIOC_OSPEEDR >> 22) & 0x3), ((GPIOC_OSPEEDR = (GPIOC_OSPEEDR & ~(0x3UL << 22 )) | ((unsigned long)(Gui_u8:GuiVal & 0x3) << 22 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ---------------------------  Field Item: GPIOC_OSPEEDR_OSPEEDR10  ------------------------------
// SVD Line: 7985

//  <item> SFDITEM_FIELD__GPIOC_OSPEEDR_OSPEEDR10
//    <name> OSPEEDR10 </name>
//    <rw> 
//    <i> [Bits 21..20] RW (@ 0x50000808) Port x configuration bits (y =  0..15) </i>
//    <edit> 
//      <loc> ( (unsigned char)((GPIOC_OSPEEDR >> 20) & 0x3), ((GPIOC_OSPEEDR = (GPIOC_OSPEEDR & ~(0x3UL << 20 )) | ((unsigned long)(Gui_u8:GuiVal & 0x3) << 20 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ---------------------------  Field Item: GPIOC_OSPEEDR_OSPEEDR9  -------------------------------
// SVD Line: 7992

//  <item> SFDITEM_FIELD__GPIOC_OSPEEDR_OSPEEDR9
//    <name> OSPEEDR9 </name>
//    <rw> 
//    <i> [Bits 19..18] RW (@ 0x50000808) Port x configuration bits (y =  0..15) </i>
//    <edit> 
//      <loc> ( (unsigned char)((GPIOC_OSPEEDR >> 18) & 0x3), ((GPIOC_OSPEEDR = (GPIOC_OSPEEDR & ~(0x3UL << 18 )) | ((unsigned long)(Gui_u8:GuiVal & 0x3) << 18 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ---------------------------  Field Item: GPIOC_OSPEEDR_OSPEEDR8  -------------------------------
// SVD Line: 7999

//  <item> SFDITEM_FIELD__GPIOC_OSPEEDR_OSPEEDR8
//    <name> OSPEEDR8 </name>
//    <rw> 
//    <i> [Bits 17..16] RW (@ 0x50000808) Port x configuration bits (y =  0..15) </i>
//    <edit> 
//      <loc> ( (unsigned char)((GPIOC_OSPEEDR >> 16) & 0x3), ((GPIOC_OSPEEDR = (GPIOC_OSPEEDR & ~(0x3UL << 16 )) | ((unsigned long)(Gui_u8:GuiVal & 0x3) << 16 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ---------------------------  Field Item: GPIOC_OSPEEDR_OSPEEDR7  -------------------------------
// SVD Line: 8006

//  <item> SFDITEM_FIELD__GPIOC_OSPEEDR_OSPEEDR7
//    <name> OSPEEDR7 </name>
//    <rw> 
//    <i> [Bits 15..14] RW (@ 0x50000808) Port x configuration bits (y =  0..15) </i>
//    <edit> 
//      <loc> ( (unsigned char)((GPIOC_OSPEEDR >> 14) & 0x3), ((GPIOC_OSPEEDR = (GPIOC_OSPEEDR & ~(0x3UL << 14 )) | ((unsigned long)(Gui_u8:GuiVal & 0x3) << 14 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ---------------------------  Field Item: GPIOC_OSPEEDR_OSPEEDR6  -------------------------------
// SVD Line: 8013

//  <item> SFDITEM_FIELD__GPIOC_OSPEEDR_OSPEEDR6
//    <name> OSPEEDR6 </name>
//    <rw> 
//    <i> [Bits 13..12] RW (@ 0x50000808) Port x configuration bits (y =  0..15) </i>
//    <edit> 
//      <loc> ( (unsigned char)((GPIOC_OSPEEDR >> 12) & 0x3), ((GPIOC_OSPEEDR = (GPIOC_OSPEEDR & ~(0x3UL << 12 )) | ((unsigned long)(Gui_u8:GuiVal & 0x3) << 12 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ---------------------------  Field Item: GPIOC_OSPEEDR_OSPEEDR5  -------------------------------
// SVD Line: 8020

//  <item> SFDITEM_FIELD__GPIOC_OSPEEDR_OSPEEDR5
//    <name> OSPEEDR5 </name>
//    <rw> 
//    <i> [Bits 11..10] RW (@ 0x50000808) Port x configuration bits (y =  0..15) </i>
//    <edit> 
//      <loc> ( (unsigned char)((GPIOC_OSPEEDR >> 10) & 0x3), ((GPIOC_OSPEEDR = (GPIOC_OSPEEDR & ~(0x3UL << 10 )) | ((unsigned long)(Gui_u8:GuiVal & 0x3) << 10 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ---------------------------  Field Item: GPIOC_OSPEEDR_OSPEEDR4  -------------------------------
// SVD Line: 8027

//  <item> SFDITEM_FIELD__GPIOC_OSPEEDR_OSPEEDR4
//    <name> OSPEEDR4 </name>
//    <rw> 
//    <i> [Bits 9..8] RW (@ 0x50000808) Port x configuration bits (y =  0..15) </i>
//    <edit> 
//      <loc> ( (unsigned char)((GPIOC_OSPEEDR >> 8) & 0x3), ((GPIOC_OSPEEDR = (GPIOC_OSPEEDR & ~(0x3UL << 8 )) | ((unsigned long)(Gui_u8:GuiVal & 0x3) << 8 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ---------------------------  Field Item: GPIOC_OSPEEDR_OSPEEDR3  -------------------------------
// SVD Line: 8034

//  <item> SFDITEM_FIELD__GPIOC_OSPEEDR_OSPEEDR3
//    <name> OSPEEDR3 </name>
//    <rw> 
//    <i> [Bits 7..6] RW (@ 0x50000808) Port x configuration bits (y =  0..15) </i>
//    <edit> 
//      <loc> ( (unsigned char)((GPIOC_OSPEEDR >> 6) & 0x3), ((GPIOC_OSPEEDR = (GPIOC_OSPEEDR & ~(0x3UL << 6 )) | ((unsigned long)(Gui_u8:GuiVal & 0x3) << 6 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ---------------------------  Field Item: GPIOC_OSPEEDR_OSPEEDR2  -------------------------------
// SVD Line: 8041

//  <item> SFDITEM_FIELD__GPIOC_OSPEEDR_OSPEEDR2
//    <name> OSPEEDR2 </name>
//    <rw> 
//    <i> [Bits 5..4] RW (@ 0x50000808) Port x configuration bits (y =  0..15) </i>
//    <edit> 
//      <loc> ( (unsigned char)((GPIOC_OSPEEDR >> 4) & 0x3), ((GPIOC_OSPEEDR = (GPIOC_OSPEEDR & ~(0x3UL << 4 )) | ((unsigned long)(Gui_u8:GuiVal & 0x3) << 4 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ---------------------------  Field Item: GPIOC_OSPEEDR_OSPEEDR1  -------------------------------
// SVD Line: 8048

//  <item> SFDITEM_FIELD__GPIOC_OSPEEDR_OSPEEDR1
//    <name> OSPEEDR1 </name>
//    <rw> 
//    <i> [Bits 3..2] RW (@ 0x50000808) Port x configuration bits (y =  0..15) </i>
//    <edit> 
//      <loc> ( (unsigned char)((GPIOC_OSPEEDR >> 2) & 0x3), ((GPIOC_OSPEEDR = (GPIOC_OSPEEDR & ~(0x3UL << 2 )) | ((unsigned long)(Gui_u8:GuiVal & 0x3) << 2 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ---------------------------  Field Item: GPIOC_OSPEEDR_OSPEEDR0  -------------------------------
// SVD Line: 8055

//  <item> SFDITEM_FIELD__GPIOC_OSPEEDR_OSPEEDR0
//    <name> OSPEEDR0 </name>
//    <rw> 
//    <i> [Bits 1..0] RW (@ 0x50000808) Port x configuration bits (y =  0..15) </i>
//    <edit> 
//      <loc> ( (unsigned char)((GPIOC_OSPEEDR >> 0) & 0x3), ((GPIOC_OSPEEDR = (GPIOC_OSPEEDR & ~(0x3UL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0x3) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ------------------------------  Register RTree: GPIOC_OSPEEDR  ---------------------------------
// SVD Line: 7940

//  <rtree> SFDITEM_REG__GPIOC_OSPEEDR
//    <name> OSPEEDR </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x50000808) GPIO port output speed  register </i>
//    <loc> ( (unsigned int)((GPIOC_OSPEEDR >> 0) & 0xFFFFFFFF), ((GPIOC_OSPEEDR = (GPIOC_OSPEEDR & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__GPIOC_OSPEEDR_OSPEEDR15 </item>
//    <item> SFDITEM_FIELD__GPIOC_OSPEEDR_OSPEEDR14 </item>
//    <item> SFDITEM_FIELD__GPIOC_OSPEEDR_OSPEEDR13 </item>
//    <item> SFDITEM_FIELD__GPIOC_OSPEEDR_OSPEEDR12 </item>
//    <item> SFDITEM_FIELD__GPIOC_OSPEEDR_OSPEEDR11 </item>
//    <item> SFDITEM_FIELD__GPIOC_OSPEEDR_OSPEEDR10 </item>
//    <item> SFDITEM_FIELD__GPIOC_OSPEEDR_OSPEEDR9 </item>
//    <item> SFDITEM_FIELD__GPIOC_OSPEEDR_OSPEEDR8 </item>
//    <item> SFDITEM_FIELD__GPIOC_OSPEEDR_OSPEEDR7 </item>
//    <item> SFDITEM_FIELD__GPIOC_OSPEEDR_OSPEEDR6 </item>
//    <item> SFDITEM_FIELD__GPIOC_OSPEEDR_OSPEEDR5 </item>
//    <item> SFDITEM_FIELD__GPIOC_OSPEEDR_OSPEEDR4 </item>
//    <item> SFDITEM_FIELD__GPIOC_OSPEEDR_OSPEEDR3 </item>
//    <item> SFDITEM_FIELD__GPIOC_OSPEEDR_OSPEEDR2 </item>
//    <item> SFDITEM_FIELD__GPIOC_OSPEEDR_OSPEEDR1 </item>
//    <item> SFDITEM_FIELD__GPIOC_OSPEEDR_OSPEEDR0 </item>
//  </rtree>
//  


// ---------------------------  Register Item Address: GPIOC_PUPDR  -------------------------------
// SVD Line: 8064

unsigned int GPIOC_PUPDR __AT (0x5000080C);



// -----------------------------  Field Item: GPIOC_PUPDR_PUPDR15  --------------------------------
// SVD Line: 8074

//  <item> SFDITEM_FIELD__GPIOC_PUPDR_PUPDR15
//    <name> PUPDR15 </name>
//    <rw> 
//    <i> [Bits 31..30] RW (@ 0x5000080C) Port x configuration bits (y =  0..15) </i>
//    <edit> 
//      <loc> ( (unsigned char)((GPIOC_PUPDR >> 30) & 0x3), ((GPIOC_PUPDR = (GPIOC_PUPDR & ~(0x3UL << 30 )) | ((unsigned long)(Gui_u8:GuiVal & 0x3) << 30 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -----------------------------  Field Item: GPIOC_PUPDR_PUPDR14  --------------------------------
// SVD Line: 8081

//  <item> SFDITEM_FIELD__GPIOC_PUPDR_PUPDR14
//    <name> PUPDR14 </name>
//    <rw> 
//    <i> [Bits 29..28] RW (@ 0x5000080C) Port x configuration bits (y =  0..15) </i>
//    <edit> 
//      <loc> ( (unsigned char)((GPIOC_PUPDR >> 28) & 0x3), ((GPIOC_PUPDR = (GPIOC_PUPDR & ~(0x3UL << 28 )) | ((unsigned long)(Gui_u8:GuiVal & 0x3) << 28 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -----------------------------  Field Item: GPIOC_PUPDR_PUPDR13  --------------------------------
// SVD Line: 8088

//  <item> SFDITEM_FIELD__GPIOC_PUPDR_PUPDR13
//    <name> PUPDR13 </name>
//    <rw> 
//    <i> [Bits 27..26] RW (@ 0x5000080C) Port x configuration bits (y =  0..15) </i>
//    <edit> 
//      <loc> ( (unsigned char)((GPIOC_PUPDR >> 26) & 0x3), ((GPIOC_PUPDR = (GPIOC_PUPDR & ~(0x3UL << 26 )) | ((unsigned long)(Gui_u8:GuiVal & 0x3) << 26 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -----------------------------  Field Item: GPIOC_PUPDR_PUPDR12  --------------------------------
// SVD Line: 8095

//  <item> SFDITEM_FIELD__GPIOC_PUPDR_PUPDR12
//    <name> PUPDR12 </name>
//    <rw> 
//    <i> [Bits 25..24] RW (@ 0x5000080C) Port x configuration bits (y =  0..15) </i>
//    <edit> 
//      <loc> ( (unsigned char)((GPIOC_PUPDR >> 24) & 0x3), ((GPIOC_PUPDR = (GPIOC_PUPDR & ~(0x3UL << 24 )) | ((unsigned long)(Gui_u8:GuiVal & 0x3) << 24 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -----------------------------  Field Item: GPIOC_PUPDR_PUPDR11  --------------------------------
// SVD Line: 8102

//  <item> SFDITEM_FIELD__GPIOC_PUPDR_PUPDR11
//    <name> PUPDR11 </name>
//    <rw> 
//    <i> [Bits 23..22] RW (@ 0x5000080C) Port x configuration bits (y =  0..15) </i>
//    <edit> 
//      <loc> ( (unsigned char)((GPIOC_PUPDR >> 22) & 0x3), ((GPIOC_PUPDR = (GPIOC_PUPDR & ~(0x3UL << 22 )) | ((unsigned long)(Gui_u8:GuiVal & 0x3) << 22 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -----------------------------  Field Item: GPIOC_PUPDR_PUPDR10  --------------------------------
// SVD Line: 8109

//  <item> SFDITEM_FIELD__GPIOC_PUPDR_PUPDR10
//    <name> PUPDR10 </name>
//    <rw> 
//    <i> [Bits 21..20] RW (@ 0x5000080C) Port x configuration bits (y =  0..15) </i>
//    <edit> 
//      <loc> ( (unsigned char)((GPIOC_PUPDR >> 20) & 0x3), ((GPIOC_PUPDR = (GPIOC_PUPDR & ~(0x3UL << 20 )) | ((unsigned long)(Gui_u8:GuiVal & 0x3) << 20 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -----------------------------  Field Item: GPIOC_PUPDR_PUPDR9  ---------------------------------
// SVD Line: 8116

//  <item> SFDITEM_FIELD__GPIOC_PUPDR_PUPDR9
//    <name> PUPDR9 </name>
//    <rw> 
//    <i> [Bits 19..18] RW (@ 0x5000080C) Port x configuration bits (y =  0..15) </i>
//    <edit> 
//      <loc> ( (unsigned char)((GPIOC_PUPDR >> 18) & 0x3), ((GPIOC_PUPDR = (GPIOC_PUPDR & ~(0x3UL << 18 )) | ((unsigned long)(Gui_u8:GuiVal & 0x3) << 18 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -----------------------------  Field Item: GPIOC_PUPDR_PUPDR8  ---------------------------------
// SVD Line: 8123

//  <item> SFDITEM_FIELD__GPIOC_PUPDR_PUPDR8
//    <name> PUPDR8 </name>
//    <rw> 
//    <i> [Bits 17..16] RW (@ 0x5000080C) Port x configuration bits (y =  0..15) </i>
//    <edit> 
//      <loc> ( (unsigned char)((GPIOC_PUPDR >> 16) & 0x3), ((GPIOC_PUPDR = (GPIOC_PUPDR & ~(0x3UL << 16 )) | ((unsigned long)(Gui_u8:GuiVal & 0x3) << 16 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -----------------------------  Field Item: GPIOC_PUPDR_PUPDR7  ---------------------------------
// SVD Line: 8130

//  <item> SFDITEM_FIELD__GPIOC_PUPDR_PUPDR7
//    <name> PUPDR7 </name>
//    <rw> 
//    <i> [Bits 15..14] RW (@ 0x5000080C) Port x configuration bits (y =  0..15) </i>
//    <edit> 
//      <loc> ( (unsigned char)((GPIOC_PUPDR >> 14) & 0x3), ((GPIOC_PUPDR = (GPIOC_PUPDR & ~(0x3UL << 14 )) | ((unsigned long)(Gui_u8:GuiVal & 0x3) << 14 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -----------------------------  Field Item: GPIOC_PUPDR_PUPDR6  ---------------------------------
// SVD Line: 8137

//  <item> SFDITEM_FIELD__GPIOC_PUPDR_PUPDR6
//    <name> PUPDR6 </name>
//    <rw> 
//    <i> [Bits 13..12] RW (@ 0x5000080C) Port x configuration bits (y =  0..15) </i>
//    <edit> 
//      <loc> ( (unsigned char)((GPIOC_PUPDR >> 12) & 0x3), ((GPIOC_PUPDR = (GPIOC_PUPDR & ~(0x3UL << 12 )) | ((unsigned long)(Gui_u8:GuiVal & 0x3) << 12 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -----------------------------  Field Item: GPIOC_PUPDR_PUPDR5  ---------------------------------
// SVD Line: 8144

//  <item> SFDITEM_FIELD__GPIOC_PUPDR_PUPDR5
//    <name> PUPDR5 </name>
//    <rw> 
//    <i> [Bits 11..10] RW (@ 0x5000080C) Port x configuration bits (y =  0..15) </i>
//    <edit> 
//      <loc> ( (unsigned char)((GPIOC_PUPDR >> 10) & 0x3), ((GPIOC_PUPDR = (GPIOC_PUPDR & ~(0x3UL << 10 )) | ((unsigned long)(Gui_u8:GuiVal & 0x3) << 10 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -----------------------------  Field Item: GPIOC_PUPDR_PUPDR4  ---------------------------------
// SVD Line: 8151

//  <item> SFDITEM_FIELD__GPIOC_PUPDR_PUPDR4
//    <name> PUPDR4 </name>
//    <rw> 
//    <i> [Bits 9..8] RW (@ 0x5000080C) Port x configuration bits (y =  0..15) </i>
//    <edit> 
//      <loc> ( (unsigned char)((GPIOC_PUPDR >> 8) & 0x3), ((GPIOC_PUPDR = (GPIOC_PUPDR & ~(0x3UL << 8 )) | ((unsigned long)(Gui_u8:GuiVal & 0x3) << 8 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -----------------------------  Field Item: GPIOC_PUPDR_PUPDR3  ---------------------------------
// SVD Line: 8158

//  <item> SFDITEM_FIELD__GPIOC_PUPDR_PUPDR3
//    <name> PUPDR3 </name>
//    <rw> 
//    <i> [Bits 7..6] RW (@ 0x5000080C) Port x configuration bits (y =  0..15) </i>
//    <edit> 
//      <loc> ( (unsigned char)((GPIOC_PUPDR >> 6) & 0x3), ((GPIOC_PUPDR = (GPIOC_PUPDR & ~(0x3UL << 6 )) | ((unsigned long)(Gui_u8:GuiVal & 0x3) << 6 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -----------------------------  Field Item: GPIOC_PUPDR_PUPDR2  ---------------------------------
// SVD Line: 8165

//  <item> SFDITEM_FIELD__GPIOC_PUPDR_PUPDR2
//    <name> PUPDR2 </name>
//    <rw> 
//    <i> [Bits 5..4] RW (@ 0x5000080C) Port x configuration bits (y =  0..15) </i>
//    <edit> 
//      <loc> ( (unsigned char)((GPIOC_PUPDR >> 4) & 0x3), ((GPIOC_PUPDR = (GPIOC_PUPDR & ~(0x3UL << 4 )) | ((unsigned long)(Gui_u8:GuiVal & 0x3) << 4 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -----------------------------  Field Item: GPIOC_PUPDR_PUPDR1  ---------------------------------
// SVD Line: 8172

//  <item> SFDITEM_FIELD__GPIOC_PUPDR_PUPDR1
//    <name> PUPDR1 </name>
//    <rw> 
//    <i> [Bits 3..2] RW (@ 0x5000080C) Port x configuration bits (y =  0..15) </i>
//    <edit> 
//      <loc> ( (unsigned char)((GPIOC_PUPDR >> 2) & 0x3), ((GPIOC_PUPDR = (GPIOC_PUPDR & ~(0x3UL << 2 )) | ((unsigned long)(Gui_u8:GuiVal & 0x3) << 2 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -----------------------------  Field Item: GPIOC_PUPDR_PUPDR0  ---------------------------------
// SVD Line: 8179

//  <item> SFDITEM_FIELD__GPIOC_PUPDR_PUPDR0
//    <name> PUPDR0 </name>
//    <rw> 
//    <i> [Bits 1..0] RW (@ 0x5000080C) Port x configuration bits (y =  0..15) </i>
//    <edit> 
//      <loc> ( (unsigned char)((GPIOC_PUPDR >> 0) & 0x3), ((GPIOC_PUPDR = (GPIOC_PUPDR & ~(0x3UL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0x3) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -------------------------------  Register RTree: GPIOC_PUPDR  ----------------------------------
// SVD Line: 8064

//  <rtree> SFDITEM_REG__GPIOC_PUPDR
//    <name> PUPDR </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x5000080C) GPIO port pull-up/pull-down  register </i>
//    <loc> ( (unsigned int)((GPIOC_PUPDR >> 0) & 0xFFFFFFFF), ((GPIOC_PUPDR = (GPIOC_PUPDR & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__GPIOC_PUPDR_PUPDR15 </item>
//    <item> SFDITEM_FIELD__GPIOC_PUPDR_PUPDR14 </item>
//    <item> SFDITEM_FIELD__GPIOC_PUPDR_PUPDR13 </item>
//    <item> SFDITEM_FIELD__GPIOC_PUPDR_PUPDR12 </item>
//    <item> SFDITEM_FIELD__GPIOC_PUPDR_PUPDR11 </item>
//    <item> SFDITEM_FIELD__GPIOC_PUPDR_PUPDR10 </item>
//    <item> SFDITEM_FIELD__GPIOC_PUPDR_PUPDR9 </item>
//    <item> SFDITEM_FIELD__GPIOC_PUPDR_PUPDR8 </item>
//    <item> SFDITEM_FIELD__GPIOC_PUPDR_PUPDR7 </item>
//    <item> SFDITEM_FIELD__GPIOC_PUPDR_PUPDR6 </item>
//    <item> SFDITEM_FIELD__GPIOC_PUPDR_PUPDR5 </item>
//    <item> SFDITEM_FIELD__GPIOC_PUPDR_PUPDR4 </item>
//    <item> SFDITEM_FIELD__GPIOC_PUPDR_PUPDR3 </item>
//    <item> SFDITEM_FIELD__GPIOC_PUPDR_PUPDR2 </item>
//    <item> SFDITEM_FIELD__GPIOC_PUPDR_PUPDR1 </item>
//    <item> SFDITEM_FIELD__GPIOC_PUPDR_PUPDR0 </item>
//  </rtree>
//  


// ----------------------------  Register Item Address: GPIOC_IDR  --------------------------------
// SVD Line: 8188

unsigned int GPIOC_IDR __AT (0x50000810);



// -------------------------------  Field Item: GPIOC_IDR_IDR15  ----------------------------------
// SVD Line: 8197

//  <item> SFDITEM_FIELD__GPIOC_IDR_IDR15
//    <name> IDR15 </name>
//    <r> 
//    <i> [Bit 15] RO (@ 0x50000810) Port input data (y =  0..15) </i>
//    <check> 
//      <loc> ( (unsigned int) GPIOC_IDR ) </loc>
//      <o.15..15> IDR15
//    </check>
//  </item>
//  


// -------------------------------  Field Item: GPIOC_IDR_IDR14  ----------------------------------
// SVD Line: 8204

//  <item> SFDITEM_FIELD__GPIOC_IDR_IDR14
//    <name> IDR14 </name>
//    <r> 
//    <i> [Bit 14] RO (@ 0x50000810) Port input data (y =  0..15) </i>
//    <check> 
//      <loc> ( (unsigned int) GPIOC_IDR ) </loc>
//      <o.14..14> IDR14
//    </check>
//  </item>
//  


// -------------------------------  Field Item: GPIOC_IDR_IDR13  ----------------------------------
// SVD Line: 8211

//  <item> SFDITEM_FIELD__GPIOC_IDR_IDR13
//    <name> IDR13 </name>
//    <r> 
//    <i> [Bit 13] RO (@ 0x50000810) Port input data (y =  0..15) </i>
//    <check> 
//      <loc> ( (unsigned int) GPIOC_IDR ) </loc>
//      <o.13..13> IDR13
//    </check>
//  </item>
//  


// -------------------------------  Field Item: GPIOC_IDR_IDR12  ----------------------------------
// SVD Line: 8218

//  <item> SFDITEM_FIELD__GPIOC_IDR_IDR12
//    <name> IDR12 </name>
//    <r> 
//    <i> [Bit 12] RO (@ 0x50000810) Port input data (y =  0..15) </i>
//    <check> 
//      <loc> ( (unsigned int) GPIOC_IDR ) </loc>
//      <o.12..12> IDR12
//    </check>
//  </item>
//  


// -------------------------------  Field Item: GPIOC_IDR_IDR11  ----------------------------------
// SVD Line: 8225

//  <item> SFDITEM_FIELD__GPIOC_IDR_IDR11
//    <name> IDR11 </name>
//    <r> 
//    <i> [Bit 11] RO (@ 0x50000810) Port input data (y =  0..15) </i>
//    <check> 
//      <loc> ( (unsigned int) GPIOC_IDR ) </loc>
//      <o.11..11> IDR11
//    </check>
//  </item>
//  


// -------------------------------  Field Item: GPIOC_IDR_IDR10  ----------------------------------
// SVD Line: 8232

//  <item> SFDITEM_FIELD__GPIOC_IDR_IDR10
//    <name> IDR10 </name>
//    <r> 
//    <i> [Bit 10] RO (@ 0x50000810) Port input data (y =  0..15) </i>
//    <check> 
//      <loc> ( (unsigned int) GPIOC_IDR ) </loc>
//      <o.10..10> IDR10
//    </check>
//  </item>
//  


// -------------------------------  Field Item: GPIOC_IDR_IDR9  -----------------------------------
// SVD Line: 8239

//  <item> SFDITEM_FIELD__GPIOC_IDR_IDR9
//    <name> IDR9 </name>
//    <r> 
//    <i> [Bit 9] RO (@ 0x50000810) Port input data (y =  0..15) </i>
//    <check> 
//      <loc> ( (unsigned int) GPIOC_IDR ) </loc>
//      <o.9..9> IDR9
//    </check>
//  </item>
//  


// -------------------------------  Field Item: GPIOC_IDR_IDR8  -----------------------------------
// SVD Line: 8246

//  <item> SFDITEM_FIELD__GPIOC_IDR_IDR8
//    <name> IDR8 </name>
//    <r> 
//    <i> [Bit 8] RO (@ 0x50000810) Port input data (y =  0..15) </i>
//    <check> 
//      <loc> ( (unsigned int) GPIOC_IDR ) </loc>
//      <o.8..8> IDR8
//    </check>
//  </item>
//  


// -------------------------------  Field Item: GPIOC_IDR_IDR7  -----------------------------------
// SVD Line: 8253

//  <item> SFDITEM_FIELD__GPIOC_IDR_IDR7
//    <name> IDR7 </name>
//    <r> 
//    <i> [Bit 7] RO (@ 0x50000810) Port input data (y =  0..15) </i>
//    <check> 
//      <loc> ( (unsigned int) GPIOC_IDR ) </loc>
//      <o.7..7> IDR7
//    </check>
//  </item>
//  


// -------------------------------  Field Item: GPIOC_IDR_IDR6  -----------------------------------
// SVD Line: 8260

//  <item> SFDITEM_FIELD__GPIOC_IDR_IDR6
//    <name> IDR6 </name>
//    <r> 
//    <i> [Bit 6] RO (@ 0x50000810) Port input data (y =  0..15) </i>
//    <check> 
//      <loc> ( (unsigned int) GPIOC_IDR ) </loc>
//      <o.6..6> IDR6
//    </check>
//  </item>
//  


// -------------------------------  Field Item: GPIOC_IDR_IDR5  -----------------------------------
// SVD Line: 8267

//  <item> SFDITEM_FIELD__GPIOC_IDR_IDR5
//    <name> IDR5 </name>
//    <r> 
//    <i> [Bit 5] RO (@ 0x50000810) Port input data (y =  0..15) </i>
//    <check> 
//      <loc> ( (unsigned int) GPIOC_IDR ) </loc>
//      <o.5..5> IDR5
//    </check>
//  </item>
//  


// -------------------------------  Field Item: GPIOC_IDR_IDR4  -----------------------------------
// SVD Line: 8274

//  <item> SFDITEM_FIELD__GPIOC_IDR_IDR4
//    <name> IDR4 </name>
//    <r> 
//    <i> [Bit 4] RO (@ 0x50000810) Port input data (y =  0..15) </i>
//    <check> 
//      <loc> ( (unsigned int) GPIOC_IDR ) </loc>
//      <o.4..4> IDR4
//    </check>
//  </item>
//  


// -------------------------------  Field Item: GPIOC_IDR_IDR3  -----------------------------------
// SVD Line: 8281

//  <item> SFDITEM_FIELD__GPIOC_IDR_IDR3
//    <name> IDR3 </name>
//    <r> 
//    <i> [Bit 3] RO (@ 0x50000810) Port input data (y =  0..15) </i>
//    <check> 
//      <loc> ( (unsigned int) GPIOC_IDR ) </loc>
//      <o.3..3> IDR3
//    </check>
//  </item>
//  


// -------------------------------  Field Item: GPIOC_IDR_IDR2  -----------------------------------
// SVD Line: 8288

//  <item> SFDITEM_FIELD__GPIOC_IDR_IDR2
//    <name> IDR2 </name>
//    <r> 
//    <i> [Bit 2] RO (@ 0x50000810) Port input data (y =  0..15) </i>
//    <check> 
//      <loc> ( (unsigned int) GPIOC_IDR ) </loc>
//      <o.2..2> IDR2
//    </check>
//  </item>
//  


// -------------------------------  Field Item: GPIOC_IDR_IDR1  -----------------------------------
// SVD Line: 8295

//  <item> SFDITEM_FIELD__GPIOC_IDR_IDR1
//    <name> IDR1 </name>
//    <r> 
//    <i> [Bit 1] RO (@ 0x50000810) Port input data (y =  0..15) </i>
//    <check> 
//      <loc> ( (unsigned int) GPIOC_IDR ) </loc>
//      <o.1..1> IDR1
//    </check>
//  </item>
//  


// -------------------------------  Field Item: GPIOC_IDR_IDR0  -----------------------------------
// SVD Line: 8302

//  <item> SFDITEM_FIELD__GPIOC_IDR_IDR0
//    <name> IDR0 </name>
//    <r> 
//    <i> [Bit 0] RO (@ 0x50000810) Port input data (y =  0..15) </i>
//    <check> 
//      <loc> ( (unsigned int) GPIOC_IDR ) </loc>
//      <o.0..0> IDR0
//    </check>
//  </item>
//  


// --------------------------------  Register RTree: GPIOC_IDR  -----------------------------------
// SVD Line: 8188

//  <rtree> SFDITEM_REG__GPIOC_IDR
//    <name> IDR </name>
//    <r> 
//    <i> [Bits 31..0] RO (@ 0x50000810) GPIO port input data register </i>
//    <loc> ( (unsigned int)((GPIOC_IDR >> 0) & 0xFFFFFFFF) ) </loc>
//    <item> SFDITEM_FIELD__GPIOC_IDR_IDR15 </item>
//    <item> SFDITEM_FIELD__GPIOC_IDR_IDR14 </item>
//    <item> SFDITEM_FIELD__GPIOC_IDR_IDR13 </item>
//    <item> SFDITEM_FIELD__GPIOC_IDR_IDR12 </item>
//    <item> SFDITEM_FIELD__GPIOC_IDR_IDR11 </item>
//    <item> SFDITEM_FIELD__GPIOC_IDR_IDR10 </item>
//    <item> SFDITEM_FIELD__GPIOC_IDR_IDR9 </item>
//    <item> SFDITEM_FIELD__GPIOC_IDR_IDR8 </item>
//    <item> SFDITEM_FIELD__GPIOC_IDR_IDR7 </item>
//    <item> SFDITEM_FIELD__GPIOC_IDR_IDR6 </item>
//    <item> SFDITEM_FIELD__GPIOC_IDR_IDR5 </item>
//    <item> SFDITEM_FIELD__GPIOC_IDR_IDR4 </item>
//    <item> SFDITEM_FIELD__GPIOC_IDR_IDR3 </item>
//    <item> SFDITEM_FIELD__GPIOC_IDR_IDR2 </item>
//    <item> SFDITEM_FIELD__GPIOC_IDR_IDR1 </item>
//    <item> SFDITEM_FIELD__GPIOC_IDR_IDR0 </item>
//  </rtree>
//  


// ----------------------------  Register Item Address: GPIOC_ODR  --------------------------------
// SVD Line: 8311

unsigned int GPIOC_ODR __AT (0x50000814);



// -------------------------------  Field Item: GPIOC_ODR_ODR15  ----------------------------------
// SVD Line: 8320

//  <item> SFDITEM_FIELD__GPIOC_ODR_ODR15
//    <name> ODR15 </name>
//    <rw> 
//    <i> [Bit 15] RW (@ 0x50000814) Port output data (y =  0..15) </i>
//    <check> 
//      <loc> ( (unsigned int) GPIOC_ODR ) </loc>
//      <o.15..15> ODR15
//    </check>
//  </item>
//  


// -------------------------------  Field Item: GPIOC_ODR_ODR14  ----------------------------------
// SVD Line: 8327

//  <item> SFDITEM_FIELD__GPIOC_ODR_ODR14
//    <name> ODR14 </name>
//    <rw> 
//    <i> [Bit 14] RW (@ 0x50000814) Port output data (y =  0..15) </i>
//    <check> 
//      <loc> ( (unsigned int) GPIOC_ODR ) </loc>
//      <o.14..14> ODR14
//    </check>
//  </item>
//  


// -------------------------------  Field Item: GPIOC_ODR_ODR13  ----------------------------------
// SVD Line: 8334

//  <item> SFDITEM_FIELD__GPIOC_ODR_ODR13
//    <name> ODR13 </name>
//    <rw> 
//    <i> [Bit 13] RW (@ 0x50000814) Port output data (y =  0..15) </i>
//    <check> 
//      <loc> ( (unsigned int) GPIOC_ODR ) </loc>
//      <o.13..13> ODR13
//    </check>
//  </item>
//  


// -------------------------------  Field Item: GPIOC_ODR_ODR12  ----------------------------------
// SVD Line: 8341

//  <item> SFDITEM_FIELD__GPIOC_ODR_ODR12
//    <name> ODR12 </name>
//    <rw> 
//    <i> [Bit 12] RW (@ 0x50000814) Port output data (y =  0..15) </i>
//    <check> 
//      <loc> ( (unsigned int) GPIOC_ODR ) </loc>
//      <o.12..12> ODR12
//    </check>
//  </item>
//  


// -------------------------------  Field Item: GPIOC_ODR_ODR11  ----------------------------------
// SVD Line: 8348

//  <item> SFDITEM_FIELD__GPIOC_ODR_ODR11
//    <name> ODR11 </name>
//    <rw> 
//    <i> [Bit 11] RW (@ 0x50000814) Port output data (y =  0..15) </i>
//    <check> 
//      <loc> ( (unsigned int) GPIOC_ODR ) </loc>
//      <o.11..11> ODR11
//    </check>
//  </item>
//  


// -------------------------------  Field Item: GPIOC_ODR_ODR10  ----------------------------------
// SVD Line: 8355

//  <item> SFDITEM_FIELD__GPIOC_ODR_ODR10
//    <name> ODR10 </name>
//    <rw> 
//    <i> [Bit 10] RW (@ 0x50000814) Port output data (y =  0..15) </i>
//    <check> 
//      <loc> ( (unsigned int) GPIOC_ODR ) </loc>
//      <o.10..10> ODR10
//    </check>
//  </item>
//  


// -------------------------------  Field Item: GPIOC_ODR_ODR9  -----------------------------------
// SVD Line: 8362

//  <item> SFDITEM_FIELD__GPIOC_ODR_ODR9
//    <name> ODR9 </name>
//    <rw> 
//    <i> [Bit 9] RW (@ 0x50000814) Port output data (y =  0..15) </i>
//    <check> 
//      <loc> ( (unsigned int) GPIOC_ODR ) </loc>
//      <o.9..9> ODR9
//    </check>
//  </item>
//  


// -------------------------------  Field Item: GPIOC_ODR_ODR8  -----------------------------------
// SVD Line: 8369

//  <item> SFDITEM_FIELD__GPIOC_ODR_ODR8
//    <name> ODR8 </name>
//    <rw> 
//    <i> [Bit 8] RW (@ 0x50000814) Port output data (y =  0..15) </i>
//    <check> 
//      <loc> ( (unsigned int) GPIOC_ODR ) </loc>
//      <o.8..8> ODR8
//    </check>
//  </item>
//  


// -------------------------------  Field Item: GPIOC_ODR_ODR7  -----------------------------------
// SVD Line: 8376

//  <item> SFDITEM_FIELD__GPIOC_ODR_ODR7
//    <name> ODR7 </name>
//    <rw> 
//    <i> [Bit 7] RW (@ 0x50000814) Port output data (y =  0..15) </i>
//    <check> 
//      <loc> ( (unsigned int) GPIOC_ODR ) </loc>
//      <o.7..7> ODR7
//    </check>
//  </item>
//  


// -------------------------------  Field Item: GPIOC_ODR_ODR6  -----------------------------------
// SVD Line: 8383

//  <item> SFDITEM_FIELD__GPIOC_ODR_ODR6
//    <name> ODR6 </name>
//    <rw> 
//    <i> [Bit 6] RW (@ 0x50000814) Port output data (y =  0..15) </i>
//    <check> 
//      <loc> ( (unsigned int) GPIOC_ODR ) </loc>
//      <o.6..6> ODR6
//    </check>
//  </item>
//  


// -------------------------------  Field Item: GPIOC_ODR_ODR5  -----------------------------------
// SVD Line: 8390

//  <item> SFDITEM_FIELD__GPIOC_ODR_ODR5
//    <name> ODR5 </name>
//    <rw> 
//    <i> [Bit 5] RW (@ 0x50000814) Port output data (y =  0..15) </i>
//    <check> 
//      <loc> ( (unsigned int) GPIOC_ODR ) </loc>
//      <o.5..5> ODR5
//    </check>
//  </item>
//  


// -------------------------------  Field Item: GPIOC_ODR_ODR4  -----------------------------------
// SVD Line: 8397

//  <item> SFDITEM_FIELD__GPIOC_ODR_ODR4
//    <name> ODR4 </name>
//    <rw> 
//    <i> [Bit 4] RW (@ 0x50000814) Port output data (y =  0..15) </i>
//    <check> 
//      <loc> ( (unsigned int) GPIOC_ODR ) </loc>
//      <o.4..4> ODR4
//    </check>
//  </item>
//  


// -------------------------------  Field Item: GPIOC_ODR_ODR3  -----------------------------------
// SVD Line: 8404

//  <item> SFDITEM_FIELD__GPIOC_ODR_ODR3
//    <name> ODR3 </name>
//    <rw> 
//    <i> [Bit 3] RW (@ 0x50000814) Port output data (y =  0..15) </i>
//    <check> 
//      <loc> ( (unsigned int) GPIOC_ODR ) </loc>
//      <o.3..3> ODR3
//    </check>
//  </item>
//  


// -------------------------------  Field Item: GPIOC_ODR_ODR2  -----------------------------------
// SVD Line: 8411

//  <item> SFDITEM_FIELD__GPIOC_ODR_ODR2
//    <name> ODR2 </name>
//    <rw> 
//    <i> [Bit 2] RW (@ 0x50000814) Port output data (y =  0..15) </i>
//    <check> 
//      <loc> ( (unsigned int) GPIOC_ODR ) </loc>
//      <o.2..2> ODR2
//    </check>
//  </item>
//  


// -------------------------------  Field Item: GPIOC_ODR_ODR1  -----------------------------------
// SVD Line: 8418

//  <item> SFDITEM_FIELD__GPIOC_ODR_ODR1
//    <name> ODR1 </name>
//    <rw> 
//    <i> [Bit 1] RW (@ 0x50000814) Port output data (y =  0..15) </i>
//    <check> 
//      <loc> ( (unsigned int) GPIOC_ODR ) </loc>
//      <o.1..1> ODR1
//    </check>
//  </item>
//  


// -------------------------------  Field Item: GPIOC_ODR_ODR0  -----------------------------------
// SVD Line: 8425

//  <item> SFDITEM_FIELD__GPIOC_ODR_ODR0
//    <name> ODR0 </name>
//    <rw> 
//    <i> [Bit 0] RW (@ 0x50000814) Port output data (y =  0..15) </i>
//    <check> 
//      <loc> ( (unsigned int) GPIOC_ODR ) </loc>
//      <o.0..0> ODR0
//    </check>
//  </item>
//  


// --------------------------------  Register RTree: GPIOC_ODR  -----------------------------------
// SVD Line: 8311

//  <rtree> SFDITEM_REG__GPIOC_ODR
//    <name> ODR </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x50000814) GPIO port output data register </i>
//    <loc> ( (unsigned int)((GPIOC_ODR >> 0) & 0xFFFFFFFF), ((GPIOC_ODR = (GPIOC_ODR & ~(0xFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__GPIOC_ODR_ODR15 </item>
//    <item> SFDITEM_FIELD__GPIOC_ODR_ODR14 </item>
//    <item> SFDITEM_FIELD__GPIOC_ODR_ODR13 </item>
//    <item> SFDITEM_FIELD__GPIOC_ODR_ODR12 </item>
//    <item> SFDITEM_FIELD__GPIOC_ODR_ODR11 </item>
//    <item> SFDITEM_FIELD__GPIOC_ODR_ODR10 </item>
//    <item> SFDITEM_FIELD__GPIOC_ODR_ODR9 </item>
//    <item> SFDITEM_FIELD__GPIOC_ODR_ODR8 </item>
//    <item> SFDITEM_FIELD__GPIOC_ODR_ODR7 </item>
//    <item> SFDITEM_FIELD__GPIOC_ODR_ODR6 </item>
//    <item> SFDITEM_FIELD__GPIOC_ODR_ODR5 </item>
//    <item> SFDITEM_FIELD__GPIOC_ODR_ODR4 </item>
//    <item> SFDITEM_FIELD__GPIOC_ODR_ODR3 </item>
//    <item> SFDITEM_FIELD__GPIOC_ODR_ODR2 </item>
//    <item> SFDITEM_FIELD__GPIOC_ODR_ODR1 </item>
//    <item> SFDITEM_FIELD__GPIOC_ODR_ODR0 </item>
//  </rtree>
//  


// ----------------------------  Register Item Address: GPIOC_BSRR  -------------------------------
// SVD Line: 8434

unsigned int GPIOC_BSRR __AT (0x50000818);



// -------------------------------  Field Item: GPIOC_BSRR_BR15  ----------------------------------
// SVD Line: 8444

//  <item> SFDITEM_FIELD__GPIOC_BSRR_BR15
//    <name> BR15 </name>
//    <w> 
//    <i> [Bit 31] WO (@ 0x50000818) Port x reset bit y (y =  0..15) </i>
//    <check> 
//      <loc> ( (unsigned int) GPIOC_BSRR ) </loc>
//      <o.31..31> BR15
//    </check>
//  </item>
//  


// -------------------------------  Field Item: GPIOC_BSRR_BR14  ----------------------------------
// SVD Line: 8451

//  <item> SFDITEM_FIELD__GPIOC_BSRR_BR14
//    <name> BR14 </name>
//    <w> 
//    <i> [Bit 30] WO (@ 0x50000818) Port x reset bit y (y =  0..15) </i>
//    <check> 
//      <loc> ( (unsigned int) GPIOC_BSRR ) </loc>
//      <o.30..30> BR14
//    </check>
//  </item>
//  


// -------------------------------  Field Item: GPIOC_BSRR_BR13  ----------------------------------
// SVD Line: 8458

//  <item> SFDITEM_FIELD__GPIOC_BSRR_BR13
//    <name> BR13 </name>
//    <w> 
//    <i> [Bit 29] WO (@ 0x50000818) Port x reset bit y (y =  0..15) </i>
//    <check> 
//      <loc> ( (unsigned int) GPIOC_BSRR ) </loc>
//      <o.29..29> BR13
//    </check>
//  </item>
//  


// -------------------------------  Field Item: GPIOC_BSRR_BR12  ----------------------------------
// SVD Line: 8465

//  <item> SFDITEM_FIELD__GPIOC_BSRR_BR12
//    <name> BR12 </name>
//    <w> 
//    <i> [Bit 28] WO (@ 0x50000818) Port x reset bit y (y =  0..15) </i>
//    <check> 
//      <loc> ( (unsigned int) GPIOC_BSRR ) </loc>
//      <o.28..28> BR12
//    </check>
//  </item>
//  


// -------------------------------  Field Item: GPIOC_BSRR_BR11  ----------------------------------
// SVD Line: 8472

//  <item> SFDITEM_FIELD__GPIOC_BSRR_BR11
//    <name> BR11 </name>
//    <w> 
//    <i> [Bit 27] WO (@ 0x50000818) Port x reset bit y (y =  0..15) </i>
//    <check> 
//      <loc> ( (unsigned int) GPIOC_BSRR ) </loc>
//      <o.27..27> BR11
//    </check>
//  </item>
//  


// -------------------------------  Field Item: GPIOC_BSRR_BR10  ----------------------------------
// SVD Line: 8479

//  <item> SFDITEM_FIELD__GPIOC_BSRR_BR10
//    <name> BR10 </name>
//    <w> 
//    <i> [Bit 26] WO (@ 0x50000818) Port x reset bit y (y =  0..15) </i>
//    <check> 
//      <loc> ( (unsigned int) GPIOC_BSRR ) </loc>
//      <o.26..26> BR10
//    </check>
//  </item>
//  


// -------------------------------  Field Item: GPIOC_BSRR_BR9  -----------------------------------
// SVD Line: 8486

//  <item> SFDITEM_FIELD__GPIOC_BSRR_BR9
//    <name> BR9 </name>
//    <w> 
//    <i> [Bit 25] WO (@ 0x50000818) Port x reset bit y (y =  0..15) </i>
//    <check> 
//      <loc> ( (unsigned int) GPIOC_BSRR ) </loc>
//      <o.25..25> BR9
//    </check>
//  </item>
//  


// -------------------------------  Field Item: GPIOC_BSRR_BR8  -----------------------------------
// SVD Line: 8493

//  <item> SFDITEM_FIELD__GPIOC_BSRR_BR8
//    <name> BR8 </name>
//    <w> 
//    <i> [Bit 24] WO (@ 0x50000818) Port x reset bit y (y =  0..15) </i>
//    <check> 
//      <loc> ( (unsigned int) GPIOC_BSRR ) </loc>
//      <o.24..24> BR8
//    </check>
//  </item>
//  


// -------------------------------  Field Item: GPIOC_BSRR_BR7  -----------------------------------
// SVD Line: 8500

//  <item> SFDITEM_FIELD__GPIOC_BSRR_BR7
//    <name> BR7 </name>
//    <w> 
//    <i> [Bit 23] WO (@ 0x50000818) Port x reset bit y (y =  0..15) </i>
//    <check> 
//      <loc> ( (unsigned int) GPIOC_BSRR ) </loc>
//      <o.23..23> BR7
//    </check>
//  </item>
//  


// -------------------------------  Field Item: GPIOC_BSRR_BR6  -----------------------------------
// SVD Line: 8507

//  <item> SFDITEM_FIELD__GPIOC_BSRR_BR6
//    <name> BR6 </name>
//    <w> 
//    <i> [Bit 22] WO (@ 0x50000818) Port x reset bit y (y =  0..15) </i>
//    <check> 
//      <loc> ( (unsigned int) GPIOC_BSRR ) </loc>
//      <o.22..22> BR6
//    </check>
//  </item>
//  


// -------------------------------  Field Item: GPIOC_BSRR_BR5  -----------------------------------
// SVD Line: 8514

//  <item> SFDITEM_FIELD__GPIOC_BSRR_BR5
//    <name> BR5 </name>
//    <w> 
//    <i> [Bit 21] WO (@ 0x50000818) Port x reset bit y (y =  0..15) </i>
//    <check> 
//      <loc> ( (unsigned int) GPIOC_BSRR ) </loc>
//      <o.21..21> BR5
//    </check>
//  </item>
//  


// -------------------------------  Field Item: GPIOC_BSRR_BR4  -----------------------------------
// SVD Line: 8521

//  <item> SFDITEM_FIELD__GPIOC_BSRR_BR4
//    <name> BR4 </name>
//    <w> 
//    <i> [Bit 20] WO (@ 0x50000818) Port x reset bit y (y =  0..15) </i>
//    <check> 
//      <loc> ( (unsigned int) GPIOC_BSRR ) </loc>
//      <o.20..20> BR4
//    </check>
//  </item>
//  


// -------------------------------  Field Item: GPIOC_BSRR_BR3  -----------------------------------
// SVD Line: 8528

//  <item> SFDITEM_FIELD__GPIOC_BSRR_BR3
//    <name> BR3 </name>
//    <w> 
//    <i> [Bit 19] WO (@ 0x50000818) Port x reset bit y (y =  0..15) </i>
//    <check> 
//      <loc> ( (unsigned int) GPIOC_BSRR ) </loc>
//      <o.19..19> BR3
//    </check>
//  </item>
//  


// -------------------------------  Field Item: GPIOC_BSRR_BR2  -----------------------------------
// SVD Line: 8535

//  <item> SFDITEM_FIELD__GPIOC_BSRR_BR2
//    <name> BR2 </name>
//    <w> 
//    <i> [Bit 18] WO (@ 0x50000818) Port x reset bit y (y =  0..15) </i>
//    <check> 
//      <loc> ( (unsigned int) GPIOC_BSRR ) </loc>
//      <o.18..18> BR2
//    </check>
//  </item>
//  


// -------------------------------  Field Item: GPIOC_BSRR_BR1  -----------------------------------
// SVD Line: 8542

//  <item> SFDITEM_FIELD__GPIOC_BSRR_BR1
//    <name> BR1 </name>
//    <w> 
//    <i> [Bit 17] WO (@ 0x50000818) Port x reset bit y (y =  0..15) </i>
//    <check> 
//      <loc> ( (unsigned int) GPIOC_BSRR ) </loc>
//      <o.17..17> BR1
//    </check>
//  </item>
//  


// -------------------------------  Field Item: GPIOC_BSRR_BR0  -----------------------------------
// SVD Line: 8549

//  <item> SFDITEM_FIELD__GPIOC_BSRR_BR0
//    <name> BR0 </name>
//    <w> 
//    <i> [Bit 16] WO (@ 0x50000818) Port x set bit y (y=  0..15) </i>
//    <check> 
//      <loc> ( (unsigned int) GPIOC_BSRR ) </loc>
//      <o.16..16> BR0
//    </check>
//  </item>
//  


// -------------------------------  Field Item: GPIOC_BSRR_BS15  ----------------------------------
// SVD Line: 8556

//  <item> SFDITEM_FIELD__GPIOC_BSRR_BS15
//    <name> BS15 </name>
//    <w> 
//    <i> [Bit 15] WO (@ 0x50000818) Port x set bit y (y=  0..15) </i>
//    <check> 
//      <loc> ( (unsigned int) GPIOC_BSRR ) </loc>
//      <o.15..15> BS15
//    </check>
//  </item>
//  


// -------------------------------  Field Item: GPIOC_BSRR_BS14  ----------------------------------
// SVD Line: 8563

//  <item> SFDITEM_FIELD__GPIOC_BSRR_BS14
//    <name> BS14 </name>
//    <w> 
//    <i> [Bit 14] WO (@ 0x50000818) Port x set bit y (y=  0..15) </i>
//    <check> 
//      <loc> ( (unsigned int) GPIOC_BSRR ) </loc>
//      <o.14..14> BS14
//    </check>
//  </item>
//  


// -------------------------------  Field Item: GPIOC_BSRR_BS13  ----------------------------------
// SVD Line: 8570

//  <item> SFDITEM_FIELD__GPIOC_BSRR_BS13
//    <name> BS13 </name>
//    <w> 
//    <i> [Bit 13] WO (@ 0x50000818) Port x set bit y (y=  0..15) </i>
//    <check> 
//      <loc> ( (unsigned int) GPIOC_BSRR ) </loc>
//      <o.13..13> BS13
//    </check>
//  </item>
//  


// -------------------------------  Field Item: GPIOC_BSRR_BS12  ----------------------------------
// SVD Line: 8577

//  <item> SFDITEM_FIELD__GPIOC_BSRR_BS12
//    <name> BS12 </name>
//    <w> 
//    <i> [Bit 12] WO (@ 0x50000818) Port x set bit y (y=  0..15) </i>
//    <check> 
//      <loc> ( (unsigned int) GPIOC_BSRR ) </loc>
//      <o.12..12> BS12
//    </check>
//  </item>
//  


// -------------------------------  Field Item: GPIOC_BSRR_BS11  ----------------------------------
// SVD Line: 8584

//  <item> SFDITEM_FIELD__GPIOC_BSRR_BS11
//    <name> BS11 </name>
//    <w> 
//    <i> [Bit 11] WO (@ 0x50000818) Port x set bit y (y=  0..15) </i>
//    <check> 
//      <loc> ( (unsigned int) GPIOC_BSRR ) </loc>
//      <o.11..11> BS11
//    </check>
//  </item>
//  


// -------------------------------  Field Item: GPIOC_BSRR_BS10  ----------------------------------
// SVD Line: 8591

//  <item> SFDITEM_FIELD__GPIOC_BSRR_BS10
//    <name> BS10 </name>
//    <w> 
//    <i> [Bit 10] WO (@ 0x50000818) Port x set bit y (y=  0..15) </i>
//    <check> 
//      <loc> ( (unsigned int) GPIOC_BSRR ) </loc>
//      <o.10..10> BS10
//    </check>
//  </item>
//  


// -------------------------------  Field Item: GPIOC_BSRR_BS9  -----------------------------------
// SVD Line: 8598

//  <item> SFDITEM_FIELD__GPIOC_BSRR_BS9
//    <name> BS9 </name>
//    <w> 
//    <i> [Bit 9] WO (@ 0x50000818) Port x set bit y (y=  0..15) </i>
//    <check> 
//      <loc> ( (unsigned int) GPIOC_BSRR ) </loc>
//      <o.9..9> BS9
//    </check>
//  </item>
//  


// -------------------------------  Field Item: GPIOC_BSRR_BS8  -----------------------------------
// SVD Line: 8605

//  <item> SFDITEM_FIELD__GPIOC_BSRR_BS8
//    <name> BS8 </name>
//    <w> 
//    <i> [Bit 8] WO (@ 0x50000818) Port x set bit y (y=  0..15) </i>
//    <check> 
//      <loc> ( (unsigned int) GPIOC_BSRR ) </loc>
//      <o.8..8> BS8
//    </check>
//  </item>
//  


// -------------------------------  Field Item: GPIOC_BSRR_BS7  -----------------------------------
// SVD Line: 8612

//  <item> SFDITEM_FIELD__GPIOC_BSRR_BS7
//    <name> BS7 </name>
//    <w> 
//    <i> [Bit 7] WO (@ 0x50000818) Port x set bit y (y=  0..15) </i>
//    <check> 
//      <loc> ( (unsigned int) GPIOC_BSRR ) </loc>
//      <o.7..7> BS7
//    </check>
//  </item>
//  


// -------------------------------  Field Item: GPIOC_BSRR_BS6  -----------------------------------
// SVD Line: 8619

//  <item> SFDITEM_FIELD__GPIOC_BSRR_BS6
//    <name> BS6 </name>
//    <w> 
//    <i> [Bit 6] WO (@ 0x50000818) Port x set bit y (y=  0..15) </i>
//    <check> 
//      <loc> ( (unsigned int) GPIOC_BSRR ) </loc>
//      <o.6..6> BS6
//    </check>
//  </item>
//  


// -------------------------------  Field Item: GPIOC_BSRR_BS5  -----------------------------------
// SVD Line: 8626

//  <item> SFDITEM_FIELD__GPIOC_BSRR_BS5
//    <name> BS5 </name>
//    <w> 
//    <i> [Bit 5] WO (@ 0x50000818) Port x set bit y (y=  0..15) </i>
//    <check> 
//      <loc> ( (unsigned int) GPIOC_BSRR ) </loc>
//      <o.5..5> BS5
//    </check>
//  </item>
//  


// -------------------------------  Field Item: GPIOC_BSRR_BS4  -----------------------------------
// SVD Line: 8633

//  <item> SFDITEM_FIELD__GPIOC_BSRR_BS4
//    <name> BS4 </name>
//    <w> 
//    <i> [Bit 4] WO (@ 0x50000818) Port x set bit y (y=  0..15) </i>
//    <check> 
//      <loc> ( (unsigned int) GPIOC_BSRR ) </loc>
//      <o.4..4> BS4
//    </check>
//  </item>
//  


// -------------------------------  Field Item: GPIOC_BSRR_BS3  -----------------------------------
// SVD Line: 8640

//  <item> SFDITEM_FIELD__GPIOC_BSRR_BS3
//    <name> BS3 </name>
//    <w> 
//    <i> [Bit 3] WO (@ 0x50000818) Port x set bit y (y=  0..15) </i>
//    <check> 
//      <loc> ( (unsigned int) GPIOC_BSRR ) </loc>
//      <o.3..3> BS3
//    </check>
//  </item>
//  


// -------------------------------  Field Item: GPIOC_BSRR_BS2  -----------------------------------
// SVD Line: 8647

//  <item> SFDITEM_FIELD__GPIOC_BSRR_BS2
//    <name> BS2 </name>
//    <w> 
//    <i> [Bit 2] WO (@ 0x50000818) Port x set bit y (y=  0..15) </i>
//    <check> 
//      <loc> ( (unsigned int) GPIOC_BSRR ) </loc>
//      <o.2..2> BS2
//    </check>
//  </item>
//  


// -------------------------------  Field Item: GPIOC_BSRR_BS1  -----------------------------------
// SVD Line: 8654

//  <item> SFDITEM_FIELD__GPIOC_BSRR_BS1
//    <name> BS1 </name>
//    <w> 
//    <i> [Bit 1] WO (@ 0x50000818) Port x set bit y (y=  0..15) </i>
//    <check> 
//      <loc> ( (unsigned int) GPIOC_BSRR ) </loc>
//      <o.1..1> BS1
//    </check>
//  </item>
//  


// -------------------------------  Field Item: GPIOC_BSRR_BS0  -----------------------------------
// SVD Line: 8661

//  <item> SFDITEM_FIELD__GPIOC_BSRR_BS0
//    <name> BS0 </name>
//    <w> 
//    <i> [Bit 0] WO (@ 0x50000818) Port x set bit y (y=  0..15) </i>
//    <check> 
//      <loc> ( (unsigned int) GPIOC_BSRR ) </loc>
//      <o.0..0> BS0
//    </check>
//  </item>
//  


// -------------------------------  Register RTree: GPIOC_BSRR  -----------------------------------
// SVD Line: 8434

//  <rtree> SFDITEM_REG__GPIOC_BSRR
//    <name> BSRR </name>
//    <w> 
//    <i> [Bits 31..0] WO (@ 0x50000818) GPIO port bit set/reset  register </i>
//    <loc> ( (unsigned int)((GPIOC_BSRR >> 0) & 0xFFFFFFFF), ((GPIOC_BSRR = (GPIOC_BSRR & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__GPIOC_BSRR_BR15 </item>
//    <item> SFDITEM_FIELD__GPIOC_BSRR_BR14 </item>
//    <item> SFDITEM_FIELD__GPIOC_BSRR_BR13 </item>
//    <item> SFDITEM_FIELD__GPIOC_BSRR_BR12 </item>
//    <item> SFDITEM_FIELD__GPIOC_BSRR_BR11 </item>
//    <item> SFDITEM_FIELD__GPIOC_BSRR_BR10 </item>
//    <item> SFDITEM_FIELD__GPIOC_BSRR_BR9 </item>
//    <item> SFDITEM_FIELD__GPIOC_BSRR_BR8 </item>
//    <item> SFDITEM_FIELD__GPIOC_BSRR_BR7 </item>
//    <item> SFDITEM_FIELD__GPIOC_BSRR_BR6 </item>
//    <item> SFDITEM_FIELD__GPIOC_BSRR_BR5 </item>
//    <item> SFDITEM_FIELD__GPIOC_BSRR_BR4 </item>
//    <item> SFDITEM_FIELD__GPIOC_BSRR_BR3 </item>
//    <item> SFDITEM_FIELD__GPIOC_BSRR_BR2 </item>
//    <item> SFDITEM_FIELD__GPIOC_BSRR_BR1 </item>
//    <item> SFDITEM_FIELD__GPIOC_BSRR_BR0 </item>
//    <item> SFDITEM_FIELD__GPIOC_BSRR_BS15 </item>
//    <item> SFDITEM_FIELD__GPIOC_BSRR_BS14 </item>
//    <item> SFDITEM_FIELD__GPIOC_BSRR_BS13 </item>
//    <item> SFDITEM_FIELD__GPIOC_BSRR_BS12 </item>
//    <item> SFDITEM_FIELD__GPIOC_BSRR_BS11 </item>
//    <item> SFDITEM_FIELD__GPIOC_BSRR_BS10 </item>
//    <item> SFDITEM_FIELD__GPIOC_BSRR_BS9 </item>
//    <item> SFDITEM_FIELD__GPIOC_BSRR_BS8 </item>
//    <item> SFDITEM_FIELD__GPIOC_BSRR_BS7 </item>
//    <item> SFDITEM_FIELD__GPIOC_BSRR_BS6 </item>
//    <item> SFDITEM_FIELD__GPIOC_BSRR_BS5 </item>
//    <item> SFDITEM_FIELD__GPIOC_BSRR_BS4 </item>
//    <item> SFDITEM_FIELD__GPIOC_BSRR_BS3 </item>
//    <item> SFDITEM_FIELD__GPIOC_BSRR_BS2 </item>
//    <item> SFDITEM_FIELD__GPIOC_BSRR_BS1 </item>
//    <item> SFDITEM_FIELD__GPIOC_BSRR_BS0 </item>
//  </rtree>
//  


// ----------------------------  Register Item Address: GPIOC_LCKR  -------------------------------
// SVD Line: 8670

unsigned int GPIOC_LCKR __AT (0x5000081C);



// -------------------------------  Field Item: GPIOC_LCKR_LCKK  ----------------------------------
// SVD Line: 8680

//  <item> SFDITEM_FIELD__GPIOC_LCKR_LCKK
//    <name> LCKK </name>
//    <rw> 
//    <i> [Bit 16] RW (@ 0x5000081C) Port x lock bit y (y=  0..15) </i>
//    <check> 
//      <loc> ( (unsigned int) GPIOC_LCKR ) </loc>
//      <o.16..16> LCKK
//    </check>
//  </item>
//  


// ------------------------------  Field Item: GPIOC_LCKR_LCK15  ----------------------------------
// SVD Line: 8687

//  <item> SFDITEM_FIELD__GPIOC_LCKR_LCK15
//    <name> LCK15 </name>
//    <rw> 
//    <i> [Bit 15] RW (@ 0x5000081C) Port x lock bit y (y=  0..15) </i>
//    <check> 
//      <loc> ( (unsigned int) GPIOC_LCKR ) </loc>
//      <o.15..15> LCK15
//    </check>
//  </item>
//  


// ------------------------------  Field Item: GPIOC_LCKR_LCK14  ----------------------------------
// SVD Line: 8694

//  <item> SFDITEM_FIELD__GPIOC_LCKR_LCK14
//    <name> LCK14 </name>
//    <rw> 
//    <i> [Bit 14] RW (@ 0x5000081C) Port x lock bit y (y=  0..15) </i>
//    <check> 
//      <loc> ( (unsigned int) GPIOC_LCKR ) </loc>
//      <o.14..14> LCK14
//    </check>
//  </item>
//  


// ------------------------------  Field Item: GPIOC_LCKR_LCK13  ----------------------------------
// SVD Line: 8701

//  <item> SFDITEM_FIELD__GPIOC_LCKR_LCK13
//    <name> LCK13 </name>
//    <rw> 
//    <i> [Bit 13] RW (@ 0x5000081C) Port x lock bit y (y=  0..15) </i>
//    <check> 
//      <loc> ( (unsigned int) GPIOC_LCKR ) </loc>
//      <o.13..13> LCK13
//    </check>
//  </item>
//  


// ------------------------------  Field Item: GPIOC_LCKR_LCK12  ----------------------------------
// SVD Line: 8708

//  <item> SFDITEM_FIELD__GPIOC_LCKR_LCK12
//    <name> LCK12 </name>
//    <rw> 
//    <i> [Bit 12] RW (@ 0x5000081C) Port x lock bit y (y=  0..15) </i>
//    <check> 
//      <loc> ( (unsigned int) GPIOC_LCKR ) </loc>
//      <o.12..12> LCK12
//    </check>
//  </item>
//  


// ------------------------------  Field Item: GPIOC_LCKR_LCK11  ----------------------------------
// SVD Line: 8715

//  <item> SFDITEM_FIELD__GPIOC_LCKR_LCK11
//    <name> LCK11 </name>
//    <rw> 
//    <i> [Bit 11] RW (@ 0x5000081C) Port x lock bit y (y=  0..15) </i>
//    <check> 
//      <loc> ( (unsigned int) GPIOC_LCKR ) </loc>
//      <o.11..11> LCK11
//    </check>
//  </item>
//  


// ------------------------------  Field Item: GPIOC_LCKR_LCK10  ----------------------------------
// SVD Line: 8722

//  <item> SFDITEM_FIELD__GPIOC_LCKR_LCK10
//    <name> LCK10 </name>
//    <rw> 
//    <i> [Bit 10] RW (@ 0x5000081C) Port x lock bit y (y=  0..15) </i>
//    <check> 
//      <loc> ( (unsigned int) GPIOC_LCKR ) </loc>
//      <o.10..10> LCK10
//    </check>
//  </item>
//  


// -------------------------------  Field Item: GPIOC_LCKR_LCK9  ----------------------------------
// SVD Line: 8729

//  <item> SFDITEM_FIELD__GPIOC_LCKR_LCK9
//    <name> LCK9 </name>
//    <rw> 
//    <i> [Bit 9] RW (@ 0x5000081C) Port x lock bit y (y=  0..15) </i>
//    <check> 
//      <loc> ( (unsigned int) GPIOC_LCKR ) </loc>
//      <o.9..9> LCK9
//    </check>
//  </item>
//  


// -------------------------------  Field Item: GPIOC_LCKR_LCK8  ----------------------------------
// SVD Line: 8736

//  <item> SFDITEM_FIELD__GPIOC_LCKR_LCK8
//    <name> LCK8 </name>
//    <rw> 
//    <i> [Bit 8] RW (@ 0x5000081C) Port x lock bit y (y=  0..15) </i>
//    <check> 
//      <loc> ( (unsigned int) GPIOC_LCKR ) </loc>
//      <o.8..8> LCK8
//    </check>
//  </item>
//  


// -------------------------------  Field Item: GPIOC_LCKR_LCK7  ----------------------------------
// SVD Line: 8743

//  <item> SFDITEM_FIELD__GPIOC_LCKR_LCK7
//    <name> LCK7 </name>
//    <rw> 
//    <i> [Bit 7] RW (@ 0x5000081C) Port x lock bit y (y=  0..15) </i>
//    <check> 
//      <loc> ( (unsigned int) GPIOC_LCKR ) </loc>
//      <o.7..7> LCK7
//    </check>
//  </item>
//  


// -------------------------------  Field Item: GPIOC_LCKR_LCK6  ----------------------------------
// SVD Line: 8750

//  <item> SFDITEM_FIELD__GPIOC_LCKR_LCK6
//    <name> LCK6 </name>
//    <rw> 
//    <i> [Bit 6] RW (@ 0x5000081C) Port x lock bit y (y=  0..15) </i>
//    <check> 
//      <loc> ( (unsigned int) GPIOC_LCKR ) </loc>
//      <o.6..6> LCK6
//    </check>
//  </item>
//  


// -------------------------------  Field Item: GPIOC_LCKR_LCK5  ----------------------------------
// SVD Line: 8757

//  <item> SFDITEM_FIELD__GPIOC_LCKR_LCK5
//    <name> LCK5 </name>
//    <rw> 
//    <i> [Bit 5] RW (@ 0x5000081C) Port x lock bit y (y=  0..15) </i>
//    <check> 
//      <loc> ( (unsigned int) GPIOC_LCKR ) </loc>
//      <o.5..5> LCK5
//    </check>
//  </item>
//  


// -------------------------------  Field Item: GPIOC_LCKR_LCK4  ----------------------------------
// SVD Line: 8764

//  <item> SFDITEM_FIELD__GPIOC_LCKR_LCK4
//    <name> LCK4 </name>
//    <rw> 
//    <i> [Bit 4] RW (@ 0x5000081C) Port x lock bit y (y=  0..15) </i>
//    <check> 
//      <loc> ( (unsigned int) GPIOC_LCKR ) </loc>
//      <o.4..4> LCK4
//    </check>
//  </item>
//  


// -------------------------------  Field Item: GPIOC_LCKR_LCK3  ----------------------------------
// SVD Line: 8771

//  <item> SFDITEM_FIELD__GPIOC_LCKR_LCK3
//    <name> LCK3 </name>
//    <rw> 
//    <i> [Bit 3] RW (@ 0x5000081C) Port x lock bit y (y=  0..15) </i>
//    <check> 
//      <loc> ( (unsigned int) GPIOC_LCKR ) </loc>
//      <o.3..3> LCK3
//    </check>
//  </item>
//  


// -------------------------------  Field Item: GPIOC_LCKR_LCK2  ----------------------------------
// SVD Line: 8778

//  <item> SFDITEM_FIELD__GPIOC_LCKR_LCK2
//    <name> LCK2 </name>
//    <rw> 
//    <i> [Bit 2] RW (@ 0x5000081C) Port x lock bit y (y=  0..15) </i>
//    <check> 
//      <loc> ( (unsigned int) GPIOC_LCKR ) </loc>
//      <o.2..2> LCK2
//    </check>
//  </item>
//  


// -------------------------------  Field Item: GPIOC_LCKR_LCK1  ----------------------------------
// SVD Line: 8785

//  <item> SFDITEM_FIELD__GPIOC_LCKR_LCK1
//    <name> LCK1 </name>
//    <rw> 
//    <i> [Bit 1] RW (@ 0x5000081C) Port x lock bit y (y=  0..15) </i>
//    <check> 
//      <loc> ( (unsigned int) GPIOC_LCKR ) </loc>
//      <o.1..1> LCK1
//    </check>
//  </item>
//  


// -------------------------------  Field Item: GPIOC_LCKR_LCK0  ----------------------------------
// SVD Line: 8792

//  <item> SFDITEM_FIELD__GPIOC_LCKR_LCK0
//    <name> LCK0 </name>
//    <rw> 
//    <i> [Bit 0] RW (@ 0x5000081C) Port x lock bit y (y=  0..15) </i>
//    <check> 
//      <loc> ( (unsigned int) GPIOC_LCKR ) </loc>
//      <o.0..0> LCK0
//    </check>
//  </item>
//  


// -------------------------------  Register RTree: GPIOC_LCKR  -----------------------------------
// SVD Line: 8670

//  <rtree> SFDITEM_REG__GPIOC_LCKR
//    <name> LCKR </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x5000081C) GPIO port configuration lock  register </i>
//    <loc> ( (unsigned int)((GPIOC_LCKR >> 0) & 0xFFFFFFFF), ((GPIOC_LCKR = (GPIOC_LCKR & ~(0x1FFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0x1FFFF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__GPIOC_LCKR_LCKK </item>
//    <item> SFDITEM_FIELD__GPIOC_LCKR_LCK15 </item>
//    <item> SFDITEM_FIELD__GPIOC_LCKR_LCK14 </item>
//    <item> SFDITEM_FIELD__GPIOC_LCKR_LCK13 </item>
//    <item> SFDITEM_FIELD__GPIOC_LCKR_LCK12 </item>
//    <item> SFDITEM_FIELD__GPIOC_LCKR_LCK11 </item>
//    <item> SFDITEM_FIELD__GPIOC_LCKR_LCK10 </item>
//    <item> SFDITEM_FIELD__GPIOC_LCKR_LCK9 </item>
//    <item> SFDITEM_FIELD__GPIOC_LCKR_LCK8 </item>
//    <item> SFDITEM_FIELD__GPIOC_LCKR_LCK7 </item>
//    <item> SFDITEM_FIELD__GPIOC_LCKR_LCK6 </item>
//    <item> SFDITEM_FIELD__GPIOC_LCKR_LCK5 </item>
//    <item> SFDITEM_FIELD__GPIOC_LCKR_LCK4 </item>
//    <item> SFDITEM_FIELD__GPIOC_LCKR_LCK3 </item>
//    <item> SFDITEM_FIELD__GPIOC_LCKR_LCK2 </item>
//    <item> SFDITEM_FIELD__GPIOC_LCKR_LCK1 </item>
//    <item> SFDITEM_FIELD__GPIOC_LCKR_LCK0 </item>
//  </rtree>
//  


// ----------------------------  Register Item Address: GPIOC_AFRL  -------------------------------
// SVD Line: 8801

unsigned int GPIOC_AFRL __AT (0x50000820);



// ------------------------------  Field Item: GPIOC_AFRL_AFSEL7  ---------------------------------
// SVD Line: 8811

//  <item> SFDITEM_FIELD__GPIOC_AFRL_AFSEL7
//    <name> AFSEL7 </name>
//    <rw> 
//    <i> [Bits 31..28] RW (@ 0x50000820) Alternate function selection for port x  bit y (y = 0..7) </i>
//    <edit> 
//      <loc> ( (unsigned char)((GPIOC_AFRL >> 28) & 0xF), ((GPIOC_AFRL = (GPIOC_AFRL & ~(0xFUL << 28 )) | ((unsigned long)(Gui_u8:GuiVal & 0xF) << 28 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ------------------------------  Field Item: GPIOC_AFRL_AFSEL6  ---------------------------------
// SVD Line: 8818

//  <item> SFDITEM_FIELD__GPIOC_AFRL_AFSEL6
//    <name> AFSEL6 </name>
//    <rw> 
//    <i> [Bits 27..24] RW (@ 0x50000820) Alternate function selection for port x  bit y (y = 0..7) </i>
//    <edit> 
//      <loc> ( (unsigned char)((GPIOC_AFRL >> 24) & 0xF), ((GPIOC_AFRL = (GPIOC_AFRL & ~(0xFUL << 24 )) | ((unsigned long)(Gui_u8:GuiVal & 0xF) << 24 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ------------------------------  Field Item: GPIOC_AFRL_AFSEL5  ---------------------------------
// SVD Line: 8825

//  <item> SFDITEM_FIELD__GPIOC_AFRL_AFSEL5
//    <name> AFSEL5 </name>
//    <rw> 
//    <i> [Bits 23..20] RW (@ 0x50000820) Alternate function selection for port x  bit y (y = 0..7) </i>
//    <edit> 
//      <loc> ( (unsigned char)((GPIOC_AFRL >> 20) & 0xF), ((GPIOC_AFRL = (GPIOC_AFRL & ~(0xFUL << 20 )) | ((unsigned long)(Gui_u8:GuiVal & 0xF) << 20 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ------------------------------  Field Item: GPIOC_AFRL_AFSEL4  ---------------------------------
// SVD Line: 8832

//  <item> SFDITEM_FIELD__GPIOC_AFRL_AFSEL4
//    <name> AFSEL4 </name>
//    <rw> 
//    <i> [Bits 19..16] RW (@ 0x50000820) Alternate function selection for port x  bit y (y = 0..7) </i>
//    <edit> 
//      <loc> ( (unsigned char)((GPIOC_AFRL >> 16) & 0xF), ((GPIOC_AFRL = (GPIOC_AFRL & ~(0xFUL << 16 )) | ((unsigned long)(Gui_u8:GuiVal & 0xF) << 16 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ------------------------------  Field Item: GPIOC_AFRL_AFSEL3  ---------------------------------
// SVD Line: 8839

//  <item> SFDITEM_FIELD__GPIOC_AFRL_AFSEL3
//    <name> AFSEL3 </name>
//    <rw> 
//    <i> [Bits 15..12] RW (@ 0x50000820) Alternate function selection for port x  bit y (y = 0..7) </i>
//    <edit> 
//      <loc> ( (unsigned char)((GPIOC_AFRL >> 12) & 0xF), ((GPIOC_AFRL = (GPIOC_AFRL & ~(0xFUL << 12 )) | ((unsigned long)(Gui_u8:GuiVal & 0xF) << 12 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ------------------------------  Field Item: GPIOC_AFRL_AFSEL2  ---------------------------------
// SVD Line: 8846

//  <item> SFDITEM_FIELD__GPIOC_AFRL_AFSEL2
//    <name> AFSEL2 </name>
//    <rw> 
//    <i> [Bits 11..8] RW (@ 0x50000820) Alternate function selection for port x  bit y (y = 0..7) </i>
//    <edit> 
//      <loc> ( (unsigned char)((GPIOC_AFRL >> 8) & 0xF), ((GPIOC_AFRL = (GPIOC_AFRL & ~(0xFUL << 8 )) | ((unsigned long)(Gui_u8:GuiVal & 0xF) << 8 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ------------------------------  Field Item: GPIOC_AFRL_AFSEL1  ---------------------------------
// SVD Line: 8853

//  <item> SFDITEM_FIELD__GPIOC_AFRL_AFSEL1
//    <name> AFSEL1 </name>
//    <rw> 
//    <i> [Bits 7..4] RW (@ 0x50000820) Alternate function selection for port x  bit y (y = 0..7) </i>
//    <edit> 
//      <loc> ( (unsigned char)((GPIOC_AFRL >> 4) & 0xF), ((GPIOC_AFRL = (GPIOC_AFRL & ~(0xFUL << 4 )) | ((unsigned long)(Gui_u8:GuiVal & 0xF) << 4 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ------------------------------  Field Item: GPIOC_AFRL_AFSEL0  ---------------------------------
// SVD Line: 8860

//  <item> SFDITEM_FIELD__GPIOC_AFRL_AFSEL0
//    <name> AFSEL0 </name>
//    <rw> 
//    <i> [Bits 3..0] RW (@ 0x50000820) Alternate function selection for port x  bit y (y = 0..7) </i>
//    <edit> 
//      <loc> ( (unsigned char)((GPIOC_AFRL >> 0) & 0xF), ((GPIOC_AFRL = (GPIOC_AFRL & ~(0xFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -------------------------------  Register RTree: GPIOC_AFRL  -----------------------------------
// SVD Line: 8801

//  <rtree> SFDITEM_REG__GPIOC_AFRL
//    <name> AFRL </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x50000820) GPIO alternate function low  register </i>
//    <loc> ( (unsigned int)((GPIOC_AFRL >> 0) & 0xFFFFFFFF), ((GPIOC_AFRL = (GPIOC_AFRL & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__GPIOC_AFRL_AFSEL7 </item>
//    <item> SFDITEM_FIELD__GPIOC_AFRL_AFSEL6 </item>
//    <item> SFDITEM_FIELD__GPIOC_AFRL_AFSEL5 </item>
//    <item> SFDITEM_FIELD__GPIOC_AFRL_AFSEL4 </item>
//    <item> SFDITEM_FIELD__GPIOC_AFRL_AFSEL3 </item>
//    <item> SFDITEM_FIELD__GPIOC_AFRL_AFSEL2 </item>
//    <item> SFDITEM_FIELD__GPIOC_AFRL_AFSEL1 </item>
//    <item> SFDITEM_FIELD__GPIOC_AFRL_AFSEL0 </item>
//  </rtree>
//  


// ----------------------------  Register Item Address: GPIOC_AFRH  -------------------------------
// SVD Line: 8869

unsigned int GPIOC_AFRH __AT (0x50000824);



// -----------------------------  Field Item: GPIOC_AFRH_AFSEL15  ---------------------------------
// SVD Line: 8879

//  <item> SFDITEM_FIELD__GPIOC_AFRH_AFSEL15
//    <name> AFSEL15 </name>
//    <rw> 
//    <i> [Bits 31..28] RW (@ 0x50000824) Alternate function selection for port x  bit y (y = 8..15) </i>
//    <edit> 
//      <loc> ( (unsigned char)((GPIOC_AFRH >> 28) & 0xF), ((GPIOC_AFRH = (GPIOC_AFRH & ~(0xFUL << 28 )) | ((unsigned long)(Gui_u8:GuiVal & 0xF) << 28 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -----------------------------  Field Item: GPIOC_AFRH_AFSEL14  ---------------------------------
// SVD Line: 8886

//  <item> SFDITEM_FIELD__GPIOC_AFRH_AFSEL14
//    <name> AFSEL14 </name>
//    <rw> 
//    <i> [Bits 27..24] RW (@ 0x50000824) Alternate function selection for port x  bit y (y = 8..15) </i>
//    <edit> 
//      <loc> ( (unsigned char)((GPIOC_AFRH >> 24) & 0xF), ((GPIOC_AFRH = (GPIOC_AFRH & ~(0xFUL << 24 )) | ((unsigned long)(Gui_u8:GuiVal & 0xF) << 24 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -----------------------------  Field Item: GPIOC_AFRH_AFSEL13  ---------------------------------
// SVD Line: 8893

//  <item> SFDITEM_FIELD__GPIOC_AFRH_AFSEL13
//    <name> AFSEL13 </name>
//    <rw> 
//    <i> [Bits 23..20] RW (@ 0x50000824) Alternate function selection for port x  bit y (y = 8..15) </i>
//    <edit> 
//      <loc> ( (unsigned char)((GPIOC_AFRH >> 20) & 0xF), ((GPIOC_AFRH = (GPIOC_AFRH & ~(0xFUL << 20 )) | ((unsigned long)(Gui_u8:GuiVal & 0xF) << 20 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -----------------------------  Field Item: GPIOC_AFRH_AFSEL12  ---------------------------------
// SVD Line: 8900

//  <item> SFDITEM_FIELD__GPIOC_AFRH_AFSEL12
//    <name> AFSEL12 </name>
//    <rw> 
//    <i> [Bits 19..16] RW (@ 0x50000824) Alternate function selection for port x  bit y (y = 8..15) </i>
//    <edit> 
//      <loc> ( (unsigned char)((GPIOC_AFRH >> 16) & 0xF), ((GPIOC_AFRH = (GPIOC_AFRH & ~(0xFUL << 16 )) | ((unsigned long)(Gui_u8:GuiVal & 0xF) << 16 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -----------------------------  Field Item: GPIOC_AFRH_AFSEL11  ---------------------------------
// SVD Line: 8907

//  <item> SFDITEM_FIELD__GPIOC_AFRH_AFSEL11
//    <name> AFSEL11 </name>
//    <rw> 
//    <i> [Bits 15..12] RW (@ 0x50000824) Alternate function selection for port x  bit y (y = 8..15) </i>
//    <edit> 
//      <loc> ( (unsigned char)((GPIOC_AFRH >> 12) & 0xF), ((GPIOC_AFRH = (GPIOC_AFRH & ~(0xFUL << 12 )) | ((unsigned long)(Gui_u8:GuiVal & 0xF) << 12 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -----------------------------  Field Item: GPIOC_AFRH_AFSEL10  ---------------------------------
// SVD Line: 8914

//  <item> SFDITEM_FIELD__GPIOC_AFRH_AFSEL10
//    <name> AFSEL10 </name>
//    <rw> 
//    <i> [Bits 11..8] RW (@ 0x50000824) Alternate function selection for port x  bit y (y = 8..15) </i>
//    <edit> 
//      <loc> ( (unsigned char)((GPIOC_AFRH >> 8) & 0xF), ((GPIOC_AFRH = (GPIOC_AFRH & ~(0xFUL << 8 )) | ((unsigned long)(Gui_u8:GuiVal & 0xF) << 8 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ------------------------------  Field Item: GPIOC_AFRH_AFSEL9  ---------------------------------
// SVD Line: 8921

//  <item> SFDITEM_FIELD__GPIOC_AFRH_AFSEL9
//    <name> AFSEL9 </name>
//    <rw> 
//    <i> [Bits 7..4] RW (@ 0x50000824) Alternate function selection for port x  bit y (y = 8..15) </i>
//    <edit> 
//      <loc> ( (unsigned char)((GPIOC_AFRH >> 4) & 0xF), ((GPIOC_AFRH = (GPIOC_AFRH & ~(0xFUL << 4 )) | ((unsigned long)(Gui_u8:GuiVal & 0xF) << 4 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ------------------------------  Field Item: GPIOC_AFRH_AFSEL8  ---------------------------------
// SVD Line: 8928

//  <item> SFDITEM_FIELD__GPIOC_AFRH_AFSEL8
//    <name> AFSEL8 </name>
//    <rw> 
//    <i> [Bits 3..0] RW (@ 0x50000824) Alternate function selection for port x  bit y (y = 8..15) </i>
//    <edit> 
//      <loc> ( (unsigned char)((GPIOC_AFRH >> 0) & 0xF), ((GPIOC_AFRH = (GPIOC_AFRH & ~(0xFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -------------------------------  Register RTree: GPIOC_AFRH  -----------------------------------
// SVD Line: 8869

//  <rtree> SFDITEM_REG__GPIOC_AFRH
//    <name> AFRH </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x50000824) GPIO alternate function high  register </i>
//    <loc> ( (unsigned int)((GPIOC_AFRH >> 0) & 0xFFFFFFFF), ((GPIOC_AFRH = (GPIOC_AFRH & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__GPIOC_AFRH_AFSEL15 </item>
//    <item> SFDITEM_FIELD__GPIOC_AFRH_AFSEL14 </item>
//    <item> SFDITEM_FIELD__GPIOC_AFRH_AFSEL13 </item>
//    <item> SFDITEM_FIELD__GPIOC_AFRH_AFSEL12 </item>
//    <item> SFDITEM_FIELD__GPIOC_AFRH_AFSEL11 </item>
//    <item> SFDITEM_FIELD__GPIOC_AFRH_AFSEL10 </item>
//    <item> SFDITEM_FIELD__GPIOC_AFRH_AFSEL9 </item>
//    <item> SFDITEM_FIELD__GPIOC_AFRH_AFSEL8 </item>
//  </rtree>
//  


// ----------------------------  Register Item Address: GPIOC_BRR  --------------------------------
// SVD Line: 8937

unsigned int GPIOC_BRR __AT (0x50000828);



// --------------------------------  Field Item: GPIOC_BRR_BR0  -----------------------------------
// SVD Line: 8946

//  <item> SFDITEM_FIELD__GPIOC_BRR_BR0
//    <name> BR0 </name>
//    <w> 
//    <i> [Bit 0] WO (@ 0x50000828) Port Reset bit </i>
//    <check> 
//      <loc> ( (unsigned int) GPIOC_BRR ) </loc>
//      <o.0..0> BR0
//    </check>
//  </item>
//  


// --------------------------------  Field Item: GPIOC_BRR_BR1  -----------------------------------
// SVD Line: 8952

//  <item> SFDITEM_FIELD__GPIOC_BRR_BR1
//    <name> BR1 </name>
//    <w> 
//    <i> [Bit 1] WO (@ 0x50000828) Port Reset bit </i>
//    <check> 
//      <loc> ( (unsigned int) GPIOC_BRR ) </loc>
//      <o.1..1> BR1
//    </check>
//  </item>
//  


// --------------------------------  Field Item: GPIOC_BRR_BR2  -----------------------------------
// SVD Line: 8958

//  <item> SFDITEM_FIELD__GPIOC_BRR_BR2
//    <name> BR2 </name>
//    <w> 
//    <i> [Bit 2] WO (@ 0x50000828) Port Reset bit </i>
//    <check> 
//      <loc> ( (unsigned int) GPIOC_BRR ) </loc>
//      <o.2..2> BR2
//    </check>
//  </item>
//  


// --------------------------------  Field Item: GPIOC_BRR_BR3  -----------------------------------
// SVD Line: 8964

//  <item> SFDITEM_FIELD__GPIOC_BRR_BR3
//    <name> BR3 </name>
//    <w> 
//    <i> [Bit 3] WO (@ 0x50000828) Port Reset bit </i>
//    <check> 
//      <loc> ( (unsigned int) GPIOC_BRR ) </loc>
//      <o.3..3> BR3
//    </check>
//  </item>
//  


// --------------------------------  Field Item: GPIOC_BRR_BR4  -----------------------------------
// SVD Line: 8970

//  <item> SFDITEM_FIELD__GPIOC_BRR_BR4
//    <name> BR4 </name>
//    <w> 
//    <i> [Bit 4] WO (@ 0x50000828) Port Reset bit </i>
//    <check> 
//      <loc> ( (unsigned int) GPIOC_BRR ) </loc>
//      <o.4..4> BR4
//    </check>
//  </item>
//  


// --------------------------------  Field Item: GPIOC_BRR_BR5  -----------------------------------
// SVD Line: 8976

//  <item> SFDITEM_FIELD__GPIOC_BRR_BR5
//    <name> BR5 </name>
//    <w> 
//    <i> [Bit 5] WO (@ 0x50000828) Port Reset bit </i>
//    <check> 
//      <loc> ( (unsigned int) GPIOC_BRR ) </loc>
//      <o.5..5> BR5
//    </check>
//  </item>
//  


// --------------------------------  Field Item: GPIOC_BRR_BR6  -----------------------------------
// SVD Line: 8982

//  <item> SFDITEM_FIELD__GPIOC_BRR_BR6
//    <name> BR6 </name>
//    <w> 
//    <i> [Bit 6] WO (@ 0x50000828) Port Reset bit </i>
//    <check> 
//      <loc> ( (unsigned int) GPIOC_BRR ) </loc>
//      <o.6..6> BR6
//    </check>
//  </item>
//  


// --------------------------------  Field Item: GPIOC_BRR_BR7  -----------------------------------
// SVD Line: 8988

//  <item> SFDITEM_FIELD__GPIOC_BRR_BR7
//    <name> BR7 </name>
//    <w> 
//    <i> [Bit 7] WO (@ 0x50000828) Port Reset bit </i>
//    <check> 
//      <loc> ( (unsigned int) GPIOC_BRR ) </loc>
//      <o.7..7> BR7
//    </check>
//  </item>
//  


// --------------------------------  Field Item: GPIOC_BRR_BR8  -----------------------------------
// SVD Line: 8994

//  <item> SFDITEM_FIELD__GPIOC_BRR_BR8
//    <name> BR8 </name>
//    <w> 
//    <i> [Bit 8] WO (@ 0x50000828) Port Reset bit </i>
//    <check> 
//      <loc> ( (unsigned int) GPIOC_BRR ) </loc>
//      <o.8..8> BR8
//    </check>
//  </item>
//  


// --------------------------------  Field Item: GPIOC_BRR_BR9  -----------------------------------
// SVD Line: 9000

//  <item> SFDITEM_FIELD__GPIOC_BRR_BR9
//    <name> BR9 </name>
//    <w> 
//    <i> [Bit 9] WO (@ 0x50000828) Port Reset bit </i>
//    <check> 
//      <loc> ( (unsigned int) GPIOC_BRR ) </loc>
//      <o.9..9> BR9
//    </check>
//  </item>
//  


// -------------------------------  Field Item: GPIOC_BRR_BR10  -----------------------------------
// SVD Line: 9006

//  <item> SFDITEM_FIELD__GPIOC_BRR_BR10
//    <name> BR10 </name>
//    <w> 
//    <i> [Bit 10] WO (@ 0x50000828) Port Reset bit </i>
//    <check> 
//      <loc> ( (unsigned int) GPIOC_BRR ) </loc>
//      <o.10..10> BR10
//    </check>
//  </item>
//  


// -------------------------------  Field Item: GPIOC_BRR_BR11  -----------------------------------
// SVD Line: 9012

//  <item> SFDITEM_FIELD__GPIOC_BRR_BR11
//    <name> BR11 </name>
//    <w> 
//    <i> [Bit 11] WO (@ 0x50000828) Port Reset bit </i>
//    <check> 
//      <loc> ( (unsigned int) GPIOC_BRR ) </loc>
//      <o.11..11> BR11
//    </check>
//  </item>
//  


// -------------------------------  Field Item: GPIOC_BRR_BR12  -----------------------------------
// SVD Line: 9018

//  <item> SFDITEM_FIELD__GPIOC_BRR_BR12
//    <name> BR12 </name>
//    <w> 
//    <i> [Bit 12] WO (@ 0x50000828) Port Reset bit </i>
//    <check> 
//      <loc> ( (unsigned int) GPIOC_BRR ) </loc>
//      <o.12..12> BR12
//    </check>
//  </item>
//  


// -------------------------------  Field Item: GPIOC_BRR_BR13  -----------------------------------
// SVD Line: 9024

//  <item> SFDITEM_FIELD__GPIOC_BRR_BR13
//    <name> BR13 </name>
//    <w> 
//    <i> [Bit 13] WO (@ 0x50000828) Port Reset bit </i>
//    <check> 
//      <loc> ( (unsigned int) GPIOC_BRR ) </loc>
//      <o.13..13> BR13
//    </check>
//  </item>
//  


// -------------------------------  Field Item: GPIOC_BRR_BR14  -----------------------------------
// SVD Line: 9030

//  <item> SFDITEM_FIELD__GPIOC_BRR_BR14
//    <name> BR14 </name>
//    <w> 
//    <i> [Bit 14] WO (@ 0x50000828) Port Reset bit </i>
//    <check> 
//      <loc> ( (unsigned int) GPIOC_BRR ) </loc>
//      <o.14..14> BR14
//    </check>
//  </item>
//  


// -------------------------------  Field Item: GPIOC_BRR_BR15  -----------------------------------
// SVD Line: 9036

//  <item> SFDITEM_FIELD__GPIOC_BRR_BR15
//    <name> BR15 </name>
//    <w> 
//    <i> [Bit 15] WO (@ 0x50000828) Port Reset bit </i>
//    <check> 
//      <loc> ( (unsigned int) GPIOC_BRR ) </loc>
//      <o.15..15> BR15
//    </check>
//  </item>
//  


// --------------------------------  Register RTree: GPIOC_BRR  -----------------------------------
// SVD Line: 8937

//  <rtree> SFDITEM_REG__GPIOC_BRR
//    <name> BRR </name>
//    <w> 
//    <i> [Bits 31..0] WO (@ 0x50000828) port bit reset register </i>
//    <loc> ( (unsigned int)((GPIOC_BRR >> 0) & 0xFFFFFFFF), ((GPIOC_BRR = (GPIOC_BRR & ~(0xFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__GPIOC_BRR_BR0 </item>
//    <item> SFDITEM_FIELD__GPIOC_BRR_BR1 </item>
//    <item> SFDITEM_FIELD__GPIOC_BRR_BR2 </item>
//    <item> SFDITEM_FIELD__GPIOC_BRR_BR3 </item>
//    <item> SFDITEM_FIELD__GPIOC_BRR_BR4 </item>
//    <item> SFDITEM_FIELD__GPIOC_BRR_BR5 </item>
//    <item> SFDITEM_FIELD__GPIOC_BRR_BR6 </item>
//    <item> SFDITEM_FIELD__GPIOC_BRR_BR7 </item>
//    <item> SFDITEM_FIELD__GPIOC_BRR_BR8 </item>
//    <item> SFDITEM_FIELD__GPIOC_BRR_BR9 </item>
//    <item> SFDITEM_FIELD__GPIOC_BRR_BR10 </item>
//    <item> SFDITEM_FIELD__GPIOC_BRR_BR11 </item>
//    <item> SFDITEM_FIELD__GPIOC_BRR_BR12 </item>
//    <item> SFDITEM_FIELD__GPIOC_BRR_BR13 </item>
//    <item> SFDITEM_FIELD__GPIOC_BRR_BR14 </item>
//    <item> SFDITEM_FIELD__GPIOC_BRR_BR15 </item>
//  </rtree>
//  


// ---------------------------------  Peripheral View: GPIOC  -------------------------------------
// SVD Line: 9046

//  <view> GPIOC
//    <name> GPIOC </name>
//    <item> SFDITEM_REG__GPIOC_MODER </item>
//    <item> SFDITEM_REG__GPIOC_OTYPER </item>
//    <item> SFDITEM_REG__GPIOC_OSPEEDR </item>
//    <item> SFDITEM_REG__GPIOC_PUPDR </item>
//    <item> SFDITEM_REG__GPIOC_IDR </item>
//    <item> SFDITEM_REG__GPIOC_ODR </item>
//    <item> SFDITEM_REG__GPIOC_BSRR </item>
//    <item> SFDITEM_REG__GPIOC_LCKR </item>
//    <item> SFDITEM_REG__GPIOC_AFRL </item>
//    <item> SFDITEM_REG__GPIOC_AFRH </item>
//    <item> SFDITEM_REG__GPIOC_BRR </item>
//  </view>
//  


// ---------------------------  Register Item Address: GPIOD_MODER  -------------------------------
// SVD Line: 7694

unsigned int GPIOD_MODER __AT (0x50000C00);



// -----------------------------  Field Item: GPIOD_MODER_MODER15  --------------------------------
// SVD Line: 7703

//  <item> SFDITEM_FIELD__GPIOD_MODER_MODER15
//    <name> MODER15 </name>
//    <rw> 
//    <i> [Bits 31..30] RW (@ 0x50000C00) Port x configuration bits (y =  0..15) </i>
//    <edit> 
//      <loc> ( (unsigned char)((GPIOD_MODER >> 30) & 0x3), ((GPIOD_MODER = (GPIOD_MODER & ~(0x3UL << 30 )) | ((unsigned long)(Gui_u8:GuiVal & 0x3) << 30 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -----------------------------  Field Item: GPIOD_MODER_MODER14  --------------------------------
// SVD Line: 7710

//  <item> SFDITEM_FIELD__GPIOD_MODER_MODER14
//    <name> MODER14 </name>
//    <rw> 
//    <i> [Bits 29..28] RW (@ 0x50000C00) Port x configuration bits (y =  0..15) </i>
//    <edit> 
//      <loc> ( (unsigned char)((GPIOD_MODER >> 28) & 0x3), ((GPIOD_MODER = (GPIOD_MODER & ~(0x3UL << 28 )) | ((unsigned long)(Gui_u8:GuiVal & 0x3) << 28 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -----------------------------  Field Item: GPIOD_MODER_MODER13  --------------------------------
// SVD Line: 7717

//  <item> SFDITEM_FIELD__GPIOD_MODER_MODER13
//    <name> MODER13 </name>
//    <rw> 
//    <i> [Bits 27..26] RW (@ 0x50000C00) Port x configuration bits (y =  0..15) </i>
//    <edit> 
//      <loc> ( (unsigned char)((GPIOD_MODER >> 26) & 0x3), ((GPIOD_MODER = (GPIOD_MODER & ~(0x3UL << 26 )) | ((unsigned long)(Gui_u8:GuiVal & 0x3) << 26 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -----------------------------  Field Item: GPIOD_MODER_MODER12  --------------------------------
// SVD Line: 7724

//  <item> SFDITEM_FIELD__GPIOD_MODER_MODER12
//    <name> MODER12 </name>
//    <rw> 
//    <i> [Bits 25..24] RW (@ 0x50000C00) Port x configuration bits (y =  0..15) </i>
//    <edit> 
//      <loc> ( (unsigned char)((GPIOD_MODER >> 24) & 0x3), ((GPIOD_MODER = (GPIOD_MODER & ~(0x3UL << 24 )) | ((unsigned long)(Gui_u8:GuiVal & 0x3) << 24 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -----------------------------  Field Item: GPIOD_MODER_MODER11  --------------------------------
// SVD Line: 7731

//  <item> SFDITEM_FIELD__GPIOD_MODER_MODER11
//    <name> MODER11 </name>
//    <rw> 
//    <i> [Bits 23..22] RW (@ 0x50000C00) Port x configuration bits (y =  0..15) </i>
//    <edit> 
//      <loc> ( (unsigned char)((GPIOD_MODER >> 22) & 0x3), ((GPIOD_MODER = (GPIOD_MODER & ~(0x3UL << 22 )) | ((unsigned long)(Gui_u8:GuiVal & 0x3) << 22 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -----------------------------  Field Item: GPIOD_MODER_MODER10  --------------------------------
// SVD Line: 7738

//  <item> SFDITEM_FIELD__GPIOD_MODER_MODER10
//    <name> MODER10 </name>
//    <rw> 
//    <i> [Bits 21..20] RW (@ 0x50000C00) Port x configuration bits (y =  0..15) </i>
//    <edit> 
//      <loc> ( (unsigned char)((GPIOD_MODER >> 20) & 0x3), ((GPIOD_MODER = (GPIOD_MODER & ~(0x3UL << 20 )) | ((unsigned long)(Gui_u8:GuiVal & 0x3) << 20 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -----------------------------  Field Item: GPIOD_MODER_MODER9  ---------------------------------
// SVD Line: 7745

//  <item> SFDITEM_FIELD__GPIOD_MODER_MODER9
//    <name> MODER9 </name>
//    <rw> 
//    <i> [Bits 19..18] RW (@ 0x50000C00) Port x configuration bits (y =  0..15) </i>
//    <edit> 
//      <loc> ( (unsigned char)((GPIOD_MODER >> 18) & 0x3), ((GPIOD_MODER = (GPIOD_MODER & ~(0x3UL << 18 )) | ((unsigned long)(Gui_u8:GuiVal & 0x3) << 18 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -----------------------------  Field Item: GPIOD_MODER_MODER8  ---------------------------------
// SVD Line: 7752

//  <item> SFDITEM_FIELD__GPIOD_MODER_MODER8
//    <name> MODER8 </name>
//    <rw> 
//    <i> [Bits 17..16] RW (@ 0x50000C00) Port x configuration bits (y =  0..15) </i>
//    <edit> 
//      <loc> ( (unsigned char)((GPIOD_MODER >> 16) & 0x3), ((GPIOD_MODER = (GPIOD_MODER & ~(0x3UL << 16 )) | ((unsigned long)(Gui_u8:GuiVal & 0x3) << 16 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -----------------------------  Field Item: GPIOD_MODER_MODER7  ---------------------------------
// SVD Line: 7759

//  <item> SFDITEM_FIELD__GPIOD_MODER_MODER7
//    <name> MODER7 </name>
//    <rw> 
//    <i> [Bits 15..14] RW (@ 0x50000C00) Port x configuration bits (y =  0..15) </i>
//    <edit> 
//      <loc> ( (unsigned char)((GPIOD_MODER >> 14) & 0x3), ((GPIOD_MODER = (GPIOD_MODER & ~(0x3UL << 14 )) | ((unsigned long)(Gui_u8:GuiVal & 0x3) << 14 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -----------------------------  Field Item: GPIOD_MODER_MODER6  ---------------------------------
// SVD Line: 7766

//  <item> SFDITEM_FIELD__GPIOD_MODER_MODER6
//    <name> MODER6 </name>
//    <rw> 
//    <i> [Bits 13..12] RW (@ 0x50000C00) Port x configuration bits (y =  0..15) </i>
//    <edit> 
//      <loc> ( (unsigned char)((GPIOD_MODER >> 12) & 0x3), ((GPIOD_MODER = (GPIOD_MODER & ~(0x3UL << 12 )) | ((unsigned long)(Gui_u8:GuiVal & 0x3) << 12 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -----------------------------  Field Item: GPIOD_MODER_MODER5  ---------------------------------
// SVD Line: 7773

//  <item> SFDITEM_FIELD__GPIOD_MODER_MODER5
//    <name> MODER5 </name>
//    <rw> 
//    <i> [Bits 11..10] RW (@ 0x50000C00) Port x configuration bits (y =  0..15) </i>
//    <edit> 
//      <loc> ( (unsigned char)((GPIOD_MODER >> 10) & 0x3), ((GPIOD_MODER = (GPIOD_MODER & ~(0x3UL << 10 )) | ((unsigned long)(Gui_u8:GuiVal & 0x3) << 10 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -----------------------------  Field Item: GPIOD_MODER_MODER4  ---------------------------------
// SVD Line: 7780

//  <item> SFDITEM_FIELD__GPIOD_MODER_MODER4
//    <name> MODER4 </name>
//    <rw> 
//    <i> [Bits 9..8] RW (@ 0x50000C00) Port x configuration bits (y =  0..15) </i>
//    <edit> 
//      <loc> ( (unsigned char)((GPIOD_MODER >> 8) & 0x3), ((GPIOD_MODER = (GPIOD_MODER & ~(0x3UL << 8 )) | ((unsigned long)(Gui_u8:GuiVal & 0x3) << 8 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -----------------------------  Field Item: GPIOD_MODER_MODER3  ---------------------------------
// SVD Line: 7787

//  <item> SFDITEM_FIELD__GPIOD_MODER_MODER3
//    <name> MODER3 </name>
//    <rw> 
//    <i> [Bits 7..6] RW (@ 0x50000C00) Port x configuration bits (y =  0..15) </i>
//    <edit> 
//      <loc> ( (unsigned char)((GPIOD_MODER >> 6) & 0x3), ((GPIOD_MODER = (GPIOD_MODER & ~(0x3UL << 6 )) | ((unsigned long)(Gui_u8:GuiVal & 0x3) << 6 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -----------------------------  Field Item: GPIOD_MODER_MODER2  ---------------------------------
// SVD Line: 7794

//  <item> SFDITEM_FIELD__GPIOD_MODER_MODER2
//    <name> MODER2 </name>
//    <rw> 
//    <i> [Bits 5..4] RW (@ 0x50000C00) Port x configuration bits (y =  0..15) </i>
//    <edit> 
//      <loc> ( (unsigned char)((GPIOD_MODER >> 4) & 0x3), ((GPIOD_MODER = (GPIOD_MODER & ~(0x3UL << 4 )) | ((unsigned long)(Gui_u8:GuiVal & 0x3) << 4 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -----------------------------  Field Item: GPIOD_MODER_MODER1  ---------------------------------
// SVD Line: 7801

//  <item> SFDITEM_FIELD__GPIOD_MODER_MODER1
//    <name> MODER1 </name>
//    <rw> 
//    <i> [Bits 3..2] RW (@ 0x50000C00) Port x configuration bits (y =  0..15) </i>
//    <edit> 
//      <loc> ( (unsigned char)((GPIOD_MODER >> 2) & 0x3), ((GPIOD_MODER = (GPIOD_MODER & ~(0x3UL << 2 )) | ((unsigned long)(Gui_u8:GuiVal & 0x3) << 2 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -----------------------------  Field Item: GPIOD_MODER_MODER0  ---------------------------------
// SVD Line: 7808

//  <item> SFDITEM_FIELD__GPIOD_MODER_MODER0
//    <name> MODER0 </name>
//    <rw> 
//    <i> [Bits 1..0] RW (@ 0x50000C00) Port x configuration bits (y =  0..15) </i>
//    <edit> 
//      <loc> ( (unsigned char)((GPIOD_MODER >> 0) & 0x3), ((GPIOD_MODER = (GPIOD_MODER & ~(0x3UL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0x3) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -------------------------------  Register RTree: GPIOD_MODER  ----------------------------------
// SVD Line: 7694

//  <rtree> SFDITEM_REG__GPIOD_MODER
//    <name> MODER </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x50000C00) GPIO port mode register </i>
//    <loc> ( (unsigned int)((GPIOD_MODER >> 0) & 0xFFFFFFFF), ((GPIOD_MODER = (GPIOD_MODER & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__GPIOD_MODER_MODER15 </item>
//    <item> SFDITEM_FIELD__GPIOD_MODER_MODER14 </item>
//    <item> SFDITEM_FIELD__GPIOD_MODER_MODER13 </item>
//    <item> SFDITEM_FIELD__GPIOD_MODER_MODER12 </item>
//    <item> SFDITEM_FIELD__GPIOD_MODER_MODER11 </item>
//    <item> SFDITEM_FIELD__GPIOD_MODER_MODER10 </item>
//    <item> SFDITEM_FIELD__GPIOD_MODER_MODER9 </item>
//    <item> SFDITEM_FIELD__GPIOD_MODER_MODER8 </item>
//    <item> SFDITEM_FIELD__GPIOD_MODER_MODER7 </item>
//    <item> SFDITEM_FIELD__GPIOD_MODER_MODER6 </item>
//    <item> SFDITEM_FIELD__GPIOD_MODER_MODER5 </item>
//    <item> SFDITEM_FIELD__GPIOD_MODER_MODER4 </item>
//    <item> SFDITEM_FIELD__GPIOD_MODER_MODER3 </item>
//    <item> SFDITEM_FIELD__GPIOD_MODER_MODER2 </item>
//    <item> SFDITEM_FIELD__GPIOD_MODER_MODER1 </item>
//    <item> SFDITEM_FIELD__GPIOD_MODER_MODER0 </item>
//  </rtree>
//  


// ---------------------------  Register Item Address: GPIOD_OTYPER  ------------------------------
// SVD Line: 7817

unsigned int GPIOD_OTYPER __AT (0x50000C04);



// ------------------------------  Field Item: GPIOD_OTYPER_OT15  ---------------------------------
// SVD Line: 7826

//  <item> SFDITEM_FIELD__GPIOD_OTYPER_OT15
//    <name> OT15 </name>
//    <rw> 
//    <i> [Bit 15] RW (@ 0x50000C04) Port x configuration bits (y =  0..15) </i>
//    <check> 
//      <loc> ( (unsigned int) GPIOD_OTYPER ) </loc>
//      <o.15..15> OT15
//    </check>
//  </item>
//  


// ------------------------------  Field Item: GPIOD_OTYPER_OT14  ---------------------------------
// SVD Line: 7833

//  <item> SFDITEM_FIELD__GPIOD_OTYPER_OT14
//    <name> OT14 </name>
//    <rw> 
//    <i> [Bit 14] RW (@ 0x50000C04) Port x configuration bits (y =  0..15) </i>
//    <check> 
//      <loc> ( (unsigned int) GPIOD_OTYPER ) </loc>
//      <o.14..14> OT14
//    </check>
//  </item>
//  


// ------------------------------  Field Item: GPIOD_OTYPER_OT13  ---------------------------------
// SVD Line: 7840

//  <item> SFDITEM_FIELD__GPIOD_OTYPER_OT13
//    <name> OT13 </name>
//    <rw> 
//    <i> [Bit 13] RW (@ 0x50000C04) Port x configuration bits (y =  0..15) </i>
//    <check> 
//      <loc> ( (unsigned int) GPIOD_OTYPER ) </loc>
//      <o.13..13> OT13
//    </check>
//  </item>
//  


// ------------------------------  Field Item: GPIOD_OTYPER_OT12  ---------------------------------
// SVD Line: 7847

//  <item> SFDITEM_FIELD__GPIOD_OTYPER_OT12
//    <name> OT12 </name>
//    <rw> 
//    <i> [Bit 12] RW (@ 0x50000C04) Port x configuration bits (y =  0..15) </i>
//    <check> 
//      <loc> ( (unsigned int) GPIOD_OTYPER ) </loc>
//      <o.12..12> OT12
//    </check>
//  </item>
//  


// ------------------------------  Field Item: GPIOD_OTYPER_OT11  ---------------------------------
// SVD Line: 7854

//  <item> SFDITEM_FIELD__GPIOD_OTYPER_OT11
//    <name> OT11 </name>
//    <rw> 
//    <i> [Bit 11] RW (@ 0x50000C04) Port x configuration bits (y =  0..15) </i>
//    <check> 
//      <loc> ( (unsigned int) GPIOD_OTYPER ) </loc>
//      <o.11..11> OT11
//    </check>
//  </item>
//  


// ------------------------------  Field Item: GPIOD_OTYPER_OT10  ---------------------------------
// SVD Line: 7861

//  <item> SFDITEM_FIELD__GPIOD_OTYPER_OT10
//    <name> OT10 </name>
//    <rw> 
//    <i> [Bit 10] RW (@ 0x50000C04) Port x configuration bits (y =  0..15) </i>
//    <check> 
//      <loc> ( (unsigned int) GPIOD_OTYPER ) </loc>
//      <o.10..10> OT10
//    </check>
//  </item>
//  


// ------------------------------  Field Item: GPIOD_OTYPER_OT9  ----------------------------------
// SVD Line: 7868

//  <item> SFDITEM_FIELD__GPIOD_OTYPER_OT9
//    <name> OT9 </name>
//    <rw> 
//    <i> [Bit 9] RW (@ 0x50000C04) Port x configuration bits (y =  0..15) </i>
//    <check> 
//      <loc> ( (unsigned int) GPIOD_OTYPER ) </loc>
//      <o.9..9> OT9
//    </check>
//  </item>
//  


// ------------------------------  Field Item: GPIOD_OTYPER_OT8  ----------------------------------
// SVD Line: 7875

//  <item> SFDITEM_FIELD__GPIOD_OTYPER_OT8
//    <name> OT8 </name>
//    <rw> 
//    <i> [Bit 8] RW (@ 0x50000C04) Port x configuration bits (y =  0..15) </i>
//    <check> 
//      <loc> ( (unsigned int) GPIOD_OTYPER ) </loc>
//      <o.8..8> OT8
//    </check>
//  </item>
//  


// ------------------------------  Field Item: GPIOD_OTYPER_OT7  ----------------------------------
// SVD Line: 7882

//  <item> SFDITEM_FIELD__GPIOD_OTYPER_OT7
//    <name> OT7 </name>
//    <rw> 
//    <i> [Bit 7] RW (@ 0x50000C04) Port x configuration bits (y =  0..15) </i>
//    <check> 
//      <loc> ( (unsigned int) GPIOD_OTYPER ) </loc>
//      <o.7..7> OT7
//    </check>
//  </item>
//  


// ------------------------------  Field Item: GPIOD_OTYPER_OT6  ----------------------------------
// SVD Line: 7889

//  <item> SFDITEM_FIELD__GPIOD_OTYPER_OT6
//    <name> OT6 </name>
//    <rw> 
//    <i> [Bit 6] RW (@ 0x50000C04) Port x configuration bits (y =  0..15) </i>
//    <check> 
//      <loc> ( (unsigned int) GPIOD_OTYPER ) </loc>
//      <o.6..6> OT6
//    </check>
//  </item>
//  


// ------------------------------  Field Item: GPIOD_OTYPER_OT5  ----------------------------------
// SVD Line: 7896

//  <item> SFDITEM_FIELD__GPIOD_OTYPER_OT5
//    <name> OT5 </name>
//    <rw> 
//    <i> [Bit 5] RW (@ 0x50000C04) Port x configuration bits (y =  0..15) </i>
//    <check> 
//      <loc> ( (unsigned int) GPIOD_OTYPER ) </loc>
//      <o.5..5> OT5
//    </check>
//  </item>
//  


// ------------------------------  Field Item: GPIOD_OTYPER_OT4  ----------------------------------
// SVD Line: 7903

//  <item> SFDITEM_FIELD__GPIOD_OTYPER_OT4
//    <name> OT4 </name>
//    <rw> 
//    <i> [Bit 4] RW (@ 0x50000C04) Port x configuration bits (y =  0..15) </i>
//    <check> 
//      <loc> ( (unsigned int) GPIOD_OTYPER ) </loc>
//      <o.4..4> OT4
//    </check>
//  </item>
//  


// ------------------------------  Field Item: GPIOD_OTYPER_OT3  ----------------------------------
// SVD Line: 7910

//  <item> SFDITEM_FIELD__GPIOD_OTYPER_OT3
//    <name> OT3 </name>
//    <rw> 
//    <i> [Bit 3] RW (@ 0x50000C04) Port x configuration bits (y =  0..15) </i>
//    <check> 
//      <loc> ( (unsigned int) GPIOD_OTYPER ) </loc>
//      <o.3..3> OT3
//    </check>
//  </item>
//  


// ------------------------------  Field Item: GPIOD_OTYPER_OT2  ----------------------------------
// SVD Line: 7917

//  <item> SFDITEM_FIELD__GPIOD_OTYPER_OT2
//    <name> OT2 </name>
//    <rw> 
//    <i> [Bit 2] RW (@ 0x50000C04) Port x configuration bits (y =  0..15) </i>
//    <check> 
//      <loc> ( (unsigned int) GPIOD_OTYPER ) </loc>
//      <o.2..2> OT2
//    </check>
//  </item>
//  


// ------------------------------  Field Item: GPIOD_OTYPER_OT1  ----------------------------------
// SVD Line: 7924

//  <item> SFDITEM_FIELD__GPIOD_OTYPER_OT1
//    <name> OT1 </name>
//    <rw> 
//    <i> [Bit 1] RW (@ 0x50000C04) Port x configuration bits (y =  0..15) </i>
//    <check> 
//      <loc> ( (unsigned int) GPIOD_OTYPER ) </loc>
//      <o.1..1> OT1
//    </check>
//  </item>
//  


// ------------------------------  Field Item: GPIOD_OTYPER_OT0  ----------------------------------
// SVD Line: 7931

//  <item> SFDITEM_FIELD__GPIOD_OTYPER_OT0
//    <name> OT0 </name>
//    <rw> 
//    <i> [Bit 0] RW (@ 0x50000C04) Port x configuration bits (y =  0..15) </i>
//    <check> 
//      <loc> ( (unsigned int) GPIOD_OTYPER ) </loc>
//      <o.0..0> OT0
//    </check>
//  </item>
//  


// ------------------------------  Register RTree: GPIOD_OTYPER  ----------------------------------
// SVD Line: 7817

//  <rtree> SFDITEM_REG__GPIOD_OTYPER
//    <name> OTYPER </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x50000C04) GPIO port output type register </i>
//    <loc> ( (unsigned int)((GPIOD_OTYPER >> 0) & 0xFFFFFFFF), ((GPIOD_OTYPER = (GPIOD_OTYPER & ~(0xFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__GPIOD_OTYPER_OT15 </item>
//    <item> SFDITEM_FIELD__GPIOD_OTYPER_OT14 </item>
//    <item> SFDITEM_FIELD__GPIOD_OTYPER_OT13 </item>
//    <item> SFDITEM_FIELD__GPIOD_OTYPER_OT12 </item>
//    <item> SFDITEM_FIELD__GPIOD_OTYPER_OT11 </item>
//    <item> SFDITEM_FIELD__GPIOD_OTYPER_OT10 </item>
//    <item> SFDITEM_FIELD__GPIOD_OTYPER_OT9 </item>
//    <item> SFDITEM_FIELD__GPIOD_OTYPER_OT8 </item>
//    <item> SFDITEM_FIELD__GPIOD_OTYPER_OT7 </item>
//    <item> SFDITEM_FIELD__GPIOD_OTYPER_OT6 </item>
//    <item> SFDITEM_FIELD__GPIOD_OTYPER_OT5 </item>
//    <item> SFDITEM_FIELD__GPIOD_OTYPER_OT4 </item>
//    <item> SFDITEM_FIELD__GPIOD_OTYPER_OT3 </item>
//    <item> SFDITEM_FIELD__GPIOD_OTYPER_OT2 </item>
//    <item> SFDITEM_FIELD__GPIOD_OTYPER_OT1 </item>
//    <item> SFDITEM_FIELD__GPIOD_OTYPER_OT0 </item>
//  </rtree>
//  


// --------------------------  Register Item Address: GPIOD_OSPEEDR  ------------------------------
// SVD Line: 7940

unsigned int GPIOD_OSPEEDR __AT (0x50000C08);



// ---------------------------  Field Item: GPIOD_OSPEEDR_OSPEEDR15  ------------------------------
// SVD Line: 7950

//  <item> SFDITEM_FIELD__GPIOD_OSPEEDR_OSPEEDR15
//    <name> OSPEEDR15 </name>
//    <rw> 
//    <i> [Bits 31..30] RW (@ 0x50000C08) Port x configuration bits (y =  0..15) </i>
//    <edit> 
//      <loc> ( (unsigned char)((GPIOD_OSPEEDR >> 30) & 0x3), ((GPIOD_OSPEEDR = (GPIOD_OSPEEDR & ~(0x3UL << 30 )) | ((unsigned long)(Gui_u8:GuiVal & 0x3) << 30 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ---------------------------  Field Item: GPIOD_OSPEEDR_OSPEEDR14  ------------------------------
// SVD Line: 7957

//  <item> SFDITEM_FIELD__GPIOD_OSPEEDR_OSPEEDR14
//    <name> OSPEEDR14 </name>
//    <rw> 
//    <i> [Bits 29..28] RW (@ 0x50000C08) Port x configuration bits (y =  0..15) </i>
//    <edit> 
//      <loc> ( (unsigned char)((GPIOD_OSPEEDR >> 28) & 0x3), ((GPIOD_OSPEEDR = (GPIOD_OSPEEDR & ~(0x3UL << 28 )) | ((unsigned long)(Gui_u8:GuiVal & 0x3) << 28 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ---------------------------  Field Item: GPIOD_OSPEEDR_OSPEEDR13  ------------------------------
// SVD Line: 7964

//  <item> SFDITEM_FIELD__GPIOD_OSPEEDR_OSPEEDR13
//    <name> OSPEEDR13 </name>
//    <rw> 
//    <i> [Bits 27..26] RW (@ 0x50000C08) Port x configuration bits (y =  0..15) </i>
//    <edit> 
//      <loc> ( (unsigned char)((GPIOD_OSPEEDR >> 26) & 0x3), ((GPIOD_OSPEEDR = (GPIOD_OSPEEDR & ~(0x3UL << 26 )) | ((unsigned long)(Gui_u8:GuiVal & 0x3) << 26 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ---------------------------  Field Item: GPIOD_OSPEEDR_OSPEEDR12  ------------------------------
// SVD Line: 7971

//  <item> SFDITEM_FIELD__GPIOD_OSPEEDR_OSPEEDR12
//    <name> OSPEEDR12 </name>
//    <rw> 
//    <i> [Bits 25..24] RW (@ 0x50000C08) Port x configuration bits (y =  0..15) </i>
//    <edit> 
//      <loc> ( (unsigned char)((GPIOD_OSPEEDR >> 24) & 0x3), ((GPIOD_OSPEEDR = (GPIOD_OSPEEDR & ~(0x3UL << 24 )) | ((unsigned long)(Gui_u8:GuiVal & 0x3) << 24 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ---------------------------  Field Item: GPIOD_OSPEEDR_OSPEEDR11  ------------------------------
// SVD Line: 7978

//  <item> SFDITEM_FIELD__GPIOD_OSPEEDR_OSPEEDR11
//    <name> OSPEEDR11 </name>
//    <rw> 
//    <i> [Bits 23..22] RW (@ 0x50000C08) Port x configuration bits (y =  0..15) </i>
//    <edit> 
//      <loc> ( (unsigned char)((GPIOD_OSPEEDR >> 22) & 0x3), ((GPIOD_OSPEEDR = (GPIOD_OSPEEDR & ~(0x3UL << 22 )) | ((unsigned long)(Gui_u8:GuiVal & 0x3) << 22 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ---------------------------  Field Item: GPIOD_OSPEEDR_OSPEEDR10  ------------------------------
// SVD Line: 7985

//  <item> SFDITEM_FIELD__GPIOD_OSPEEDR_OSPEEDR10
//    <name> OSPEEDR10 </name>
//    <rw> 
//    <i> [Bits 21..20] RW (@ 0x50000C08) Port x configuration bits (y =  0..15) </i>
//    <edit> 
//      <loc> ( (unsigned char)((GPIOD_OSPEEDR >> 20) & 0x3), ((GPIOD_OSPEEDR = (GPIOD_OSPEEDR & ~(0x3UL << 20 )) | ((unsigned long)(Gui_u8:GuiVal & 0x3) << 20 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ---------------------------  Field Item: GPIOD_OSPEEDR_OSPEEDR9  -------------------------------
// SVD Line: 7992

//  <item> SFDITEM_FIELD__GPIOD_OSPEEDR_OSPEEDR9
//    <name> OSPEEDR9 </name>
//    <rw> 
//    <i> [Bits 19..18] RW (@ 0x50000C08) Port x configuration bits (y =  0..15) </i>
//    <edit> 
//      <loc> ( (unsigned char)((GPIOD_OSPEEDR >> 18) & 0x3), ((GPIOD_OSPEEDR = (GPIOD_OSPEEDR & ~(0x3UL << 18 )) | ((unsigned long)(Gui_u8:GuiVal & 0x3) << 18 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ---------------------------  Field Item: GPIOD_OSPEEDR_OSPEEDR8  -------------------------------
// SVD Line: 7999

//  <item> SFDITEM_FIELD__GPIOD_OSPEEDR_OSPEEDR8
//    <name> OSPEEDR8 </name>
//    <rw> 
//    <i> [Bits 17..16] RW (@ 0x50000C08) Port x configuration bits (y =  0..15) </i>
//    <edit> 
//      <loc> ( (unsigned char)((GPIOD_OSPEEDR >> 16) & 0x3), ((GPIOD_OSPEEDR = (GPIOD_OSPEEDR & ~(0x3UL << 16 )) | ((unsigned long)(Gui_u8:GuiVal & 0x3) << 16 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ---------------------------  Field Item: GPIOD_OSPEEDR_OSPEEDR7  -------------------------------
// SVD Line: 8006

//  <item> SFDITEM_FIELD__GPIOD_OSPEEDR_OSPEEDR7
//    <name> OSPEEDR7 </name>
//    <rw> 
//    <i> [Bits 15..14] RW (@ 0x50000C08) Port x configuration bits (y =  0..15) </i>
//    <edit> 
//      <loc> ( (unsigned char)((GPIOD_OSPEEDR >> 14) & 0x3), ((GPIOD_OSPEEDR = (GPIOD_OSPEEDR & ~(0x3UL << 14 )) | ((unsigned long)(Gui_u8:GuiVal & 0x3) << 14 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ---------------------------  Field Item: GPIOD_OSPEEDR_OSPEEDR6  -------------------------------
// SVD Line: 8013

//  <item> SFDITEM_FIELD__GPIOD_OSPEEDR_OSPEEDR6
//    <name> OSPEEDR6 </name>
//    <rw> 
//    <i> [Bits 13..12] RW (@ 0x50000C08) Port x configuration bits (y =  0..15) </i>
//    <edit> 
//      <loc> ( (unsigned char)((GPIOD_OSPEEDR >> 12) & 0x3), ((GPIOD_OSPEEDR = (GPIOD_OSPEEDR & ~(0x3UL << 12 )) | ((unsigned long)(Gui_u8:GuiVal & 0x3) << 12 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ---------------------------  Field Item: GPIOD_OSPEEDR_OSPEEDR5  -------------------------------
// SVD Line: 8020

//  <item> SFDITEM_FIELD__GPIOD_OSPEEDR_OSPEEDR5
//    <name> OSPEEDR5 </name>
//    <rw> 
//    <i> [Bits 11..10] RW (@ 0x50000C08) Port x configuration bits (y =  0..15) </i>
//    <edit> 
//      <loc> ( (unsigned char)((GPIOD_OSPEEDR >> 10) & 0x3), ((GPIOD_OSPEEDR = (GPIOD_OSPEEDR & ~(0x3UL << 10 )) | ((unsigned long)(Gui_u8:GuiVal & 0x3) << 10 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ---------------------------  Field Item: GPIOD_OSPEEDR_OSPEEDR4  -------------------------------
// SVD Line: 8027

//  <item> SFDITEM_FIELD__GPIOD_OSPEEDR_OSPEEDR4
//    <name> OSPEEDR4 </name>
//    <rw> 
//    <i> [Bits 9..8] RW (@ 0x50000C08) Port x configuration bits (y =  0..15) </i>
//    <edit> 
//      <loc> ( (unsigned char)((GPIOD_OSPEEDR >> 8) & 0x3), ((GPIOD_OSPEEDR = (GPIOD_OSPEEDR & ~(0x3UL << 8 )) | ((unsigned long)(Gui_u8:GuiVal & 0x3) << 8 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ---------------------------  Field Item: GPIOD_OSPEEDR_OSPEEDR3  -------------------------------
// SVD Line: 8034

//  <item> SFDITEM_FIELD__GPIOD_OSPEEDR_OSPEEDR3
//    <name> OSPEEDR3 </name>
//    <rw> 
//    <i> [Bits 7..6] RW (@ 0x50000C08) Port x configuration bits (y =  0..15) </i>
//    <edit> 
//      <loc> ( (unsigned char)((GPIOD_OSPEEDR >> 6) & 0x3), ((GPIOD_OSPEEDR = (GPIOD_OSPEEDR & ~(0x3UL << 6 )) | ((unsigned long)(Gui_u8:GuiVal & 0x3) << 6 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ---------------------------  Field Item: GPIOD_OSPEEDR_OSPEEDR2  -------------------------------
// SVD Line: 8041

//  <item> SFDITEM_FIELD__GPIOD_OSPEEDR_OSPEEDR2
//    <name> OSPEEDR2 </name>
//    <rw> 
//    <i> [Bits 5..4] RW (@ 0x50000C08) Port x configuration bits (y =  0..15) </i>
//    <edit> 
//      <loc> ( (unsigned char)((GPIOD_OSPEEDR >> 4) & 0x3), ((GPIOD_OSPEEDR = (GPIOD_OSPEEDR & ~(0x3UL << 4 )) | ((unsigned long)(Gui_u8:GuiVal & 0x3) << 4 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ---------------------------  Field Item: GPIOD_OSPEEDR_OSPEEDR1  -------------------------------
// SVD Line: 8048

//  <item> SFDITEM_FIELD__GPIOD_OSPEEDR_OSPEEDR1
//    <name> OSPEEDR1 </name>
//    <rw> 
//    <i> [Bits 3..2] RW (@ 0x50000C08) Port x configuration bits (y =  0..15) </i>
//    <edit> 
//      <loc> ( (unsigned char)((GPIOD_OSPEEDR >> 2) & 0x3), ((GPIOD_OSPEEDR = (GPIOD_OSPEEDR & ~(0x3UL << 2 )) | ((unsigned long)(Gui_u8:GuiVal & 0x3) << 2 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ---------------------------  Field Item: GPIOD_OSPEEDR_OSPEEDR0  -------------------------------
// SVD Line: 8055

//  <item> SFDITEM_FIELD__GPIOD_OSPEEDR_OSPEEDR0
//    <name> OSPEEDR0 </name>
//    <rw> 
//    <i> [Bits 1..0] RW (@ 0x50000C08) Port x configuration bits (y =  0..15) </i>
//    <edit> 
//      <loc> ( (unsigned char)((GPIOD_OSPEEDR >> 0) & 0x3), ((GPIOD_OSPEEDR = (GPIOD_OSPEEDR & ~(0x3UL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0x3) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ------------------------------  Register RTree: GPIOD_OSPEEDR  ---------------------------------
// SVD Line: 7940

//  <rtree> SFDITEM_REG__GPIOD_OSPEEDR
//    <name> OSPEEDR </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x50000C08) GPIO port output speed  register </i>
//    <loc> ( (unsigned int)((GPIOD_OSPEEDR >> 0) & 0xFFFFFFFF), ((GPIOD_OSPEEDR = (GPIOD_OSPEEDR & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__GPIOD_OSPEEDR_OSPEEDR15 </item>
//    <item> SFDITEM_FIELD__GPIOD_OSPEEDR_OSPEEDR14 </item>
//    <item> SFDITEM_FIELD__GPIOD_OSPEEDR_OSPEEDR13 </item>
//    <item> SFDITEM_FIELD__GPIOD_OSPEEDR_OSPEEDR12 </item>
//    <item> SFDITEM_FIELD__GPIOD_OSPEEDR_OSPEEDR11 </item>
//    <item> SFDITEM_FIELD__GPIOD_OSPEEDR_OSPEEDR10 </item>
//    <item> SFDITEM_FIELD__GPIOD_OSPEEDR_OSPEEDR9 </item>
//    <item> SFDITEM_FIELD__GPIOD_OSPEEDR_OSPEEDR8 </item>
//    <item> SFDITEM_FIELD__GPIOD_OSPEEDR_OSPEEDR7 </item>
//    <item> SFDITEM_FIELD__GPIOD_OSPEEDR_OSPEEDR6 </item>
//    <item> SFDITEM_FIELD__GPIOD_OSPEEDR_OSPEEDR5 </item>
//    <item> SFDITEM_FIELD__GPIOD_OSPEEDR_OSPEEDR4 </item>
//    <item> SFDITEM_FIELD__GPIOD_OSPEEDR_OSPEEDR3 </item>
//    <item> SFDITEM_FIELD__GPIOD_OSPEEDR_OSPEEDR2 </item>
//    <item> SFDITEM_FIELD__GPIOD_OSPEEDR_OSPEEDR1 </item>
//    <item> SFDITEM_FIELD__GPIOD_OSPEEDR_OSPEEDR0 </item>
//  </rtree>
//  


// ---------------------------  Register Item Address: GPIOD_PUPDR  -------------------------------
// SVD Line: 8064

unsigned int GPIOD_PUPDR __AT (0x50000C0C);



// -----------------------------  Field Item: GPIOD_PUPDR_PUPDR15  --------------------------------
// SVD Line: 8074

//  <item> SFDITEM_FIELD__GPIOD_PUPDR_PUPDR15
//    <name> PUPDR15 </name>
//    <rw> 
//    <i> [Bits 31..30] RW (@ 0x50000C0C) Port x configuration bits (y =  0..15) </i>
//    <edit> 
//      <loc> ( (unsigned char)((GPIOD_PUPDR >> 30) & 0x3), ((GPIOD_PUPDR = (GPIOD_PUPDR & ~(0x3UL << 30 )) | ((unsigned long)(Gui_u8:GuiVal & 0x3) << 30 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -----------------------------  Field Item: GPIOD_PUPDR_PUPDR14  --------------------------------
// SVD Line: 8081

//  <item> SFDITEM_FIELD__GPIOD_PUPDR_PUPDR14
//    <name> PUPDR14 </name>
//    <rw> 
//    <i> [Bits 29..28] RW (@ 0x50000C0C) Port x configuration bits (y =  0..15) </i>
//    <edit> 
//      <loc> ( (unsigned char)((GPIOD_PUPDR >> 28) & 0x3), ((GPIOD_PUPDR = (GPIOD_PUPDR & ~(0x3UL << 28 )) | ((unsigned long)(Gui_u8:GuiVal & 0x3) << 28 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -----------------------------  Field Item: GPIOD_PUPDR_PUPDR13  --------------------------------
// SVD Line: 8088

//  <item> SFDITEM_FIELD__GPIOD_PUPDR_PUPDR13
//    <name> PUPDR13 </name>
//    <rw> 
//    <i> [Bits 27..26] RW (@ 0x50000C0C) Port x configuration bits (y =  0..15) </i>
//    <edit> 
//      <loc> ( (unsigned char)((GPIOD_PUPDR >> 26) & 0x3), ((GPIOD_PUPDR = (GPIOD_PUPDR & ~(0x3UL << 26 )) | ((unsigned long)(Gui_u8:GuiVal & 0x3) << 26 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -----------------------------  Field Item: GPIOD_PUPDR_PUPDR12  --------------------------------
// SVD Line: 8095

//  <item> SFDITEM_FIELD__GPIOD_PUPDR_PUPDR12
//    <name> PUPDR12 </name>
//    <rw> 
//    <i> [Bits 25..24] RW (@ 0x50000C0C) Port x configuration bits (y =  0..15) </i>
//    <edit> 
//      <loc> ( (unsigned char)((GPIOD_PUPDR >> 24) & 0x3), ((GPIOD_PUPDR = (GPIOD_PUPDR & ~(0x3UL << 24 )) | ((unsigned long)(Gui_u8:GuiVal & 0x3) << 24 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -----------------------------  Field Item: GPIOD_PUPDR_PUPDR11  --------------------------------
// SVD Line: 8102

//  <item> SFDITEM_FIELD__GPIOD_PUPDR_PUPDR11
//    <name> PUPDR11 </name>
//    <rw> 
//    <i> [Bits 23..22] RW (@ 0x50000C0C) Port x configuration bits (y =  0..15) </i>
//    <edit> 
//      <loc> ( (unsigned char)((GPIOD_PUPDR >> 22) & 0x3), ((GPIOD_PUPDR = (GPIOD_PUPDR & ~(0x3UL << 22 )) | ((unsigned long)(Gui_u8:GuiVal & 0x3) << 22 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -----------------------------  Field Item: GPIOD_PUPDR_PUPDR10  --------------------------------
// SVD Line: 8109

//  <item> SFDITEM_FIELD__GPIOD_PUPDR_PUPDR10
//    <name> PUPDR10 </name>
//    <rw> 
//    <i> [Bits 21..20] RW (@ 0x50000C0C) Port x configuration bits (y =  0..15) </i>
//    <edit> 
//      <loc> ( (unsigned char)((GPIOD_PUPDR >> 20) & 0x3), ((GPIOD_PUPDR = (GPIOD_PUPDR & ~(0x3UL << 20 )) | ((unsigned long)(Gui_u8:GuiVal & 0x3) << 20 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -----------------------------  Field Item: GPIOD_PUPDR_PUPDR9  ---------------------------------
// SVD Line: 8116

//  <item> SFDITEM_FIELD__GPIOD_PUPDR_PUPDR9
//    <name> PUPDR9 </name>
//    <rw> 
//    <i> [Bits 19..18] RW (@ 0x50000C0C) Port x configuration bits (y =  0..15) </i>
//    <edit> 
//      <loc> ( (unsigned char)((GPIOD_PUPDR >> 18) & 0x3), ((GPIOD_PUPDR = (GPIOD_PUPDR & ~(0x3UL << 18 )) | ((unsigned long)(Gui_u8:GuiVal & 0x3) << 18 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -----------------------------  Field Item: GPIOD_PUPDR_PUPDR8  ---------------------------------
// SVD Line: 8123

//  <item> SFDITEM_FIELD__GPIOD_PUPDR_PUPDR8
//    <name> PUPDR8 </name>
//    <rw> 
//    <i> [Bits 17..16] RW (@ 0x50000C0C) Port x configuration bits (y =  0..15) </i>
//    <edit> 
//      <loc> ( (unsigned char)((GPIOD_PUPDR >> 16) & 0x3), ((GPIOD_PUPDR = (GPIOD_PUPDR & ~(0x3UL << 16 )) | ((unsigned long)(Gui_u8:GuiVal & 0x3) << 16 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -----------------------------  Field Item: GPIOD_PUPDR_PUPDR7  ---------------------------------
// SVD Line: 8130

//  <item> SFDITEM_FIELD__GPIOD_PUPDR_PUPDR7
//    <name> PUPDR7 </name>
//    <rw> 
//    <i> [Bits 15..14] RW (@ 0x50000C0C) Port x configuration bits (y =  0..15) </i>
//    <edit> 
//      <loc> ( (unsigned char)((GPIOD_PUPDR >> 14) & 0x3), ((GPIOD_PUPDR = (GPIOD_PUPDR & ~(0x3UL << 14 )) | ((unsigned long)(Gui_u8:GuiVal & 0x3) << 14 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -----------------------------  Field Item: GPIOD_PUPDR_PUPDR6  ---------------------------------
// SVD Line: 8137

//  <item> SFDITEM_FIELD__GPIOD_PUPDR_PUPDR6
//    <name> PUPDR6 </name>
//    <rw> 
//    <i> [Bits 13..12] RW (@ 0x50000C0C) Port x configuration bits (y =  0..15) </i>
//    <edit> 
//      <loc> ( (unsigned char)((GPIOD_PUPDR >> 12) & 0x3), ((GPIOD_PUPDR = (GPIOD_PUPDR & ~(0x3UL << 12 )) | ((unsigned long)(Gui_u8:GuiVal & 0x3) << 12 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -----------------------------  Field Item: GPIOD_PUPDR_PUPDR5  ---------------------------------
// SVD Line: 8144

//  <item> SFDITEM_FIELD__GPIOD_PUPDR_PUPDR5
//    <name> PUPDR5 </name>
//    <rw> 
//    <i> [Bits 11..10] RW (@ 0x50000C0C) Port x configuration bits (y =  0..15) </i>
//    <edit> 
//      <loc> ( (unsigned char)((GPIOD_PUPDR >> 10) & 0x3), ((GPIOD_PUPDR = (GPIOD_PUPDR & ~(0x3UL << 10 )) | ((unsigned long)(Gui_u8:GuiVal & 0x3) << 10 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -----------------------------  Field Item: GPIOD_PUPDR_PUPDR4  ---------------------------------
// SVD Line: 8151

//  <item> SFDITEM_FIELD__GPIOD_PUPDR_PUPDR4
//    <name> PUPDR4 </name>
//    <rw> 
//    <i> [Bits 9..8] RW (@ 0x50000C0C) Port x configuration bits (y =  0..15) </i>
//    <edit> 
//      <loc> ( (unsigned char)((GPIOD_PUPDR >> 8) & 0x3), ((GPIOD_PUPDR = (GPIOD_PUPDR & ~(0x3UL << 8 )) | ((unsigned long)(Gui_u8:GuiVal & 0x3) << 8 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -----------------------------  Field Item: GPIOD_PUPDR_PUPDR3  ---------------------------------
// SVD Line: 8158

//  <item> SFDITEM_FIELD__GPIOD_PUPDR_PUPDR3
//    <name> PUPDR3 </name>
//    <rw> 
//    <i> [Bits 7..6] RW (@ 0x50000C0C) Port x configuration bits (y =  0..15) </i>
//    <edit> 
//      <loc> ( (unsigned char)((GPIOD_PUPDR >> 6) & 0x3), ((GPIOD_PUPDR = (GPIOD_PUPDR & ~(0x3UL << 6 )) | ((unsigned long)(Gui_u8:GuiVal & 0x3) << 6 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -----------------------------  Field Item: GPIOD_PUPDR_PUPDR2  ---------------------------------
// SVD Line: 8165

//  <item> SFDITEM_FIELD__GPIOD_PUPDR_PUPDR2
//    <name> PUPDR2 </name>
//    <rw> 
//    <i> [Bits 5..4] RW (@ 0x50000C0C) Port x configuration bits (y =  0..15) </i>
//    <edit> 
//      <loc> ( (unsigned char)((GPIOD_PUPDR >> 4) & 0x3), ((GPIOD_PUPDR = (GPIOD_PUPDR & ~(0x3UL << 4 )) | ((unsigned long)(Gui_u8:GuiVal & 0x3) << 4 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -----------------------------  Field Item: GPIOD_PUPDR_PUPDR1  ---------------------------------
// SVD Line: 8172

//  <item> SFDITEM_FIELD__GPIOD_PUPDR_PUPDR1
//    <name> PUPDR1 </name>
//    <rw> 
//    <i> [Bits 3..2] RW (@ 0x50000C0C) Port x configuration bits (y =  0..15) </i>
//    <edit> 
//      <loc> ( (unsigned char)((GPIOD_PUPDR >> 2) & 0x3), ((GPIOD_PUPDR = (GPIOD_PUPDR & ~(0x3UL << 2 )) | ((unsigned long)(Gui_u8:GuiVal & 0x3) << 2 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -----------------------------  Field Item: GPIOD_PUPDR_PUPDR0  ---------------------------------
// SVD Line: 8179

//  <item> SFDITEM_FIELD__GPIOD_PUPDR_PUPDR0
//    <name> PUPDR0 </name>
//    <rw> 
//    <i> [Bits 1..0] RW (@ 0x50000C0C) Port x configuration bits (y =  0..15) </i>
//    <edit> 
//      <loc> ( (unsigned char)((GPIOD_PUPDR >> 0) & 0x3), ((GPIOD_PUPDR = (GPIOD_PUPDR & ~(0x3UL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0x3) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -------------------------------  Register RTree: GPIOD_PUPDR  ----------------------------------
// SVD Line: 8064

//  <rtree> SFDITEM_REG__GPIOD_PUPDR
//    <name> PUPDR </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x50000C0C) GPIO port pull-up/pull-down  register </i>
//    <loc> ( (unsigned int)((GPIOD_PUPDR >> 0) & 0xFFFFFFFF), ((GPIOD_PUPDR = (GPIOD_PUPDR & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__GPIOD_PUPDR_PUPDR15 </item>
//    <item> SFDITEM_FIELD__GPIOD_PUPDR_PUPDR14 </item>
//    <item> SFDITEM_FIELD__GPIOD_PUPDR_PUPDR13 </item>
//    <item> SFDITEM_FIELD__GPIOD_PUPDR_PUPDR12 </item>
//    <item> SFDITEM_FIELD__GPIOD_PUPDR_PUPDR11 </item>
//    <item> SFDITEM_FIELD__GPIOD_PUPDR_PUPDR10 </item>
//    <item> SFDITEM_FIELD__GPIOD_PUPDR_PUPDR9 </item>
//    <item> SFDITEM_FIELD__GPIOD_PUPDR_PUPDR8 </item>
//    <item> SFDITEM_FIELD__GPIOD_PUPDR_PUPDR7 </item>
//    <item> SFDITEM_FIELD__GPIOD_PUPDR_PUPDR6 </item>
//    <item> SFDITEM_FIELD__GPIOD_PUPDR_PUPDR5 </item>
//    <item> SFDITEM_FIELD__GPIOD_PUPDR_PUPDR4 </item>
//    <item> SFDITEM_FIELD__GPIOD_PUPDR_PUPDR3 </item>
//    <item> SFDITEM_FIELD__GPIOD_PUPDR_PUPDR2 </item>
//    <item> SFDITEM_FIELD__GPIOD_PUPDR_PUPDR1 </item>
//    <item> SFDITEM_FIELD__GPIOD_PUPDR_PUPDR0 </item>
//  </rtree>
//  


// ----------------------------  Register Item Address: GPIOD_IDR  --------------------------------
// SVD Line: 8188

unsigned int GPIOD_IDR __AT (0x50000C10);



// -------------------------------  Field Item: GPIOD_IDR_IDR15  ----------------------------------
// SVD Line: 8197

//  <item> SFDITEM_FIELD__GPIOD_IDR_IDR15
//    <name> IDR15 </name>
//    <r> 
//    <i> [Bit 15] RO (@ 0x50000C10) Port input data (y =  0..15) </i>
//    <check> 
//      <loc> ( (unsigned int) GPIOD_IDR ) </loc>
//      <o.15..15> IDR15
//    </check>
//  </item>
//  


// -------------------------------  Field Item: GPIOD_IDR_IDR14  ----------------------------------
// SVD Line: 8204

//  <item> SFDITEM_FIELD__GPIOD_IDR_IDR14
//    <name> IDR14 </name>
//    <r> 
//    <i> [Bit 14] RO (@ 0x50000C10) Port input data (y =  0..15) </i>
//    <check> 
//      <loc> ( (unsigned int) GPIOD_IDR ) </loc>
//      <o.14..14> IDR14
//    </check>
//  </item>
//  


// -------------------------------  Field Item: GPIOD_IDR_IDR13  ----------------------------------
// SVD Line: 8211

//  <item> SFDITEM_FIELD__GPIOD_IDR_IDR13
//    <name> IDR13 </name>
//    <r> 
//    <i> [Bit 13] RO (@ 0x50000C10) Port input data (y =  0..15) </i>
//    <check> 
//      <loc> ( (unsigned int) GPIOD_IDR ) </loc>
//      <o.13..13> IDR13
//    </check>
//  </item>
//  


// -------------------------------  Field Item: GPIOD_IDR_IDR12  ----------------------------------
// SVD Line: 8218

//  <item> SFDITEM_FIELD__GPIOD_IDR_IDR12
//    <name> IDR12 </name>
//    <r> 
//    <i> [Bit 12] RO (@ 0x50000C10) Port input data (y =  0..15) </i>
//    <check> 
//      <loc> ( (unsigned int) GPIOD_IDR ) </loc>
//      <o.12..12> IDR12
//    </check>
//  </item>
//  


// -------------------------------  Field Item: GPIOD_IDR_IDR11  ----------------------------------
// SVD Line: 8225

//  <item> SFDITEM_FIELD__GPIOD_IDR_IDR11
//    <name> IDR11 </name>
//    <r> 
//    <i> [Bit 11] RO (@ 0x50000C10) Port input data (y =  0..15) </i>
//    <check> 
//      <loc> ( (unsigned int) GPIOD_IDR ) </loc>
//      <o.11..11> IDR11
//    </check>
//  </item>
//  


// -------------------------------  Field Item: GPIOD_IDR_IDR10  ----------------------------------
// SVD Line: 8232

//  <item> SFDITEM_FIELD__GPIOD_IDR_IDR10
//    <name> IDR10 </name>
//    <r> 
//    <i> [Bit 10] RO (@ 0x50000C10) Port input data (y =  0..15) </i>
//    <check> 
//      <loc> ( (unsigned int) GPIOD_IDR ) </loc>
//      <o.10..10> IDR10
//    </check>
//  </item>
//  


// -------------------------------  Field Item: GPIOD_IDR_IDR9  -----------------------------------
// SVD Line: 8239

//  <item> SFDITEM_FIELD__GPIOD_IDR_IDR9
//    <name> IDR9 </name>
//    <r> 
//    <i> [Bit 9] RO (@ 0x50000C10) Port input data (y =  0..15) </i>
//    <check> 
//      <loc> ( (unsigned int) GPIOD_IDR ) </loc>
//      <o.9..9> IDR9
//    </check>
//  </item>
//  


// -------------------------------  Field Item: GPIOD_IDR_IDR8  -----------------------------------
// SVD Line: 8246

//  <item> SFDITEM_FIELD__GPIOD_IDR_IDR8
//    <name> IDR8 </name>
//    <r> 
//    <i> [Bit 8] RO (@ 0x50000C10) Port input data (y =  0..15) </i>
//    <check> 
//      <loc> ( (unsigned int) GPIOD_IDR ) </loc>
//      <o.8..8> IDR8
//    </check>
//  </item>
//  


// -------------------------------  Field Item: GPIOD_IDR_IDR7  -----------------------------------
// SVD Line: 8253

//  <item> SFDITEM_FIELD__GPIOD_IDR_IDR7
//    <name> IDR7 </name>
//    <r> 
//    <i> [Bit 7] RO (@ 0x50000C10) Port input data (y =  0..15) </i>
//    <check> 
//      <loc> ( (unsigned int) GPIOD_IDR ) </loc>
//      <o.7..7> IDR7
//    </check>
//  </item>
//  


// -------------------------------  Field Item: GPIOD_IDR_IDR6  -----------------------------------
// SVD Line: 8260

//  <item> SFDITEM_FIELD__GPIOD_IDR_IDR6
//    <name> IDR6 </name>
//    <r> 
//    <i> [Bit 6] RO (@ 0x50000C10) Port input data (y =  0..15) </i>
//    <check> 
//      <loc> ( (unsigned int) GPIOD_IDR ) </loc>
//      <o.6..6> IDR6
//    </check>
//  </item>
//  


// -------------------------------  Field Item: GPIOD_IDR_IDR5  -----------------------------------
// SVD Line: 8267

//  <item> SFDITEM_FIELD__GPIOD_IDR_IDR5
//    <name> IDR5 </name>
//    <r> 
//    <i> [Bit 5] RO (@ 0x50000C10) Port input data (y =  0..15) </i>
//    <check> 
//      <loc> ( (unsigned int) GPIOD_IDR ) </loc>
//      <o.5..5> IDR5
//    </check>
//  </item>
//  


// -------------------------------  Field Item: GPIOD_IDR_IDR4  -----------------------------------
// SVD Line: 8274

//  <item> SFDITEM_FIELD__GPIOD_IDR_IDR4
//    <name> IDR4 </name>
//    <r> 
//    <i> [Bit 4] RO (@ 0x50000C10) Port input data (y =  0..15) </i>
//    <check> 
//      <loc> ( (unsigned int) GPIOD_IDR ) </loc>
//      <o.4..4> IDR4
//    </check>
//  </item>
//  


// -------------------------------  Field Item: GPIOD_IDR_IDR3  -----------------------------------
// SVD Line: 8281

//  <item> SFDITEM_FIELD__GPIOD_IDR_IDR3
//    <name> IDR3 </name>
//    <r> 
//    <i> [Bit 3] RO (@ 0x50000C10) Port input data (y =  0..15) </i>
//    <check> 
//      <loc> ( (unsigned int) GPIOD_IDR ) </loc>
//      <o.3..3> IDR3
//    </check>
//  </item>
//  


// -------------------------------  Field Item: GPIOD_IDR_IDR2  -----------------------------------
// SVD Line: 8288

//  <item> SFDITEM_FIELD__GPIOD_IDR_IDR2
//    <name> IDR2 </name>
//    <r> 
//    <i> [Bit 2] RO (@ 0x50000C10) Port input data (y =  0..15) </i>
//    <check> 
//      <loc> ( (unsigned int) GPIOD_IDR ) </loc>
//      <o.2..2> IDR2
//    </check>
//  </item>
//  


// -------------------------------  Field Item: GPIOD_IDR_IDR1  -----------------------------------
// SVD Line: 8295

//  <item> SFDITEM_FIELD__GPIOD_IDR_IDR1
//    <name> IDR1 </name>
//    <r> 
//    <i> [Bit 1] RO (@ 0x50000C10) Port input data (y =  0..15) </i>
//    <check> 
//      <loc> ( (unsigned int) GPIOD_IDR ) </loc>
//      <o.1..1> IDR1
//    </check>
//  </item>
//  


// -------------------------------  Field Item: GPIOD_IDR_IDR0  -----------------------------------
// SVD Line: 8302

//  <item> SFDITEM_FIELD__GPIOD_IDR_IDR0
//    <name> IDR0 </name>
//    <r> 
//    <i> [Bit 0] RO (@ 0x50000C10) Port input data (y =  0..15) </i>
//    <check> 
//      <loc> ( (unsigned int) GPIOD_IDR ) </loc>
//      <o.0..0> IDR0
//    </check>
//  </item>
//  


// --------------------------------  Register RTree: GPIOD_IDR  -----------------------------------
// SVD Line: 8188

//  <rtree> SFDITEM_REG__GPIOD_IDR
//    <name> IDR </name>
//    <r> 
//    <i> [Bits 31..0] RO (@ 0x50000C10) GPIO port input data register </i>
//    <loc> ( (unsigned int)((GPIOD_IDR >> 0) & 0xFFFFFFFF) ) </loc>
//    <item> SFDITEM_FIELD__GPIOD_IDR_IDR15 </item>
//    <item> SFDITEM_FIELD__GPIOD_IDR_IDR14 </item>
//    <item> SFDITEM_FIELD__GPIOD_IDR_IDR13 </item>
//    <item> SFDITEM_FIELD__GPIOD_IDR_IDR12 </item>
//    <item> SFDITEM_FIELD__GPIOD_IDR_IDR11 </item>
//    <item> SFDITEM_FIELD__GPIOD_IDR_IDR10 </item>
//    <item> SFDITEM_FIELD__GPIOD_IDR_IDR9 </item>
//    <item> SFDITEM_FIELD__GPIOD_IDR_IDR8 </item>
//    <item> SFDITEM_FIELD__GPIOD_IDR_IDR7 </item>
//    <item> SFDITEM_FIELD__GPIOD_IDR_IDR6 </item>
//    <item> SFDITEM_FIELD__GPIOD_IDR_IDR5 </item>
//    <item> SFDITEM_FIELD__GPIOD_IDR_IDR4 </item>
//    <item> SFDITEM_FIELD__GPIOD_IDR_IDR3 </item>
//    <item> SFDITEM_FIELD__GPIOD_IDR_IDR2 </item>
//    <item> SFDITEM_FIELD__GPIOD_IDR_IDR1 </item>
//    <item> SFDITEM_FIELD__GPIOD_IDR_IDR0 </item>
//  </rtree>
//  


// ----------------------------  Register Item Address: GPIOD_ODR  --------------------------------
// SVD Line: 8311

unsigned int GPIOD_ODR __AT (0x50000C14);



// -------------------------------  Field Item: GPIOD_ODR_ODR15  ----------------------------------
// SVD Line: 8320

//  <item> SFDITEM_FIELD__GPIOD_ODR_ODR15
//    <name> ODR15 </name>
//    <rw> 
//    <i> [Bit 15] RW (@ 0x50000C14) Port output data (y =  0..15) </i>
//    <check> 
//      <loc> ( (unsigned int) GPIOD_ODR ) </loc>
//      <o.15..15> ODR15
//    </check>
//  </item>
//  


// -------------------------------  Field Item: GPIOD_ODR_ODR14  ----------------------------------
// SVD Line: 8327

//  <item> SFDITEM_FIELD__GPIOD_ODR_ODR14
//    <name> ODR14 </name>
//    <rw> 
//    <i> [Bit 14] RW (@ 0x50000C14) Port output data (y =  0..15) </i>
//    <check> 
//      <loc> ( (unsigned int) GPIOD_ODR ) </loc>
//      <o.14..14> ODR14
//    </check>
//  </item>
//  


// -------------------------------  Field Item: GPIOD_ODR_ODR13  ----------------------------------
// SVD Line: 8334

//  <item> SFDITEM_FIELD__GPIOD_ODR_ODR13
//    <name> ODR13 </name>
//    <rw> 
//    <i> [Bit 13] RW (@ 0x50000C14) Port output data (y =  0..15) </i>
//    <check> 
//      <loc> ( (unsigned int) GPIOD_ODR ) </loc>
//      <o.13..13> ODR13
//    </check>
//  </item>
//  


// -------------------------------  Field Item: GPIOD_ODR_ODR12  ----------------------------------
// SVD Line: 8341

//  <item> SFDITEM_FIELD__GPIOD_ODR_ODR12
//    <name> ODR12 </name>
//    <rw> 
//    <i> [Bit 12] RW (@ 0x50000C14) Port output data (y =  0..15) </i>
//    <check> 
//      <loc> ( (unsigned int) GPIOD_ODR ) </loc>
//      <o.12..12> ODR12
//    </check>
//  </item>
//  


// -------------------------------  Field Item: GPIOD_ODR_ODR11  ----------------------------------
// SVD Line: 8348

//  <item> SFDITEM_FIELD__GPIOD_ODR_ODR11
//    <name> ODR11 </name>
//    <rw> 
//    <i> [Bit 11] RW (@ 0x50000C14) Port output data (y =  0..15) </i>
//    <check> 
//      <loc> ( (unsigned int) GPIOD_ODR ) </loc>
//      <o.11..11> ODR11
//    </check>
//  </item>
//  


// -------------------------------  Field Item: GPIOD_ODR_ODR10  ----------------------------------
// SVD Line: 8355

//  <item> SFDITEM_FIELD__GPIOD_ODR_ODR10
//    <name> ODR10 </name>
//    <rw> 
//    <i> [Bit 10] RW (@ 0x50000C14) Port output data (y =  0..15) </i>
//    <check> 
//      <loc> ( (unsigned int) GPIOD_ODR ) </loc>
//      <o.10..10> ODR10
//    </check>
//  </item>
//  


// -------------------------------  Field Item: GPIOD_ODR_ODR9  -----------------------------------
// SVD Line: 8362

//  <item> SFDITEM_FIELD__GPIOD_ODR_ODR9
//    <name> ODR9 </name>
//    <rw> 
//    <i> [Bit 9] RW (@ 0x50000C14) Port output data (y =  0..15) </i>
//    <check> 
//      <loc> ( (unsigned int) GPIOD_ODR ) </loc>
//      <o.9..9> ODR9
//    </check>
//  </item>
//  


// -------------------------------  Field Item: GPIOD_ODR_ODR8  -----------------------------------
// SVD Line: 8369

//  <item> SFDITEM_FIELD__GPIOD_ODR_ODR8
//    <name> ODR8 </name>
//    <rw> 
//    <i> [Bit 8] RW (@ 0x50000C14) Port output data (y =  0..15) </i>
//    <check> 
//      <loc> ( (unsigned int) GPIOD_ODR ) </loc>
//      <o.8..8> ODR8
//    </check>
//  </item>
//  


// -------------------------------  Field Item: GPIOD_ODR_ODR7  -----------------------------------
// SVD Line: 8376

//  <item> SFDITEM_FIELD__GPIOD_ODR_ODR7
//    <name> ODR7 </name>
//    <rw> 
//    <i> [Bit 7] RW (@ 0x50000C14) Port output data (y =  0..15) </i>
//    <check> 
//      <loc> ( (unsigned int) GPIOD_ODR ) </loc>
//      <o.7..7> ODR7
//    </check>
//  </item>
//  


// -------------------------------  Field Item: GPIOD_ODR_ODR6  -----------------------------------
// SVD Line: 8383

//  <item> SFDITEM_FIELD__GPIOD_ODR_ODR6
//    <name> ODR6 </name>
//    <rw> 
//    <i> [Bit 6] RW (@ 0x50000C14) Port output data (y =  0..15) </i>
//    <check> 
//      <loc> ( (unsigned int) GPIOD_ODR ) </loc>
//      <o.6..6> ODR6
//    </check>
//  </item>
//  


// -------------------------------  Field Item: GPIOD_ODR_ODR5  -----------------------------------
// SVD Line: 8390

//  <item> SFDITEM_FIELD__GPIOD_ODR_ODR5
//    <name> ODR5 </name>
//    <rw> 
//    <i> [Bit 5] RW (@ 0x50000C14) Port output data (y =  0..15) </i>
//    <check> 
//      <loc> ( (unsigned int) GPIOD_ODR ) </loc>
//      <o.5..5> ODR5
//    </check>
//  </item>
//  


// -------------------------------  Field Item: GPIOD_ODR_ODR4  -----------------------------------
// SVD Line: 8397

//  <item> SFDITEM_FIELD__GPIOD_ODR_ODR4
//    <name> ODR4 </name>
//    <rw> 
//    <i> [Bit 4] RW (@ 0x50000C14) Port output data (y =  0..15) </i>
//    <check> 
//      <loc> ( (unsigned int) GPIOD_ODR ) </loc>
//      <o.4..4> ODR4
//    </check>
//  </item>
//  


// -------------------------------  Field Item: GPIOD_ODR_ODR3  -----------------------------------
// SVD Line: 8404

//  <item> SFDITEM_FIELD__GPIOD_ODR_ODR3
//    <name> ODR3 </name>
//    <rw> 
//    <i> [Bit 3] RW (@ 0x50000C14) Port output data (y =  0..15) </i>
//    <check> 
//      <loc> ( (unsigned int) GPIOD_ODR ) </loc>
//      <o.3..3> ODR3
//    </check>
//  </item>
//  


// -------------------------------  Field Item: GPIOD_ODR_ODR2  -----------------------------------
// SVD Line: 8411

//  <item> SFDITEM_FIELD__GPIOD_ODR_ODR2
//    <name> ODR2 </name>
//    <rw> 
//    <i> [Bit 2] RW (@ 0x50000C14) Port output data (y =  0..15) </i>
//    <check> 
//      <loc> ( (unsigned int) GPIOD_ODR ) </loc>
//      <o.2..2> ODR2
//    </check>
//  </item>
//  


// -------------------------------  Field Item: GPIOD_ODR_ODR1  -----------------------------------
// SVD Line: 8418

//  <item> SFDITEM_FIELD__GPIOD_ODR_ODR1
//    <name> ODR1 </name>
//    <rw> 
//    <i> [Bit 1] RW (@ 0x50000C14) Port output data (y =  0..15) </i>
//    <check> 
//      <loc> ( (unsigned int) GPIOD_ODR ) </loc>
//      <o.1..1> ODR1
//    </check>
//  </item>
//  


// -------------------------------  Field Item: GPIOD_ODR_ODR0  -----------------------------------
// SVD Line: 8425

//  <item> SFDITEM_FIELD__GPIOD_ODR_ODR0
//    <name> ODR0 </name>
//    <rw> 
//    <i> [Bit 0] RW (@ 0x50000C14) Port output data (y =  0..15) </i>
//    <check> 
//      <loc> ( (unsigned int) GPIOD_ODR ) </loc>
//      <o.0..0> ODR0
//    </check>
//  </item>
//  


// --------------------------------  Register RTree: GPIOD_ODR  -----------------------------------
// SVD Line: 8311

//  <rtree> SFDITEM_REG__GPIOD_ODR
//    <name> ODR </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x50000C14) GPIO port output data register </i>
//    <loc> ( (unsigned int)((GPIOD_ODR >> 0) & 0xFFFFFFFF), ((GPIOD_ODR = (GPIOD_ODR & ~(0xFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__GPIOD_ODR_ODR15 </item>
//    <item> SFDITEM_FIELD__GPIOD_ODR_ODR14 </item>
//    <item> SFDITEM_FIELD__GPIOD_ODR_ODR13 </item>
//    <item> SFDITEM_FIELD__GPIOD_ODR_ODR12 </item>
//    <item> SFDITEM_FIELD__GPIOD_ODR_ODR11 </item>
//    <item> SFDITEM_FIELD__GPIOD_ODR_ODR10 </item>
//    <item> SFDITEM_FIELD__GPIOD_ODR_ODR9 </item>
//    <item> SFDITEM_FIELD__GPIOD_ODR_ODR8 </item>
//    <item> SFDITEM_FIELD__GPIOD_ODR_ODR7 </item>
//    <item> SFDITEM_FIELD__GPIOD_ODR_ODR6 </item>
//    <item> SFDITEM_FIELD__GPIOD_ODR_ODR5 </item>
//    <item> SFDITEM_FIELD__GPIOD_ODR_ODR4 </item>
//    <item> SFDITEM_FIELD__GPIOD_ODR_ODR3 </item>
//    <item> SFDITEM_FIELD__GPIOD_ODR_ODR2 </item>
//    <item> SFDITEM_FIELD__GPIOD_ODR_ODR1 </item>
//    <item> SFDITEM_FIELD__GPIOD_ODR_ODR0 </item>
//  </rtree>
//  


// ----------------------------  Register Item Address: GPIOD_BSRR  -------------------------------
// SVD Line: 8434

unsigned int GPIOD_BSRR __AT (0x50000C18);



// -------------------------------  Field Item: GPIOD_BSRR_BR15  ----------------------------------
// SVD Line: 8444

//  <item> SFDITEM_FIELD__GPIOD_BSRR_BR15
//    <name> BR15 </name>
//    <w> 
//    <i> [Bit 31] WO (@ 0x50000C18) Port x reset bit y (y =  0..15) </i>
//    <check> 
//      <loc> ( (unsigned int) GPIOD_BSRR ) </loc>
//      <o.31..31> BR15
//    </check>
//  </item>
//  


// -------------------------------  Field Item: GPIOD_BSRR_BR14  ----------------------------------
// SVD Line: 8451

//  <item> SFDITEM_FIELD__GPIOD_BSRR_BR14
//    <name> BR14 </name>
//    <w> 
//    <i> [Bit 30] WO (@ 0x50000C18) Port x reset bit y (y =  0..15) </i>
//    <check> 
//      <loc> ( (unsigned int) GPIOD_BSRR ) </loc>
//      <o.30..30> BR14
//    </check>
//  </item>
//  


// -------------------------------  Field Item: GPIOD_BSRR_BR13  ----------------------------------
// SVD Line: 8458

//  <item> SFDITEM_FIELD__GPIOD_BSRR_BR13
//    <name> BR13 </name>
//    <w> 
//    <i> [Bit 29] WO (@ 0x50000C18) Port x reset bit y (y =  0..15) </i>
//    <check> 
//      <loc> ( (unsigned int) GPIOD_BSRR ) </loc>
//      <o.29..29> BR13
//    </check>
//  </item>
//  


// -------------------------------  Field Item: GPIOD_BSRR_BR12  ----------------------------------
// SVD Line: 8465

//  <item> SFDITEM_FIELD__GPIOD_BSRR_BR12
//    <name> BR12 </name>
//    <w> 
//    <i> [Bit 28] WO (@ 0x50000C18) Port x reset bit y (y =  0..15) </i>
//    <check> 
//      <loc> ( (unsigned int) GPIOD_BSRR ) </loc>
//      <o.28..28> BR12
//    </check>
//  </item>
//  


// -------------------------------  Field Item: GPIOD_BSRR_BR11  ----------------------------------
// SVD Line: 8472

//  <item> SFDITEM_FIELD__GPIOD_BSRR_BR11
//    <name> BR11 </name>
//    <w> 
//    <i> [Bit 27] WO (@ 0x50000C18) Port x reset bit y (y =  0..15) </i>
//    <check> 
//      <loc> ( (unsigned int) GPIOD_BSRR ) </loc>
//      <o.27..27> BR11
//    </check>
//  </item>
//  


// -------------------------------  Field Item: GPIOD_BSRR_BR10  ----------------------------------
// SVD Line: 8479

//  <item> SFDITEM_FIELD__GPIOD_BSRR_BR10
//    <name> BR10 </name>
//    <w> 
//    <i> [Bit 26] WO (@ 0x50000C18) Port x reset bit y (y =  0..15) </i>
//    <check> 
//      <loc> ( (unsigned int) GPIOD_BSRR ) </loc>
//      <o.26..26> BR10
//    </check>
//  </item>
//  


// -------------------------------  Field Item: GPIOD_BSRR_BR9  -----------------------------------
// SVD Line: 8486

//  <item> SFDITEM_FIELD__GPIOD_BSRR_BR9
//    <name> BR9 </name>
//    <w> 
//    <i> [Bit 25] WO (@ 0x50000C18) Port x reset bit y (y =  0..15) </i>
//    <check> 
//      <loc> ( (unsigned int) GPIOD_BSRR ) </loc>
//      <o.25..25> BR9
//    </check>
//  </item>
//  


// -------------------------------  Field Item: GPIOD_BSRR_BR8  -----------------------------------
// SVD Line: 8493

//  <item> SFDITEM_FIELD__GPIOD_BSRR_BR8
//    <name> BR8 </name>
//    <w> 
//    <i> [Bit 24] WO (@ 0x50000C18) Port x reset bit y (y =  0..15) </i>
//    <check> 
//      <loc> ( (unsigned int) GPIOD_BSRR ) </loc>
//      <o.24..24> BR8
//    </check>
//  </item>
//  


// -------------------------------  Field Item: GPIOD_BSRR_BR7  -----------------------------------
// SVD Line: 8500

//  <item> SFDITEM_FIELD__GPIOD_BSRR_BR7
//    <name> BR7 </name>
//    <w> 
//    <i> [Bit 23] WO (@ 0x50000C18) Port x reset bit y (y =  0..15) </i>
//    <check> 
//      <loc> ( (unsigned int) GPIOD_BSRR ) </loc>
//      <o.23..23> BR7
//    </check>
//  </item>
//  


// -------------------------------  Field Item: GPIOD_BSRR_BR6  -----------------------------------
// SVD Line: 8507

//  <item> SFDITEM_FIELD__GPIOD_BSRR_BR6
//    <name> BR6 </name>
//    <w> 
//    <i> [Bit 22] WO (@ 0x50000C18) Port x reset bit y (y =  0..15) </i>
//    <check> 
//      <loc> ( (unsigned int) GPIOD_BSRR ) </loc>
//      <o.22..22> BR6
//    </check>
//  </item>
//  


// -------------------------------  Field Item: GPIOD_BSRR_BR5  -----------------------------------
// SVD Line: 8514

//  <item> SFDITEM_FIELD__GPIOD_BSRR_BR5
//    <name> BR5 </name>
//    <w> 
//    <i> [Bit 21] WO (@ 0x50000C18) Port x reset bit y (y =  0..15) </i>
//    <check> 
//      <loc> ( (unsigned int) GPIOD_BSRR ) </loc>
//      <o.21..21> BR5
//    </check>
//  </item>
//  


// -------------------------------  Field Item: GPIOD_BSRR_BR4  -----------------------------------
// SVD Line: 8521

//  <item> SFDITEM_FIELD__GPIOD_BSRR_BR4
//    <name> BR4 </name>
//    <w> 
//    <i> [Bit 20] WO (@ 0x50000C18) Port x reset bit y (y =  0..15) </i>
//    <check> 
//      <loc> ( (unsigned int) GPIOD_BSRR ) </loc>
//      <o.20..20> BR4
//    </check>
//  </item>
//  


// -------------------------------  Field Item: GPIOD_BSRR_BR3  -----------------------------------
// SVD Line: 8528

//  <item> SFDITEM_FIELD__GPIOD_BSRR_BR3
//    <name> BR3 </name>
//    <w> 
//    <i> [Bit 19] WO (@ 0x50000C18) Port x reset bit y (y =  0..15) </i>
//    <check> 
//      <loc> ( (unsigned int) GPIOD_BSRR ) </loc>
//      <o.19..19> BR3
//    </check>
//  </item>
//  


// -------------------------------  Field Item: GPIOD_BSRR_BR2  -----------------------------------
// SVD Line: 8535

//  <item> SFDITEM_FIELD__GPIOD_BSRR_BR2
//    <name> BR2 </name>
//    <w> 
//    <i> [Bit 18] WO (@ 0x50000C18) Port x reset bit y (y =  0..15) </i>
//    <check> 
//      <loc> ( (unsigned int) GPIOD_BSRR ) </loc>
//      <o.18..18> BR2
//    </check>
//  </item>
//  


// -------------------------------  Field Item: GPIOD_BSRR_BR1  -----------------------------------
// SVD Line: 8542

//  <item> SFDITEM_FIELD__GPIOD_BSRR_BR1
//    <name> BR1 </name>
//    <w> 
//    <i> [Bit 17] WO (@ 0x50000C18) Port x reset bit y (y =  0..15) </i>
//    <check> 
//      <loc> ( (unsigned int) GPIOD_BSRR ) </loc>
//      <o.17..17> BR1
//    </check>
//  </item>
//  


// -------------------------------  Field Item: GPIOD_BSRR_BR0  -----------------------------------
// SVD Line: 8549

//  <item> SFDITEM_FIELD__GPIOD_BSRR_BR0
//    <name> BR0 </name>
//    <w> 
//    <i> [Bit 16] WO (@ 0x50000C18) Port x set bit y (y=  0..15) </i>
//    <check> 
//      <loc> ( (unsigned int) GPIOD_BSRR ) </loc>
//      <o.16..16> BR0
//    </check>
//  </item>
//  


// -------------------------------  Field Item: GPIOD_BSRR_BS15  ----------------------------------
// SVD Line: 8556

//  <item> SFDITEM_FIELD__GPIOD_BSRR_BS15
//    <name> BS15 </name>
//    <w> 
//    <i> [Bit 15] WO (@ 0x50000C18) Port x set bit y (y=  0..15) </i>
//    <check> 
//      <loc> ( (unsigned int) GPIOD_BSRR ) </loc>
//      <o.15..15> BS15
//    </check>
//  </item>
//  


// -------------------------------  Field Item: GPIOD_BSRR_BS14  ----------------------------------
// SVD Line: 8563

//  <item> SFDITEM_FIELD__GPIOD_BSRR_BS14
//    <name> BS14 </name>
//    <w> 
//    <i> [Bit 14] WO (@ 0x50000C18) Port x set bit y (y=  0..15) </i>
//    <check> 
//      <loc> ( (unsigned int) GPIOD_BSRR ) </loc>
//      <o.14..14> BS14
//    </check>
//  </item>
//  


// -------------------------------  Field Item: GPIOD_BSRR_BS13  ----------------------------------
// SVD Line: 8570

//  <item> SFDITEM_FIELD__GPIOD_BSRR_BS13
//    <name> BS13 </name>
//    <w> 
//    <i> [Bit 13] WO (@ 0x50000C18) Port x set bit y (y=  0..15) </i>
//    <check> 
//      <loc> ( (unsigned int) GPIOD_BSRR ) </loc>
//      <o.13..13> BS13
//    </check>
//  </item>
//  


// -------------------------------  Field Item: GPIOD_BSRR_BS12  ----------------------------------
// SVD Line: 8577

//  <item> SFDITEM_FIELD__GPIOD_BSRR_BS12
//    <name> BS12 </name>
//    <w> 
//    <i> [Bit 12] WO (@ 0x50000C18) Port x set bit y (y=  0..15) </i>
//    <check> 
//      <loc> ( (unsigned int) GPIOD_BSRR ) </loc>
//      <o.12..12> BS12
//    </check>
//  </item>
//  


// -------------------------------  Field Item: GPIOD_BSRR_BS11  ----------------------------------
// SVD Line: 8584

//  <item> SFDITEM_FIELD__GPIOD_BSRR_BS11
//    <name> BS11 </name>
//    <w> 
//    <i> [Bit 11] WO (@ 0x50000C18) Port x set bit y (y=  0..15) </i>
//    <check> 
//      <loc> ( (unsigned int) GPIOD_BSRR ) </loc>
//      <o.11..11> BS11
//    </check>
//  </item>
//  


// -------------------------------  Field Item: GPIOD_BSRR_BS10  ----------------------------------
// SVD Line: 8591

//  <item> SFDITEM_FIELD__GPIOD_BSRR_BS10
//    <name> BS10 </name>
//    <w> 
//    <i> [Bit 10] WO (@ 0x50000C18) Port x set bit y (y=  0..15) </i>
//    <check> 
//      <loc> ( (unsigned int) GPIOD_BSRR ) </loc>
//      <o.10..10> BS10
//    </check>
//  </item>
//  


// -------------------------------  Field Item: GPIOD_BSRR_BS9  -----------------------------------
// SVD Line: 8598

//  <item> SFDITEM_FIELD__GPIOD_BSRR_BS9
//    <name> BS9 </name>
//    <w> 
//    <i> [Bit 9] WO (@ 0x50000C18) Port x set bit y (y=  0..15) </i>
//    <check> 
//      <loc> ( (unsigned int) GPIOD_BSRR ) </loc>
//      <o.9..9> BS9
//    </check>
//  </item>
//  


// -------------------------------  Field Item: GPIOD_BSRR_BS8  -----------------------------------
// SVD Line: 8605

//  <item> SFDITEM_FIELD__GPIOD_BSRR_BS8
//    <name> BS8 </name>
//    <w> 
//    <i> [Bit 8] WO (@ 0x50000C18) Port x set bit y (y=  0..15) </i>
//    <check> 
//      <loc> ( (unsigned int) GPIOD_BSRR ) </loc>
//      <o.8..8> BS8
//    </check>
//  </item>
//  


// -------------------------------  Field Item: GPIOD_BSRR_BS7  -----------------------------------
// SVD Line: 8612

//  <item> SFDITEM_FIELD__GPIOD_BSRR_BS7
//    <name> BS7 </name>
//    <w> 
//    <i> [Bit 7] WO (@ 0x50000C18) Port x set bit y (y=  0..15) </i>
//    <check> 
//      <loc> ( (unsigned int) GPIOD_BSRR ) </loc>
//      <o.7..7> BS7
//    </check>
//  </item>
//  


// -------------------------------  Field Item: GPIOD_BSRR_BS6  -----------------------------------
// SVD Line: 8619

//  <item> SFDITEM_FIELD__GPIOD_BSRR_BS6
//    <name> BS6 </name>
//    <w> 
//    <i> [Bit 6] WO (@ 0x50000C18) Port x set bit y (y=  0..15) </i>
//    <check> 
//      <loc> ( (unsigned int) GPIOD_BSRR ) </loc>
//      <o.6..6> BS6
//    </check>
//  </item>
//  


// -------------------------------  Field Item: GPIOD_BSRR_BS5  -----------------------------------
// SVD Line: 8626

//  <item> SFDITEM_FIELD__GPIOD_BSRR_BS5
//    <name> BS5 </name>
//    <w> 
//    <i> [Bit 5] WO (@ 0x50000C18) Port x set bit y (y=  0..15) </i>
//    <check> 
//      <loc> ( (unsigned int) GPIOD_BSRR ) </loc>
//      <o.5..5> BS5
//    </check>
//  </item>
//  


// -------------------------------  Field Item: GPIOD_BSRR_BS4  -----------------------------------
// SVD Line: 8633

//  <item> SFDITEM_FIELD__GPIOD_BSRR_BS4
//    <name> BS4 </name>
//    <w> 
//    <i> [Bit 4] WO (@ 0x50000C18) Port x set bit y (y=  0..15) </i>
//    <check> 
//      <loc> ( (unsigned int) GPIOD_BSRR ) </loc>
//      <o.4..4> BS4
//    </check>
//  </item>
//  


// -------------------------------  Field Item: GPIOD_BSRR_BS3  -----------------------------------
// SVD Line: 8640

//  <item> SFDITEM_FIELD__GPIOD_BSRR_BS3
//    <name> BS3 </name>
//    <w> 
//    <i> [Bit 3] WO (@ 0x50000C18) Port x set bit y (y=  0..15) </i>
//    <check> 
//      <loc> ( (unsigned int) GPIOD_BSRR ) </loc>
//      <o.3..3> BS3
//    </check>
//  </item>
//  


// -------------------------------  Field Item: GPIOD_BSRR_BS2  -----------------------------------
// SVD Line: 8647

//  <item> SFDITEM_FIELD__GPIOD_BSRR_BS2
//    <name> BS2 </name>
//    <w> 
//    <i> [Bit 2] WO (@ 0x50000C18) Port x set bit y (y=  0..15) </i>
//    <check> 
//      <loc> ( (unsigned int) GPIOD_BSRR ) </loc>
//      <o.2..2> BS2
//    </check>
//  </item>
//  


// -------------------------------  Field Item: GPIOD_BSRR_BS1  -----------------------------------
// SVD Line: 8654

//  <item> SFDITEM_FIELD__GPIOD_BSRR_BS1
//    <name> BS1 </name>
//    <w> 
//    <i> [Bit 1] WO (@ 0x50000C18) Port x set bit y (y=  0..15) </i>
//    <check> 
//      <loc> ( (unsigned int) GPIOD_BSRR ) </loc>
//      <o.1..1> BS1
//    </check>
//  </item>
//  


// -------------------------------  Field Item: GPIOD_BSRR_BS0  -----------------------------------
// SVD Line: 8661

//  <item> SFDITEM_FIELD__GPIOD_BSRR_BS0
//    <name> BS0 </name>
//    <w> 
//    <i> [Bit 0] WO (@ 0x50000C18) Port x set bit y (y=  0..15) </i>
//    <check> 
//      <loc> ( (unsigned int) GPIOD_BSRR ) </loc>
//      <o.0..0> BS0
//    </check>
//  </item>
//  


// -------------------------------  Register RTree: GPIOD_BSRR  -----------------------------------
// SVD Line: 8434

//  <rtree> SFDITEM_REG__GPIOD_BSRR
//    <name> BSRR </name>
//    <w> 
//    <i> [Bits 31..0] WO (@ 0x50000C18) GPIO port bit set/reset  register </i>
//    <loc> ( (unsigned int)((GPIOD_BSRR >> 0) & 0xFFFFFFFF), ((GPIOD_BSRR = (GPIOD_BSRR & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__GPIOD_BSRR_BR15 </item>
//    <item> SFDITEM_FIELD__GPIOD_BSRR_BR14 </item>
//    <item> SFDITEM_FIELD__GPIOD_BSRR_BR13 </item>
//    <item> SFDITEM_FIELD__GPIOD_BSRR_BR12 </item>
//    <item> SFDITEM_FIELD__GPIOD_BSRR_BR11 </item>
//    <item> SFDITEM_FIELD__GPIOD_BSRR_BR10 </item>
//    <item> SFDITEM_FIELD__GPIOD_BSRR_BR9 </item>
//    <item> SFDITEM_FIELD__GPIOD_BSRR_BR8 </item>
//    <item> SFDITEM_FIELD__GPIOD_BSRR_BR7 </item>
//    <item> SFDITEM_FIELD__GPIOD_BSRR_BR6 </item>
//    <item> SFDITEM_FIELD__GPIOD_BSRR_BR5 </item>
//    <item> SFDITEM_FIELD__GPIOD_BSRR_BR4 </item>
//    <item> SFDITEM_FIELD__GPIOD_BSRR_BR3 </item>
//    <item> SFDITEM_FIELD__GPIOD_BSRR_BR2 </item>
//    <item> SFDITEM_FIELD__GPIOD_BSRR_BR1 </item>
//    <item> SFDITEM_FIELD__GPIOD_BSRR_BR0 </item>
//    <item> SFDITEM_FIELD__GPIOD_BSRR_BS15 </item>
//    <item> SFDITEM_FIELD__GPIOD_BSRR_BS14 </item>
//    <item> SFDITEM_FIELD__GPIOD_BSRR_BS13 </item>
//    <item> SFDITEM_FIELD__GPIOD_BSRR_BS12 </item>
//    <item> SFDITEM_FIELD__GPIOD_BSRR_BS11 </item>
//    <item> SFDITEM_FIELD__GPIOD_BSRR_BS10 </item>
//    <item> SFDITEM_FIELD__GPIOD_BSRR_BS9 </item>
//    <item> SFDITEM_FIELD__GPIOD_BSRR_BS8 </item>
//    <item> SFDITEM_FIELD__GPIOD_BSRR_BS7 </item>
//    <item> SFDITEM_FIELD__GPIOD_BSRR_BS6 </item>
//    <item> SFDITEM_FIELD__GPIOD_BSRR_BS5 </item>
//    <item> SFDITEM_FIELD__GPIOD_BSRR_BS4 </item>
//    <item> SFDITEM_FIELD__GPIOD_BSRR_BS3 </item>
//    <item> SFDITEM_FIELD__GPIOD_BSRR_BS2 </item>
//    <item> SFDITEM_FIELD__GPIOD_BSRR_BS1 </item>
//    <item> SFDITEM_FIELD__GPIOD_BSRR_BS0 </item>
//  </rtree>
//  


// ----------------------------  Register Item Address: GPIOD_LCKR  -------------------------------
// SVD Line: 8670

unsigned int GPIOD_LCKR __AT (0x50000C1C);



// -------------------------------  Field Item: GPIOD_LCKR_LCKK  ----------------------------------
// SVD Line: 8680

//  <item> SFDITEM_FIELD__GPIOD_LCKR_LCKK
//    <name> LCKK </name>
//    <rw> 
//    <i> [Bit 16] RW (@ 0x50000C1C) Port x lock bit y (y=  0..15) </i>
//    <check> 
//      <loc> ( (unsigned int) GPIOD_LCKR ) </loc>
//      <o.16..16> LCKK
//    </check>
//  </item>
//  


// ------------------------------  Field Item: GPIOD_LCKR_LCK15  ----------------------------------
// SVD Line: 8687

//  <item> SFDITEM_FIELD__GPIOD_LCKR_LCK15
//    <name> LCK15 </name>
//    <rw> 
//    <i> [Bit 15] RW (@ 0x50000C1C) Port x lock bit y (y=  0..15) </i>
//    <check> 
//      <loc> ( (unsigned int) GPIOD_LCKR ) </loc>
//      <o.15..15> LCK15
//    </check>
//  </item>
//  


// ------------------------------  Field Item: GPIOD_LCKR_LCK14  ----------------------------------
// SVD Line: 8694

//  <item> SFDITEM_FIELD__GPIOD_LCKR_LCK14
//    <name> LCK14 </name>
//    <rw> 
//    <i> [Bit 14] RW (@ 0x50000C1C) Port x lock bit y (y=  0..15) </i>
//    <check> 
//      <loc> ( (unsigned int) GPIOD_LCKR ) </loc>
//      <o.14..14> LCK14
//    </check>
//  </item>
//  


// ------------------------------  Field Item: GPIOD_LCKR_LCK13  ----------------------------------
// SVD Line: 8701

//  <item> SFDITEM_FIELD__GPIOD_LCKR_LCK13
//    <name> LCK13 </name>
//    <rw> 
//    <i> [Bit 13] RW (@ 0x50000C1C) Port x lock bit y (y=  0..15) </i>
//    <check> 
//      <loc> ( (unsigned int) GPIOD_LCKR ) </loc>
//      <o.13..13> LCK13
//    </check>
//  </item>
//  


// ------------------------------  Field Item: GPIOD_LCKR_LCK12  ----------------------------------
// SVD Line: 8708

//  <item> SFDITEM_FIELD__GPIOD_LCKR_LCK12
//    <name> LCK12 </name>
//    <rw> 
//    <i> [Bit 12] RW (@ 0x50000C1C) Port x lock bit y (y=  0..15) </i>
//    <check> 
//      <loc> ( (unsigned int) GPIOD_LCKR ) </loc>
//      <o.12..12> LCK12
//    </check>
//  </item>
//  


// ------------------------------  Field Item: GPIOD_LCKR_LCK11  ----------------------------------
// SVD Line: 8715

//  <item> SFDITEM_FIELD__GPIOD_LCKR_LCK11
//    <name> LCK11 </name>
//    <rw> 
//    <i> [Bit 11] RW (@ 0x50000C1C) Port x lock bit y (y=  0..15) </i>
//    <check> 
//      <loc> ( (unsigned int) GPIOD_LCKR ) </loc>
//      <o.11..11> LCK11
//    </check>
//  </item>
//  


// ------------------------------  Field Item: GPIOD_LCKR_LCK10  ----------------------------------
// SVD Line: 8722

//  <item> SFDITEM_FIELD__GPIOD_LCKR_LCK10
//    <name> LCK10 </name>
//    <rw> 
//    <i> [Bit 10] RW (@ 0x50000C1C) Port x lock bit y (y=  0..15) </i>
//    <check> 
//      <loc> ( (unsigned int) GPIOD_LCKR ) </loc>
//      <o.10..10> LCK10
//    </check>
//  </item>
//  


// -------------------------------  Field Item: GPIOD_LCKR_LCK9  ----------------------------------
// SVD Line: 8729

//  <item> SFDITEM_FIELD__GPIOD_LCKR_LCK9
//    <name> LCK9 </name>
//    <rw> 
//    <i> [Bit 9] RW (@ 0x50000C1C) Port x lock bit y (y=  0..15) </i>
//    <check> 
//      <loc> ( (unsigned int) GPIOD_LCKR ) </loc>
//      <o.9..9> LCK9
//    </check>
//  </item>
//  


// -------------------------------  Field Item: GPIOD_LCKR_LCK8  ----------------------------------
// SVD Line: 8736

//  <item> SFDITEM_FIELD__GPIOD_LCKR_LCK8
//    <name> LCK8 </name>
//    <rw> 
//    <i> [Bit 8] RW (@ 0x50000C1C) Port x lock bit y (y=  0..15) </i>
//    <check> 
//      <loc> ( (unsigned int) GPIOD_LCKR ) </loc>
//      <o.8..8> LCK8
//    </check>
//  </item>
//  


// -------------------------------  Field Item: GPIOD_LCKR_LCK7  ----------------------------------
// SVD Line: 8743

//  <item> SFDITEM_FIELD__GPIOD_LCKR_LCK7
//    <name> LCK7 </name>
//    <rw> 
//    <i> [Bit 7] RW (@ 0x50000C1C) Port x lock bit y (y=  0..15) </i>
//    <check> 
//      <loc> ( (unsigned int) GPIOD_LCKR ) </loc>
//      <o.7..7> LCK7
//    </check>
//  </item>
//  


// -------------------------------  Field Item: GPIOD_LCKR_LCK6  ----------------------------------
// SVD Line: 8750

//  <item> SFDITEM_FIELD__GPIOD_LCKR_LCK6
//    <name> LCK6 </name>
//    <rw> 
//    <i> [Bit 6] RW (@ 0x50000C1C) Port x lock bit y (y=  0..15) </i>
//    <check> 
//      <loc> ( (unsigned int) GPIOD_LCKR ) </loc>
//      <o.6..6> LCK6
//    </check>
//  </item>
//  


// -------------------------------  Field Item: GPIOD_LCKR_LCK5  ----------------------------------
// SVD Line: 8757

//  <item> SFDITEM_FIELD__GPIOD_LCKR_LCK5
//    <name> LCK5 </name>
//    <rw> 
//    <i> [Bit 5] RW (@ 0x50000C1C) Port x lock bit y (y=  0..15) </i>
//    <check> 
//      <loc> ( (unsigned int) GPIOD_LCKR ) </loc>
//      <o.5..5> LCK5
//    </check>
//  </item>
//  


// -------------------------------  Field Item: GPIOD_LCKR_LCK4  ----------------------------------
// SVD Line: 8764

//  <item> SFDITEM_FIELD__GPIOD_LCKR_LCK4
//    <name> LCK4 </name>
//    <rw> 
//    <i> [Bit 4] RW (@ 0x50000C1C) Port x lock bit y (y=  0..15) </i>
//    <check> 
//      <loc> ( (unsigned int) GPIOD_LCKR ) </loc>
//      <o.4..4> LCK4
//    </check>
//  </item>
//  


// -------------------------------  Field Item: GPIOD_LCKR_LCK3  ----------------------------------
// SVD Line: 8771

//  <item> SFDITEM_FIELD__GPIOD_LCKR_LCK3
//    <name> LCK3 </name>
//    <rw> 
//    <i> [Bit 3] RW (@ 0x50000C1C) Port x lock bit y (y=  0..15) </i>
//    <check> 
//      <loc> ( (unsigned int) GPIOD_LCKR ) </loc>
//      <o.3..3> LCK3
//    </check>
//  </item>
//  


// -------------------------------  Field Item: GPIOD_LCKR_LCK2  ----------------------------------
// SVD Line: 8778

//  <item> SFDITEM_FIELD__GPIOD_LCKR_LCK2
//    <name> LCK2 </name>
//    <rw> 
//    <i> [Bit 2] RW (@ 0x50000C1C) Port x lock bit y (y=  0..15) </i>
//    <check> 
//      <loc> ( (unsigned int) GPIOD_LCKR ) </loc>
//      <o.2..2> LCK2
//    </check>
//  </item>
//  


// -------------------------------  Field Item: GPIOD_LCKR_LCK1  ----------------------------------
// SVD Line: 8785

//  <item> SFDITEM_FIELD__GPIOD_LCKR_LCK1
//    <name> LCK1 </name>
//    <rw> 
//    <i> [Bit 1] RW (@ 0x50000C1C) Port x lock bit y (y=  0..15) </i>
//    <check> 
//      <loc> ( (unsigned int) GPIOD_LCKR ) </loc>
//      <o.1..1> LCK1
//    </check>
//  </item>
//  


// -------------------------------  Field Item: GPIOD_LCKR_LCK0  ----------------------------------
// SVD Line: 8792

//  <item> SFDITEM_FIELD__GPIOD_LCKR_LCK0
//    <name> LCK0 </name>
//    <rw> 
//    <i> [Bit 0] RW (@ 0x50000C1C) Port x lock bit y (y=  0..15) </i>
//    <check> 
//      <loc> ( (unsigned int) GPIOD_LCKR ) </loc>
//      <o.0..0> LCK0
//    </check>
//  </item>
//  


// -------------------------------  Register RTree: GPIOD_LCKR  -----------------------------------
// SVD Line: 8670

//  <rtree> SFDITEM_REG__GPIOD_LCKR
//    <name> LCKR </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x50000C1C) GPIO port configuration lock  register </i>
//    <loc> ( (unsigned int)((GPIOD_LCKR >> 0) & 0xFFFFFFFF), ((GPIOD_LCKR = (GPIOD_LCKR & ~(0x1FFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0x1FFFF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__GPIOD_LCKR_LCKK </item>
//    <item> SFDITEM_FIELD__GPIOD_LCKR_LCK15 </item>
//    <item> SFDITEM_FIELD__GPIOD_LCKR_LCK14 </item>
//    <item> SFDITEM_FIELD__GPIOD_LCKR_LCK13 </item>
//    <item> SFDITEM_FIELD__GPIOD_LCKR_LCK12 </item>
//    <item> SFDITEM_FIELD__GPIOD_LCKR_LCK11 </item>
//    <item> SFDITEM_FIELD__GPIOD_LCKR_LCK10 </item>
//    <item> SFDITEM_FIELD__GPIOD_LCKR_LCK9 </item>
//    <item> SFDITEM_FIELD__GPIOD_LCKR_LCK8 </item>
//    <item> SFDITEM_FIELD__GPIOD_LCKR_LCK7 </item>
//    <item> SFDITEM_FIELD__GPIOD_LCKR_LCK6 </item>
//    <item> SFDITEM_FIELD__GPIOD_LCKR_LCK5 </item>
//    <item> SFDITEM_FIELD__GPIOD_LCKR_LCK4 </item>
//    <item> SFDITEM_FIELD__GPIOD_LCKR_LCK3 </item>
//    <item> SFDITEM_FIELD__GPIOD_LCKR_LCK2 </item>
//    <item> SFDITEM_FIELD__GPIOD_LCKR_LCK1 </item>
//    <item> SFDITEM_FIELD__GPIOD_LCKR_LCK0 </item>
//  </rtree>
//  


// ----------------------------  Register Item Address: GPIOD_AFRL  -------------------------------
// SVD Line: 8801

unsigned int GPIOD_AFRL __AT (0x50000C20);



// ------------------------------  Field Item: GPIOD_AFRL_AFSEL7  ---------------------------------
// SVD Line: 8811

//  <item> SFDITEM_FIELD__GPIOD_AFRL_AFSEL7
//    <name> AFSEL7 </name>
//    <rw> 
//    <i> [Bits 31..28] RW (@ 0x50000C20) Alternate function selection for port x  bit y (y = 0..7) </i>
//    <edit> 
//      <loc> ( (unsigned char)((GPIOD_AFRL >> 28) & 0xF), ((GPIOD_AFRL = (GPIOD_AFRL & ~(0xFUL << 28 )) | ((unsigned long)(Gui_u8:GuiVal & 0xF) << 28 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ------------------------------  Field Item: GPIOD_AFRL_AFSEL6  ---------------------------------
// SVD Line: 8818

//  <item> SFDITEM_FIELD__GPIOD_AFRL_AFSEL6
//    <name> AFSEL6 </name>
//    <rw> 
//    <i> [Bits 27..24] RW (@ 0x50000C20) Alternate function selection for port x  bit y (y = 0..7) </i>
//    <edit> 
//      <loc> ( (unsigned char)((GPIOD_AFRL >> 24) & 0xF), ((GPIOD_AFRL = (GPIOD_AFRL & ~(0xFUL << 24 )) | ((unsigned long)(Gui_u8:GuiVal & 0xF) << 24 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ------------------------------  Field Item: GPIOD_AFRL_AFSEL5  ---------------------------------
// SVD Line: 8825

//  <item> SFDITEM_FIELD__GPIOD_AFRL_AFSEL5
//    <name> AFSEL5 </name>
//    <rw> 
//    <i> [Bits 23..20] RW (@ 0x50000C20) Alternate function selection for port x  bit y (y = 0..7) </i>
//    <edit> 
//      <loc> ( (unsigned char)((GPIOD_AFRL >> 20) & 0xF), ((GPIOD_AFRL = (GPIOD_AFRL & ~(0xFUL << 20 )) | ((unsigned long)(Gui_u8:GuiVal & 0xF) << 20 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ------------------------------  Field Item: GPIOD_AFRL_AFSEL4  ---------------------------------
// SVD Line: 8832

//  <item> SFDITEM_FIELD__GPIOD_AFRL_AFSEL4
//    <name> AFSEL4 </name>
//    <rw> 
//    <i> [Bits 19..16] RW (@ 0x50000C20) Alternate function selection for port x  bit y (y = 0..7) </i>
//    <edit> 
//      <loc> ( (unsigned char)((GPIOD_AFRL >> 16) & 0xF), ((GPIOD_AFRL = (GPIOD_AFRL & ~(0xFUL << 16 )) | ((unsigned long)(Gui_u8:GuiVal & 0xF) << 16 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ------------------------------  Field Item: GPIOD_AFRL_AFSEL3  ---------------------------------
// SVD Line: 8839

//  <item> SFDITEM_FIELD__GPIOD_AFRL_AFSEL3
//    <name> AFSEL3 </name>
//    <rw> 
//    <i> [Bits 15..12] RW (@ 0x50000C20) Alternate function selection for port x  bit y (y = 0..7) </i>
//    <edit> 
//      <loc> ( (unsigned char)((GPIOD_AFRL >> 12) & 0xF), ((GPIOD_AFRL = (GPIOD_AFRL & ~(0xFUL << 12 )) | ((unsigned long)(Gui_u8:GuiVal & 0xF) << 12 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ------------------------------  Field Item: GPIOD_AFRL_AFSEL2  ---------------------------------
// SVD Line: 8846

//  <item> SFDITEM_FIELD__GPIOD_AFRL_AFSEL2
//    <name> AFSEL2 </name>
//    <rw> 
//    <i> [Bits 11..8] RW (@ 0x50000C20) Alternate function selection for port x  bit y (y = 0..7) </i>
//    <edit> 
//      <loc> ( (unsigned char)((GPIOD_AFRL >> 8) & 0xF), ((GPIOD_AFRL = (GPIOD_AFRL & ~(0xFUL << 8 )) | ((unsigned long)(Gui_u8:GuiVal & 0xF) << 8 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ------------------------------  Field Item: GPIOD_AFRL_AFSEL1  ---------------------------------
// SVD Line: 8853

//  <item> SFDITEM_FIELD__GPIOD_AFRL_AFSEL1
//    <name> AFSEL1 </name>
//    <rw> 
//    <i> [Bits 7..4] RW (@ 0x50000C20) Alternate function selection for port x  bit y (y = 0..7) </i>
//    <edit> 
//      <loc> ( (unsigned char)((GPIOD_AFRL >> 4) & 0xF), ((GPIOD_AFRL = (GPIOD_AFRL & ~(0xFUL << 4 )) | ((unsigned long)(Gui_u8:GuiVal & 0xF) << 4 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ------------------------------  Field Item: GPIOD_AFRL_AFSEL0  ---------------------------------
// SVD Line: 8860

//  <item> SFDITEM_FIELD__GPIOD_AFRL_AFSEL0
//    <name> AFSEL0 </name>
//    <rw> 
//    <i> [Bits 3..0] RW (@ 0x50000C20) Alternate function selection for port x  bit y (y = 0..7) </i>
//    <edit> 
//      <loc> ( (unsigned char)((GPIOD_AFRL >> 0) & 0xF), ((GPIOD_AFRL = (GPIOD_AFRL & ~(0xFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -------------------------------  Register RTree: GPIOD_AFRL  -----------------------------------
// SVD Line: 8801

//  <rtree> SFDITEM_REG__GPIOD_AFRL
//    <name> AFRL </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x50000C20) GPIO alternate function low  register </i>
//    <loc> ( (unsigned int)((GPIOD_AFRL >> 0) & 0xFFFFFFFF), ((GPIOD_AFRL = (GPIOD_AFRL & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__GPIOD_AFRL_AFSEL7 </item>
//    <item> SFDITEM_FIELD__GPIOD_AFRL_AFSEL6 </item>
//    <item> SFDITEM_FIELD__GPIOD_AFRL_AFSEL5 </item>
//    <item> SFDITEM_FIELD__GPIOD_AFRL_AFSEL4 </item>
//    <item> SFDITEM_FIELD__GPIOD_AFRL_AFSEL3 </item>
//    <item> SFDITEM_FIELD__GPIOD_AFRL_AFSEL2 </item>
//    <item> SFDITEM_FIELD__GPIOD_AFRL_AFSEL1 </item>
//    <item> SFDITEM_FIELD__GPIOD_AFRL_AFSEL0 </item>
//  </rtree>
//  


// ----------------------------  Register Item Address: GPIOD_AFRH  -------------------------------
// SVD Line: 8869

unsigned int GPIOD_AFRH __AT (0x50000C24);



// -----------------------------  Field Item: GPIOD_AFRH_AFSEL15  ---------------------------------
// SVD Line: 8879

//  <item> SFDITEM_FIELD__GPIOD_AFRH_AFSEL15
//    <name> AFSEL15 </name>
//    <rw> 
//    <i> [Bits 31..28] RW (@ 0x50000C24) Alternate function selection for port x  bit y (y = 8..15) </i>
//    <edit> 
//      <loc> ( (unsigned char)((GPIOD_AFRH >> 28) & 0xF), ((GPIOD_AFRH = (GPIOD_AFRH & ~(0xFUL << 28 )) | ((unsigned long)(Gui_u8:GuiVal & 0xF) << 28 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -----------------------------  Field Item: GPIOD_AFRH_AFSEL14  ---------------------------------
// SVD Line: 8886

//  <item> SFDITEM_FIELD__GPIOD_AFRH_AFSEL14
//    <name> AFSEL14 </name>
//    <rw> 
//    <i> [Bits 27..24] RW (@ 0x50000C24) Alternate function selection for port x  bit y (y = 8..15) </i>
//    <edit> 
//      <loc> ( (unsigned char)((GPIOD_AFRH >> 24) & 0xF), ((GPIOD_AFRH = (GPIOD_AFRH & ~(0xFUL << 24 )) | ((unsigned long)(Gui_u8:GuiVal & 0xF) << 24 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -----------------------------  Field Item: GPIOD_AFRH_AFSEL13  ---------------------------------
// SVD Line: 8893

//  <item> SFDITEM_FIELD__GPIOD_AFRH_AFSEL13
//    <name> AFSEL13 </name>
//    <rw> 
//    <i> [Bits 23..20] RW (@ 0x50000C24) Alternate function selection for port x  bit y (y = 8..15) </i>
//    <edit> 
//      <loc> ( (unsigned char)((GPIOD_AFRH >> 20) & 0xF), ((GPIOD_AFRH = (GPIOD_AFRH & ~(0xFUL << 20 )) | ((unsigned long)(Gui_u8:GuiVal & 0xF) << 20 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -----------------------------  Field Item: GPIOD_AFRH_AFSEL12  ---------------------------------
// SVD Line: 8900

//  <item> SFDITEM_FIELD__GPIOD_AFRH_AFSEL12
//    <name> AFSEL12 </name>
//    <rw> 
//    <i> [Bits 19..16] RW (@ 0x50000C24) Alternate function selection for port x  bit y (y = 8..15) </i>
//    <edit> 
//      <loc> ( (unsigned char)((GPIOD_AFRH >> 16) & 0xF), ((GPIOD_AFRH = (GPIOD_AFRH & ~(0xFUL << 16 )) | ((unsigned long)(Gui_u8:GuiVal & 0xF) << 16 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -----------------------------  Field Item: GPIOD_AFRH_AFSEL11  ---------------------------------
// SVD Line: 8907

//  <item> SFDITEM_FIELD__GPIOD_AFRH_AFSEL11
//    <name> AFSEL11 </name>
//    <rw> 
//    <i> [Bits 15..12] RW (@ 0x50000C24) Alternate function selection for port x  bit y (y = 8..15) </i>
//    <edit> 
//      <loc> ( (unsigned char)((GPIOD_AFRH >> 12) & 0xF), ((GPIOD_AFRH = (GPIOD_AFRH & ~(0xFUL << 12 )) | ((unsigned long)(Gui_u8:GuiVal & 0xF) << 12 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -----------------------------  Field Item: GPIOD_AFRH_AFSEL10  ---------------------------------
// SVD Line: 8914

//  <item> SFDITEM_FIELD__GPIOD_AFRH_AFSEL10
//    <name> AFSEL10 </name>
//    <rw> 
//    <i> [Bits 11..8] RW (@ 0x50000C24) Alternate function selection for port x  bit y (y = 8..15) </i>
//    <edit> 
//      <loc> ( (unsigned char)((GPIOD_AFRH >> 8) & 0xF), ((GPIOD_AFRH = (GPIOD_AFRH & ~(0xFUL << 8 )) | ((unsigned long)(Gui_u8:GuiVal & 0xF) << 8 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ------------------------------  Field Item: GPIOD_AFRH_AFSEL9  ---------------------------------
// SVD Line: 8921

//  <item> SFDITEM_FIELD__GPIOD_AFRH_AFSEL9
//    <name> AFSEL9 </name>
//    <rw> 
//    <i> [Bits 7..4] RW (@ 0x50000C24) Alternate function selection for port x  bit y (y = 8..15) </i>
//    <edit> 
//      <loc> ( (unsigned char)((GPIOD_AFRH >> 4) & 0xF), ((GPIOD_AFRH = (GPIOD_AFRH & ~(0xFUL << 4 )) | ((unsigned long)(Gui_u8:GuiVal & 0xF) << 4 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ------------------------------  Field Item: GPIOD_AFRH_AFSEL8  ---------------------------------
// SVD Line: 8928

//  <item> SFDITEM_FIELD__GPIOD_AFRH_AFSEL8
//    <name> AFSEL8 </name>
//    <rw> 
//    <i> [Bits 3..0] RW (@ 0x50000C24) Alternate function selection for port x  bit y (y = 8..15) </i>
//    <edit> 
//      <loc> ( (unsigned char)((GPIOD_AFRH >> 0) & 0xF), ((GPIOD_AFRH = (GPIOD_AFRH & ~(0xFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -------------------------------  Register RTree: GPIOD_AFRH  -----------------------------------
// SVD Line: 8869

//  <rtree> SFDITEM_REG__GPIOD_AFRH
//    <name> AFRH </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x50000C24) GPIO alternate function high  register </i>
//    <loc> ( (unsigned int)((GPIOD_AFRH >> 0) & 0xFFFFFFFF), ((GPIOD_AFRH = (GPIOD_AFRH & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__GPIOD_AFRH_AFSEL15 </item>
//    <item> SFDITEM_FIELD__GPIOD_AFRH_AFSEL14 </item>
//    <item> SFDITEM_FIELD__GPIOD_AFRH_AFSEL13 </item>
//    <item> SFDITEM_FIELD__GPIOD_AFRH_AFSEL12 </item>
//    <item> SFDITEM_FIELD__GPIOD_AFRH_AFSEL11 </item>
//    <item> SFDITEM_FIELD__GPIOD_AFRH_AFSEL10 </item>
//    <item> SFDITEM_FIELD__GPIOD_AFRH_AFSEL9 </item>
//    <item> SFDITEM_FIELD__GPIOD_AFRH_AFSEL8 </item>
//  </rtree>
//  


// ----------------------------  Register Item Address: GPIOD_BRR  --------------------------------
// SVD Line: 8937

unsigned int GPIOD_BRR __AT (0x50000C28);



// --------------------------------  Field Item: GPIOD_BRR_BR0  -----------------------------------
// SVD Line: 8946

//  <item> SFDITEM_FIELD__GPIOD_BRR_BR0
//    <name> BR0 </name>
//    <w> 
//    <i> [Bit 0] WO (@ 0x50000C28) Port Reset bit </i>
//    <check> 
//      <loc> ( (unsigned int) GPIOD_BRR ) </loc>
//      <o.0..0> BR0
//    </check>
//  </item>
//  


// --------------------------------  Field Item: GPIOD_BRR_BR1  -----------------------------------
// SVD Line: 8952

//  <item> SFDITEM_FIELD__GPIOD_BRR_BR1
//    <name> BR1 </name>
//    <w> 
//    <i> [Bit 1] WO (@ 0x50000C28) Port Reset bit </i>
//    <check> 
//      <loc> ( (unsigned int) GPIOD_BRR ) </loc>
//      <o.1..1> BR1
//    </check>
//  </item>
//  


// --------------------------------  Field Item: GPIOD_BRR_BR2  -----------------------------------
// SVD Line: 8958

//  <item> SFDITEM_FIELD__GPIOD_BRR_BR2
//    <name> BR2 </name>
//    <w> 
//    <i> [Bit 2] WO (@ 0x50000C28) Port Reset bit </i>
//    <check> 
//      <loc> ( (unsigned int) GPIOD_BRR ) </loc>
//      <o.2..2> BR2
//    </check>
//  </item>
//  


// --------------------------------  Field Item: GPIOD_BRR_BR3  -----------------------------------
// SVD Line: 8964

//  <item> SFDITEM_FIELD__GPIOD_BRR_BR3
//    <name> BR3 </name>
//    <w> 
//    <i> [Bit 3] WO (@ 0x50000C28) Port Reset bit </i>
//    <check> 
//      <loc> ( (unsigned int) GPIOD_BRR ) </loc>
//      <o.3..3> BR3
//    </check>
//  </item>
//  


// --------------------------------  Field Item: GPIOD_BRR_BR4  -----------------------------------
// SVD Line: 8970

//  <item> SFDITEM_FIELD__GPIOD_BRR_BR4
//    <name> BR4 </name>
//    <w> 
//    <i> [Bit 4] WO (@ 0x50000C28) Port Reset bit </i>
//    <check> 
//      <loc> ( (unsigned int) GPIOD_BRR ) </loc>
//      <o.4..4> BR4
//    </check>
//  </item>
//  


// --------------------------------  Field Item: GPIOD_BRR_BR5  -----------------------------------
// SVD Line: 8976

//  <item> SFDITEM_FIELD__GPIOD_BRR_BR5
//    <name> BR5 </name>
//    <w> 
//    <i> [Bit 5] WO (@ 0x50000C28) Port Reset bit </i>
//    <check> 
//      <loc> ( (unsigned int) GPIOD_BRR ) </loc>
//      <o.5..5> BR5
//    </check>
//  </item>
//  


// --------------------------------  Field Item: GPIOD_BRR_BR6  -----------------------------------
// SVD Line: 8982

//  <item> SFDITEM_FIELD__GPIOD_BRR_BR6
//    <name> BR6 </name>
//    <w> 
//    <i> [Bit 6] WO (@ 0x50000C28) Port Reset bit </i>
//    <check> 
//      <loc> ( (unsigned int) GPIOD_BRR ) </loc>
//      <o.6..6> BR6
//    </check>
//  </item>
//  


// --------------------------------  Field Item: GPIOD_BRR_BR7  -----------------------------------
// SVD Line: 8988

//  <item> SFDITEM_FIELD__GPIOD_BRR_BR7
//    <name> BR7 </name>
//    <w> 
//    <i> [Bit 7] WO (@ 0x50000C28) Port Reset bit </i>
//    <check> 
//      <loc> ( (unsigned int) GPIOD_BRR ) </loc>
//      <o.7..7> BR7
//    </check>
//  </item>
//  


// --------------------------------  Field Item: GPIOD_BRR_BR8  -----------------------------------
// SVD Line: 8994

//  <item> SFDITEM_FIELD__GPIOD_BRR_BR8
//    <name> BR8 </name>
//    <w> 
//    <i> [Bit 8] WO (@ 0x50000C28) Port Reset bit </i>
//    <check> 
//      <loc> ( (unsigned int) GPIOD_BRR ) </loc>
//      <o.8..8> BR8
//    </check>
//  </item>
//  


// --------------------------------  Field Item: GPIOD_BRR_BR9  -----------------------------------
// SVD Line: 9000

//  <item> SFDITEM_FIELD__GPIOD_BRR_BR9
//    <name> BR9 </name>
//    <w> 
//    <i> [Bit 9] WO (@ 0x50000C28) Port Reset bit </i>
//    <check> 
//      <loc> ( (unsigned int) GPIOD_BRR ) </loc>
//      <o.9..9> BR9
//    </check>
//  </item>
//  


// -------------------------------  Field Item: GPIOD_BRR_BR10  -----------------------------------
// SVD Line: 9006

//  <item> SFDITEM_FIELD__GPIOD_BRR_BR10
//    <name> BR10 </name>
//    <w> 
//    <i> [Bit 10] WO (@ 0x50000C28) Port Reset bit </i>
//    <check> 
//      <loc> ( (unsigned int) GPIOD_BRR ) </loc>
//      <o.10..10> BR10
//    </check>
//  </item>
//  


// -------------------------------  Field Item: GPIOD_BRR_BR11  -----------------------------------
// SVD Line: 9012

//  <item> SFDITEM_FIELD__GPIOD_BRR_BR11
//    <name> BR11 </name>
//    <w> 
//    <i> [Bit 11] WO (@ 0x50000C28) Port Reset bit </i>
//    <check> 
//      <loc> ( (unsigned int) GPIOD_BRR ) </loc>
//      <o.11..11> BR11
//    </check>
//  </item>
//  


// -------------------------------  Field Item: GPIOD_BRR_BR12  -----------------------------------
// SVD Line: 9018

//  <item> SFDITEM_FIELD__GPIOD_BRR_BR12
//    <name> BR12 </name>
//    <w> 
//    <i> [Bit 12] WO (@ 0x50000C28) Port Reset bit </i>
//    <check> 
//      <loc> ( (unsigned int) GPIOD_BRR ) </loc>
//      <o.12..12> BR12
//    </check>
//  </item>
//  


// -------------------------------  Field Item: GPIOD_BRR_BR13  -----------------------------------
// SVD Line: 9024

//  <item> SFDITEM_FIELD__GPIOD_BRR_BR13
//    <name> BR13 </name>
//    <w> 
//    <i> [Bit 13] WO (@ 0x50000C28) Port Reset bit </i>
//    <check> 
//      <loc> ( (unsigned int) GPIOD_BRR ) </loc>
//      <o.13..13> BR13
//    </check>
//  </item>
//  


// -------------------------------  Field Item: GPIOD_BRR_BR14  -----------------------------------
// SVD Line: 9030

//  <item> SFDITEM_FIELD__GPIOD_BRR_BR14
//    <name> BR14 </name>
//    <w> 
//    <i> [Bit 14] WO (@ 0x50000C28) Port Reset bit </i>
//    <check> 
//      <loc> ( (unsigned int) GPIOD_BRR ) </loc>
//      <o.14..14> BR14
//    </check>
//  </item>
//  


// -------------------------------  Field Item: GPIOD_BRR_BR15  -----------------------------------
// SVD Line: 9036

//  <item> SFDITEM_FIELD__GPIOD_BRR_BR15
//    <name> BR15 </name>
//    <w> 
//    <i> [Bit 15] WO (@ 0x50000C28) Port Reset bit </i>
//    <check> 
//      <loc> ( (unsigned int) GPIOD_BRR ) </loc>
//      <o.15..15> BR15
//    </check>
//  </item>
//  


// --------------------------------  Register RTree: GPIOD_BRR  -----------------------------------
// SVD Line: 8937

//  <rtree> SFDITEM_REG__GPIOD_BRR
//    <name> BRR </name>
//    <w> 
//    <i> [Bits 31..0] WO (@ 0x50000C28) port bit reset register </i>
//    <loc> ( (unsigned int)((GPIOD_BRR >> 0) & 0xFFFFFFFF), ((GPIOD_BRR = (GPIOD_BRR & ~(0xFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__GPIOD_BRR_BR0 </item>
//    <item> SFDITEM_FIELD__GPIOD_BRR_BR1 </item>
//    <item> SFDITEM_FIELD__GPIOD_BRR_BR2 </item>
//    <item> SFDITEM_FIELD__GPIOD_BRR_BR3 </item>
//    <item> SFDITEM_FIELD__GPIOD_BRR_BR4 </item>
//    <item> SFDITEM_FIELD__GPIOD_BRR_BR5 </item>
//    <item> SFDITEM_FIELD__GPIOD_BRR_BR6 </item>
//    <item> SFDITEM_FIELD__GPIOD_BRR_BR7 </item>
//    <item> SFDITEM_FIELD__GPIOD_BRR_BR8 </item>
//    <item> SFDITEM_FIELD__GPIOD_BRR_BR9 </item>
//    <item> SFDITEM_FIELD__GPIOD_BRR_BR10 </item>
//    <item> SFDITEM_FIELD__GPIOD_BRR_BR11 </item>
//    <item> SFDITEM_FIELD__GPIOD_BRR_BR12 </item>
//    <item> SFDITEM_FIELD__GPIOD_BRR_BR13 </item>
//    <item> SFDITEM_FIELD__GPIOD_BRR_BR14 </item>
//    <item> SFDITEM_FIELD__GPIOD_BRR_BR15 </item>
//  </rtree>
//  


// ---------------------------------  Peripheral View: GPIOD  -------------------------------------
// SVD Line: 9050

//  <view> GPIOD
//    <name> GPIOD </name>
//    <item> SFDITEM_REG__GPIOD_MODER </item>
//    <item> SFDITEM_REG__GPIOD_OTYPER </item>
//    <item> SFDITEM_REG__GPIOD_OSPEEDR </item>
//    <item> SFDITEM_REG__GPIOD_PUPDR </item>
//    <item> SFDITEM_REG__GPIOD_IDR </item>
//    <item> SFDITEM_REG__GPIOD_ODR </item>
//    <item> SFDITEM_REG__GPIOD_BSRR </item>
//    <item> SFDITEM_REG__GPIOD_LCKR </item>
//    <item> SFDITEM_REG__GPIOD_AFRL </item>
//    <item> SFDITEM_REG__GPIOD_AFRH </item>
//    <item> SFDITEM_REG__GPIOD_BRR </item>
//  </view>
//  


// ---------------------------  Register Item Address: GPIOF_MODER  -------------------------------
// SVD Line: 7694

unsigned int GPIOF_MODER __AT (0x50001400);



// -----------------------------  Field Item: GPIOF_MODER_MODER15  --------------------------------
// SVD Line: 7703

//  <item> SFDITEM_FIELD__GPIOF_MODER_MODER15
//    <name> MODER15 </name>
//    <rw> 
//    <i> [Bits 31..30] RW (@ 0x50001400) Port x configuration bits (y =  0..15) </i>
//    <edit> 
//      <loc> ( (unsigned char)((GPIOF_MODER >> 30) & 0x3), ((GPIOF_MODER = (GPIOF_MODER & ~(0x3UL << 30 )) | ((unsigned long)(Gui_u8:GuiVal & 0x3) << 30 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -----------------------------  Field Item: GPIOF_MODER_MODER14  --------------------------------
// SVD Line: 7710

//  <item> SFDITEM_FIELD__GPIOF_MODER_MODER14
//    <name> MODER14 </name>
//    <rw> 
//    <i> [Bits 29..28] RW (@ 0x50001400) Port x configuration bits (y =  0..15) </i>
//    <edit> 
//      <loc> ( (unsigned char)((GPIOF_MODER >> 28) & 0x3), ((GPIOF_MODER = (GPIOF_MODER & ~(0x3UL << 28 )) | ((unsigned long)(Gui_u8:GuiVal & 0x3) << 28 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -----------------------------  Field Item: GPIOF_MODER_MODER13  --------------------------------
// SVD Line: 7717

//  <item> SFDITEM_FIELD__GPIOF_MODER_MODER13
//    <name> MODER13 </name>
//    <rw> 
//    <i> [Bits 27..26] RW (@ 0x50001400) Port x configuration bits (y =  0..15) </i>
//    <edit> 
//      <loc> ( (unsigned char)((GPIOF_MODER >> 26) & 0x3), ((GPIOF_MODER = (GPIOF_MODER & ~(0x3UL << 26 )) | ((unsigned long)(Gui_u8:GuiVal & 0x3) << 26 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -----------------------------  Field Item: GPIOF_MODER_MODER12  --------------------------------
// SVD Line: 7724

//  <item> SFDITEM_FIELD__GPIOF_MODER_MODER12
//    <name> MODER12 </name>
//    <rw> 
//    <i> [Bits 25..24] RW (@ 0x50001400) Port x configuration bits (y =  0..15) </i>
//    <edit> 
//      <loc> ( (unsigned char)((GPIOF_MODER >> 24) & 0x3), ((GPIOF_MODER = (GPIOF_MODER & ~(0x3UL << 24 )) | ((unsigned long)(Gui_u8:GuiVal & 0x3) << 24 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -----------------------------  Field Item: GPIOF_MODER_MODER11  --------------------------------
// SVD Line: 7731

//  <item> SFDITEM_FIELD__GPIOF_MODER_MODER11
//    <name> MODER11 </name>
//    <rw> 
//    <i> [Bits 23..22] RW (@ 0x50001400) Port x configuration bits (y =  0..15) </i>
//    <edit> 
//      <loc> ( (unsigned char)((GPIOF_MODER >> 22) & 0x3), ((GPIOF_MODER = (GPIOF_MODER & ~(0x3UL << 22 )) | ((unsigned long)(Gui_u8:GuiVal & 0x3) << 22 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -----------------------------  Field Item: GPIOF_MODER_MODER10  --------------------------------
// SVD Line: 7738

//  <item> SFDITEM_FIELD__GPIOF_MODER_MODER10
//    <name> MODER10 </name>
//    <rw> 
//    <i> [Bits 21..20] RW (@ 0x50001400) Port x configuration bits (y =  0..15) </i>
//    <edit> 
//      <loc> ( (unsigned char)((GPIOF_MODER >> 20) & 0x3), ((GPIOF_MODER = (GPIOF_MODER & ~(0x3UL << 20 )) | ((unsigned long)(Gui_u8:GuiVal & 0x3) << 20 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -----------------------------  Field Item: GPIOF_MODER_MODER9  ---------------------------------
// SVD Line: 7745

//  <item> SFDITEM_FIELD__GPIOF_MODER_MODER9
//    <name> MODER9 </name>
//    <rw> 
//    <i> [Bits 19..18] RW (@ 0x50001400) Port x configuration bits (y =  0..15) </i>
//    <edit> 
//      <loc> ( (unsigned char)((GPIOF_MODER >> 18) & 0x3), ((GPIOF_MODER = (GPIOF_MODER & ~(0x3UL << 18 )) | ((unsigned long)(Gui_u8:GuiVal & 0x3) << 18 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -----------------------------  Field Item: GPIOF_MODER_MODER8  ---------------------------------
// SVD Line: 7752

//  <item> SFDITEM_FIELD__GPIOF_MODER_MODER8
//    <name> MODER8 </name>
//    <rw> 
//    <i> [Bits 17..16] RW (@ 0x50001400) Port x configuration bits (y =  0..15) </i>
//    <edit> 
//      <loc> ( (unsigned char)((GPIOF_MODER >> 16) & 0x3), ((GPIOF_MODER = (GPIOF_MODER & ~(0x3UL << 16 )) | ((unsigned long)(Gui_u8:GuiVal & 0x3) << 16 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -----------------------------  Field Item: GPIOF_MODER_MODER7  ---------------------------------
// SVD Line: 7759

//  <item> SFDITEM_FIELD__GPIOF_MODER_MODER7
//    <name> MODER7 </name>
//    <rw> 
//    <i> [Bits 15..14] RW (@ 0x50001400) Port x configuration bits (y =  0..15) </i>
//    <edit> 
//      <loc> ( (unsigned char)((GPIOF_MODER >> 14) & 0x3), ((GPIOF_MODER = (GPIOF_MODER & ~(0x3UL << 14 )) | ((unsigned long)(Gui_u8:GuiVal & 0x3) << 14 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -----------------------------  Field Item: GPIOF_MODER_MODER6  ---------------------------------
// SVD Line: 7766

//  <item> SFDITEM_FIELD__GPIOF_MODER_MODER6
//    <name> MODER6 </name>
//    <rw> 
//    <i> [Bits 13..12] RW (@ 0x50001400) Port x configuration bits (y =  0..15) </i>
//    <edit> 
//      <loc> ( (unsigned char)((GPIOF_MODER >> 12) & 0x3), ((GPIOF_MODER = (GPIOF_MODER & ~(0x3UL << 12 )) | ((unsigned long)(Gui_u8:GuiVal & 0x3) << 12 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -----------------------------  Field Item: GPIOF_MODER_MODER5  ---------------------------------
// SVD Line: 7773

//  <item> SFDITEM_FIELD__GPIOF_MODER_MODER5
//    <name> MODER5 </name>
//    <rw> 
//    <i> [Bits 11..10] RW (@ 0x50001400) Port x configuration bits (y =  0..15) </i>
//    <edit> 
//      <loc> ( (unsigned char)((GPIOF_MODER >> 10) & 0x3), ((GPIOF_MODER = (GPIOF_MODER & ~(0x3UL << 10 )) | ((unsigned long)(Gui_u8:GuiVal & 0x3) << 10 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -----------------------------  Field Item: GPIOF_MODER_MODER4  ---------------------------------
// SVD Line: 7780

//  <item> SFDITEM_FIELD__GPIOF_MODER_MODER4
//    <name> MODER4 </name>
//    <rw> 
//    <i> [Bits 9..8] RW (@ 0x50001400) Port x configuration bits (y =  0..15) </i>
//    <edit> 
//      <loc> ( (unsigned char)((GPIOF_MODER >> 8) & 0x3), ((GPIOF_MODER = (GPIOF_MODER & ~(0x3UL << 8 )) | ((unsigned long)(Gui_u8:GuiVal & 0x3) << 8 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -----------------------------  Field Item: GPIOF_MODER_MODER3  ---------------------------------
// SVD Line: 7787

//  <item> SFDITEM_FIELD__GPIOF_MODER_MODER3
//    <name> MODER3 </name>
//    <rw> 
//    <i> [Bits 7..6] RW (@ 0x50001400) Port x configuration bits (y =  0..15) </i>
//    <edit> 
//      <loc> ( (unsigned char)((GPIOF_MODER >> 6) & 0x3), ((GPIOF_MODER = (GPIOF_MODER & ~(0x3UL << 6 )) | ((unsigned long)(Gui_u8:GuiVal & 0x3) << 6 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -----------------------------  Field Item: GPIOF_MODER_MODER2  ---------------------------------
// SVD Line: 7794

//  <item> SFDITEM_FIELD__GPIOF_MODER_MODER2
//    <name> MODER2 </name>
//    <rw> 
//    <i> [Bits 5..4] RW (@ 0x50001400) Port x configuration bits (y =  0..15) </i>
//    <edit> 
//      <loc> ( (unsigned char)((GPIOF_MODER >> 4) & 0x3), ((GPIOF_MODER = (GPIOF_MODER & ~(0x3UL << 4 )) | ((unsigned long)(Gui_u8:GuiVal & 0x3) << 4 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -----------------------------  Field Item: GPIOF_MODER_MODER1  ---------------------------------
// SVD Line: 7801

//  <item> SFDITEM_FIELD__GPIOF_MODER_MODER1
//    <name> MODER1 </name>
//    <rw> 
//    <i> [Bits 3..2] RW (@ 0x50001400) Port x configuration bits (y =  0..15) </i>
//    <edit> 
//      <loc> ( (unsigned char)((GPIOF_MODER >> 2) & 0x3), ((GPIOF_MODER = (GPIOF_MODER & ~(0x3UL << 2 )) | ((unsigned long)(Gui_u8:GuiVal & 0x3) << 2 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -----------------------------  Field Item: GPIOF_MODER_MODER0  ---------------------------------
// SVD Line: 7808

//  <item> SFDITEM_FIELD__GPIOF_MODER_MODER0
//    <name> MODER0 </name>
//    <rw> 
//    <i> [Bits 1..0] RW (@ 0x50001400) Port x configuration bits (y =  0..15) </i>
//    <edit> 
//      <loc> ( (unsigned char)((GPIOF_MODER >> 0) & 0x3), ((GPIOF_MODER = (GPIOF_MODER & ~(0x3UL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0x3) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -------------------------------  Register RTree: GPIOF_MODER  ----------------------------------
// SVD Line: 7694

//  <rtree> SFDITEM_REG__GPIOF_MODER
//    <name> MODER </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x50001400) GPIO port mode register </i>
//    <loc> ( (unsigned int)((GPIOF_MODER >> 0) & 0xFFFFFFFF), ((GPIOF_MODER = (GPIOF_MODER & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__GPIOF_MODER_MODER15 </item>
//    <item> SFDITEM_FIELD__GPIOF_MODER_MODER14 </item>
//    <item> SFDITEM_FIELD__GPIOF_MODER_MODER13 </item>
//    <item> SFDITEM_FIELD__GPIOF_MODER_MODER12 </item>
//    <item> SFDITEM_FIELD__GPIOF_MODER_MODER11 </item>
//    <item> SFDITEM_FIELD__GPIOF_MODER_MODER10 </item>
//    <item> SFDITEM_FIELD__GPIOF_MODER_MODER9 </item>
//    <item> SFDITEM_FIELD__GPIOF_MODER_MODER8 </item>
//    <item> SFDITEM_FIELD__GPIOF_MODER_MODER7 </item>
//    <item> SFDITEM_FIELD__GPIOF_MODER_MODER6 </item>
//    <item> SFDITEM_FIELD__GPIOF_MODER_MODER5 </item>
//    <item> SFDITEM_FIELD__GPIOF_MODER_MODER4 </item>
//    <item> SFDITEM_FIELD__GPIOF_MODER_MODER3 </item>
//    <item> SFDITEM_FIELD__GPIOF_MODER_MODER2 </item>
//    <item> SFDITEM_FIELD__GPIOF_MODER_MODER1 </item>
//    <item> SFDITEM_FIELD__GPIOF_MODER_MODER0 </item>
//  </rtree>
//  


// ---------------------------  Register Item Address: GPIOF_OTYPER  ------------------------------
// SVD Line: 7817

unsigned int GPIOF_OTYPER __AT (0x50001404);



// ------------------------------  Field Item: GPIOF_OTYPER_OT15  ---------------------------------
// SVD Line: 7826

//  <item> SFDITEM_FIELD__GPIOF_OTYPER_OT15
//    <name> OT15 </name>
//    <rw> 
//    <i> [Bit 15] RW (@ 0x50001404) Port x configuration bits (y =  0..15) </i>
//    <check> 
//      <loc> ( (unsigned int) GPIOF_OTYPER ) </loc>
//      <o.15..15> OT15
//    </check>
//  </item>
//  


// ------------------------------  Field Item: GPIOF_OTYPER_OT14  ---------------------------------
// SVD Line: 7833

//  <item> SFDITEM_FIELD__GPIOF_OTYPER_OT14
//    <name> OT14 </name>
//    <rw> 
//    <i> [Bit 14] RW (@ 0x50001404) Port x configuration bits (y =  0..15) </i>
//    <check> 
//      <loc> ( (unsigned int) GPIOF_OTYPER ) </loc>
//      <o.14..14> OT14
//    </check>
//  </item>
//  


// ------------------------------  Field Item: GPIOF_OTYPER_OT13  ---------------------------------
// SVD Line: 7840

//  <item> SFDITEM_FIELD__GPIOF_OTYPER_OT13
//    <name> OT13 </name>
//    <rw> 
//    <i> [Bit 13] RW (@ 0x50001404) Port x configuration bits (y =  0..15) </i>
//    <check> 
//      <loc> ( (unsigned int) GPIOF_OTYPER ) </loc>
//      <o.13..13> OT13
//    </check>
//  </item>
//  


// ------------------------------  Field Item: GPIOF_OTYPER_OT12  ---------------------------------
// SVD Line: 7847

//  <item> SFDITEM_FIELD__GPIOF_OTYPER_OT12
//    <name> OT12 </name>
//    <rw> 
//    <i> [Bit 12] RW (@ 0x50001404) Port x configuration bits (y =  0..15) </i>
//    <check> 
//      <loc> ( (unsigned int) GPIOF_OTYPER ) </loc>
//      <o.12..12> OT12
//    </check>
//  </item>
//  


// ------------------------------  Field Item: GPIOF_OTYPER_OT11  ---------------------------------
// SVD Line: 7854

//  <item> SFDITEM_FIELD__GPIOF_OTYPER_OT11
//    <name> OT11 </name>
//    <rw> 
//    <i> [Bit 11] RW (@ 0x50001404) Port x configuration bits (y =  0..15) </i>
//    <check> 
//      <loc> ( (unsigned int) GPIOF_OTYPER ) </loc>
//      <o.11..11> OT11
//    </check>
//  </item>
//  


// ------------------------------  Field Item: GPIOF_OTYPER_OT10  ---------------------------------
// SVD Line: 7861

//  <item> SFDITEM_FIELD__GPIOF_OTYPER_OT10
//    <name> OT10 </name>
//    <rw> 
//    <i> [Bit 10] RW (@ 0x50001404) Port x configuration bits (y =  0..15) </i>
//    <check> 
//      <loc> ( (unsigned int) GPIOF_OTYPER ) </loc>
//      <o.10..10> OT10
//    </check>
//  </item>
//  


// ------------------------------  Field Item: GPIOF_OTYPER_OT9  ----------------------------------
// SVD Line: 7868

//  <item> SFDITEM_FIELD__GPIOF_OTYPER_OT9
//    <name> OT9 </name>
//    <rw> 
//    <i> [Bit 9] RW (@ 0x50001404) Port x configuration bits (y =  0..15) </i>
//    <check> 
//      <loc> ( (unsigned int) GPIOF_OTYPER ) </loc>
//      <o.9..9> OT9
//    </check>
//  </item>
//  


// ------------------------------  Field Item: GPIOF_OTYPER_OT8  ----------------------------------
// SVD Line: 7875

//  <item> SFDITEM_FIELD__GPIOF_OTYPER_OT8
//    <name> OT8 </name>
//    <rw> 
//    <i> [Bit 8] RW (@ 0x50001404) Port x configuration bits (y =  0..15) </i>
//    <check> 
//      <loc> ( (unsigned int) GPIOF_OTYPER ) </loc>
//      <o.8..8> OT8
//    </check>
//  </item>
//  


// ------------------------------  Field Item: GPIOF_OTYPER_OT7  ----------------------------------
// SVD Line: 7882

//  <item> SFDITEM_FIELD__GPIOF_OTYPER_OT7
//    <name> OT7 </name>
//    <rw> 
//    <i> [Bit 7] RW (@ 0x50001404) Port x configuration bits (y =  0..15) </i>
//    <check> 
//      <loc> ( (unsigned int) GPIOF_OTYPER ) </loc>
//      <o.7..7> OT7
//    </check>
//  </item>
//  


// ------------------------------  Field Item: GPIOF_OTYPER_OT6  ----------------------------------
// SVD Line: 7889

//  <item> SFDITEM_FIELD__GPIOF_OTYPER_OT6
//    <name> OT6 </name>
//    <rw> 
//    <i> [Bit 6] RW (@ 0x50001404) Port x configuration bits (y =  0..15) </i>
//    <check> 
//      <loc> ( (unsigned int) GPIOF_OTYPER ) </loc>
//      <o.6..6> OT6
//    </check>
//  </item>
//  


// ------------------------------  Field Item: GPIOF_OTYPER_OT5  ----------------------------------
// SVD Line: 7896

//  <item> SFDITEM_FIELD__GPIOF_OTYPER_OT5
//    <name> OT5 </name>
//    <rw> 
//    <i> [Bit 5] RW (@ 0x50001404) Port x configuration bits (y =  0..15) </i>
//    <check> 
//      <loc> ( (unsigned int) GPIOF_OTYPER ) </loc>
//      <o.5..5> OT5
//    </check>
//  </item>
//  


// ------------------------------  Field Item: GPIOF_OTYPER_OT4  ----------------------------------
// SVD Line: 7903

//  <item> SFDITEM_FIELD__GPIOF_OTYPER_OT4
//    <name> OT4 </name>
//    <rw> 
//    <i> [Bit 4] RW (@ 0x50001404) Port x configuration bits (y =  0..15) </i>
//    <check> 
//      <loc> ( (unsigned int) GPIOF_OTYPER ) </loc>
//      <o.4..4> OT4
//    </check>
//  </item>
//  


// ------------------------------  Field Item: GPIOF_OTYPER_OT3  ----------------------------------
// SVD Line: 7910

//  <item> SFDITEM_FIELD__GPIOF_OTYPER_OT3
//    <name> OT3 </name>
//    <rw> 
//    <i> [Bit 3] RW (@ 0x50001404) Port x configuration bits (y =  0..15) </i>
//    <check> 
//      <loc> ( (unsigned int) GPIOF_OTYPER ) </loc>
//      <o.3..3> OT3
//    </check>
//  </item>
//  


// ------------------------------  Field Item: GPIOF_OTYPER_OT2  ----------------------------------
// SVD Line: 7917

//  <item> SFDITEM_FIELD__GPIOF_OTYPER_OT2
//    <name> OT2 </name>
//    <rw> 
//    <i> [Bit 2] RW (@ 0x50001404) Port x configuration bits (y =  0..15) </i>
//    <check> 
//      <loc> ( (unsigned int) GPIOF_OTYPER ) </loc>
//      <o.2..2> OT2
//    </check>
//  </item>
//  


// ------------------------------  Field Item: GPIOF_OTYPER_OT1  ----------------------------------
// SVD Line: 7924

//  <item> SFDITEM_FIELD__GPIOF_OTYPER_OT1
//    <name> OT1 </name>
//    <rw> 
//    <i> [Bit 1] RW (@ 0x50001404) Port x configuration bits (y =  0..15) </i>
//    <check> 
//      <loc> ( (unsigned int) GPIOF_OTYPER ) </loc>
//      <o.1..1> OT1
//    </check>
//  </item>
//  


// ------------------------------  Field Item: GPIOF_OTYPER_OT0  ----------------------------------
// SVD Line: 7931

//  <item> SFDITEM_FIELD__GPIOF_OTYPER_OT0
//    <name> OT0 </name>
//    <rw> 
//    <i> [Bit 0] RW (@ 0x50001404) Port x configuration bits (y =  0..15) </i>
//    <check> 
//      <loc> ( (unsigned int) GPIOF_OTYPER ) </loc>
//      <o.0..0> OT0
//    </check>
//  </item>
//  


// ------------------------------  Register RTree: GPIOF_OTYPER  ----------------------------------
// SVD Line: 7817

//  <rtree> SFDITEM_REG__GPIOF_OTYPER
//    <name> OTYPER </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x50001404) GPIO port output type register </i>
//    <loc> ( (unsigned int)((GPIOF_OTYPER >> 0) & 0xFFFFFFFF), ((GPIOF_OTYPER = (GPIOF_OTYPER & ~(0xFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__GPIOF_OTYPER_OT15 </item>
//    <item> SFDITEM_FIELD__GPIOF_OTYPER_OT14 </item>
//    <item> SFDITEM_FIELD__GPIOF_OTYPER_OT13 </item>
//    <item> SFDITEM_FIELD__GPIOF_OTYPER_OT12 </item>
//    <item> SFDITEM_FIELD__GPIOF_OTYPER_OT11 </item>
//    <item> SFDITEM_FIELD__GPIOF_OTYPER_OT10 </item>
//    <item> SFDITEM_FIELD__GPIOF_OTYPER_OT9 </item>
//    <item> SFDITEM_FIELD__GPIOF_OTYPER_OT8 </item>
//    <item> SFDITEM_FIELD__GPIOF_OTYPER_OT7 </item>
//    <item> SFDITEM_FIELD__GPIOF_OTYPER_OT6 </item>
//    <item> SFDITEM_FIELD__GPIOF_OTYPER_OT5 </item>
//    <item> SFDITEM_FIELD__GPIOF_OTYPER_OT4 </item>
//    <item> SFDITEM_FIELD__GPIOF_OTYPER_OT3 </item>
//    <item> SFDITEM_FIELD__GPIOF_OTYPER_OT2 </item>
//    <item> SFDITEM_FIELD__GPIOF_OTYPER_OT1 </item>
//    <item> SFDITEM_FIELD__GPIOF_OTYPER_OT0 </item>
//  </rtree>
//  


// --------------------------  Register Item Address: GPIOF_OSPEEDR  ------------------------------
// SVD Line: 7940

unsigned int GPIOF_OSPEEDR __AT (0x50001408);



// ---------------------------  Field Item: GPIOF_OSPEEDR_OSPEEDR15  ------------------------------
// SVD Line: 7950

//  <item> SFDITEM_FIELD__GPIOF_OSPEEDR_OSPEEDR15
//    <name> OSPEEDR15 </name>
//    <rw> 
//    <i> [Bits 31..30] RW (@ 0x50001408) Port x configuration bits (y =  0..15) </i>
//    <edit> 
//      <loc> ( (unsigned char)((GPIOF_OSPEEDR >> 30) & 0x3), ((GPIOF_OSPEEDR = (GPIOF_OSPEEDR & ~(0x3UL << 30 )) | ((unsigned long)(Gui_u8:GuiVal & 0x3) << 30 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ---------------------------  Field Item: GPIOF_OSPEEDR_OSPEEDR14  ------------------------------
// SVD Line: 7957

//  <item> SFDITEM_FIELD__GPIOF_OSPEEDR_OSPEEDR14
//    <name> OSPEEDR14 </name>
//    <rw> 
//    <i> [Bits 29..28] RW (@ 0x50001408) Port x configuration bits (y =  0..15) </i>
//    <edit> 
//      <loc> ( (unsigned char)((GPIOF_OSPEEDR >> 28) & 0x3), ((GPIOF_OSPEEDR = (GPIOF_OSPEEDR & ~(0x3UL << 28 )) | ((unsigned long)(Gui_u8:GuiVal & 0x3) << 28 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ---------------------------  Field Item: GPIOF_OSPEEDR_OSPEEDR13  ------------------------------
// SVD Line: 7964

//  <item> SFDITEM_FIELD__GPIOF_OSPEEDR_OSPEEDR13
//    <name> OSPEEDR13 </name>
//    <rw> 
//    <i> [Bits 27..26] RW (@ 0x50001408) Port x configuration bits (y =  0..15) </i>
//    <edit> 
//      <loc> ( (unsigned char)((GPIOF_OSPEEDR >> 26) & 0x3), ((GPIOF_OSPEEDR = (GPIOF_OSPEEDR & ~(0x3UL << 26 )) | ((unsigned long)(Gui_u8:GuiVal & 0x3) << 26 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ---------------------------  Field Item: GPIOF_OSPEEDR_OSPEEDR12  ------------------------------
// SVD Line: 7971

//  <item> SFDITEM_FIELD__GPIOF_OSPEEDR_OSPEEDR12
//    <name> OSPEEDR12 </name>
//    <rw> 
//    <i> [Bits 25..24] RW (@ 0x50001408) Port x configuration bits (y =  0..15) </i>
//    <edit> 
//      <loc> ( (unsigned char)((GPIOF_OSPEEDR >> 24) & 0x3), ((GPIOF_OSPEEDR = (GPIOF_OSPEEDR & ~(0x3UL << 24 )) | ((unsigned long)(Gui_u8:GuiVal & 0x3) << 24 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ---------------------------  Field Item: GPIOF_OSPEEDR_OSPEEDR11  ------------------------------
// SVD Line: 7978

//  <item> SFDITEM_FIELD__GPIOF_OSPEEDR_OSPEEDR11
//    <name> OSPEEDR11 </name>
//    <rw> 
//    <i> [Bits 23..22] RW (@ 0x50001408) Port x configuration bits (y =  0..15) </i>
//    <edit> 
//      <loc> ( (unsigned char)((GPIOF_OSPEEDR >> 22) & 0x3), ((GPIOF_OSPEEDR = (GPIOF_OSPEEDR & ~(0x3UL << 22 )) | ((unsigned long)(Gui_u8:GuiVal & 0x3) << 22 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ---------------------------  Field Item: GPIOF_OSPEEDR_OSPEEDR10  ------------------------------
// SVD Line: 7985

//  <item> SFDITEM_FIELD__GPIOF_OSPEEDR_OSPEEDR10
//    <name> OSPEEDR10 </name>
//    <rw> 
//    <i> [Bits 21..20] RW (@ 0x50001408) Port x configuration bits (y =  0..15) </i>
//    <edit> 
//      <loc> ( (unsigned char)((GPIOF_OSPEEDR >> 20) & 0x3), ((GPIOF_OSPEEDR = (GPIOF_OSPEEDR & ~(0x3UL << 20 )) | ((unsigned long)(Gui_u8:GuiVal & 0x3) << 20 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ---------------------------  Field Item: GPIOF_OSPEEDR_OSPEEDR9  -------------------------------
// SVD Line: 7992

//  <item> SFDITEM_FIELD__GPIOF_OSPEEDR_OSPEEDR9
//    <name> OSPEEDR9 </name>
//    <rw> 
//    <i> [Bits 19..18] RW (@ 0x50001408) Port x configuration bits (y =  0..15) </i>
//    <edit> 
//      <loc> ( (unsigned char)((GPIOF_OSPEEDR >> 18) & 0x3), ((GPIOF_OSPEEDR = (GPIOF_OSPEEDR & ~(0x3UL << 18 )) | ((unsigned long)(Gui_u8:GuiVal & 0x3) << 18 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ---------------------------  Field Item: GPIOF_OSPEEDR_OSPEEDR8  -------------------------------
// SVD Line: 7999

//  <item> SFDITEM_FIELD__GPIOF_OSPEEDR_OSPEEDR8
//    <name> OSPEEDR8 </name>
//    <rw> 
//    <i> [Bits 17..16] RW (@ 0x50001408) Port x configuration bits (y =  0..15) </i>
//    <edit> 
//      <loc> ( (unsigned char)((GPIOF_OSPEEDR >> 16) & 0x3), ((GPIOF_OSPEEDR = (GPIOF_OSPEEDR & ~(0x3UL << 16 )) | ((unsigned long)(Gui_u8:GuiVal & 0x3) << 16 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ---------------------------  Field Item: GPIOF_OSPEEDR_OSPEEDR7  -------------------------------
// SVD Line: 8006

//  <item> SFDITEM_FIELD__GPIOF_OSPEEDR_OSPEEDR7
//    <name> OSPEEDR7 </name>
//    <rw> 
//    <i> [Bits 15..14] RW (@ 0x50001408) Port x configuration bits (y =  0..15) </i>
//    <edit> 
//      <loc> ( (unsigned char)((GPIOF_OSPEEDR >> 14) & 0x3), ((GPIOF_OSPEEDR = (GPIOF_OSPEEDR & ~(0x3UL << 14 )) | ((unsigned long)(Gui_u8:GuiVal & 0x3) << 14 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ---------------------------  Field Item: GPIOF_OSPEEDR_OSPEEDR6  -------------------------------
// SVD Line: 8013

//  <item> SFDITEM_FIELD__GPIOF_OSPEEDR_OSPEEDR6
//    <name> OSPEEDR6 </name>
//    <rw> 
//    <i> [Bits 13..12] RW (@ 0x50001408) Port x configuration bits (y =  0..15) </i>
//    <edit> 
//      <loc> ( (unsigned char)((GPIOF_OSPEEDR >> 12) & 0x3), ((GPIOF_OSPEEDR = (GPIOF_OSPEEDR & ~(0x3UL << 12 )) | ((unsigned long)(Gui_u8:GuiVal & 0x3) << 12 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ---------------------------  Field Item: GPIOF_OSPEEDR_OSPEEDR5  -------------------------------
// SVD Line: 8020

//  <item> SFDITEM_FIELD__GPIOF_OSPEEDR_OSPEEDR5
//    <name> OSPEEDR5 </name>
//    <rw> 
//    <i> [Bits 11..10] RW (@ 0x50001408) Port x configuration bits (y =  0..15) </i>
//    <edit> 
//      <loc> ( (unsigned char)((GPIOF_OSPEEDR >> 10) & 0x3), ((GPIOF_OSPEEDR = (GPIOF_OSPEEDR & ~(0x3UL << 10 )) | ((unsigned long)(Gui_u8:GuiVal & 0x3) << 10 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ---------------------------  Field Item: GPIOF_OSPEEDR_OSPEEDR4  -------------------------------
// SVD Line: 8027

//  <item> SFDITEM_FIELD__GPIOF_OSPEEDR_OSPEEDR4
//    <name> OSPEEDR4 </name>
//    <rw> 
//    <i> [Bits 9..8] RW (@ 0x50001408) Port x configuration bits (y =  0..15) </i>
//    <edit> 
//      <loc> ( (unsigned char)((GPIOF_OSPEEDR >> 8) & 0x3), ((GPIOF_OSPEEDR = (GPIOF_OSPEEDR & ~(0x3UL << 8 )) | ((unsigned long)(Gui_u8:GuiVal & 0x3) << 8 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ---------------------------  Field Item: GPIOF_OSPEEDR_OSPEEDR3  -------------------------------
// SVD Line: 8034

//  <item> SFDITEM_FIELD__GPIOF_OSPEEDR_OSPEEDR3
//    <name> OSPEEDR3 </name>
//    <rw> 
//    <i> [Bits 7..6] RW (@ 0x50001408) Port x configuration bits (y =  0..15) </i>
//    <edit> 
//      <loc> ( (unsigned char)((GPIOF_OSPEEDR >> 6) & 0x3), ((GPIOF_OSPEEDR = (GPIOF_OSPEEDR & ~(0x3UL << 6 )) | ((unsigned long)(Gui_u8:GuiVal & 0x3) << 6 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ---------------------------  Field Item: GPIOF_OSPEEDR_OSPEEDR2  -------------------------------
// SVD Line: 8041

//  <item> SFDITEM_FIELD__GPIOF_OSPEEDR_OSPEEDR2
//    <name> OSPEEDR2 </name>
//    <rw> 
//    <i> [Bits 5..4] RW (@ 0x50001408) Port x configuration bits (y =  0..15) </i>
//    <edit> 
//      <loc> ( (unsigned char)((GPIOF_OSPEEDR >> 4) & 0x3), ((GPIOF_OSPEEDR = (GPIOF_OSPEEDR & ~(0x3UL << 4 )) | ((unsigned long)(Gui_u8:GuiVal & 0x3) << 4 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ---------------------------  Field Item: GPIOF_OSPEEDR_OSPEEDR1  -------------------------------
// SVD Line: 8048

//  <item> SFDITEM_FIELD__GPIOF_OSPEEDR_OSPEEDR1
//    <name> OSPEEDR1 </name>
//    <rw> 
//    <i> [Bits 3..2] RW (@ 0x50001408) Port x configuration bits (y =  0..15) </i>
//    <edit> 
//      <loc> ( (unsigned char)((GPIOF_OSPEEDR >> 2) & 0x3), ((GPIOF_OSPEEDR = (GPIOF_OSPEEDR & ~(0x3UL << 2 )) | ((unsigned long)(Gui_u8:GuiVal & 0x3) << 2 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ---------------------------  Field Item: GPIOF_OSPEEDR_OSPEEDR0  -------------------------------
// SVD Line: 8055

//  <item> SFDITEM_FIELD__GPIOF_OSPEEDR_OSPEEDR0
//    <name> OSPEEDR0 </name>
//    <rw> 
//    <i> [Bits 1..0] RW (@ 0x50001408) Port x configuration bits (y =  0..15) </i>
//    <edit> 
//      <loc> ( (unsigned char)((GPIOF_OSPEEDR >> 0) & 0x3), ((GPIOF_OSPEEDR = (GPIOF_OSPEEDR & ~(0x3UL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0x3) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ------------------------------  Register RTree: GPIOF_OSPEEDR  ---------------------------------
// SVD Line: 7940

//  <rtree> SFDITEM_REG__GPIOF_OSPEEDR
//    <name> OSPEEDR </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x50001408) GPIO port output speed  register </i>
//    <loc> ( (unsigned int)((GPIOF_OSPEEDR >> 0) & 0xFFFFFFFF), ((GPIOF_OSPEEDR = (GPIOF_OSPEEDR & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__GPIOF_OSPEEDR_OSPEEDR15 </item>
//    <item> SFDITEM_FIELD__GPIOF_OSPEEDR_OSPEEDR14 </item>
//    <item> SFDITEM_FIELD__GPIOF_OSPEEDR_OSPEEDR13 </item>
//    <item> SFDITEM_FIELD__GPIOF_OSPEEDR_OSPEEDR12 </item>
//    <item> SFDITEM_FIELD__GPIOF_OSPEEDR_OSPEEDR11 </item>
//    <item> SFDITEM_FIELD__GPIOF_OSPEEDR_OSPEEDR10 </item>
//    <item> SFDITEM_FIELD__GPIOF_OSPEEDR_OSPEEDR9 </item>
//    <item> SFDITEM_FIELD__GPIOF_OSPEEDR_OSPEEDR8 </item>
//    <item> SFDITEM_FIELD__GPIOF_OSPEEDR_OSPEEDR7 </item>
//    <item> SFDITEM_FIELD__GPIOF_OSPEEDR_OSPEEDR6 </item>
//    <item> SFDITEM_FIELD__GPIOF_OSPEEDR_OSPEEDR5 </item>
//    <item> SFDITEM_FIELD__GPIOF_OSPEEDR_OSPEEDR4 </item>
//    <item> SFDITEM_FIELD__GPIOF_OSPEEDR_OSPEEDR3 </item>
//    <item> SFDITEM_FIELD__GPIOF_OSPEEDR_OSPEEDR2 </item>
//    <item> SFDITEM_FIELD__GPIOF_OSPEEDR_OSPEEDR1 </item>
//    <item> SFDITEM_FIELD__GPIOF_OSPEEDR_OSPEEDR0 </item>
//  </rtree>
//  


// ---------------------------  Register Item Address: GPIOF_PUPDR  -------------------------------
// SVD Line: 8064

unsigned int GPIOF_PUPDR __AT (0x5000140C);



// -----------------------------  Field Item: GPIOF_PUPDR_PUPDR15  --------------------------------
// SVD Line: 8074

//  <item> SFDITEM_FIELD__GPIOF_PUPDR_PUPDR15
//    <name> PUPDR15 </name>
//    <rw> 
//    <i> [Bits 31..30] RW (@ 0x5000140C) Port x configuration bits (y =  0..15) </i>
//    <edit> 
//      <loc> ( (unsigned char)((GPIOF_PUPDR >> 30) & 0x3), ((GPIOF_PUPDR = (GPIOF_PUPDR & ~(0x3UL << 30 )) | ((unsigned long)(Gui_u8:GuiVal & 0x3) << 30 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -----------------------------  Field Item: GPIOF_PUPDR_PUPDR14  --------------------------------
// SVD Line: 8081

//  <item> SFDITEM_FIELD__GPIOF_PUPDR_PUPDR14
//    <name> PUPDR14 </name>
//    <rw> 
//    <i> [Bits 29..28] RW (@ 0x5000140C) Port x configuration bits (y =  0..15) </i>
//    <edit> 
//      <loc> ( (unsigned char)((GPIOF_PUPDR >> 28) & 0x3), ((GPIOF_PUPDR = (GPIOF_PUPDR & ~(0x3UL << 28 )) | ((unsigned long)(Gui_u8:GuiVal & 0x3) << 28 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -----------------------------  Field Item: GPIOF_PUPDR_PUPDR13  --------------------------------
// SVD Line: 8088

//  <item> SFDITEM_FIELD__GPIOF_PUPDR_PUPDR13
//    <name> PUPDR13 </name>
//    <rw> 
//    <i> [Bits 27..26] RW (@ 0x5000140C) Port x configuration bits (y =  0..15) </i>
//    <edit> 
//      <loc> ( (unsigned char)((GPIOF_PUPDR >> 26) & 0x3), ((GPIOF_PUPDR = (GPIOF_PUPDR & ~(0x3UL << 26 )) | ((unsigned long)(Gui_u8:GuiVal & 0x3) << 26 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -----------------------------  Field Item: GPIOF_PUPDR_PUPDR12  --------------------------------
// SVD Line: 8095

//  <item> SFDITEM_FIELD__GPIOF_PUPDR_PUPDR12
//    <name> PUPDR12 </name>
//    <rw> 
//    <i> [Bits 25..24] RW (@ 0x5000140C) Port x configuration bits (y =  0..15) </i>
//    <edit> 
//      <loc> ( (unsigned char)((GPIOF_PUPDR >> 24) & 0x3), ((GPIOF_PUPDR = (GPIOF_PUPDR & ~(0x3UL << 24 )) | ((unsigned long)(Gui_u8:GuiVal & 0x3) << 24 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -----------------------------  Field Item: GPIOF_PUPDR_PUPDR11  --------------------------------
// SVD Line: 8102

//  <item> SFDITEM_FIELD__GPIOF_PUPDR_PUPDR11
//    <name> PUPDR11 </name>
//    <rw> 
//    <i> [Bits 23..22] RW (@ 0x5000140C) Port x configuration bits (y =  0..15) </i>
//    <edit> 
//      <loc> ( (unsigned char)((GPIOF_PUPDR >> 22) & 0x3), ((GPIOF_PUPDR = (GPIOF_PUPDR & ~(0x3UL << 22 )) | ((unsigned long)(Gui_u8:GuiVal & 0x3) << 22 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -----------------------------  Field Item: GPIOF_PUPDR_PUPDR10  --------------------------------
// SVD Line: 8109

//  <item> SFDITEM_FIELD__GPIOF_PUPDR_PUPDR10
//    <name> PUPDR10 </name>
//    <rw> 
//    <i> [Bits 21..20] RW (@ 0x5000140C) Port x configuration bits (y =  0..15) </i>
//    <edit> 
//      <loc> ( (unsigned char)((GPIOF_PUPDR >> 20) & 0x3), ((GPIOF_PUPDR = (GPIOF_PUPDR & ~(0x3UL << 20 )) | ((unsigned long)(Gui_u8:GuiVal & 0x3) << 20 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -----------------------------  Field Item: GPIOF_PUPDR_PUPDR9  ---------------------------------
// SVD Line: 8116

//  <item> SFDITEM_FIELD__GPIOF_PUPDR_PUPDR9
//    <name> PUPDR9 </name>
//    <rw> 
//    <i> [Bits 19..18] RW (@ 0x5000140C) Port x configuration bits (y =  0..15) </i>
//    <edit> 
//      <loc> ( (unsigned char)((GPIOF_PUPDR >> 18) & 0x3), ((GPIOF_PUPDR = (GPIOF_PUPDR & ~(0x3UL << 18 )) | ((unsigned long)(Gui_u8:GuiVal & 0x3) << 18 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -----------------------------  Field Item: GPIOF_PUPDR_PUPDR8  ---------------------------------
// SVD Line: 8123

//  <item> SFDITEM_FIELD__GPIOF_PUPDR_PUPDR8
//    <name> PUPDR8 </name>
//    <rw> 
//    <i> [Bits 17..16] RW (@ 0x5000140C) Port x configuration bits (y =  0..15) </i>
//    <edit> 
//      <loc> ( (unsigned char)((GPIOF_PUPDR >> 16) & 0x3), ((GPIOF_PUPDR = (GPIOF_PUPDR & ~(0x3UL << 16 )) | ((unsigned long)(Gui_u8:GuiVal & 0x3) << 16 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -----------------------------  Field Item: GPIOF_PUPDR_PUPDR7  ---------------------------------
// SVD Line: 8130

//  <item> SFDITEM_FIELD__GPIOF_PUPDR_PUPDR7
//    <name> PUPDR7 </name>
//    <rw> 
//    <i> [Bits 15..14] RW (@ 0x5000140C) Port x configuration bits (y =  0..15) </i>
//    <edit> 
//      <loc> ( (unsigned char)((GPIOF_PUPDR >> 14) & 0x3), ((GPIOF_PUPDR = (GPIOF_PUPDR & ~(0x3UL << 14 )) | ((unsigned long)(Gui_u8:GuiVal & 0x3) << 14 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -----------------------------  Field Item: GPIOF_PUPDR_PUPDR6  ---------------------------------
// SVD Line: 8137

//  <item> SFDITEM_FIELD__GPIOF_PUPDR_PUPDR6
//    <name> PUPDR6 </name>
//    <rw> 
//    <i> [Bits 13..12] RW (@ 0x5000140C) Port x configuration bits (y =  0..15) </i>
//    <edit> 
//      <loc> ( (unsigned char)((GPIOF_PUPDR >> 12) & 0x3), ((GPIOF_PUPDR = (GPIOF_PUPDR & ~(0x3UL << 12 )) | ((unsigned long)(Gui_u8:GuiVal & 0x3) << 12 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -----------------------------  Field Item: GPIOF_PUPDR_PUPDR5  ---------------------------------
// SVD Line: 8144

//  <item> SFDITEM_FIELD__GPIOF_PUPDR_PUPDR5
//    <name> PUPDR5 </name>
//    <rw> 
//    <i> [Bits 11..10] RW (@ 0x5000140C) Port x configuration bits (y =  0..15) </i>
//    <edit> 
//      <loc> ( (unsigned char)((GPIOF_PUPDR >> 10) & 0x3), ((GPIOF_PUPDR = (GPIOF_PUPDR & ~(0x3UL << 10 )) | ((unsigned long)(Gui_u8:GuiVal & 0x3) << 10 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -----------------------------  Field Item: GPIOF_PUPDR_PUPDR4  ---------------------------------
// SVD Line: 8151

//  <item> SFDITEM_FIELD__GPIOF_PUPDR_PUPDR4
//    <name> PUPDR4 </name>
//    <rw> 
//    <i> [Bits 9..8] RW (@ 0x5000140C) Port x configuration bits (y =  0..15) </i>
//    <edit> 
//      <loc> ( (unsigned char)((GPIOF_PUPDR >> 8) & 0x3), ((GPIOF_PUPDR = (GPIOF_PUPDR & ~(0x3UL << 8 )) | ((unsigned long)(Gui_u8:GuiVal & 0x3) << 8 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -----------------------------  Field Item: GPIOF_PUPDR_PUPDR3  ---------------------------------
// SVD Line: 8158

//  <item> SFDITEM_FIELD__GPIOF_PUPDR_PUPDR3
//    <name> PUPDR3 </name>
//    <rw> 
//    <i> [Bits 7..6] RW (@ 0x5000140C) Port x configuration bits (y =  0..15) </i>
//    <edit> 
//      <loc> ( (unsigned char)((GPIOF_PUPDR >> 6) & 0x3), ((GPIOF_PUPDR = (GPIOF_PUPDR & ~(0x3UL << 6 )) | ((unsigned long)(Gui_u8:GuiVal & 0x3) << 6 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -----------------------------  Field Item: GPIOF_PUPDR_PUPDR2  ---------------------------------
// SVD Line: 8165

//  <item> SFDITEM_FIELD__GPIOF_PUPDR_PUPDR2
//    <name> PUPDR2 </name>
//    <rw> 
//    <i> [Bits 5..4] RW (@ 0x5000140C) Port x configuration bits (y =  0..15) </i>
//    <edit> 
//      <loc> ( (unsigned char)((GPIOF_PUPDR >> 4) & 0x3), ((GPIOF_PUPDR = (GPIOF_PUPDR & ~(0x3UL << 4 )) | ((unsigned long)(Gui_u8:GuiVal & 0x3) << 4 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -----------------------------  Field Item: GPIOF_PUPDR_PUPDR1  ---------------------------------
// SVD Line: 8172

//  <item> SFDITEM_FIELD__GPIOF_PUPDR_PUPDR1
//    <name> PUPDR1 </name>
//    <rw> 
//    <i> [Bits 3..2] RW (@ 0x5000140C) Port x configuration bits (y =  0..15) </i>
//    <edit> 
//      <loc> ( (unsigned char)((GPIOF_PUPDR >> 2) & 0x3), ((GPIOF_PUPDR = (GPIOF_PUPDR & ~(0x3UL << 2 )) | ((unsigned long)(Gui_u8:GuiVal & 0x3) << 2 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -----------------------------  Field Item: GPIOF_PUPDR_PUPDR0  ---------------------------------
// SVD Line: 8179

//  <item> SFDITEM_FIELD__GPIOF_PUPDR_PUPDR0
//    <name> PUPDR0 </name>
//    <rw> 
//    <i> [Bits 1..0] RW (@ 0x5000140C) Port x configuration bits (y =  0..15) </i>
//    <edit> 
//      <loc> ( (unsigned char)((GPIOF_PUPDR >> 0) & 0x3), ((GPIOF_PUPDR = (GPIOF_PUPDR & ~(0x3UL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0x3) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -------------------------------  Register RTree: GPIOF_PUPDR  ----------------------------------
// SVD Line: 8064

//  <rtree> SFDITEM_REG__GPIOF_PUPDR
//    <name> PUPDR </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x5000140C) GPIO port pull-up/pull-down  register </i>
//    <loc> ( (unsigned int)((GPIOF_PUPDR >> 0) & 0xFFFFFFFF), ((GPIOF_PUPDR = (GPIOF_PUPDR & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__GPIOF_PUPDR_PUPDR15 </item>
//    <item> SFDITEM_FIELD__GPIOF_PUPDR_PUPDR14 </item>
//    <item> SFDITEM_FIELD__GPIOF_PUPDR_PUPDR13 </item>
//    <item> SFDITEM_FIELD__GPIOF_PUPDR_PUPDR12 </item>
//    <item> SFDITEM_FIELD__GPIOF_PUPDR_PUPDR11 </item>
//    <item> SFDITEM_FIELD__GPIOF_PUPDR_PUPDR10 </item>
//    <item> SFDITEM_FIELD__GPIOF_PUPDR_PUPDR9 </item>
//    <item> SFDITEM_FIELD__GPIOF_PUPDR_PUPDR8 </item>
//    <item> SFDITEM_FIELD__GPIOF_PUPDR_PUPDR7 </item>
//    <item> SFDITEM_FIELD__GPIOF_PUPDR_PUPDR6 </item>
//    <item> SFDITEM_FIELD__GPIOF_PUPDR_PUPDR5 </item>
//    <item> SFDITEM_FIELD__GPIOF_PUPDR_PUPDR4 </item>
//    <item> SFDITEM_FIELD__GPIOF_PUPDR_PUPDR3 </item>
//    <item> SFDITEM_FIELD__GPIOF_PUPDR_PUPDR2 </item>
//    <item> SFDITEM_FIELD__GPIOF_PUPDR_PUPDR1 </item>
//    <item> SFDITEM_FIELD__GPIOF_PUPDR_PUPDR0 </item>
//  </rtree>
//  


// ----------------------------  Register Item Address: GPIOF_IDR  --------------------------------
// SVD Line: 8188

unsigned int GPIOF_IDR __AT (0x50001410);



// -------------------------------  Field Item: GPIOF_IDR_IDR15  ----------------------------------
// SVD Line: 8197

//  <item> SFDITEM_FIELD__GPIOF_IDR_IDR15
//    <name> IDR15 </name>
//    <r> 
//    <i> [Bit 15] RO (@ 0x50001410) Port input data (y =  0..15) </i>
//    <check> 
//      <loc> ( (unsigned int) GPIOF_IDR ) </loc>
//      <o.15..15> IDR15
//    </check>
//  </item>
//  


// -------------------------------  Field Item: GPIOF_IDR_IDR14  ----------------------------------
// SVD Line: 8204

//  <item> SFDITEM_FIELD__GPIOF_IDR_IDR14
//    <name> IDR14 </name>
//    <r> 
//    <i> [Bit 14] RO (@ 0x50001410) Port input data (y =  0..15) </i>
//    <check> 
//      <loc> ( (unsigned int) GPIOF_IDR ) </loc>
//      <o.14..14> IDR14
//    </check>
//  </item>
//  


// -------------------------------  Field Item: GPIOF_IDR_IDR13  ----------------------------------
// SVD Line: 8211

//  <item> SFDITEM_FIELD__GPIOF_IDR_IDR13
//    <name> IDR13 </name>
//    <r> 
//    <i> [Bit 13] RO (@ 0x50001410) Port input data (y =  0..15) </i>
//    <check> 
//      <loc> ( (unsigned int) GPIOF_IDR ) </loc>
//      <o.13..13> IDR13
//    </check>
//  </item>
//  


// -------------------------------  Field Item: GPIOF_IDR_IDR12  ----------------------------------
// SVD Line: 8218

//  <item> SFDITEM_FIELD__GPIOF_IDR_IDR12
//    <name> IDR12 </name>
//    <r> 
//    <i> [Bit 12] RO (@ 0x50001410) Port input data (y =  0..15) </i>
//    <check> 
//      <loc> ( (unsigned int) GPIOF_IDR ) </loc>
//      <o.12..12> IDR12
//    </check>
//  </item>
//  


// -------------------------------  Field Item: GPIOF_IDR_IDR11  ----------------------------------
// SVD Line: 8225

//  <item> SFDITEM_FIELD__GPIOF_IDR_IDR11
//    <name> IDR11 </name>
//    <r> 
//    <i> [Bit 11] RO (@ 0x50001410) Port input data (y =  0..15) </i>
//    <check> 
//      <loc> ( (unsigned int) GPIOF_IDR ) </loc>
//      <o.11..11> IDR11
//    </check>
//  </item>
//  


// -------------------------------  Field Item: GPIOF_IDR_IDR10  ----------------------------------
// SVD Line: 8232

//  <item> SFDITEM_FIELD__GPIOF_IDR_IDR10
//    <name> IDR10 </name>
//    <r> 
//    <i> [Bit 10] RO (@ 0x50001410) Port input data (y =  0..15) </i>
//    <check> 
//      <loc> ( (unsigned int) GPIOF_IDR ) </loc>
//      <o.10..10> IDR10
//    </check>
//  </item>
//  


// -------------------------------  Field Item: GPIOF_IDR_IDR9  -----------------------------------
// SVD Line: 8239

//  <item> SFDITEM_FIELD__GPIOF_IDR_IDR9
//    <name> IDR9 </name>
//    <r> 
//    <i> [Bit 9] RO (@ 0x50001410) Port input data (y =  0..15) </i>
//    <check> 
//      <loc> ( (unsigned int) GPIOF_IDR ) </loc>
//      <o.9..9> IDR9
//    </check>
//  </item>
//  


// -------------------------------  Field Item: GPIOF_IDR_IDR8  -----------------------------------
// SVD Line: 8246

//  <item> SFDITEM_FIELD__GPIOF_IDR_IDR8
//    <name> IDR8 </name>
//    <r> 
//    <i> [Bit 8] RO (@ 0x50001410) Port input data (y =  0..15) </i>
//    <check> 
//      <loc> ( (unsigned int) GPIOF_IDR ) </loc>
//      <o.8..8> IDR8
//    </check>
//  </item>
//  


// -------------------------------  Field Item: GPIOF_IDR_IDR7  -----------------------------------
// SVD Line: 8253

//  <item> SFDITEM_FIELD__GPIOF_IDR_IDR7
//    <name> IDR7 </name>
//    <r> 
//    <i> [Bit 7] RO (@ 0x50001410) Port input data (y =  0..15) </i>
//    <check> 
//      <loc> ( (unsigned int) GPIOF_IDR ) </loc>
//      <o.7..7> IDR7
//    </check>
//  </item>
//  


// -------------------------------  Field Item: GPIOF_IDR_IDR6  -----------------------------------
// SVD Line: 8260

//  <item> SFDITEM_FIELD__GPIOF_IDR_IDR6
//    <name> IDR6 </name>
//    <r> 
//    <i> [Bit 6] RO (@ 0x50001410) Port input data (y =  0..15) </i>
//    <check> 
//      <loc> ( (unsigned int) GPIOF_IDR ) </loc>
//      <o.6..6> IDR6
//    </check>
//  </item>
//  


// -------------------------------  Field Item: GPIOF_IDR_IDR5  -----------------------------------
// SVD Line: 8267

//  <item> SFDITEM_FIELD__GPIOF_IDR_IDR5
//    <name> IDR5 </name>
//    <r> 
//    <i> [Bit 5] RO (@ 0x50001410) Port input data (y =  0..15) </i>
//    <check> 
//      <loc> ( (unsigned int) GPIOF_IDR ) </loc>
//      <o.5..5> IDR5
//    </check>
//  </item>
//  


// -------------------------------  Field Item: GPIOF_IDR_IDR4  -----------------------------------
// SVD Line: 8274

//  <item> SFDITEM_FIELD__GPIOF_IDR_IDR4
//    <name> IDR4 </name>
//    <r> 
//    <i> [Bit 4] RO (@ 0x50001410) Port input data (y =  0..15) </i>
//    <check> 
//      <loc> ( (unsigned int) GPIOF_IDR ) </loc>
//      <o.4..4> IDR4
//    </check>
//  </item>
//  


// -------------------------------  Field Item: GPIOF_IDR_IDR3  -----------------------------------
// SVD Line: 8281

//  <item> SFDITEM_FIELD__GPIOF_IDR_IDR3
//    <name> IDR3 </name>
//    <r> 
//    <i> [Bit 3] RO (@ 0x50001410) Port input data (y =  0..15) </i>
//    <check> 
//      <loc> ( (unsigned int) GPIOF_IDR ) </loc>
//      <o.3..3> IDR3
//    </check>
//  </item>
//  


// -------------------------------  Field Item: GPIOF_IDR_IDR2  -----------------------------------
// SVD Line: 8288

//  <item> SFDITEM_FIELD__GPIOF_IDR_IDR2
//    <name> IDR2 </name>
//    <r> 
//    <i> [Bit 2] RO (@ 0x50001410) Port input data (y =  0..15) </i>
//    <check> 
//      <loc> ( (unsigned int) GPIOF_IDR ) </loc>
//      <o.2..2> IDR2
//    </check>
//  </item>
//  


// -------------------------------  Field Item: GPIOF_IDR_IDR1  -----------------------------------
// SVD Line: 8295

//  <item> SFDITEM_FIELD__GPIOF_IDR_IDR1
//    <name> IDR1 </name>
//    <r> 
//    <i> [Bit 1] RO (@ 0x50001410) Port input data (y =  0..15) </i>
//    <check> 
//      <loc> ( (unsigned int) GPIOF_IDR ) </loc>
//      <o.1..1> IDR1
//    </check>
//  </item>
//  


// -------------------------------  Field Item: GPIOF_IDR_IDR0  -----------------------------------
// SVD Line: 8302

//  <item> SFDITEM_FIELD__GPIOF_IDR_IDR0
//    <name> IDR0 </name>
//    <r> 
//    <i> [Bit 0] RO (@ 0x50001410) Port input data (y =  0..15) </i>
//    <check> 
//      <loc> ( (unsigned int) GPIOF_IDR ) </loc>
//      <o.0..0> IDR0
//    </check>
//  </item>
//  


// --------------------------------  Register RTree: GPIOF_IDR  -----------------------------------
// SVD Line: 8188

//  <rtree> SFDITEM_REG__GPIOF_IDR
//    <name> IDR </name>
//    <r> 
//    <i> [Bits 31..0] RO (@ 0x50001410) GPIO port input data register </i>
//    <loc> ( (unsigned int)((GPIOF_IDR >> 0) & 0xFFFFFFFF) ) </loc>
//    <item> SFDITEM_FIELD__GPIOF_IDR_IDR15 </item>
//    <item> SFDITEM_FIELD__GPIOF_IDR_IDR14 </item>
//    <item> SFDITEM_FIELD__GPIOF_IDR_IDR13 </item>
//    <item> SFDITEM_FIELD__GPIOF_IDR_IDR12 </item>
//    <item> SFDITEM_FIELD__GPIOF_IDR_IDR11 </item>
//    <item> SFDITEM_FIELD__GPIOF_IDR_IDR10 </item>
//    <item> SFDITEM_FIELD__GPIOF_IDR_IDR9 </item>
//    <item> SFDITEM_FIELD__GPIOF_IDR_IDR8 </item>
//    <item> SFDITEM_FIELD__GPIOF_IDR_IDR7 </item>
//    <item> SFDITEM_FIELD__GPIOF_IDR_IDR6 </item>
//    <item> SFDITEM_FIELD__GPIOF_IDR_IDR5 </item>
//    <item> SFDITEM_FIELD__GPIOF_IDR_IDR4 </item>
//    <item> SFDITEM_FIELD__GPIOF_IDR_IDR3 </item>
//    <item> SFDITEM_FIELD__GPIOF_IDR_IDR2 </item>
//    <item> SFDITEM_FIELD__GPIOF_IDR_IDR1 </item>
//    <item> SFDITEM_FIELD__GPIOF_IDR_IDR0 </item>
//  </rtree>
//  


// ----------------------------  Register Item Address: GPIOF_ODR  --------------------------------
// SVD Line: 8311

unsigned int GPIOF_ODR __AT (0x50001414);



// -------------------------------  Field Item: GPIOF_ODR_ODR15  ----------------------------------
// SVD Line: 8320

//  <item> SFDITEM_FIELD__GPIOF_ODR_ODR15
//    <name> ODR15 </name>
//    <rw> 
//    <i> [Bit 15] RW (@ 0x50001414) Port output data (y =  0..15) </i>
//    <check> 
//      <loc> ( (unsigned int) GPIOF_ODR ) </loc>
//      <o.15..15> ODR15
//    </check>
//  </item>
//  


// -------------------------------  Field Item: GPIOF_ODR_ODR14  ----------------------------------
// SVD Line: 8327

//  <item> SFDITEM_FIELD__GPIOF_ODR_ODR14
//    <name> ODR14 </name>
//    <rw> 
//    <i> [Bit 14] RW (@ 0x50001414) Port output data (y =  0..15) </i>
//    <check> 
//      <loc> ( (unsigned int) GPIOF_ODR ) </loc>
//      <o.14..14> ODR14
//    </check>
//  </item>
//  


// -------------------------------  Field Item: GPIOF_ODR_ODR13  ----------------------------------
// SVD Line: 8334

//  <item> SFDITEM_FIELD__GPIOF_ODR_ODR13
//    <name> ODR13 </name>
//    <rw> 
//    <i> [Bit 13] RW (@ 0x50001414) Port output data (y =  0..15) </i>
//    <check> 
//      <loc> ( (unsigned int) GPIOF_ODR ) </loc>
//      <o.13..13> ODR13
//    </check>
//  </item>
//  


// -------------------------------  Field Item: GPIOF_ODR_ODR12  ----------------------------------
// SVD Line: 8341

//  <item> SFDITEM_FIELD__GPIOF_ODR_ODR12
//    <name> ODR12 </name>
//    <rw> 
//    <i> [Bit 12] RW (@ 0x50001414) Port output data (y =  0..15) </i>
//    <check> 
//      <loc> ( (unsigned int) GPIOF_ODR ) </loc>
//      <o.12..12> ODR12
//    </check>
//  </item>
//  


// -------------------------------  Field Item: GPIOF_ODR_ODR11  ----------------------------------
// SVD Line: 8348

//  <item> SFDITEM_FIELD__GPIOF_ODR_ODR11
//    <name> ODR11 </name>
//    <rw> 
//    <i> [Bit 11] RW (@ 0x50001414) Port output data (y =  0..15) </i>
//    <check> 
//      <loc> ( (unsigned int) GPIOF_ODR ) </loc>
//      <o.11..11> ODR11
//    </check>
//  </item>
//  


// -------------------------------  Field Item: GPIOF_ODR_ODR10  ----------------------------------
// SVD Line: 8355

//  <item> SFDITEM_FIELD__GPIOF_ODR_ODR10
//    <name> ODR10 </name>
//    <rw> 
//    <i> [Bit 10] RW (@ 0x50001414) Port output data (y =  0..15) </i>
//    <check> 
//      <loc> ( (unsigned int) GPIOF_ODR ) </loc>
//      <o.10..10> ODR10
//    </check>
//  </item>
//  


// -------------------------------  Field Item: GPIOF_ODR_ODR9  -----------------------------------
// SVD Line: 8362

//  <item> SFDITEM_FIELD__GPIOF_ODR_ODR9
//    <name> ODR9 </name>
//    <rw> 
//    <i> [Bit 9] RW (@ 0x50001414) Port output data (y =  0..15) </i>
//    <check> 
//      <loc> ( (unsigned int) GPIOF_ODR ) </loc>
//      <o.9..9> ODR9
//    </check>
//  </item>
//  


// -------------------------------  Field Item: GPIOF_ODR_ODR8  -----------------------------------
// SVD Line: 8369

//  <item> SFDITEM_FIELD__GPIOF_ODR_ODR8
//    <name> ODR8 </name>
//    <rw> 
//    <i> [Bit 8] RW (@ 0x50001414) Port output data (y =  0..15) </i>
//    <check> 
//      <loc> ( (unsigned int) GPIOF_ODR ) </loc>
//      <o.8..8> ODR8
//    </check>
//  </item>
//  


// -------------------------------  Field Item: GPIOF_ODR_ODR7  -----------------------------------
// SVD Line: 8376

//  <item> SFDITEM_FIELD__GPIOF_ODR_ODR7
//    <name> ODR7 </name>
//    <rw> 
//    <i> [Bit 7] RW (@ 0x50001414) Port output data (y =  0..15) </i>
//    <check> 
//      <loc> ( (unsigned int) GPIOF_ODR ) </loc>
//      <o.7..7> ODR7
//    </check>
//  </item>
//  


// -------------------------------  Field Item: GPIOF_ODR_ODR6  -----------------------------------
// SVD Line: 8383

//  <item> SFDITEM_FIELD__GPIOF_ODR_ODR6
//    <name> ODR6 </name>
//    <rw> 
//    <i> [Bit 6] RW (@ 0x50001414) Port output data (y =  0..15) </i>
//    <check> 
//      <loc> ( (unsigned int) GPIOF_ODR ) </loc>
//      <o.6..6> ODR6
//    </check>
//  </item>
//  


// -------------------------------  Field Item: GPIOF_ODR_ODR5  -----------------------------------
// SVD Line: 8390

//  <item> SFDITEM_FIELD__GPIOF_ODR_ODR5
//    <name> ODR5 </name>
//    <rw> 
//    <i> [Bit 5] RW (@ 0x50001414) Port output data (y =  0..15) </i>
//    <check> 
//      <loc> ( (unsigned int) GPIOF_ODR ) </loc>
//      <o.5..5> ODR5
//    </check>
//  </item>
//  


// -------------------------------  Field Item: GPIOF_ODR_ODR4  -----------------------------------
// SVD Line: 8397

//  <item> SFDITEM_FIELD__GPIOF_ODR_ODR4
//    <name> ODR4 </name>
//    <rw> 
//    <i> [Bit 4] RW (@ 0x50001414) Port output data (y =  0..15) </i>
//    <check> 
//      <loc> ( (unsigned int) GPIOF_ODR ) </loc>
//      <o.4..4> ODR4
//    </check>
//  </item>
//  


// -------------------------------  Field Item: GPIOF_ODR_ODR3  -----------------------------------
// SVD Line: 8404

//  <item> SFDITEM_FIELD__GPIOF_ODR_ODR3
//    <name> ODR3 </name>
//    <rw> 
//    <i> [Bit 3] RW (@ 0x50001414) Port output data (y =  0..15) </i>
//    <check> 
//      <loc> ( (unsigned int) GPIOF_ODR ) </loc>
//      <o.3..3> ODR3
//    </check>
//  </item>
//  


// -------------------------------  Field Item: GPIOF_ODR_ODR2  -----------------------------------
// SVD Line: 8411

//  <item> SFDITEM_FIELD__GPIOF_ODR_ODR2
//    <name> ODR2 </name>
//    <rw> 
//    <i> [Bit 2] RW (@ 0x50001414) Port output data (y =  0..15) </i>
//    <check> 
//      <loc> ( (unsigned int) GPIOF_ODR ) </loc>
//      <o.2..2> ODR2
//    </check>
//  </item>
//  


// -------------------------------  Field Item: GPIOF_ODR_ODR1  -----------------------------------
// SVD Line: 8418

//  <item> SFDITEM_FIELD__GPIOF_ODR_ODR1
//    <name> ODR1 </name>
//    <rw> 
//    <i> [Bit 1] RW (@ 0x50001414) Port output data (y =  0..15) </i>
//    <check> 
//      <loc> ( (unsigned int) GPIOF_ODR ) </loc>
//      <o.1..1> ODR1
//    </check>
//  </item>
//  


// -------------------------------  Field Item: GPIOF_ODR_ODR0  -----------------------------------
// SVD Line: 8425

//  <item> SFDITEM_FIELD__GPIOF_ODR_ODR0
//    <name> ODR0 </name>
//    <rw> 
//    <i> [Bit 0] RW (@ 0x50001414) Port output data (y =  0..15) </i>
//    <check> 
//      <loc> ( (unsigned int) GPIOF_ODR ) </loc>
//      <o.0..0> ODR0
//    </check>
//  </item>
//  


// --------------------------------  Register RTree: GPIOF_ODR  -----------------------------------
// SVD Line: 8311

//  <rtree> SFDITEM_REG__GPIOF_ODR
//    <name> ODR </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x50001414) GPIO port output data register </i>
//    <loc> ( (unsigned int)((GPIOF_ODR >> 0) & 0xFFFFFFFF), ((GPIOF_ODR = (GPIOF_ODR & ~(0xFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__GPIOF_ODR_ODR15 </item>
//    <item> SFDITEM_FIELD__GPIOF_ODR_ODR14 </item>
//    <item> SFDITEM_FIELD__GPIOF_ODR_ODR13 </item>
//    <item> SFDITEM_FIELD__GPIOF_ODR_ODR12 </item>
//    <item> SFDITEM_FIELD__GPIOF_ODR_ODR11 </item>
//    <item> SFDITEM_FIELD__GPIOF_ODR_ODR10 </item>
//    <item> SFDITEM_FIELD__GPIOF_ODR_ODR9 </item>
//    <item> SFDITEM_FIELD__GPIOF_ODR_ODR8 </item>
//    <item> SFDITEM_FIELD__GPIOF_ODR_ODR7 </item>
//    <item> SFDITEM_FIELD__GPIOF_ODR_ODR6 </item>
//    <item> SFDITEM_FIELD__GPIOF_ODR_ODR5 </item>
//    <item> SFDITEM_FIELD__GPIOF_ODR_ODR4 </item>
//    <item> SFDITEM_FIELD__GPIOF_ODR_ODR3 </item>
//    <item> SFDITEM_FIELD__GPIOF_ODR_ODR2 </item>
//    <item> SFDITEM_FIELD__GPIOF_ODR_ODR1 </item>
//    <item> SFDITEM_FIELD__GPIOF_ODR_ODR0 </item>
//  </rtree>
//  


// ----------------------------  Register Item Address: GPIOF_BSRR  -------------------------------
// SVD Line: 8434

unsigned int GPIOF_BSRR __AT (0x50001418);



// -------------------------------  Field Item: GPIOF_BSRR_BR15  ----------------------------------
// SVD Line: 8444

//  <item> SFDITEM_FIELD__GPIOF_BSRR_BR15
//    <name> BR15 </name>
//    <w> 
//    <i> [Bit 31] WO (@ 0x50001418) Port x reset bit y (y =  0..15) </i>
//    <check> 
//      <loc> ( (unsigned int) GPIOF_BSRR ) </loc>
//      <o.31..31> BR15
//    </check>
//  </item>
//  


// -------------------------------  Field Item: GPIOF_BSRR_BR14  ----------------------------------
// SVD Line: 8451

//  <item> SFDITEM_FIELD__GPIOF_BSRR_BR14
//    <name> BR14 </name>
//    <w> 
//    <i> [Bit 30] WO (@ 0x50001418) Port x reset bit y (y =  0..15) </i>
//    <check> 
//      <loc> ( (unsigned int) GPIOF_BSRR ) </loc>
//      <o.30..30> BR14
//    </check>
//  </item>
//  


// -------------------------------  Field Item: GPIOF_BSRR_BR13  ----------------------------------
// SVD Line: 8458

//  <item> SFDITEM_FIELD__GPIOF_BSRR_BR13
//    <name> BR13 </name>
//    <w> 
//    <i> [Bit 29] WO (@ 0x50001418) Port x reset bit y (y =  0..15) </i>
//    <check> 
//      <loc> ( (unsigned int) GPIOF_BSRR ) </loc>
//      <o.29..29> BR13
//    </check>
//  </item>
//  


// -------------------------------  Field Item: GPIOF_BSRR_BR12  ----------------------------------
// SVD Line: 8465

//  <item> SFDITEM_FIELD__GPIOF_BSRR_BR12
//    <name> BR12 </name>
//    <w> 
//    <i> [Bit 28] WO (@ 0x50001418) Port x reset bit y (y =  0..15) </i>
//    <check> 
//      <loc> ( (unsigned int) GPIOF_BSRR ) </loc>
//      <o.28..28> BR12
//    </check>
//  </item>
//  


// -------------------------------  Field Item: GPIOF_BSRR_BR11  ----------------------------------
// SVD Line: 8472

//  <item> SFDITEM_FIELD__GPIOF_BSRR_BR11
//    <name> BR11 </name>
//    <w> 
//    <i> [Bit 27] WO (@ 0x50001418) Port x reset bit y (y =  0..15) </i>
//    <check> 
//      <loc> ( (unsigned int) GPIOF_BSRR ) </loc>
//      <o.27..27> BR11
//    </check>
//  </item>
//  


// -------------------------------  Field Item: GPIOF_BSRR_BR10  ----------------------------------
// SVD Line: 8479

//  <item> SFDITEM_FIELD__GPIOF_BSRR_BR10
//    <name> BR10 </name>
//    <w> 
//    <i> [Bit 26] WO (@ 0x50001418) Port x reset bit y (y =  0..15) </i>
//    <check> 
//      <loc> ( (unsigned int) GPIOF_BSRR ) </loc>
//      <o.26..26> BR10
//    </check>
//  </item>
//  


// -------------------------------  Field Item: GPIOF_BSRR_BR9  -----------------------------------
// SVD Line: 8486

//  <item> SFDITEM_FIELD__GPIOF_BSRR_BR9
//    <name> BR9 </name>
//    <w> 
//    <i> [Bit 25] WO (@ 0x50001418) Port x reset bit y (y =  0..15) </i>
//    <check> 
//      <loc> ( (unsigned int) GPIOF_BSRR ) </loc>
//      <o.25..25> BR9
//    </check>
//  </item>
//  


// -------------------------------  Field Item: GPIOF_BSRR_BR8  -----------------------------------
// SVD Line: 8493

//  <item> SFDITEM_FIELD__GPIOF_BSRR_BR8
//    <name> BR8 </name>
//    <w> 
//    <i> [Bit 24] WO (@ 0x50001418) Port x reset bit y (y =  0..15) </i>
//    <check> 
//      <loc> ( (unsigned int) GPIOF_BSRR ) </loc>
//      <o.24..24> BR8
//    </check>
//  </item>
//  


// -------------------------------  Field Item: GPIOF_BSRR_BR7  -----------------------------------
// SVD Line: 8500

//  <item> SFDITEM_FIELD__GPIOF_BSRR_BR7
//    <name> BR7 </name>
//    <w> 
//    <i> [Bit 23] WO (@ 0x50001418) Port x reset bit y (y =  0..15) </i>
//    <check> 
//      <loc> ( (unsigned int) GPIOF_BSRR ) </loc>
//      <o.23..23> BR7
//    </check>
//  </item>
//  


// -------------------------------  Field Item: GPIOF_BSRR_BR6  -----------------------------------
// SVD Line: 8507

//  <item> SFDITEM_FIELD__GPIOF_BSRR_BR6
//    <name> BR6 </name>
//    <w> 
//    <i> [Bit 22] WO (@ 0x50001418) Port x reset bit y (y =  0..15) </i>
//    <check> 
//      <loc> ( (unsigned int) GPIOF_BSRR ) </loc>
//      <o.22..22> BR6
//    </check>
//  </item>
//  


// -------------------------------  Field Item: GPIOF_BSRR_BR5  -----------------------------------
// SVD Line: 8514

//  <item> SFDITEM_FIELD__GPIOF_BSRR_BR5
//    <name> BR5 </name>
//    <w> 
//    <i> [Bit 21] WO (@ 0x50001418) Port x reset bit y (y =  0..15) </i>
//    <check> 
//      <loc> ( (unsigned int) GPIOF_BSRR ) </loc>
//      <o.21..21> BR5
//    </check>
//  </item>
//  


// -------------------------------  Field Item: GPIOF_BSRR_BR4  -----------------------------------
// SVD Line: 8521

//  <item> SFDITEM_FIELD__GPIOF_BSRR_BR4
//    <name> BR4 </name>
//    <w> 
//    <i> [Bit 20] WO (@ 0x50001418) Port x reset bit y (y =  0..15) </i>
//    <check> 
//      <loc> ( (unsigned int) GPIOF_BSRR ) </loc>
//      <o.20..20> BR4
//    </check>
//  </item>
//  


// -------------------------------  Field Item: GPIOF_BSRR_BR3  -----------------------------------
// SVD Line: 8528

//  <item> SFDITEM_FIELD__GPIOF_BSRR_BR3
//    <name> BR3 </name>
//    <w> 
//    <i> [Bit 19] WO (@ 0x50001418) Port x reset bit y (y =  0..15) </i>
//    <check> 
//      <loc> ( (unsigned int) GPIOF_BSRR ) </loc>
//      <o.19..19> BR3
//    </check>
//  </item>
//  


// -------------------------------  Field Item: GPIOF_BSRR_BR2  -----------------------------------
// SVD Line: 8535

//  <item> SFDITEM_FIELD__GPIOF_BSRR_BR2
//    <name> BR2 </name>
//    <w> 
//    <i> [Bit 18] WO (@ 0x50001418) Port x reset bit y (y =  0..15) </i>
//    <check> 
//      <loc> ( (unsigned int) GPIOF_BSRR ) </loc>
//      <o.18..18> BR2
//    </check>
//  </item>
//  


// -------------------------------  Field Item: GPIOF_BSRR_BR1  -----------------------------------
// SVD Line: 8542

//  <item> SFDITEM_FIELD__GPIOF_BSRR_BR1
//    <name> BR1 </name>
//    <w> 
//    <i> [Bit 17] WO (@ 0x50001418) Port x reset bit y (y =  0..15) </i>
//    <check> 
//      <loc> ( (unsigned int) GPIOF_BSRR ) </loc>
//      <o.17..17> BR1
//    </check>
//  </item>
//  


// -------------------------------  Field Item: GPIOF_BSRR_BR0  -----------------------------------
// SVD Line: 8549

//  <item> SFDITEM_FIELD__GPIOF_BSRR_BR0
//    <name> BR0 </name>
//    <w> 
//    <i> [Bit 16] WO (@ 0x50001418) Port x set bit y (y=  0..15) </i>
//    <check> 
//      <loc> ( (unsigned int) GPIOF_BSRR ) </loc>
//      <o.16..16> BR0
//    </check>
//  </item>
//  


// -------------------------------  Field Item: GPIOF_BSRR_BS15  ----------------------------------
// SVD Line: 8556

//  <item> SFDITEM_FIELD__GPIOF_BSRR_BS15
//    <name> BS15 </name>
//    <w> 
//    <i> [Bit 15] WO (@ 0x50001418) Port x set bit y (y=  0..15) </i>
//    <check> 
//      <loc> ( (unsigned int) GPIOF_BSRR ) </loc>
//      <o.15..15> BS15
//    </check>
//  </item>
//  


// -------------------------------  Field Item: GPIOF_BSRR_BS14  ----------------------------------
// SVD Line: 8563

//  <item> SFDITEM_FIELD__GPIOF_BSRR_BS14
//    <name> BS14 </name>
//    <w> 
//    <i> [Bit 14] WO (@ 0x50001418) Port x set bit y (y=  0..15) </i>
//    <check> 
//      <loc> ( (unsigned int) GPIOF_BSRR ) </loc>
//      <o.14..14> BS14
//    </check>
//  </item>
//  


// -------------------------------  Field Item: GPIOF_BSRR_BS13  ----------------------------------
// SVD Line: 8570

//  <item> SFDITEM_FIELD__GPIOF_BSRR_BS13
//    <name> BS13 </name>
//    <w> 
//    <i> [Bit 13] WO (@ 0x50001418) Port x set bit y (y=  0..15) </i>
//    <check> 
//      <loc> ( (unsigned int) GPIOF_BSRR ) </loc>
//      <o.13..13> BS13
//    </check>
//  </item>
//  


// -------------------------------  Field Item: GPIOF_BSRR_BS12  ----------------------------------
// SVD Line: 8577

//  <item> SFDITEM_FIELD__GPIOF_BSRR_BS12
//    <name> BS12 </name>
//    <w> 
//    <i> [Bit 12] WO (@ 0x50001418) Port x set bit y (y=  0..15) </i>
//    <check> 
//      <loc> ( (unsigned int) GPIOF_BSRR ) </loc>
//      <o.12..12> BS12
//    </check>
//  </item>
//  


// -------------------------------  Field Item: GPIOF_BSRR_BS11  ----------------------------------
// SVD Line: 8584

//  <item> SFDITEM_FIELD__GPIOF_BSRR_BS11
//    <name> BS11 </name>
//    <w> 
//    <i> [Bit 11] WO (@ 0x50001418) Port x set bit y (y=  0..15) </i>
//    <check> 
//      <loc> ( (unsigned int) GPIOF_BSRR ) </loc>
//      <o.11..11> BS11
//    </check>
//  </item>
//  


// -------------------------------  Field Item: GPIOF_BSRR_BS10  ----------------------------------
// SVD Line: 8591

//  <item> SFDITEM_FIELD__GPIOF_BSRR_BS10
//    <name> BS10 </name>
//    <w> 
//    <i> [Bit 10] WO (@ 0x50001418) Port x set bit y (y=  0..15) </i>
//    <check> 
//      <loc> ( (unsigned int) GPIOF_BSRR ) </loc>
//      <o.10..10> BS10
//    </check>
//  </item>
//  


// -------------------------------  Field Item: GPIOF_BSRR_BS9  -----------------------------------
// SVD Line: 8598

//  <item> SFDITEM_FIELD__GPIOF_BSRR_BS9
//    <name> BS9 </name>
//    <w> 
//    <i> [Bit 9] WO (@ 0x50001418) Port x set bit y (y=  0..15) </i>
//    <check> 
//      <loc> ( (unsigned int) GPIOF_BSRR ) </loc>
//      <o.9..9> BS9
//    </check>
//  </item>
//  


// -------------------------------  Field Item: GPIOF_BSRR_BS8  -----------------------------------
// SVD Line: 8605

//  <item> SFDITEM_FIELD__GPIOF_BSRR_BS8
//    <name> BS8 </name>
//    <w> 
//    <i> [Bit 8] WO (@ 0x50001418) Port x set bit y (y=  0..15) </i>
//    <check> 
//      <loc> ( (unsigned int) GPIOF_BSRR ) </loc>
//      <o.8..8> BS8
//    </check>
//  </item>
//  


// -------------------------------  Field Item: GPIOF_BSRR_BS7  -----------------------------------
// SVD Line: 8612

//  <item> SFDITEM_FIELD__GPIOF_BSRR_BS7
//    <name> BS7 </name>
//    <w> 
//    <i> [Bit 7] WO (@ 0x50001418) Port x set bit y (y=  0..15) </i>
//    <check> 
//      <loc> ( (unsigned int) GPIOF_BSRR ) </loc>
//      <o.7..7> BS7
//    </check>
//  </item>
//  


// -------------------------------  Field Item: GPIOF_BSRR_BS6  -----------------------------------
// SVD Line: 8619

//  <item> SFDITEM_FIELD__GPIOF_BSRR_BS6
//    <name> BS6 </name>
//    <w> 
//    <i> [Bit 6] WO (@ 0x50001418) Port x set bit y (y=  0..15) </i>
//    <check> 
//      <loc> ( (unsigned int) GPIOF_BSRR ) </loc>
//      <o.6..6> BS6
//    </check>
//  </item>
//  


// -------------------------------  Field Item: GPIOF_BSRR_BS5  -----------------------------------
// SVD Line: 8626

//  <item> SFDITEM_FIELD__GPIOF_BSRR_BS5
//    <name> BS5 </name>
//    <w> 
//    <i> [Bit 5] WO (@ 0x50001418) Port x set bit y (y=  0..15) </i>
//    <check> 
//      <loc> ( (unsigned int) GPIOF_BSRR ) </loc>
//      <o.5..5> BS5
//    </check>
//  </item>
//  


// -------------------------------  Field Item: GPIOF_BSRR_BS4  -----------------------------------
// SVD Line: 8633

//  <item> SFDITEM_FIELD__GPIOF_BSRR_BS4
//    <name> BS4 </name>
//    <w> 
//    <i> [Bit 4] WO (@ 0x50001418) Port x set bit y (y=  0..15) </i>
//    <check> 
//      <loc> ( (unsigned int) GPIOF_BSRR ) </loc>
//      <o.4..4> BS4
//    </check>
//  </item>
//  


// -------------------------------  Field Item: GPIOF_BSRR_BS3  -----------------------------------
// SVD Line: 8640

//  <item> SFDITEM_FIELD__GPIOF_BSRR_BS3
//    <name> BS3 </name>
//    <w> 
//    <i> [Bit 3] WO (@ 0x50001418) Port x set bit y (y=  0..15) </i>
//    <check> 
//      <loc> ( (unsigned int) GPIOF_BSRR ) </loc>
//      <o.3..3> BS3
//    </check>
//  </item>
//  


// -------------------------------  Field Item: GPIOF_BSRR_BS2  -----------------------------------
// SVD Line: 8647

//  <item> SFDITEM_FIELD__GPIOF_BSRR_BS2
//    <name> BS2 </name>
//    <w> 
//    <i> [Bit 2] WO (@ 0x50001418) Port x set bit y (y=  0..15) </i>
//    <check> 
//      <loc> ( (unsigned int) GPIOF_BSRR ) </loc>
//      <o.2..2> BS2
//    </check>
//  </item>
//  


// -------------------------------  Field Item: GPIOF_BSRR_BS1  -----------------------------------
// SVD Line: 8654

//  <item> SFDITEM_FIELD__GPIOF_BSRR_BS1
//    <name> BS1 </name>
//    <w> 
//    <i> [Bit 1] WO (@ 0x50001418) Port x set bit y (y=  0..15) </i>
//    <check> 
//      <loc> ( (unsigned int) GPIOF_BSRR ) </loc>
//      <o.1..1> BS1
//    </check>
//  </item>
//  


// -------------------------------  Field Item: GPIOF_BSRR_BS0  -----------------------------------
// SVD Line: 8661

//  <item> SFDITEM_FIELD__GPIOF_BSRR_BS0
//    <name> BS0 </name>
//    <w> 
//    <i> [Bit 0] WO (@ 0x50001418) Port x set bit y (y=  0..15) </i>
//    <check> 
//      <loc> ( (unsigned int) GPIOF_BSRR ) </loc>
//      <o.0..0> BS0
//    </check>
//  </item>
//  


// -------------------------------  Register RTree: GPIOF_BSRR  -----------------------------------
// SVD Line: 8434

//  <rtree> SFDITEM_REG__GPIOF_BSRR
//    <name> BSRR </name>
//    <w> 
//    <i> [Bits 31..0] WO (@ 0x50001418) GPIO port bit set/reset  register </i>
//    <loc> ( (unsigned int)((GPIOF_BSRR >> 0) & 0xFFFFFFFF), ((GPIOF_BSRR = (GPIOF_BSRR & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__GPIOF_BSRR_BR15 </item>
//    <item> SFDITEM_FIELD__GPIOF_BSRR_BR14 </item>
//    <item> SFDITEM_FIELD__GPIOF_BSRR_BR13 </item>
//    <item> SFDITEM_FIELD__GPIOF_BSRR_BR12 </item>
//    <item> SFDITEM_FIELD__GPIOF_BSRR_BR11 </item>
//    <item> SFDITEM_FIELD__GPIOF_BSRR_BR10 </item>
//    <item> SFDITEM_FIELD__GPIOF_BSRR_BR9 </item>
//    <item> SFDITEM_FIELD__GPIOF_BSRR_BR8 </item>
//    <item> SFDITEM_FIELD__GPIOF_BSRR_BR7 </item>
//    <item> SFDITEM_FIELD__GPIOF_BSRR_BR6 </item>
//    <item> SFDITEM_FIELD__GPIOF_BSRR_BR5 </item>
//    <item> SFDITEM_FIELD__GPIOF_BSRR_BR4 </item>
//    <item> SFDITEM_FIELD__GPIOF_BSRR_BR3 </item>
//    <item> SFDITEM_FIELD__GPIOF_BSRR_BR2 </item>
//    <item> SFDITEM_FIELD__GPIOF_BSRR_BR1 </item>
//    <item> SFDITEM_FIELD__GPIOF_BSRR_BR0 </item>
//    <item> SFDITEM_FIELD__GPIOF_BSRR_BS15 </item>
//    <item> SFDITEM_FIELD__GPIOF_BSRR_BS14 </item>
//    <item> SFDITEM_FIELD__GPIOF_BSRR_BS13 </item>
//    <item> SFDITEM_FIELD__GPIOF_BSRR_BS12 </item>
//    <item> SFDITEM_FIELD__GPIOF_BSRR_BS11 </item>
//    <item> SFDITEM_FIELD__GPIOF_BSRR_BS10 </item>
//    <item> SFDITEM_FIELD__GPIOF_BSRR_BS9 </item>
//    <item> SFDITEM_FIELD__GPIOF_BSRR_BS8 </item>
//    <item> SFDITEM_FIELD__GPIOF_BSRR_BS7 </item>
//    <item> SFDITEM_FIELD__GPIOF_BSRR_BS6 </item>
//    <item> SFDITEM_FIELD__GPIOF_BSRR_BS5 </item>
//    <item> SFDITEM_FIELD__GPIOF_BSRR_BS4 </item>
//    <item> SFDITEM_FIELD__GPIOF_BSRR_BS3 </item>
//    <item> SFDITEM_FIELD__GPIOF_BSRR_BS2 </item>
//    <item> SFDITEM_FIELD__GPIOF_BSRR_BS1 </item>
//    <item> SFDITEM_FIELD__GPIOF_BSRR_BS0 </item>
//  </rtree>
//  


// ----------------------------  Register Item Address: GPIOF_LCKR  -------------------------------
// SVD Line: 8670

unsigned int GPIOF_LCKR __AT (0x5000141C);



// -------------------------------  Field Item: GPIOF_LCKR_LCKK  ----------------------------------
// SVD Line: 8680

//  <item> SFDITEM_FIELD__GPIOF_LCKR_LCKK
//    <name> LCKK </name>
//    <rw> 
//    <i> [Bit 16] RW (@ 0x5000141C) Port x lock bit y (y=  0..15) </i>
//    <check> 
//      <loc> ( (unsigned int) GPIOF_LCKR ) </loc>
//      <o.16..16> LCKK
//    </check>
//  </item>
//  


// ------------------------------  Field Item: GPIOF_LCKR_LCK15  ----------------------------------
// SVD Line: 8687

//  <item> SFDITEM_FIELD__GPIOF_LCKR_LCK15
//    <name> LCK15 </name>
//    <rw> 
//    <i> [Bit 15] RW (@ 0x5000141C) Port x lock bit y (y=  0..15) </i>
//    <check> 
//      <loc> ( (unsigned int) GPIOF_LCKR ) </loc>
//      <o.15..15> LCK15
//    </check>
//  </item>
//  


// ------------------------------  Field Item: GPIOF_LCKR_LCK14  ----------------------------------
// SVD Line: 8694

//  <item> SFDITEM_FIELD__GPIOF_LCKR_LCK14
//    <name> LCK14 </name>
//    <rw> 
//    <i> [Bit 14] RW (@ 0x5000141C) Port x lock bit y (y=  0..15) </i>
//    <check> 
//      <loc> ( (unsigned int) GPIOF_LCKR ) </loc>
//      <o.14..14> LCK14
//    </check>
//  </item>
//  


// ------------------------------  Field Item: GPIOF_LCKR_LCK13  ----------------------------------
// SVD Line: 8701

//  <item> SFDITEM_FIELD__GPIOF_LCKR_LCK13
//    <name> LCK13 </name>
//    <rw> 
//    <i> [Bit 13] RW (@ 0x5000141C) Port x lock bit y (y=  0..15) </i>
//    <check> 
//      <loc> ( (unsigned int) GPIOF_LCKR ) </loc>
//      <o.13..13> LCK13
//    </check>
//  </item>
//  


// ------------------------------  Field Item: GPIOF_LCKR_LCK12  ----------------------------------
// SVD Line: 8708

//  <item> SFDITEM_FIELD__GPIOF_LCKR_LCK12
//    <name> LCK12 </name>
//    <rw> 
//    <i> [Bit 12] RW (@ 0x5000141C) Port x lock bit y (y=  0..15) </i>
//    <check> 
//      <loc> ( (unsigned int) GPIOF_LCKR ) </loc>
//      <o.12..12> LCK12
//    </check>
//  </item>
//  


// ------------------------------  Field Item: GPIOF_LCKR_LCK11  ----------------------------------
// SVD Line: 8715

//  <item> SFDITEM_FIELD__GPIOF_LCKR_LCK11
//    <name> LCK11 </name>
//    <rw> 
//    <i> [Bit 11] RW (@ 0x5000141C) Port x lock bit y (y=  0..15) </i>
//    <check> 
//      <loc> ( (unsigned int) GPIOF_LCKR ) </loc>
//      <o.11..11> LCK11
//    </check>
//  </item>
//  


// ------------------------------  Field Item: GPIOF_LCKR_LCK10  ----------------------------------
// SVD Line: 8722

//  <item> SFDITEM_FIELD__GPIOF_LCKR_LCK10
//    <name> LCK10 </name>
//    <rw> 
//    <i> [Bit 10] RW (@ 0x5000141C) Port x lock bit y (y=  0..15) </i>
//    <check> 
//      <loc> ( (unsigned int) GPIOF_LCKR ) </loc>
//      <o.10..10> LCK10
//    </check>
//  </item>
//  


// -------------------------------  Field Item: GPIOF_LCKR_LCK9  ----------------------------------
// SVD Line: 8729

//  <item> SFDITEM_FIELD__GPIOF_LCKR_LCK9
//    <name> LCK9 </name>
//    <rw> 
//    <i> [Bit 9] RW (@ 0x5000141C) Port x lock bit y (y=  0..15) </i>
//    <check> 
//      <loc> ( (unsigned int) GPIOF_LCKR ) </loc>
//      <o.9..9> LCK9
//    </check>
//  </item>
//  


// -------------------------------  Field Item: GPIOF_LCKR_LCK8  ----------------------------------
// SVD Line: 8736

//  <item> SFDITEM_FIELD__GPIOF_LCKR_LCK8
//    <name> LCK8 </name>
//    <rw> 
//    <i> [Bit 8] RW (@ 0x5000141C) Port x lock bit y (y=  0..15) </i>
//    <check> 
//      <loc> ( (unsigned int) GPIOF_LCKR ) </loc>
//      <o.8..8> LCK8
//    </check>
//  </item>
//  


// -------------------------------  Field Item: GPIOF_LCKR_LCK7  ----------------------------------
// SVD Line: 8743

//  <item> SFDITEM_FIELD__GPIOF_LCKR_LCK7
//    <name> LCK7 </name>
//    <rw> 
//    <i> [Bit 7] RW (@ 0x5000141C) Port x lock bit y (y=  0..15) </i>
//    <check> 
//      <loc> ( (unsigned int) GPIOF_LCKR ) </loc>
//      <o.7..7> LCK7
//    </check>
//  </item>
//  


// -------------------------------  Field Item: GPIOF_LCKR_LCK6  ----------------------------------
// SVD Line: 8750

//  <item> SFDITEM_FIELD__GPIOF_LCKR_LCK6
//    <name> LCK6 </name>
//    <rw> 
//    <i> [Bit 6] RW (@ 0x5000141C) Port x lock bit y (y=  0..15) </i>
//    <check> 
//      <loc> ( (unsigned int) GPIOF_LCKR ) </loc>
//      <o.6..6> LCK6
//    </check>
//  </item>
//  


// -------------------------------  Field Item: GPIOF_LCKR_LCK5  ----------------------------------
// SVD Line: 8757

//  <item> SFDITEM_FIELD__GPIOF_LCKR_LCK5
//    <name> LCK5 </name>
//    <rw> 
//    <i> [Bit 5] RW (@ 0x5000141C) Port x lock bit y (y=  0..15) </i>
//    <check> 
//      <loc> ( (unsigned int) GPIOF_LCKR ) </loc>
//      <o.5..5> LCK5
//    </check>
//  </item>
//  


// -------------------------------  Field Item: GPIOF_LCKR_LCK4  ----------------------------------
// SVD Line: 8764

//  <item> SFDITEM_FIELD__GPIOF_LCKR_LCK4
//    <name> LCK4 </name>
//    <rw> 
//    <i> [Bit 4] RW (@ 0x5000141C) Port x lock bit y (y=  0..15) </i>
//    <check> 
//      <loc> ( (unsigned int) GPIOF_LCKR ) </loc>
//      <o.4..4> LCK4
//    </check>
//  </item>
//  


// -------------------------------  Field Item: GPIOF_LCKR_LCK3  ----------------------------------
// SVD Line: 8771

//  <item> SFDITEM_FIELD__GPIOF_LCKR_LCK3
//    <name> LCK3 </name>
//    <rw> 
//    <i> [Bit 3] RW (@ 0x5000141C) Port x lock bit y (y=  0..15) </i>
//    <check> 
//      <loc> ( (unsigned int) GPIOF_LCKR ) </loc>
//      <o.3..3> LCK3
//    </check>
//  </item>
//  


// -------------------------------  Field Item: GPIOF_LCKR_LCK2  ----------------------------------
// SVD Line: 8778

//  <item> SFDITEM_FIELD__GPIOF_LCKR_LCK2
//    <name> LCK2 </name>
//    <rw> 
//    <i> [Bit 2] RW (@ 0x5000141C) Port x lock bit y (y=  0..15) </i>
//    <check> 
//      <loc> ( (unsigned int) GPIOF_LCKR ) </loc>
//      <o.2..2> LCK2
//    </check>
//  </item>
//  


// -------------------------------  Field Item: GPIOF_LCKR_LCK1  ----------------------------------
// SVD Line: 8785

//  <item> SFDITEM_FIELD__GPIOF_LCKR_LCK1
//    <name> LCK1 </name>
//    <rw> 
//    <i> [Bit 1] RW (@ 0x5000141C) Port x lock bit y (y=  0..15) </i>
//    <check> 
//      <loc> ( (unsigned int) GPIOF_LCKR ) </loc>
//      <o.1..1> LCK1
//    </check>
//  </item>
//  


// -------------------------------  Field Item: GPIOF_LCKR_LCK0  ----------------------------------
// SVD Line: 8792

//  <item> SFDITEM_FIELD__GPIOF_LCKR_LCK0
//    <name> LCK0 </name>
//    <rw> 
//    <i> [Bit 0] RW (@ 0x5000141C) Port x lock bit y (y=  0..15) </i>
//    <check> 
//      <loc> ( (unsigned int) GPIOF_LCKR ) </loc>
//      <o.0..0> LCK0
//    </check>
//  </item>
//  


// -------------------------------  Register RTree: GPIOF_LCKR  -----------------------------------
// SVD Line: 8670

//  <rtree> SFDITEM_REG__GPIOF_LCKR
//    <name> LCKR </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x5000141C) GPIO port configuration lock  register </i>
//    <loc> ( (unsigned int)((GPIOF_LCKR >> 0) & 0xFFFFFFFF), ((GPIOF_LCKR = (GPIOF_LCKR & ~(0x1FFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0x1FFFF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__GPIOF_LCKR_LCKK </item>
//    <item> SFDITEM_FIELD__GPIOF_LCKR_LCK15 </item>
//    <item> SFDITEM_FIELD__GPIOF_LCKR_LCK14 </item>
//    <item> SFDITEM_FIELD__GPIOF_LCKR_LCK13 </item>
//    <item> SFDITEM_FIELD__GPIOF_LCKR_LCK12 </item>
//    <item> SFDITEM_FIELD__GPIOF_LCKR_LCK11 </item>
//    <item> SFDITEM_FIELD__GPIOF_LCKR_LCK10 </item>
//    <item> SFDITEM_FIELD__GPIOF_LCKR_LCK9 </item>
//    <item> SFDITEM_FIELD__GPIOF_LCKR_LCK8 </item>
//    <item> SFDITEM_FIELD__GPIOF_LCKR_LCK7 </item>
//    <item> SFDITEM_FIELD__GPIOF_LCKR_LCK6 </item>
//    <item> SFDITEM_FIELD__GPIOF_LCKR_LCK5 </item>
//    <item> SFDITEM_FIELD__GPIOF_LCKR_LCK4 </item>
//    <item> SFDITEM_FIELD__GPIOF_LCKR_LCK3 </item>
//    <item> SFDITEM_FIELD__GPIOF_LCKR_LCK2 </item>
//    <item> SFDITEM_FIELD__GPIOF_LCKR_LCK1 </item>
//    <item> SFDITEM_FIELD__GPIOF_LCKR_LCK0 </item>
//  </rtree>
//  


// ----------------------------  Register Item Address: GPIOF_AFRL  -------------------------------
// SVD Line: 8801

unsigned int GPIOF_AFRL __AT (0x50001420);



// ------------------------------  Field Item: GPIOF_AFRL_AFSEL7  ---------------------------------
// SVD Line: 8811

//  <item> SFDITEM_FIELD__GPIOF_AFRL_AFSEL7
//    <name> AFSEL7 </name>
//    <rw> 
//    <i> [Bits 31..28] RW (@ 0x50001420) Alternate function selection for port x  bit y (y = 0..7) </i>
//    <edit> 
//      <loc> ( (unsigned char)((GPIOF_AFRL >> 28) & 0xF), ((GPIOF_AFRL = (GPIOF_AFRL & ~(0xFUL << 28 )) | ((unsigned long)(Gui_u8:GuiVal & 0xF) << 28 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ------------------------------  Field Item: GPIOF_AFRL_AFSEL6  ---------------------------------
// SVD Line: 8818

//  <item> SFDITEM_FIELD__GPIOF_AFRL_AFSEL6
//    <name> AFSEL6 </name>
//    <rw> 
//    <i> [Bits 27..24] RW (@ 0x50001420) Alternate function selection for port x  bit y (y = 0..7) </i>
//    <edit> 
//      <loc> ( (unsigned char)((GPIOF_AFRL >> 24) & 0xF), ((GPIOF_AFRL = (GPIOF_AFRL & ~(0xFUL << 24 )) | ((unsigned long)(Gui_u8:GuiVal & 0xF) << 24 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ------------------------------  Field Item: GPIOF_AFRL_AFSEL5  ---------------------------------
// SVD Line: 8825

//  <item> SFDITEM_FIELD__GPIOF_AFRL_AFSEL5
//    <name> AFSEL5 </name>
//    <rw> 
//    <i> [Bits 23..20] RW (@ 0x50001420) Alternate function selection for port x  bit y (y = 0..7) </i>
//    <edit> 
//      <loc> ( (unsigned char)((GPIOF_AFRL >> 20) & 0xF), ((GPIOF_AFRL = (GPIOF_AFRL & ~(0xFUL << 20 )) | ((unsigned long)(Gui_u8:GuiVal & 0xF) << 20 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ------------------------------  Field Item: GPIOF_AFRL_AFSEL4  ---------------------------------
// SVD Line: 8832

//  <item> SFDITEM_FIELD__GPIOF_AFRL_AFSEL4
//    <name> AFSEL4 </name>
//    <rw> 
//    <i> [Bits 19..16] RW (@ 0x50001420) Alternate function selection for port x  bit y (y = 0..7) </i>
//    <edit> 
//      <loc> ( (unsigned char)((GPIOF_AFRL >> 16) & 0xF), ((GPIOF_AFRL = (GPIOF_AFRL & ~(0xFUL << 16 )) | ((unsigned long)(Gui_u8:GuiVal & 0xF) << 16 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ------------------------------  Field Item: GPIOF_AFRL_AFSEL3  ---------------------------------
// SVD Line: 8839

//  <item> SFDITEM_FIELD__GPIOF_AFRL_AFSEL3
//    <name> AFSEL3 </name>
//    <rw> 
//    <i> [Bits 15..12] RW (@ 0x50001420) Alternate function selection for port x  bit y (y = 0..7) </i>
//    <edit> 
//      <loc> ( (unsigned char)((GPIOF_AFRL >> 12) & 0xF), ((GPIOF_AFRL = (GPIOF_AFRL & ~(0xFUL << 12 )) | ((unsigned long)(Gui_u8:GuiVal & 0xF) << 12 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ------------------------------  Field Item: GPIOF_AFRL_AFSEL2  ---------------------------------
// SVD Line: 8846

//  <item> SFDITEM_FIELD__GPIOF_AFRL_AFSEL2
//    <name> AFSEL2 </name>
//    <rw> 
//    <i> [Bits 11..8] RW (@ 0x50001420) Alternate function selection for port x  bit y (y = 0..7) </i>
//    <edit> 
//      <loc> ( (unsigned char)((GPIOF_AFRL >> 8) & 0xF), ((GPIOF_AFRL = (GPIOF_AFRL & ~(0xFUL << 8 )) | ((unsigned long)(Gui_u8:GuiVal & 0xF) << 8 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ------------------------------  Field Item: GPIOF_AFRL_AFSEL1  ---------------------------------
// SVD Line: 8853

//  <item> SFDITEM_FIELD__GPIOF_AFRL_AFSEL1
//    <name> AFSEL1 </name>
//    <rw> 
//    <i> [Bits 7..4] RW (@ 0x50001420) Alternate function selection for port x  bit y (y = 0..7) </i>
//    <edit> 
//      <loc> ( (unsigned char)((GPIOF_AFRL >> 4) & 0xF), ((GPIOF_AFRL = (GPIOF_AFRL & ~(0xFUL << 4 )) | ((unsigned long)(Gui_u8:GuiVal & 0xF) << 4 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ------------------------------  Field Item: GPIOF_AFRL_AFSEL0  ---------------------------------
// SVD Line: 8860

//  <item> SFDITEM_FIELD__GPIOF_AFRL_AFSEL0
//    <name> AFSEL0 </name>
//    <rw> 
//    <i> [Bits 3..0] RW (@ 0x50001420) Alternate function selection for port x  bit y (y = 0..7) </i>
//    <edit> 
//      <loc> ( (unsigned char)((GPIOF_AFRL >> 0) & 0xF), ((GPIOF_AFRL = (GPIOF_AFRL & ~(0xFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -------------------------------  Register RTree: GPIOF_AFRL  -----------------------------------
// SVD Line: 8801

//  <rtree> SFDITEM_REG__GPIOF_AFRL
//    <name> AFRL </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x50001420) GPIO alternate function low  register </i>
//    <loc> ( (unsigned int)((GPIOF_AFRL >> 0) & 0xFFFFFFFF), ((GPIOF_AFRL = (GPIOF_AFRL & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__GPIOF_AFRL_AFSEL7 </item>
//    <item> SFDITEM_FIELD__GPIOF_AFRL_AFSEL6 </item>
//    <item> SFDITEM_FIELD__GPIOF_AFRL_AFSEL5 </item>
//    <item> SFDITEM_FIELD__GPIOF_AFRL_AFSEL4 </item>
//    <item> SFDITEM_FIELD__GPIOF_AFRL_AFSEL3 </item>
//    <item> SFDITEM_FIELD__GPIOF_AFRL_AFSEL2 </item>
//    <item> SFDITEM_FIELD__GPIOF_AFRL_AFSEL1 </item>
//    <item> SFDITEM_FIELD__GPIOF_AFRL_AFSEL0 </item>
//  </rtree>
//  


// ----------------------------  Register Item Address: GPIOF_AFRH  -------------------------------
// SVD Line: 8869

unsigned int GPIOF_AFRH __AT (0x50001424);



// -----------------------------  Field Item: GPIOF_AFRH_AFSEL15  ---------------------------------
// SVD Line: 8879

//  <item> SFDITEM_FIELD__GPIOF_AFRH_AFSEL15
//    <name> AFSEL15 </name>
//    <rw> 
//    <i> [Bits 31..28] RW (@ 0x50001424) Alternate function selection for port x  bit y (y = 8..15) </i>
//    <edit> 
//      <loc> ( (unsigned char)((GPIOF_AFRH >> 28) & 0xF), ((GPIOF_AFRH = (GPIOF_AFRH & ~(0xFUL << 28 )) | ((unsigned long)(Gui_u8:GuiVal & 0xF) << 28 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -----------------------------  Field Item: GPIOF_AFRH_AFSEL14  ---------------------------------
// SVD Line: 8886

//  <item> SFDITEM_FIELD__GPIOF_AFRH_AFSEL14
//    <name> AFSEL14 </name>
//    <rw> 
//    <i> [Bits 27..24] RW (@ 0x50001424) Alternate function selection for port x  bit y (y = 8..15) </i>
//    <edit> 
//      <loc> ( (unsigned char)((GPIOF_AFRH >> 24) & 0xF), ((GPIOF_AFRH = (GPIOF_AFRH & ~(0xFUL << 24 )) | ((unsigned long)(Gui_u8:GuiVal & 0xF) << 24 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -----------------------------  Field Item: GPIOF_AFRH_AFSEL13  ---------------------------------
// SVD Line: 8893

//  <item> SFDITEM_FIELD__GPIOF_AFRH_AFSEL13
//    <name> AFSEL13 </name>
//    <rw> 
//    <i> [Bits 23..20] RW (@ 0x50001424) Alternate function selection for port x  bit y (y = 8..15) </i>
//    <edit> 
//      <loc> ( (unsigned char)((GPIOF_AFRH >> 20) & 0xF), ((GPIOF_AFRH = (GPIOF_AFRH & ~(0xFUL << 20 )) | ((unsigned long)(Gui_u8:GuiVal & 0xF) << 20 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -----------------------------  Field Item: GPIOF_AFRH_AFSEL12  ---------------------------------
// SVD Line: 8900

//  <item> SFDITEM_FIELD__GPIOF_AFRH_AFSEL12
//    <name> AFSEL12 </name>
//    <rw> 
//    <i> [Bits 19..16] RW (@ 0x50001424) Alternate function selection for port x  bit y (y = 8..15) </i>
//    <edit> 
//      <loc> ( (unsigned char)((GPIOF_AFRH >> 16) & 0xF), ((GPIOF_AFRH = (GPIOF_AFRH & ~(0xFUL << 16 )) | ((unsigned long)(Gui_u8:GuiVal & 0xF) << 16 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -----------------------------  Field Item: GPIOF_AFRH_AFSEL11  ---------------------------------
// SVD Line: 8907

//  <item> SFDITEM_FIELD__GPIOF_AFRH_AFSEL11
//    <name> AFSEL11 </name>
//    <rw> 
//    <i> [Bits 15..12] RW (@ 0x50001424) Alternate function selection for port x  bit y (y = 8..15) </i>
//    <edit> 
//      <loc> ( (unsigned char)((GPIOF_AFRH >> 12) & 0xF), ((GPIOF_AFRH = (GPIOF_AFRH & ~(0xFUL << 12 )) | ((unsigned long)(Gui_u8:GuiVal & 0xF) << 12 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -----------------------------  Field Item: GPIOF_AFRH_AFSEL10  ---------------------------------
// SVD Line: 8914

//  <item> SFDITEM_FIELD__GPIOF_AFRH_AFSEL10
//    <name> AFSEL10 </name>
//    <rw> 
//    <i> [Bits 11..8] RW (@ 0x50001424) Alternate function selection for port x  bit y (y = 8..15) </i>
//    <edit> 
//      <loc> ( (unsigned char)((GPIOF_AFRH >> 8) & 0xF), ((GPIOF_AFRH = (GPIOF_AFRH & ~(0xFUL << 8 )) | ((unsigned long)(Gui_u8:GuiVal & 0xF) << 8 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ------------------------------  Field Item: GPIOF_AFRH_AFSEL9  ---------------------------------
// SVD Line: 8921

//  <item> SFDITEM_FIELD__GPIOF_AFRH_AFSEL9
//    <name> AFSEL9 </name>
//    <rw> 
//    <i> [Bits 7..4] RW (@ 0x50001424) Alternate function selection for port x  bit y (y = 8..15) </i>
//    <edit> 
//      <loc> ( (unsigned char)((GPIOF_AFRH >> 4) & 0xF), ((GPIOF_AFRH = (GPIOF_AFRH & ~(0xFUL << 4 )) | ((unsigned long)(Gui_u8:GuiVal & 0xF) << 4 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ------------------------------  Field Item: GPIOF_AFRH_AFSEL8  ---------------------------------
// SVD Line: 8928

//  <item> SFDITEM_FIELD__GPIOF_AFRH_AFSEL8
//    <name> AFSEL8 </name>
//    <rw> 
//    <i> [Bits 3..0] RW (@ 0x50001424) Alternate function selection for port x  bit y (y = 8..15) </i>
//    <edit> 
//      <loc> ( (unsigned char)((GPIOF_AFRH >> 0) & 0xF), ((GPIOF_AFRH = (GPIOF_AFRH & ~(0xFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -------------------------------  Register RTree: GPIOF_AFRH  -----------------------------------
// SVD Line: 8869

//  <rtree> SFDITEM_REG__GPIOF_AFRH
//    <name> AFRH </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x50001424) GPIO alternate function high  register </i>
//    <loc> ( (unsigned int)((GPIOF_AFRH >> 0) & 0xFFFFFFFF), ((GPIOF_AFRH = (GPIOF_AFRH & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__GPIOF_AFRH_AFSEL15 </item>
//    <item> SFDITEM_FIELD__GPIOF_AFRH_AFSEL14 </item>
//    <item> SFDITEM_FIELD__GPIOF_AFRH_AFSEL13 </item>
//    <item> SFDITEM_FIELD__GPIOF_AFRH_AFSEL12 </item>
//    <item> SFDITEM_FIELD__GPIOF_AFRH_AFSEL11 </item>
//    <item> SFDITEM_FIELD__GPIOF_AFRH_AFSEL10 </item>
//    <item> SFDITEM_FIELD__GPIOF_AFRH_AFSEL9 </item>
//    <item> SFDITEM_FIELD__GPIOF_AFRH_AFSEL8 </item>
//  </rtree>
//  


// ----------------------------  Register Item Address: GPIOF_BRR  --------------------------------
// SVD Line: 8937

unsigned int GPIOF_BRR __AT (0x50001428);



// --------------------------------  Field Item: GPIOF_BRR_BR0  -----------------------------------
// SVD Line: 8946

//  <item> SFDITEM_FIELD__GPIOF_BRR_BR0
//    <name> BR0 </name>
//    <w> 
//    <i> [Bit 0] WO (@ 0x50001428) Port Reset bit </i>
//    <check> 
//      <loc> ( (unsigned int) GPIOF_BRR ) </loc>
//      <o.0..0> BR0
//    </check>
//  </item>
//  


// --------------------------------  Field Item: GPIOF_BRR_BR1  -----------------------------------
// SVD Line: 8952

//  <item> SFDITEM_FIELD__GPIOF_BRR_BR1
//    <name> BR1 </name>
//    <w> 
//    <i> [Bit 1] WO (@ 0x50001428) Port Reset bit </i>
//    <check> 
//      <loc> ( (unsigned int) GPIOF_BRR ) </loc>
//      <o.1..1> BR1
//    </check>
//  </item>
//  


// --------------------------------  Field Item: GPIOF_BRR_BR2  -----------------------------------
// SVD Line: 8958

//  <item> SFDITEM_FIELD__GPIOF_BRR_BR2
//    <name> BR2 </name>
//    <w> 
//    <i> [Bit 2] WO (@ 0x50001428) Port Reset bit </i>
//    <check> 
//      <loc> ( (unsigned int) GPIOF_BRR ) </loc>
//      <o.2..2> BR2
//    </check>
//  </item>
//  


// --------------------------------  Field Item: GPIOF_BRR_BR3  -----------------------------------
// SVD Line: 8964

//  <item> SFDITEM_FIELD__GPIOF_BRR_BR3
//    <name> BR3 </name>
//    <w> 
//    <i> [Bit 3] WO (@ 0x50001428) Port Reset bit </i>
//    <check> 
//      <loc> ( (unsigned int) GPIOF_BRR ) </loc>
//      <o.3..3> BR3
//    </check>
//  </item>
//  


// --------------------------------  Field Item: GPIOF_BRR_BR4  -----------------------------------
// SVD Line: 8970

//  <item> SFDITEM_FIELD__GPIOF_BRR_BR4
//    <name> BR4 </name>
//    <w> 
//    <i> [Bit 4] WO (@ 0x50001428) Port Reset bit </i>
//    <check> 
//      <loc> ( (unsigned int) GPIOF_BRR ) </loc>
//      <o.4..4> BR4
//    </check>
//  </item>
//  


// --------------------------------  Field Item: GPIOF_BRR_BR5  -----------------------------------
// SVD Line: 8976

//  <item> SFDITEM_FIELD__GPIOF_BRR_BR5
//    <name> BR5 </name>
//    <w> 
//    <i> [Bit 5] WO (@ 0x50001428) Port Reset bit </i>
//    <check> 
//      <loc> ( (unsigned int) GPIOF_BRR ) </loc>
//      <o.5..5> BR5
//    </check>
//  </item>
//  


// --------------------------------  Field Item: GPIOF_BRR_BR6  -----------------------------------
// SVD Line: 8982

//  <item> SFDITEM_FIELD__GPIOF_BRR_BR6
//    <name> BR6 </name>
//    <w> 
//    <i> [Bit 6] WO (@ 0x50001428) Port Reset bit </i>
//    <check> 
//      <loc> ( (unsigned int) GPIOF_BRR ) </loc>
//      <o.6..6> BR6
//    </check>
//  </item>
//  


// --------------------------------  Field Item: GPIOF_BRR_BR7  -----------------------------------
// SVD Line: 8988

//  <item> SFDITEM_FIELD__GPIOF_BRR_BR7
//    <name> BR7 </name>
//    <w> 
//    <i> [Bit 7] WO (@ 0x50001428) Port Reset bit </i>
//    <check> 
//      <loc> ( (unsigned int) GPIOF_BRR ) </loc>
//      <o.7..7> BR7
//    </check>
//  </item>
//  


// --------------------------------  Field Item: GPIOF_BRR_BR8  -----------------------------------
// SVD Line: 8994

//  <item> SFDITEM_FIELD__GPIOF_BRR_BR8
//    <name> BR8 </name>
//    <w> 
//    <i> [Bit 8] WO (@ 0x50001428) Port Reset bit </i>
//    <check> 
//      <loc> ( (unsigned int) GPIOF_BRR ) </loc>
//      <o.8..8> BR8
//    </check>
//  </item>
//  


// --------------------------------  Field Item: GPIOF_BRR_BR9  -----------------------------------
// SVD Line: 9000

//  <item> SFDITEM_FIELD__GPIOF_BRR_BR9
//    <name> BR9 </name>
//    <w> 
//    <i> [Bit 9] WO (@ 0x50001428) Port Reset bit </i>
//    <check> 
//      <loc> ( (unsigned int) GPIOF_BRR ) </loc>
//      <o.9..9> BR9
//    </check>
//  </item>
//  


// -------------------------------  Field Item: GPIOF_BRR_BR10  -----------------------------------
// SVD Line: 9006

//  <item> SFDITEM_FIELD__GPIOF_BRR_BR10
//    <name> BR10 </name>
//    <w> 
//    <i> [Bit 10] WO (@ 0x50001428) Port Reset bit </i>
//    <check> 
//      <loc> ( (unsigned int) GPIOF_BRR ) </loc>
//      <o.10..10> BR10
//    </check>
//  </item>
//  


// -------------------------------  Field Item: GPIOF_BRR_BR11  -----------------------------------
// SVD Line: 9012

//  <item> SFDITEM_FIELD__GPIOF_BRR_BR11
//    <name> BR11 </name>
//    <w> 
//    <i> [Bit 11] WO (@ 0x50001428) Port Reset bit </i>
//    <check> 
//      <loc> ( (unsigned int) GPIOF_BRR ) </loc>
//      <o.11..11> BR11
//    </check>
//  </item>
//  


// -------------------------------  Field Item: GPIOF_BRR_BR12  -----------------------------------
// SVD Line: 9018

//  <item> SFDITEM_FIELD__GPIOF_BRR_BR12
//    <name> BR12 </name>
//    <w> 
//    <i> [Bit 12] WO (@ 0x50001428) Port Reset bit </i>
//    <check> 
//      <loc> ( (unsigned int) GPIOF_BRR ) </loc>
//      <o.12..12> BR12
//    </check>
//  </item>
//  


// -------------------------------  Field Item: GPIOF_BRR_BR13  -----------------------------------
// SVD Line: 9024

//  <item> SFDITEM_FIELD__GPIOF_BRR_BR13
//    <name> BR13 </name>
//    <w> 
//    <i> [Bit 13] WO (@ 0x50001428) Port Reset bit </i>
//    <check> 
//      <loc> ( (unsigned int) GPIOF_BRR ) </loc>
//      <o.13..13> BR13
//    </check>
//  </item>
//  


// -------------------------------  Field Item: GPIOF_BRR_BR14  -----------------------------------
// SVD Line: 9030

//  <item> SFDITEM_FIELD__GPIOF_BRR_BR14
//    <name> BR14 </name>
//    <w> 
//    <i> [Bit 14] WO (@ 0x50001428) Port Reset bit </i>
//    <check> 
//      <loc> ( (unsigned int) GPIOF_BRR ) </loc>
//      <o.14..14> BR14
//    </check>
//  </item>
//  


// -------------------------------  Field Item: GPIOF_BRR_BR15  -----------------------------------
// SVD Line: 9036

//  <item> SFDITEM_FIELD__GPIOF_BRR_BR15
//    <name> BR15 </name>
//    <w> 
//    <i> [Bit 15] WO (@ 0x50001428) Port Reset bit </i>
//    <check> 
//      <loc> ( (unsigned int) GPIOF_BRR ) </loc>
//      <o.15..15> BR15
//    </check>
//  </item>
//  


// --------------------------------  Register RTree: GPIOF_BRR  -----------------------------------
// SVD Line: 8937

//  <rtree> SFDITEM_REG__GPIOF_BRR
//    <name> BRR </name>
//    <w> 
//    <i> [Bits 31..0] WO (@ 0x50001428) port bit reset register </i>
//    <loc> ( (unsigned int)((GPIOF_BRR >> 0) & 0xFFFFFFFF), ((GPIOF_BRR = (GPIOF_BRR & ~(0xFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__GPIOF_BRR_BR0 </item>
//    <item> SFDITEM_FIELD__GPIOF_BRR_BR1 </item>
//    <item> SFDITEM_FIELD__GPIOF_BRR_BR2 </item>
//    <item> SFDITEM_FIELD__GPIOF_BRR_BR3 </item>
//    <item> SFDITEM_FIELD__GPIOF_BRR_BR4 </item>
//    <item> SFDITEM_FIELD__GPIOF_BRR_BR5 </item>
//    <item> SFDITEM_FIELD__GPIOF_BRR_BR6 </item>
//    <item> SFDITEM_FIELD__GPIOF_BRR_BR7 </item>
//    <item> SFDITEM_FIELD__GPIOF_BRR_BR8 </item>
//    <item> SFDITEM_FIELD__GPIOF_BRR_BR9 </item>
//    <item> SFDITEM_FIELD__GPIOF_BRR_BR10 </item>
//    <item> SFDITEM_FIELD__GPIOF_BRR_BR11 </item>
//    <item> SFDITEM_FIELD__GPIOF_BRR_BR12 </item>
//    <item> SFDITEM_FIELD__GPIOF_BRR_BR13 </item>
//    <item> SFDITEM_FIELD__GPIOF_BRR_BR14 </item>
//    <item> SFDITEM_FIELD__GPIOF_BRR_BR15 </item>
//  </rtree>
//  


// ---------------------------------  Peripheral View: GPIOF  -------------------------------------
// SVD Line: 9054

//  <view> GPIOF
//    <name> GPIOF </name>
//    <item> SFDITEM_REG__GPIOF_MODER </item>
//    <item> SFDITEM_REG__GPIOF_OTYPER </item>
//    <item> SFDITEM_REG__GPIOF_OSPEEDR </item>
//    <item> SFDITEM_REG__GPIOF_PUPDR </item>
//    <item> SFDITEM_REG__GPIOF_IDR </item>
//    <item> SFDITEM_REG__GPIOF_ODR </item>
//    <item> SFDITEM_REG__GPIOF_BSRR </item>
//    <item> SFDITEM_REG__GPIOF_LCKR </item>
//    <item> SFDITEM_REG__GPIOF_AFRL </item>
//    <item> SFDITEM_REG__GPIOF_AFRH </item>
//    <item> SFDITEM_REG__GPIOF_BRR </item>
//  </view>
//  


// ------------------------------  Register Item Address: AES_CR  ---------------------------------
// SVD Line: 9075

unsigned int AES_CR __AT (0x40026000);



// --------------------------------  Field Item: AES_CR_NPBLB  ------------------------------------
// SVD Line: 9084

//  <item> SFDITEM_FIELD__AES_CR_NPBLB
//    <name> NPBLB </name>
//    <rw> 
//    <i> [Bits 23..20] RW (@ 0x40026000) Number of padding bytes in last block of  payload </i>
//    <edit> 
//      <loc> ( (unsigned char)((AES_CR >> 20) & 0xF), ((AES_CR = (AES_CR & ~(0xFUL << 20 )) | ((unsigned long)(Gui_u8:GuiVal & 0xF) << 20 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -------------------------------  Field Item: AES_CR_KEYSIZE  -----------------------------------
// SVD Line: 9091

//  <item> SFDITEM_FIELD__AES_CR_KEYSIZE
//    <name> KEYSIZE </name>
//    <rw> 
//    <i> [Bit 18] RW (@ 0x40026000) Key size selection </i>
//    <check> 
//      <loc> ( (unsigned int) AES_CR ) </loc>
//      <o.18..18> KEYSIZE
//    </check>
//  </item>
//  


// --------------------------------  Field Item: AES_CR_CHMOD2  -----------------------------------
// SVD Line: 9097

//  <item> SFDITEM_FIELD__AES_CR_CHMOD2
//    <name> CHMOD2 </name>
//    <rw> 
//    <i> [Bit 16] RW (@ 0x40026000) AES chaining mode Bit2 </i>
//    <check> 
//      <loc> ( (unsigned int) AES_CR ) </loc>
//      <o.16..16> CHMOD2
//    </check>
//  </item>
//  


// --------------------------------  Field Item: AES_CR_GCMPH  ------------------------------------
// SVD Line: 9103

//  <item> SFDITEM_FIELD__AES_CR_GCMPH
//    <name> GCMPH </name>
//    <rw> 
//    <i> [Bits 14..13] RW (@ 0x40026000) Used only for GCM, CCM and GMAC  algorithms and has no effect when other algorithms  are selected </i>
//    <edit> 
//      <loc> ( (unsigned char)((AES_CR >> 13) & 0x3), ((AES_CR = (AES_CR & ~(0x3UL << 13 )) | ((unsigned long)(Gui_u8:GuiVal & 0x3) << 13 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -------------------------------  Field Item: AES_CR_DMAOUTEN  ----------------------------------
// SVD Line: 9111

//  <item> SFDITEM_FIELD__AES_CR_DMAOUTEN
//    <name> DMAOUTEN </name>
//    <rw> 
//    <i> [Bit 12] RW (@ 0x40026000) Enable DMA management of data output  phase </i>
//    <check> 
//      <loc> ( (unsigned int) AES_CR ) </loc>
//      <o.12..12> DMAOUTEN
//    </check>
//  </item>
//  


// -------------------------------  Field Item: AES_CR_DMAINEN  -----------------------------------
// SVD Line: 9118

//  <item> SFDITEM_FIELD__AES_CR_DMAINEN
//    <name> DMAINEN </name>
//    <rw> 
//    <i> [Bit 11] RW (@ 0x40026000) Enable DMA management of data input  phase </i>
//    <check> 
//      <loc> ( (unsigned int) AES_CR ) </loc>
//      <o.11..11> DMAINEN
//    </check>
//  </item>
//  


// --------------------------------  Field Item: AES_CR_ERRIE  ------------------------------------
// SVD Line: 9125

//  <item> SFDITEM_FIELD__AES_CR_ERRIE
//    <name> ERRIE </name>
//    <rw> 
//    <i> [Bit 10] RW (@ 0x40026000) Error interrupt enable </i>
//    <check> 
//      <loc> ( (unsigned int) AES_CR ) </loc>
//      <o.10..10> ERRIE
//    </check>
//  </item>
//  


// --------------------------------  Field Item: AES_CR_CCFIE  ------------------------------------
// SVD Line: 9131

//  <item> SFDITEM_FIELD__AES_CR_CCFIE
//    <name> CCFIE </name>
//    <rw> 
//    <i> [Bit 9] RW (@ 0x40026000) CCF flag interrupt enable </i>
//    <check> 
//      <loc> ( (unsigned int) AES_CR ) </loc>
//      <o.9..9> CCFIE
//    </check>
//  </item>
//  


// ---------------------------------  Field Item: AES_CR_ERRC  ------------------------------------
// SVD Line: 9137

//  <item> SFDITEM_FIELD__AES_CR_ERRC
//    <name> ERRC </name>
//    <rw> 
//    <i> [Bit 8] RW (@ 0x40026000) Error clear </i>
//    <check> 
//      <loc> ( (unsigned int) AES_CR ) </loc>
//      <o.8..8> ERRC
//    </check>
//  </item>
//  


// ---------------------------------  Field Item: AES_CR_CCFC  ------------------------------------
// SVD Line: 9143

//  <item> SFDITEM_FIELD__AES_CR_CCFC
//    <name> CCFC </name>
//    <rw> 
//    <i> [Bit 7] RW (@ 0x40026000) Computation Complete Flag  Clear </i>
//    <check> 
//      <loc> ( (unsigned int) AES_CR ) </loc>
//      <o.7..7> CCFC
//    </check>
//  </item>
//  


// -------------------------------  Field Item: AES_CR_CHMOD10  -----------------------------------
// SVD Line: 9150

//  <item> SFDITEM_FIELD__AES_CR_CHMOD10
//    <name> CHMOD10 </name>
//    <rw> 
//    <i> [Bits 6..5] RW (@ 0x40026000) AES chaining mode Bit1  Bit0 </i>
//    <edit> 
//      <loc> ( (unsigned char)((AES_CR >> 5) & 0x3), ((AES_CR = (AES_CR & ~(0x3UL << 5 )) | ((unsigned long)(Gui_u8:GuiVal & 0x3) << 5 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ---------------------------------  Field Item: AES_CR_MODE  ------------------------------------
// SVD Line: 9157

//  <item> SFDITEM_FIELD__AES_CR_MODE
//    <name> MODE </name>
//    <rw> 
//    <i> [Bits 4..3] RW (@ 0x40026000) AES operating mode </i>
//    <edit> 
//      <loc> ( (unsigned char)((AES_CR >> 3) & 0x3), ((AES_CR = (AES_CR & ~(0x3UL << 3 )) | ((unsigned long)(Gui_u8:GuiVal & 0x3) << 3 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -------------------------------  Field Item: AES_CR_DATATYPE  ----------------------------------
// SVD Line: 9163

//  <item> SFDITEM_FIELD__AES_CR_DATATYPE
//    <name> DATATYPE </name>
//    <rw> 
//    <i> [Bits 2..1] RW (@ 0x40026000) Data type selection (for data in and  data out to/from the cryptographic  block) </i>
//    <edit> 
//      <loc> ( (unsigned char)((AES_CR >> 1) & 0x3), ((AES_CR = (AES_CR & ~(0x3UL << 1 )) | ((unsigned long)(Gui_u8:GuiVal & 0x3) << 1 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ----------------------------------  Field Item: AES_CR_EN  -------------------------------------
// SVD Line: 9171

//  <item> SFDITEM_FIELD__AES_CR_EN
//    <name> EN </name>
//    <rw> 
//    <i> [Bit 0] RW (@ 0x40026000) AES enable </i>
//    <check> 
//      <loc> ( (unsigned int) AES_CR ) </loc>
//      <o.0..0> EN
//    </check>
//  </item>
//  


// ---------------------------------  Register RTree: AES_CR  -------------------------------------
// SVD Line: 9075

//  <rtree> SFDITEM_REG__AES_CR
//    <name> CR </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x40026000) control register </i>
//    <loc> ( (unsigned int)((AES_CR >> 0) & 0xFFFFFFFF), ((AES_CR = (AES_CR & ~(0xF57FFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xF57FFF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__AES_CR_NPBLB </item>
//    <item> SFDITEM_FIELD__AES_CR_KEYSIZE </item>
//    <item> SFDITEM_FIELD__AES_CR_CHMOD2 </item>
//    <item> SFDITEM_FIELD__AES_CR_GCMPH </item>
//    <item> SFDITEM_FIELD__AES_CR_DMAOUTEN </item>
//    <item> SFDITEM_FIELD__AES_CR_DMAINEN </item>
//    <item> SFDITEM_FIELD__AES_CR_ERRIE </item>
//    <item> SFDITEM_FIELD__AES_CR_CCFIE </item>
//    <item> SFDITEM_FIELD__AES_CR_ERRC </item>
//    <item> SFDITEM_FIELD__AES_CR_CCFC </item>
//    <item> SFDITEM_FIELD__AES_CR_CHMOD10 </item>
//    <item> SFDITEM_FIELD__AES_CR_MODE </item>
//    <item> SFDITEM_FIELD__AES_CR_DATATYPE </item>
//    <item> SFDITEM_FIELD__AES_CR_EN </item>
//  </rtree>
//  


// ------------------------------  Register Item Address: AES_SR  ---------------------------------
// SVD Line: 9179

unsigned int AES_SR __AT (0x40026004);



// ---------------------------------  Field Item: AES_SR_BUSY  ------------------------------------
// SVD Line: 9188

//  <item> SFDITEM_FIELD__AES_SR_BUSY
//    <name> BUSY </name>
//    <r> 
//    <i> [Bit 3] RO (@ 0x40026004) Busy flag </i>
//    <check> 
//      <loc> ( (unsigned int) AES_SR ) </loc>
//      <o.3..3> BUSY
//    </check>
//  </item>
//  


// --------------------------------  Field Item: AES_SR_WRERR  ------------------------------------
// SVD Line: 9194

//  <item> SFDITEM_FIELD__AES_SR_WRERR
//    <name> WRERR </name>
//    <r> 
//    <i> [Bit 2] RO (@ 0x40026004) Write error flag </i>
//    <check> 
//      <loc> ( (unsigned int) AES_SR ) </loc>
//      <o.2..2> WRERR
//    </check>
//  </item>
//  


// --------------------------------  Field Item: AES_SR_RDERR  ------------------------------------
// SVD Line: 9200

//  <item> SFDITEM_FIELD__AES_SR_RDERR
//    <name> RDERR </name>
//    <r> 
//    <i> [Bit 1] RO (@ 0x40026004) Read error flag </i>
//    <check> 
//      <loc> ( (unsigned int) AES_SR ) </loc>
//      <o.1..1> RDERR
//    </check>
//  </item>
//  


// ---------------------------------  Field Item: AES_SR_CCF  -------------------------------------
// SVD Line: 9206

//  <item> SFDITEM_FIELD__AES_SR_CCF
//    <name> CCF </name>
//    <r> 
//    <i> [Bit 0] RO (@ 0x40026004) Computation complete flag </i>
//    <check> 
//      <loc> ( (unsigned int) AES_SR ) </loc>
//      <o.0..0> CCF
//    </check>
//  </item>
//  


// ---------------------------------  Register RTree: AES_SR  -------------------------------------
// SVD Line: 9179

//  <rtree> SFDITEM_REG__AES_SR
//    <name> SR </name>
//    <r> 
//    <i> [Bits 31..0] RO (@ 0x40026004) status register </i>
//    <loc> ( (unsigned int)((AES_SR >> 0) & 0xFFFFFFFF) ) </loc>
//    <item> SFDITEM_FIELD__AES_SR_BUSY </item>
//    <item> SFDITEM_FIELD__AES_SR_WRERR </item>
//    <item> SFDITEM_FIELD__AES_SR_RDERR </item>
//    <item> SFDITEM_FIELD__AES_SR_CCF </item>
//  </rtree>
//  


// -----------------------------  Register Item Address: AES_DINR  --------------------------------
// SVD Line: 9214

unsigned int AES_DINR __AT (0x40026008);



// ------------------------------  Field Item: AES_DINR_AES_DINR  ---------------------------------
// SVD Line: 9223

//  <item> SFDITEM_FIELD__AES_DINR_AES_DINR
//    <name> AES_DINR </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x40026008) Data Input Register </i>
//    <edit> 
//      <loc> ( (unsigned int)((AES_DINR >> 0) & 0xFFFFFFFF), ((AES_DINR = (AES_DINR & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// --------------------------------  Register RTree: AES_DINR  ------------------------------------
// SVD Line: 9214

//  <rtree> SFDITEM_REG__AES_DINR
//    <name> DINR </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x40026008) data input register </i>
//    <loc> ( (unsigned int)((AES_DINR >> 0) & 0xFFFFFFFF), ((AES_DINR = (AES_DINR & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__AES_DINR_AES_DINR </item>
//  </rtree>
//  


// ----------------------------  Register Item Address: AES_DOUTR  --------------------------------
// SVD Line: 9231

unsigned int AES_DOUTR __AT (0x4002600C);



// -----------------------------  Field Item: AES_DOUTR_AES_DOUTR  --------------------------------
// SVD Line: 9240

//  <item> SFDITEM_FIELD__AES_DOUTR_AES_DOUTR
//    <name> AES_DOUTR </name>
//    <r> 
//    <i> [Bits 31..0] RO (@ 0x4002600C) Data output register </i>
//    <edit> 
//      <loc> ( (unsigned int)((AES_DOUTR >> 0) & 0xFFFFFFFF) ) </loc>
//    </edit>
//  </item>
//  


// --------------------------------  Register RTree: AES_DOUTR  -----------------------------------
// SVD Line: 9231

//  <rtree> SFDITEM_REG__AES_DOUTR
//    <name> DOUTR </name>
//    <r> 
//    <i> [Bits 31..0] RO (@ 0x4002600C) data output register </i>
//    <loc> ( (unsigned int)((AES_DOUTR >> 0) & 0xFFFFFFFF) ) </loc>
//    <item> SFDITEM_FIELD__AES_DOUTR_AES_DOUTR </item>
//  </rtree>
//  


// ----------------------------  Register Item Address: AES_KEYR0  --------------------------------
// SVD Line: 9248

unsigned int AES_KEYR0 __AT (0x40026010);



// -----------------------------  Field Item: AES_KEYR0_AES_KEYR0  --------------------------------
// SVD Line: 9257

//  <item> SFDITEM_FIELD__AES_KEYR0_AES_KEYR0
//    <name> AES_KEYR0 </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x40026010) Data Output Register (LSB key  [31:0]) </i>
//    <edit> 
//      <loc> ( (unsigned int)((AES_KEYR0 >> 0) & 0xFFFFFFFF), ((AES_KEYR0 = (AES_KEYR0 & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// --------------------------------  Register RTree: AES_KEYR0  -----------------------------------
// SVD Line: 9248

//  <rtree> SFDITEM_REG__AES_KEYR0
//    <name> KEYR0 </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x40026010) key register 0 </i>
//    <loc> ( (unsigned int)((AES_KEYR0 >> 0) & 0xFFFFFFFF), ((AES_KEYR0 = (AES_KEYR0 & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__AES_KEYR0_AES_KEYR0 </item>
//  </rtree>
//  


// ----------------------------  Register Item Address: AES_KEYR1  --------------------------------
// SVD Line: 9266

unsigned int AES_KEYR1 __AT (0x40026014);



// -----------------------------  Field Item: AES_KEYR1_AES_KEYR1  --------------------------------
// SVD Line: 9275

//  <item> SFDITEM_FIELD__AES_KEYR1_AES_KEYR1
//    <name> AES_KEYR1 </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x40026014) AES key register (key  [63:32]) </i>
//    <edit> 
//      <loc> ( (unsigned int)((AES_KEYR1 >> 0) & 0xFFFFFFFF), ((AES_KEYR1 = (AES_KEYR1 & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// --------------------------------  Register RTree: AES_KEYR1  -----------------------------------
// SVD Line: 9266

//  <rtree> SFDITEM_REG__AES_KEYR1
//    <name> KEYR1 </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x40026014) key register 1 </i>
//    <loc> ( (unsigned int)((AES_KEYR1 >> 0) & 0xFFFFFFFF), ((AES_KEYR1 = (AES_KEYR1 & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__AES_KEYR1_AES_KEYR1 </item>
//  </rtree>
//  


// ----------------------------  Register Item Address: AES_KEYR2  --------------------------------
// SVD Line: 9284

unsigned int AES_KEYR2 __AT (0x40026018);



// -----------------------------  Field Item: AES_KEYR2_AES_KEYR2  --------------------------------
// SVD Line: 9293

//  <item> SFDITEM_FIELD__AES_KEYR2_AES_KEYR2
//    <name> AES_KEYR2 </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x40026018) AES key register (key  [95:64]) </i>
//    <edit> 
//      <loc> ( (unsigned int)((AES_KEYR2 >> 0) & 0xFFFFFFFF), ((AES_KEYR2 = (AES_KEYR2 & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// --------------------------------  Register RTree: AES_KEYR2  -----------------------------------
// SVD Line: 9284

//  <rtree> SFDITEM_REG__AES_KEYR2
//    <name> KEYR2 </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x40026018) key register 2 </i>
//    <loc> ( (unsigned int)((AES_KEYR2 >> 0) & 0xFFFFFFFF), ((AES_KEYR2 = (AES_KEYR2 & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__AES_KEYR2_AES_KEYR2 </item>
//  </rtree>
//  


// ----------------------------  Register Item Address: AES_KEYR3  --------------------------------
// SVD Line: 9302

unsigned int AES_KEYR3 __AT (0x4002601C);



// -----------------------------  Field Item: AES_KEYR3_AES_KEYR3  --------------------------------
// SVD Line: 9311

//  <item> SFDITEM_FIELD__AES_KEYR3_AES_KEYR3
//    <name> AES_KEYR3 </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x4002601C) AES key register (MSB key  [127:96]) </i>
//    <edit> 
//      <loc> ( (unsigned int)((AES_KEYR3 >> 0) & 0xFFFFFFFF), ((AES_KEYR3 = (AES_KEYR3 & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// --------------------------------  Register RTree: AES_KEYR3  -----------------------------------
// SVD Line: 9302

//  <rtree> SFDITEM_REG__AES_KEYR3
//    <name> KEYR3 </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x4002601C) key register 3 </i>
//    <loc> ( (unsigned int)((AES_KEYR3 >> 0) & 0xFFFFFFFF), ((AES_KEYR3 = (AES_KEYR3 & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__AES_KEYR3_AES_KEYR3 </item>
//  </rtree>
//  


// -----------------------------  Register Item Address: AES_IVR0  --------------------------------
// SVD Line: 9320

unsigned int AES_IVR0 __AT (0x40026020);



// ------------------------------  Field Item: AES_IVR0_AES_IVR0  ---------------------------------
// SVD Line: 9330

//  <item> SFDITEM_FIELD__AES_IVR0_AES_IVR0
//    <name> AES_IVR0 </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x40026020) initialization vector register (LSB IVR  [31:0]) </i>
//    <edit> 
//      <loc> ( (unsigned int)((AES_IVR0 >> 0) & 0xFFFFFFFF), ((AES_IVR0 = (AES_IVR0 & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// --------------------------------  Register RTree: AES_IVR0  ------------------------------------
// SVD Line: 9320

//  <rtree> SFDITEM_REG__AES_IVR0
//    <name> IVR0 </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x40026020) initialization vector register  0 </i>
//    <loc> ( (unsigned int)((AES_IVR0 >> 0) & 0xFFFFFFFF), ((AES_IVR0 = (AES_IVR0 & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__AES_IVR0_AES_IVR0 </item>
//  </rtree>
//  


// -----------------------------  Register Item Address: AES_IVR1  --------------------------------
// SVD Line: 9339

unsigned int AES_IVR1 __AT (0x40026024);



// ------------------------------  Field Item: AES_IVR1_AES_IVR1  ---------------------------------
// SVD Line: 9349

//  <item> SFDITEM_FIELD__AES_IVR1_AES_IVR1
//    <name> AES_IVR1 </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x40026024) Initialization Vector Register (IVR  [63:32]) </i>
//    <edit> 
//      <loc> ( (unsigned int)((AES_IVR1 >> 0) & 0xFFFFFFFF), ((AES_IVR1 = (AES_IVR1 & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// --------------------------------  Register RTree: AES_IVR1  ------------------------------------
// SVD Line: 9339

//  <rtree> SFDITEM_REG__AES_IVR1
//    <name> IVR1 </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x40026024) initialization vector register  1 </i>
//    <loc> ( (unsigned int)((AES_IVR1 >> 0) & 0xFFFFFFFF), ((AES_IVR1 = (AES_IVR1 & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__AES_IVR1_AES_IVR1 </item>
//  </rtree>
//  


// -----------------------------  Register Item Address: AES_IVR2  --------------------------------
// SVD Line: 9358

unsigned int AES_IVR2 __AT (0x40026028);



// ------------------------------  Field Item: AES_IVR2_AES_IVR2  ---------------------------------
// SVD Line: 9368

//  <item> SFDITEM_FIELD__AES_IVR2_AES_IVR2
//    <name> AES_IVR2 </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x40026028) Initialization Vector Register (IVR  [95:64]) </i>
//    <edit> 
//      <loc> ( (unsigned int)((AES_IVR2 >> 0) & 0xFFFFFFFF), ((AES_IVR2 = (AES_IVR2 & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// --------------------------------  Register RTree: AES_IVR2  ------------------------------------
// SVD Line: 9358

//  <rtree> SFDITEM_REG__AES_IVR2
//    <name> IVR2 </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x40026028) initialization vector register  2 </i>
//    <loc> ( (unsigned int)((AES_IVR2 >> 0) & 0xFFFFFFFF), ((AES_IVR2 = (AES_IVR2 & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__AES_IVR2_AES_IVR2 </item>
//  </rtree>
//  


// -----------------------------  Register Item Address: AES_IVR3  --------------------------------
// SVD Line: 9377

unsigned int AES_IVR3 __AT (0x4002602C);



// ------------------------------  Field Item: AES_IVR3_AES_IVR3  ---------------------------------
// SVD Line: 9387

//  <item> SFDITEM_FIELD__AES_IVR3_AES_IVR3
//    <name> AES_IVR3 </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x4002602C) Initialization Vector Register (MSB IVR  [127:96]) </i>
//    <edit> 
//      <loc> ( (unsigned int)((AES_IVR3 >> 0) & 0xFFFFFFFF), ((AES_IVR3 = (AES_IVR3 & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// --------------------------------  Register RTree: AES_IVR3  ------------------------------------
// SVD Line: 9377

//  <rtree> SFDITEM_REG__AES_IVR3
//    <name> IVR3 </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x4002602C) initialization vector register  3 </i>
//    <loc> ( (unsigned int)((AES_IVR3 >> 0) & 0xFFFFFFFF), ((AES_IVR3 = (AES_IVR3 & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__AES_IVR3_AES_IVR3 </item>
//  </rtree>
//  


// ----------------------------  Register Item Address: AES_KEYR4  --------------------------------
// SVD Line: 9396

unsigned int AES_KEYR4 __AT (0x40026030);



// -----------------------------  Field Item: AES_KEYR4_AES_KEYR4  --------------------------------
// SVD Line: 9405

//  <item> SFDITEM_FIELD__AES_KEYR4_AES_KEYR4
//    <name> AES_KEYR4 </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x40026030) AES key register (MSB key  [159:128]) </i>
//    <edit> 
//      <loc> ( (unsigned int)((AES_KEYR4 >> 0) & 0xFFFFFFFF), ((AES_KEYR4 = (AES_KEYR4 & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// --------------------------------  Register RTree: AES_KEYR4  -----------------------------------
// SVD Line: 9396

//  <rtree> SFDITEM_REG__AES_KEYR4
//    <name> KEYR4 </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x40026030) key register 4 </i>
//    <loc> ( (unsigned int)((AES_KEYR4 >> 0) & 0xFFFFFFFF), ((AES_KEYR4 = (AES_KEYR4 & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__AES_KEYR4_AES_KEYR4 </item>
//  </rtree>
//  


// ----------------------------  Register Item Address: AES_KEYR5  --------------------------------
// SVD Line: 9414

unsigned int AES_KEYR5 __AT (0x40026034);



// -----------------------------  Field Item: AES_KEYR5_AES_KEYR5  --------------------------------
// SVD Line: 9423

//  <item> SFDITEM_FIELD__AES_KEYR5_AES_KEYR5
//    <name> AES_KEYR5 </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x40026034) AES key register (MSB key  [191:160]) </i>
//    <edit> 
//      <loc> ( (unsigned int)((AES_KEYR5 >> 0) & 0xFFFFFFFF), ((AES_KEYR5 = (AES_KEYR5 & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// --------------------------------  Register RTree: AES_KEYR5  -----------------------------------
// SVD Line: 9414

//  <rtree> SFDITEM_REG__AES_KEYR5
//    <name> KEYR5 </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x40026034) key register 5 </i>
//    <loc> ( (unsigned int)((AES_KEYR5 >> 0) & 0xFFFFFFFF), ((AES_KEYR5 = (AES_KEYR5 & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__AES_KEYR5_AES_KEYR5 </item>
//  </rtree>
//  


// ----------------------------  Register Item Address: AES_KEYR6  --------------------------------
// SVD Line: 9432

unsigned int AES_KEYR6 __AT (0x40026038);



// -----------------------------  Field Item: AES_KEYR6_AES_KEYR6  --------------------------------
// SVD Line: 9441

//  <item> SFDITEM_FIELD__AES_KEYR6_AES_KEYR6
//    <name> AES_KEYR6 </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x40026038) AES key register (MSB key  [223:192]) </i>
//    <edit> 
//      <loc> ( (unsigned int)((AES_KEYR6 >> 0) & 0xFFFFFFFF), ((AES_KEYR6 = (AES_KEYR6 & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// --------------------------------  Register RTree: AES_KEYR6  -----------------------------------
// SVD Line: 9432

//  <rtree> SFDITEM_REG__AES_KEYR6
//    <name> KEYR6 </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x40026038) key register 6 </i>
//    <loc> ( (unsigned int)((AES_KEYR6 >> 0) & 0xFFFFFFFF), ((AES_KEYR6 = (AES_KEYR6 & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__AES_KEYR6_AES_KEYR6 </item>
//  </rtree>
//  


// ----------------------------  Register Item Address: AES_KEYR7  --------------------------------
// SVD Line: 9450

unsigned int AES_KEYR7 __AT (0x4002603C);



// -----------------------------  Field Item: AES_KEYR7_AES_KEYR7  --------------------------------
// SVD Line: 9459

//  <item> SFDITEM_FIELD__AES_KEYR7_AES_KEYR7
//    <name> AES_KEYR7 </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x4002603C) AES key register (MSB key  [255:224]) </i>
//    <edit> 
//      <loc> ( (unsigned int)((AES_KEYR7 >> 0) & 0xFFFFFFFF), ((AES_KEYR7 = (AES_KEYR7 & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// --------------------------------  Register RTree: AES_KEYR7  -----------------------------------
// SVD Line: 9450

//  <rtree> SFDITEM_REG__AES_KEYR7
//    <name> KEYR7 </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x4002603C) key register 7 </i>
//    <loc> ( (unsigned int)((AES_KEYR7 >> 0) & 0xFFFFFFFF), ((AES_KEYR7 = (AES_KEYR7 & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__AES_KEYR7_AES_KEYR7 </item>
//  </rtree>
//  


// ----------------------------  Register Item Address: AES_SUSP0R  -------------------------------
// SVD Line: 9468

unsigned int AES_SUSP0R __AT (0x40026040);



// ----------------------------  Field Item: AES_SUSP0R_AES_SUSP0R  -------------------------------
// SVD Line: 9477

//  <item> SFDITEM_FIELD__AES_SUSP0R_AES_SUSP0R
//    <name> AES_SUSP0R </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x40026040) AES suspend register 0 </i>
//    <edit> 
//      <loc> ( (unsigned int)((AES_SUSP0R >> 0) & 0xFFFFFFFF), ((AES_SUSP0R = (AES_SUSP0R & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -------------------------------  Register RTree: AES_SUSP0R  -----------------------------------
// SVD Line: 9468

//  <rtree> SFDITEM_REG__AES_SUSP0R
//    <name> SUSP0R </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x40026040) AES suspend register 0 </i>
//    <loc> ( (unsigned int)((AES_SUSP0R >> 0) & 0xFFFFFFFF), ((AES_SUSP0R = (AES_SUSP0R & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__AES_SUSP0R_AES_SUSP0R </item>
//  </rtree>
//  


// ----------------------------  Register Item Address: AES_SUSP1R  -------------------------------
// SVD Line: 9485

unsigned int AES_SUSP1R __AT (0x40026044);



// ----------------------------  Field Item: AES_SUSP1R_AES_SUSP1R  -------------------------------
// SVD Line: 9494

//  <item> SFDITEM_FIELD__AES_SUSP1R_AES_SUSP1R
//    <name> AES_SUSP1R </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x40026044) AES suspend register 1 </i>
//    <edit> 
//      <loc> ( (unsigned int)((AES_SUSP1R >> 0) & 0xFFFFFFFF), ((AES_SUSP1R = (AES_SUSP1R & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -------------------------------  Register RTree: AES_SUSP1R  -----------------------------------
// SVD Line: 9485

//  <rtree> SFDITEM_REG__AES_SUSP1R
//    <name> SUSP1R </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x40026044) AES suspend register 1 </i>
//    <loc> ( (unsigned int)((AES_SUSP1R >> 0) & 0xFFFFFFFF), ((AES_SUSP1R = (AES_SUSP1R & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__AES_SUSP1R_AES_SUSP1R </item>
//  </rtree>
//  


// ----------------------------  Register Item Address: AES_SUSP2R  -------------------------------
// SVD Line: 9502

unsigned int AES_SUSP2R __AT (0x40026048);



// ----------------------------  Field Item: AES_SUSP2R_AES_SUSP2R  -------------------------------
// SVD Line: 9511

//  <item> SFDITEM_FIELD__AES_SUSP2R_AES_SUSP2R
//    <name> AES_SUSP2R </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x40026048) AES suspend register 2 </i>
//    <edit> 
//      <loc> ( (unsigned int)((AES_SUSP2R >> 0) & 0xFFFFFFFF), ((AES_SUSP2R = (AES_SUSP2R & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -------------------------------  Register RTree: AES_SUSP2R  -----------------------------------
// SVD Line: 9502

//  <rtree> SFDITEM_REG__AES_SUSP2R
//    <name> SUSP2R </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x40026048) AES suspend register 2 </i>
//    <loc> ( (unsigned int)((AES_SUSP2R >> 0) & 0xFFFFFFFF), ((AES_SUSP2R = (AES_SUSP2R & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__AES_SUSP2R_AES_SUSP2R </item>
//  </rtree>
//  


// ----------------------------  Register Item Address: AES_SUSP3R  -------------------------------
// SVD Line: 9519

unsigned int AES_SUSP3R __AT (0x4002604C);



// ----------------------------  Field Item: AES_SUSP3R_AES_SUSP3R  -------------------------------
// SVD Line: 9528

//  <item> SFDITEM_FIELD__AES_SUSP3R_AES_SUSP3R
//    <name> AES_SUSP3R </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x4002604C) AES suspend register 3 </i>
//    <edit> 
//      <loc> ( (unsigned int)((AES_SUSP3R >> 0) & 0xFFFFFFFF), ((AES_SUSP3R = (AES_SUSP3R & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -------------------------------  Register RTree: AES_SUSP3R  -----------------------------------
// SVD Line: 9519

//  <rtree> SFDITEM_REG__AES_SUSP3R
//    <name> SUSP3R </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x4002604C) AES suspend register 3 </i>
//    <loc> ( (unsigned int)((AES_SUSP3R >> 0) & 0xFFFFFFFF), ((AES_SUSP3R = (AES_SUSP3R & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__AES_SUSP3R_AES_SUSP3R </item>
//  </rtree>
//  


// ----------------------------  Register Item Address: AES_SUSP4R  -------------------------------
// SVD Line: 9536

unsigned int AES_SUSP4R __AT (0x40026050);



// ----------------------------  Field Item: AES_SUSP4R_AES_SUSP4R  -------------------------------
// SVD Line: 9545

//  <item> SFDITEM_FIELD__AES_SUSP4R_AES_SUSP4R
//    <name> AES_SUSP4R </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x40026050) AES suspend register 4 </i>
//    <edit> 
//      <loc> ( (unsigned int)((AES_SUSP4R >> 0) & 0xFFFFFFFF), ((AES_SUSP4R = (AES_SUSP4R & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -------------------------------  Register RTree: AES_SUSP4R  -----------------------------------
// SVD Line: 9536

//  <rtree> SFDITEM_REG__AES_SUSP4R
//    <name> SUSP4R </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x40026050) AES suspend register 4 </i>
//    <loc> ( (unsigned int)((AES_SUSP4R >> 0) & 0xFFFFFFFF), ((AES_SUSP4R = (AES_SUSP4R & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__AES_SUSP4R_AES_SUSP4R </item>
//  </rtree>
//  


// ----------------------------  Register Item Address: AES_SUSP5R  -------------------------------
// SVD Line: 9553

unsigned int AES_SUSP5R __AT (0x40026054);



// ----------------------------  Field Item: AES_SUSP5R_AES_SUSP5R  -------------------------------
// SVD Line: 9562

//  <item> SFDITEM_FIELD__AES_SUSP5R_AES_SUSP5R
//    <name> AES_SUSP5R </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x40026054) AES suspend register 5 </i>
//    <edit> 
//      <loc> ( (unsigned int)((AES_SUSP5R >> 0) & 0xFFFFFFFF), ((AES_SUSP5R = (AES_SUSP5R & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -------------------------------  Register RTree: AES_SUSP5R  -----------------------------------
// SVD Line: 9553

//  <rtree> SFDITEM_REG__AES_SUSP5R
//    <name> SUSP5R </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x40026054) AES suspend register 5 </i>
//    <loc> ( (unsigned int)((AES_SUSP5R >> 0) & 0xFFFFFFFF), ((AES_SUSP5R = (AES_SUSP5R & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__AES_SUSP5R_AES_SUSP5R </item>
//  </rtree>
//  


// ----------------------------  Register Item Address: AES_SUSP6R  -------------------------------
// SVD Line: 9570

unsigned int AES_SUSP6R __AT (0x40026058);



// ----------------------------  Field Item: AES_SUSP6R_AES_SUSP6R  -------------------------------
// SVD Line: 9579

//  <item> SFDITEM_FIELD__AES_SUSP6R_AES_SUSP6R
//    <name> AES_SUSP6R </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x40026058) AES suspend register 6 </i>
//    <edit> 
//      <loc> ( (unsigned int)((AES_SUSP6R >> 0) & 0xFFFFFFFF), ((AES_SUSP6R = (AES_SUSP6R & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -------------------------------  Register RTree: AES_SUSP6R  -----------------------------------
// SVD Line: 9570

//  <rtree> SFDITEM_REG__AES_SUSP6R
//    <name> SUSP6R </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x40026058) AES suspend register 6 </i>
//    <loc> ( (unsigned int)((AES_SUSP6R >> 0) & 0xFFFFFFFF), ((AES_SUSP6R = (AES_SUSP6R & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__AES_SUSP6R_AES_SUSP6R </item>
//  </rtree>
//  


// ----------------------------  Register Item Address: AES_SUSP7R  -------------------------------
// SVD Line: 9587

unsigned int AES_SUSP7R __AT (0x4002605C);



// ----------------------------  Field Item: AES_SUSP7R_AES_SUSP7R  -------------------------------
// SVD Line: 9596

//  <item> SFDITEM_FIELD__AES_SUSP7R_AES_SUSP7R
//    <name> AES_SUSP7R </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x4002605C) AES suspend register 7 </i>
//    <edit> 
//      <loc> ( (unsigned int)((AES_SUSP7R >> 0) & 0xFFFFFFFF), ((AES_SUSP7R = (AES_SUSP7R & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -------------------------------  Register RTree: AES_SUSP7R  -----------------------------------
// SVD Line: 9587

//  <rtree> SFDITEM_REG__AES_SUSP7R
//    <name> SUSP7R </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x4002605C) AES suspend register 7 </i>
//    <loc> ( (unsigned int)((AES_SUSP7R >> 0) & 0xFFFFFFFF), ((AES_SUSP7R = (AES_SUSP7R & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__AES_SUSP7R_AES_SUSP7R </item>
//  </rtree>
//  


// ----------------------------  Register Item Address: AES_HWCFR  --------------------------------
// SVD Line: 9604

unsigned int AES_HWCFR __AT (0x400263F0);



// -------------------------------  Field Item: AES_HWCFR_CFG4  -----------------------------------
// SVD Line: 9614

//  <item> SFDITEM_FIELD__AES_HWCFR_CFG4
//    <name> CFG4 </name>
//    <r> 
//    <i> [Bits 15..12] RO (@ 0x400263F0) HW Generic 4 </i>
//    <edit> 
//      <loc> ( (unsigned char)((AES_HWCFR >> 12) & 0xF) ) </loc>
//    </edit>
//  </item>
//  


// -------------------------------  Field Item: AES_HWCFR_CFG3  -----------------------------------
// SVD Line: 9620

//  <item> SFDITEM_FIELD__AES_HWCFR_CFG3
//    <name> CFG3 </name>
//    <r> 
//    <i> [Bits 11..8] RO (@ 0x400263F0) HW Generic 3 </i>
//    <edit> 
//      <loc> ( (unsigned char)((AES_HWCFR >> 8) & 0xF) ) </loc>
//    </edit>
//  </item>
//  


// -------------------------------  Field Item: AES_HWCFR_CFG2  -----------------------------------
// SVD Line: 9626

//  <item> SFDITEM_FIELD__AES_HWCFR_CFG2
//    <name> CFG2 </name>
//    <r> 
//    <i> [Bits 7..4] RO (@ 0x400263F0) HW Generic 2 </i>
//    <edit> 
//      <loc> ( (unsigned char)((AES_HWCFR >> 4) & 0xF) ) </loc>
//    </edit>
//  </item>
//  


// -------------------------------  Field Item: AES_HWCFR_CFG1  -----------------------------------
// SVD Line: 9632

//  <item> SFDITEM_FIELD__AES_HWCFR_CFG1
//    <name> CFG1 </name>
//    <r> 
//    <i> [Bits 3..0] RO (@ 0x400263F0) HW Generic 1 </i>
//    <edit> 
//      <loc> ( (unsigned char)((AES_HWCFR >> 0) & 0xF) ) </loc>
//    </edit>
//  </item>
//  


// --------------------------------  Register RTree: AES_HWCFR  -----------------------------------
// SVD Line: 9604

//  <rtree> SFDITEM_REG__AES_HWCFR
//    <name> HWCFR </name>
//    <r> 
//    <i> [Bits 31..0] RO (@ 0x400263F0) AES hardware configuration  register </i>
//    <loc> ( (unsigned int)((AES_HWCFR >> 0) & 0xFFFFFFFF) ) </loc>
//    <item> SFDITEM_FIELD__AES_HWCFR_CFG4 </item>
//    <item> SFDITEM_FIELD__AES_HWCFR_CFG3 </item>
//    <item> SFDITEM_FIELD__AES_HWCFR_CFG2 </item>
//    <item> SFDITEM_FIELD__AES_HWCFR_CFG1 </item>
//  </rtree>
//  


// -----------------------------  Register Item Address: AES_VERR  --------------------------------
// SVD Line: 9640

unsigned int AES_VERR __AT (0x400263F4);



// -------------------------------  Field Item: AES_VERR_MAJREV  ----------------------------------
// SVD Line: 9649

//  <item> SFDITEM_FIELD__AES_VERR_MAJREV
//    <name> MAJREV </name>
//    <r> 
//    <i> [Bits 7..4] RO (@ 0x400263F4) Major revision </i>
//    <edit> 
//      <loc> ( (unsigned char)((AES_VERR >> 4) & 0xF) ) </loc>
//    </edit>
//  </item>
//  


// -------------------------------  Field Item: AES_VERR_MINREV  ----------------------------------
// SVD Line: 9655

//  <item> SFDITEM_FIELD__AES_VERR_MINREV
//    <name> MINREV </name>
//    <r> 
//    <i> [Bits 3..0] RO (@ 0x400263F4) Minor revision </i>
//    <edit> 
//      <loc> ( (unsigned char)((AES_VERR >> 0) & 0xF) ) </loc>
//    </edit>
//  </item>
//  


// --------------------------------  Register RTree: AES_VERR  ------------------------------------
// SVD Line: 9640

//  <rtree> SFDITEM_REG__AES_VERR
//    <name> VERR </name>
//    <r> 
//    <i> [Bits 31..0] RO (@ 0x400263F4) AES version register </i>
//    <loc> ( (unsigned int)((AES_VERR >> 0) & 0xFFFFFFFF) ) </loc>
//    <item> SFDITEM_FIELD__AES_VERR_MAJREV </item>
//    <item> SFDITEM_FIELD__AES_VERR_MINREV </item>
//  </rtree>
//  


// ----------------------------  Register Item Address: AES_IPIDR  --------------------------------
// SVD Line: 9663

unsigned int AES_IPIDR __AT (0x400263F8);



// --------------------------------  Field Item: AES_IPIDR_ID  ------------------------------------
// SVD Line: 9672

//  <item> SFDITEM_FIELD__AES_IPIDR_ID
//    <name> ID </name>
//    <r> 
//    <i> [Bits 31..0] RO (@ 0x400263F8) Identification code </i>
//    <edit> 
//      <loc> ( (unsigned int)((AES_IPIDR >> 0) & 0xFFFFFFFF) ) </loc>
//    </edit>
//  </item>
//  


// --------------------------------  Register RTree: AES_IPIDR  -----------------------------------
// SVD Line: 9663

//  <rtree> SFDITEM_REG__AES_IPIDR
//    <name> IPIDR </name>
//    <r> 
//    <i> [Bits 31..0] RO (@ 0x400263F8) AES identification register </i>
//    <loc> ( (unsigned int)((AES_IPIDR >> 0) & 0xFFFFFFFF) ) </loc>
//    <item> SFDITEM_FIELD__AES_IPIDR_ID </item>
//  </rtree>
//  


// -----------------------------  Register Item Address: AES_SIDR  --------------------------------
// SVD Line: 9680

unsigned int AES_SIDR __AT (0x400263FC);



// ---------------------------------  Field Item: AES_SIDR_ID  ------------------------------------
// SVD Line: 9689

//  <item> SFDITEM_FIELD__AES_SIDR_ID
//    <name> ID </name>
//    <r> 
//    <i> [Bits 31..0] RO (@ 0x400263FC) Size Identification code </i>
//    <edit> 
//      <loc> ( (unsigned int)((AES_SIDR >> 0) & 0xFFFFFFFF) ) </loc>
//    </edit>
//  </item>
//  


// --------------------------------  Register RTree: AES_SIDR  ------------------------------------
// SVD Line: 9680

//  <rtree> SFDITEM_REG__AES_SIDR
//    <name> SIDR </name>
//    <r> 
//    <i> [Bits 31..0] RO (@ 0x400263FC) AES size ID register </i>
//    <loc> ( (unsigned int)((AES_SIDR >> 0) & 0xFFFFFFFF) ) </loc>
//    <item> SFDITEM_FIELD__AES_SIDR_ID </item>
//  </rtree>
//  


// ----------------------------------  Peripheral View: AES  --------------------------------------
// SVD Line: 9058

//  <view> AES
//    <name> AES </name>
//    <item> SFDITEM_REG__AES_CR </item>
//    <item> SFDITEM_REG__AES_SR </item>
//    <item> SFDITEM_REG__AES_DINR </item>
//    <item> SFDITEM_REG__AES_DOUTR </item>
//    <item> SFDITEM_REG__AES_KEYR0 </item>
//    <item> SFDITEM_REG__AES_KEYR1 </item>
//    <item> SFDITEM_REG__AES_KEYR2 </item>
//    <item> SFDITEM_REG__AES_KEYR3 </item>
//    <item> SFDITEM_REG__AES_IVR0 </item>
//    <item> SFDITEM_REG__AES_IVR1 </item>
//    <item> SFDITEM_REG__AES_IVR2 </item>
//    <item> SFDITEM_REG__AES_IVR3 </item>
//    <item> SFDITEM_REG__AES_KEYR4 </item>
//    <item> SFDITEM_REG__AES_KEYR5 </item>
//    <item> SFDITEM_REG__AES_KEYR6 </item>
//    <item> SFDITEM_REG__AES_KEYR7 </item>
//    <item> SFDITEM_REG__AES_SUSP0R </item>
//    <item> SFDITEM_REG__AES_SUSP1R </item>
//    <item> SFDITEM_REG__AES_SUSP2R </item>
//    <item> SFDITEM_REG__AES_SUSP3R </item>
//    <item> SFDITEM_REG__AES_SUSP4R </item>
//    <item> SFDITEM_REG__AES_SUSP5R </item>
//    <item> SFDITEM_REG__AES_SUSP6R </item>
//    <item> SFDITEM_REG__AES_SUSP7R </item>
//    <item> SFDITEM_REG__AES_HWCFR </item>
//    <item> SFDITEM_REG__AES_VERR </item>
//    <item> SFDITEM_REG__AES_IPIDR </item>
//    <item> SFDITEM_REG__AES_SIDR </item>
//  </view>
//  


// ------------------------------  Register Item Address: RNG_CR  ---------------------------------
// SVD Line: 9710

unsigned int RNG_CR __AT (0x40025000);



// --------------------------------  Field Item: RNG_CR_RNGEN  ------------------------------------
// SVD Line: 9719

//  <item> SFDITEM_FIELD__RNG_CR_RNGEN
//    <name> RNGEN </name>
//    <rw> 
//    <i> [Bit 2] RW (@ 0x40025000) Random number generator  enable </i>
//    <check> 
//      <loc> ( (unsigned int) RNG_CR ) </loc>
//      <o.2..2> RNGEN
//    </check>
//  </item>
//  


// ----------------------------------  Field Item: RNG_CR_IE  -------------------------------------
// SVD Line: 9726

//  <item> SFDITEM_FIELD__RNG_CR_IE
//    <name> IE </name>
//    <rw> 
//    <i> [Bit 3] RW (@ 0x40025000) Interrupt enable </i>
//    <check> 
//      <loc> ( (unsigned int) RNG_CR ) </loc>
//      <o.3..3> IE
//    </check>
//  </item>
//  


// ---------------------------------  Field Item: RNG_CR_CED  -------------------------------------
// SVD Line: 9732

//  <item> SFDITEM_FIELD__RNG_CR_CED
//    <name> CED </name>
//    <rw> 
//    <i> [Bit 5] RW (@ 0x40025000) Clock error detection </i>
//    <check> 
//      <loc> ( (unsigned int) RNG_CR ) </loc>
//      <o.5..5> CED
//    </check>
//  </item>
//  


// ---------------------------------  Field Item: RNG_CR_BYP  -------------------------------------
// SVD Line: 9738

//  <item> SFDITEM_FIELD__RNG_CR_BYP
//    <name> BYP </name>
//    <rw> 
//    <i> [Bit 6] RW (@ 0x40025000) Bypass mode enable </i>
//    <check> 
//      <loc> ( (unsigned int) RNG_CR ) </loc>
//      <o.6..6> BYP
//    </check>
//  </item>
//  


// ---------------------------------  Register RTree: RNG_CR  -------------------------------------
// SVD Line: 9710

//  <rtree> SFDITEM_REG__RNG_CR
//    <name> CR </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x40025000) control register </i>
//    <loc> ( (unsigned int)((RNG_CR >> 0) & 0xFFFFFFFF), ((RNG_CR = (RNG_CR & ~(0x6CUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0x6C) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__RNG_CR_RNGEN </item>
//    <item> SFDITEM_FIELD__RNG_CR_IE </item>
//    <item> SFDITEM_FIELD__RNG_CR_CED </item>
//    <item> SFDITEM_FIELD__RNG_CR_BYP </item>
//  </rtree>
//  


// ------------------------------  Register Item Address: RNG_SR  ---------------------------------
// SVD Line: 9746

unsigned int RNG_SR __AT (0x40025004);



// ---------------------------------  Field Item: RNG_SR_SEIS  ------------------------------------
// SVD Line: 9754

//  <item> SFDITEM_FIELD__RNG_SR_SEIS
//    <name> SEIS </name>
//    <rw> 
//    <i> [Bit 6] RW (@ 0x40025004) Seed error interrupt  status </i>
//    <check> 
//      <loc> ( (unsigned int) RNG_SR ) </loc>
//      <o.6..6> SEIS
//    </check>
//  </item>
//  


// ---------------------------------  Field Item: RNG_SR_CEIS  ------------------------------------
// SVD Line: 9762

//  <item> SFDITEM_FIELD__RNG_SR_CEIS
//    <name> CEIS </name>
//    <rw> 
//    <i> [Bit 5] RW (@ 0x40025004) Clock error interrupt  status </i>
//    <check> 
//      <loc> ( (unsigned int) RNG_SR ) </loc>
//      <o.5..5> CEIS
//    </check>
//  </item>
//  


// ---------------------------------  Field Item: RNG_SR_SECS  ------------------------------------
// SVD Line: 9770

//  <item> SFDITEM_FIELD__RNG_SR_SECS
//    <name> SECS </name>
//    <r> 
//    <i> [Bit 2] RO (@ 0x40025004) Seed error current status </i>
//    <check> 
//      <loc> ( (unsigned int) RNG_SR ) </loc>
//      <o.2..2> SECS
//    </check>
//  </item>
//  


// ---------------------------------  Field Item: RNG_SR_CECS  ------------------------------------
// SVD Line: 9777

//  <item> SFDITEM_FIELD__RNG_SR_CECS
//    <name> CECS </name>
//    <r> 
//    <i> [Bit 1] RO (@ 0x40025004) Clock error current status </i>
//    <check> 
//      <loc> ( (unsigned int) RNG_SR ) </loc>
//      <o.1..1> CECS
//    </check>
//  </item>
//  


// ---------------------------------  Field Item: RNG_SR_DRDY  ------------------------------------
// SVD Line: 9784

//  <item> SFDITEM_FIELD__RNG_SR_DRDY
//    <name> DRDY </name>
//    <r> 
//    <i> [Bit 0] RO (@ 0x40025004) Data ready </i>
//    <check> 
//      <loc> ( (unsigned int) RNG_SR ) </loc>
//      <o.0..0> DRDY
//    </check>
//  </item>
//  


// ---------------------------------  Register RTree: RNG_SR  -------------------------------------
// SVD Line: 9746

//  <rtree> SFDITEM_REG__RNG_SR
//    <name> SR </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x40025004) status register </i>
//    <loc> ( (unsigned int)((RNG_SR >> 0) & 0xFFFFFFFF), ((RNG_SR = (RNG_SR & ~(0x60UL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0x60) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__RNG_SR_SEIS </item>
//    <item> SFDITEM_FIELD__RNG_SR_CEIS </item>
//    <item> SFDITEM_FIELD__RNG_SR_SECS </item>
//    <item> SFDITEM_FIELD__RNG_SR_CECS </item>
//    <item> SFDITEM_FIELD__RNG_SR_DRDY </item>
//  </rtree>
//  


// ------------------------------  Register Item Address: RNG_DR  ---------------------------------
// SVD Line: 9793

unsigned int RNG_DR __AT (0x40025008);



// --------------------------------  Field Item: RNG_DR_RNDATA  -----------------------------------
// SVD Line: 9802

//  <item> SFDITEM_FIELD__RNG_DR_RNDATA
//    <name> RNDATA </name>
//    <r> 
//    <i> [Bits 31..0] RO (@ 0x40025008) Random data </i>
//    <edit> 
//      <loc> ( (unsigned int)((RNG_DR >> 0) & 0xFFFFFFFF) ) </loc>
//    </edit>
//  </item>
//  


// ---------------------------------  Register RTree: RNG_DR  -------------------------------------
// SVD Line: 9793

//  <rtree> SFDITEM_REG__RNG_DR
//    <name> DR </name>
//    <r> 
//    <i> [Bits 31..0] RO (@ 0x40025008) data register </i>
//    <loc> ( (unsigned int)((RNG_DR >> 0) & 0xFFFFFFFF) ) </loc>
//    <item> SFDITEM_FIELD__RNG_DR_RNDATA </item>
//  </rtree>
//  


// ----------------------------------  Peripheral View: RNG  --------------------------------------
// SVD Line: 9699

//  <view> RNG
//    <name> RNG </name>
//    <item> SFDITEM_REG__RNG_CR </item>
//    <item> SFDITEM_REG__RNG_SR </item>
//    <item> SFDITEM_REG__RNG_DR </item>
//  </view>
//  


// ------------------------------  Register Item Address: CRC_DR  ---------------------------------
// SVD Line: 9829

unsigned int CRC_DR __AT (0x40023000);



// ----------------------------------  Field Item: CRC_DR_DR  -------------------------------------
// SVD Line: 9838

//  <item> SFDITEM_FIELD__CRC_DR_DR
//    <name> DR </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x40023000) Data register bits </i>
//    <edit> 
//      <loc> ( (unsigned int)((CRC_DR >> 0) & 0xFFFFFFFF), ((CRC_DR = (CRC_DR & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ---------------------------------  Register RTree: CRC_DR  -------------------------------------
// SVD Line: 9829

//  <rtree> SFDITEM_REG__CRC_DR
//    <name> DR </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x40023000) Data register </i>
//    <loc> ( (unsigned int)((CRC_DR >> 0) & 0xFFFFFFFF), ((CRC_DR = (CRC_DR & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__CRC_DR_DR </item>
//  </rtree>
//  


// -----------------------------  Register Item Address: CRC_IDR  ---------------------------------
// SVD Line: 9846

unsigned int CRC_IDR __AT (0x40023004);



// ---------------------------------  Field Item: CRC_IDR_IDR  ------------------------------------
// SVD Line: 9855

//  <item> SFDITEM_FIELD__CRC_IDR_IDR
//    <name> IDR </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x40023004) General-purpose 32-bit data register  bits </i>
//    <edit> 
//      <loc> ( (unsigned int)((CRC_IDR >> 0) & 0xFFFFFFFF), ((CRC_IDR = (CRC_IDR & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ---------------------------------  Register RTree: CRC_IDR  ------------------------------------
// SVD Line: 9846

//  <rtree> SFDITEM_REG__CRC_IDR
//    <name> IDR </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x40023004) Independent data register </i>
//    <loc> ( (unsigned int)((CRC_IDR >> 0) & 0xFFFFFFFF), ((CRC_IDR = (CRC_IDR & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__CRC_IDR_IDR </item>
//  </rtree>
//  


// ------------------------------  Register Item Address: CRC_CR  ---------------------------------
// SVD Line: 9864

unsigned int CRC_CR __AT (0x40023008);



// -------------------------------  Field Item: CRC_CR_REV_OUT  -----------------------------------
// SVD Line: 9872

//  <item> SFDITEM_FIELD__CRC_CR_REV_OUT
//    <name> REV_OUT </name>
//    <rw> 
//    <i> [Bit 7] RW (@ 0x40023008) Reverse output data </i>
//    <check> 
//      <loc> ( (unsigned int) CRC_CR ) </loc>
//      <o.7..7> REV_OUT
//    </check>
//  </item>
//  


// --------------------------------  Field Item: CRC_CR_REV_IN  -----------------------------------
// SVD Line: 9879

//  <item> SFDITEM_FIELD__CRC_CR_REV_IN
//    <name> REV_IN </name>
//    <rw> 
//    <i> [Bits 6..5] RW (@ 0x40023008) Reverse input data </i>
//    <edit> 
//      <loc> ( (unsigned char)((CRC_CR >> 5) & 0x3), ((CRC_CR = (CRC_CR & ~(0x3UL << 5 )) | ((unsigned long)(Gui_u8:GuiVal & 0x3) << 5 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -------------------------------  Field Item: CRC_CR_POLYSIZE  ----------------------------------
// SVD Line: 9886

//  <item> SFDITEM_FIELD__CRC_CR_POLYSIZE
//    <name> POLYSIZE </name>
//    <rw> 
//    <i> [Bits 4..3] RW (@ 0x40023008) Polynomial size </i>
//    <edit> 
//      <loc> ( (unsigned char)((CRC_CR >> 3) & 0x3), ((CRC_CR = (CRC_CR & ~(0x3UL << 3 )) | ((unsigned long)(Gui_u8:GuiVal & 0x3) << 3 ) ) )) </loc>
//    </edit>
//  </item>
//  


// --------------------------------  Field Item: CRC_CR_RESET  ------------------------------------
// SVD Line: 9893

//  <item> SFDITEM_FIELD__CRC_CR_RESET
//    <name> RESET </name>
//    <w> 
//    <i> [Bit 0] WO (@ 0x40023008) RESET bit </i>
//    <check> 
//      <loc> ( (unsigned int) CRC_CR ) </loc>
//      <o.0..0> RESET
//    </check>
//  </item>
//  


// ---------------------------------  Register RTree: CRC_CR  -------------------------------------
// SVD Line: 9864

//  <rtree> SFDITEM_REG__CRC_CR
//    <name> CR </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x40023008) Control register </i>
//    <loc> ( (unsigned int)((CRC_CR >> 0) & 0xFFFFFFFF), ((CRC_CR = (CRC_CR & ~(0xF9UL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xF9) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__CRC_CR_REV_OUT </item>
//    <item> SFDITEM_FIELD__CRC_CR_REV_IN </item>
//    <item> SFDITEM_FIELD__CRC_CR_POLYSIZE </item>
//    <item> SFDITEM_FIELD__CRC_CR_RESET </item>
//  </rtree>
//  


// -----------------------------  Register Item Address: CRC_INIT  --------------------------------
// SVD Line: 9902

unsigned int CRC_INIT __AT (0x40023010);



// ------------------------------  Field Item: CRC_INIT_CRC_INIT  ---------------------------------
// SVD Line: 9911

//  <item> SFDITEM_FIELD__CRC_INIT_CRC_INIT
//    <name> CRC_INIT </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x40023010) Programmable initial CRC  value </i>
//    <edit> 
//      <loc> ( (unsigned int)((CRC_INIT >> 0) & 0xFFFFFFFF), ((CRC_INIT = (CRC_INIT & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// --------------------------------  Register RTree: CRC_INIT  ------------------------------------
// SVD Line: 9902

//  <rtree> SFDITEM_REG__CRC_INIT
//    <name> INIT </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x40023010) Initial CRC value </i>
//    <loc> ( (unsigned int)((CRC_INIT >> 0) & 0xFFFFFFFF), ((CRC_INIT = (CRC_INIT & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__CRC_INIT_CRC_INIT </item>
//  </rtree>
//  


// -----------------------------  Register Item Address: CRC_POL  ---------------------------------
// SVD Line: 9920

unsigned int CRC_POL __AT (0x40023014);



// ---------------------------------  Field Item: CRC_POL_POL  ------------------------------------
// SVD Line: 9929

//  <item> SFDITEM_FIELD__CRC_POL_POL
//    <name> POL </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x40023014) Programmable polynomial </i>
//    <edit> 
//      <loc> ( (unsigned int)((CRC_POL >> 0) & 0xFFFFFFFF), ((CRC_POL = (CRC_POL & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ---------------------------------  Register RTree: CRC_POL  ------------------------------------
// SVD Line: 9920

//  <rtree> SFDITEM_REG__CRC_POL
//    <name> POL </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x40023014) polynomial </i>
//    <loc> ( (unsigned int)((CRC_POL >> 0) & 0xFFFFFFFF), ((CRC_POL = (CRC_POL & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__CRC_POL_POL </item>
//  </rtree>
//  


// ----------------------------------  Peripheral View: CRC  --------------------------------------
// SVD Line: 9812

//  <view> CRC
//    <name> CRC </name>
//    <item> SFDITEM_REG__CRC_DR </item>
//    <item> SFDITEM_REG__CRC_IDR </item>
//    <item> SFDITEM_REG__CRC_CR </item>
//    <item> SFDITEM_REG__CRC_INIT </item>
//    <item> SFDITEM_REG__CRC_POL </item>
//  </view>
//  


// ----------------------------  Register Item Address: EXTI_RTSR1  -------------------------------
// SVD Line: 9966

unsigned int EXTI_RTSR1 __AT (0x40021800);



// -------------------------------  Field Item: EXTI_RTSR1_TR0  -----------------------------------
// SVD Line: 9976

//  <item> SFDITEM_FIELD__EXTI_RTSR1_TR0
//    <name> TR0 </name>
//    <rw> 
//    <i> [Bit 0] RW (@ 0x40021800) Rising trigger event configuration bit  of Configurable Event input </i>
//    <check> 
//      <loc> ( (unsigned int) EXTI_RTSR1 ) </loc>
//      <o.0..0> TR0
//    </check>
//  </item>
//  


// -------------------------------  Field Item: EXTI_RTSR1_TR1  -----------------------------------
// SVD Line: 9983

//  <item> SFDITEM_FIELD__EXTI_RTSR1_TR1
//    <name> TR1 </name>
//    <rw> 
//    <i> [Bit 1] RW (@ 0x40021800) Rising trigger event configuration bit  of Configurable Event input </i>
//    <check> 
//      <loc> ( (unsigned int) EXTI_RTSR1 ) </loc>
//      <o.1..1> TR1
//    </check>
//  </item>
//  


// -------------------------------  Field Item: EXTI_RTSR1_TR2  -----------------------------------
// SVD Line: 9990

//  <item> SFDITEM_FIELD__EXTI_RTSR1_TR2
//    <name> TR2 </name>
//    <rw> 
//    <i> [Bit 2] RW (@ 0x40021800) Rising trigger event configuration bit  of Configurable Event input </i>
//    <check> 
//      <loc> ( (unsigned int) EXTI_RTSR1 ) </loc>
//      <o.2..2> TR2
//    </check>
//  </item>
//  


// -------------------------------  Field Item: EXTI_RTSR1_TR3  -----------------------------------
// SVD Line: 9997

//  <item> SFDITEM_FIELD__EXTI_RTSR1_TR3
//    <name> TR3 </name>
//    <rw> 
//    <i> [Bit 3] RW (@ 0x40021800) Rising trigger event configuration bit  of Configurable Event input </i>
//    <check> 
//      <loc> ( (unsigned int) EXTI_RTSR1 ) </loc>
//      <o.3..3> TR3
//    </check>
//  </item>
//  


// -------------------------------  Field Item: EXTI_RTSR1_TR4  -----------------------------------
// SVD Line: 10004

//  <item> SFDITEM_FIELD__EXTI_RTSR1_TR4
//    <name> TR4 </name>
//    <rw> 
//    <i> [Bit 4] RW (@ 0x40021800) Rising trigger event configuration bit  of Configurable Event input </i>
//    <check> 
//      <loc> ( (unsigned int) EXTI_RTSR1 ) </loc>
//      <o.4..4> TR4
//    </check>
//  </item>
//  


// -------------------------------  Field Item: EXTI_RTSR1_TR5  -----------------------------------
// SVD Line: 10011

//  <item> SFDITEM_FIELD__EXTI_RTSR1_TR5
//    <name> TR5 </name>
//    <rw> 
//    <i> [Bit 5] RW (@ 0x40021800) Rising trigger event configuration bit  of Configurable Event input </i>
//    <check> 
//      <loc> ( (unsigned int) EXTI_RTSR1 ) </loc>
//      <o.5..5> TR5
//    </check>
//  </item>
//  


// -------------------------------  Field Item: EXTI_RTSR1_TR6  -----------------------------------
// SVD Line: 10018

//  <item> SFDITEM_FIELD__EXTI_RTSR1_TR6
//    <name> TR6 </name>
//    <rw> 
//    <i> [Bit 6] RW (@ 0x40021800) Rising trigger event configuration bit  of Configurable Event input </i>
//    <check> 
//      <loc> ( (unsigned int) EXTI_RTSR1 ) </loc>
//      <o.6..6> TR6
//    </check>
//  </item>
//  


// -------------------------------  Field Item: EXTI_RTSR1_TR7  -----------------------------------
// SVD Line: 10025

//  <item> SFDITEM_FIELD__EXTI_RTSR1_TR7
//    <name> TR7 </name>
//    <rw> 
//    <i> [Bit 7] RW (@ 0x40021800) Rising trigger event configuration bit  of Configurable Event input </i>
//    <check> 
//      <loc> ( (unsigned int) EXTI_RTSR1 ) </loc>
//      <o.7..7> TR7
//    </check>
//  </item>
//  


// -------------------------------  Field Item: EXTI_RTSR1_TR8  -----------------------------------
// SVD Line: 10032

//  <item> SFDITEM_FIELD__EXTI_RTSR1_TR8
//    <name> TR8 </name>
//    <rw> 
//    <i> [Bit 8] RW (@ 0x40021800) Rising trigger event configuration bit  of Configurable Event input </i>
//    <check> 
//      <loc> ( (unsigned int) EXTI_RTSR1 ) </loc>
//      <o.8..8> TR8
//    </check>
//  </item>
//  


// -------------------------------  Field Item: EXTI_RTSR1_TR9  -----------------------------------
// SVD Line: 10039

//  <item> SFDITEM_FIELD__EXTI_RTSR1_TR9
//    <name> TR9 </name>
//    <rw> 
//    <i> [Bit 9] RW (@ 0x40021800) Rising trigger event configuration bit  of Configurable Event input </i>
//    <check> 
//      <loc> ( (unsigned int) EXTI_RTSR1 ) </loc>
//      <o.9..9> TR9
//    </check>
//  </item>
//  


// -------------------------------  Field Item: EXTI_RTSR1_TR10  ----------------------------------
// SVD Line: 10046

//  <item> SFDITEM_FIELD__EXTI_RTSR1_TR10
//    <name> TR10 </name>
//    <rw> 
//    <i> [Bit 10] RW (@ 0x40021800) Rising trigger event configuration bit  of Configurable Event input </i>
//    <check> 
//      <loc> ( (unsigned int) EXTI_RTSR1 ) </loc>
//      <o.10..10> TR10
//    </check>
//  </item>
//  


// -------------------------------  Field Item: EXTI_RTSR1_TR11  ----------------------------------
// SVD Line: 10053

//  <item> SFDITEM_FIELD__EXTI_RTSR1_TR11
//    <name> TR11 </name>
//    <rw> 
//    <i> [Bit 11] RW (@ 0x40021800) Rising trigger event configuration bit  of Configurable Event input </i>
//    <check> 
//      <loc> ( (unsigned int) EXTI_RTSR1 ) </loc>
//      <o.11..11> TR11
//    </check>
//  </item>
//  


// -------------------------------  Field Item: EXTI_RTSR1_TR12  ----------------------------------
// SVD Line: 10060

//  <item> SFDITEM_FIELD__EXTI_RTSR1_TR12
//    <name> TR12 </name>
//    <rw> 
//    <i> [Bit 12] RW (@ 0x40021800) Rising trigger event configuration bit  of Configurable Event input </i>
//    <check> 
//      <loc> ( (unsigned int) EXTI_RTSR1 ) </loc>
//      <o.12..12> TR12
//    </check>
//  </item>
//  


// -------------------------------  Field Item: EXTI_RTSR1_TR13  ----------------------------------
// SVD Line: 10067

//  <item> SFDITEM_FIELD__EXTI_RTSR1_TR13
//    <name> TR13 </name>
//    <rw> 
//    <i> [Bit 13] RW (@ 0x40021800) Rising trigger event configuration bit  of Configurable Event input </i>
//    <check> 
//      <loc> ( (unsigned int) EXTI_RTSR1 ) </loc>
//      <o.13..13> TR13
//    </check>
//  </item>
//  


// -------------------------------  Field Item: EXTI_RTSR1_TR14  ----------------------------------
// SVD Line: 10074

//  <item> SFDITEM_FIELD__EXTI_RTSR1_TR14
//    <name> TR14 </name>
//    <rw> 
//    <i> [Bit 14] RW (@ 0x40021800) Rising trigger event configuration bit  of Configurable Event input </i>
//    <check> 
//      <loc> ( (unsigned int) EXTI_RTSR1 ) </loc>
//      <o.14..14> TR14
//    </check>
//  </item>
//  


// -------------------------------  Field Item: EXTI_RTSR1_TR15  ----------------------------------
// SVD Line: 10081

//  <item> SFDITEM_FIELD__EXTI_RTSR1_TR15
//    <name> TR15 </name>
//    <rw> 
//    <i> [Bit 15] RW (@ 0x40021800) Rising trigger event configuration bit  of Configurable Event input </i>
//    <check> 
//      <loc> ( (unsigned int) EXTI_RTSR1 ) </loc>
//      <o.15..15> TR15
//    </check>
//  </item>
//  


// -------------------------------  Field Item: EXTI_RTSR1_TR16  ----------------------------------
// SVD Line: 10088

//  <item> SFDITEM_FIELD__EXTI_RTSR1_TR16
//    <name> TR16 </name>
//    <rw> 
//    <i> [Bit 16] RW (@ 0x40021800) Rising trigger event configuration bit  of Configurable Event input </i>
//    <check> 
//      <loc> ( (unsigned int) EXTI_RTSR1 ) </loc>
//      <o.16..16> TR16
//    </check>
//  </item>
//  


// -------------------------------  Field Item: EXTI_RTSR1_TR17  ----------------------------------
// SVD Line: 10095

//  <item> SFDITEM_FIELD__EXTI_RTSR1_TR17
//    <name> TR17 </name>
//    <rw> 
//    <i> [Bit 17] RW (@ 0x40021800) Rising trigger event configuration bit  of Configurable Event input </i>
//    <check> 
//      <loc> ( (unsigned int) EXTI_RTSR1 ) </loc>
//      <o.17..17> TR17
//    </check>
//  </item>
//  


// -------------------------------  Field Item: EXTI_RTSR1_TR18  ----------------------------------
// SVD Line: 10102

//  <item> SFDITEM_FIELD__EXTI_RTSR1_TR18
//    <name> TR18 </name>
//    <rw> 
//    <i> [Bit 18] RW (@ 0x40021800) Rising trigger event configuration bit  of Configurable Event input </i>
//    <check> 
//      <loc> ( (unsigned int) EXTI_RTSR1 ) </loc>
//      <o.18..18> TR18
//    </check>
//  </item>
//  


// -------------------------------  Register RTree: EXTI_RTSR1  -----------------------------------
// SVD Line: 9966

//  <rtree> SFDITEM_REG__EXTI_RTSR1
//    <name> RTSR1 </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x40021800) EXTI rising trigger selection  register </i>
//    <loc> ( (unsigned int)((EXTI_RTSR1 >> 0) & 0xFFFFFFFF), ((EXTI_RTSR1 = (EXTI_RTSR1 & ~(0x7FFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0x7FFFF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__EXTI_RTSR1_TR0 </item>
//    <item> SFDITEM_FIELD__EXTI_RTSR1_TR1 </item>
//    <item> SFDITEM_FIELD__EXTI_RTSR1_TR2 </item>
//    <item> SFDITEM_FIELD__EXTI_RTSR1_TR3 </item>
//    <item> SFDITEM_FIELD__EXTI_RTSR1_TR4 </item>
//    <item> SFDITEM_FIELD__EXTI_RTSR1_TR5 </item>
//    <item> SFDITEM_FIELD__EXTI_RTSR1_TR6 </item>
//    <item> SFDITEM_FIELD__EXTI_RTSR1_TR7 </item>
//    <item> SFDITEM_FIELD__EXTI_RTSR1_TR8 </item>
//    <item> SFDITEM_FIELD__EXTI_RTSR1_TR9 </item>
//    <item> SFDITEM_FIELD__EXTI_RTSR1_TR10 </item>
//    <item> SFDITEM_FIELD__EXTI_RTSR1_TR11 </item>
//    <item> SFDITEM_FIELD__EXTI_RTSR1_TR12 </item>
//    <item> SFDITEM_FIELD__EXTI_RTSR1_TR13 </item>
//    <item> SFDITEM_FIELD__EXTI_RTSR1_TR14 </item>
//    <item> SFDITEM_FIELD__EXTI_RTSR1_TR15 </item>
//    <item> SFDITEM_FIELD__EXTI_RTSR1_TR16 </item>
//    <item> SFDITEM_FIELD__EXTI_RTSR1_TR17 </item>
//    <item> SFDITEM_FIELD__EXTI_RTSR1_TR18 </item>
//  </rtree>
//  


// ----------------------------  Register Item Address: EXTI_FTSR1  -------------------------------
// SVD Line: 10111

unsigned int EXTI_FTSR1 __AT (0x40021804);



// -------------------------------  Field Item: EXTI_FTSR1_TR0  -----------------------------------
// SVD Line: 10121

//  <item> SFDITEM_FIELD__EXTI_FTSR1_TR0
//    <name> TR0 </name>
//    <rw> 
//    <i> [Bit 0] RW (@ 0x40021804) Rising trigger event configuration bit  of Configurable Event input </i>
//    <check> 
//      <loc> ( (unsigned int) EXTI_FTSR1 ) </loc>
//      <o.0..0> TR0
//    </check>
//  </item>
//  


// -------------------------------  Field Item: EXTI_FTSR1_TR1  -----------------------------------
// SVD Line: 10128

//  <item> SFDITEM_FIELD__EXTI_FTSR1_TR1
//    <name> TR1 </name>
//    <rw> 
//    <i> [Bit 1] RW (@ 0x40021804) Rising trigger event configuration bit  of Configurable Event input </i>
//    <check> 
//      <loc> ( (unsigned int) EXTI_FTSR1 ) </loc>
//      <o.1..1> TR1
//    </check>
//  </item>
//  


// -------------------------------  Field Item: EXTI_FTSR1_TR2  -----------------------------------
// SVD Line: 10135

//  <item> SFDITEM_FIELD__EXTI_FTSR1_TR2
//    <name> TR2 </name>
//    <rw> 
//    <i> [Bit 2] RW (@ 0x40021804) Rising trigger event configuration bit  of Configurable Event input </i>
//    <check> 
//      <loc> ( (unsigned int) EXTI_FTSR1 ) </loc>
//      <o.2..2> TR2
//    </check>
//  </item>
//  


// -------------------------------  Field Item: EXTI_FTSR1_TR3  -----------------------------------
// SVD Line: 10142

//  <item> SFDITEM_FIELD__EXTI_FTSR1_TR3
//    <name> TR3 </name>
//    <rw> 
//    <i> [Bit 3] RW (@ 0x40021804) Rising trigger event configuration bit  of Configurable Event input </i>
//    <check> 
//      <loc> ( (unsigned int) EXTI_FTSR1 ) </loc>
//      <o.3..3> TR3
//    </check>
//  </item>
//  


// -------------------------------  Field Item: EXTI_FTSR1_TR4  -----------------------------------
// SVD Line: 10149

//  <item> SFDITEM_FIELD__EXTI_FTSR1_TR4
//    <name> TR4 </name>
//    <rw> 
//    <i> [Bit 4] RW (@ 0x40021804) Rising trigger event configuration bit  of Configurable Event input </i>
//    <check> 
//      <loc> ( (unsigned int) EXTI_FTSR1 ) </loc>
//      <o.4..4> TR4
//    </check>
//  </item>
//  


// -------------------------------  Field Item: EXTI_FTSR1_TR5  -----------------------------------
// SVD Line: 10156

//  <item> SFDITEM_FIELD__EXTI_FTSR1_TR5
//    <name> TR5 </name>
//    <rw> 
//    <i> [Bit 5] RW (@ 0x40021804) Rising trigger event configuration bit  of Configurable Event input </i>
//    <check> 
//      <loc> ( (unsigned int) EXTI_FTSR1 ) </loc>
//      <o.5..5> TR5
//    </check>
//  </item>
//  


// -------------------------------  Field Item: EXTI_FTSR1_TR6  -----------------------------------
// SVD Line: 10163

//  <item> SFDITEM_FIELD__EXTI_FTSR1_TR6
//    <name> TR6 </name>
//    <rw> 
//    <i> [Bit 6] RW (@ 0x40021804) Rising trigger event configuration bit  of Configurable Event input </i>
//    <check> 
//      <loc> ( (unsigned int) EXTI_FTSR1 ) </loc>
//      <o.6..6> TR6
//    </check>
//  </item>
//  


// -------------------------------  Field Item: EXTI_FTSR1_TR7  -----------------------------------
// SVD Line: 10170

//  <item> SFDITEM_FIELD__EXTI_FTSR1_TR7
//    <name> TR7 </name>
//    <rw> 
//    <i> [Bit 7] RW (@ 0x40021804) Rising trigger event configuration bit  of Configurable Event input </i>
//    <check> 
//      <loc> ( (unsigned int) EXTI_FTSR1 ) </loc>
//      <o.7..7> TR7
//    </check>
//  </item>
//  


// -------------------------------  Field Item: EXTI_FTSR1_TR8  -----------------------------------
// SVD Line: 10177

//  <item> SFDITEM_FIELD__EXTI_FTSR1_TR8
//    <name> TR8 </name>
//    <rw> 
//    <i> [Bit 8] RW (@ 0x40021804) Rising trigger event configuration bit  of Configurable Event input </i>
//    <check> 
//      <loc> ( (unsigned int) EXTI_FTSR1 ) </loc>
//      <o.8..8> TR8
//    </check>
//  </item>
//  


// -------------------------------  Field Item: EXTI_FTSR1_TR9  -----------------------------------
// SVD Line: 10184

//  <item> SFDITEM_FIELD__EXTI_FTSR1_TR9
//    <name> TR9 </name>
//    <rw> 
//    <i> [Bit 9] RW (@ 0x40021804) Rising trigger event configuration bit  of Configurable Event input </i>
//    <check> 
//      <loc> ( (unsigned int) EXTI_FTSR1 ) </loc>
//      <o.9..9> TR9
//    </check>
//  </item>
//  


// -------------------------------  Field Item: EXTI_FTSR1_TR10  ----------------------------------
// SVD Line: 10191

//  <item> SFDITEM_FIELD__EXTI_FTSR1_TR10
//    <name> TR10 </name>
//    <rw> 
//    <i> [Bit 10] RW (@ 0x40021804) Rising trigger event configuration bit  of Configurable Event input </i>
//    <check> 
//      <loc> ( (unsigned int) EXTI_FTSR1 ) </loc>
//      <o.10..10> TR10
//    </check>
//  </item>
//  


// -------------------------------  Field Item: EXTI_FTSR1_TR11  ----------------------------------
// SVD Line: 10198

//  <item> SFDITEM_FIELD__EXTI_FTSR1_TR11
//    <name> TR11 </name>
//    <rw> 
//    <i> [Bit 11] RW (@ 0x40021804) Rising trigger event configuration bit  of Configurable Event input </i>
//    <check> 
//      <loc> ( (unsigned int) EXTI_FTSR1 ) </loc>
//      <o.11..11> TR11
//    </check>
//  </item>
//  


// -------------------------------  Field Item: EXTI_FTSR1_TR12  ----------------------------------
// SVD Line: 10205

//  <item> SFDITEM_FIELD__EXTI_FTSR1_TR12
//    <name> TR12 </name>
//    <rw> 
//    <i> [Bit 12] RW (@ 0x40021804) Rising trigger event configuration bit  of Configurable Event input </i>
//    <check> 
//      <loc> ( (unsigned int) EXTI_FTSR1 ) </loc>
//      <o.12..12> TR12
//    </check>
//  </item>
//  


// -------------------------------  Field Item: EXTI_FTSR1_TR13  ----------------------------------
// SVD Line: 10212

//  <item> SFDITEM_FIELD__EXTI_FTSR1_TR13
//    <name> TR13 </name>
//    <rw> 
//    <i> [Bit 13] RW (@ 0x40021804) Rising trigger event configuration bit  of Configurable Event input </i>
//    <check> 
//      <loc> ( (unsigned int) EXTI_FTSR1 ) </loc>
//      <o.13..13> TR13
//    </check>
//  </item>
//  


// -------------------------------  Field Item: EXTI_FTSR1_TR14  ----------------------------------
// SVD Line: 10219

//  <item> SFDITEM_FIELD__EXTI_FTSR1_TR14
//    <name> TR14 </name>
//    <rw> 
//    <i> [Bit 14] RW (@ 0x40021804) Rising trigger event configuration bit  of Configurable Event input </i>
//    <check> 
//      <loc> ( (unsigned int) EXTI_FTSR1 ) </loc>
//      <o.14..14> TR14
//    </check>
//  </item>
//  


// -------------------------------  Field Item: EXTI_FTSR1_TR15  ----------------------------------
// SVD Line: 10226

//  <item> SFDITEM_FIELD__EXTI_FTSR1_TR15
//    <name> TR15 </name>
//    <rw> 
//    <i> [Bit 15] RW (@ 0x40021804) Rising trigger event configuration bit  of Configurable Event input </i>
//    <check> 
//      <loc> ( (unsigned int) EXTI_FTSR1 ) </loc>
//      <o.15..15> TR15
//    </check>
//  </item>
//  


// -------------------------------  Field Item: EXTI_FTSR1_TR16  ----------------------------------
// SVD Line: 10233

//  <item> SFDITEM_FIELD__EXTI_FTSR1_TR16
//    <name> TR16 </name>
//    <rw> 
//    <i> [Bit 16] RW (@ 0x40021804) Rising trigger event configuration bit  of Configurable Event input </i>
//    <check> 
//      <loc> ( (unsigned int) EXTI_FTSR1 ) </loc>
//      <o.16..16> TR16
//    </check>
//  </item>
//  


// -------------------------------  Field Item: EXTI_FTSR1_TR17  ----------------------------------
// SVD Line: 10240

//  <item> SFDITEM_FIELD__EXTI_FTSR1_TR17
//    <name> TR17 </name>
//    <rw> 
//    <i> [Bit 17] RW (@ 0x40021804) Rising trigger event configuration bit  of Configurable Event input </i>
//    <check> 
//      <loc> ( (unsigned int) EXTI_FTSR1 ) </loc>
//      <o.17..17> TR17
//    </check>
//  </item>
//  


// -------------------------------  Field Item: EXTI_FTSR1_TR18  ----------------------------------
// SVD Line: 10247

//  <item> SFDITEM_FIELD__EXTI_FTSR1_TR18
//    <name> TR18 </name>
//    <rw> 
//    <i> [Bit 18] RW (@ 0x40021804) Rising trigger event configuration bit  of Configurable Event input </i>
//    <check> 
//      <loc> ( (unsigned int) EXTI_FTSR1 ) </loc>
//      <o.18..18> TR18
//    </check>
//  </item>
//  


// -------------------------------  Register RTree: EXTI_FTSR1  -----------------------------------
// SVD Line: 10111

//  <rtree> SFDITEM_REG__EXTI_FTSR1
//    <name> FTSR1 </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x40021804) EXTI falling trigger selection  register </i>
//    <loc> ( (unsigned int)((EXTI_FTSR1 >> 0) & 0xFFFFFFFF), ((EXTI_FTSR1 = (EXTI_FTSR1 & ~(0x7FFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0x7FFFF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__EXTI_FTSR1_TR0 </item>
//    <item> SFDITEM_FIELD__EXTI_FTSR1_TR1 </item>
//    <item> SFDITEM_FIELD__EXTI_FTSR1_TR2 </item>
//    <item> SFDITEM_FIELD__EXTI_FTSR1_TR3 </item>
//    <item> SFDITEM_FIELD__EXTI_FTSR1_TR4 </item>
//    <item> SFDITEM_FIELD__EXTI_FTSR1_TR5 </item>
//    <item> SFDITEM_FIELD__EXTI_FTSR1_TR6 </item>
//    <item> SFDITEM_FIELD__EXTI_FTSR1_TR7 </item>
//    <item> SFDITEM_FIELD__EXTI_FTSR1_TR8 </item>
//    <item> SFDITEM_FIELD__EXTI_FTSR1_TR9 </item>
//    <item> SFDITEM_FIELD__EXTI_FTSR1_TR10 </item>
//    <item> SFDITEM_FIELD__EXTI_FTSR1_TR11 </item>
//    <item> SFDITEM_FIELD__EXTI_FTSR1_TR12 </item>
//    <item> SFDITEM_FIELD__EXTI_FTSR1_TR13 </item>
//    <item> SFDITEM_FIELD__EXTI_FTSR1_TR14 </item>
//    <item> SFDITEM_FIELD__EXTI_FTSR1_TR15 </item>
//    <item> SFDITEM_FIELD__EXTI_FTSR1_TR16 </item>
//    <item> SFDITEM_FIELD__EXTI_FTSR1_TR17 </item>
//    <item> SFDITEM_FIELD__EXTI_FTSR1_TR18 </item>
//  </rtree>
//  


// ---------------------------  Register Item Address: EXTI_SWIER1  -------------------------------
// SVD Line: 10256

unsigned int EXTI_SWIER1 __AT (0x40021808);



// -----------------------------  Field Item: EXTI_SWIER1_SWIER0  ---------------------------------
// SVD Line: 10266

//  <item> SFDITEM_FIELD__EXTI_SWIER1_SWIER0
//    <name> SWIER0 </name>
//    <rw> 
//    <i> [Bit 0] RW (@ 0x40021808) Rising trigger event configuration bit  of Configurable Event input </i>
//    <check> 
//      <loc> ( (unsigned int) EXTI_SWIER1 ) </loc>
//      <o.0..0> SWIER0
//    </check>
//  </item>
//  


// -----------------------------  Field Item: EXTI_SWIER1_SWIER1  ---------------------------------
// SVD Line: 10273

//  <item> SFDITEM_FIELD__EXTI_SWIER1_SWIER1
//    <name> SWIER1 </name>
//    <rw> 
//    <i> [Bit 1] RW (@ 0x40021808) Rising trigger event configuration bit  of Configurable Event input </i>
//    <check> 
//      <loc> ( (unsigned int) EXTI_SWIER1 ) </loc>
//      <o.1..1> SWIER1
//    </check>
//  </item>
//  


// -----------------------------  Field Item: EXTI_SWIER1_SWIER2  ---------------------------------
// SVD Line: 10280

//  <item> SFDITEM_FIELD__EXTI_SWIER1_SWIER2
//    <name> SWIER2 </name>
//    <rw> 
//    <i> [Bit 2] RW (@ 0x40021808) Rising trigger event configuration bit  of Configurable Event input </i>
//    <check> 
//      <loc> ( (unsigned int) EXTI_SWIER1 ) </loc>
//      <o.2..2> SWIER2
//    </check>
//  </item>
//  


// -----------------------------  Field Item: EXTI_SWIER1_SWIER3  ---------------------------------
// SVD Line: 10287

//  <item> SFDITEM_FIELD__EXTI_SWIER1_SWIER3
//    <name> SWIER3 </name>
//    <rw> 
//    <i> [Bit 3] RW (@ 0x40021808) Rising trigger event configuration bit  of Configurable Event input </i>
//    <check> 
//      <loc> ( (unsigned int) EXTI_SWIER1 ) </loc>
//      <o.3..3> SWIER3
//    </check>
//  </item>
//  


// -----------------------------  Field Item: EXTI_SWIER1_SWIER4  ---------------------------------
// SVD Line: 10294

//  <item> SFDITEM_FIELD__EXTI_SWIER1_SWIER4
//    <name> SWIER4 </name>
//    <rw> 
//    <i> [Bit 4] RW (@ 0x40021808) Rising trigger event configuration bit  of Configurable Event input </i>
//    <check> 
//      <loc> ( (unsigned int) EXTI_SWIER1 ) </loc>
//      <o.4..4> SWIER4
//    </check>
//  </item>
//  


// -----------------------------  Field Item: EXTI_SWIER1_SWIER5  ---------------------------------
// SVD Line: 10301

//  <item> SFDITEM_FIELD__EXTI_SWIER1_SWIER5
//    <name> SWIER5 </name>
//    <rw> 
//    <i> [Bit 5] RW (@ 0x40021808) Rising trigger event configuration bit  of Configurable Event input </i>
//    <check> 
//      <loc> ( (unsigned int) EXTI_SWIER1 ) </loc>
//      <o.5..5> SWIER5
//    </check>
//  </item>
//  


// -----------------------------  Field Item: EXTI_SWIER1_SWIER6  ---------------------------------
// SVD Line: 10308

//  <item> SFDITEM_FIELD__EXTI_SWIER1_SWIER6
//    <name> SWIER6 </name>
//    <rw> 
//    <i> [Bit 6] RW (@ 0x40021808) Rising trigger event configuration bit  of Configurable Event input </i>
//    <check> 
//      <loc> ( (unsigned int) EXTI_SWIER1 ) </loc>
//      <o.6..6> SWIER6
//    </check>
//  </item>
//  


// -----------------------------  Field Item: EXTI_SWIER1_SWIER7  ---------------------------------
// SVD Line: 10315

//  <item> SFDITEM_FIELD__EXTI_SWIER1_SWIER7
//    <name> SWIER7 </name>
//    <rw> 
//    <i> [Bit 7] RW (@ 0x40021808) Rising trigger event configuration bit  of Configurable Event input </i>
//    <check> 
//      <loc> ( (unsigned int) EXTI_SWIER1 ) </loc>
//      <o.7..7> SWIER7
//    </check>
//  </item>
//  


// -----------------------------  Field Item: EXTI_SWIER1_SWIER8  ---------------------------------
// SVD Line: 10322

//  <item> SFDITEM_FIELD__EXTI_SWIER1_SWIER8
//    <name> SWIER8 </name>
//    <rw> 
//    <i> [Bit 8] RW (@ 0x40021808) Rising trigger event configuration bit  of Configurable Event input </i>
//    <check> 
//      <loc> ( (unsigned int) EXTI_SWIER1 ) </loc>
//      <o.8..8> SWIER8
//    </check>
//  </item>
//  


// -----------------------------  Field Item: EXTI_SWIER1_SWIER9  ---------------------------------
// SVD Line: 10329

//  <item> SFDITEM_FIELD__EXTI_SWIER1_SWIER9
//    <name> SWIER9 </name>
//    <rw> 
//    <i> [Bit 9] RW (@ 0x40021808) Rising trigger event configuration bit  of Configurable Event input </i>
//    <check> 
//      <loc> ( (unsigned int) EXTI_SWIER1 ) </loc>
//      <o.9..9> SWIER9
//    </check>
//  </item>
//  


// -----------------------------  Field Item: EXTI_SWIER1_SWIER10  --------------------------------
// SVD Line: 10336

//  <item> SFDITEM_FIELD__EXTI_SWIER1_SWIER10
//    <name> SWIER10 </name>
//    <rw> 
//    <i> [Bit 10] RW (@ 0x40021808) Rising trigger event configuration bit  of Configurable Event input </i>
//    <check> 
//      <loc> ( (unsigned int) EXTI_SWIER1 ) </loc>
//      <o.10..10> SWIER10
//    </check>
//  </item>
//  


// -----------------------------  Field Item: EXTI_SWIER1_SWIER11  --------------------------------
// SVD Line: 10343

//  <item> SFDITEM_FIELD__EXTI_SWIER1_SWIER11
//    <name> SWIER11 </name>
//    <rw> 
//    <i> [Bit 11] RW (@ 0x40021808) Rising trigger event configuration bit  of Configurable Event input </i>
//    <check> 
//      <loc> ( (unsigned int) EXTI_SWIER1 ) </loc>
//      <o.11..11> SWIER11
//    </check>
//  </item>
//  


// -----------------------------  Field Item: EXTI_SWIER1_SWIER12  --------------------------------
// SVD Line: 10350

//  <item> SFDITEM_FIELD__EXTI_SWIER1_SWIER12
//    <name> SWIER12 </name>
//    <rw> 
//    <i> [Bit 12] RW (@ 0x40021808) Rising trigger event configuration bit  of Configurable Event input </i>
//    <check> 
//      <loc> ( (unsigned int) EXTI_SWIER1 ) </loc>
//      <o.12..12> SWIER12
//    </check>
//  </item>
//  


// -----------------------------  Field Item: EXTI_SWIER1_SWIER13  --------------------------------
// SVD Line: 10357

//  <item> SFDITEM_FIELD__EXTI_SWIER1_SWIER13
//    <name> SWIER13 </name>
//    <rw> 
//    <i> [Bit 13] RW (@ 0x40021808) Rising trigger event configuration bit  of Configurable Event input </i>
//    <check> 
//      <loc> ( (unsigned int) EXTI_SWIER1 ) </loc>
//      <o.13..13> SWIER13
//    </check>
//  </item>
//  


// -----------------------------  Field Item: EXTI_SWIER1_SWIER14  --------------------------------
// SVD Line: 10364

//  <item> SFDITEM_FIELD__EXTI_SWIER1_SWIER14
//    <name> SWIER14 </name>
//    <rw> 
//    <i> [Bit 14] RW (@ 0x40021808) Rising trigger event configuration bit  of Configurable Event input </i>
//    <check> 
//      <loc> ( (unsigned int) EXTI_SWIER1 ) </loc>
//      <o.14..14> SWIER14
//    </check>
//  </item>
//  


// -----------------------------  Field Item: EXTI_SWIER1_SWIER15  --------------------------------
// SVD Line: 10371

//  <item> SFDITEM_FIELD__EXTI_SWIER1_SWIER15
//    <name> SWIER15 </name>
//    <rw> 
//    <i> [Bit 15] RW (@ 0x40021808) Rising trigger event configuration bit  of Configurable Event input </i>
//    <check> 
//      <loc> ( (unsigned int) EXTI_SWIER1 ) </loc>
//      <o.15..15> SWIER15
//    </check>
//  </item>
//  


// -----------------------------  Field Item: EXTI_SWIER1_SWIER16  --------------------------------
// SVD Line: 10378

//  <item> SFDITEM_FIELD__EXTI_SWIER1_SWIER16
//    <name> SWIER16 </name>
//    <rw> 
//    <i> [Bit 16] RW (@ 0x40021808) Rising trigger event configuration bit  of Configurable Event input </i>
//    <check> 
//      <loc> ( (unsigned int) EXTI_SWIER1 ) </loc>
//      <o.16..16> SWIER16
//    </check>
//  </item>
//  


// -----------------------------  Field Item: EXTI_SWIER1_SWIER17  --------------------------------
// SVD Line: 10385

//  <item> SFDITEM_FIELD__EXTI_SWIER1_SWIER17
//    <name> SWIER17 </name>
//    <rw> 
//    <i> [Bit 17] RW (@ 0x40021808) Rising trigger event configuration bit  of Configurable Event input </i>
//    <check> 
//      <loc> ( (unsigned int) EXTI_SWIER1 ) </loc>
//      <o.17..17> SWIER17
//    </check>
//  </item>
//  


// -----------------------------  Field Item: EXTI_SWIER1_SWIER18  --------------------------------
// SVD Line: 10392

//  <item> SFDITEM_FIELD__EXTI_SWIER1_SWIER18
//    <name> SWIER18 </name>
//    <rw> 
//    <i> [Bit 18] RW (@ 0x40021808) Rising trigger event configuration bit  of Configurable Event input </i>
//    <check> 
//      <loc> ( (unsigned int) EXTI_SWIER1 ) </loc>
//      <o.18..18> SWIER18
//    </check>
//  </item>
//  


// -------------------------------  Register RTree: EXTI_SWIER1  ----------------------------------
// SVD Line: 10256

//  <rtree> SFDITEM_REG__EXTI_SWIER1
//    <name> SWIER1 </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x40021808) EXTI software interrupt event  register </i>
//    <loc> ( (unsigned int)((EXTI_SWIER1 >> 0) & 0xFFFFFFFF), ((EXTI_SWIER1 = (EXTI_SWIER1 & ~(0x7FFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0x7FFFF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__EXTI_SWIER1_SWIER0 </item>
//    <item> SFDITEM_FIELD__EXTI_SWIER1_SWIER1 </item>
//    <item> SFDITEM_FIELD__EXTI_SWIER1_SWIER2 </item>
//    <item> SFDITEM_FIELD__EXTI_SWIER1_SWIER3 </item>
//    <item> SFDITEM_FIELD__EXTI_SWIER1_SWIER4 </item>
//    <item> SFDITEM_FIELD__EXTI_SWIER1_SWIER5 </item>
//    <item> SFDITEM_FIELD__EXTI_SWIER1_SWIER6 </item>
//    <item> SFDITEM_FIELD__EXTI_SWIER1_SWIER7 </item>
//    <item> SFDITEM_FIELD__EXTI_SWIER1_SWIER8 </item>
//    <item> SFDITEM_FIELD__EXTI_SWIER1_SWIER9 </item>
//    <item> SFDITEM_FIELD__EXTI_SWIER1_SWIER10 </item>
//    <item> SFDITEM_FIELD__EXTI_SWIER1_SWIER11 </item>
//    <item> SFDITEM_FIELD__EXTI_SWIER1_SWIER12 </item>
//    <item> SFDITEM_FIELD__EXTI_SWIER1_SWIER13 </item>
//    <item> SFDITEM_FIELD__EXTI_SWIER1_SWIER14 </item>
//    <item> SFDITEM_FIELD__EXTI_SWIER1_SWIER15 </item>
//    <item> SFDITEM_FIELD__EXTI_SWIER1_SWIER16 </item>
//    <item> SFDITEM_FIELD__EXTI_SWIER1_SWIER17 </item>
//    <item> SFDITEM_FIELD__EXTI_SWIER1_SWIER18 </item>
//  </rtree>
//  


// ----------------------------  Register Item Address: EXTI_RPR1  --------------------------------
// SVD Line: 10401

unsigned int EXTI_RPR1 __AT (0x4002180C);



// -------------------------------  Field Item: EXTI_RPR1_RPIF0  ----------------------------------
// SVD Line: 10411

//  <item> SFDITEM_FIELD__EXTI_RPR1_RPIF0
//    <name> RPIF0 </name>
//    <rw> 
//    <i> [Bit 0] RW (@ 0x4002180C) configurable event inputs x rising edge  Pending bit. </i>
//    <check> 
//      <loc> ( (unsigned int) EXTI_RPR1 ) </loc>
//      <o.0..0> RPIF0
//    </check>
//  </item>
//  


// -------------------------------  Field Item: EXTI_RPR1_RPIF1  ----------------------------------
// SVD Line: 10418

//  <item> SFDITEM_FIELD__EXTI_RPR1_RPIF1
//    <name> RPIF1 </name>
//    <rw> 
//    <i> [Bit 1] RW (@ 0x4002180C) configurable event inputs x rising edge  Pending bit. </i>
//    <check> 
//      <loc> ( (unsigned int) EXTI_RPR1 ) </loc>
//      <o.1..1> RPIF1
//    </check>
//  </item>
//  


// -------------------------------  Field Item: EXTI_RPR1_RPIF2  ----------------------------------
// SVD Line: 10425

//  <item> SFDITEM_FIELD__EXTI_RPR1_RPIF2
//    <name> RPIF2 </name>
//    <rw> 
//    <i> [Bit 2] RW (@ 0x4002180C) configurable event inputs x rising edge  Pending bit. </i>
//    <check> 
//      <loc> ( (unsigned int) EXTI_RPR1 ) </loc>
//      <o.2..2> RPIF2
//    </check>
//  </item>
//  


// -------------------------------  Field Item: EXTI_RPR1_RPIF3  ----------------------------------
// SVD Line: 10432

//  <item> SFDITEM_FIELD__EXTI_RPR1_RPIF3
//    <name> RPIF3 </name>
//    <rw> 
//    <i> [Bit 3] RW (@ 0x4002180C) configurable event inputs x rising edge  Pending bit. </i>
//    <check> 
//      <loc> ( (unsigned int) EXTI_RPR1 ) </loc>
//      <o.3..3> RPIF3
//    </check>
//  </item>
//  


// -------------------------------  Field Item: EXTI_RPR1_RPIF4  ----------------------------------
// SVD Line: 10439

//  <item> SFDITEM_FIELD__EXTI_RPR1_RPIF4
//    <name> RPIF4 </name>
//    <rw> 
//    <i> [Bit 4] RW (@ 0x4002180C) configurable event inputs x rising edge  Pending bit. </i>
//    <check> 
//      <loc> ( (unsigned int) EXTI_RPR1 ) </loc>
//      <o.4..4> RPIF4
//    </check>
//  </item>
//  


// -------------------------------  Field Item: EXTI_RPR1_RPIF5  ----------------------------------
// SVD Line: 10446

//  <item> SFDITEM_FIELD__EXTI_RPR1_RPIF5
//    <name> RPIF5 </name>
//    <rw> 
//    <i> [Bit 5] RW (@ 0x4002180C) configurable event inputs x rising edge  Pending bit </i>
//    <check> 
//      <loc> ( (unsigned int) EXTI_RPR1 ) </loc>
//      <o.5..5> RPIF5
//    </check>
//  </item>
//  


// -------------------------------  Field Item: EXTI_RPR1_RPIF6  ----------------------------------
// SVD Line: 10453

//  <item> SFDITEM_FIELD__EXTI_RPR1_RPIF6
//    <name> RPIF6 </name>
//    <rw> 
//    <i> [Bit 6] RW (@ 0x4002180C) configurable event inputs x rising edge  Pending bit. </i>
//    <check> 
//      <loc> ( (unsigned int) EXTI_RPR1 ) </loc>
//      <o.6..6> RPIF6
//    </check>
//  </item>
//  


// -------------------------------  Field Item: EXTI_RPR1_RPIF7  ----------------------------------
// SVD Line: 10460

//  <item> SFDITEM_FIELD__EXTI_RPR1_RPIF7
//    <name> RPIF7 </name>
//    <rw> 
//    <i> [Bit 7] RW (@ 0x4002180C) configurable event inputs x rising edge  Pending bit. </i>
//    <check> 
//      <loc> ( (unsigned int) EXTI_RPR1 ) </loc>
//      <o.7..7> RPIF7
//    </check>
//  </item>
//  


// -------------------------------  Field Item: EXTI_RPR1_RPIF8  ----------------------------------
// SVD Line: 10467

//  <item> SFDITEM_FIELD__EXTI_RPR1_RPIF8
//    <name> RPIF8 </name>
//    <rw> 
//    <i> [Bit 8] RW (@ 0x4002180C) configurable event inputs x rising edge  Pending bit. </i>
//    <check> 
//      <loc> ( (unsigned int) EXTI_RPR1 ) </loc>
//      <o.8..8> RPIF8
//    </check>
//  </item>
//  


// -------------------------------  Field Item: EXTI_RPR1_RPIF9  ----------------------------------
// SVD Line: 10474

//  <item> SFDITEM_FIELD__EXTI_RPR1_RPIF9
//    <name> RPIF9 </name>
//    <rw> 
//    <i> [Bit 9] RW (@ 0x4002180C) configurable event inputs x rising edge  Pending bit. </i>
//    <check> 
//      <loc> ( (unsigned int) EXTI_RPR1 ) </loc>
//      <o.9..9> RPIF9
//    </check>
//  </item>
//  


// ------------------------------  Field Item: EXTI_RPR1_RPIF10  ----------------------------------
// SVD Line: 10481

//  <item> SFDITEM_FIELD__EXTI_RPR1_RPIF10
//    <name> RPIF10 </name>
//    <rw> 
//    <i> [Bit 10] RW (@ 0x4002180C) configurable event inputs x rising edge  Pending bit. </i>
//    <check> 
//      <loc> ( (unsigned int) EXTI_RPR1 ) </loc>
//      <o.10..10> RPIF10
//    </check>
//  </item>
//  


// ------------------------------  Field Item: EXTI_RPR1_RPIF11  ----------------------------------
// SVD Line: 10488

//  <item> SFDITEM_FIELD__EXTI_RPR1_RPIF11
//    <name> RPIF11 </name>
//    <rw> 
//    <i> [Bit 11] RW (@ 0x4002180C) configurable event inputs x rising edge  Pending bit. </i>
//    <check> 
//      <loc> ( (unsigned int) EXTI_RPR1 ) </loc>
//      <o.11..11> RPIF11
//    </check>
//  </item>
//  


// ------------------------------  Field Item: EXTI_RPR1_RPIF12  ----------------------------------
// SVD Line: 10495

//  <item> SFDITEM_FIELD__EXTI_RPR1_RPIF12
//    <name> RPIF12 </name>
//    <rw> 
//    <i> [Bit 12] RW (@ 0x4002180C) configurable event inputs x rising edge  Pending bit. </i>
//    <check> 
//      <loc> ( (unsigned int) EXTI_RPR1 ) </loc>
//      <o.12..12> RPIF12
//    </check>
//  </item>
//  


// ------------------------------  Field Item: EXTI_RPR1_RPIF13  ----------------------------------
// SVD Line: 10502

//  <item> SFDITEM_FIELD__EXTI_RPR1_RPIF13
//    <name> RPIF13 </name>
//    <rw> 
//    <i> [Bit 13] RW (@ 0x4002180C) configurable event inputs x rising edge  Pending bit. </i>
//    <check> 
//      <loc> ( (unsigned int) EXTI_RPR1 ) </loc>
//      <o.13..13> RPIF13
//    </check>
//  </item>
//  


// ------------------------------  Field Item: EXTI_RPR1_RPIF14  ----------------------------------
// SVD Line: 10509

//  <item> SFDITEM_FIELD__EXTI_RPR1_RPIF14
//    <name> RPIF14 </name>
//    <rw> 
//    <i> [Bit 14] RW (@ 0x4002180C) configurable event inputs x rising edge  Pending bit. </i>
//    <check> 
//      <loc> ( (unsigned int) EXTI_RPR1 ) </loc>
//      <o.14..14> RPIF14
//    </check>
//  </item>
//  


// ------------------------------  Field Item: EXTI_RPR1_RPIF15  ----------------------------------
// SVD Line: 10516

//  <item> SFDITEM_FIELD__EXTI_RPR1_RPIF15
//    <name> RPIF15 </name>
//    <rw> 
//    <i> [Bit 15] RW (@ 0x4002180C) configurable event inputs x rising edge  Pending bit. </i>
//    <check> 
//      <loc> ( (unsigned int) EXTI_RPR1 ) </loc>
//      <o.15..15> RPIF15
//    </check>
//  </item>
//  


// ------------------------------  Field Item: EXTI_RPR1_RPIF16  ----------------------------------
// SVD Line: 10523

//  <item> SFDITEM_FIELD__EXTI_RPR1_RPIF16
//    <name> RPIF16 </name>
//    <rw> 
//    <i> [Bit 16] RW (@ 0x4002180C) configurable event inputs x rising edge  Pending bit. </i>
//    <check> 
//      <loc> ( (unsigned int) EXTI_RPR1 ) </loc>
//      <o.16..16> RPIF16
//    </check>
//  </item>
//  


// ------------------------------  Field Item: EXTI_RPR1_RPIF17  ----------------------------------
// SVD Line: 10530

//  <item> SFDITEM_FIELD__EXTI_RPR1_RPIF17
//    <name> RPIF17 </name>
//    <rw> 
//    <i> [Bit 17] RW (@ 0x4002180C) configurable event inputs x rising edge  Pending bit. </i>
//    <check> 
//      <loc> ( (unsigned int) EXTI_RPR1 ) </loc>
//      <o.17..17> RPIF17
//    </check>
//  </item>
//  


// ------------------------------  Field Item: EXTI_RPR1_RPIF18  ----------------------------------
// SVD Line: 10537

//  <item> SFDITEM_FIELD__EXTI_RPR1_RPIF18
//    <name> RPIF18 </name>
//    <rw> 
//    <i> [Bit 18] RW (@ 0x4002180C) configurable event inputs x rising edge  Pending bit. </i>
//    <check> 
//      <loc> ( (unsigned int) EXTI_RPR1 ) </loc>
//      <o.18..18> RPIF18
//    </check>
//  </item>
//  


// --------------------------------  Register RTree: EXTI_RPR1  -----------------------------------
// SVD Line: 10401

//  <rtree> SFDITEM_REG__EXTI_RPR1
//    <name> RPR1 </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x4002180C) EXTI rising edge pending  register </i>
//    <loc> ( (unsigned int)((EXTI_RPR1 >> 0) & 0xFFFFFFFF), ((EXTI_RPR1 = (EXTI_RPR1 & ~(0x7FFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0x7FFFF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__EXTI_RPR1_RPIF0 </item>
//    <item> SFDITEM_FIELD__EXTI_RPR1_RPIF1 </item>
//    <item> SFDITEM_FIELD__EXTI_RPR1_RPIF2 </item>
//    <item> SFDITEM_FIELD__EXTI_RPR1_RPIF3 </item>
//    <item> SFDITEM_FIELD__EXTI_RPR1_RPIF4 </item>
//    <item> SFDITEM_FIELD__EXTI_RPR1_RPIF5 </item>
//    <item> SFDITEM_FIELD__EXTI_RPR1_RPIF6 </item>
//    <item> SFDITEM_FIELD__EXTI_RPR1_RPIF7 </item>
//    <item> SFDITEM_FIELD__EXTI_RPR1_RPIF8 </item>
//    <item> SFDITEM_FIELD__EXTI_RPR1_RPIF9 </item>
//    <item> SFDITEM_FIELD__EXTI_RPR1_RPIF10 </item>
//    <item> SFDITEM_FIELD__EXTI_RPR1_RPIF11 </item>
//    <item> SFDITEM_FIELD__EXTI_RPR1_RPIF12 </item>
//    <item> SFDITEM_FIELD__EXTI_RPR1_RPIF13 </item>
//    <item> SFDITEM_FIELD__EXTI_RPR1_RPIF14 </item>
//    <item> SFDITEM_FIELD__EXTI_RPR1_RPIF15 </item>
//    <item> SFDITEM_FIELD__EXTI_RPR1_RPIF16 </item>
//    <item> SFDITEM_FIELD__EXTI_RPR1_RPIF17 </item>
//    <item> SFDITEM_FIELD__EXTI_RPR1_RPIF18 </item>
//  </rtree>
//  


// ----------------------------  Register Item Address: EXTI_FPR1  --------------------------------
// SVD Line: 10546

unsigned int EXTI_FPR1 __AT (0x40021810);



// -------------------------------  Field Item: EXTI_FPR1_FPIF0  ----------------------------------
// SVD Line: 10556

//  <item> SFDITEM_FIELD__EXTI_FPR1_FPIF0
//    <name> FPIF0 </name>
//    <rw> 
//    <i> [Bit 0] RW (@ 0x40021810) configurable event inputs x falling edge  pending bit. </i>
//    <check> 
//      <loc> ( (unsigned int) EXTI_FPR1 ) </loc>
//      <o.0..0> FPIF0
//    </check>
//  </item>
//  


// -------------------------------  Field Item: EXTI_FPR1_FPIF1  ----------------------------------
// SVD Line: 10563

//  <item> SFDITEM_FIELD__EXTI_FPR1_FPIF1
//    <name> FPIF1 </name>
//    <rw> 
//    <i> [Bit 1] RW (@ 0x40021810) configurable event inputs x falling edge  pending bit. </i>
//    <check> 
//      <loc> ( (unsigned int) EXTI_FPR1 ) </loc>
//      <o.1..1> FPIF1
//    </check>
//  </item>
//  


// -------------------------------  Field Item: EXTI_FPR1_FPIF2  ----------------------------------
// SVD Line: 10570

//  <item> SFDITEM_FIELD__EXTI_FPR1_FPIF2
//    <name> FPIF2 </name>
//    <rw> 
//    <i> [Bit 2] RW (@ 0x40021810) configurable event inputs x falling edge  pending bit. </i>
//    <check> 
//      <loc> ( (unsigned int) EXTI_FPR1 ) </loc>
//      <o.2..2> FPIF2
//    </check>
//  </item>
//  


// -------------------------------  Field Item: EXTI_FPR1_FPIF3  ----------------------------------
// SVD Line: 10577

//  <item> SFDITEM_FIELD__EXTI_FPR1_FPIF3
//    <name> FPIF3 </name>
//    <rw> 
//    <i> [Bit 3] RW (@ 0x40021810) configurable event inputs x falling edge  pending bit. </i>
//    <check> 
//      <loc> ( (unsigned int) EXTI_FPR1 ) </loc>
//      <o.3..3> FPIF3
//    </check>
//  </item>
//  


// -------------------------------  Field Item: EXTI_FPR1_FPIF4  ----------------------------------
// SVD Line: 10584

//  <item> SFDITEM_FIELD__EXTI_FPR1_FPIF4
//    <name> FPIF4 </name>
//    <rw> 
//    <i> [Bit 4] RW (@ 0x40021810) configurable event inputs x falling edge  pending bit. </i>
//    <check> 
//      <loc> ( (unsigned int) EXTI_FPR1 ) </loc>
//      <o.4..4> FPIF4
//    </check>
//  </item>
//  


// -------------------------------  Field Item: EXTI_FPR1_FPIF5  ----------------------------------
// SVD Line: 10591

//  <item> SFDITEM_FIELD__EXTI_FPR1_FPIF5
//    <name> FPIF5 </name>
//    <rw> 
//    <i> [Bit 5] RW (@ 0x40021810) configurable event inputs x falling edge  pending bit. </i>
//    <check> 
//      <loc> ( (unsigned int) EXTI_FPR1 ) </loc>
//      <o.5..5> FPIF5
//    </check>
//  </item>
//  


// -------------------------------  Field Item: EXTI_FPR1_FPIF6  ----------------------------------
// SVD Line: 10598

//  <item> SFDITEM_FIELD__EXTI_FPR1_FPIF6
//    <name> FPIF6 </name>
//    <rw> 
//    <i> [Bit 6] RW (@ 0x40021810) configurable event inputs x falling edge  pending bit. </i>
//    <check> 
//      <loc> ( (unsigned int) EXTI_FPR1 ) </loc>
//      <o.6..6> FPIF6
//    </check>
//  </item>
//  


// -------------------------------  Field Item: EXTI_FPR1_FPIF7  ----------------------------------
// SVD Line: 10605

//  <item> SFDITEM_FIELD__EXTI_FPR1_FPIF7
//    <name> FPIF7 </name>
//    <rw> 
//    <i> [Bit 7] RW (@ 0x40021810) configurable event inputs x falling edge  pending bit. </i>
//    <check> 
//      <loc> ( (unsigned int) EXTI_FPR1 ) </loc>
//      <o.7..7> FPIF7
//    </check>
//  </item>
//  


// -------------------------------  Field Item: EXTI_FPR1_FPIF8  ----------------------------------
// SVD Line: 10612

//  <item> SFDITEM_FIELD__EXTI_FPR1_FPIF8
//    <name> FPIF8 </name>
//    <rw> 
//    <i> [Bit 8] RW (@ 0x40021810) configurable event inputs x falling edge  pending bit. </i>
//    <check> 
//      <loc> ( (unsigned int) EXTI_FPR1 ) </loc>
//      <o.8..8> FPIF8
//    </check>
//  </item>
//  


// -------------------------------  Field Item: EXTI_FPR1_FPIF9  ----------------------------------
// SVD Line: 10619

//  <item> SFDITEM_FIELD__EXTI_FPR1_FPIF9
//    <name> FPIF9 </name>
//    <rw> 
//    <i> [Bit 9] RW (@ 0x40021810) configurable event inputs x falling edge  pending bit. </i>
//    <check> 
//      <loc> ( (unsigned int) EXTI_FPR1 ) </loc>
//      <o.9..9> FPIF9
//    </check>
//  </item>
//  


// ------------------------------  Field Item: EXTI_FPR1_FPIF10  ----------------------------------
// SVD Line: 10626

//  <item> SFDITEM_FIELD__EXTI_FPR1_FPIF10
//    <name> FPIF10 </name>
//    <rw> 
//    <i> [Bit 10] RW (@ 0x40021810) configurable event inputs x falling edge  pending bit. </i>
//    <check> 
//      <loc> ( (unsigned int) EXTI_FPR1 ) </loc>
//      <o.10..10> FPIF10
//    </check>
//  </item>
//  


// ------------------------------  Field Item: EXTI_FPR1_FPIF11  ----------------------------------
// SVD Line: 10633

//  <item> SFDITEM_FIELD__EXTI_FPR1_FPIF11
//    <name> FPIF11 </name>
//    <rw> 
//    <i> [Bit 11] RW (@ 0x40021810) configurable event inputs x falling edge  pending bit. </i>
//    <check> 
//      <loc> ( (unsigned int) EXTI_FPR1 ) </loc>
//      <o.11..11> FPIF11
//    </check>
//  </item>
//  


// ------------------------------  Field Item: EXTI_FPR1_FPIF12  ----------------------------------
// SVD Line: 10640

//  <item> SFDITEM_FIELD__EXTI_FPR1_FPIF12
//    <name> FPIF12 </name>
//    <rw> 
//    <i> [Bit 12] RW (@ 0x40021810) configurable event inputs x falling edge  pending bit. </i>
//    <check> 
//      <loc> ( (unsigned int) EXTI_FPR1 ) </loc>
//      <o.12..12> FPIF12
//    </check>
//  </item>
//  


// ------------------------------  Field Item: EXTI_FPR1_FPIF13  ----------------------------------
// SVD Line: 10647

//  <item> SFDITEM_FIELD__EXTI_FPR1_FPIF13
//    <name> FPIF13 </name>
//    <rw> 
//    <i> [Bit 13] RW (@ 0x40021810) configurable event inputs x falling edge  pending bit. </i>
//    <check> 
//      <loc> ( (unsigned int) EXTI_FPR1 ) </loc>
//      <o.13..13> FPIF13
//    </check>
//  </item>
//  


// ------------------------------  Field Item: EXTI_FPR1_FPIF14  ----------------------------------
// SVD Line: 10654

//  <item> SFDITEM_FIELD__EXTI_FPR1_FPIF14
//    <name> FPIF14 </name>
//    <rw> 
//    <i> [Bit 14] RW (@ 0x40021810) configurable event inputs x falling edge  pending bit. </i>
//    <check> 
//      <loc> ( (unsigned int) EXTI_FPR1 ) </loc>
//      <o.14..14> FPIF14
//    </check>
//  </item>
//  


// ------------------------------  Field Item: EXTI_FPR1_FPIF15  ----------------------------------
// SVD Line: 10661

//  <item> SFDITEM_FIELD__EXTI_FPR1_FPIF15
//    <name> FPIF15 </name>
//    <rw> 
//    <i> [Bit 15] RW (@ 0x40021810) configurable event inputs x falling edge  pending bit. </i>
//    <check> 
//      <loc> ( (unsigned int) EXTI_FPR1 ) </loc>
//      <o.15..15> FPIF15
//    </check>
//  </item>
//  


// ------------------------------  Field Item: EXTI_FPR1_FPIF16  ----------------------------------
// SVD Line: 10668

//  <item> SFDITEM_FIELD__EXTI_FPR1_FPIF16
//    <name> FPIF16 </name>
//    <rw> 
//    <i> [Bit 16] RW (@ 0x40021810) configurable event inputs x falling edge  pending bit. </i>
//    <check> 
//      <loc> ( (unsigned int) EXTI_FPR1 ) </loc>
//      <o.16..16> FPIF16
//    </check>
//  </item>
//  


// ------------------------------  Field Item: EXTI_FPR1_FPIF17  ----------------------------------
// SVD Line: 10675

//  <item> SFDITEM_FIELD__EXTI_FPR1_FPIF17
//    <name> FPIF17 </name>
//    <rw> 
//    <i> [Bit 17] RW (@ 0x40021810) configurable event inputs x falling edge  pending bit. </i>
//    <check> 
//      <loc> ( (unsigned int) EXTI_FPR1 ) </loc>
//      <o.17..17> FPIF17
//    </check>
//  </item>
//  


// ------------------------------  Field Item: EXTI_FPR1_FPIF18  ----------------------------------
// SVD Line: 10682

//  <item> SFDITEM_FIELD__EXTI_FPR1_FPIF18
//    <name> FPIF18 </name>
//    <rw> 
//    <i> [Bit 18] RW (@ 0x40021810) configurable event inputs x falling edge  pending bit. </i>
//    <check> 
//      <loc> ( (unsigned int) EXTI_FPR1 ) </loc>
//      <o.18..18> FPIF18
//    </check>
//  </item>
//  


// --------------------------------  Register RTree: EXTI_FPR1  -----------------------------------
// SVD Line: 10546

//  <rtree> SFDITEM_REG__EXTI_FPR1
//    <name> FPR1 </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x40021810) EXTI falling edge pending  register </i>
//    <loc> ( (unsigned int)((EXTI_FPR1 >> 0) & 0xFFFFFFFF), ((EXTI_FPR1 = (EXTI_FPR1 & ~(0x7FFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0x7FFFF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__EXTI_FPR1_FPIF0 </item>
//    <item> SFDITEM_FIELD__EXTI_FPR1_FPIF1 </item>
//    <item> SFDITEM_FIELD__EXTI_FPR1_FPIF2 </item>
//    <item> SFDITEM_FIELD__EXTI_FPR1_FPIF3 </item>
//    <item> SFDITEM_FIELD__EXTI_FPR1_FPIF4 </item>
//    <item> SFDITEM_FIELD__EXTI_FPR1_FPIF5 </item>
//    <item> SFDITEM_FIELD__EXTI_FPR1_FPIF6 </item>
//    <item> SFDITEM_FIELD__EXTI_FPR1_FPIF7 </item>
//    <item> SFDITEM_FIELD__EXTI_FPR1_FPIF8 </item>
//    <item> SFDITEM_FIELD__EXTI_FPR1_FPIF9 </item>
//    <item> SFDITEM_FIELD__EXTI_FPR1_FPIF10 </item>
//    <item> SFDITEM_FIELD__EXTI_FPR1_FPIF11 </item>
//    <item> SFDITEM_FIELD__EXTI_FPR1_FPIF12 </item>
//    <item> SFDITEM_FIELD__EXTI_FPR1_FPIF13 </item>
//    <item> SFDITEM_FIELD__EXTI_FPR1_FPIF14 </item>
//    <item> SFDITEM_FIELD__EXTI_FPR1_FPIF15 </item>
//    <item> SFDITEM_FIELD__EXTI_FPR1_FPIF16 </item>
//    <item> SFDITEM_FIELD__EXTI_FPR1_FPIF17 </item>
//    <item> SFDITEM_FIELD__EXTI_FPR1_FPIF18 </item>
//  </rtree>
//  


// ---------------------------  Register Item Address: EXTI_EXTICR1  ------------------------------
// SVD Line: 10691

unsigned int EXTI_EXTICR1 __AT (0x40021860);



// ----------------------------  Field Item: EXTI_EXTICR1_EXTI0_7  --------------------------------
// SVD Line: 10701

//  <item> SFDITEM_FIELD__EXTI_EXTICR1_EXTI0_7
//    <name> EXTI0_7 </name>
//    <rw> 
//    <i> [Bits 7..0] RW (@ 0x40021860) GPIO port selection </i>
//    <edit> 
//      <loc> ( (unsigned char)((EXTI_EXTICR1 >> 0) & 0xFF), ((EXTI_EXTICR1 = (EXTI_EXTICR1 & ~(0xFFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ----------------------------  Field Item: EXTI_EXTICR1_EXTI8_15  -------------------------------
// SVD Line: 10707

//  <item> SFDITEM_FIELD__EXTI_EXTICR1_EXTI8_15
//    <name> EXTI8_15 </name>
//    <rw> 
//    <i> [Bits 15..8] RW (@ 0x40021860) GPIO port selection </i>
//    <edit> 
//      <loc> ( (unsigned char)((EXTI_EXTICR1 >> 8) & 0xFF), ((EXTI_EXTICR1 = (EXTI_EXTICR1 & ~(0xFFUL << 8 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFF) << 8 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ---------------------------  Field Item: EXTI_EXTICR1_EXTI16_23  -------------------------------
// SVD Line: 10713

//  <item> SFDITEM_FIELD__EXTI_EXTICR1_EXTI16_23
//    <name> EXTI16_23 </name>
//    <rw> 
//    <i> [Bits 23..16] RW (@ 0x40021860) GPIO port selection </i>
//    <edit> 
//      <loc> ( (unsigned char)((EXTI_EXTICR1 >> 16) & 0xFF), ((EXTI_EXTICR1 = (EXTI_EXTICR1 & ~(0xFFUL << 16 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFF) << 16 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ---------------------------  Field Item: EXTI_EXTICR1_EXTI24_31  -------------------------------
// SVD Line: 10719

//  <item> SFDITEM_FIELD__EXTI_EXTICR1_EXTI24_31
//    <name> EXTI24_31 </name>
//    <rw> 
//    <i> [Bits 31..24] RW (@ 0x40021860) GPIO port selection </i>
//    <edit> 
//      <loc> ( (unsigned char)((EXTI_EXTICR1 >> 24) & 0xFF), ((EXTI_EXTICR1 = (EXTI_EXTICR1 & ~(0xFFUL << 24 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFF) << 24 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ------------------------------  Register RTree: EXTI_EXTICR1  ----------------------------------
// SVD Line: 10691

//  <rtree> SFDITEM_REG__EXTI_EXTICR1
//    <name> EXTICR1 </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x40021860) EXTI external interrupt selection  register </i>
//    <loc> ( (unsigned int)((EXTI_EXTICR1 >> 0) & 0xFFFFFFFF), ((EXTI_EXTICR1 = (EXTI_EXTICR1 & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__EXTI_EXTICR1_EXTI0_7 </item>
//    <item> SFDITEM_FIELD__EXTI_EXTICR1_EXTI8_15 </item>
//    <item> SFDITEM_FIELD__EXTI_EXTICR1_EXTI16_23 </item>
//    <item> SFDITEM_FIELD__EXTI_EXTICR1_EXTI24_31 </item>
//  </rtree>
//  


// ---------------------------  Register Item Address: EXTI_EXTICR2  ------------------------------
// SVD Line: 10727

unsigned int EXTI_EXTICR2 __AT (0x40021864);



// ----------------------------  Field Item: EXTI_EXTICR2_EXTI0_7  --------------------------------
// SVD Line: 10737

//  <item> SFDITEM_FIELD__EXTI_EXTICR2_EXTI0_7
//    <name> EXTI0_7 </name>
//    <rw> 
//    <i> [Bits 7..0] RW (@ 0x40021864) GPIO port selection </i>
//    <edit> 
//      <loc> ( (unsigned char)((EXTI_EXTICR2 >> 0) & 0xFF), ((EXTI_EXTICR2 = (EXTI_EXTICR2 & ~(0xFFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ----------------------------  Field Item: EXTI_EXTICR2_EXTI8_15  -------------------------------
// SVD Line: 10743

//  <item> SFDITEM_FIELD__EXTI_EXTICR2_EXTI8_15
//    <name> EXTI8_15 </name>
//    <rw> 
//    <i> [Bits 15..8] RW (@ 0x40021864) GPIO port selection </i>
//    <edit> 
//      <loc> ( (unsigned char)((EXTI_EXTICR2 >> 8) & 0xFF), ((EXTI_EXTICR2 = (EXTI_EXTICR2 & ~(0xFFUL << 8 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFF) << 8 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ---------------------------  Field Item: EXTI_EXTICR2_EXTI16_23  -------------------------------
// SVD Line: 10749

//  <item> SFDITEM_FIELD__EXTI_EXTICR2_EXTI16_23
//    <name> EXTI16_23 </name>
//    <rw> 
//    <i> [Bits 23..16] RW (@ 0x40021864) GPIO port selection </i>
//    <edit> 
//      <loc> ( (unsigned char)((EXTI_EXTICR2 >> 16) & 0xFF), ((EXTI_EXTICR2 = (EXTI_EXTICR2 & ~(0xFFUL << 16 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFF) << 16 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ---------------------------  Field Item: EXTI_EXTICR2_EXTI24_31  -------------------------------
// SVD Line: 10755

//  <item> SFDITEM_FIELD__EXTI_EXTICR2_EXTI24_31
//    <name> EXTI24_31 </name>
//    <rw> 
//    <i> [Bits 31..24] RW (@ 0x40021864) GPIO port selection </i>
//    <edit> 
//      <loc> ( (unsigned char)((EXTI_EXTICR2 >> 24) & 0xFF), ((EXTI_EXTICR2 = (EXTI_EXTICR2 & ~(0xFFUL << 24 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFF) << 24 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ------------------------------  Register RTree: EXTI_EXTICR2  ----------------------------------
// SVD Line: 10727

//  <rtree> SFDITEM_REG__EXTI_EXTICR2
//    <name> EXTICR2 </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x40021864) EXTI external interrupt selection  register </i>
//    <loc> ( (unsigned int)((EXTI_EXTICR2 >> 0) & 0xFFFFFFFF), ((EXTI_EXTICR2 = (EXTI_EXTICR2 & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__EXTI_EXTICR2_EXTI0_7 </item>
//    <item> SFDITEM_FIELD__EXTI_EXTICR2_EXTI8_15 </item>
//    <item> SFDITEM_FIELD__EXTI_EXTICR2_EXTI16_23 </item>
//    <item> SFDITEM_FIELD__EXTI_EXTICR2_EXTI24_31 </item>
//  </rtree>
//  


// ---------------------------  Register Item Address: EXTI_EXTICR3  ------------------------------
// SVD Line: 10763

unsigned int EXTI_EXTICR3 __AT (0x40021868);



// ----------------------------  Field Item: EXTI_EXTICR3_EXTI0_7  --------------------------------
// SVD Line: 10773

//  <item> SFDITEM_FIELD__EXTI_EXTICR3_EXTI0_7
//    <name> EXTI0_7 </name>
//    <rw> 
//    <i> [Bits 7..0] RW (@ 0x40021868) GPIO port selection </i>
//    <edit> 
//      <loc> ( (unsigned char)((EXTI_EXTICR3 >> 0) & 0xFF), ((EXTI_EXTICR3 = (EXTI_EXTICR3 & ~(0xFFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ----------------------------  Field Item: EXTI_EXTICR3_EXTI8_15  -------------------------------
// SVD Line: 10779

//  <item> SFDITEM_FIELD__EXTI_EXTICR3_EXTI8_15
//    <name> EXTI8_15 </name>
//    <rw> 
//    <i> [Bits 15..8] RW (@ 0x40021868) GPIO port selection </i>
//    <edit> 
//      <loc> ( (unsigned char)((EXTI_EXTICR3 >> 8) & 0xFF), ((EXTI_EXTICR3 = (EXTI_EXTICR3 & ~(0xFFUL << 8 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFF) << 8 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ---------------------------  Field Item: EXTI_EXTICR3_EXTI16_23  -------------------------------
// SVD Line: 10785

//  <item> SFDITEM_FIELD__EXTI_EXTICR3_EXTI16_23
//    <name> EXTI16_23 </name>
//    <rw> 
//    <i> [Bits 23..16] RW (@ 0x40021868) GPIO port selection </i>
//    <edit> 
//      <loc> ( (unsigned char)((EXTI_EXTICR3 >> 16) & 0xFF), ((EXTI_EXTICR3 = (EXTI_EXTICR3 & ~(0xFFUL << 16 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFF) << 16 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ---------------------------  Field Item: EXTI_EXTICR3_EXTI24_31  -------------------------------
// SVD Line: 10791

//  <item> SFDITEM_FIELD__EXTI_EXTICR3_EXTI24_31
//    <name> EXTI24_31 </name>
//    <rw> 
//    <i> [Bits 31..24] RW (@ 0x40021868) GPIO port selection </i>
//    <edit> 
//      <loc> ( (unsigned char)((EXTI_EXTICR3 >> 24) & 0xFF), ((EXTI_EXTICR3 = (EXTI_EXTICR3 & ~(0xFFUL << 24 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFF) << 24 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ------------------------------  Register RTree: EXTI_EXTICR3  ----------------------------------
// SVD Line: 10763

//  <rtree> SFDITEM_REG__EXTI_EXTICR3
//    <name> EXTICR3 </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x40021868) EXTI external interrupt selection  register </i>
//    <loc> ( (unsigned int)((EXTI_EXTICR3 >> 0) & 0xFFFFFFFF), ((EXTI_EXTICR3 = (EXTI_EXTICR3 & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__EXTI_EXTICR3_EXTI0_7 </item>
//    <item> SFDITEM_FIELD__EXTI_EXTICR3_EXTI8_15 </item>
//    <item> SFDITEM_FIELD__EXTI_EXTICR3_EXTI16_23 </item>
//    <item> SFDITEM_FIELD__EXTI_EXTICR3_EXTI24_31 </item>
//  </rtree>
//  


// ---------------------------  Register Item Address: EXTI_EXTICR4  ------------------------------
// SVD Line: 10799

unsigned int EXTI_EXTICR4 __AT (0x4002186C);



// ----------------------------  Field Item: EXTI_EXTICR4_EXTI0_7  --------------------------------
// SVD Line: 10809

//  <item> SFDITEM_FIELD__EXTI_EXTICR4_EXTI0_7
//    <name> EXTI0_7 </name>
//    <rw> 
//    <i> [Bits 7..0] RW (@ 0x4002186C) GPIO port selection </i>
//    <edit> 
//      <loc> ( (unsigned char)((EXTI_EXTICR4 >> 0) & 0xFF), ((EXTI_EXTICR4 = (EXTI_EXTICR4 & ~(0xFFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ----------------------------  Field Item: EXTI_EXTICR4_EXTI8_15  -------------------------------
// SVD Line: 10815

//  <item> SFDITEM_FIELD__EXTI_EXTICR4_EXTI8_15
//    <name> EXTI8_15 </name>
//    <rw> 
//    <i> [Bits 15..8] RW (@ 0x4002186C) GPIO port selection </i>
//    <edit> 
//      <loc> ( (unsigned char)((EXTI_EXTICR4 >> 8) & 0xFF), ((EXTI_EXTICR4 = (EXTI_EXTICR4 & ~(0xFFUL << 8 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFF) << 8 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ---------------------------  Field Item: EXTI_EXTICR4_EXTI16_23  -------------------------------
// SVD Line: 10821

//  <item> SFDITEM_FIELD__EXTI_EXTICR4_EXTI16_23
//    <name> EXTI16_23 </name>
//    <rw> 
//    <i> [Bits 23..16] RW (@ 0x4002186C) GPIO port selection </i>
//    <edit> 
//      <loc> ( (unsigned char)((EXTI_EXTICR4 >> 16) & 0xFF), ((EXTI_EXTICR4 = (EXTI_EXTICR4 & ~(0xFFUL << 16 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFF) << 16 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ---------------------------  Field Item: EXTI_EXTICR4_EXTI24_31  -------------------------------
// SVD Line: 10827

//  <item> SFDITEM_FIELD__EXTI_EXTICR4_EXTI24_31
//    <name> EXTI24_31 </name>
//    <rw> 
//    <i> [Bits 31..24] RW (@ 0x4002186C) GPIO port selection </i>
//    <edit> 
//      <loc> ( (unsigned char)((EXTI_EXTICR4 >> 24) & 0xFF), ((EXTI_EXTICR4 = (EXTI_EXTICR4 & ~(0xFFUL << 24 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFF) << 24 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ------------------------------  Register RTree: EXTI_EXTICR4  ----------------------------------
// SVD Line: 10799

//  <rtree> SFDITEM_REG__EXTI_EXTICR4
//    <name> EXTICR4 </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x4002186C) EXTI external interrupt selection  register </i>
//    <loc> ( (unsigned int)((EXTI_EXTICR4 >> 0) & 0xFFFFFFFF), ((EXTI_EXTICR4 = (EXTI_EXTICR4 & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__EXTI_EXTICR4_EXTI0_7 </item>
//    <item> SFDITEM_FIELD__EXTI_EXTICR4_EXTI8_15 </item>
//    <item> SFDITEM_FIELD__EXTI_EXTICR4_EXTI16_23 </item>
//    <item> SFDITEM_FIELD__EXTI_EXTICR4_EXTI24_31 </item>
//  </rtree>
//  


// ----------------------------  Register Item Address: EXTI_IMR1  --------------------------------
// SVD Line: 10835

unsigned int EXTI_IMR1 __AT (0x40021880);



// --------------------------------  Field Item: EXTI_IMR1_IM0  -----------------------------------
// SVD Line: 10845

//  <item> SFDITEM_FIELD__EXTI_IMR1_IM0
//    <name> IM0 </name>
//    <rw> 
//    <i> [Bit 0] RW (@ 0x40021880) CPU wakeup with interrupt mask on event  input </i>
//    <check> 
//      <loc> ( (unsigned int) EXTI_IMR1 ) </loc>
//      <o.0..0> IM0
//    </check>
//  </item>
//  


// --------------------------------  Field Item: EXTI_IMR1_IM1  -----------------------------------
// SVD Line: 10852

//  <item> SFDITEM_FIELD__EXTI_IMR1_IM1
//    <name> IM1 </name>
//    <rw> 
//    <i> [Bit 1] RW (@ 0x40021880) CPU wakeup with interrupt mask on event  input </i>
//    <check> 
//      <loc> ( (unsigned int) EXTI_IMR1 ) </loc>
//      <o.1..1> IM1
//    </check>
//  </item>
//  


// --------------------------------  Field Item: EXTI_IMR1_IM2  -----------------------------------
// SVD Line: 10859

//  <item> SFDITEM_FIELD__EXTI_IMR1_IM2
//    <name> IM2 </name>
//    <rw> 
//    <i> [Bit 2] RW (@ 0x40021880) CPU wakeup with interrupt mask on event  input </i>
//    <check> 
//      <loc> ( (unsigned int) EXTI_IMR1 ) </loc>
//      <o.2..2> IM2
//    </check>
//  </item>
//  


// --------------------------------  Field Item: EXTI_IMR1_IM3  -----------------------------------
// SVD Line: 10866

//  <item> SFDITEM_FIELD__EXTI_IMR1_IM3
//    <name> IM3 </name>
//    <rw> 
//    <i> [Bit 3] RW (@ 0x40021880) CPU wakeup with interrupt mask on event  input </i>
//    <check> 
//      <loc> ( (unsigned int) EXTI_IMR1 ) </loc>
//      <o.3..3> IM3
//    </check>
//  </item>
//  


// --------------------------------  Field Item: EXTI_IMR1_IM4  -----------------------------------
// SVD Line: 10873

//  <item> SFDITEM_FIELD__EXTI_IMR1_IM4
//    <name> IM4 </name>
//    <rw> 
//    <i> [Bit 4] RW (@ 0x40021880) CPU wakeup with interrupt mask on event  input </i>
//    <check> 
//      <loc> ( (unsigned int) EXTI_IMR1 ) </loc>
//      <o.4..4> IM4
//    </check>
//  </item>
//  


// --------------------------------  Field Item: EXTI_IMR1_IM5  -----------------------------------
// SVD Line: 10880

//  <item> SFDITEM_FIELD__EXTI_IMR1_IM5
//    <name> IM5 </name>
//    <rw> 
//    <i> [Bit 5] RW (@ 0x40021880) CPU wakeup with interrupt mask on event  input </i>
//    <check> 
//      <loc> ( (unsigned int) EXTI_IMR1 ) </loc>
//      <o.5..5> IM5
//    </check>
//  </item>
//  


// --------------------------------  Field Item: EXTI_IMR1_IM6  -----------------------------------
// SVD Line: 10887

//  <item> SFDITEM_FIELD__EXTI_IMR1_IM6
//    <name> IM6 </name>
//    <rw> 
//    <i> [Bit 6] RW (@ 0x40021880) CPU wakeup with interrupt mask on event  input </i>
//    <check> 
//      <loc> ( (unsigned int) EXTI_IMR1 ) </loc>
//      <o.6..6> IM6
//    </check>
//  </item>
//  


// --------------------------------  Field Item: EXTI_IMR1_IM7  -----------------------------------
// SVD Line: 10894

//  <item> SFDITEM_FIELD__EXTI_IMR1_IM7
//    <name> IM7 </name>
//    <rw> 
//    <i> [Bit 7] RW (@ 0x40021880) CPU wakeup with interrupt mask on event  input </i>
//    <check> 
//      <loc> ( (unsigned int) EXTI_IMR1 ) </loc>
//      <o.7..7> IM7
//    </check>
//  </item>
//  


// --------------------------------  Field Item: EXTI_IMR1_IM8  -----------------------------------
// SVD Line: 10901

//  <item> SFDITEM_FIELD__EXTI_IMR1_IM8
//    <name> IM8 </name>
//    <rw> 
//    <i> [Bit 8] RW (@ 0x40021880) CPU wakeup with interrupt mask on event  input </i>
//    <check> 
//      <loc> ( (unsigned int) EXTI_IMR1 ) </loc>
//      <o.8..8> IM8
//    </check>
//  </item>
//  


// --------------------------------  Field Item: EXTI_IMR1_IM9  -----------------------------------
// SVD Line: 10908

//  <item> SFDITEM_FIELD__EXTI_IMR1_IM9
//    <name> IM9 </name>
//    <rw> 
//    <i> [Bit 9] RW (@ 0x40021880) CPU wakeup with interrupt mask on event  input </i>
//    <check> 
//      <loc> ( (unsigned int) EXTI_IMR1 ) </loc>
//      <o.9..9> IM9
//    </check>
//  </item>
//  


// -------------------------------  Field Item: EXTI_IMR1_IM10  -----------------------------------
// SVD Line: 10915

//  <item> SFDITEM_FIELD__EXTI_IMR1_IM10
//    <name> IM10 </name>
//    <rw> 
//    <i> [Bit 10] RW (@ 0x40021880) CPU wakeup with interrupt mask on event  input </i>
//    <check> 
//      <loc> ( (unsigned int) EXTI_IMR1 ) </loc>
//      <o.10..10> IM10
//    </check>
//  </item>
//  


// -------------------------------  Field Item: EXTI_IMR1_IM11  -----------------------------------
// SVD Line: 10922

//  <item> SFDITEM_FIELD__EXTI_IMR1_IM11
//    <name> IM11 </name>
//    <rw> 
//    <i> [Bit 11] RW (@ 0x40021880) CPU wakeup with interrupt mask on event  input </i>
//    <check> 
//      <loc> ( (unsigned int) EXTI_IMR1 ) </loc>
//      <o.11..11> IM11
//    </check>
//  </item>
//  


// -------------------------------  Field Item: EXTI_IMR1_IM12  -----------------------------------
// SVD Line: 10929

//  <item> SFDITEM_FIELD__EXTI_IMR1_IM12
//    <name> IM12 </name>
//    <rw> 
//    <i> [Bit 12] RW (@ 0x40021880) CPU wakeup with interrupt mask on event  input </i>
//    <check> 
//      <loc> ( (unsigned int) EXTI_IMR1 ) </loc>
//      <o.12..12> IM12
//    </check>
//  </item>
//  


// -------------------------------  Field Item: EXTI_IMR1_IM13  -----------------------------------
// SVD Line: 10936

//  <item> SFDITEM_FIELD__EXTI_IMR1_IM13
//    <name> IM13 </name>
//    <rw> 
//    <i> [Bit 13] RW (@ 0x40021880) CPU wakeup with interrupt mask on event  input </i>
//    <check> 
//      <loc> ( (unsigned int) EXTI_IMR1 ) </loc>
//      <o.13..13> IM13
//    </check>
//  </item>
//  


// -------------------------------  Field Item: EXTI_IMR1_IM14  -----------------------------------
// SVD Line: 10943

//  <item> SFDITEM_FIELD__EXTI_IMR1_IM14
//    <name> IM14 </name>
//    <rw> 
//    <i> [Bit 14] RW (@ 0x40021880) CPU wakeup with interrupt mask on event  input </i>
//    <check> 
//      <loc> ( (unsigned int) EXTI_IMR1 ) </loc>
//      <o.14..14> IM14
//    </check>
//  </item>
//  


// -------------------------------  Field Item: EXTI_IMR1_IM15  -----------------------------------
// SVD Line: 10950

//  <item> SFDITEM_FIELD__EXTI_IMR1_IM15
//    <name> IM15 </name>
//    <rw> 
//    <i> [Bit 15] RW (@ 0x40021880) CPU wakeup with interrupt mask on event  input </i>
//    <check> 
//      <loc> ( (unsigned int) EXTI_IMR1 ) </loc>
//      <o.15..15> IM15
//    </check>
//  </item>
//  


// -------------------------------  Field Item: EXTI_IMR1_IM16  -----------------------------------
// SVD Line: 10957

//  <item> SFDITEM_FIELD__EXTI_IMR1_IM16
//    <name> IM16 </name>
//    <rw> 
//    <i> [Bit 16] RW (@ 0x40021880) CPU wakeup with interrupt mask on event  input </i>
//    <check> 
//      <loc> ( (unsigned int) EXTI_IMR1 ) </loc>
//      <o.16..16> IM16
//    </check>
//  </item>
//  


// -------------------------------  Field Item: EXTI_IMR1_IM17  -----------------------------------
// SVD Line: 10964

//  <item> SFDITEM_FIELD__EXTI_IMR1_IM17
//    <name> IM17 </name>
//    <rw> 
//    <i> [Bit 17] RW (@ 0x40021880) CPU wakeup with interrupt mask on event  input </i>
//    <check> 
//      <loc> ( (unsigned int) EXTI_IMR1 ) </loc>
//      <o.17..17> IM17
//    </check>
//  </item>
//  


// -------------------------------  Field Item: EXTI_IMR1_IM18  -----------------------------------
// SVD Line: 10971

//  <item> SFDITEM_FIELD__EXTI_IMR1_IM18
//    <name> IM18 </name>
//    <rw> 
//    <i> [Bit 18] RW (@ 0x40021880) CPU wakeup with interrupt mask on event  input </i>
//    <check> 
//      <loc> ( (unsigned int) EXTI_IMR1 ) </loc>
//      <o.18..18> IM18
//    </check>
//  </item>
//  


// -------------------------------  Field Item: EXTI_IMR1_IM19  -----------------------------------
// SVD Line: 10978

//  <item> SFDITEM_FIELD__EXTI_IMR1_IM19
//    <name> IM19 </name>
//    <rw> 
//    <i> [Bit 19] RW (@ 0x40021880) CPU wakeup with interrupt mask on event  input </i>
//    <check> 
//      <loc> ( (unsigned int) EXTI_IMR1 ) </loc>
//      <o.19..19> IM19
//    </check>
//  </item>
//  


// -------------------------------  Field Item: EXTI_IMR1_IM20  -----------------------------------
// SVD Line: 10985

//  <item> SFDITEM_FIELD__EXTI_IMR1_IM20
//    <name> IM20 </name>
//    <rw> 
//    <i> [Bit 20] RW (@ 0x40021880) CPU wakeup with interrupt mask on event  input </i>
//    <check> 
//      <loc> ( (unsigned int) EXTI_IMR1 ) </loc>
//      <o.20..20> IM20
//    </check>
//  </item>
//  


// -------------------------------  Field Item: EXTI_IMR1_IM21  -----------------------------------
// SVD Line: 10992

//  <item> SFDITEM_FIELD__EXTI_IMR1_IM21
//    <name> IM21 </name>
//    <rw> 
//    <i> [Bit 21] RW (@ 0x40021880) CPU wakeup with interrupt mask on event  input </i>
//    <check> 
//      <loc> ( (unsigned int) EXTI_IMR1 ) </loc>
//      <o.21..21> IM21
//    </check>
//  </item>
//  


// -------------------------------  Field Item: EXTI_IMR1_IM22  -----------------------------------
// SVD Line: 10999

//  <item> SFDITEM_FIELD__EXTI_IMR1_IM22
//    <name> IM22 </name>
//    <rw> 
//    <i> [Bit 22] RW (@ 0x40021880) CPU wakeup with interrupt mask on event  input </i>
//    <check> 
//      <loc> ( (unsigned int) EXTI_IMR1 ) </loc>
//      <o.22..22> IM22
//    </check>
//  </item>
//  


// -------------------------------  Field Item: EXTI_IMR1_IM23  -----------------------------------
// SVD Line: 11006

//  <item> SFDITEM_FIELD__EXTI_IMR1_IM23
//    <name> IM23 </name>
//    <rw> 
//    <i> [Bit 23] RW (@ 0x40021880) CPU wakeup with interrupt mask on event  input </i>
//    <check> 
//      <loc> ( (unsigned int) EXTI_IMR1 ) </loc>
//      <o.23..23> IM23
//    </check>
//  </item>
//  


// -------------------------------  Field Item: EXTI_IMR1_IM24  -----------------------------------
// SVD Line: 11013

//  <item> SFDITEM_FIELD__EXTI_IMR1_IM24
//    <name> IM24 </name>
//    <rw> 
//    <i> [Bit 24] RW (@ 0x40021880) CPU wakeup with interrupt mask on event  input </i>
//    <check> 
//      <loc> ( (unsigned int) EXTI_IMR1 ) </loc>
//      <o.24..24> IM24
//    </check>
//  </item>
//  


// -------------------------------  Field Item: EXTI_IMR1_IM25  -----------------------------------
// SVD Line: 11020

//  <item> SFDITEM_FIELD__EXTI_IMR1_IM25
//    <name> IM25 </name>
//    <rw> 
//    <i> [Bit 25] RW (@ 0x40021880) CPU wakeup with interrupt mask on event  input </i>
//    <check> 
//      <loc> ( (unsigned int) EXTI_IMR1 ) </loc>
//      <o.25..25> IM25
//    </check>
//  </item>
//  


// -------------------------------  Field Item: EXTI_IMR1_IM26  -----------------------------------
// SVD Line: 11027

//  <item> SFDITEM_FIELD__EXTI_IMR1_IM26
//    <name> IM26 </name>
//    <rw> 
//    <i> [Bit 26] RW (@ 0x40021880) CPU wakeup with interrupt mask on event  input </i>
//    <check> 
//      <loc> ( (unsigned int) EXTI_IMR1 ) </loc>
//      <o.26..26> IM26
//    </check>
//  </item>
//  


// -------------------------------  Field Item: EXTI_IMR1_IM27  -----------------------------------
// SVD Line: 11034

//  <item> SFDITEM_FIELD__EXTI_IMR1_IM27
//    <name> IM27 </name>
//    <rw> 
//    <i> [Bit 27] RW (@ 0x40021880) CPU wakeup with interrupt mask on event  input </i>
//    <check> 
//      <loc> ( (unsigned int) EXTI_IMR1 ) </loc>
//      <o.27..27> IM27
//    </check>
//  </item>
//  


// -------------------------------  Field Item: EXTI_IMR1_IM28  -----------------------------------
// SVD Line: 11041

//  <item> SFDITEM_FIELD__EXTI_IMR1_IM28
//    <name> IM28 </name>
//    <rw> 
//    <i> [Bit 28] RW (@ 0x40021880) CPU wakeup with interrupt mask on event  input </i>
//    <check> 
//      <loc> ( (unsigned int) EXTI_IMR1 ) </loc>
//      <o.28..28> IM28
//    </check>
//  </item>
//  


// -------------------------------  Field Item: EXTI_IMR1_IM29  -----------------------------------
// SVD Line: 11048

//  <item> SFDITEM_FIELD__EXTI_IMR1_IM29
//    <name> IM29 </name>
//    <rw> 
//    <i> [Bit 29] RW (@ 0x40021880) CPU wakeup with interrupt mask on event  input </i>
//    <check> 
//      <loc> ( (unsigned int) EXTI_IMR1 ) </loc>
//      <o.29..29> IM29
//    </check>
//  </item>
//  


// -------------------------------  Field Item: EXTI_IMR1_IM30  -----------------------------------
// SVD Line: 11055

//  <item> SFDITEM_FIELD__EXTI_IMR1_IM30
//    <name> IM30 </name>
//    <rw> 
//    <i> [Bit 30] RW (@ 0x40021880) CPU wakeup with interrupt mask on event  input </i>
//    <check> 
//      <loc> ( (unsigned int) EXTI_IMR1 ) </loc>
//      <o.30..30> IM30
//    </check>
//  </item>
//  


// -------------------------------  Field Item: EXTI_IMR1_IM31  -----------------------------------
// SVD Line: 11062

//  <item> SFDITEM_FIELD__EXTI_IMR1_IM31
//    <name> IM31 </name>
//    <rw> 
//    <i> [Bit 31] RW (@ 0x40021880) CPU wakeup with interrupt mask on event  input </i>
//    <check> 
//      <loc> ( (unsigned int) EXTI_IMR1 ) </loc>
//      <o.31..31> IM31
//    </check>
//  </item>
//  


// --------------------------------  Register RTree: EXTI_IMR1  -----------------------------------
// SVD Line: 10835

//  <rtree> SFDITEM_REG__EXTI_IMR1
//    <name> IMR1 </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x40021880) EXTI CPU wakeup with interrupt mask  register </i>
//    <loc> ( (unsigned int)((EXTI_IMR1 >> 0) & 0xFFFFFFFF), ((EXTI_IMR1 = (EXTI_IMR1 & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__EXTI_IMR1_IM0 </item>
//    <item> SFDITEM_FIELD__EXTI_IMR1_IM1 </item>
//    <item> SFDITEM_FIELD__EXTI_IMR1_IM2 </item>
//    <item> SFDITEM_FIELD__EXTI_IMR1_IM3 </item>
//    <item> SFDITEM_FIELD__EXTI_IMR1_IM4 </item>
//    <item> SFDITEM_FIELD__EXTI_IMR1_IM5 </item>
//    <item> SFDITEM_FIELD__EXTI_IMR1_IM6 </item>
//    <item> SFDITEM_FIELD__EXTI_IMR1_IM7 </item>
//    <item> SFDITEM_FIELD__EXTI_IMR1_IM8 </item>
//    <item> SFDITEM_FIELD__EXTI_IMR1_IM9 </item>
//    <item> SFDITEM_FIELD__EXTI_IMR1_IM10 </item>
//    <item> SFDITEM_FIELD__EXTI_IMR1_IM11 </item>
//    <item> SFDITEM_FIELD__EXTI_IMR1_IM12 </item>
//    <item> SFDITEM_FIELD__EXTI_IMR1_IM13 </item>
//    <item> SFDITEM_FIELD__EXTI_IMR1_IM14 </item>
//    <item> SFDITEM_FIELD__EXTI_IMR1_IM15 </item>
//    <item> SFDITEM_FIELD__EXTI_IMR1_IM16 </item>
//    <item> SFDITEM_FIELD__EXTI_IMR1_IM17 </item>
//    <item> SFDITEM_FIELD__EXTI_IMR1_IM18 </item>
//    <item> SFDITEM_FIELD__EXTI_IMR1_IM19 </item>
//    <item> SFDITEM_FIELD__EXTI_IMR1_IM20 </item>
//    <item> SFDITEM_FIELD__EXTI_IMR1_IM21 </item>
//    <item> SFDITEM_FIELD__EXTI_IMR1_IM22 </item>
//    <item> SFDITEM_FIELD__EXTI_IMR1_IM23 </item>
//    <item> SFDITEM_FIELD__EXTI_IMR1_IM24 </item>
//    <item> SFDITEM_FIELD__EXTI_IMR1_IM25 </item>
//    <item> SFDITEM_FIELD__EXTI_IMR1_IM26 </item>
//    <item> SFDITEM_FIELD__EXTI_IMR1_IM27 </item>
//    <item> SFDITEM_FIELD__EXTI_IMR1_IM28 </item>
//    <item> SFDITEM_FIELD__EXTI_IMR1_IM29 </item>
//    <item> SFDITEM_FIELD__EXTI_IMR1_IM30 </item>
//    <item> SFDITEM_FIELD__EXTI_IMR1_IM31 </item>
//  </rtree>
//  


// ----------------------------  Register Item Address: EXTI_EMR1  --------------------------------
// SVD Line: 11071

unsigned int EXTI_EMR1 __AT (0x40021884);



// --------------------------------  Field Item: EXTI_EMR1_EM0  -----------------------------------
// SVD Line: 11082

//  <item> SFDITEM_FIELD__EXTI_EMR1_EM0
//    <name> EM0 </name>
//    <rw> 
//    <i> [Bit 0] RW (@ 0x40021884) CPU wakeup with event mask on event  input </i>
//    <check> 
//      <loc> ( (unsigned int) EXTI_EMR1 ) </loc>
//      <o.0..0> EM0
//    </check>
//  </item>
//  


// --------------------------------  Field Item: EXTI_EMR1_EM1  -----------------------------------
// SVD Line: 11089

//  <item> SFDITEM_FIELD__EXTI_EMR1_EM1
//    <name> EM1 </name>
//    <rw> 
//    <i> [Bit 1] RW (@ 0x40021884) CPU wakeup with event mask on event  input </i>
//    <check> 
//      <loc> ( (unsigned int) EXTI_EMR1 ) </loc>
//      <o.1..1> EM1
//    </check>
//  </item>
//  


// --------------------------------  Field Item: EXTI_EMR1_EM2  -----------------------------------
// SVD Line: 11096

//  <item> SFDITEM_FIELD__EXTI_EMR1_EM2
//    <name> EM2 </name>
//    <rw> 
//    <i> [Bit 2] RW (@ 0x40021884) CPU wakeup with event mask on event  input </i>
//    <check> 
//      <loc> ( (unsigned int) EXTI_EMR1 ) </loc>
//      <o.2..2> EM2
//    </check>
//  </item>
//  


// --------------------------------  Field Item: EXTI_EMR1_EM3  -----------------------------------
// SVD Line: 11103

//  <item> SFDITEM_FIELD__EXTI_EMR1_EM3
//    <name> EM3 </name>
//    <rw> 
//    <i> [Bit 3] RW (@ 0x40021884) CPU wakeup with event mask on event  input </i>
//    <check> 
//      <loc> ( (unsigned int) EXTI_EMR1 ) </loc>
//      <o.3..3> EM3
//    </check>
//  </item>
//  


// --------------------------------  Field Item: EXTI_EMR1_EM4  -----------------------------------
// SVD Line: 11110

//  <item> SFDITEM_FIELD__EXTI_EMR1_EM4
//    <name> EM4 </name>
//    <rw> 
//    <i> [Bit 4] RW (@ 0x40021884) CPU wakeup with event mask on event  input </i>
//    <check> 
//      <loc> ( (unsigned int) EXTI_EMR1 ) </loc>
//      <o.4..4> EM4
//    </check>
//  </item>
//  


// --------------------------------  Field Item: EXTI_EMR1_EM5  -----------------------------------
// SVD Line: 11117

//  <item> SFDITEM_FIELD__EXTI_EMR1_EM5
//    <name> EM5 </name>
//    <rw> 
//    <i> [Bit 5] RW (@ 0x40021884) CPU wakeup with event mask on event  input </i>
//    <check> 
//      <loc> ( (unsigned int) EXTI_EMR1 ) </loc>
//      <o.5..5> EM5
//    </check>
//  </item>
//  


// --------------------------------  Field Item: EXTI_EMR1_EM6  -----------------------------------
// SVD Line: 11124

//  <item> SFDITEM_FIELD__EXTI_EMR1_EM6
//    <name> EM6 </name>
//    <rw> 
//    <i> [Bit 6] RW (@ 0x40021884) CPU wakeup with event mask on event  input </i>
//    <check> 
//      <loc> ( (unsigned int) EXTI_EMR1 ) </loc>
//      <o.6..6> EM6
//    </check>
//  </item>
//  


// --------------------------------  Field Item: EXTI_EMR1_EM7  -----------------------------------
// SVD Line: 11131

//  <item> SFDITEM_FIELD__EXTI_EMR1_EM7
//    <name> EM7 </name>
//    <rw> 
//    <i> [Bit 7] RW (@ 0x40021884) CPU wakeup with event mask on event  input </i>
//    <check> 
//      <loc> ( (unsigned int) EXTI_EMR1 ) </loc>
//      <o.7..7> EM7
//    </check>
//  </item>
//  


// --------------------------------  Field Item: EXTI_EMR1_EM8  -----------------------------------
// SVD Line: 11138

//  <item> SFDITEM_FIELD__EXTI_EMR1_EM8
//    <name> EM8 </name>
//    <rw> 
//    <i> [Bit 8] RW (@ 0x40021884) CPU wakeup with event mask on event  input </i>
//    <check> 
//      <loc> ( (unsigned int) EXTI_EMR1 ) </loc>
//      <o.8..8> EM8
//    </check>
//  </item>
//  


// --------------------------------  Field Item: EXTI_EMR1_EM9  -----------------------------------
// SVD Line: 11145

//  <item> SFDITEM_FIELD__EXTI_EMR1_EM9
//    <name> EM9 </name>
//    <rw> 
//    <i> [Bit 9] RW (@ 0x40021884) CPU wakeup with event mask on event  input </i>
//    <check> 
//      <loc> ( (unsigned int) EXTI_EMR1 ) </loc>
//      <o.9..9> EM9
//    </check>
//  </item>
//  


// -------------------------------  Field Item: EXTI_EMR1_EM10  -----------------------------------
// SVD Line: 11152

//  <item> SFDITEM_FIELD__EXTI_EMR1_EM10
//    <name> EM10 </name>
//    <rw> 
//    <i> [Bit 10] RW (@ 0x40021884) CPU wakeup with event mask on event  input </i>
//    <check> 
//      <loc> ( (unsigned int) EXTI_EMR1 ) </loc>
//      <o.10..10> EM10
//    </check>
//  </item>
//  


// -------------------------------  Field Item: EXTI_EMR1_EM11  -----------------------------------
// SVD Line: 11159

//  <item> SFDITEM_FIELD__EXTI_EMR1_EM11
//    <name> EM11 </name>
//    <rw> 
//    <i> [Bit 11] RW (@ 0x40021884) CPU wakeup with event mask on event  input </i>
//    <check> 
//      <loc> ( (unsigned int) EXTI_EMR1 ) </loc>
//      <o.11..11> EM11
//    </check>
//  </item>
//  


// -------------------------------  Field Item: EXTI_EMR1_EM12  -----------------------------------
// SVD Line: 11166

//  <item> SFDITEM_FIELD__EXTI_EMR1_EM12
//    <name> EM12 </name>
//    <rw> 
//    <i> [Bit 12] RW (@ 0x40021884) CPU wakeup with event mask on event  input </i>
//    <check> 
//      <loc> ( (unsigned int) EXTI_EMR1 ) </loc>
//      <o.12..12> EM12
//    </check>
//  </item>
//  


// -------------------------------  Field Item: EXTI_EMR1_EM13  -----------------------------------
// SVD Line: 11173

//  <item> SFDITEM_FIELD__EXTI_EMR1_EM13
//    <name> EM13 </name>
//    <rw> 
//    <i> [Bit 13] RW (@ 0x40021884) CPU wakeup with event mask on event  input </i>
//    <check> 
//      <loc> ( (unsigned int) EXTI_EMR1 ) </loc>
//      <o.13..13> EM13
//    </check>
//  </item>
//  


// -------------------------------  Field Item: EXTI_EMR1_EM14  -----------------------------------
// SVD Line: 11180

//  <item> SFDITEM_FIELD__EXTI_EMR1_EM14
//    <name> EM14 </name>
//    <rw> 
//    <i> [Bit 14] RW (@ 0x40021884) CPU wakeup with event mask on event  input </i>
//    <check> 
//      <loc> ( (unsigned int) EXTI_EMR1 ) </loc>
//      <o.14..14> EM14
//    </check>
//  </item>
//  


// -------------------------------  Field Item: EXTI_EMR1_EM15  -----------------------------------
// SVD Line: 11187

//  <item> SFDITEM_FIELD__EXTI_EMR1_EM15
//    <name> EM15 </name>
//    <rw> 
//    <i> [Bit 15] RW (@ 0x40021884) CPU wakeup with event mask on event  input </i>
//    <check> 
//      <loc> ( (unsigned int) EXTI_EMR1 ) </loc>
//      <o.15..15> EM15
//    </check>
//  </item>
//  


// -------------------------------  Field Item: EXTI_EMR1_EM16  -----------------------------------
// SVD Line: 11194

//  <item> SFDITEM_FIELD__EXTI_EMR1_EM16
//    <name> EM16 </name>
//    <rw> 
//    <i> [Bit 16] RW (@ 0x40021884) CPU wakeup with event mask on event  input </i>
//    <check> 
//      <loc> ( (unsigned int) EXTI_EMR1 ) </loc>
//      <o.16..16> EM16
//    </check>
//  </item>
//  


// -------------------------------  Field Item: EXTI_EMR1_EM17  -----------------------------------
// SVD Line: 11201

//  <item> SFDITEM_FIELD__EXTI_EMR1_EM17
//    <name> EM17 </name>
//    <rw> 
//    <i> [Bit 17] RW (@ 0x40021884) CPU wakeup with event mask on event  input </i>
//    <check> 
//      <loc> ( (unsigned int) EXTI_EMR1 ) </loc>
//      <o.17..17> EM17
//    </check>
//  </item>
//  


// -------------------------------  Field Item: EXTI_EMR1_EM18  -----------------------------------
// SVD Line: 11208

//  <item> SFDITEM_FIELD__EXTI_EMR1_EM18
//    <name> EM18 </name>
//    <rw> 
//    <i> [Bit 18] RW (@ 0x40021884) CPU wakeup with event mask on event  input </i>
//    <check> 
//      <loc> ( (unsigned int) EXTI_EMR1 ) </loc>
//      <o.18..18> EM18
//    </check>
//  </item>
//  


// -------------------------------  Field Item: EXTI_EMR1_EM19  -----------------------------------
// SVD Line: 11215

//  <item> SFDITEM_FIELD__EXTI_EMR1_EM19
//    <name> EM19 </name>
//    <rw> 
//    <i> [Bit 19] RW (@ 0x40021884) CPU wakeup with event mask on event  input </i>
//    <check> 
//      <loc> ( (unsigned int) EXTI_EMR1 ) </loc>
//      <o.19..19> EM19
//    </check>
//  </item>
//  


// -------------------------------  Field Item: EXTI_EMR1_EM21  -----------------------------------
// SVD Line: 11222

//  <item> SFDITEM_FIELD__EXTI_EMR1_EM21
//    <name> EM21 </name>
//    <rw> 
//    <i> [Bit 21] RW (@ 0x40021884) CPU wakeup with event mask on event  input </i>
//    <check> 
//      <loc> ( (unsigned int) EXTI_EMR1 ) </loc>
//      <o.21..21> EM21
//    </check>
//  </item>
//  


// -------------------------------  Field Item: EXTI_EMR1_EM23  -----------------------------------
// SVD Line: 11229

//  <item> SFDITEM_FIELD__EXTI_EMR1_EM23
//    <name> EM23 </name>
//    <rw> 
//    <i> [Bit 23] RW (@ 0x40021884) CPU wakeup with event mask on event  input </i>
//    <check> 
//      <loc> ( (unsigned int) EXTI_EMR1 ) </loc>
//      <o.23..23> EM23
//    </check>
//  </item>
//  


// -------------------------------  Field Item: EXTI_EMR1_EM25  -----------------------------------
// SVD Line: 11236

//  <item> SFDITEM_FIELD__EXTI_EMR1_EM25
//    <name> EM25 </name>
//    <rw> 
//    <i> [Bit 25] RW (@ 0x40021884) CPU wakeup with event mask on event  input </i>
//    <check> 
//      <loc> ( (unsigned int) EXTI_EMR1 ) </loc>
//      <o.25..25> EM25
//    </check>
//  </item>
//  


// -------------------------------  Field Item: EXTI_EMR1_EM26  -----------------------------------
// SVD Line: 11243

//  <item> SFDITEM_FIELD__EXTI_EMR1_EM26
//    <name> EM26 </name>
//    <rw> 
//    <i> [Bit 26] RW (@ 0x40021884) CPU wakeup with event mask on event  input </i>
//    <check> 
//      <loc> ( (unsigned int) EXTI_EMR1 ) </loc>
//      <o.26..26> EM26
//    </check>
//  </item>
//  


// -------------------------------  Field Item: EXTI_EMR1_EM27  -----------------------------------
// SVD Line: 11250

//  <item> SFDITEM_FIELD__EXTI_EMR1_EM27
//    <name> EM27 </name>
//    <rw> 
//    <i> [Bit 27] RW (@ 0x40021884) CPU wakeup with event mask on event  input </i>
//    <check> 
//      <loc> ( (unsigned int) EXTI_EMR1 ) </loc>
//      <o.27..27> EM27
//    </check>
//  </item>
//  


// -------------------------------  Field Item: EXTI_EMR1_EM28  -----------------------------------
// SVD Line: 11257

//  <item> SFDITEM_FIELD__EXTI_EMR1_EM28
//    <name> EM28 </name>
//    <rw> 
//    <i> [Bit 28] RW (@ 0x40021884) CPU wakeup with event mask on event  input </i>
//    <check> 
//      <loc> ( (unsigned int) EXTI_EMR1 ) </loc>
//      <o.28..28> EM28
//    </check>
//  </item>
//  


// -------------------------------  Field Item: EXTI_EMR1_EM29  -----------------------------------
// SVD Line: 11264

//  <item> SFDITEM_FIELD__EXTI_EMR1_EM29
//    <name> EM29 </name>
//    <rw> 
//    <i> [Bit 29] RW (@ 0x40021884) CPU wakeup with event mask on event  input </i>
//    <check> 
//      <loc> ( (unsigned int) EXTI_EMR1 ) </loc>
//      <o.29..29> EM29
//    </check>
//  </item>
//  


// -------------------------------  Field Item: EXTI_EMR1_EM30  -----------------------------------
// SVD Line: 11271

//  <item> SFDITEM_FIELD__EXTI_EMR1_EM30
//    <name> EM30 </name>
//    <rw> 
//    <i> [Bit 30] RW (@ 0x40021884) CPU wakeup with event mask on event  input </i>
//    <check> 
//      <loc> ( (unsigned int) EXTI_EMR1 ) </loc>
//      <o.30..30> EM30
//    </check>
//  </item>
//  


// -------------------------------  Field Item: EXTI_EMR1_EM31  -----------------------------------
// SVD Line: 11278

//  <item> SFDITEM_FIELD__EXTI_EMR1_EM31
//    <name> EM31 </name>
//    <rw> 
//    <i> [Bit 31] RW (@ 0x40021884) CPU wakeup with event mask on event  input </i>
//    <check> 
//      <loc> ( (unsigned int) EXTI_EMR1 ) </loc>
//      <o.31..31> EM31
//    </check>
//  </item>
//  


// --------------------------------  Register RTree: EXTI_EMR1  -----------------------------------
// SVD Line: 11071

//  <rtree> SFDITEM_REG__EXTI_EMR1
//    <name> EMR1 </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x40021884) EXTI CPU wakeup with event mask  register </i>
//    <loc> ( (unsigned int)((EXTI_EMR1 >> 0) & 0xFFFFFFFF), ((EXTI_EMR1 = (EXTI_EMR1 & ~(0xFEAFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFEAFFFFF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__EXTI_EMR1_EM0 </item>
//    <item> SFDITEM_FIELD__EXTI_EMR1_EM1 </item>
//    <item> SFDITEM_FIELD__EXTI_EMR1_EM2 </item>
//    <item> SFDITEM_FIELD__EXTI_EMR1_EM3 </item>
//    <item> SFDITEM_FIELD__EXTI_EMR1_EM4 </item>
//    <item> SFDITEM_FIELD__EXTI_EMR1_EM5 </item>
//    <item> SFDITEM_FIELD__EXTI_EMR1_EM6 </item>
//    <item> SFDITEM_FIELD__EXTI_EMR1_EM7 </item>
//    <item> SFDITEM_FIELD__EXTI_EMR1_EM8 </item>
//    <item> SFDITEM_FIELD__EXTI_EMR1_EM9 </item>
//    <item> SFDITEM_FIELD__EXTI_EMR1_EM10 </item>
//    <item> SFDITEM_FIELD__EXTI_EMR1_EM11 </item>
//    <item> SFDITEM_FIELD__EXTI_EMR1_EM12 </item>
//    <item> SFDITEM_FIELD__EXTI_EMR1_EM13 </item>
//    <item> SFDITEM_FIELD__EXTI_EMR1_EM14 </item>
//    <item> SFDITEM_FIELD__EXTI_EMR1_EM15 </item>
//    <item> SFDITEM_FIELD__EXTI_EMR1_EM16 </item>
//    <item> SFDITEM_FIELD__EXTI_EMR1_EM17 </item>
//    <item> SFDITEM_FIELD__EXTI_EMR1_EM18 </item>
//    <item> SFDITEM_FIELD__EXTI_EMR1_EM19 </item>
//    <item> SFDITEM_FIELD__EXTI_EMR1_EM21 </item>
//    <item> SFDITEM_FIELD__EXTI_EMR1_EM23 </item>
//    <item> SFDITEM_FIELD__EXTI_EMR1_EM25 </item>
//    <item> SFDITEM_FIELD__EXTI_EMR1_EM26 </item>
//    <item> SFDITEM_FIELD__EXTI_EMR1_EM27 </item>
//    <item> SFDITEM_FIELD__EXTI_EMR1_EM28 </item>
//    <item> SFDITEM_FIELD__EXTI_EMR1_EM29 </item>
//    <item> SFDITEM_FIELD__EXTI_EMR1_EM30 </item>
//    <item> SFDITEM_FIELD__EXTI_EMR1_EM31 </item>
//  </rtree>
//  


// ----------------------------  Register Item Address: EXTI_IMR2  --------------------------------
// SVD Line: 11287

unsigned int EXTI_IMR2 __AT (0x40021890);



// -------------------------------  Field Item: EXTI_IMR2_IM32  -----------------------------------
// SVD Line: 11297

//  <item> SFDITEM_FIELD__EXTI_IMR2_IM32
//    <name> IM32 </name>
//    <rw> 
//    <i> [Bit 0] RW (@ 0x40021890) CPU wakeup with interrupt mask on event  input </i>
//    <check> 
//      <loc> ( (unsigned int) EXTI_IMR2 ) </loc>
//      <o.0..0> IM32
//    </check>
//  </item>
//  


// -------------------------------  Field Item: EXTI_IMR2_IM33  -----------------------------------
// SVD Line: 11304

//  <item> SFDITEM_FIELD__EXTI_IMR2_IM33
//    <name> IM33 </name>
//    <rw> 
//    <i> [Bit 1] RW (@ 0x40021890) CPU wakeup with interrupt mask on event  input </i>
//    <check> 
//      <loc> ( (unsigned int) EXTI_IMR2 ) </loc>
//      <o.1..1> IM33
//    </check>
//  </item>
//  


// --------------------------------  Register RTree: EXTI_IMR2  -----------------------------------
// SVD Line: 11287

//  <rtree> SFDITEM_REG__EXTI_IMR2
//    <name> IMR2 </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x40021890) EXTI CPU wakeup with interrupt mask  register </i>
//    <loc> ( (unsigned int)((EXTI_IMR2 >> 0) & 0xFFFFFFFF), ((EXTI_IMR2 = (EXTI_IMR2 & ~(0x3UL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0x3) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__EXTI_IMR2_IM32 </item>
//    <item> SFDITEM_FIELD__EXTI_IMR2_IM33 </item>
//  </rtree>
//  


// ----------------------------  Register Item Address: EXTI_EMR2  --------------------------------
// SVD Line: 11313

unsigned int EXTI_EMR2 __AT (0x40021894);



// -------------------------------  Field Item: EXTI_EMR2_EM32  -----------------------------------
// SVD Line: 11323

//  <item> SFDITEM_FIELD__EXTI_EMR2_EM32
//    <name> EM32 </name>
//    <rw> 
//    <i> [Bit 0] RW (@ 0x40021894) CPU wakeup with event mask on event  input </i>
//    <check> 
//      <loc> ( (unsigned int) EXTI_EMR2 ) </loc>
//      <o.0..0> EM32
//    </check>
//  </item>
//  


// -------------------------------  Field Item: EXTI_EMR2_EM33  -----------------------------------
// SVD Line: 11330

//  <item> SFDITEM_FIELD__EXTI_EMR2_EM33
//    <name> EM33 </name>
//    <rw> 
//    <i> [Bit 1] RW (@ 0x40021894) CPU wakeup with event mask on event  input </i>
//    <check> 
//      <loc> ( (unsigned int) EXTI_EMR2 ) </loc>
//      <o.1..1> EM33
//    </check>
//  </item>
//  


// --------------------------------  Register RTree: EXTI_EMR2  -----------------------------------
// SVD Line: 11313

//  <rtree> SFDITEM_REG__EXTI_EMR2
//    <name> EMR2 </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x40021894) EXTI CPU wakeup with event mask  register </i>
//    <loc> ( (unsigned int)((EXTI_EMR2 >> 0) & 0xFFFFFFFF), ((EXTI_EMR2 = (EXTI_EMR2 & ~(0x3UL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0x3) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__EXTI_EMR2_EM32 </item>
//    <item> SFDITEM_FIELD__EXTI_EMR2_EM33 </item>
//  </rtree>
//  


// ---------------------------  Register Item Address: EXTI_HWCFGR7  ------------------------------
// SVD Line: 11339

unsigned int EXTI_HWCFGR7 __AT (0x40021BD8);



// ----------------------------  Field Item: EXTI_HWCFGR7_CPUEVENT  -------------------------------
// SVD Line: 11349

//  <item> SFDITEM_FIELD__EXTI_HWCFGR7_CPUEVENT
//    <name> CPUEVENT </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x40021BD8) HW configuration CPU event  generation </i>
//    <edit> 
//      <loc> ( (unsigned int)((EXTI_HWCFGR7 >> 0) & 0xFFFFFFFF), ((EXTI_HWCFGR7 = (EXTI_HWCFGR7 & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ------------------------------  Register RTree: EXTI_HWCFGR7  ----------------------------------
// SVD Line: 11339

//  <rtree> SFDITEM_REG__EXTI_HWCFGR7
//    <name> HWCFGR7 </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x40021BD8) Hardware configuration  registers </i>
//    <loc> ( (unsigned int)((EXTI_HWCFGR7 >> 0) & 0xFFFFFFFF), ((EXTI_HWCFGR7 = (EXTI_HWCFGR7 & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__EXTI_HWCFGR7_CPUEVENT </item>
//  </rtree>
//  


// ---------------------------  Register Item Address: EXTI_HWCFGR6  ------------------------------
// SVD Line: 11358

unsigned int EXTI_HWCFGR6 __AT (0x40021BDC);



// ----------------------------  Field Item: EXTI_HWCFGR6_CPUEVENT  -------------------------------
// SVD Line: 11368

//  <item> SFDITEM_FIELD__EXTI_HWCFGR6_CPUEVENT
//    <name> CPUEVENT </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x40021BDC) HW configuration CPU event  generation </i>
//    <edit> 
//      <loc> ( (unsigned int)((EXTI_HWCFGR6 >> 0) & 0xFFFFFFFF), ((EXTI_HWCFGR6 = (EXTI_HWCFGR6 & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ------------------------------  Register RTree: EXTI_HWCFGR6  ----------------------------------
// SVD Line: 11358

//  <rtree> SFDITEM_REG__EXTI_HWCFGR6
//    <name> HWCFGR6 </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x40021BDC) Hardware configuration  registers </i>
//    <loc> ( (unsigned int)((EXTI_HWCFGR6 >> 0) & 0xFFFFFFFF), ((EXTI_HWCFGR6 = (EXTI_HWCFGR6 & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__EXTI_HWCFGR6_CPUEVENT </item>
//  </rtree>
//  


// ---------------------------  Register Item Address: EXTI_HWCFGR5  ------------------------------
// SVD Line: 11377

unsigned int EXTI_HWCFGR5 __AT (0x40021BE0);



// ----------------------------  Field Item: EXTI_HWCFGR5_CPUEVENT  -------------------------------
// SVD Line: 11387

//  <item> SFDITEM_FIELD__EXTI_HWCFGR5_CPUEVENT
//    <name> CPUEVENT </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x40021BE0) HW configuration CPU event  generation </i>
//    <edit> 
//      <loc> ( (unsigned int)((EXTI_HWCFGR5 >> 0) & 0xFFFFFFFF), ((EXTI_HWCFGR5 = (EXTI_HWCFGR5 & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ------------------------------  Register RTree: EXTI_HWCFGR5  ----------------------------------
// SVD Line: 11377

//  <rtree> SFDITEM_REG__EXTI_HWCFGR5
//    <name> HWCFGR5 </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x40021BE0) Hardware configuration  registers </i>
//    <loc> ( (unsigned int)((EXTI_HWCFGR5 >> 0) & 0xFFFFFFFF), ((EXTI_HWCFGR5 = (EXTI_HWCFGR5 & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__EXTI_HWCFGR5_CPUEVENT </item>
//  </rtree>
//  


// ---------------------------  Register Item Address: EXTI_HWCFGR4  ------------------------------
// SVD Line: 11396

unsigned int EXTI_HWCFGR4 __AT (0x40021BE4);



// ---------------------------  Field Item: EXTI_HWCFGR4_EVENT_TRG  -------------------------------
// SVD Line: 11406

//  <item> SFDITEM_FIELD__EXTI_HWCFGR4_EVENT_TRG
//    <name> EVENT_TRG </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x40021BE4) HW configuration event trigger  type </i>
//    <edit> 
//      <loc> ( (unsigned int)((EXTI_HWCFGR4 >> 0) & 0xFFFFFFFF), ((EXTI_HWCFGR4 = (EXTI_HWCFGR4 & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ------------------------------  Register RTree: EXTI_HWCFGR4  ----------------------------------
// SVD Line: 11396

//  <rtree> SFDITEM_REG__EXTI_HWCFGR4
//    <name> HWCFGR4 </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x40021BE4) Hardware configuration  registers </i>
//    <loc> ( (unsigned int)((EXTI_HWCFGR4 >> 0) & 0xFFFFFFFF), ((EXTI_HWCFGR4 = (EXTI_HWCFGR4 & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__EXTI_HWCFGR4_EVENT_TRG </item>
//  </rtree>
//  


// ---------------------------  Register Item Address: EXTI_HWCFGR3  ------------------------------
// SVD Line: 11415

unsigned int EXTI_HWCFGR3 __AT (0x40021BE8);



// ---------------------------  Field Item: EXTI_HWCFGR3_EVENT_TRG  -------------------------------
// SVD Line: 11425

//  <item> SFDITEM_FIELD__EXTI_HWCFGR3_EVENT_TRG
//    <name> EVENT_TRG </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x40021BE8) HW configuration event trigger  type </i>
//    <edit> 
//      <loc> ( (unsigned int)((EXTI_HWCFGR3 >> 0) & 0xFFFFFFFF), ((EXTI_HWCFGR3 = (EXTI_HWCFGR3 & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ------------------------------  Register RTree: EXTI_HWCFGR3  ----------------------------------
// SVD Line: 11415

//  <rtree> SFDITEM_REG__EXTI_HWCFGR3
//    <name> HWCFGR3 </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x40021BE8) Hardware configuration  registers </i>
//    <loc> ( (unsigned int)((EXTI_HWCFGR3 >> 0) & 0xFFFFFFFF), ((EXTI_HWCFGR3 = (EXTI_HWCFGR3 & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__EXTI_HWCFGR3_EVENT_TRG </item>
//  </rtree>
//  


// ---------------------------  Register Item Address: EXTI_HWCFGR2  ------------------------------
// SVD Line: 11434

unsigned int EXTI_HWCFGR2 __AT (0x40021BEC);



// ---------------------------  Field Item: EXTI_HWCFGR2_EVENT_TRG  -------------------------------
// SVD Line: 11444

//  <item> SFDITEM_FIELD__EXTI_HWCFGR2_EVENT_TRG
//    <name> EVENT_TRG </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x40021BEC) HW configuration event trigger  type </i>
//    <edit> 
//      <loc> ( (unsigned int)((EXTI_HWCFGR2 >> 0) & 0xFFFFFFFF), ((EXTI_HWCFGR2 = (EXTI_HWCFGR2 & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ------------------------------  Register RTree: EXTI_HWCFGR2  ----------------------------------
// SVD Line: 11434

//  <rtree> SFDITEM_REG__EXTI_HWCFGR2
//    <name> HWCFGR2 </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x40021BEC) Hardware configuration  registers </i>
//    <loc> ( (unsigned int)((EXTI_HWCFGR2 >> 0) & 0xFFFFFFFF), ((EXTI_HWCFGR2 = (EXTI_HWCFGR2 & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__EXTI_HWCFGR2_EVENT_TRG </item>
//  </rtree>
//  


// ---------------------------  Register Item Address: EXTI_HWCFGR1  ------------------------------
// SVD Line: 11453

unsigned int EXTI_HWCFGR1 __AT (0x40021BF0);



// ----------------------------  Field Item: EXTI_HWCFGR1_NBIOPORT  -------------------------------
// SVD Line: 11463

//  <item> SFDITEM_FIELD__EXTI_HWCFGR1_NBIOPORT
//    <name> NBIOPORT </name>
//    <r> 
//    <i> [Bits 23..16] RO (@ 0x40021BF0) HW configuration of number of IO  ports </i>
//    <edit> 
//      <loc> ( (unsigned char)((EXTI_HWCFGR1 >> 16) & 0xFF) ) </loc>
//    </edit>
//  </item>
//  


// ----------------------------  Field Item: EXTI_HWCFGR1_CPUEVTEN  -------------------------------
// SVD Line: 11470

//  <item> SFDITEM_FIELD__EXTI_HWCFGR1_CPUEVTEN
//    <name> CPUEVTEN </name>
//    <r> 
//    <i> [Bits 15..12] RO (@ 0x40021BF0) HW configuration of CPU event output  enable </i>
//    <edit> 
//      <loc> ( (unsigned char)((EXTI_HWCFGR1 >> 12) & 0xF) ) </loc>
//    </edit>
//  </item>
//  


// -----------------------------  Field Item: EXTI_HWCFGR1_NBCPUS  --------------------------------
// SVD Line: 11477

//  <item> SFDITEM_FIELD__EXTI_HWCFGR1_NBCPUS
//    <name> NBCPUS </name>
//    <r> 
//    <i> [Bits 11..8] RO (@ 0x40021BF0) configuration number of  CPUs </i>
//    <edit> 
//      <loc> ( (unsigned char)((EXTI_HWCFGR1 >> 8) & 0xF) ) </loc>
//    </edit>
//  </item>
//  


// ----------------------------  Field Item: EXTI_HWCFGR1_NBEVENTS  -------------------------------
// SVD Line: 11484

//  <item> SFDITEM_FIELD__EXTI_HWCFGR1_NBEVENTS
//    <name> NBEVENTS </name>
//    <r> 
//    <i> [Bits 7..0] RO (@ 0x40021BF0) configuration number of  event </i>
//    <edit> 
//      <loc> ( (unsigned char)((EXTI_HWCFGR1 >> 0) & 0xFF) ) </loc>
//    </edit>
//  </item>
//  


// ------------------------------  Register RTree: EXTI_HWCFGR1  ----------------------------------
// SVD Line: 11453

//  <rtree> SFDITEM_REG__EXTI_HWCFGR1
//    <name> HWCFGR1 </name>
//    <r> 
//    <i> [Bits 31..0] RO (@ 0x40021BF0) Hardware configuration  registers </i>
//    <loc> ( (unsigned int)((EXTI_HWCFGR1 >> 0) & 0xFFFFFFFF) ) </loc>
//    <item> SFDITEM_FIELD__EXTI_HWCFGR1_NBIOPORT </item>
//    <item> SFDITEM_FIELD__EXTI_HWCFGR1_CPUEVTEN </item>
//    <item> SFDITEM_FIELD__EXTI_HWCFGR1_NBCPUS </item>
//    <item> SFDITEM_FIELD__EXTI_HWCFGR1_NBEVENTS </item>
//  </rtree>
//  


// ----------------------------  Register Item Address: EXTI_VERR  --------------------------------
// SVD Line: 11493

unsigned int EXTI_VERR __AT (0x40021BF4);



// ------------------------------  Field Item: EXTI_VERR_MAJREV  ----------------------------------
// SVD Line: 11502

//  <item> SFDITEM_FIELD__EXTI_VERR_MAJREV
//    <name> MAJREV </name>
//    <r> 
//    <i> [Bits 7..4] RO (@ 0x40021BF4) Major revision </i>
//    <edit> 
//      <loc> ( (unsigned char)((EXTI_VERR >> 4) & 0xF) ) </loc>
//    </edit>
//  </item>
//  


// ------------------------------  Field Item: EXTI_VERR_MINREV  ----------------------------------
// SVD Line: 11508

//  <item> SFDITEM_FIELD__EXTI_VERR_MINREV
//    <name> MINREV </name>
//    <r> 
//    <i> [Bits 3..0] RO (@ 0x40021BF4) Minor revision </i>
//    <edit> 
//      <loc> ( (unsigned char)((EXTI_VERR >> 0) & 0xF) ) </loc>
//    </edit>
//  </item>
//  


// --------------------------------  Register RTree: EXTI_VERR  -----------------------------------
// SVD Line: 11493

//  <rtree> SFDITEM_REG__EXTI_VERR
//    <name> VERR </name>
//    <r> 
//    <i> [Bits 31..0] RO (@ 0x40021BF4) AES version register </i>
//    <loc> ( (unsigned int)((EXTI_VERR >> 0) & 0xFFFFFFFF) ) </loc>
//    <item> SFDITEM_FIELD__EXTI_VERR_MAJREV </item>
//    <item> SFDITEM_FIELD__EXTI_VERR_MINREV </item>
//  </rtree>
//  


// ----------------------------  Register Item Address: EXTI_IPIDR  -------------------------------
// SVD Line: 11516

unsigned int EXTI_IPIDR __AT (0x40021BF8);



// --------------------------------  Field Item: EXTI_IPIDR_ID  -----------------------------------
// SVD Line: 11525

//  <item> SFDITEM_FIELD__EXTI_IPIDR_ID
//    <name> ID </name>
//    <r> 
//    <i> [Bits 31..0] RO (@ 0x40021BF8) Identification code </i>
//    <edit> 
//      <loc> ( (unsigned int)((EXTI_IPIDR >> 0) & 0xFFFFFFFF) ) </loc>
//    </edit>
//  </item>
//  


// -------------------------------  Register RTree: EXTI_IPIDR  -----------------------------------
// SVD Line: 11516

//  <rtree> SFDITEM_REG__EXTI_IPIDR
//    <name> IPIDR </name>
//    <r> 
//    <i> [Bits 31..0] RO (@ 0x40021BF8) AES identification register </i>
//    <loc> ( (unsigned int)((EXTI_IPIDR >> 0) & 0xFFFFFFFF) ) </loc>
//    <item> SFDITEM_FIELD__EXTI_IPIDR_ID </item>
//  </rtree>
//  


// ----------------------------  Register Item Address: EXTI_SIDR  --------------------------------
// SVD Line: 11533

unsigned int EXTI_SIDR __AT (0x40021BFC);



// --------------------------------  Field Item: EXTI_SIDR_ID  ------------------------------------
// SVD Line: 11542

//  <item> SFDITEM_FIELD__EXTI_SIDR_ID
//    <name> ID </name>
//    <r> 
//    <i> [Bits 31..0] RO (@ 0x40021BFC) Size Identification code </i>
//    <edit> 
//      <loc> ( (unsigned int)((EXTI_SIDR >> 0) & 0xFFFFFFFF) ) </loc>
//    </edit>
//  </item>
//  


// --------------------------------  Register RTree: EXTI_SIDR  -----------------------------------
// SVD Line: 11533

//  <rtree> SFDITEM_REG__EXTI_SIDR
//    <name> SIDR </name>
//    <r> 
//    <i> [Bits 31..0] RO (@ 0x40021BFC) AES size ID register </i>
//    <loc> ( (unsigned int)((EXTI_SIDR >> 0) & 0xFFFFFFFF) ) </loc>
//    <item> SFDITEM_FIELD__EXTI_SIDR_ID </item>
//  </rtree>
//  


// ----------------------------------  Peripheral View: EXTI  -------------------------------------
// SVD Line: 9939

//  <view> EXTI
//    <name> EXTI </name>
//    <item> SFDITEM_REG__EXTI_RTSR1 </item>
//    <item> SFDITEM_REG__EXTI_FTSR1 </item>
//    <item> SFDITEM_REG__EXTI_SWIER1 </item>
//    <item> SFDITEM_REG__EXTI_RPR1 </item>
//    <item> SFDITEM_REG__EXTI_FPR1 </item>
//    <item> SFDITEM_REG__EXTI_EXTICR1 </item>
//    <item> SFDITEM_REG__EXTI_EXTICR2 </item>
//    <item> SFDITEM_REG__EXTI_EXTICR3 </item>
//    <item> SFDITEM_REG__EXTI_EXTICR4 </item>
//    <item> SFDITEM_REG__EXTI_IMR1 </item>
//    <item> SFDITEM_REG__EXTI_EMR1 </item>
//    <item> SFDITEM_REG__EXTI_IMR2 </item>
//    <item> SFDITEM_REG__EXTI_EMR2 </item>
//    <item> SFDITEM_REG__EXTI_HWCFGR7 </item>
//    <item> SFDITEM_REG__EXTI_HWCFGR6 </item>
//    <item> SFDITEM_REG__EXTI_HWCFGR5 </item>
//    <item> SFDITEM_REG__EXTI_HWCFGR4 </item>
//    <item> SFDITEM_REG__EXTI_HWCFGR3 </item>
//    <item> SFDITEM_REG__EXTI_HWCFGR2 </item>
//    <item> SFDITEM_REG__EXTI_HWCFGR1 </item>
//    <item> SFDITEM_REG__EXTI_VERR </item>
//    <item> SFDITEM_REG__EXTI_IPIDR </item>
//    <item> SFDITEM_REG__EXTI_SIDR </item>
//  </view>
//  


// ----------------------------  Register Item Address: TIM16_CR1  --------------------------------
// SVD Line: 11568

unsigned int TIM16_CR1 __AT (0x40014400);



// --------------------------------  Field Item: TIM16_CR1_CEN  -----------------------------------
// SVD Line: 11577

//  <item> SFDITEM_FIELD__TIM16_CR1_CEN
//    <name> CEN </name>
//    <rw> 
//    <i> [Bit 0] RW (@ 0x40014400) Counter enable </i>
//    <check> 
//      <loc> ( (unsigned int) TIM16_CR1 ) </loc>
//      <o.0..0> CEN
//    </check>
//  </item>
//  


// -------------------------------  Field Item: TIM16_CR1_UDIS  -----------------------------------
// SVD Line: 11583

//  <item> SFDITEM_FIELD__TIM16_CR1_UDIS
//    <name> UDIS </name>
//    <rw> 
//    <i> [Bit 1] RW (@ 0x40014400) Update disable </i>
//    <check> 
//      <loc> ( (unsigned int) TIM16_CR1 ) </loc>
//      <o.1..1> UDIS
//    </check>
//  </item>
//  


// --------------------------------  Field Item: TIM16_CR1_URS  -----------------------------------
// SVD Line: 11589

//  <item> SFDITEM_FIELD__TIM16_CR1_URS
//    <name> URS </name>
//    <rw> 
//    <i> [Bit 2] RW (@ 0x40014400) Update request source </i>
//    <check> 
//      <loc> ( (unsigned int) TIM16_CR1 ) </loc>
//      <o.2..2> URS
//    </check>
//  </item>
//  


// --------------------------------  Field Item: TIM16_CR1_OPM  -----------------------------------
// SVD Line: 11595

//  <item> SFDITEM_FIELD__TIM16_CR1_OPM
//    <name> OPM </name>
//    <rw> 
//    <i> [Bit 3] RW (@ 0x40014400) One-pulse mode </i>
//    <check> 
//      <loc> ( (unsigned int) TIM16_CR1 ) </loc>
//      <o.3..3> OPM
//    </check>
//  </item>
//  


// -------------------------------  Field Item: TIM16_CR1_ARPE  -----------------------------------
// SVD Line: 11601

//  <item> SFDITEM_FIELD__TIM16_CR1_ARPE
//    <name> ARPE </name>
//    <rw> 
//    <i> [Bit 7] RW (@ 0x40014400) Auto-reload preload enable </i>
//    <check> 
//      <loc> ( (unsigned int) TIM16_CR1 ) </loc>
//      <o.7..7> ARPE
//    </check>
//  </item>
//  


// --------------------------------  Field Item: TIM16_CR1_CKD  -----------------------------------
// SVD Line: 11607

//  <item> SFDITEM_FIELD__TIM16_CR1_CKD
//    <name> CKD </name>
//    <rw> 
//    <i> [Bits 9..8] RW (@ 0x40014400) Clock division </i>
//    <edit> 
//      <loc> ( (unsigned char)((TIM16_CR1 >> 8) & 0x3), ((TIM16_CR1 = (TIM16_CR1 & ~(0x3UL << 8 )) | ((unsigned long)(Gui_u8:GuiVal & 0x3) << 8 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -----------------------------  Field Item: TIM16_CR1_UIFREMAP  ---------------------------------
// SVD Line: 11613

//  <item> SFDITEM_FIELD__TIM16_CR1_UIFREMAP
//    <name> UIFREMAP </name>
//    <rw> 
//    <i> [Bit 11] RW (@ 0x40014400) UIF status bit remapping </i>
//    <check> 
//      <loc> ( (unsigned int) TIM16_CR1 ) </loc>
//      <o.11..11> UIFREMAP
//    </check>
//  </item>
//  


// --------------------------------  Register RTree: TIM16_CR1  -----------------------------------
// SVD Line: 11568

//  <rtree> SFDITEM_REG__TIM16_CR1
//    <name> CR1 </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x40014400) control register 1 </i>
//    <loc> ( (unsigned int)((TIM16_CR1 >> 0) & 0xFFFFFFFF), ((TIM16_CR1 = (TIM16_CR1 & ~(0xB8FUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xB8F) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__TIM16_CR1_CEN </item>
//    <item> SFDITEM_FIELD__TIM16_CR1_UDIS </item>
//    <item> SFDITEM_FIELD__TIM16_CR1_URS </item>
//    <item> SFDITEM_FIELD__TIM16_CR1_OPM </item>
//    <item> SFDITEM_FIELD__TIM16_CR1_ARPE </item>
//    <item> SFDITEM_FIELD__TIM16_CR1_CKD </item>
//    <item> SFDITEM_FIELD__TIM16_CR1_UIFREMAP </item>
//  </rtree>
//  


// ----------------------------  Register Item Address: TIM16_CR2  --------------------------------
// SVD Line: 11621

unsigned int TIM16_CR2 __AT (0x40014404);



// -------------------------------  Field Item: TIM16_CR2_OIS1N  ----------------------------------
// SVD Line: 11630

//  <item> SFDITEM_FIELD__TIM16_CR2_OIS1N
//    <name> OIS1N </name>
//    <rw> 
//    <i> [Bit 9] RW (@ 0x40014404) Output Idle state 1 </i>
//    <check> 
//      <loc> ( (unsigned int) TIM16_CR2 ) </loc>
//      <o.9..9> OIS1N
//    </check>
//  </item>
//  


// -------------------------------  Field Item: TIM16_CR2_OIS1  -----------------------------------
// SVD Line: 11636

//  <item> SFDITEM_FIELD__TIM16_CR2_OIS1
//    <name> OIS1 </name>
//    <rw> 
//    <i> [Bit 8] RW (@ 0x40014404) Output Idle state 1 </i>
//    <check> 
//      <loc> ( (unsigned int) TIM16_CR2 ) </loc>
//      <o.8..8> OIS1
//    </check>
//  </item>
//  


// -------------------------------  Field Item: TIM16_CR2_CCDS  -----------------------------------
// SVD Line: 11642

//  <item> SFDITEM_FIELD__TIM16_CR2_CCDS
//    <name> CCDS </name>
//    <rw> 
//    <i> [Bit 3] RW (@ 0x40014404) Capture/compare DMA  selection </i>
//    <check> 
//      <loc> ( (unsigned int) TIM16_CR2 ) </loc>
//      <o.3..3> CCDS
//    </check>
//  </item>
//  


// -------------------------------  Field Item: TIM16_CR2_CCUS  -----------------------------------
// SVD Line: 11649

//  <item> SFDITEM_FIELD__TIM16_CR2_CCUS
//    <name> CCUS </name>
//    <rw> 
//    <i> [Bit 2] RW (@ 0x40014404) Capture/compare control update  selection </i>
//    <check> 
//      <loc> ( (unsigned int) TIM16_CR2 ) </loc>
//      <o.2..2> CCUS
//    </check>
//  </item>
//  


// -------------------------------  Field Item: TIM16_CR2_CCPC  -----------------------------------
// SVD Line: 11656

//  <item> SFDITEM_FIELD__TIM16_CR2_CCPC
//    <name> CCPC </name>
//    <rw> 
//    <i> [Bit 0] RW (@ 0x40014404) Capture/compare preloaded  control </i>
//    <check> 
//      <loc> ( (unsigned int) TIM16_CR2 ) </loc>
//      <o.0..0> CCPC
//    </check>
//  </item>
//  


// --------------------------------  Register RTree: TIM16_CR2  -----------------------------------
// SVD Line: 11621

//  <rtree> SFDITEM_REG__TIM16_CR2
//    <name> CR2 </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x40014404) control register 2 </i>
//    <loc> ( (unsigned int)((TIM16_CR2 >> 0) & 0xFFFFFFFF), ((TIM16_CR2 = (TIM16_CR2 & ~(0x30DUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0x30D) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__TIM16_CR2_OIS1N </item>
//    <item> SFDITEM_FIELD__TIM16_CR2_OIS1 </item>
//    <item> SFDITEM_FIELD__TIM16_CR2_CCDS </item>
//    <item> SFDITEM_FIELD__TIM16_CR2_CCUS </item>
//    <item> SFDITEM_FIELD__TIM16_CR2_CCPC </item>
//  </rtree>
//  


// ----------------------------  Register Item Address: TIM16_DIER  -------------------------------
// SVD Line: 11665

unsigned int TIM16_DIER __AT (0x4001440C);



// ------------------------------  Field Item: TIM16_DIER_COMDE  ----------------------------------
// SVD Line: 11674

//  <item> SFDITEM_FIELD__TIM16_DIER_COMDE
//    <name> COMDE </name>
//    <rw> 
//    <i> [Bit 13] RW (@ 0x4001440C) COM DMA request enable </i>
//    <check> 
//      <loc> ( (unsigned int) TIM16_DIER ) </loc>
//      <o.13..13> COMDE
//    </check>
//  </item>
//  


// ------------------------------  Field Item: TIM16_DIER_CC1DE  ----------------------------------
// SVD Line: 11680

//  <item> SFDITEM_FIELD__TIM16_DIER_CC1DE
//    <name> CC1DE </name>
//    <rw> 
//    <i> [Bit 9] RW (@ 0x4001440C) Capture/Compare 1 DMA request  enable </i>
//    <check> 
//      <loc> ( (unsigned int) TIM16_DIER ) </loc>
//      <o.9..9> CC1DE
//    </check>
//  </item>
//  


// -------------------------------  Field Item: TIM16_DIER_UDE  -----------------------------------
// SVD Line: 11687

//  <item> SFDITEM_FIELD__TIM16_DIER_UDE
//    <name> UDE </name>
//    <rw> 
//    <i> [Bit 8] RW (@ 0x4001440C) Update DMA request enable </i>
//    <check> 
//      <loc> ( (unsigned int) TIM16_DIER ) </loc>
//      <o.8..8> UDE
//    </check>
//  </item>
//  


// -------------------------------  Field Item: TIM16_DIER_BIE  -----------------------------------
// SVD Line: 11693

//  <item> SFDITEM_FIELD__TIM16_DIER_BIE
//    <name> BIE </name>
//    <rw> 
//    <i> [Bit 7] RW (@ 0x4001440C) Break interrupt enable </i>
//    <check> 
//      <loc> ( (unsigned int) TIM16_DIER ) </loc>
//      <o.7..7> BIE
//    </check>
//  </item>
//  


// ------------------------------  Field Item: TIM16_DIER_COMIE  ----------------------------------
// SVD Line: 11699

//  <item> SFDITEM_FIELD__TIM16_DIER_COMIE
//    <name> COMIE </name>
//    <rw> 
//    <i> [Bit 5] RW (@ 0x4001440C) COM interrupt enable </i>
//    <check> 
//      <loc> ( (unsigned int) TIM16_DIER ) </loc>
//      <o.5..5> COMIE
//    </check>
//  </item>
//  


// ------------------------------  Field Item: TIM16_DIER_CC1IE  ----------------------------------
// SVD Line: 11705

//  <item> SFDITEM_FIELD__TIM16_DIER_CC1IE
//    <name> CC1IE </name>
//    <rw> 
//    <i> [Bit 1] RW (@ 0x4001440C) Capture/Compare 1 interrupt  enable </i>
//    <check> 
//      <loc> ( (unsigned int) TIM16_DIER ) </loc>
//      <o.1..1> CC1IE
//    </check>
//  </item>
//  


// -------------------------------  Field Item: TIM16_DIER_UIE  -----------------------------------
// SVD Line: 11712

//  <item> SFDITEM_FIELD__TIM16_DIER_UIE
//    <name> UIE </name>
//    <rw> 
//    <i> [Bit 0] RW (@ 0x4001440C) Update interrupt enable </i>
//    <check> 
//      <loc> ( (unsigned int) TIM16_DIER ) </loc>
//      <o.0..0> UIE
//    </check>
//  </item>
//  


// -------------------------------  Register RTree: TIM16_DIER  -----------------------------------
// SVD Line: 11665

//  <rtree> SFDITEM_REG__TIM16_DIER
//    <name> DIER </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x4001440C) DMA/Interrupt enable register </i>
//    <loc> ( (unsigned int)((TIM16_DIER >> 0) & 0xFFFFFFFF), ((TIM16_DIER = (TIM16_DIER & ~(0x23A3UL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0x23A3) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__TIM16_DIER_COMDE </item>
//    <item> SFDITEM_FIELD__TIM16_DIER_CC1DE </item>
//    <item> SFDITEM_FIELD__TIM16_DIER_UDE </item>
//    <item> SFDITEM_FIELD__TIM16_DIER_BIE </item>
//    <item> SFDITEM_FIELD__TIM16_DIER_COMIE </item>
//    <item> SFDITEM_FIELD__TIM16_DIER_CC1IE </item>
//    <item> SFDITEM_FIELD__TIM16_DIER_UIE </item>
//  </rtree>
//  


// -----------------------------  Register Item Address: TIM16_SR  --------------------------------
// SVD Line: 11720

unsigned int TIM16_SR __AT (0x40014410);



// -------------------------------  Field Item: TIM16_SR_CC1OF  -----------------------------------
// SVD Line: 11729

//  <item> SFDITEM_FIELD__TIM16_SR_CC1OF
//    <name> CC1OF </name>
//    <rw> 
//    <i> [Bit 9] RW (@ 0x40014410) Capture/Compare 1 overcapture  flag </i>
//    <check> 
//      <loc> ( (unsigned int) TIM16_SR ) </loc>
//      <o.9..9> CC1OF
//    </check>
//  </item>
//  


// --------------------------------  Field Item: TIM16_SR_BIF  ------------------------------------
// SVD Line: 11736

//  <item> SFDITEM_FIELD__TIM16_SR_BIF
//    <name> BIF </name>
//    <rw> 
//    <i> [Bit 7] RW (@ 0x40014410) Break interrupt flag </i>
//    <check> 
//      <loc> ( (unsigned int) TIM16_SR ) </loc>
//      <o.7..7> BIF
//    </check>
//  </item>
//  


// -------------------------------  Field Item: TIM16_SR_COMIF  -----------------------------------
// SVD Line: 11742

//  <item> SFDITEM_FIELD__TIM16_SR_COMIF
//    <name> COMIF </name>
//    <rw> 
//    <i> [Bit 5] RW (@ 0x40014410) COM interrupt flag </i>
//    <check> 
//      <loc> ( (unsigned int) TIM16_SR ) </loc>
//      <o.5..5> COMIF
//    </check>
//  </item>
//  


// -------------------------------  Field Item: TIM16_SR_CC1IF  -----------------------------------
// SVD Line: 11748

//  <item> SFDITEM_FIELD__TIM16_SR_CC1IF
//    <name> CC1IF </name>
//    <rw> 
//    <i> [Bit 1] RW (@ 0x40014410) Capture/compare 1 interrupt  flag </i>
//    <check> 
//      <loc> ( (unsigned int) TIM16_SR ) </loc>
//      <o.1..1> CC1IF
//    </check>
//  </item>
//  


// --------------------------------  Field Item: TIM16_SR_UIF  ------------------------------------
// SVD Line: 11755

//  <item> SFDITEM_FIELD__TIM16_SR_UIF
//    <name> UIF </name>
//    <rw> 
//    <i> [Bit 0] RW (@ 0x40014410) Update interrupt flag </i>
//    <check> 
//      <loc> ( (unsigned int) TIM16_SR ) </loc>
//      <o.0..0> UIF
//    </check>
//  </item>
//  


// --------------------------------  Register RTree: TIM16_SR  ------------------------------------
// SVD Line: 11720

//  <rtree> SFDITEM_REG__TIM16_SR
//    <name> SR </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x40014410) status register </i>
//    <loc> ( (unsigned int)((TIM16_SR >> 0) & 0xFFFFFFFF), ((TIM16_SR = (TIM16_SR & ~(0x2A3UL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0x2A3) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__TIM16_SR_CC1OF </item>
//    <item> SFDITEM_FIELD__TIM16_SR_BIF </item>
//    <item> SFDITEM_FIELD__TIM16_SR_COMIF </item>
//    <item> SFDITEM_FIELD__TIM16_SR_CC1IF </item>
//    <item> SFDITEM_FIELD__TIM16_SR_UIF </item>
//  </rtree>
//  


// ----------------------------  Register Item Address: TIM16_EGR  --------------------------------
// SVD Line: 11763

unsigned int TIM16_EGR __AT (0x40014414);



// --------------------------------  Field Item: TIM16_EGR_BG  ------------------------------------
// SVD Line: 11772

//  <item> SFDITEM_FIELD__TIM16_EGR_BG
//    <name> BG </name>
//    <w> 
//    <i> [Bit 7] WO (@ 0x40014414) Break generation </i>
//    <check> 
//      <loc> ( (unsigned int) TIM16_EGR ) </loc>
//      <o.7..7> BG
//    </check>
//  </item>
//  


// -------------------------------  Field Item: TIM16_EGR_COMG  -----------------------------------
// SVD Line: 11778

//  <item> SFDITEM_FIELD__TIM16_EGR_COMG
//    <name> COMG </name>
//    <w> 
//    <i> [Bit 5] WO (@ 0x40014414) Capture/Compare control update  generation </i>
//    <check> 
//      <loc> ( (unsigned int) TIM16_EGR ) </loc>
//      <o.5..5> COMG
//    </check>
//  </item>
//  


// -------------------------------  Field Item: TIM16_EGR_CC1G  -----------------------------------
// SVD Line: 11785

//  <item> SFDITEM_FIELD__TIM16_EGR_CC1G
//    <name> CC1G </name>
//    <w> 
//    <i> [Bit 1] WO (@ 0x40014414) Capture/compare 1  generation </i>
//    <check> 
//      <loc> ( (unsigned int) TIM16_EGR ) </loc>
//      <o.1..1> CC1G
//    </check>
//  </item>
//  


// --------------------------------  Field Item: TIM16_EGR_UG  ------------------------------------
// SVD Line: 11792

//  <item> SFDITEM_FIELD__TIM16_EGR_UG
//    <name> UG </name>
//    <w> 
//    <i> [Bit 0] WO (@ 0x40014414) Update generation </i>
//    <check> 
//      <loc> ( (unsigned int) TIM16_EGR ) </loc>
//      <o.0..0> UG
//    </check>
//  </item>
//  


// --------------------------------  Register RTree: TIM16_EGR  -----------------------------------
// SVD Line: 11763

//  <rtree> SFDITEM_REG__TIM16_EGR
//    <name> EGR </name>
//    <w> 
//    <i> [Bits 31..0] WO (@ 0x40014414) event generation register </i>
//    <loc> ( (unsigned int)((TIM16_EGR >> 0) & 0xFFFFFFFF), ((TIM16_EGR = (TIM16_EGR & ~(0xA3UL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xA3) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__TIM16_EGR_BG </item>
//    <item> SFDITEM_FIELD__TIM16_EGR_COMG </item>
//    <item> SFDITEM_FIELD__TIM16_EGR_CC1G </item>
//    <item> SFDITEM_FIELD__TIM16_EGR_UG </item>
//  </rtree>
//  


// ------------------------  Register Item Address: TIM16_CCMR1_Output  ---------------------------
// SVD Line: 11800

unsigned int TIM16_CCMR1_Output __AT (0x40014418);



// --------------------------  Field Item: TIM16_CCMR1_Output_OC1M_2  -----------------------------
// SVD Line: 11810

//  <item> SFDITEM_FIELD__TIM16_CCMR1_Output_OC1M_2
//    <name> OC1M_2 </name>
//    <rw> 
//    <i> [Bit 16] RW (@ 0x40014418) Output Compare 1 mode </i>
//    <check> 
//      <loc> ( (unsigned int) TIM16_CCMR1_Output ) </loc>
//      <o.16..16> OC1M_2
//    </check>
//  </item>
//  


// ---------------------------  Field Item: TIM16_CCMR1_Output_OC1M  ------------------------------
// SVD Line: 11816

//  <item> SFDITEM_FIELD__TIM16_CCMR1_Output_OC1M
//    <name> OC1M </name>
//    <rw> 
//    <i> [Bits 6..4] RW (@ 0x40014418) Output Compare 1 mode </i>
//    <edit> 
//      <loc> ( (unsigned char)((TIM16_CCMR1_Output >> 4) & 0x7), ((TIM16_CCMR1_Output = (TIM16_CCMR1_Output & ~(0x7UL << 4 )) | ((unsigned long)(Gui_u8:GuiVal & 0x7) << 4 ) ) )) </loc>
//    </edit>
//  </item>
//  


// --------------------------  Field Item: TIM16_CCMR1_Output_OC1PE  ------------------------------
// SVD Line: 11822

//  <item> SFDITEM_FIELD__TIM16_CCMR1_Output_OC1PE
//    <name> OC1PE </name>
//    <rw> 
//    <i> [Bit 3] RW (@ 0x40014418) Output Compare 1 preload  enable </i>
//    <check> 
//      <loc> ( (unsigned int) TIM16_CCMR1_Output ) </loc>
//      <o.3..3> OC1PE
//    </check>
//  </item>
//  


// --------------------------  Field Item: TIM16_CCMR1_Output_OC1FE  ------------------------------
// SVD Line: 11829

//  <item> SFDITEM_FIELD__TIM16_CCMR1_Output_OC1FE
//    <name> OC1FE </name>
//    <rw> 
//    <i> [Bit 2] RW (@ 0x40014418) Output Compare 1 fast  enable </i>
//    <check> 
//      <loc> ( (unsigned int) TIM16_CCMR1_Output ) </loc>
//      <o.2..2> OC1FE
//    </check>
//  </item>
//  


// ---------------------------  Field Item: TIM16_CCMR1_Output_CC1S  ------------------------------
// SVD Line: 11836

//  <item> SFDITEM_FIELD__TIM16_CCMR1_Output_CC1S
//    <name> CC1S </name>
//    <rw> 
//    <i> [Bits 1..0] RW (@ 0x40014418) Capture/Compare 1  selection </i>
//    <edit> 
//      <loc> ( (unsigned char)((TIM16_CCMR1_Output >> 0) & 0x3), ((TIM16_CCMR1_Output = (TIM16_CCMR1_Output & ~(0x3UL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0x3) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ---------------------------  Register RTree: TIM16_CCMR1_Output  -------------------------------
// SVD Line: 11800

//  <rtree> SFDITEM_REG__TIM16_CCMR1_Output
//    <name> CCMR1_Output </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x40014418) capture/compare mode register (output  mode) </i>
//    <loc> ( (unsigned int)((TIM16_CCMR1_Output >> 0) & 0xFFFFFFFF), ((TIM16_CCMR1_Output = (TIM16_CCMR1_Output & ~(0x1007FUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0x1007F) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__TIM16_CCMR1_Output_OC1M_2 </item>
//    <item> SFDITEM_FIELD__TIM16_CCMR1_Output_OC1M </item>
//    <item> SFDITEM_FIELD__TIM16_CCMR1_Output_OC1PE </item>
//    <item> SFDITEM_FIELD__TIM16_CCMR1_Output_OC1FE </item>
//    <item> SFDITEM_FIELD__TIM16_CCMR1_Output_CC1S </item>
//  </rtree>
//  


// ------------------------  Register Item Address: TIM16_CCMR1_Input  ----------------------------
// SVD Line: 11845

unsigned int TIM16_CCMR1_Input __AT (0x40014418);



// ---------------------------  Field Item: TIM16_CCMR1_Input_IC1F  -------------------------------
// SVD Line: 11856

//  <item> SFDITEM_FIELD__TIM16_CCMR1_Input_IC1F
//    <name> IC1F </name>
//    <rw> 
//    <i> [Bits 7..4] RW (@ 0x40014418) Input capture 1 filter </i>
//    <edit> 
//      <loc> ( (unsigned char)((TIM16_CCMR1_Input >> 4) & 0xF), ((TIM16_CCMR1_Input = (TIM16_CCMR1_Input & ~(0xFUL << 4 )) | ((unsigned long)(Gui_u8:GuiVal & 0xF) << 4 ) ) )) </loc>
//    </edit>
//  </item>
//  


// --------------------------  Field Item: TIM16_CCMR1_Input_IC1PSC  ------------------------------
// SVD Line: 11862

//  <item> SFDITEM_FIELD__TIM16_CCMR1_Input_IC1PSC
//    <name> IC1PSC </name>
//    <rw> 
//    <i> [Bits 3..2] RW (@ 0x40014418) Input capture 1 prescaler </i>
//    <edit> 
//      <loc> ( (unsigned char)((TIM16_CCMR1_Input >> 2) & 0x3), ((TIM16_CCMR1_Input = (TIM16_CCMR1_Input & ~(0x3UL << 2 )) | ((unsigned long)(Gui_u8:GuiVal & 0x3) << 2 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ---------------------------  Field Item: TIM16_CCMR1_Input_CC1S  -------------------------------
// SVD Line: 11868

//  <item> SFDITEM_FIELD__TIM16_CCMR1_Input_CC1S
//    <name> CC1S </name>
//    <rw> 
//    <i> [Bits 1..0] RW (@ 0x40014418) Capture/Compare 1  selection </i>
//    <edit> 
//      <loc> ( (unsigned char)((TIM16_CCMR1_Input >> 0) & 0x3), ((TIM16_CCMR1_Input = (TIM16_CCMR1_Input & ~(0x3UL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0x3) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ----------------------------  Register RTree: TIM16_CCMR1_Input  -------------------------------
// SVD Line: 11845

//  <rtree> SFDITEM_REG__TIM16_CCMR1_Input
//    <name> CCMR1_Input </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x40014418) capture/compare mode register 1 (input  mode) </i>
//    <loc> ( (unsigned int)((TIM16_CCMR1_Input >> 0) & 0xFFFFFFFF), ((TIM16_CCMR1_Input = (TIM16_CCMR1_Input & ~(0xFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__TIM16_CCMR1_Input_IC1F </item>
//    <item> SFDITEM_FIELD__TIM16_CCMR1_Input_IC1PSC </item>
//    <item> SFDITEM_FIELD__TIM16_CCMR1_Input_CC1S </item>
//  </rtree>
//  


// ----------------------------  Register Item Address: TIM16_CCER  -------------------------------
// SVD Line: 11877

unsigned int TIM16_CCER __AT (0x40014420);



// ------------------------------  Field Item: TIM16_CCER_CC1NP  ----------------------------------
// SVD Line: 11887

//  <item> SFDITEM_FIELD__TIM16_CCER_CC1NP
//    <name> CC1NP </name>
//    <rw> 
//    <i> [Bit 3] RW (@ 0x40014420) Capture/Compare 1 output  Polarity </i>
//    <check> 
//      <loc> ( (unsigned int) TIM16_CCER ) </loc>
//      <o.3..3> CC1NP
//    </check>
//  </item>
//  


// ------------------------------  Field Item: TIM16_CCER_CC1NE  ----------------------------------
// SVD Line: 11894

//  <item> SFDITEM_FIELD__TIM16_CCER_CC1NE
//    <name> CC1NE </name>
//    <rw> 
//    <i> [Bit 2] RW (@ 0x40014420) Capture/Compare 1 complementary output  enable </i>
//    <check> 
//      <loc> ( (unsigned int) TIM16_CCER ) </loc>
//      <o.2..2> CC1NE
//    </check>
//  </item>
//  


// -------------------------------  Field Item: TIM16_CCER_CC1P  ----------------------------------
// SVD Line: 11901

//  <item> SFDITEM_FIELD__TIM16_CCER_CC1P
//    <name> CC1P </name>
//    <rw> 
//    <i> [Bit 1] RW (@ 0x40014420) Capture/Compare 1 output  Polarity </i>
//    <check> 
//      <loc> ( (unsigned int) TIM16_CCER ) </loc>
//      <o.1..1> CC1P
//    </check>
//  </item>
//  


// -------------------------------  Field Item: TIM16_CCER_CC1E  ----------------------------------
// SVD Line: 11908

//  <item> SFDITEM_FIELD__TIM16_CCER_CC1E
//    <name> CC1E </name>
//    <rw> 
//    <i> [Bit 0] RW (@ 0x40014420) Capture/Compare 1 output  enable </i>
//    <check> 
//      <loc> ( (unsigned int) TIM16_CCER ) </loc>
//      <o.0..0> CC1E
//    </check>
//  </item>
//  


// -------------------------------  Register RTree: TIM16_CCER  -----------------------------------
// SVD Line: 11877

//  <rtree> SFDITEM_REG__TIM16_CCER
//    <name> CCER </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x40014420) capture/compare enable  register </i>
//    <loc> ( (unsigned int)((TIM16_CCER >> 0) & 0xFFFFFFFF), ((TIM16_CCER = (TIM16_CCER & ~(0xFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__TIM16_CCER_CC1NP </item>
//    <item> SFDITEM_FIELD__TIM16_CCER_CC1NE </item>
//    <item> SFDITEM_FIELD__TIM16_CCER_CC1P </item>
//    <item> SFDITEM_FIELD__TIM16_CCER_CC1E </item>
//  </rtree>
//  


// ----------------------------  Register Item Address: TIM16_CNT  --------------------------------
// SVD Line: 11917

unsigned int TIM16_CNT __AT (0x40014424);



// --------------------------------  Field Item: TIM16_CNT_CNT  -----------------------------------
// SVD Line: 11925

//  <item> SFDITEM_FIELD__TIM16_CNT_CNT
//    <name> CNT </name>
//    <rw> 
//    <i> [Bits 15..0] RW (@ 0x40014424) counter value </i>
//    <edit> 
//      <loc> ( (unsigned short)((TIM16_CNT >> 0) & 0xFFFF), ((TIM16_CNT = (TIM16_CNT & ~(0xFFFFUL << 0 )) | ((unsigned long)(Gui_u16:GuiVal & 0xFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ------------------------------  Field Item: TIM16_CNT_UIFCPY  ----------------------------------
// SVD Line: 11932

//  <item> SFDITEM_FIELD__TIM16_CNT_UIFCPY
//    <name> UIFCPY </name>
//    <r> 
//    <i> [Bit 31] RO (@ 0x40014424) UIF Copy </i>
//    <check> 
//      <loc> ( (unsigned int) TIM16_CNT ) </loc>
//      <o.31..31> UIFCPY
//    </check>
//  </item>
//  


// --------------------------------  Register RTree: TIM16_CNT  -----------------------------------
// SVD Line: 11917

//  <rtree> SFDITEM_REG__TIM16_CNT
//    <name> CNT </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x40014424) counter </i>
//    <loc> ( (unsigned int)((TIM16_CNT >> 0) & 0xFFFFFFFF), ((TIM16_CNT = (TIM16_CNT & ~(0xFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__TIM16_CNT_CNT </item>
//    <item> SFDITEM_FIELD__TIM16_CNT_UIFCPY </item>
//  </rtree>
//  


// ----------------------------  Register Item Address: TIM16_PSC  --------------------------------
// SVD Line: 11941

unsigned int TIM16_PSC __AT (0x40014428);



// --------------------------------  Field Item: TIM16_PSC_PSC  -----------------------------------
// SVD Line: 11950

//  <item> SFDITEM_FIELD__TIM16_PSC_PSC
//    <name> PSC </name>
//    <rw> 
//    <i> [Bits 15..0] RW (@ 0x40014428) Prescaler value </i>
//    <edit> 
//      <loc> ( (unsigned short)((TIM16_PSC >> 0) & 0xFFFF), ((TIM16_PSC = (TIM16_PSC & ~(0xFFFFUL << 0 )) | ((unsigned long)(Gui_u16:GuiVal & 0xFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// --------------------------------  Register RTree: TIM16_PSC  -----------------------------------
// SVD Line: 11941

//  <rtree> SFDITEM_REG__TIM16_PSC
//    <name> PSC </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x40014428) prescaler </i>
//    <loc> ( (unsigned int)((TIM16_PSC >> 0) & 0xFFFFFFFF), ((TIM16_PSC = (TIM16_PSC & ~(0xFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__TIM16_PSC_PSC </item>
//  </rtree>
//  


// ----------------------------  Register Item Address: TIM16_ARR  --------------------------------
// SVD Line: 11958

unsigned int TIM16_ARR __AT (0x4001442C);



// --------------------------------  Field Item: TIM16_ARR_ARR  -----------------------------------
// SVD Line: 11967

//  <item> SFDITEM_FIELD__TIM16_ARR_ARR
//    <name> ARR </name>
//    <rw> 
//    <i> [Bits 15..0] RW (@ 0x4001442C) Auto-reload value </i>
//    <edit> 
//      <loc> ( (unsigned short)((TIM16_ARR >> 0) & 0xFFFF), ((TIM16_ARR = (TIM16_ARR & ~(0xFFFFUL << 0 )) | ((unsigned long)(Gui_u16:GuiVal & 0xFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// --------------------------------  Register RTree: TIM16_ARR  -----------------------------------
// SVD Line: 11958

//  <rtree> SFDITEM_REG__TIM16_ARR
//    <name> ARR </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x4001442C) auto-reload register </i>
//    <loc> ( (unsigned int)((TIM16_ARR >> 0) & 0xFFFFFFFF), ((TIM16_ARR = (TIM16_ARR & ~(0xFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__TIM16_ARR_ARR </item>
//  </rtree>
//  


// ----------------------------  Register Item Address: TIM16_RCR  --------------------------------
// SVD Line: 11975

unsigned int TIM16_RCR __AT (0x40014430);



// --------------------------------  Field Item: TIM16_RCR_REP  -----------------------------------
// SVD Line: 11984

//  <item> SFDITEM_FIELD__TIM16_RCR_REP
//    <name> REP </name>
//    <rw> 
//    <i> [Bits 7..0] RW (@ 0x40014430) Repetition counter value </i>
//    <edit> 
//      <loc> ( (unsigned char)((TIM16_RCR >> 0) & 0xFF), ((TIM16_RCR = (TIM16_RCR & ~(0xFFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// --------------------------------  Register RTree: TIM16_RCR  -----------------------------------
// SVD Line: 11975

//  <rtree> SFDITEM_REG__TIM16_RCR
//    <name> RCR </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x40014430) repetition counter register </i>
//    <loc> ( (unsigned int)((TIM16_RCR >> 0) & 0xFFFFFFFF), ((TIM16_RCR = (TIM16_RCR & ~(0xFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__TIM16_RCR_REP </item>
//  </rtree>
//  


// ----------------------------  Register Item Address: TIM16_CCR1  -------------------------------
// SVD Line: 11992

unsigned int TIM16_CCR1 __AT (0x40014434);



// -------------------------------  Field Item: TIM16_CCR1_CCR1  ----------------------------------
// SVD Line: 12001

//  <item> SFDITEM_FIELD__TIM16_CCR1_CCR1
//    <name> CCR1 </name>
//    <rw> 
//    <i> [Bits 15..0] RW (@ 0x40014434) Capture/Compare 1 value </i>
//    <edit> 
//      <loc> ( (unsigned short)((TIM16_CCR1 >> 0) & 0xFFFF), ((TIM16_CCR1 = (TIM16_CCR1 & ~(0xFFFFUL << 0 )) | ((unsigned long)(Gui_u16:GuiVal & 0xFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -------------------------------  Register RTree: TIM16_CCR1  -----------------------------------
// SVD Line: 11992

//  <rtree> SFDITEM_REG__TIM16_CCR1
//    <name> CCR1 </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x40014434) capture/compare register 1 </i>
//    <loc> ( (unsigned int)((TIM16_CCR1 >> 0) & 0xFFFFFFFF), ((TIM16_CCR1 = (TIM16_CCR1 & ~(0xFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__TIM16_CCR1_CCR1 </item>
//  </rtree>
//  


// ----------------------------  Register Item Address: TIM16_BDTR  -------------------------------
// SVD Line: 12009

unsigned int TIM16_BDTR __AT (0x40014444);



// -------------------------------  Field Item: TIM16_BDTR_DTG  -----------------------------------
// SVD Line: 12018

//  <item> SFDITEM_FIELD__TIM16_BDTR_DTG
//    <name> DTG </name>
//    <rw> 
//    <i> [Bits 7..0] RW (@ 0x40014444) Dead-time generator setup </i>
//    <edit> 
//      <loc> ( (unsigned char)((TIM16_BDTR >> 0) & 0xFF), ((TIM16_BDTR = (TIM16_BDTR & ~(0xFFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -------------------------------  Field Item: TIM16_BDTR_LOCK  ----------------------------------
// SVD Line: 12024

//  <item> SFDITEM_FIELD__TIM16_BDTR_LOCK
//    <name> LOCK </name>
//    <rw> 
//    <i> [Bits 9..8] RW (@ 0x40014444) Lock configuration </i>
//    <edit> 
//      <loc> ( (unsigned char)((TIM16_BDTR >> 8) & 0x3), ((TIM16_BDTR = (TIM16_BDTR & ~(0x3UL << 8 )) | ((unsigned long)(Gui_u8:GuiVal & 0x3) << 8 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -------------------------------  Field Item: TIM16_BDTR_OSSI  ----------------------------------
// SVD Line: 12030

//  <item> SFDITEM_FIELD__TIM16_BDTR_OSSI
//    <name> OSSI </name>
//    <rw> 
//    <i> [Bit 10] RW (@ 0x40014444) Off-state selection for Idle  mode </i>
//    <check> 
//      <loc> ( (unsigned int) TIM16_BDTR ) </loc>
//      <o.10..10> OSSI
//    </check>
//  </item>
//  


// -------------------------------  Field Item: TIM16_BDTR_OSSR  ----------------------------------
// SVD Line: 12037

//  <item> SFDITEM_FIELD__TIM16_BDTR_OSSR
//    <name> OSSR </name>
//    <rw> 
//    <i> [Bit 11] RW (@ 0x40014444) Off-state selection for Run  mode </i>
//    <check> 
//      <loc> ( (unsigned int) TIM16_BDTR ) </loc>
//      <o.11..11> OSSR
//    </check>
//  </item>
//  


// -------------------------------  Field Item: TIM16_BDTR_BKE  -----------------------------------
// SVD Line: 12044

//  <item> SFDITEM_FIELD__TIM16_BDTR_BKE
//    <name> BKE </name>
//    <rw> 
//    <i> [Bit 12] RW (@ 0x40014444) Break enable </i>
//    <check> 
//      <loc> ( (unsigned int) TIM16_BDTR ) </loc>
//      <o.12..12> BKE
//    </check>
//  </item>
//  


// -------------------------------  Field Item: TIM16_BDTR_BKP  -----------------------------------
// SVD Line: 12050

//  <item> SFDITEM_FIELD__TIM16_BDTR_BKP
//    <name> BKP </name>
//    <rw> 
//    <i> [Bit 13] RW (@ 0x40014444) Break polarity </i>
//    <check> 
//      <loc> ( (unsigned int) TIM16_BDTR ) </loc>
//      <o.13..13> BKP
//    </check>
//  </item>
//  


// -------------------------------  Field Item: TIM16_BDTR_AOE  -----------------------------------
// SVD Line: 12056

//  <item> SFDITEM_FIELD__TIM16_BDTR_AOE
//    <name> AOE </name>
//    <rw> 
//    <i> [Bit 14] RW (@ 0x40014444) Automatic output enable </i>
//    <check> 
//      <loc> ( (unsigned int) TIM16_BDTR ) </loc>
//      <o.14..14> AOE
//    </check>
//  </item>
//  


// -------------------------------  Field Item: TIM16_BDTR_MOE  -----------------------------------
// SVD Line: 12062

//  <item> SFDITEM_FIELD__TIM16_BDTR_MOE
//    <name> MOE </name>
//    <rw> 
//    <i> [Bit 15] RW (@ 0x40014444) Main output enable </i>
//    <check> 
//      <loc> ( (unsigned int) TIM16_BDTR ) </loc>
//      <o.15..15> MOE
//    </check>
//  </item>
//  


// -------------------------------  Field Item: TIM16_BDTR_BKF  -----------------------------------
// SVD Line: 12068

//  <item> SFDITEM_FIELD__TIM16_BDTR_BKF
//    <name> BKF </name>
//    <rw> 
//    <i> [Bits 19..16] RW (@ 0x40014444) Break filter </i>
//    <edit> 
//      <loc> ( (unsigned char)((TIM16_BDTR >> 16) & 0xF), ((TIM16_BDTR = (TIM16_BDTR & ~(0xFUL << 16 )) | ((unsigned long)(Gui_u8:GuiVal & 0xF) << 16 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ------------------------------  Field Item: TIM16_BDTR_BKDSRM  ---------------------------------
// SVD Line: 12074

//  <item> SFDITEM_FIELD__TIM16_BDTR_BKDSRM
//    <name> BKDSRM </name>
//    <rw> 
//    <i> [Bit 26] RW (@ 0x40014444) Break Disarm </i>
//    <check> 
//      <loc> ( (unsigned int) TIM16_BDTR ) </loc>
//      <o.26..26> BKDSRM
//    </check>
//  </item>
//  


// ------------------------------  Field Item: TIM16_BDTR_BKBID  ----------------------------------
// SVD Line: 12080

//  <item> SFDITEM_FIELD__TIM16_BDTR_BKBID
//    <name> BKBID </name>
//    <rw> 
//    <i> [Bit 28] RW (@ 0x40014444) Break Bidirectional </i>
//    <check> 
//      <loc> ( (unsigned int) TIM16_BDTR ) </loc>
//      <o.28..28> BKBID
//    </check>
//  </item>
//  


// -------------------------------  Register RTree: TIM16_BDTR  -----------------------------------
// SVD Line: 12009

//  <rtree> SFDITEM_REG__TIM16_BDTR
//    <name> BDTR </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x40014444) break and dead-time register </i>
//    <loc> ( (unsigned int)((TIM16_BDTR >> 0) & 0xFFFFFFFF), ((TIM16_BDTR = (TIM16_BDTR & ~(0x140FFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0x140FFFFF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__TIM16_BDTR_DTG </item>
//    <item> SFDITEM_FIELD__TIM16_BDTR_LOCK </item>
//    <item> SFDITEM_FIELD__TIM16_BDTR_OSSI </item>
//    <item> SFDITEM_FIELD__TIM16_BDTR_OSSR </item>
//    <item> SFDITEM_FIELD__TIM16_BDTR_BKE </item>
//    <item> SFDITEM_FIELD__TIM16_BDTR_BKP </item>
//    <item> SFDITEM_FIELD__TIM16_BDTR_AOE </item>
//    <item> SFDITEM_FIELD__TIM16_BDTR_MOE </item>
//    <item> SFDITEM_FIELD__TIM16_BDTR_BKF </item>
//    <item> SFDITEM_FIELD__TIM16_BDTR_BKDSRM </item>
//    <item> SFDITEM_FIELD__TIM16_BDTR_BKBID </item>
//  </rtree>
//  


// ----------------------------  Register Item Address: TIM16_DCR  --------------------------------
// SVD Line: 12088

unsigned int TIM16_DCR __AT (0x40014448);



// --------------------------------  Field Item: TIM16_DCR_DBL  -----------------------------------
// SVD Line: 12097

//  <item> SFDITEM_FIELD__TIM16_DCR_DBL
//    <name> DBL </name>
//    <rw> 
//    <i> [Bits 12..8] RW (@ 0x40014448) DMA burst length </i>
//    <edit> 
//      <loc> ( (unsigned char)((TIM16_DCR >> 8) & 0x1F), ((TIM16_DCR = (TIM16_DCR & ~(0x1FUL << 8 )) | ((unsigned long)(Gui_u8:GuiVal & 0x1F) << 8 ) ) )) </loc>
//    </edit>
//  </item>
//  


// --------------------------------  Field Item: TIM16_DCR_DBA  -----------------------------------
// SVD Line: 12103

//  <item> SFDITEM_FIELD__TIM16_DCR_DBA
//    <name> DBA </name>
//    <rw> 
//    <i> [Bits 4..0] RW (@ 0x40014448) DMA base address </i>
//    <edit> 
//      <loc> ( (unsigned char)((TIM16_DCR >> 0) & 0x1F), ((TIM16_DCR = (TIM16_DCR & ~(0x1FUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0x1F) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// --------------------------------  Register RTree: TIM16_DCR  -----------------------------------
// SVD Line: 12088

//  <rtree> SFDITEM_REG__TIM16_DCR
//    <name> DCR </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x40014448) DMA control register </i>
//    <loc> ( (unsigned int)((TIM16_DCR >> 0) & 0xFFFFFFFF), ((TIM16_DCR = (TIM16_DCR & ~(0x1F1FUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0x1F1F) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__TIM16_DCR_DBL </item>
//    <item> SFDITEM_FIELD__TIM16_DCR_DBA </item>
//  </rtree>
//  


// ----------------------------  Register Item Address: TIM16_DMAR  -------------------------------
// SVD Line: 12111

unsigned int TIM16_DMAR __AT (0x4001444C);



// -------------------------------  Field Item: TIM16_DMAR_DMAB  ----------------------------------
// SVD Line: 12120

//  <item> SFDITEM_FIELD__TIM16_DMAR_DMAB
//    <name> DMAB </name>
//    <rw> 
//    <i> [Bits 15..0] RW (@ 0x4001444C) DMA register for burst  accesses </i>
//    <edit> 
//      <loc> ( (unsigned short)((TIM16_DMAR >> 0) & 0xFFFF), ((TIM16_DMAR = (TIM16_DMAR & ~(0xFFFFUL << 0 )) | ((unsigned long)(Gui_u16:GuiVal & 0xFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -------------------------------  Register RTree: TIM16_DMAR  -----------------------------------
// SVD Line: 12111

//  <rtree> SFDITEM_REG__TIM16_DMAR
//    <name> DMAR </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x4001444C) DMA address for full transfer </i>
//    <loc> ( (unsigned int)((TIM16_DMAR >> 0) & 0xFFFFFFFF), ((TIM16_DMAR = (TIM16_DMAR & ~(0xFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__TIM16_DMAR_DMAB </item>
//  </rtree>
//  


// ----------------------------  Register Item Address: TIM16_AF1  --------------------------------
// SVD Line: 12129

unsigned int TIM16_AF1 __AT (0x40014460);



// -------------------------------  Field Item: TIM16_AF1_BKINE  ----------------------------------
// SVD Line: 12138

//  <item> SFDITEM_FIELD__TIM16_AF1_BKINE
//    <name> BKINE </name>
//    <rw> 
//    <i> [Bit 0] RW (@ 0x40014460) BRK BKIN input enable </i>
//    <check> 
//      <loc> ( (unsigned int) TIM16_AF1 ) </loc>
//      <o.0..0> BKINE
//    </check>
//  </item>
//  


// ------------------------------  Field Item: TIM16_AF1_BKCMP1E  ---------------------------------
// SVD Line: 12144

//  <item> SFDITEM_FIELD__TIM16_AF1_BKCMP1E
//    <name> BKCMP1E </name>
//    <rw> 
//    <i> [Bit 1] RW (@ 0x40014460) BRK COMP1 enable </i>
//    <check> 
//      <loc> ( (unsigned int) TIM16_AF1 ) </loc>
//      <o.1..1> BKCMP1E
//    </check>
//  </item>
//  


// ------------------------------  Field Item: TIM16_AF1_BKCMP2E  ---------------------------------
// SVD Line: 12150

//  <item> SFDITEM_FIELD__TIM16_AF1_BKCMP2E
//    <name> BKCMP2E </name>
//    <rw> 
//    <i> [Bit 2] RW (@ 0x40014460) BRK COMP2 enable </i>
//    <check> 
//      <loc> ( (unsigned int) TIM16_AF1 ) </loc>
//      <o.2..2> BKCMP2E
//    </check>
//  </item>
//  


// -----------------------------  Field Item: TIM16_AF1_BKDFBK1E  ---------------------------------
// SVD Line: 12156

//  <item> SFDITEM_FIELD__TIM16_AF1_BKDFBK1E
//    <name> BKDFBK1E </name>
//    <rw> 
//    <i> [Bit 8] RW (@ 0x40014460) BRK DFSDM_BREAK1 enable </i>
//    <check> 
//      <loc> ( (unsigned int) TIM16_AF1 ) </loc>
//      <o.8..8> BKDFBK1E
//    </check>
//  </item>
//  


// -------------------------------  Field Item: TIM16_AF1_BKINP  ----------------------------------
// SVD Line: 12162

//  <item> SFDITEM_FIELD__TIM16_AF1_BKINP
//    <name> BKINP </name>
//    <rw> 
//    <i> [Bit 9] RW (@ 0x40014460) BRK BKIN input polarity </i>
//    <check> 
//      <loc> ( (unsigned int) TIM16_AF1 ) </loc>
//      <o.9..9> BKINP
//    </check>
//  </item>
//  


// ------------------------------  Field Item: TIM16_AF1_BKCMP1P  ---------------------------------
// SVD Line: 12168

//  <item> SFDITEM_FIELD__TIM16_AF1_BKCMP1P
//    <name> BKCMP1P </name>
//    <rw> 
//    <i> [Bit 10] RW (@ 0x40014460) BRK COMP1 input polarity </i>
//    <check> 
//      <loc> ( (unsigned int) TIM16_AF1 ) </loc>
//      <o.10..10> BKCMP1P
//    </check>
//  </item>
//  


// ------------------------------  Field Item: TIM16_AF1_BKCMP2P  ---------------------------------
// SVD Line: 12174

//  <item> SFDITEM_FIELD__TIM16_AF1_BKCMP2P
//    <name> BKCMP2P </name>
//    <rw> 
//    <i> [Bit 11] RW (@ 0x40014460) BRK COMP2 input polarit </i>
//    <check> 
//      <loc> ( (unsigned int) TIM16_AF1 ) </loc>
//      <o.11..11> BKCMP2P
//    </check>
//  </item>
//  


// --------------------------------  Register RTree: TIM16_AF1  -----------------------------------
// SVD Line: 12129

//  <rtree> SFDITEM_REG__TIM16_AF1
//    <name> AF1 </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x40014460) TIM17 option register 1 </i>
//    <loc> ( (unsigned int)((TIM16_AF1 >> 0) & 0xFFFFFFFF), ((TIM16_AF1 = (TIM16_AF1 & ~(0xF07UL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xF07) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__TIM16_AF1_BKINE </item>
//    <item> SFDITEM_FIELD__TIM16_AF1_BKCMP1E </item>
//    <item> SFDITEM_FIELD__TIM16_AF1_BKCMP2E </item>
//    <item> SFDITEM_FIELD__TIM16_AF1_BKDFBK1E </item>
//    <item> SFDITEM_FIELD__TIM16_AF1_BKINP </item>
//    <item> SFDITEM_FIELD__TIM16_AF1_BKCMP1P </item>
//    <item> SFDITEM_FIELD__TIM16_AF1_BKCMP2P </item>
//  </rtree>
//  


// ---------------------------  Register Item Address: TIM16_TISEL  -------------------------------
// SVD Line: 12182

unsigned int TIM16_TISEL __AT (0x40014468);



// -----------------------------  Field Item: TIM16_TISEL_TI1SEL  ---------------------------------
// SVD Line: 12191

//  <item> SFDITEM_FIELD__TIM16_TISEL_TI1SEL
//    <name> TI1SEL </name>
//    <rw> 
//    <i> [Bits 3..0] RW (@ 0x40014468) selects input </i>
//    <edit> 
//      <loc> ( (unsigned char)((TIM16_TISEL >> 0) & 0xF), ((TIM16_TISEL = (TIM16_TISEL & ~(0xFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -------------------------------  Register RTree: TIM16_TISEL  ----------------------------------
// SVD Line: 12182

//  <rtree> SFDITEM_REG__TIM16_TISEL
//    <name> TISEL </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x40014468) input selection register </i>
//    <loc> ( (unsigned int)((TIM16_TISEL >> 0) & 0xFFFFFFFF), ((TIM16_TISEL = (TIM16_TISEL & ~(0xFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__TIM16_TISEL_TI1SEL </item>
//  </rtree>
//  


// ---------------------------------  Peripheral View: TIM16  -------------------------------------
// SVD Line: 11552

//  <view> TIM16
//    <name> TIM16 </name>
//    <item> SFDITEM_REG__TIM16_CR1 </item>
//    <item> SFDITEM_REG__TIM16_CR2 </item>
//    <item> SFDITEM_REG__TIM16_DIER </item>
//    <item> SFDITEM_REG__TIM16_SR </item>
//    <item> SFDITEM_REG__TIM16_EGR </item>
//    <item> SFDITEM_REG__TIM16_CCMR1_Output </item>
//    <item> SFDITEM_REG__TIM16_CCMR1_Input </item>
//    <item> SFDITEM_REG__TIM16_CCER </item>
//    <item> SFDITEM_REG__TIM16_CNT </item>
//    <item> SFDITEM_REG__TIM16_PSC </item>
//    <item> SFDITEM_REG__TIM16_ARR </item>
//    <item> SFDITEM_REG__TIM16_RCR </item>
//    <item> SFDITEM_REG__TIM16_CCR1 </item>
//    <item> SFDITEM_REG__TIM16_BDTR </item>
//    <item> SFDITEM_REG__TIM16_DCR </item>
//    <item> SFDITEM_REG__TIM16_DMAR </item>
//    <item> SFDITEM_REG__TIM16_AF1 </item>
//    <item> SFDITEM_REG__TIM16_TISEL </item>
//  </view>
//  


// ----------------------------  Register Item Address: TIM17_CR1  --------------------------------
// SVD Line: 11568

unsigned int TIM17_CR1 __AT (0x40014800);



// --------------------------------  Field Item: TIM17_CR1_CEN  -----------------------------------
// SVD Line: 11577

//  <item> SFDITEM_FIELD__TIM17_CR1_CEN
//    <name> CEN </name>
//    <rw> 
//    <i> [Bit 0] RW (@ 0x40014800) Counter enable </i>
//    <check> 
//      <loc> ( (unsigned int) TIM17_CR1 ) </loc>
//      <o.0..0> CEN
//    </check>
//  </item>
//  


// -------------------------------  Field Item: TIM17_CR1_UDIS  -----------------------------------
// SVD Line: 11583

//  <item> SFDITEM_FIELD__TIM17_CR1_UDIS
//    <name> UDIS </name>
//    <rw> 
//    <i> [Bit 1] RW (@ 0x40014800) Update disable </i>
//    <check> 
//      <loc> ( (unsigned int) TIM17_CR1 ) </loc>
//      <o.1..1> UDIS
//    </check>
//  </item>
//  


// --------------------------------  Field Item: TIM17_CR1_URS  -----------------------------------
// SVD Line: 11589

//  <item> SFDITEM_FIELD__TIM17_CR1_URS
//    <name> URS </name>
//    <rw> 
//    <i> [Bit 2] RW (@ 0x40014800) Update request source </i>
//    <check> 
//      <loc> ( (unsigned int) TIM17_CR1 ) </loc>
//      <o.2..2> URS
//    </check>
//  </item>
//  


// --------------------------------  Field Item: TIM17_CR1_OPM  -----------------------------------
// SVD Line: 11595

//  <item> SFDITEM_FIELD__TIM17_CR1_OPM
//    <name> OPM </name>
//    <rw> 
//    <i> [Bit 3] RW (@ 0x40014800) One-pulse mode </i>
//    <check> 
//      <loc> ( (unsigned int) TIM17_CR1 ) </loc>
//      <o.3..3> OPM
//    </check>
//  </item>
//  


// -------------------------------  Field Item: TIM17_CR1_ARPE  -----------------------------------
// SVD Line: 11601

//  <item> SFDITEM_FIELD__TIM17_CR1_ARPE
//    <name> ARPE </name>
//    <rw> 
//    <i> [Bit 7] RW (@ 0x40014800) Auto-reload preload enable </i>
//    <check> 
//      <loc> ( (unsigned int) TIM17_CR1 ) </loc>
//      <o.7..7> ARPE
//    </check>
//  </item>
//  


// --------------------------------  Field Item: TIM17_CR1_CKD  -----------------------------------
// SVD Line: 11607

//  <item> SFDITEM_FIELD__TIM17_CR1_CKD
//    <name> CKD </name>
//    <rw> 
//    <i> [Bits 9..8] RW (@ 0x40014800) Clock division </i>
//    <edit> 
//      <loc> ( (unsigned char)((TIM17_CR1 >> 8) & 0x3), ((TIM17_CR1 = (TIM17_CR1 & ~(0x3UL << 8 )) | ((unsigned long)(Gui_u8:GuiVal & 0x3) << 8 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -----------------------------  Field Item: TIM17_CR1_UIFREMAP  ---------------------------------
// SVD Line: 11613

//  <item> SFDITEM_FIELD__TIM17_CR1_UIFREMAP
//    <name> UIFREMAP </name>
//    <rw> 
//    <i> [Bit 11] RW (@ 0x40014800) UIF status bit remapping </i>
//    <check> 
//      <loc> ( (unsigned int) TIM17_CR1 ) </loc>
//      <o.11..11> UIFREMAP
//    </check>
//  </item>
//  


// --------------------------------  Register RTree: TIM17_CR1  -----------------------------------
// SVD Line: 11568

//  <rtree> SFDITEM_REG__TIM17_CR1
//    <name> CR1 </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x40014800) control register 1 </i>
//    <loc> ( (unsigned int)((TIM17_CR1 >> 0) & 0xFFFFFFFF), ((TIM17_CR1 = (TIM17_CR1 & ~(0xB8FUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xB8F) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__TIM17_CR1_CEN </item>
//    <item> SFDITEM_FIELD__TIM17_CR1_UDIS </item>
//    <item> SFDITEM_FIELD__TIM17_CR1_URS </item>
//    <item> SFDITEM_FIELD__TIM17_CR1_OPM </item>
//    <item> SFDITEM_FIELD__TIM17_CR1_ARPE </item>
//    <item> SFDITEM_FIELD__TIM17_CR1_CKD </item>
//    <item> SFDITEM_FIELD__TIM17_CR1_UIFREMAP </item>
//  </rtree>
//  


// ----------------------------  Register Item Address: TIM17_CR2  --------------------------------
// SVD Line: 11621

unsigned int TIM17_CR2 __AT (0x40014804);



// -------------------------------  Field Item: TIM17_CR2_OIS1N  ----------------------------------
// SVD Line: 11630

//  <item> SFDITEM_FIELD__TIM17_CR2_OIS1N
//    <name> OIS1N </name>
//    <rw> 
//    <i> [Bit 9] RW (@ 0x40014804) Output Idle state 1 </i>
//    <check> 
//      <loc> ( (unsigned int) TIM17_CR2 ) </loc>
//      <o.9..9> OIS1N
//    </check>
//  </item>
//  


// -------------------------------  Field Item: TIM17_CR2_OIS1  -----------------------------------
// SVD Line: 11636

//  <item> SFDITEM_FIELD__TIM17_CR2_OIS1
//    <name> OIS1 </name>
//    <rw> 
//    <i> [Bit 8] RW (@ 0x40014804) Output Idle state 1 </i>
//    <check> 
//      <loc> ( (unsigned int) TIM17_CR2 ) </loc>
//      <o.8..8> OIS1
//    </check>
//  </item>
//  


// -------------------------------  Field Item: TIM17_CR2_CCDS  -----------------------------------
// SVD Line: 11642

//  <item> SFDITEM_FIELD__TIM17_CR2_CCDS
//    <name> CCDS </name>
//    <rw> 
//    <i> [Bit 3] RW (@ 0x40014804) Capture/compare DMA  selection </i>
//    <check> 
//      <loc> ( (unsigned int) TIM17_CR2 ) </loc>
//      <o.3..3> CCDS
//    </check>
//  </item>
//  


// -------------------------------  Field Item: TIM17_CR2_CCUS  -----------------------------------
// SVD Line: 11649

//  <item> SFDITEM_FIELD__TIM17_CR2_CCUS
//    <name> CCUS </name>
//    <rw> 
//    <i> [Bit 2] RW (@ 0x40014804) Capture/compare control update  selection </i>
//    <check> 
//      <loc> ( (unsigned int) TIM17_CR2 ) </loc>
//      <o.2..2> CCUS
//    </check>
//  </item>
//  


// -------------------------------  Field Item: TIM17_CR2_CCPC  -----------------------------------
// SVD Line: 11656

//  <item> SFDITEM_FIELD__TIM17_CR2_CCPC
//    <name> CCPC </name>
//    <rw> 
//    <i> [Bit 0] RW (@ 0x40014804) Capture/compare preloaded  control </i>
//    <check> 
//      <loc> ( (unsigned int) TIM17_CR2 ) </loc>
//      <o.0..0> CCPC
//    </check>
//  </item>
//  


// --------------------------------  Register RTree: TIM17_CR2  -----------------------------------
// SVD Line: 11621

//  <rtree> SFDITEM_REG__TIM17_CR2
//    <name> CR2 </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x40014804) control register 2 </i>
//    <loc> ( (unsigned int)((TIM17_CR2 >> 0) & 0xFFFFFFFF), ((TIM17_CR2 = (TIM17_CR2 & ~(0x30DUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0x30D) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__TIM17_CR2_OIS1N </item>
//    <item> SFDITEM_FIELD__TIM17_CR2_OIS1 </item>
//    <item> SFDITEM_FIELD__TIM17_CR2_CCDS </item>
//    <item> SFDITEM_FIELD__TIM17_CR2_CCUS </item>
//    <item> SFDITEM_FIELD__TIM17_CR2_CCPC </item>
//  </rtree>
//  


// ----------------------------  Register Item Address: TIM17_DIER  -------------------------------
// SVD Line: 11665

unsigned int TIM17_DIER __AT (0x4001480C);



// ------------------------------  Field Item: TIM17_DIER_COMDE  ----------------------------------
// SVD Line: 11674

//  <item> SFDITEM_FIELD__TIM17_DIER_COMDE
//    <name> COMDE </name>
//    <rw> 
//    <i> [Bit 13] RW (@ 0x4001480C) COM DMA request enable </i>
//    <check> 
//      <loc> ( (unsigned int) TIM17_DIER ) </loc>
//      <o.13..13> COMDE
//    </check>
//  </item>
//  


// ------------------------------  Field Item: TIM17_DIER_CC1DE  ----------------------------------
// SVD Line: 11680

//  <item> SFDITEM_FIELD__TIM17_DIER_CC1DE
//    <name> CC1DE </name>
//    <rw> 
//    <i> [Bit 9] RW (@ 0x4001480C) Capture/Compare 1 DMA request  enable </i>
//    <check> 
//      <loc> ( (unsigned int) TIM17_DIER ) </loc>
//      <o.9..9> CC1DE
//    </check>
//  </item>
//  


// -------------------------------  Field Item: TIM17_DIER_UDE  -----------------------------------
// SVD Line: 11687

//  <item> SFDITEM_FIELD__TIM17_DIER_UDE
//    <name> UDE </name>
//    <rw> 
//    <i> [Bit 8] RW (@ 0x4001480C) Update DMA request enable </i>
//    <check> 
//      <loc> ( (unsigned int) TIM17_DIER ) </loc>
//      <o.8..8> UDE
//    </check>
//  </item>
//  


// -------------------------------  Field Item: TIM17_DIER_BIE  -----------------------------------
// SVD Line: 11693

//  <item> SFDITEM_FIELD__TIM17_DIER_BIE
//    <name> BIE </name>
//    <rw> 
//    <i> [Bit 7] RW (@ 0x4001480C) Break interrupt enable </i>
//    <check> 
//      <loc> ( (unsigned int) TIM17_DIER ) </loc>
//      <o.7..7> BIE
//    </check>
//  </item>
//  


// ------------------------------  Field Item: TIM17_DIER_COMIE  ----------------------------------
// SVD Line: 11699

//  <item> SFDITEM_FIELD__TIM17_DIER_COMIE
//    <name> COMIE </name>
//    <rw> 
//    <i> [Bit 5] RW (@ 0x4001480C) COM interrupt enable </i>
//    <check> 
//      <loc> ( (unsigned int) TIM17_DIER ) </loc>
//      <o.5..5> COMIE
//    </check>
//  </item>
//  


// ------------------------------  Field Item: TIM17_DIER_CC1IE  ----------------------------------
// SVD Line: 11705

//  <item> SFDITEM_FIELD__TIM17_DIER_CC1IE
//    <name> CC1IE </name>
//    <rw> 
//    <i> [Bit 1] RW (@ 0x4001480C) Capture/Compare 1 interrupt  enable </i>
//    <check> 
//      <loc> ( (unsigned int) TIM17_DIER ) </loc>
//      <o.1..1> CC1IE
//    </check>
//  </item>
//  


// -------------------------------  Field Item: TIM17_DIER_UIE  -----------------------------------
// SVD Line: 11712

//  <item> SFDITEM_FIELD__TIM17_DIER_UIE
//    <name> UIE </name>
//    <rw> 
//    <i> [Bit 0] RW (@ 0x4001480C) Update interrupt enable </i>
//    <check> 
//      <loc> ( (unsigned int) TIM17_DIER ) </loc>
//      <o.0..0> UIE
//    </check>
//  </item>
//  


// -------------------------------  Register RTree: TIM17_DIER  -----------------------------------
// SVD Line: 11665

//  <rtree> SFDITEM_REG__TIM17_DIER
//    <name> DIER </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x4001480C) DMA/Interrupt enable register </i>
//    <loc> ( (unsigned int)((TIM17_DIER >> 0) & 0xFFFFFFFF), ((TIM17_DIER = (TIM17_DIER & ~(0x23A3UL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0x23A3) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__TIM17_DIER_COMDE </item>
//    <item> SFDITEM_FIELD__TIM17_DIER_CC1DE </item>
//    <item> SFDITEM_FIELD__TIM17_DIER_UDE </item>
//    <item> SFDITEM_FIELD__TIM17_DIER_BIE </item>
//    <item> SFDITEM_FIELD__TIM17_DIER_COMIE </item>
//    <item> SFDITEM_FIELD__TIM17_DIER_CC1IE </item>
//    <item> SFDITEM_FIELD__TIM17_DIER_UIE </item>
//  </rtree>
//  


// -----------------------------  Register Item Address: TIM17_SR  --------------------------------
// SVD Line: 11720

unsigned int TIM17_SR __AT (0x40014810);



// -------------------------------  Field Item: TIM17_SR_CC1OF  -----------------------------------
// SVD Line: 11729

//  <item> SFDITEM_FIELD__TIM17_SR_CC1OF
//    <name> CC1OF </name>
//    <rw> 
//    <i> [Bit 9] RW (@ 0x40014810) Capture/Compare 1 overcapture  flag </i>
//    <check> 
//      <loc> ( (unsigned int) TIM17_SR ) </loc>
//      <o.9..9> CC1OF
//    </check>
//  </item>
//  


// --------------------------------  Field Item: TIM17_SR_BIF  ------------------------------------
// SVD Line: 11736

//  <item> SFDITEM_FIELD__TIM17_SR_BIF
//    <name> BIF </name>
//    <rw> 
//    <i> [Bit 7] RW (@ 0x40014810) Break interrupt flag </i>
//    <check> 
//      <loc> ( (unsigned int) TIM17_SR ) </loc>
//      <o.7..7> BIF
//    </check>
//  </item>
//  


// -------------------------------  Field Item: TIM17_SR_COMIF  -----------------------------------
// SVD Line: 11742

//  <item> SFDITEM_FIELD__TIM17_SR_COMIF
//    <name> COMIF </name>
//    <rw> 
//    <i> [Bit 5] RW (@ 0x40014810) COM interrupt flag </i>
//    <check> 
//      <loc> ( (unsigned int) TIM17_SR ) </loc>
//      <o.5..5> COMIF
//    </check>
//  </item>
//  


// -------------------------------  Field Item: TIM17_SR_CC1IF  -----------------------------------
// SVD Line: 11748

//  <item> SFDITEM_FIELD__TIM17_SR_CC1IF
//    <name> CC1IF </name>
//    <rw> 
//    <i> [Bit 1] RW (@ 0x40014810) Capture/compare 1 interrupt  flag </i>
//    <check> 
//      <loc> ( (unsigned int) TIM17_SR ) </loc>
//      <o.1..1> CC1IF
//    </check>
//  </item>
//  


// --------------------------------  Field Item: TIM17_SR_UIF  ------------------------------------
// SVD Line: 11755

//  <item> SFDITEM_FIELD__TIM17_SR_UIF
//    <name> UIF </name>
//    <rw> 
//    <i> [Bit 0] RW (@ 0x40014810) Update interrupt flag </i>
//    <check> 
//      <loc> ( (unsigned int) TIM17_SR ) </loc>
//      <o.0..0> UIF
//    </check>
//  </item>
//  


// --------------------------------  Register RTree: TIM17_SR  ------------------------------------
// SVD Line: 11720

//  <rtree> SFDITEM_REG__TIM17_SR
//    <name> SR </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x40014810) status register </i>
//    <loc> ( (unsigned int)((TIM17_SR >> 0) & 0xFFFFFFFF), ((TIM17_SR = (TIM17_SR & ~(0x2A3UL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0x2A3) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__TIM17_SR_CC1OF </item>
//    <item> SFDITEM_FIELD__TIM17_SR_BIF </item>
//    <item> SFDITEM_FIELD__TIM17_SR_COMIF </item>
//    <item> SFDITEM_FIELD__TIM17_SR_CC1IF </item>
//    <item> SFDITEM_FIELD__TIM17_SR_UIF </item>
//  </rtree>
//  


// ----------------------------  Register Item Address: TIM17_EGR  --------------------------------
// SVD Line: 11763

unsigned int TIM17_EGR __AT (0x40014814);



// --------------------------------  Field Item: TIM17_EGR_BG  ------------------------------------
// SVD Line: 11772

//  <item> SFDITEM_FIELD__TIM17_EGR_BG
//    <name> BG </name>
//    <w> 
//    <i> [Bit 7] WO (@ 0x40014814) Break generation </i>
//    <check> 
//      <loc> ( (unsigned int) TIM17_EGR ) </loc>
//      <o.7..7> BG
//    </check>
//  </item>
//  


// -------------------------------  Field Item: TIM17_EGR_COMG  -----------------------------------
// SVD Line: 11778

//  <item> SFDITEM_FIELD__TIM17_EGR_COMG
//    <name> COMG </name>
//    <w> 
//    <i> [Bit 5] WO (@ 0x40014814) Capture/Compare control update  generation </i>
//    <check> 
//      <loc> ( (unsigned int) TIM17_EGR ) </loc>
//      <o.5..5> COMG
//    </check>
//  </item>
//  


// -------------------------------  Field Item: TIM17_EGR_CC1G  -----------------------------------
// SVD Line: 11785

//  <item> SFDITEM_FIELD__TIM17_EGR_CC1G
//    <name> CC1G </name>
//    <w> 
//    <i> [Bit 1] WO (@ 0x40014814) Capture/compare 1  generation </i>
//    <check> 
//      <loc> ( (unsigned int) TIM17_EGR ) </loc>
//      <o.1..1> CC1G
//    </check>
//  </item>
//  


// --------------------------------  Field Item: TIM17_EGR_UG  ------------------------------------
// SVD Line: 11792

//  <item> SFDITEM_FIELD__TIM17_EGR_UG
//    <name> UG </name>
//    <w> 
//    <i> [Bit 0] WO (@ 0x40014814) Update generation </i>
//    <check> 
//      <loc> ( (unsigned int) TIM17_EGR ) </loc>
//      <o.0..0> UG
//    </check>
//  </item>
//  


// --------------------------------  Register RTree: TIM17_EGR  -----------------------------------
// SVD Line: 11763

//  <rtree> SFDITEM_REG__TIM17_EGR
//    <name> EGR </name>
//    <w> 
//    <i> [Bits 31..0] WO (@ 0x40014814) event generation register </i>
//    <loc> ( (unsigned int)((TIM17_EGR >> 0) & 0xFFFFFFFF), ((TIM17_EGR = (TIM17_EGR & ~(0xA3UL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xA3) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__TIM17_EGR_BG </item>
//    <item> SFDITEM_FIELD__TIM17_EGR_COMG </item>
//    <item> SFDITEM_FIELD__TIM17_EGR_CC1G </item>
//    <item> SFDITEM_FIELD__TIM17_EGR_UG </item>
//  </rtree>
//  


// ------------------------  Register Item Address: TIM17_CCMR1_Output  ---------------------------
// SVD Line: 11800

unsigned int TIM17_CCMR1_Output __AT (0x40014818);



// --------------------------  Field Item: TIM17_CCMR1_Output_OC1M_2  -----------------------------
// SVD Line: 11810

//  <item> SFDITEM_FIELD__TIM17_CCMR1_Output_OC1M_2
//    <name> OC1M_2 </name>
//    <rw> 
//    <i> [Bit 16] RW (@ 0x40014818) Output Compare 1 mode </i>
//    <check> 
//      <loc> ( (unsigned int) TIM17_CCMR1_Output ) </loc>
//      <o.16..16> OC1M_2
//    </check>
//  </item>
//  


// ---------------------------  Field Item: TIM17_CCMR1_Output_OC1M  ------------------------------
// SVD Line: 11816

//  <item> SFDITEM_FIELD__TIM17_CCMR1_Output_OC1M
//    <name> OC1M </name>
//    <rw> 
//    <i> [Bits 6..4] RW (@ 0x40014818) Output Compare 1 mode </i>
//    <edit> 
//      <loc> ( (unsigned char)((TIM17_CCMR1_Output >> 4) & 0x7), ((TIM17_CCMR1_Output = (TIM17_CCMR1_Output & ~(0x7UL << 4 )) | ((unsigned long)(Gui_u8:GuiVal & 0x7) << 4 ) ) )) </loc>
//    </edit>
//  </item>
//  


// --------------------------  Field Item: TIM17_CCMR1_Output_OC1PE  ------------------------------
// SVD Line: 11822

//  <item> SFDITEM_FIELD__TIM17_CCMR1_Output_OC1PE
//    <name> OC1PE </name>
//    <rw> 
//    <i> [Bit 3] RW (@ 0x40014818) Output Compare 1 preload  enable </i>
//    <check> 
//      <loc> ( (unsigned int) TIM17_CCMR1_Output ) </loc>
//      <o.3..3> OC1PE
//    </check>
//  </item>
//  


// --------------------------  Field Item: TIM17_CCMR1_Output_OC1FE  ------------------------------
// SVD Line: 11829

//  <item> SFDITEM_FIELD__TIM17_CCMR1_Output_OC1FE
//    <name> OC1FE </name>
//    <rw> 
//    <i> [Bit 2] RW (@ 0x40014818) Output Compare 1 fast  enable </i>
//    <check> 
//      <loc> ( (unsigned int) TIM17_CCMR1_Output ) </loc>
//      <o.2..2> OC1FE
//    </check>
//  </item>
//  


// ---------------------------  Field Item: TIM17_CCMR1_Output_CC1S  ------------------------------
// SVD Line: 11836

//  <item> SFDITEM_FIELD__TIM17_CCMR1_Output_CC1S
//    <name> CC1S </name>
//    <rw> 
//    <i> [Bits 1..0] RW (@ 0x40014818) Capture/Compare 1  selection </i>
//    <edit> 
//      <loc> ( (unsigned char)((TIM17_CCMR1_Output >> 0) & 0x3), ((TIM17_CCMR1_Output = (TIM17_CCMR1_Output & ~(0x3UL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0x3) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ---------------------------  Register RTree: TIM17_CCMR1_Output  -------------------------------
// SVD Line: 11800

//  <rtree> SFDITEM_REG__TIM17_CCMR1_Output
//    <name> CCMR1_Output </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x40014818) capture/compare mode register (output  mode) </i>
//    <loc> ( (unsigned int)((TIM17_CCMR1_Output >> 0) & 0xFFFFFFFF), ((TIM17_CCMR1_Output = (TIM17_CCMR1_Output & ~(0x1007FUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0x1007F) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__TIM17_CCMR1_Output_OC1M_2 </item>
//    <item> SFDITEM_FIELD__TIM17_CCMR1_Output_OC1M </item>
//    <item> SFDITEM_FIELD__TIM17_CCMR1_Output_OC1PE </item>
//    <item> SFDITEM_FIELD__TIM17_CCMR1_Output_OC1FE </item>
//    <item> SFDITEM_FIELD__TIM17_CCMR1_Output_CC1S </item>
//  </rtree>
//  


// ------------------------  Register Item Address: TIM17_CCMR1_Input  ----------------------------
// SVD Line: 11845

unsigned int TIM17_CCMR1_Input __AT (0x40014818);



// ---------------------------  Field Item: TIM17_CCMR1_Input_IC1F  -------------------------------
// SVD Line: 11856

//  <item> SFDITEM_FIELD__TIM17_CCMR1_Input_IC1F
//    <name> IC1F </name>
//    <rw> 
//    <i> [Bits 7..4] RW (@ 0x40014818) Input capture 1 filter </i>
//    <edit> 
//      <loc> ( (unsigned char)((TIM17_CCMR1_Input >> 4) & 0xF), ((TIM17_CCMR1_Input = (TIM17_CCMR1_Input & ~(0xFUL << 4 )) | ((unsigned long)(Gui_u8:GuiVal & 0xF) << 4 ) ) )) </loc>
//    </edit>
//  </item>
//  


// --------------------------  Field Item: TIM17_CCMR1_Input_IC1PSC  ------------------------------
// SVD Line: 11862

//  <item> SFDITEM_FIELD__TIM17_CCMR1_Input_IC1PSC
//    <name> IC1PSC </name>
//    <rw> 
//    <i> [Bits 3..2] RW (@ 0x40014818) Input capture 1 prescaler </i>
//    <edit> 
//      <loc> ( (unsigned char)((TIM17_CCMR1_Input >> 2) & 0x3), ((TIM17_CCMR1_Input = (TIM17_CCMR1_Input & ~(0x3UL << 2 )) | ((unsigned long)(Gui_u8:GuiVal & 0x3) << 2 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ---------------------------  Field Item: TIM17_CCMR1_Input_CC1S  -------------------------------
// SVD Line: 11868

//  <item> SFDITEM_FIELD__TIM17_CCMR1_Input_CC1S
//    <name> CC1S </name>
//    <rw> 
//    <i> [Bits 1..0] RW (@ 0x40014818) Capture/Compare 1  selection </i>
//    <edit> 
//      <loc> ( (unsigned char)((TIM17_CCMR1_Input >> 0) & 0x3), ((TIM17_CCMR1_Input = (TIM17_CCMR1_Input & ~(0x3UL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0x3) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ----------------------------  Register RTree: TIM17_CCMR1_Input  -------------------------------
// SVD Line: 11845

//  <rtree> SFDITEM_REG__TIM17_CCMR1_Input
//    <name> CCMR1_Input </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x40014818) capture/compare mode register 1 (input  mode) </i>
//    <loc> ( (unsigned int)((TIM17_CCMR1_Input >> 0) & 0xFFFFFFFF), ((TIM17_CCMR1_Input = (TIM17_CCMR1_Input & ~(0xFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__TIM17_CCMR1_Input_IC1F </item>
//    <item> SFDITEM_FIELD__TIM17_CCMR1_Input_IC1PSC </item>
//    <item> SFDITEM_FIELD__TIM17_CCMR1_Input_CC1S </item>
//  </rtree>
//  


// ----------------------------  Register Item Address: TIM17_CCER  -------------------------------
// SVD Line: 11877

unsigned int TIM17_CCER __AT (0x40014820);



// ------------------------------  Field Item: TIM17_CCER_CC1NP  ----------------------------------
// SVD Line: 11887

//  <item> SFDITEM_FIELD__TIM17_CCER_CC1NP
//    <name> CC1NP </name>
//    <rw> 
//    <i> [Bit 3] RW (@ 0x40014820) Capture/Compare 1 output  Polarity </i>
//    <check> 
//      <loc> ( (unsigned int) TIM17_CCER ) </loc>
//      <o.3..3> CC1NP
//    </check>
//  </item>
//  


// ------------------------------  Field Item: TIM17_CCER_CC1NE  ----------------------------------
// SVD Line: 11894

//  <item> SFDITEM_FIELD__TIM17_CCER_CC1NE
//    <name> CC1NE </name>
//    <rw> 
//    <i> [Bit 2] RW (@ 0x40014820) Capture/Compare 1 complementary output  enable </i>
//    <check> 
//      <loc> ( (unsigned int) TIM17_CCER ) </loc>
//      <o.2..2> CC1NE
//    </check>
//  </item>
//  


// -------------------------------  Field Item: TIM17_CCER_CC1P  ----------------------------------
// SVD Line: 11901

//  <item> SFDITEM_FIELD__TIM17_CCER_CC1P
//    <name> CC1P </name>
//    <rw> 
//    <i> [Bit 1] RW (@ 0x40014820) Capture/Compare 1 output  Polarity </i>
//    <check> 
//      <loc> ( (unsigned int) TIM17_CCER ) </loc>
//      <o.1..1> CC1P
//    </check>
//  </item>
//  


// -------------------------------  Field Item: TIM17_CCER_CC1E  ----------------------------------
// SVD Line: 11908

//  <item> SFDITEM_FIELD__TIM17_CCER_CC1E
//    <name> CC1E </name>
//    <rw> 
//    <i> [Bit 0] RW (@ 0x40014820) Capture/Compare 1 output  enable </i>
//    <check> 
//      <loc> ( (unsigned int) TIM17_CCER ) </loc>
//      <o.0..0> CC1E
//    </check>
//  </item>
//  


// -------------------------------  Register RTree: TIM17_CCER  -----------------------------------
// SVD Line: 11877

//  <rtree> SFDITEM_REG__TIM17_CCER
//    <name> CCER </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x40014820) capture/compare enable  register </i>
//    <loc> ( (unsigned int)((TIM17_CCER >> 0) & 0xFFFFFFFF), ((TIM17_CCER = (TIM17_CCER & ~(0xFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__TIM17_CCER_CC1NP </item>
//    <item> SFDITEM_FIELD__TIM17_CCER_CC1NE </item>
//    <item> SFDITEM_FIELD__TIM17_CCER_CC1P </item>
//    <item> SFDITEM_FIELD__TIM17_CCER_CC1E </item>
//  </rtree>
//  


// ----------------------------  Register Item Address: TIM17_CNT  --------------------------------
// SVD Line: 11917

unsigned int TIM17_CNT __AT (0x40014824);



// --------------------------------  Field Item: TIM17_CNT_CNT  -----------------------------------
// SVD Line: 11925

//  <item> SFDITEM_FIELD__TIM17_CNT_CNT
//    <name> CNT </name>
//    <rw> 
//    <i> [Bits 15..0] RW (@ 0x40014824) counter value </i>
//    <edit> 
//      <loc> ( (unsigned short)((TIM17_CNT >> 0) & 0xFFFF), ((TIM17_CNT = (TIM17_CNT & ~(0xFFFFUL << 0 )) | ((unsigned long)(Gui_u16:GuiVal & 0xFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ------------------------------  Field Item: TIM17_CNT_UIFCPY  ----------------------------------
// SVD Line: 11932

//  <item> SFDITEM_FIELD__TIM17_CNT_UIFCPY
//    <name> UIFCPY </name>
//    <r> 
//    <i> [Bit 31] RO (@ 0x40014824) UIF Copy </i>
//    <check> 
//      <loc> ( (unsigned int) TIM17_CNT ) </loc>
//      <o.31..31> UIFCPY
//    </check>
//  </item>
//  


// --------------------------------  Register RTree: TIM17_CNT  -----------------------------------
// SVD Line: 11917

//  <rtree> SFDITEM_REG__TIM17_CNT
//    <name> CNT </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x40014824) counter </i>
//    <loc> ( (unsigned int)((TIM17_CNT >> 0) & 0xFFFFFFFF), ((TIM17_CNT = (TIM17_CNT & ~(0xFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__TIM17_CNT_CNT </item>
//    <item> SFDITEM_FIELD__TIM17_CNT_UIFCPY </item>
//  </rtree>
//  


// ----------------------------  Register Item Address: TIM17_PSC  --------------------------------
// SVD Line: 11941

unsigned int TIM17_PSC __AT (0x40014828);



// --------------------------------  Field Item: TIM17_PSC_PSC  -----------------------------------
// SVD Line: 11950

//  <item> SFDITEM_FIELD__TIM17_PSC_PSC
//    <name> PSC </name>
//    <rw> 
//    <i> [Bits 15..0] RW (@ 0x40014828) Prescaler value </i>
//    <edit> 
//      <loc> ( (unsigned short)((TIM17_PSC >> 0) & 0xFFFF), ((TIM17_PSC = (TIM17_PSC & ~(0xFFFFUL << 0 )) | ((unsigned long)(Gui_u16:GuiVal & 0xFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// --------------------------------  Register RTree: TIM17_PSC  -----------------------------------
// SVD Line: 11941

//  <rtree> SFDITEM_REG__TIM17_PSC
//    <name> PSC </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x40014828) prescaler </i>
//    <loc> ( (unsigned int)((TIM17_PSC >> 0) & 0xFFFFFFFF), ((TIM17_PSC = (TIM17_PSC & ~(0xFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__TIM17_PSC_PSC </item>
//  </rtree>
//  


// ----------------------------  Register Item Address: TIM17_ARR  --------------------------------
// SVD Line: 11958

unsigned int TIM17_ARR __AT (0x4001482C);



// --------------------------------  Field Item: TIM17_ARR_ARR  -----------------------------------
// SVD Line: 11967

//  <item> SFDITEM_FIELD__TIM17_ARR_ARR
//    <name> ARR </name>
//    <rw> 
//    <i> [Bits 15..0] RW (@ 0x4001482C) Auto-reload value </i>
//    <edit> 
//      <loc> ( (unsigned short)((TIM17_ARR >> 0) & 0xFFFF), ((TIM17_ARR = (TIM17_ARR & ~(0xFFFFUL << 0 )) | ((unsigned long)(Gui_u16:GuiVal & 0xFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// --------------------------------  Register RTree: TIM17_ARR  -----------------------------------
// SVD Line: 11958

//  <rtree> SFDITEM_REG__TIM17_ARR
//    <name> ARR </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x4001482C) auto-reload register </i>
//    <loc> ( (unsigned int)((TIM17_ARR >> 0) & 0xFFFFFFFF), ((TIM17_ARR = (TIM17_ARR & ~(0xFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__TIM17_ARR_ARR </item>
//  </rtree>
//  


// ----------------------------  Register Item Address: TIM17_RCR  --------------------------------
// SVD Line: 11975

unsigned int TIM17_RCR __AT (0x40014830);



// --------------------------------  Field Item: TIM17_RCR_REP  -----------------------------------
// SVD Line: 11984

//  <item> SFDITEM_FIELD__TIM17_RCR_REP
//    <name> REP </name>
//    <rw> 
//    <i> [Bits 7..0] RW (@ 0x40014830) Repetition counter value </i>
//    <edit> 
//      <loc> ( (unsigned char)((TIM17_RCR >> 0) & 0xFF), ((TIM17_RCR = (TIM17_RCR & ~(0xFFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// --------------------------------  Register RTree: TIM17_RCR  -----------------------------------
// SVD Line: 11975

//  <rtree> SFDITEM_REG__TIM17_RCR
//    <name> RCR </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x40014830) repetition counter register </i>
//    <loc> ( (unsigned int)((TIM17_RCR >> 0) & 0xFFFFFFFF), ((TIM17_RCR = (TIM17_RCR & ~(0xFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__TIM17_RCR_REP </item>
//  </rtree>
//  


// ----------------------------  Register Item Address: TIM17_CCR1  -------------------------------
// SVD Line: 11992

unsigned int TIM17_CCR1 __AT (0x40014834);



// -------------------------------  Field Item: TIM17_CCR1_CCR1  ----------------------------------
// SVD Line: 12001

//  <item> SFDITEM_FIELD__TIM17_CCR1_CCR1
//    <name> CCR1 </name>
//    <rw> 
//    <i> [Bits 15..0] RW (@ 0x40014834) Capture/Compare 1 value </i>
//    <edit> 
//      <loc> ( (unsigned short)((TIM17_CCR1 >> 0) & 0xFFFF), ((TIM17_CCR1 = (TIM17_CCR1 & ~(0xFFFFUL << 0 )) | ((unsigned long)(Gui_u16:GuiVal & 0xFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -------------------------------  Register RTree: TIM17_CCR1  -----------------------------------
// SVD Line: 11992

//  <rtree> SFDITEM_REG__TIM17_CCR1
//    <name> CCR1 </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x40014834) capture/compare register 1 </i>
//    <loc> ( (unsigned int)((TIM17_CCR1 >> 0) & 0xFFFFFFFF), ((TIM17_CCR1 = (TIM17_CCR1 & ~(0xFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__TIM17_CCR1_CCR1 </item>
//  </rtree>
//  


// ----------------------------  Register Item Address: TIM17_BDTR  -------------------------------
// SVD Line: 12009

unsigned int TIM17_BDTR __AT (0x40014844);



// -------------------------------  Field Item: TIM17_BDTR_DTG  -----------------------------------
// SVD Line: 12018

//  <item> SFDITEM_FIELD__TIM17_BDTR_DTG
//    <name> DTG </name>
//    <rw> 
//    <i> [Bits 7..0] RW (@ 0x40014844) Dead-time generator setup </i>
//    <edit> 
//      <loc> ( (unsigned char)((TIM17_BDTR >> 0) & 0xFF), ((TIM17_BDTR = (TIM17_BDTR & ~(0xFFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -------------------------------  Field Item: TIM17_BDTR_LOCK  ----------------------------------
// SVD Line: 12024

//  <item> SFDITEM_FIELD__TIM17_BDTR_LOCK
//    <name> LOCK </name>
//    <rw> 
//    <i> [Bits 9..8] RW (@ 0x40014844) Lock configuration </i>
//    <edit> 
//      <loc> ( (unsigned char)((TIM17_BDTR >> 8) & 0x3), ((TIM17_BDTR = (TIM17_BDTR & ~(0x3UL << 8 )) | ((unsigned long)(Gui_u8:GuiVal & 0x3) << 8 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -------------------------------  Field Item: TIM17_BDTR_OSSI  ----------------------------------
// SVD Line: 12030

//  <item> SFDITEM_FIELD__TIM17_BDTR_OSSI
//    <name> OSSI </name>
//    <rw> 
//    <i> [Bit 10] RW (@ 0x40014844) Off-state selection for Idle  mode </i>
//    <check> 
//      <loc> ( (unsigned int) TIM17_BDTR ) </loc>
//      <o.10..10> OSSI
//    </check>
//  </item>
//  


// -------------------------------  Field Item: TIM17_BDTR_OSSR  ----------------------------------
// SVD Line: 12037

//  <item> SFDITEM_FIELD__TIM17_BDTR_OSSR
//    <name> OSSR </name>
//    <rw> 
//    <i> [Bit 11] RW (@ 0x40014844) Off-state selection for Run  mode </i>
//    <check> 
//      <loc> ( (unsigned int) TIM17_BDTR ) </loc>
//      <o.11..11> OSSR
//    </check>
//  </item>
//  


// -------------------------------  Field Item: TIM17_BDTR_BKE  -----------------------------------
// SVD Line: 12044

//  <item> SFDITEM_FIELD__TIM17_BDTR_BKE
//    <name> BKE </name>
//    <rw> 
//    <i> [Bit 12] RW (@ 0x40014844) Break enable </i>
//    <check> 
//      <loc> ( (unsigned int) TIM17_BDTR ) </loc>
//      <o.12..12> BKE
//    </check>
//  </item>
//  


// -------------------------------  Field Item: TIM17_BDTR_BKP  -----------------------------------
// SVD Line: 12050

//  <item> SFDITEM_FIELD__TIM17_BDTR_BKP
//    <name> BKP </name>
//    <rw> 
//    <i> [Bit 13] RW (@ 0x40014844) Break polarity </i>
//    <check> 
//      <loc> ( (unsigned int) TIM17_BDTR ) </loc>
//      <o.13..13> BKP
//    </check>
//  </item>
//  


// -------------------------------  Field Item: TIM17_BDTR_AOE  -----------------------------------
// SVD Line: 12056

//  <item> SFDITEM_FIELD__TIM17_BDTR_AOE
//    <name> AOE </name>
//    <rw> 
//    <i> [Bit 14] RW (@ 0x40014844) Automatic output enable </i>
//    <check> 
//      <loc> ( (unsigned int) TIM17_BDTR ) </loc>
//      <o.14..14> AOE
//    </check>
//  </item>
//  


// -------------------------------  Field Item: TIM17_BDTR_MOE  -----------------------------------
// SVD Line: 12062

//  <item> SFDITEM_FIELD__TIM17_BDTR_MOE
//    <name> MOE </name>
//    <rw> 
//    <i> [Bit 15] RW (@ 0x40014844) Main output enable </i>
//    <check> 
//      <loc> ( (unsigned int) TIM17_BDTR ) </loc>
//      <o.15..15> MOE
//    </check>
//  </item>
//  


// -------------------------------  Field Item: TIM17_BDTR_BKF  -----------------------------------
// SVD Line: 12068

//  <item> SFDITEM_FIELD__TIM17_BDTR_BKF
//    <name> BKF </name>
//    <rw> 
//    <i> [Bits 19..16] RW (@ 0x40014844) Break filter </i>
//    <edit> 
//      <loc> ( (unsigned char)((TIM17_BDTR >> 16) & 0xF), ((TIM17_BDTR = (TIM17_BDTR & ~(0xFUL << 16 )) | ((unsigned long)(Gui_u8:GuiVal & 0xF) << 16 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ------------------------------  Field Item: TIM17_BDTR_BKDSRM  ---------------------------------
// SVD Line: 12074

//  <item> SFDITEM_FIELD__TIM17_BDTR_BKDSRM
//    <name> BKDSRM </name>
//    <rw> 
//    <i> [Bit 26] RW (@ 0x40014844) Break Disarm </i>
//    <check> 
//      <loc> ( (unsigned int) TIM17_BDTR ) </loc>
//      <o.26..26> BKDSRM
//    </check>
//  </item>
//  


// ------------------------------  Field Item: TIM17_BDTR_BKBID  ----------------------------------
// SVD Line: 12080

//  <item> SFDITEM_FIELD__TIM17_BDTR_BKBID
//    <name> BKBID </name>
//    <rw> 
//    <i> [Bit 28] RW (@ 0x40014844) Break Bidirectional </i>
//    <check> 
//      <loc> ( (unsigned int) TIM17_BDTR ) </loc>
//      <o.28..28> BKBID
//    </check>
//  </item>
//  


// -------------------------------  Register RTree: TIM17_BDTR  -----------------------------------
// SVD Line: 12009

//  <rtree> SFDITEM_REG__TIM17_BDTR
//    <name> BDTR </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x40014844) break and dead-time register </i>
//    <loc> ( (unsigned int)((TIM17_BDTR >> 0) & 0xFFFFFFFF), ((TIM17_BDTR = (TIM17_BDTR & ~(0x140FFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0x140FFFFF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__TIM17_BDTR_DTG </item>
//    <item> SFDITEM_FIELD__TIM17_BDTR_LOCK </item>
//    <item> SFDITEM_FIELD__TIM17_BDTR_OSSI </item>
//    <item> SFDITEM_FIELD__TIM17_BDTR_OSSR </item>
//    <item> SFDITEM_FIELD__TIM17_BDTR_BKE </item>
//    <item> SFDITEM_FIELD__TIM17_BDTR_BKP </item>
//    <item> SFDITEM_FIELD__TIM17_BDTR_AOE </item>
//    <item> SFDITEM_FIELD__TIM17_BDTR_MOE </item>
//    <item> SFDITEM_FIELD__TIM17_BDTR_BKF </item>
//    <item> SFDITEM_FIELD__TIM17_BDTR_BKDSRM </item>
//    <item> SFDITEM_FIELD__TIM17_BDTR_BKBID </item>
//  </rtree>
//  


// ----------------------------  Register Item Address: TIM17_DCR  --------------------------------
// SVD Line: 12088

unsigned int TIM17_DCR __AT (0x40014848);



// --------------------------------  Field Item: TIM17_DCR_DBL  -----------------------------------
// SVD Line: 12097

//  <item> SFDITEM_FIELD__TIM17_DCR_DBL
//    <name> DBL </name>
//    <rw> 
//    <i> [Bits 12..8] RW (@ 0x40014848) DMA burst length </i>
//    <edit> 
//      <loc> ( (unsigned char)((TIM17_DCR >> 8) & 0x1F), ((TIM17_DCR = (TIM17_DCR & ~(0x1FUL << 8 )) | ((unsigned long)(Gui_u8:GuiVal & 0x1F) << 8 ) ) )) </loc>
//    </edit>
//  </item>
//  


// --------------------------------  Field Item: TIM17_DCR_DBA  -----------------------------------
// SVD Line: 12103

//  <item> SFDITEM_FIELD__TIM17_DCR_DBA
//    <name> DBA </name>
//    <rw> 
//    <i> [Bits 4..0] RW (@ 0x40014848) DMA base address </i>
//    <edit> 
//      <loc> ( (unsigned char)((TIM17_DCR >> 0) & 0x1F), ((TIM17_DCR = (TIM17_DCR & ~(0x1FUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0x1F) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// --------------------------------  Register RTree: TIM17_DCR  -----------------------------------
// SVD Line: 12088

//  <rtree> SFDITEM_REG__TIM17_DCR
//    <name> DCR </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x40014848) DMA control register </i>
//    <loc> ( (unsigned int)((TIM17_DCR >> 0) & 0xFFFFFFFF), ((TIM17_DCR = (TIM17_DCR & ~(0x1F1FUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0x1F1F) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__TIM17_DCR_DBL </item>
//    <item> SFDITEM_FIELD__TIM17_DCR_DBA </item>
//  </rtree>
//  


// ----------------------------  Register Item Address: TIM17_DMAR  -------------------------------
// SVD Line: 12111

unsigned int TIM17_DMAR __AT (0x4001484C);



// -------------------------------  Field Item: TIM17_DMAR_DMAB  ----------------------------------
// SVD Line: 12120

//  <item> SFDITEM_FIELD__TIM17_DMAR_DMAB
//    <name> DMAB </name>
//    <rw> 
//    <i> [Bits 15..0] RW (@ 0x4001484C) DMA register for burst  accesses </i>
//    <edit> 
//      <loc> ( (unsigned short)((TIM17_DMAR >> 0) & 0xFFFF), ((TIM17_DMAR = (TIM17_DMAR & ~(0xFFFFUL << 0 )) | ((unsigned long)(Gui_u16:GuiVal & 0xFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -------------------------------  Register RTree: TIM17_DMAR  -----------------------------------
// SVD Line: 12111

//  <rtree> SFDITEM_REG__TIM17_DMAR
//    <name> DMAR </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x4001484C) DMA address for full transfer </i>
//    <loc> ( (unsigned int)((TIM17_DMAR >> 0) & 0xFFFFFFFF), ((TIM17_DMAR = (TIM17_DMAR & ~(0xFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__TIM17_DMAR_DMAB </item>
//  </rtree>
//  


// ----------------------------  Register Item Address: TIM17_AF1  --------------------------------
// SVD Line: 12129

unsigned int TIM17_AF1 __AT (0x40014860);



// -------------------------------  Field Item: TIM17_AF1_BKINE  ----------------------------------
// SVD Line: 12138

//  <item> SFDITEM_FIELD__TIM17_AF1_BKINE
//    <name> BKINE </name>
//    <rw> 
//    <i> [Bit 0] RW (@ 0x40014860) BRK BKIN input enable </i>
//    <check> 
//      <loc> ( (unsigned int) TIM17_AF1 ) </loc>
//      <o.0..0> BKINE
//    </check>
//  </item>
//  


// ------------------------------  Field Item: TIM17_AF1_BKCMP1E  ---------------------------------
// SVD Line: 12144

//  <item> SFDITEM_FIELD__TIM17_AF1_BKCMP1E
//    <name> BKCMP1E </name>
//    <rw> 
//    <i> [Bit 1] RW (@ 0x40014860) BRK COMP1 enable </i>
//    <check> 
//      <loc> ( (unsigned int) TIM17_AF1 ) </loc>
//      <o.1..1> BKCMP1E
//    </check>
//  </item>
//  


// ------------------------------  Field Item: TIM17_AF1_BKCMP2E  ---------------------------------
// SVD Line: 12150

//  <item> SFDITEM_FIELD__TIM17_AF1_BKCMP2E
//    <name> BKCMP2E </name>
//    <rw> 
//    <i> [Bit 2] RW (@ 0x40014860) BRK COMP2 enable </i>
//    <check> 
//      <loc> ( (unsigned int) TIM17_AF1 ) </loc>
//      <o.2..2> BKCMP2E
//    </check>
//  </item>
//  


// -----------------------------  Field Item: TIM17_AF1_BKDFBK1E  ---------------------------------
// SVD Line: 12156

//  <item> SFDITEM_FIELD__TIM17_AF1_BKDFBK1E
//    <name> BKDFBK1E </name>
//    <rw> 
//    <i> [Bit 8] RW (@ 0x40014860) BRK DFSDM_BREAK1 enable </i>
//    <check> 
//      <loc> ( (unsigned int) TIM17_AF1 ) </loc>
//      <o.8..8> BKDFBK1E
//    </check>
//  </item>
//  


// -------------------------------  Field Item: TIM17_AF1_BKINP  ----------------------------------
// SVD Line: 12162

//  <item> SFDITEM_FIELD__TIM17_AF1_BKINP
//    <name> BKINP </name>
//    <rw> 
//    <i> [Bit 9] RW (@ 0x40014860) BRK BKIN input polarity </i>
//    <check> 
//      <loc> ( (unsigned int) TIM17_AF1 ) </loc>
//      <o.9..9> BKINP
//    </check>
//  </item>
//  


// ------------------------------  Field Item: TIM17_AF1_BKCMP1P  ---------------------------------
// SVD Line: 12168

//  <item> SFDITEM_FIELD__TIM17_AF1_BKCMP1P
//    <name> BKCMP1P </name>
//    <rw> 
//    <i> [Bit 10] RW (@ 0x40014860) BRK COMP1 input polarity </i>
//    <check> 
//      <loc> ( (unsigned int) TIM17_AF1 ) </loc>
//      <o.10..10> BKCMP1P
//    </check>
//  </item>
//  


// ------------------------------  Field Item: TIM17_AF1_BKCMP2P  ---------------------------------
// SVD Line: 12174

//  <item> SFDITEM_FIELD__TIM17_AF1_BKCMP2P
//    <name> BKCMP2P </name>
//    <rw> 
//    <i> [Bit 11] RW (@ 0x40014860) BRK COMP2 input polarit </i>
//    <check> 
//      <loc> ( (unsigned int) TIM17_AF1 ) </loc>
//      <o.11..11> BKCMP2P
//    </check>
//  </item>
//  


// --------------------------------  Register RTree: TIM17_AF1  -----------------------------------
// SVD Line: 12129

//  <rtree> SFDITEM_REG__TIM17_AF1
//    <name> AF1 </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x40014860) TIM17 option register 1 </i>
//    <loc> ( (unsigned int)((TIM17_AF1 >> 0) & 0xFFFFFFFF), ((TIM17_AF1 = (TIM17_AF1 & ~(0xF07UL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xF07) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__TIM17_AF1_BKINE </item>
//    <item> SFDITEM_FIELD__TIM17_AF1_BKCMP1E </item>
//    <item> SFDITEM_FIELD__TIM17_AF1_BKCMP2E </item>
//    <item> SFDITEM_FIELD__TIM17_AF1_BKDFBK1E </item>
//    <item> SFDITEM_FIELD__TIM17_AF1_BKINP </item>
//    <item> SFDITEM_FIELD__TIM17_AF1_BKCMP1P </item>
//    <item> SFDITEM_FIELD__TIM17_AF1_BKCMP2P </item>
//  </rtree>
//  


// ---------------------------  Register Item Address: TIM17_TISEL  -------------------------------
// SVD Line: 12182

unsigned int TIM17_TISEL __AT (0x40014868);



// -----------------------------  Field Item: TIM17_TISEL_TI1SEL  ---------------------------------
// SVD Line: 12191

//  <item> SFDITEM_FIELD__TIM17_TISEL_TI1SEL
//    <name> TI1SEL </name>
//    <rw> 
//    <i> [Bits 3..0] RW (@ 0x40014868) selects input </i>
//    <edit> 
//      <loc> ( (unsigned char)((TIM17_TISEL >> 0) & 0xF), ((TIM17_TISEL = (TIM17_TISEL & ~(0xFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -------------------------------  Register RTree: TIM17_TISEL  ----------------------------------
// SVD Line: 12182

//  <rtree> SFDITEM_REG__TIM17_TISEL
//    <name> TISEL </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x40014868) input selection register </i>
//    <loc> ( (unsigned int)((TIM17_TISEL >> 0) & 0xFFFFFFFF), ((TIM17_TISEL = (TIM17_TISEL & ~(0xFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__TIM17_TISEL_TI1SEL </item>
//  </rtree>
//  


// ---------------------------------  Peripheral View: TIM17  -------------------------------------
// SVD Line: 12201

//  <view> TIM17
//    <name> TIM17 </name>
//    <item> SFDITEM_REG__TIM17_CR1 </item>
//    <item> SFDITEM_REG__TIM17_CR2 </item>
//    <item> SFDITEM_REG__TIM17_DIER </item>
//    <item> SFDITEM_REG__TIM17_SR </item>
//    <item> SFDITEM_REG__TIM17_EGR </item>
//    <item> SFDITEM_REG__TIM17_CCMR1_Output </item>
//    <item> SFDITEM_REG__TIM17_CCMR1_Input </item>
//    <item> SFDITEM_REG__TIM17_CCER </item>
//    <item> SFDITEM_REG__TIM17_CNT </item>
//    <item> SFDITEM_REG__TIM17_PSC </item>
//    <item> SFDITEM_REG__TIM17_ARR </item>
//    <item> SFDITEM_REG__TIM17_RCR </item>
//    <item> SFDITEM_REG__TIM17_CCR1 </item>
//    <item> SFDITEM_REG__TIM17_BDTR </item>
//    <item> SFDITEM_REG__TIM17_DCR </item>
//    <item> SFDITEM_REG__TIM17_DMAR </item>
//    <item> SFDITEM_REG__TIM17_AF1 </item>
//    <item> SFDITEM_REG__TIM17_TISEL </item>
//  </view>
//  


// ----------------------------  Register Item Address: TIM15_CR1  --------------------------------
// SVD Line: 11568

unsigned int TIM15_CR1 __AT (0x40014000);



// --------------------------------  Field Item: TIM15_CR1_CEN  -----------------------------------
// SVD Line: 11577

//  <item> SFDITEM_FIELD__TIM15_CR1_CEN
//    <name> CEN </name>
//    <rw> 
//    <i> [Bit 0] RW (@ 0x40014000) Counter enable </i>
//    <check> 
//      <loc> ( (unsigned int) TIM15_CR1 ) </loc>
//      <o.0..0> CEN
//    </check>
//  </item>
//  


// -------------------------------  Field Item: TIM15_CR1_UDIS  -----------------------------------
// SVD Line: 11583

//  <item> SFDITEM_FIELD__TIM15_CR1_UDIS
//    <name> UDIS </name>
//    <rw> 
//    <i> [Bit 1] RW (@ 0x40014000) Update disable </i>
//    <check> 
//      <loc> ( (unsigned int) TIM15_CR1 ) </loc>
//      <o.1..1> UDIS
//    </check>
//  </item>
//  


// --------------------------------  Field Item: TIM15_CR1_URS  -----------------------------------
// SVD Line: 11589

//  <item> SFDITEM_FIELD__TIM15_CR1_URS
//    <name> URS </name>
//    <rw> 
//    <i> [Bit 2] RW (@ 0x40014000) Update request source </i>
//    <check> 
//      <loc> ( (unsigned int) TIM15_CR1 ) </loc>
//      <o.2..2> URS
//    </check>
//  </item>
//  


// --------------------------------  Field Item: TIM15_CR1_OPM  -----------------------------------
// SVD Line: 11595

//  <item> SFDITEM_FIELD__TIM15_CR1_OPM
//    <name> OPM </name>
//    <rw> 
//    <i> [Bit 3] RW (@ 0x40014000) One-pulse mode </i>
//    <check> 
//      <loc> ( (unsigned int) TIM15_CR1 ) </loc>
//      <o.3..3> OPM
//    </check>
//  </item>
//  


// -------------------------------  Field Item: TIM15_CR1_ARPE  -----------------------------------
// SVD Line: 11601

//  <item> SFDITEM_FIELD__TIM15_CR1_ARPE
//    <name> ARPE </name>
//    <rw> 
//    <i> [Bit 7] RW (@ 0x40014000) Auto-reload preload enable </i>
//    <check> 
//      <loc> ( (unsigned int) TIM15_CR1 ) </loc>
//      <o.7..7> ARPE
//    </check>
//  </item>
//  


// --------------------------------  Field Item: TIM15_CR1_CKD  -----------------------------------
// SVD Line: 11607

//  <item> SFDITEM_FIELD__TIM15_CR1_CKD
//    <name> CKD </name>
//    <rw> 
//    <i> [Bits 9..8] RW (@ 0x40014000) Clock division </i>
//    <edit> 
//      <loc> ( (unsigned char)((TIM15_CR1 >> 8) & 0x3), ((TIM15_CR1 = (TIM15_CR1 & ~(0x3UL << 8 )) | ((unsigned long)(Gui_u8:GuiVal & 0x3) << 8 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -----------------------------  Field Item: TIM15_CR1_UIFREMAP  ---------------------------------
// SVD Line: 11613

//  <item> SFDITEM_FIELD__TIM15_CR1_UIFREMAP
//    <name> UIFREMAP </name>
//    <rw> 
//    <i> [Bit 11] RW (@ 0x40014000) UIF status bit remapping </i>
//    <check> 
//      <loc> ( (unsigned int) TIM15_CR1 ) </loc>
//      <o.11..11> UIFREMAP
//    </check>
//  </item>
//  


// --------------------------------  Register RTree: TIM15_CR1  -----------------------------------
// SVD Line: 11568

//  <rtree> SFDITEM_REG__TIM15_CR1
//    <name> CR1 </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x40014000) control register 1 </i>
//    <loc> ( (unsigned int)((TIM15_CR1 >> 0) & 0xFFFFFFFF), ((TIM15_CR1 = (TIM15_CR1 & ~(0xB8FUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xB8F) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__TIM15_CR1_CEN </item>
//    <item> SFDITEM_FIELD__TIM15_CR1_UDIS </item>
//    <item> SFDITEM_FIELD__TIM15_CR1_URS </item>
//    <item> SFDITEM_FIELD__TIM15_CR1_OPM </item>
//    <item> SFDITEM_FIELD__TIM15_CR1_ARPE </item>
//    <item> SFDITEM_FIELD__TIM15_CR1_CKD </item>
//    <item> SFDITEM_FIELD__TIM15_CR1_UIFREMAP </item>
//  </rtree>
//  


// ----------------------------  Register Item Address: TIM15_CR2  --------------------------------
// SVD Line: 11621

unsigned int TIM15_CR2 __AT (0x40014004);



// -------------------------------  Field Item: TIM15_CR2_OIS1N  ----------------------------------
// SVD Line: 11630

//  <item> SFDITEM_FIELD__TIM15_CR2_OIS1N
//    <name> OIS1N </name>
//    <rw> 
//    <i> [Bit 9] RW (@ 0x40014004) Output Idle state 1 </i>
//    <check> 
//      <loc> ( (unsigned int) TIM15_CR2 ) </loc>
//      <o.9..9> OIS1N
//    </check>
//  </item>
//  


// -------------------------------  Field Item: TIM15_CR2_OIS1  -----------------------------------
// SVD Line: 11636

//  <item> SFDITEM_FIELD__TIM15_CR2_OIS1
//    <name> OIS1 </name>
//    <rw> 
//    <i> [Bit 8] RW (@ 0x40014004) Output Idle state 1 </i>
//    <check> 
//      <loc> ( (unsigned int) TIM15_CR2 ) </loc>
//      <o.8..8> OIS1
//    </check>
//  </item>
//  


// -------------------------------  Field Item: TIM15_CR2_CCDS  -----------------------------------
// SVD Line: 11642

//  <item> SFDITEM_FIELD__TIM15_CR2_CCDS
//    <name> CCDS </name>
//    <rw> 
//    <i> [Bit 3] RW (@ 0x40014004) Capture/compare DMA  selection </i>
//    <check> 
//      <loc> ( (unsigned int) TIM15_CR2 ) </loc>
//      <o.3..3> CCDS
//    </check>
//  </item>
//  


// -------------------------------  Field Item: TIM15_CR2_CCUS  -----------------------------------
// SVD Line: 11649

//  <item> SFDITEM_FIELD__TIM15_CR2_CCUS
//    <name> CCUS </name>
//    <rw> 
//    <i> [Bit 2] RW (@ 0x40014004) Capture/compare control update  selection </i>
//    <check> 
//      <loc> ( (unsigned int) TIM15_CR2 ) </loc>
//      <o.2..2> CCUS
//    </check>
//  </item>
//  


// -------------------------------  Field Item: TIM15_CR2_CCPC  -----------------------------------
// SVD Line: 11656

//  <item> SFDITEM_FIELD__TIM15_CR2_CCPC
//    <name> CCPC </name>
//    <rw> 
//    <i> [Bit 0] RW (@ 0x40014004) Capture/compare preloaded  control </i>
//    <check> 
//      <loc> ( (unsigned int) TIM15_CR2 ) </loc>
//      <o.0..0> CCPC
//    </check>
//  </item>
//  


// --------------------------------  Register RTree: TIM15_CR2  -----------------------------------
// SVD Line: 11621

//  <rtree> SFDITEM_REG__TIM15_CR2
//    <name> CR2 </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x40014004) control register 2 </i>
//    <loc> ( (unsigned int)((TIM15_CR2 >> 0) & 0xFFFFFFFF), ((TIM15_CR2 = (TIM15_CR2 & ~(0x30DUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0x30D) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__TIM15_CR2_OIS1N </item>
//    <item> SFDITEM_FIELD__TIM15_CR2_OIS1 </item>
//    <item> SFDITEM_FIELD__TIM15_CR2_CCDS </item>
//    <item> SFDITEM_FIELD__TIM15_CR2_CCUS </item>
//    <item> SFDITEM_FIELD__TIM15_CR2_CCPC </item>
//  </rtree>
//  


// ----------------------------  Register Item Address: TIM15_DIER  -------------------------------
// SVD Line: 11665

unsigned int TIM15_DIER __AT (0x4001400C);



// ------------------------------  Field Item: TIM15_DIER_COMDE  ----------------------------------
// SVD Line: 11674

//  <item> SFDITEM_FIELD__TIM15_DIER_COMDE
//    <name> COMDE </name>
//    <rw> 
//    <i> [Bit 13] RW (@ 0x4001400C) COM DMA request enable </i>
//    <check> 
//      <loc> ( (unsigned int) TIM15_DIER ) </loc>
//      <o.13..13> COMDE
//    </check>
//  </item>
//  


// ------------------------------  Field Item: TIM15_DIER_CC1DE  ----------------------------------
// SVD Line: 11680

//  <item> SFDITEM_FIELD__TIM15_DIER_CC1DE
//    <name> CC1DE </name>
//    <rw> 
//    <i> [Bit 9] RW (@ 0x4001400C) Capture/Compare 1 DMA request  enable </i>
//    <check> 
//      <loc> ( (unsigned int) TIM15_DIER ) </loc>
//      <o.9..9> CC1DE
//    </check>
//  </item>
//  


// -------------------------------  Field Item: TIM15_DIER_UDE  -----------------------------------
// SVD Line: 11687

//  <item> SFDITEM_FIELD__TIM15_DIER_UDE
//    <name> UDE </name>
//    <rw> 
//    <i> [Bit 8] RW (@ 0x4001400C) Update DMA request enable </i>
//    <check> 
//      <loc> ( (unsigned int) TIM15_DIER ) </loc>
//      <o.8..8> UDE
//    </check>
//  </item>
//  


// -------------------------------  Field Item: TIM15_DIER_BIE  -----------------------------------
// SVD Line: 11693

//  <item> SFDITEM_FIELD__TIM15_DIER_BIE
//    <name> BIE </name>
//    <rw> 
//    <i> [Bit 7] RW (@ 0x4001400C) Break interrupt enable </i>
//    <check> 
//      <loc> ( (unsigned int) TIM15_DIER ) </loc>
//      <o.7..7> BIE
//    </check>
//  </item>
//  


// ------------------------------  Field Item: TIM15_DIER_COMIE  ----------------------------------
// SVD Line: 11699

//  <item> SFDITEM_FIELD__TIM15_DIER_COMIE
//    <name> COMIE </name>
//    <rw> 
//    <i> [Bit 5] RW (@ 0x4001400C) COM interrupt enable </i>
//    <check> 
//      <loc> ( (unsigned int) TIM15_DIER ) </loc>
//      <o.5..5> COMIE
//    </check>
//  </item>
//  


// ------------------------------  Field Item: TIM15_DIER_CC1IE  ----------------------------------
// SVD Line: 11705

//  <item> SFDITEM_FIELD__TIM15_DIER_CC1IE
//    <name> CC1IE </name>
//    <rw> 
//    <i> [Bit 1] RW (@ 0x4001400C) Capture/Compare 1 interrupt  enable </i>
//    <check> 
//      <loc> ( (unsigned int) TIM15_DIER ) </loc>
//      <o.1..1> CC1IE
//    </check>
//  </item>
//  


// -------------------------------  Field Item: TIM15_DIER_UIE  -----------------------------------
// SVD Line: 11712

//  <item> SFDITEM_FIELD__TIM15_DIER_UIE
//    <name> UIE </name>
//    <rw> 
//    <i> [Bit 0] RW (@ 0x4001400C) Update interrupt enable </i>
//    <check> 
//      <loc> ( (unsigned int) TIM15_DIER ) </loc>
//      <o.0..0> UIE
//    </check>
//  </item>
//  


// -------------------------------  Register RTree: TIM15_DIER  -----------------------------------
// SVD Line: 11665

//  <rtree> SFDITEM_REG__TIM15_DIER
//    <name> DIER </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x4001400C) DMA/Interrupt enable register </i>
//    <loc> ( (unsigned int)((TIM15_DIER >> 0) & 0xFFFFFFFF), ((TIM15_DIER = (TIM15_DIER & ~(0x23A3UL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0x23A3) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__TIM15_DIER_COMDE </item>
//    <item> SFDITEM_FIELD__TIM15_DIER_CC1DE </item>
//    <item> SFDITEM_FIELD__TIM15_DIER_UDE </item>
//    <item> SFDITEM_FIELD__TIM15_DIER_BIE </item>
//    <item> SFDITEM_FIELD__TIM15_DIER_COMIE </item>
//    <item> SFDITEM_FIELD__TIM15_DIER_CC1IE </item>
//    <item> SFDITEM_FIELD__TIM15_DIER_UIE </item>
//  </rtree>
//  


// -----------------------------  Register Item Address: TIM15_SR  --------------------------------
// SVD Line: 11720

unsigned int TIM15_SR __AT (0x40014010);



// -------------------------------  Field Item: TIM15_SR_CC1OF  -----------------------------------
// SVD Line: 11729

//  <item> SFDITEM_FIELD__TIM15_SR_CC1OF
//    <name> CC1OF </name>
//    <rw> 
//    <i> [Bit 9] RW (@ 0x40014010) Capture/Compare 1 overcapture  flag </i>
//    <check> 
//      <loc> ( (unsigned int) TIM15_SR ) </loc>
//      <o.9..9> CC1OF
//    </check>
//  </item>
//  


// --------------------------------  Field Item: TIM15_SR_BIF  ------------------------------------
// SVD Line: 11736

//  <item> SFDITEM_FIELD__TIM15_SR_BIF
//    <name> BIF </name>
//    <rw> 
//    <i> [Bit 7] RW (@ 0x40014010) Break interrupt flag </i>
//    <check> 
//      <loc> ( (unsigned int) TIM15_SR ) </loc>
//      <o.7..7> BIF
//    </check>
//  </item>
//  


// -------------------------------  Field Item: TIM15_SR_COMIF  -----------------------------------
// SVD Line: 11742

//  <item> SFDITEM_FIELD__TIM15_SR_COMIF
//    <name> COMIF </name>
//    <rw> 
//    <i> [Bit 5] RW (@ 0x40014010) COM interrupt flag </i>
//    <check> 
//      <loc> ( (unsigned int) TIM15_SR ) </loc>
//      <o.5..5> COMIF
//    </check>
//  </item>
//  


// -------------------------------  Field Item: TIM15_SR_CC1IF  -----------------------------------
// SVD Line: 11748

//  <item> SFDITEM_FIELD__TIM15_SR_CC1IF
//    <name> CC1IF </name>
//    <rw> 
//    <i> [Bit 1] RW (@ 0x40014010) Capture/compare 1 interrupt  flag </i>
//    <check> 
//      <loc> ( (unsigned int) TIM15_SR ) </loc>
//      <o.1..1> CC1IF
//    </check>
//  </item>
//  


// --------------------------------  Field Item: TIM15_SR_UIF  ------------------------------------
// SVD Line: 11755

//  <item> SFDITEM_FIELD__TIM15_SR_UIF
//    <name> UIF </name>
//    <rw> 
//    <i> [Bit 0] RW (@ 0x40014010) Update interrupt flag </i>
//    <check> 
//      <loc> ( (unsigned int) TIM15_SR ) </loc>
//      <o.0..0> UIF
//    </check>
//  </item>
//  


// --------------------------------  Register RTree: TIM15_SR  ------------------------------------
// SVD Line: 11720

//  <rtree> SFDITEM_REG__TIM15_SR
//    <name> SR </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x40014010) status register </i>
//    <loc> ( (unsigned int)((TIM15_SR >> 0) & 0xFFFFFFFF), ((TIM15_SR = (TIM15_SR & ~(0x2A3UL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0x2A3) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__TIM15_SR_CC1OF </item>
//    <item> SFDITEM_FIELD__TIM15_SR_BIF </item>
//    <item> SFDITEM_FIELD__TIM15_SR_COMIF </item>
//    <item> SFDITEM_FIELD__TIM15_SR_CC1IF </item>
//    <item> SFDITEM_FIELD__TIM15_SR_UIF </item>
//  </rtree>
//  


// ----------------------------  Register Item Address: TIM15_EGR  --------------------------------
// SVD Line: 11763

unsigned int TIM15_EGR __AT (0x40014014);



// --------------------------------  Field Item: TIM15_EGR_BG  ------------------------------------
// SVD Line: 11772

//  <item> SFDITEM_FIELD__TIM15_EGR_BG
//    <name> BG </name>
//    <w> 
//    <i> [Bit 7] WO (@ 0x40014014) Break generation </i>
//    <check> 
//      <loc> ( (unsigned int) TIM15_EGR ) </loc>
//      <o.7..7> BG
//    </check>
//  </item>
//  


// -------------------------------  Field Item: TIM15_EGR_COMG  -----------------------------------
// SVD Line: 11778

//  <item> SFDITEM_FIELD__TIM15_EGR_COMG
//    <name> COMG </name>
//    <w> 
//    <i> [Bit 5] WO (@ 0x40014014) Capture/Compare control update  generation </i>
//    <check> 
//      <loc> ( (unsigned int) TIM15_EGR ) </loc>
//      <o.5..5> COMG
//    </check>
//  </item>
//  


// -------------------------------  Field Item: TIM15_EGR_CC1G  -----------------------------------
// SVD Line: 11785

//  <item> SFDITEM_FIELD__TIM15_EGR_CC1G
//    <name> CC1G </name>
//    <w> 
//    <i> [Bit 1] WO (@ 0x40014014) Capture/compare 1  generation </i>
//    <check> 
//      <loc> ( (unsigned int) TIM15_EGR ) </loc>
//      <o.1..1> CC1G
//    </check>
//  </item>
//  


// --------------------------------  Field Item: TIM15_EGR_UG  ------------------------------------
// SVD Line: 11792

//  <item> SFDITEM_FIELD__TIM15_EGR_UG
//    <name> UG </name>
//    <w> 
//    <i> [Bit 0] WO (@ 0x40014014) Update generation </i>
//    <check> 
//      <loc> ( (unsigned int) TIM15_EGR ) </loc>
//      <o.0..0> UG
//    </check>
//  </item>
//  


// --------------------------------  Register RTree: TIM15_EGR  -----------------------------------
// SVD Line: 11763

//  <rtree> SFDITEM_REG__TIM15_EGR
//    <name> EGR </name>
//    <w> 
//    <i> [Bits 31..0] WO (@ 0x40014014) event generation register </i>
//    <loc> ( (unsigned int)((TIM15_EGR >> 0) & 0xFFFFFFFF), ((TIM15_EGR = (TIM15_EGR & ~(0xA3UL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xA3) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__TIM15_EGR_BG </item>
//    <item> SFDITEM_FIELD__TIM15_EGR_COMG </item>
//    <item> SFDITEM_FIELD__TIM15_EGR_CC1G </item>
//    <item> SFDITEM_FIELD__TIM15_EGR_UG </item>
//  </rtree>
//  


// ------------------------  Register Item Address: TIM15_CCMR1_Output  ---------------------------
// SVD Line: 11800

unsigned int TIM15_CCMR1_Output __AT (0x40014018);



// --------------------------  Field Item: TIM15_CCMR1_Output_OC1M_2  -----------------------------
// SVD Line: 11810

//  <item> SFDITEM_FIELD__TIM15_CCMR1_Output_OC1M_2
//    <name> OC1M_2 </name>
//    <rw> 
//    <i> [Bit 16] RW (@ 0x40014018) Output Compare 1 mode </i>
//    <check> 
//      <loc> ( (unsigned int) TIM15_CCMR1_Output ) </loc>
//      <o.16..16> OC1M_2
//    </check>
//  </item>
//  


// ---------------------------  Field Item: TIM15_CCMR1_Output_OC1M  ------------------------------
// SVD Line: 11816

//  <item> SFDITEM_FIELD__TIM15_CCMR1_Output_OC1M
//    <name> OC1M </name>
//    <rw> 
//    <i> [Bits 6..4] RW (@ 0x40014018) Output Compare 1 mode </i>
//    <edit> 
//      <loc> ( (unsigned char)((TIM15_CCMR1_Output >> 4) & 0x7), ((TIM15_CCMR1_Output = (TIM15_CCMR1_Output & ~(0x7UL << 4 )) | ((unsigned long)(Gui_u8:GuiVal & 0x7) << 4 ) ) )) </loc>
//    </edit>
//  </item>
//  


// --------------------------  Field Item: TIM15_CCMR1_Output_OC1PE  ------------------------------
// SVD Line: 11822

//  <item> SFDITEM_FIELD__TIM15_CCMR1_Output_OC1PE
//    <name> OC1PE </name>
//    <rw> 
//    <i> [Bit 3] RW (@ 0x40014018) Output Compare 1 preload  enable </i>
//    <check> 
//      <loc> ( (unsigned int) TIM15_CCMR1_Output ) </loc>
//      <o.3..3> OC1PE
//    </check>
//  </item>
//  


// --------------------------  Field Item: TIM15_CCMR1_Output_OC1FE  ------------------------------
// SVD Line: 11829

//  <item> SFDITEM_FIELD__TIM15_CCMR1_Output_OC1FE
//    <name> OC1FE </name>
//    <rw> 
//    <i> [Bit 2] RW (@ 0x40014018) Output Compare 1 fast  enable </i>
//    <check> 
//      <loc> ( (unsigned int) TIM15_CCMR1_Output ) </loc>
//      <o.2..2> OC1FE
//    </check>
//  </item>
//  


// ---------------------------  Field Item: TIM15_CCMR1_Output_CC1S  ------------------------------
// SVD Line: 11836

//  <item> SFDITEM_FIELD__TIM15_CCMR1_Output_CC1S
//    <name> CC1S </name>
//    <rw> 
//    <i> [Bits 1..0] RW (@ 0x40014018) Capture/Compare 1  selection </i>
//    <edit> 
//      <loc> ( (unsigned char)((TIM15_CCMR1_Output >> 0) & 0x3), ((TIM15_CCMR1_Output = (TIM15_CCMR1_Output & ~(0x3UL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0x3) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ---------------------------  Register RTree: TIM15_CCMR1_Output  -------------------------------
// SVD Line: 11800

//  <rtree> SFDITEM_REG__TIM15_CCMR1_Output
//    <name> CCMR1_Output </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x40014018) capture/compare mode register (output  mode) </i>
//    <loc> ( (unsigned int)((TIM15_CCMR1_Output >> 0) & 0xFFFFFFFF), ((TIM15_CCMR1_Output = (TIM15_CCMR1_Output & ~(0x1007FUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0x1007F) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__TIM15_CCMR1_Output_OC1M_2 </item>
//    <item> SFDITEM_FIELD__TIM15_CCMR1_Output_OC1M </item>
//    <item> SFDITEM_FIELD__TIM15_CCMR1_Output_OC1PE </item>
//    <item> SFDITEM_FIELD__TIM15_CCMR1_Output_OC1FE </item>
//    <item> SFDITEM_FIELD__TIM15_CCMR1_Output_CC1S </item>
//  </rtree>
//  


// ------------------------  Register Item Address: TIM15_CCMR1_Input  ----------------------------
// SVD Line: 11845

unsigned int TIM15_CCMR1_Input __AT (0x40014018);



// ---------------------------  Field Item: TIM15_CCMR1_Input_IC1F  -------------------------------
// SVD Line: 11856

//  <item> SFDITEM_FIELD__TIM15_CCMR1_Input_IC1F
//    <name> IC1F </name>
//    <rw> 
//    <i> [Bits 7..4] RW (@ 0x40014018) Input capture 1 filter </i>
//    <edit> 
//      <loc> ( (unsigned char)((TIM15_CCMR1_Input >> 4) & 0xF), ((TIM15_CCMR1_Input = (TIM15_CCMR1_Input & ~(0xFUL << 4 )) | ((unsigned long)(Gui_u8:GuiVal & 0xF) << 4 ) ) )) </loc>
//    </edit>
//  </item>
//  


// --------------------------  Field Item: TIM15_CCMR1_Input_IC1PSC  ------------------------------
// SVD Line: 11862

//  <item> SFDITEM_FIELD__TIM15_CCMR1_Input_IC1PSC
//    <name> IC1PSC </name>
//    <rw> 
//    <i> [Bits 3..2] RW (@ 0x40014018) Input capture 1 prescaler </i>
//    <edit> 
//      <loc> ( (unsigned char)((TIM15_CCMR1_Input >> 2) & 0x3), ((TIM15_CCMR1_Input = (TIM15_CCMR1_Input & ~(0x3UL << 2 )) | ((unsigned long)(Gui_u8:GuiVal & 0x3) << 2 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ---------------------------  Field Item: TIM15_CCMR1_Input_CC1S  -------------------------------
// SVD Line: 11868

//  <item> SFDITEM_FIELD__TIM15_CCMR1_Input_CC1S
//    <name> CC1S </name>
//    <rw> 
//    <i> [Bits 1..0] RW (@ 0x40014018) Capture/Compare 1  selection </i>
//    <edit> 
//      <loc> ( (unsigned char)((TIM15_CCMR1_Input >> 0) & 0x3), ((TIM15_CCMR1_Input = (TIM15_CCMR1_Input & ~(0x3UL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0x3) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ----------------------------  Register RTree: TIM15_CCMR1_Input  -------------------------------
// SVD Line: 11845

//  <rtree> SFDITEM_REG__TIM15_CCMR1_Input
//    <name> CCMR1_Input </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x40014018) capture/compare mode register 1 (input  mode) </i>
//    <loc> ( (unsigned int)((TIM15_CCMR1_Input >> 0) & 0xFFFFFFFF), ((TIM15_CCMR1_Input = (TIM15_CCMR1_Input & ~(0xFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__TIM15_CCMR1_Input_IC1F </item>
//    <item> SFDITEM_FIELD__TIM15_CCMR1_Input_IC1PSC </item>
//    <item> SFDITEM_FIELD__TIM15_CCMR1_Input_CC1S </item>
//  </rtree>
//  


// ----------------------------  Register Item Address: TIM15_CCER  -------------------------------
// SVD Line: 11877

unsigned int TIM15_CCER __AT (0x40014020);



// ------------------------------  Field Item: TIM15_CCER_CC1NP  ----------------------------------
// SVD Line: 11887

//  <item> SFDITEM_FIELD__TIM15_CCER_CC1NP
//    <name> CC1NP </name>
//    <rw> 
//    <i> [Bit 3] RW (@ 0x40014020) Capture/Compare 1 output  Polarity </i>
//    <check> 
//      <loc> ( (unsigned int) TIM15_CCER ) </loc>
//      <o.3..3> CC1NP
//    </check>
//  </item>
//  


// ------------------------------  Field Item: TIM15_CCER_CC1NE  ----------------------------------
// SVD Line: 11894

//  <item> SFDITEM_FIELD__TIM15_CCER_CC1NE
//    <name> CC1NE </name>
//    <rw> 
//    <i> [Bit 2] RW (@ 0x40014020) Capture/Compare 1 complementary output  enable </i>
//    <check> 
//      <loc> ( (unsigned int) TIM15_CCER ) </loc>
//      <o.2..2> CC1NE
//    </check>
//  </item>
//  


// -------------------------------  Field Item: TIM15_CCER_CC1P  ----------------------------------
// SVD Line: 11901

//  <item> SFDITEM_FIELD__TIM15_CCER_CC1P
//    <name> CC1P </name>
//    <rw> 
//    <i> [Bit 1] RW (@ 0x40014020) Capture/Compare 1 output  Polarity </i>
//    <check> 
//      <loc> ( (unsigned int) TIM15_CCER ) </loc>
//      <o.1..1> CC1P
//    </check>
//  </item>
//  


// -------------------------------  Field Item: TIM15_CCER_CC1E  ----------------------------------
// SVD Line: 11908

//  <item> SFDITEM_FIELD__TIM15_CCER_CC1E
//    <name> CC1E </name>
//    <rw> 
//    <i> [Bit 0] RW (@ 0x40014020) Capture/Compare 1 output  enable </i>
//    <check> 
//      <loc> ( (unsigned int) TIM15_CCER ) </loc>
//      <o.0..0> CC1E
//    </check>
//  </item>
//  


// -------------------------------  Register RTree: TIM15_CCER  -----------------------------------
// SVD Line: 11877

//  <rtree> SFDITEM_REG__TIM15_CCER
//    <name> CCER </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x40014020) capture/compare enable  register </i>
//    <loc> ( (unsigned int)((TIM15_CCER >> 0) & 0xFFFFFFFF), ((TIM15_CCER = (TIM15_CCER & ~(0xFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__TIM15_CCER_CC1NP </item>
//    <item> SFDITEM_FIELD__TIM15_CCER_CC1NE </item>
//    <item> SFDITEM_FIELD__TIM15_CCER_CC1P </item>
//    <item> SFDITEM_FIELD__TIM15_CCER_CC1E </item>
//  </rtree>
//  


// ----------------------------  Register Item Address: TIM15_CNT  --------------------------------
// SVD Line: 11917

unsigned int TIM15_CNT __AT (0x40014024);



// --------------------------------  Field Item: TIM15_CNT_CNT  -----------------------------------
// SVD Line: 11925

//  <item> SFDITEM_FIELD__TIM15_CNT_CNT
//    <name> CNT </name>
//    <rw> 
//    <i> [Bits 15..0] RW (@ 0x40014024) counter value </i>
//    <edit> 
//      <loc> ( (unsigned short)((TIM15_CNT >> 0) & 0xFFFF), ((TIM15_CNT = (TIM15_CNT & ~(0xFFFFUL << 0 )) | ((unsigned long)(Gui_u16:GuiVal & 0xFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ------------------------------  Field Item: TIM15_CNT_UIFCPY  ----------------------------------
// SVD Line: 11932

//  <item> SFDITEM_FIELD__TIM15_CNT_UIFCPY
//    <name> UIFCPY </name>
//    <r> 
//    <i> [Bit 31] RO (@ 0x40014024) UIF Copy </i>
//    <check> 
//      <loc> ( (unsigned int) TIM15_CNT ) </loc>
//      <o.31..31> UIFCPY
//    </check>
//  </item>
//  


// --------------------------------  Register RTree: TIM15_CNT  -----------------------------------
// SVD Line: 11917

//  <rtree> SFDITEM_REG__TIM15_CNT
//    <name> CNT </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x40014024) counter </i>
//    <loc> ( (unsigned int)((TIM15_CNT >> 0) & 0xFFFFFFFF), ((TIM15_CNT = (TIM15_CNT & ~(0xFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__TIM15_CNT_CNT </item>
//    <item> SFDITEM_FIELD__TIM15_CNT_UIFCPY </item>
//  </rtree>
//  


// ----------------------------  Register Item Address: TIM15_PSC  --------------------------------
// SVD Line: 11941

unsigned int TIM15_PSC __AT (0x40014028);



// --------------------------------  Field Item: TIM15_PSC_PSC  -----------------------------------
// SVD Line: 11950

//  <item> SFDITEM_FIELD__TIM15_PSC_PSC
//    <name> PSC </name>
//    <rw> 
//    <i> [Bits 15..0] RW (@ 0x40014028) Prescaler value </i>
//    <edit> 
//      <loc> ( (unsigned short)((TIM15_PSC >> 0) & 0xFFFF), ((TIM15_PSC = (TIM15_PSC & ~(0xFFFFUL << 0 )) | ((unsigned long)(Gui_u16:GuiVal & 0xFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// --------------------------------  Register RTree: TIM15_PSC  -----------------------------------
// SVD Line: 11941

//  <rtree> SFDITEM_REG__TIM15_PSC
//    <name> PSC </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x40014028) prescaler </i>
//    <loc> ( (unsigned int)((TIM15_PSC >> 0) & 0xFFFFFFFF), ((TIM15_PSC = (TIM15_PSC & ~(0xFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__TIM15_PSC_PSC </item>
//  </rtree>
//  


// ----------------------------  Register Item Address: TIM15_ARR  --------------------------------
// SVD Line: 11958

unsigned int TIM15_ARR __AT (0x4001402C);



// --------------------------------  Field Item: TIM15_ARR_ARR  -----------------------------------
// SVD Line: 11967

//  <item> SFDITEM_FIELD__TIM15_ARR_ARR
//    <name> ARR </name>
//    <rw> 
//    <i> [Bits 15..0] RW (@ 0x4001402C) Auto-reload value </i>
//    <edit> 
//      <loc> ( (unsigned short)((TIM15_ARR >> 0) & 0xFFFF), ((TIM15_ARR = (TIM15_ARR & ~(0xFFFFUL << 0 )) | ((unsigned long)(Gui_u16:GuiVal & 0xFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// --------------------------------  Register RTree: TIM15_ARR  -----------------------------------
// SVD Line: 11958

//  <rtree> SFDITEM_REG__TIM15_ARR
//    <name> ARR </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x4001402C) auto-reload register </i>
//    <loc> ( (unsigned int)((TIM15_ARR >> 0) & 0xFFFFFFFF), ((TIM15_ARR = (TIM15_ARR & ~(0xFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__TIM15_ARR_ARR </item>
//  </rtree>
//  


// ----------------------------  Register Item Address: TIM15_RCR  --------------------------------
// SVD Line: 11975

unsigned int TIM15_RCR __AT (0x40014030);



// --------------------------------  Field Item: TIM15_RCR_REP  -----------------------------------
// SVD Line: 11984

//  <item> SFDITEM_FIELD__TIM15_RCR_REP
//    <name> REP </name>
//    <rw> 
//    <i> [Bits 7..0] RW (@ 0x40014030) Repetition counter value </i>
//    <edit> 
//      <loc> ( (unsigned char)((TIM15_RCR >> 0) & 0xFF), ((TIM15_RCR = (TIM15_RCR & ~(0xFFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// --------------------------------  Register RTree: TIM15_RCR  -----------------------------------
// SVD Line: 11975

//  <rtree> SFDITEM_REG__TIM15_RCR
//    <name> RCR </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x40014030) repetition counter register </i>
//    <loc> ( (unsigned int)((TIM15_RCR >> 0) & 0xFFFFFFFF), ((TIM15_RCR = (TIM15_RCR & ~(0xFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__TIM15_RCR_REP </item>
//  </rtree>
//  


// ----------------------------  Register Item Address: TIM15_CCR1  -------------------------------
// SVD Line: 11992

unsigned int TIM15_CCR1 __AT (0x40014034);



// -------------------------------  Field Item: TIM15_CCR1_CCR1  ----------------------------------
// SVD Line: 12001

//  <item> SFDITEM_FIELD__TIM15_CCR1_CCR1
//    <name> CCR1 </name>
//    <rw> 
//    <i> [Bits 15..0] RW (@ 0x40014034) Capture/Compare 1 value </i>
//    <edit> 
//      <loc> ( (unsigned short)((TIM15_CCR1 >> 0) & 0xFFFF), ((TIM15_CCR1 = (TIM15_CCR1 & ~(0xFFFFUL << 0 )) | ((unsigned long)(Gui_u16:GuiVal & 0xFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -------------------------------  Register RTree: TIM15_CCR1  -----------------------------------
// SVD Line: 11992

//  <rtree> SFDITEM_REG__TIM15_CCR1
//    <name> CCR1 </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x40014034) capture/compare register 1 </i>
//    <loc> ( (unsigned int)((TIM15_CCR1 >> 0) & 0xFFFFFFFF), ((TIM15_CCR1 = (TIM15_CCR1 & ~(0xFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__TIM15_CCR1_CCR1 </item>
//  </rtree>
//  


// ----------------------------  Register Item Address: TIM15_BDTR  -------------------------------
// SVD Line: 12009

unsigned int TIM15_BDTR __AT (0x40014044);



// -------------------------------  Field Item: TIM15_BDTR_DTG  -----------------------------------
// SVD Line: 12018

//  <item> SFDITEM_FIELD__TIM15_BDTR_DTG
//    <name> DTG </name>
//    <rw> 
//    <i> [Bits 7..0] RW (@ 0x40014044) Dead-time generator setup </i>
//    <edit> 
//      <loc> ( (unsigned char)((TIM15_BDTR >> 0) & 0xFF), ((TIM15_BDTR = (TIM15_BDTR & ~(0xFFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -------------------------------  Field Item: TIM15_BDTR_LOCK  ----------------------------------
// SVD Line: 12024

//  <item> SFDITEM_FIELD__TIM15_BDTR_LOCK
//    <name> LOCK </name>
//    <rw> 
//    <i> [Bits 9..8] RW (@ 0x40014044) Lock configuration </i>
//    <edit> 
//      <loc> ( (unsigned char)((TIM15_BDTR >> 8) & 0x3), ((TIM15_BDTR = (TIM15_BDTR & ~(0x3UL << 8 )) | ((unsigned long)(Gui_u8:GuiVal & 0x3) << 8 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -------------------------------  Field Item: TIM15_BDTR_OSSI  ----------------------------------
// SVD Line: 12030

//  <item> SFDITEM_FIELD__TIM15_BDTR_OSSI
//    <name> OSSI </name>
//    <rw> 
//    <i> [Bit 10] RW (@ 0x40014044) Off-state selection for Idle  mode </i>
//    <check> 
//      <loc> ( (unsigned int) TIM15_BDTR ) </loc>
//      <o.10..10> OSSI
//    </check>
//  </item>
//  


// -------------------------------  Field Item: TIM15_BDTR_OSSR  ----------------------------------
// SVD Line: 12037

//  <item> SFDITEM_FIELD__TIM15_BDTR_OSSR
//    <name> OSSR </name>
//    <rw> 
//    <i> [Bit 11] RW (@ 0x40014044) Off-state selection for Run  mode </i>
//    <check> 
//      <loc> ( (unsigned int) TIM15_BDTR ) </loc>
//      <o.11..11> OSSR
//    </check>
//  </item>
//  


// -------------------------------  Field Item: TIM15_BDTR_BKE  -----------------------------------
// SVD Line: 12044

//  <item> SFDITEM_FIELD__TIM15_BDTR_BKE
//    <name> BKE </name>
//    <rw> 
//    <i> [Bit 12] RW (@ 0x40014044) Break enable </i>
//    <check> 
//      <loc> ( (unsigned int) TIM15_BDTR ) </loc>
//      <o.12..12> BKE
//    </check>
//  </item>
//  


// -------------------------------  Field Item: TIM15_BDTR_BKP  -----------------------------------
// SVD Line: 12050

//  <item> SFDITEM_FIELD__TIM15_BDTR_BKP
//    <name> BKP </name>
//    <rw> 
//    <i> [Bit 13] RW (@ 0x40014044) Break polarity </i>
//    <check> 
//      <loc> ( (unsigned int) TIM15_BDTR ) </loc>
//      <o.13..13> BKP
//    </check>
//  </item>
//  


// -------------------------------  Field Item: TIM15_BDTR_AOE  -----------------------------------
// SVD Line: 12056

//  <item> SFDITEM_FIELD__TIM15_BDTR_AOE
//    <name> AOE </name>
//    <rw> 
//    <i> [Bit 14] RW (@ 0x40014044) Automatic output enable </i>
//    <check> 
//      <loc> ( (unsigned int) TIM15_BDTR ) </loc>
//      <o.14..14> AOE
//    </check>
//  </item>
//  


// -------------------------------  Field Item: TIM15_BDTR_MOE  -----------------------------------
// SVD Line: 12062

//  <item> SFDITEM_FIELD__TIM15_BDTR_MOE
//    <name> MOE </name>
//    <rw> 
//    <i> [Bit 15] RW (@ 0x40014044) Main output enable </i>
//    <check> 
//      <loc> ( (unsigned int) TIM15_BDTR ) </loc>
//      <o.15..15> MOE
//    </check>
//  </item>
//  


// -------------------------------  Field Item: TIM15_BDTR_BKF  -----------------------------------
// SVD Line: 12068

//  <item> SFDITEM_FIELD__TIM15_BDTR_BKF
//    <name> BKF </name>
//    <rw> 
//    <i> [Bits 19..16] RW (@ 0x40014044) Break filter </i>
//    <edit> 
//      <loc> ( (unsigned char)((TIM15_BDTR >> 16) & 0xF), ((TIM15_BDTR = (TIM15_BDTR & ~(0xFUL << 16 )) | ((unsigned long)(Gui_u8:GuiVal & 0xF) << 16 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ------------------------------  Field Item: TIM15_BDTR_BKDSRM  ---------------------------------
// SVD Line: 12074

//  <item> SFDITEM_FIELD__TIM15_BDTR_BKDSRM
//    <name> BKDSRM </name>
//    <rw> 
//    <i> [Bit 26] RW (@ 0x40014044) Break Disarm </i>
//    <check> 
//      <loc> ( (unsigned int) TIM15_BDTR ) </loc>
//      <o.26..26> BKDSRM
//    </check>
//  </item>
//  


// ------------------------------  Field Item: TIM15_BDTR_BKBID  ----------------------------------
// SVD Line: 12080

//  <item> SFDITEM_FIELD__TIM15_BDTR_BKBID
//    <name> BKBID </name>
//    <rw> 
//    <i> [Bit 28] RW (@ 0x40014044) Break Bidirectional </i>
//    <check> 
//      <loc> ( (unsigned int) TIM15_BDTR ) </loc>
//      <o.28..28> BKBID
//    </check>
//  </item>
//  


// -------------------------------  Register RTree: TIM15_BDTR  -----------------------------------
// SVD Line: 12009

//  <rtree> SFDITEM_REG__TIM15_BDTR
//    <name> BDTR </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x40014044) break and dead-time register </i>
//    <loc> ( (unsigned int)((TIM15_BDTR >> 0) & 0xFFFFFFFF), ((TIM15_BDTR = (TIM15_BDTR & ~(0x140FFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0x140FFFFF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__TIM15_BDTR_DTG </item>
//    <item> SFDITEM_FIELD__TIM15_BDTR_LOCK </item>
//    <item> SFDITEM_FIELD__TIM15_BDTR_OSSI </item>
//    <item> SFDITEM_FIELD__TIM15_BDTR_OSSR </item>
//    <item> SFDITEM_FIELD__TIM15_BDTR_BKE </item>
//    <item> SFDITEM_FIELD__TIM15_BDTR_BKP </item>
//    <item> SFDITEM_FIELD__TIM15_BDTR_AOE </item>
//    <item> SFDITEM_FIELD__TIM15_BDTR_MOE </item>
//    <item> SFDITEM_FIELD__TIM15_BDTR_BKF </item>
//    <item> SFDITEM_FIELD__TIM15_BDTR_BKDSRM </item>
//    <item> SFDITEM_FIELD__TIM15_BDTR_BKBID </item>
//  </rtree>
//  


// ----------------------------  Register Item Address: TIM15_DCR  --------------------------------
// SVD Line: 12088

unsigned int TIM15_DCR __AT (0x40014048);



// --------------------------------  Field Item: TIM15_DCR_DBL  -----------------------------------
// SVD Line: 12097

//  <item> SFDITEM_FIELD__TIM15_DCR_DBL
//    <name> DBL </name>
//    <rw> 
//    <i> [Bits 12..8] RW (@ 0x40014048) DMA burst length </i>
//    <edit> 
//      <loc> ( (unsigned char)((TIM15_DCR >> 8) & 0x1F), ((TIM15_DCR = (TIM15_DCR & ~(0x1FUL << 8 )) | ((unsigned long)(Gui_u8:GuiVal & 0x1F) << 8 ) ) )) </loc>
//    </edit>
//  </item>
//  


// --------------------------------  Field Item: TIM15_DCR_DBA  -----------------------------------
// SVD Line: 12103

//  <item> SFDITEM_FIELD__TIM15_DCR_DBA
//    <name> DBA </name>
//    <rw> 
//    <i> [Bits 4..0] RW (@ 0x40014048) DMA base address </i>
//    <edit> 
//      <loc> ( (unsigned char)((TIM15_DCR >> 0) & 0x1F), ((TIM15_DCR = (TIM15_DCR & ~(0x1FUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0x1F) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// --------------------------------  Register RTree: TIM15_DCR  -----------------------------------
// SVD Line: 12088

//  <rtree> SFDITEM_REG__TIM15_DCR
//    <name> DCR </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x40014048) DMA control register </i>
//    <loc> ( (unsigned int)((TIM15_DCR >> 0) & 0xFFFFFFFF), ((TIM15_DCR = (TIM15_DCR & ~(0x1F1FUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0x1F1F) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__TIM15_DCR_DBL </item>
//    <item> SFDITEM_FIELD__TIM15_DCR_DBA </item>
//  </rtree>
//  


// ----------------------------  Register Item Address: TIM15_DMAR  -------------------------------
// SVD Line: 12111

unsigned int TIM15_DMAR __AT (0x4001404C);



// -------------------------------  Field Item: TIM15_DMAR_DMAB  ----------------------------------
// SVD Line: 12120

//  <item> SFDITEM_FIELD__TIM15_DMAR_DMAB
//    <name> DMAB </name>
//    <rw> 
//    <i> [Bits 15..0] RW (@ 0x4001404C) DMA register for burst  accesses </i>
//    <edit> 
//      <loc> ( (unsigned short)((TIM15_DMAR >> 0) & 0xFFFF), ((TIM15_DMAR = (TIM15_DMAR & ~(0xFFFFUL << 0 )) | ((unsigned long)(Gui_u16:GuiVal & 0xFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -------------------------------  Register RTree: TIM15_DMAR  -----------------------------------
// SVD Line: 12111

//  <rtree> SFDITEM_REG__TIM15_DMAR
//    <name> DMAR </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x4001404C) DMA address for full transfer </i>
//    <loc> ( (unsigned int)((TIM15_DMAR >> 0) & 0xFFFFFFFF), ((TIM15_DMAR = (TIM15_DMAR & ~(0xFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__TIM15_DMAR_DMAB </item>
//  </rtree>
//  


// ----------------------------  Register Item Address: TIM15_AF1  --------------------------------
// SVD Line: 12129

unsigned int TIM15_AF1 __AT (0x40014060);



// -------------------------------  Field Item: TIM15_AF1_BKINE  ----------------------------------
// SVD Line: 12138

//  <item> SFDITEM_FIELD__TIM15_AF1_BKINE
//    <name> BKINE </name>
//    <rw> 
//    <i> [Bit 0] RW (@ 0x40014060) BRK BKIN input enable </i>
//    <check> 
//      <loc> ( (unsigned int) TIM15_AF1 ) </loc>
//      <o.0..0> BKINE
//    </check>
//  </item>
//  


// ------------------------------  Field Item: TIM15_AF1_BKCMP1E  ---------------------------------
// SVD Line: 12144

//  <item> SFDITEM_FIELD__TIM15_AF1_BKCMP1E
//    <name> BKCMP1E </name>
//    <rw> 
//    <i> [Bit 1] RW (@ 0x40014060) BRK COMP1 enable </i>
//    <check> 
//      <loc> ( (unsigned int) TIM15_AF1 ) </loc>
//      <o.1..1> BKCMP1E
//    </check>
//  </item>
//  


// ------------------------------  Field Item: TIM15_AF1_BKCMP2E  ---------------------------------
// SVD Line: 12150

//  <item> SFDITEM_FIELD__TIM15_AF1_BKCMP2E
//    <name> BKCMP2E </name>
//    <rw> 
//    <i> [Bit 2] RW (@ 0x40014060) BRK COMP2 enable </i>
//    <check> 
//      <loc> ( (unsigned int) TIM15_AF1 ) </loc>
//      <o.2..2> BKCMP2E
//    </check>
//  </item>
//  


// -----------------------------  Field Item: TIM15_AF1_BKDFBK1E  ---------------------------------
// SVD Line: 12156

//  <item> SFDITEM_FIELD__TIM15_AF1_BKDFBK1E
//    <name> BKDFBK1E </name>
//    <rw> 
//    <i> [Bit 8] RW (@ 0x40014060) BRK DFSDM_BREAK1 enable </i>
//    <check> 
//      <loc> ( (unsigned int) TIM15_AF1 ) </loc>
//      <o.8..8> BKDFBK1E
//    </check>
//  </item>
//  


// -------------------------------  Field Item: TIM15_AF1_BKINP  ----------------------------------
// SVD Line: 12162

//  <item> SFDITEM_FIELD__TIM15_AF1_BKINP
//    <name> BKINP </name>
//    <rw> 
//    <i> [Bit 9] RW (@ 0x40014060) BRK BKIN input polarity </i>
//    <check> 
//      <loc> ( (unsigned int) TIM15_AF1 ) </loc>
//      <o.9..9> BKINP
//    </check>
//  </item>
//  


// ------------------------------  Field Item: TIM15_AF1_BKCMP1P  ---------------------------------
// SVD Line: 12168

//  <item> SFDITEM_FIELD__TIM15_AF1_BKCMP1P
//    <name> BKCMP1P </name>
//    <rw> 
//    <i> [Bit 10] RW (@ 0x40014060) BRK COMP1 input polarity </i>
//    <check> 
//      <loc> ( (unsigned int) TIM15_AF1 ) </loc>
//      <o.10..10> BKCMP1P
//    </check>
//  </item>
//  


// ------------------------------  Field Item: TIM15_AF1_BKCMP2P  ---------------------------------
// SVD Line: 12174

//  <item> SFDITEM_FIELD__TIM15_AF1_BKCMP2P
//    <name> BKCMP2P </name>
//    <rw> 
//    <i> [Bit 11] RW (@ 0x40014060) BRK COMP2 input polarit </i>
//    <check> 
//      <loc> ( (unsigned int) TIM15_AF1 ) </loc>
//      <o.11..11> BKCMP2P
//    </check>
//  </item>
//  


// --------------------------------  Register RTree: TIM15_AF1  -----------------------------------
// SVD Line: 12129

//  <rtree> SFDITEM_REG__TIM15_AF1
//    <name> AF1 </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x40014060) TIM17 option register 1 </i>
//    <loc> ( (unsigned int)((TIM15_AF1 >> 0) & 0xFFFFFFFF), ((TIM15_AF1 = (TIM15_AF1 & ~(0xF07UL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xF07) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__TIM15_AF1_BKINE </item>
//    <item> SFDITEM_FIELD__TIM15_AF1_BKCMP1E </item>
//    <item> SFDITEM_FIELD__TIM15_AF1_BKCMP2E </item>
//    <item> SFDITEM_FIELD__TIM15_AF1_BKDFBK1E </item>
//    <item> SFDITEM_FIELD__TIM15_AF1_BKINP </item>
//    <item> SFDITEM_FIELD__TIM15_AF1_BKCMP1P </item>
//    <item> SFDITEM_FIELD__TIM15_AF1_BKCMP2P </item>
//  </rtree>
//  


// ---------------------------  Register Item Address: TIM15_TISEL  -------------------------------
// SVD Line: 12182

unsigned int TIM15_TISEL __AT (0x40014068);



// -----------------------------  Field Item: TIM15_TISEL_TI1SEL  ---------------------------------
// SVD Line: 12191

//  <item> SFDITEM_FIELD__TIM15_TISEL_TI1SEL
//    <name> TI1SEL </name>
//    <rw> 
//    <i> [Bits 3..0] RW (@ 0x40014068) selects input </i>
//    <edit> 
//      <loc> ( (unsigned char)((TIM15_TISEL >> 0) & 0xF), ((TIM15_TISEL = (TIM15_TISEL & ~(0xFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -------------------------------  Register RTree: TIM15_TISEL  ----------------------------------
// SVD Line: 12182

//  <rtree> SFDITEM_REG__TIM15_TISEL
//    <name> TISEL </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x40014068) input selection register </i>
//    <loc> ( (unsigned int)((TIM15_TISEL >> 0) & 0xFFFFFFFF), ((TIM15_TISEL = (TIM15_TISEL & ~(0xFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__TIM15_TISEL_TI1SEL </item>
//  </rtree>
//  


// ---------------------------------  Peripheral View: TIM15  -------------------------------------
// SVD Line: 12210

//  <view> TIM15
//    <name> TIM15 </name>
//    <item> SFDITEM_REG__TIM15_CR1 </item>
//    <item> SFDITEM_REG__TIM15_CR2 </item>
//    <item> SFDITEM_REG__TIM15_DIER </item>
//    <item> SFDITEM_REG__TIM15_SR </item>
//    <item> SFDITEM_REG__TIM15_EGR </item>
//    <item> SFDITEM_REG__TIM15_CCMR1_Output </item>
//    <item> SFDITEM_REG__TIM15_CCMR1_Input </item>
//    <item> SFDITEM_REG__TIM15_CCER </item>
//    <item> SFDITEM_REG__TIM15_CNT </item>
//    <item> SFDITEM_REG__TIM15_PSC </item>
//    <item> SFDITEM_REG__TIM15_ARR </item>
//    <item> SFDITEM_REG__TIM15_RCR </item>
//    <item> SFDITEM_REG__TIM15_CCR1 </item>
//    <item> SFDITEM_REG__TIM15_BDTR </item>
//    <item> SFDITEM_REG__TIM15_DCR </item>
//    <item> SFDITEM_REG__TIM15_DMAR </item>
//    <item> SFDITEM_REG__TIM15_AF1 </item>
//    <item> SFDITEM_REG__TIM15_TISEL </item>
//  </view>
//  


// ----------------------------  Register Item Address: USART1_CR1  -------------------------------
// SVD Line: 12236

unsigned int USART1_CR1 __AT (0x40013800);



// ------------------------------  Field Item: USART1_CR1_RXFFIE  ---------------------------------
// SVD Line: 12245

//  <item> SFDITEM_FIELD__USART1_CR1_RXFFIE
//    <name> RXFFIE </name>
//    <rw> 
//    <i> [Bit 31] RW (@ 0x40013800) RXFIFO Full interrupt  enable </i>
//    <check> 
//      <loc> ( (unsigned int) USART1_CR1 ) </loc>
//      <o.31..31> RXFFIE
//    </check>
//  </item>
//  


// ------------------------------  Field Item: USART1_CR1_TXFEIE  ---------------------------------
// SVD Line: 12252

//  <item> SFDITEM_FIELD__USART1_CR1_TXFEIE
//    <name> TXFEIE </name>
//    <rw> 
//    <i> [Bit 30] RW (@ 0x40013800) TXFIFO empty interrupt  enable </i>
//    <check> 
//      <loc> ( (unsigned int) USART1_CR1 ) </loc>
//      <o.30..30> TXFEIE
//    </check>
//  </item>
//  


// ------------------------------  Field Item: USART1_CR1_FIFOEN  ---------------------------------
// SVD Line: 12259

//  <item> SFDITEM_FIELD__USART1_CR1_FIFOEN
//    <name> FIFOEN </name>
//    <rw> 
//    <i> [Bit 29] RW (@ 0x40013800) FIFO mode enable </i>
//    <check> 
//      <loc> ( (unsigned int) USART1_CR1 ) </loc>
//      <o.29..29> FIFOEN
//    </check>
//  </item>
//  


// --------------------------------  Field Item: USART1_CR1_M1  -----------------------------------
// SVD Line: 12265

//  <item> SFDITEM_FIELD__USART1_CR1_M1
//    <name> M1 </name>
//    <rw> 
//    <i> [Bit 28] RW (@ 0x40013800) Word length </i>
//    <check> 
//      <loc> ( (unsigned int) USART1_CR1 ) </loc>
//      <o.28..28> M1
//    </check>
//  </item>
//  


// ------------------------------  Field Item: USART1_CR1_EOBIE  ----------------------------------
// SVD Line: 12271

//  <item> SFDITEM_FIELD__USART1_CR1_EOBIE
//    <name> EOBIE </name>
//    <rw> 
//    <i> [Bit 27] RW (@ 0x40013800) End of Block interrupt  enable </i>
//    <check> 
//      <loc> ( (unsigned int) USART1_CR1 ) </loc>
//      <o.27..27> EOBIE
//    </check>
//  </item>
//  


// ------------------------------  Field Item: USART1_CR1_RTOIE  ----------------------------------
// SVD Line: 12278

//  <item> SFDITEM_FIELD__USART1_CR1_RTOIE
//    <name> RTOIE </name>
//    <rw> 
//    <i> [Bit 26] RW (@ 0x40013800) Receiver timeout interrupt  enable </i>
//    <check> 
//      <loc> ( (unsigned int) USART1_CR1 ) </loc>
//      <o.26..26> RTOIE
//    </check>
//  </item>
//  


// -------------------------------  Field Item: USART1_CR1_DEAT  ----------------------------------
// SVD Line: 12285

//  <item> SFDITEM_FIELD__USART1_CR1_DEAT
//    <name> DEAT </name>
//    <rw> 
//    <i> [Bits 25..21] RW (@ 0x40013800) DEAT </i>
//    <edit> 
//      <loc> ( (unsigned char)((USART1_CR1 >> 21) & 0x1F), ((USART1_CR1 = (USART1_CR1 & ~(0x1FUL << 21 )) | ((unsigned long)(Gui_u8:GuiVal & 0x1F) << 21 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -------------------------------  Field Item: USART1_CR1_DEDT  ----------------------------------
// SVD Line: 12291

//  <item> SFDITEM_FIELD__USART1_CR1_DEDT
//    <name> DEDT </name>
//    <rw> 
//    <i> [Bits 20..16] RW (@ 0x40013800) DEDT </i>
//    <edit> 
//      <loc> ( (unsigned char)((USART1_CR1 >> 16) & 0x1F), ((USART1_CR1 = (USART1_CR1 & ~(0x1FUL << 16 )) | ((unsigned long)(Gui_u8:GuiVal & 0x1F) << 16 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ------------------------------  Field Item: USART1_CR1_OVER8  ----------------------------------
// SVD Line: 12297

//  <item> SFDITEM_FIELD__USART1_CR1_OVER8
//    <name> OVER8 </name>
//    <rw> 
//    <i> [Bit 15] RW (@ 0x40013800) Oversampling mode </i>
//    <check> 
//      <loc> ( (unsigned int) USART1_CR1 ) </loc>
//      <o.15..15> OVER8
//    </check>
//  </item>
//  


// -------------------------------  Field Item: USART1_CR1_CMIE  ----------------------------------
// SVD Line: 12303

//  <item> SFDITEM_FIELD__USART1_CR1_CMIE
//    <name> CMIE </name>
//    <rw> 
//    <i> [Bit 14] RW (@ 0x40013800) Character match interrupt  enable </i>
//    <check> 
//      <loc> ( (unsigned int) USART1_CR1 ) </loc>
//      <o.14..14> CMIE
//    </check>
//  </item>
//  


// -------------------------------  Field Item: USART1_CR1_MME  -----------------------------------
// SVD Line: 12310

//  <item> SFDITEM_FIELD__USART1_CR1_MME
//    <name> MME </name>
//    <rw> 
//    <i> [Bit 13] RW (@ 0x40013800) Mute mode enable </i>
//    <check> 
//      <loc> ( (unsigned int) USART1_CR1 ) </loc>
//      <o.13..13> MME
//    </check>
//  </item>
//  


// --------------------------------  Field Item: USART1_CR1_M0  -----------------------------------
// SVD Line: 12316

//  <item> SFDITEM_FIELD__USART1_CR1_M0
//    <name> M0 </name>
//    <rw> 
//    <i> [Bit 12] RW (@ 0x40013800) Word length </i>
//    <check> 
//      <loc> ( (unsigned int) USART1_CR1 ) </loc>
//      <o.12..12> M0
//    </check>
//  </item>
//  


// -------------------------------  Field Item: USART1_CR1_WAKE  ----------------------------------
// SVD Line: 12322

//  <item> SFDITEM_FIELD__USART1_CR1_WAKE
//    <name> WAKE </name>
//    <rw> 
//    <i> [Bit 11] RW (@ 0x40013800) Receiver wakeup method </i>
//    <check> 
//      <loc> ( (unsigned int) USART1_CR1 ) </loc>
//      <o.11..11> WAKE
//    </check>
//  </item>
//  


// -------------------------------  Field Item: USART1_CR1_PCE  -----------------------------------
// SVD Line: 12328

//  <item> SFDITEM_FIELD__USART1_CR1_PCE
//    <name> PCE </name>
//    <rw> 
//    <i> [Bit 10] RW (@ 0x40013800) Parity control enable </i>
//    <check> 
//      <loc> ( (unsigned int) USART1_CR1 ) </loc>
//      <o.10..10> PCE
//    </check>
//  </item>
//  


// --------------------------------  Field Item: USART1_CR1_PS  -----------------------------------
// SVD Line: 12334

//  <item> SFDITEM_FIELD__USART1_CR1_PS
//    <name> PS </name>
//    <rw> 
//    <i> [Bit 9] RW (@ 0x40013800) Parity selection </i>
//    <check> 
//      <loc> ( (unsigned int) USART1_CR1 ) </loc>
//      <o.9..9> PS
//    </check>
//  </item>
//  


// -------------------------------  Field Item: USART1_CR1_PEIE  ----------------------------------
// SVD Line: 12340

//  <item> SFDITEM_FIELD__USART1_CR1_PEIE
//    <name> PEIE </name>
//    <rw> 
//    <i> [Bit 8] RW (@ 0x40013800) PE interrupt enable </i>
//    <check> 
//      <loc> ( (unsigned int) USART1_CR1 ) </loc>
//      <o.8..8> PEIE
//    </check>
//  </item>
//  


// ------------------------------  Field Item: USART1_CR1_TXEIE  ----------------------------------
// SVD Line: 12346

//  <item> SFDITEM_FIELD__USART1_CR1_TXEIE
//    <name> TXEIE </name>
//    <rw> 
//    <i> [Bit 7] RW (@ 0x40013800) interrupt enable </i>
//    <check> 
//      <loc> ( (unsigned int) USART1_CR1 ) </loc>
//      <o.7..7> TXEIE
//    </check>
//  </item>
//  


// -------------------------------  Field Item: USART1_CR1_TCIE  ----------------------------------
// SVD Line: 12352

//  <item> SFDITEM_FIELD__USART1_CR1_TCIE
//    <name> TCIE </name>
//    <rw> 
//    <i> [Bit 6] RW (@ 0x40013800) Transmission complete interrupt  enable </i>
//    <check> 
//      <loc> ( (unsigned int) USART1_CR1 ) </loc>
//      <o.6..6> TCIE
//    </check>
//  </item>
//  


// ------------------------------  Field Item: USART1_CR1_RXNEIE  ---------------------------------
// SVD Line: 12359

//  <item> SFDITEM_FIELD__USART1_CR1_RXNEIE
//    <name> RXNEIE </name>
//    <rw> 
//    <i> [Bit 5] RW (@ 0x40013800) RXNE interrupt enable </i>
//    <check> 
//      <loc> ( (unsigned int) USART1_CR1 ) </loc>
//      <o.5..5> RXNEIE
//    </check>
//  </item>
//  


// ------------------------------  Field Item: USART1_CR1_IDLEIE  ---------------------------------
// SVD Line: 12365

//  <item> SFDITEM_FIELD__USART1_CR1_IDLEIE
//    <name> IDLEIE </name>
//    <rw> 
//    <i> [Bit 4] RW (@ 0x40013800) IDLE interrupt enable </i>
//    <check> 
//      <loc> ( (unsigned int) USART1_CR1 ) </loc>
//      <o.4..4> IDLEIE
//    </check>
//  </item>
//  


// --------------------------------  Field Item: USART1_CR1_TE  -----------------------------------
// SVD Line: 12371

//  <item> SFDITEM_FIELD__USART1_CR1_TE
//    <name> TE </name>
//    <rw> 
//    <i> [Bit 3] RW (@ 0x40013800) Transmitter enable </i>
//    <check> 
//      <loc> ( (unsigned int) USART1_CR1 ) </loc>
//      <o.3..3> TE
//    </check>
//  </item>
//  


// --------------------------------  Field Item: USART1_CR1_RE  -----------------------------------
// SVD Line: 12377

//  <item> SFDITEM_FIELD__USART1_CR1_RE
//    <name> RE </name>
//    <rw> 
//    <i> [Bit 2] RW (@ 0x40013800) Receiver enable </i>
//    <check> 
//      <loc> ( (unsigned int) USART1_CR1 ) </loc>
//      <o.2..2> RE
//    </check>
//  </item>
//  


// -------------------------------  Field Item: USART1_CR1_UESM  ----------------------------------
// SVD Line: 12383

//  <item> SFDITEM_FIELD__USART1_CR1_UESM
//    <name> UESM </name>
//    <rw> 
//    <i> [Bit 1] RW (@ 0x40013800) USART enable in Stop mode </i>
//    <check> 
//      <loc> ( (unsigned int) USART1_CR1 ) </loc>
//      <o.1..1> UESM
//    </check>
//  </item>
//  


// --------------------------------  Field Item: USART1_CR1_UE  -----------------------------------
// SVD Line: 12389

//  <item> SFDITEM_FIELD__USART1_CR1_UE
//    <name> UE </name>
//    <rw> 
//    <i> [Bit 0] RW (@ 0x40013800) USART enable </i>
//    <check> 
//      <loc> ( (unsigned int) USART1_CR1 ) </loc>
//      <o.0..0> UE
//    </check>
//  </item>
//  


// -------------------------------  Register RTree: USART1_CR1  -----------------------------------
// SVD Line: 12236

//  <rtree> SFDITEM_REG__USART1_CR1
//    <name> CR1 </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x40013800) Control register 1 </i>
//    <loc> ( (unsigned int)((USART1_CR1 >> 0) & 0xFFFFFFFF), ((USART1_CR1 = (USART1_CR1 & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__USART1_CR1_RXFFIE </item>
//    <item> SFDITEM_FIELD__USART1_CR1_TXFEIE </item>
//    <item> SFDITEM_FIELD__USART1_CR1_FIFOEN </item>
//    <item> SFDITEM_FIELD__USART1_CR1_M1 </item>
//    <item> SFDITEM_FIELD__USART1_CR1_EOBIE </item>
//    <item> SFDITEM_FIELD__USART1_CR1_RTOIE </item>
//    <item> SFDITEM_FIELD__USART1_CR1_DEAT </item>
//    <item> SFDITEM_FIELD__USART1_CR1_DEDT </item>
//    <item> SFDITEM_FIELD__USART1_CR1_OVER8 </item>
//    <item> SFDITEM_FIELD__USART1_CR1_CMIE </item>
//    <item> SFDITEM_FIELD__USART1_CR1_MME </item>
//    <item> SFDITEM_FIELD__USART1_CR1_M0 </item>
//    <item> SFDITEM_FIELD__USART1_CR1_WAKE </item>
//    <item> SFDITEM_FIELD__USART1_CR1_PCE </item>
//    <item> SFDITEM_FIELD__USART1_CR1_PS </item>
//    <item> SFDITEM_FIELD__USART1_CR1_PEIE </item>
//    <item> SFDITEM_FIELD__USART1_CR1_TXEIE </item>
//    <item> SFDITEM_FIELD__USART1_CR1_TCIE </item>
//    <item> SFDITEM_FIELD__USART1_CR1_RXNEIE </item>
//    <item> SFDITEM_FIELD__USART1_CR1_IDLEIE </item>
//    <item> SFDITEM_FIELD__USART1_CR1_TE </item>
//    <item> SFDITEM_FIELD__USART1_CR1_RE </item>
//    <item> SFDITEM_FIELD__USART1_CR1_UESM </item>
//    <item> SFDITEM_FIELD__USART1_CR1_UE </item>
//  </rtree>
//  


// ----------------------------  Register Item Address: USART1_CR2  -------------------------------
// SVD Line: 12397

unsigned int USART1_CR2 __AT (0x40013804);



// ------------------------------  Field Item: USART1_CR2_ADD4_7  ---------------------------------
// SVD Line: 12406

//  <item> SFDITEM_FIELD__USART1_CR2_ADD4_7
//    <name> ADD4_7 </name>
//    <rw> 
//    <i> [Bits 31..28] RW (@ 0x40013804) Address of the USART node </i>
//    <edit> 
//      <loc> ( (unsigned char)((USART1_CR2 >> 28) & 0xF), ((USART1_CR2 = (USART1_CR2 & ~(0xFUL << 28 )) | ((unsigned long)(Gui_u8:GuiVal & 0xF) << 28 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ------------------------------  Field Item: USART1_CR2_ADD0_3  ---------------------------------
// SVD Line: 12412

//  <item> SFDITEM_FIELD__USART1_CR2_ADD0_3
//    <name> ADD0_3 </name>
//    <rw> 
//    <i> [Bits 27..24] RW (@ 0x40013804) Address of the USART node </i>
//    <edit> 
//      <loc> ( (unsigned char)((USART1_CR2 >> 24) & 0xF), ((USART1_CR2 = (USART1_CR2 & ~(0xFUL << 24 )) | ((unsigned long)(Gui_u8:GuiVal & 0xF) << 24 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ------------------------------  Field Item: USART1_CR2_RTOEN  ----------------------------------
// SVD Line: 12418

//  <item> SFDITEM_FIELD__USART1_CR2_RTOEN
//    <name> RTOEN </name>
//    <rw> 
//    <i> [Bit 23] RW (@ 0x40013804) Receiver timeout enable </i>
//    <check> 
//      <loc> ( (unsigned int) USART1_CR2 ) </loc>
//      <o.23..23> RTOEN
//    </check>
//  </item>
//  


// ------------------------------  Field Item: USART1_CR2_ABRMOD  ---------------------------------
// SVD Line: 12424

//  <item> SFDITEM_FIELD__USART1_CR2_ABRMOD
//    <name> ABRMOD </name>
//    <rw> 
//    <i> [Bits 22..21] RW (@ 0x40013804) Auto baud rate mode </i>
//    <edit> 
//      <loc> ( (unsigned char)((USART1_CR2 >> 21) & 0x3), ((USART1_CR2 = (USART1_CR2 & ~(0x3UL << 21 )) | ((unsigned long)(Gui_u8:GuiVal & 0x3) << 21 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ------------------------------  Field Item: USART1_CR2_ABREN  ----------------------------------
// SVD Line: 12430

//  <item> SFDITEM_FIELD__USART1_CR2_ABREN
//    <name> ABREN </name>
//    <rw> 
//    <i> [Bit 20] RW (@ 0x40013804) Auto baud rate enable </i>
//    <check> 
//      <loc> ( (unsigned int) USART1_CR2 ) </loc>
//      <o.20..20> ABREN
//    </check>
//  </item>
//  


// -----------------------------  Field Item: USART1_CR2_MSBFIRST  --------------------------------
// SVD Line: 12436

//  <item> SFDITEM_FIELD__USART1_CR2_MSBFIRST
//    <name> MSBFIRST </name>
//    <rw> 
//    <i> [Bit 19] RW (@ 0x40013804) Most significant bit first </i>
//    <check> 
//      <loc> ( (unsigned int) USART1_CR2 ) </loc>
//      <o.19..19> MSBFIRST
//    </check>
//  </item>
//  


// ------------------------------  Field Item: USART1_CR2_TAINV  ----------------------------------
// SVD Line: 12442

//  <item> SFDITEM_FIELD__USART1_CR2_TAINV
//    <name> TAINV </name>
//    <rw> 
//    <i> [Bit 18] RW (@ 0x40013804) Binary data inversion </i>
//    <check> 
//      <loc> ( (unsigned int) USART1_CR2 ) </loc>
//      <o.18..18> TAINV
//    </check>
//  </item>
//  


// ------------------------------  Field Item: USART1_CR2_TXINV  ----------------------------------
// SVD Line: 12448

//  <item> SFDITEM_FIELD__USART1_CR2_TXINV
//    <name> TXINV </name>
//    <rw> 
//    <i> [Bit 17] RW (@ 0x40013804) TX pin active level  inversion </i>
//    <check> 
//      <loc> ( (unsigned int) USART1_CR2 ) </loc>
//      <o.17..17> TXINV
//    </check>
//  </item>
//  


// ------------------------------  Field Item: USART1_CR2_RXINV  ----------------------------------
// SVD Line: 12455

//  <item> SFDITEM_FIELD__USART1_CR2_RXINV
//    <name> RXINV </name>
//    <rw> 
//    <i> [Bit 16] RW (@ 0x40013804) RX pin active level  inversion </i>
//    <check> 
//      <loc> ( (unsigned int) USART1_CR2 ) </loc>
//      <o.16..16> RXINV
//    </check>
//  </item>
//  


// -------------------------------  Field Item: USART1_CR2_SWAP  ----------------------------------
// SVD Line: 12462

//  <item> SFDITEM_FIELD__USART1_CR2_SWAP
//    <name> SWAP </name>
//    <rw> 
//    <i> [Bit 15] RW (@ 0x40013804) Swap TX/RX pins </i>
//    <check> 
//      <loc> ( (unsigned int) USART1_CR2 ) </loc>
//      <o.15..15> SWAP
//    </check>
//  </item>
//  


// ------------------------------  Field Item: USART1_CR2_LINEN  ----------------------------------
// SVD Line: 12468

//  <item> SFDITEM_FIELD__USART1_CR2_LINEN
//    <name> LINEN </name>
//    <rw> 
//    <i> [Bit 14] RW (@ 0x40013804) LIN mode enable </i>
//    <check> 
//      <loc> ( (unsigned int) USART1_CR2 ) </loc>
//      <o.14..14> LINEN
//    </check>
//  </item>
//  


// -------------------------------  Field Item: USART1_CR2_STOP  ----------------------------------
// SVD Line: 12474

//  <item> SFDITEM_FIELD__USART1_CR2_STOP
//    <name> STOP </name>
//    <rw> 
//    <i> [Bits 13..12] RW (@ 0x40013804) STOP bits </i>
//    <edit> 
//      <loc> ( (unsigned char)((USART1_CR2 >> 12) & 0x3), ((USART1_CR2 = (USART1_CR2 & ~(0x3UL << 12 )) | ((unsigned long)(Gui_u8:GuiVal & 0x3) << 12 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ------------------------------  Field Item: USART1_CR2_CLKEN  ----------------------------------
// SVD Line: 12480

//  <item> SFDITEM_FIELD__USART1_CR2_CLKEN
//    <name> CLKEN </name>
//    <rw> 
//    <i> [Bit 11] RW (@ 0x40013804) Clock enable </i>
//    <check> 
//      <loc> ( (unsigned int) USART1_CR2 ) </loc>
//      <o.11..11> CLKEN
//    </check>
//  </item>
//  


// -------------------------------  Field Item: USART1_CR2_CPOL  ----------------------------------
// SVD Line: 12486

//  <item> SFDITEM_FIELD__USART1_CR2_CPOL
//    <name> CPOL </name>
//    <rw> 
//    <i> [Bit 10] RW (@ 0x40013804) Clock polarity </i>
//    <check> 
//      <loc> ( (unsigned int) USART1_CR2 ) </loc>
//      <o.10..10> CPOL
//    </check>
//  </item>
//  


// -------------------------------  Field Item: USART1_CR2_CPHA  ----------------------------------
// SVD Line: 12492

//  <item> SFDITEM_FIELD__USART1_CR2_CPHA
//    <name> CPHA </name>
//    <rw> 
//    <i> [Bit 9] RW (@ 0x40013804) Clock phase </i>
//    <check> 
//      <loc> ( (unsigned int) USART1_CR2 ) </loc>
//      <o.9..9> CPHA
//    </check>
//  </item>
//  


// -------------------------------  Field Item: USART1_CR2_LBCL  ----------------------------------
// SVD Line: 12498

//  <item> SFDITEM_FIELD__USART1_CR2_LBCL
//    <name> LBCL </name>
//    <rw> 
//    <i> [Bit 8] RW (@ 0x40013804) Last bit clock pulse </i>
//    <check> 
//      <loc> ( (unsigned int) USART1_CR2 ) </loc>
//      <o.8..8> LBCL
//    </check>
//  </item>
//  


// ------------------------------  Field Item: USART1_CR2_LBDIE  ----------------------------------
// SVD Line: 12504

//  <item> SFDITEM_FIELD__USART1_CR2_LBDIE
//    <name> LBDIE </name>
//    <rw> 
//    <i> [Bit 6] RW (@ 0x40013804) LIN break detection interrupt  enable </i>
//    <check> 
//      <loc> ( (unsigned int) USART1_CR2 ) </loc>
//      <o.6..6> LBDIE
//    </check>
//  </item>
//  


// -------------------------------  Field Item: USART1_CR2_LBDL  ----------------------------------
// SVD Line: 12511

//  <item> SFDITEM_FIELD__USART1_CR2_LBDL
//    <name> LBDL </name>
//    <rw> 
//    <i> [Bit 5] RW (@ 0x40013804) LIN break detection length </i>
//    <check> 
//      <loc> ( (unsigned int) USART1_CR2 ) </loc>
//      <o.5..5> LBDL
//    </check>
//  </item>
//  


// ------------------------------  Field Item: USART1_CR2_ADDM7  ----------------------------------
// SVD Line: 12517

//  <item> SFDITEM_FIELD__USART1_CR2_ADDM7
//    <name> ADDM7 </name>
//    <rw> 
//    <i> [Bit 4] RW (@ 0x40013804) 7-bit Address Detection/4-bit Address  Detection </i>
//    <check> 
//      <loc> ( (unsigned int) USART1_CR2 ) </loc>
//      <o.4..4> ADDM7
//    </check>
//  </item>
//  


// -----------------------------  Field Item: USART1_CR2_DIS_NSS  ---------------------------------
// SVD Line: 12524

//  <item> SFDITEM_FIELD__USART1_CR2_DIS_NSS
//    <name> DIS_NSS </name>
//    <rw> 
//    <i> [Bit 3] RW (@ 0x40013804) When the DSI_NSS bit is set, the NSS pin  input will be ignored </i>
//    <check> 
//      <loc> ( (unsigned int) USART1_CR2 ) </loc>
//      <o.3..3> DIS_NSS
//    </check>
//  </item>
//  


// ------------------------------  Field Item: USART1_CR2_SLVEN  ----------------------------------
// SVD Line: 12531

//  <item> SFDITEM_FIELD__USART1_CR2_SLVEN
//    <name> SLVEN </name>
//    <rw> 
//    <i> [Bit 0] RW (@ 0x40013804) Synchronous Slave mode  enable </i>
//    <check> 
//      <loc> ( (unsigned int) USART1_CR2 ) </loc>
//      <o.0..0> SLVEN
//    </check>
//  </item>
//  


// -------------------------------  Register RTree: USART1_CR2  -----------------------------------
// SVD Line: 12397

//  <rtree> SFDITEM_REG__USART1_CR2
//    <name> CR2 </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x40013804) Control register 2 </i>
//    <loc> ( (unsigned int)((USART1_CR2 >> 0) & 0xFFFFFFFF), ((USART1_CR2 = (USART1_CR2 & ~(0xFFFFFF79UL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFF79) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__USART1_CR2_ADD4_7 </item>
//    <item> SFDITEM_FIELD__USART1_CR2_ADD0_3 </item>
//    <item> SFDITEM_FIELD__USART1_CR2_RTOEN </item>
//    <item> SFDITEM_FIELD__USART1_CR2_ABRMOD </item>
//    <item> SFDITEM_FIELD__USART1_CR2_ABREN </item>
//    <item> SFDITEM_FIELD__USART1_CR2_MSBFIRST </item>
//    <item> SFDITEM_FIELD__USART1_CR2_TAINV </item>
//    <item> SFDITEM_FIELD__USART1_CR2_TXINV </item>
//    <item> SFDITEM_FIELD__USART1_CR2_RXINV </item>
//    <item> SFDITEM_FIELD__USART1_CR2_SWAP </item>
//    <item> SFDITEM_FIELD__USART1_CR2_LINEN </item>
//    <item> SFDITEM_FIELD__USART1_CR2_STOP </item>
//    <item> SFDITEM_FIELD__USART1_CR2_CLKEN </item>
//    <item> SFDITEM_FIELD__USART1_CR2_CPOL </item>
//    <item> SFDITEM_FIELD__USART1_CR2_CPHA </item>
//    <item> SFDITEM_FIELD__USART1_CR2_LBCL </item>
//    <item> SFDITEM_FIELD__USART1_CR2_LBDIE </item>
//    <item> SFDITEM_FIELD__USART1_CR2_LBDL </item>
//    <item> SFDITEM_FIELD__USART1_CR2_ADDM7 </item>
//    <item> SFDITEM_FIELD__USART1_CR2_DIS_NSS </item>
//    <item> SFDITEM_FIELD__USART1_CR2_SLVEN </item>
//  </rtree>
//  


// ----------------------------  Register Item Address: USART1_CR3  -------------------------------
// SVD Line: 12540

unsigned int USART1_CR3 __AT (0x40013808);



// -----------------------------  Field Item: USART1_CR3_TXFTCFG  ---------------------------------
// SVD Line: 12549

//  <item> SFDITEM_FIELD__USART1_CR3_TXFTCFG
//    <name> TXFTCFG </name>
//    <rw> 
//    <i> [Bits 31..29] RW (@ 0x40013808) TXFIFO threshold  configuration </i>
//    <edit> 
//      <loc> ( (unsigned char)((USART1_CR3 >> 29) & 0x7), ((USART1_CR3 = (USART1_CR3 & ~(0x7UL << 29 )) | ((unsigned long)(Gui_u8:GuiVal & 0x7) << 29 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ------------------------------  Field Item: USART1_CR3_RXFTIE  ---------------------------------
// SVD Line: 12556

//  <item> SFDITEM_FIELD__USART1_CR3_RXFTIE
//    <name> RXFTIE </name>
//    <rw> 
//    <i> [Bit 28] RW (@ 0x40013808) RXFIFO threshold interrupt  enable </i>
//    <check> 
//      <loc> ( (unsigned int) USART1_CR3 ) </loc>
//      <o.28..28> RXFTIE
//    </check>
//  </item>
//  


// -----------------------------  Field Item: USART1_CR3_RXFTCFG  ---------------------------------
// SVD Line: 12563

//  <item> SFDITEM_FIELD__USART1_CR3_RXFTCFG
//    <name> RXFTCFG </name>
//    <rw> 
//    <i> [Bits 27..25] RW (@ 0x40013808) Receive FIFO threshold  configuration </i>
//    <edit> 
//      <loc> ( (unsigned char)((USART1_CR3 >> 25) & 0x7), ((USART1_CR3 = (USART1_CR3 & ~(0x7UL << 25 )) | ((unsigned long)(Gui_u8:GuiVal & 0x7) << 25 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -----------------------------  Field Item: USART1_CR3_TCBGTIE  ---------------------------------
// SVD Line: 12570

//  <item> SFDITEM_FIELD__USART1_CR3_TCBGTIE
//    <name> TCBGTIE </name>
//    <rw> 
//    <i> [Bit 24] RW (@ 0x40013808) Tr Complete before guard time, interrupt  enable </i>
//    <check> 
//      <loc> ( (unsigned int) USART1_CR3 ) </loc>
//      <o.24..24> TCBGTIE
//    </check>
//  </item>
//  


// ------------------------------  Field Item: USART1_CR3_TXFTIE  ---------------------------------
// SVD Line: 12577

//  <item> SFDITEM_FIELD__USART1_CR3_TXFTIE
//    <name> TXFTIE </name>
//    <rw> 
//    <i> [Bit 23] RW (@ 0x40013808) threshold interrupt enable </i>
//    <check> 
//      <loc> ( (unsigned int) USART1_CR3 ) </loc>
//      <o.23..23> TXFTIE
//    </check>
//  </item>
//  


// ------------------------------  Field Item: USART1_CR3_WUFIE  ----------------------------------
// SVD Line: 12583

//  <item> SFDITEM_FIELD__USART1_CR3_WUFIE
//    <name> WUFIE </name>
//    <rw> 
//    <i> [Bit 22] RW (@ 0x40013808) Wakeup from Stop mode interrupt  enable </i>
//    <check> 
//      <loc> ( (unsigned int) USART1_CR3 ) </loc>
//      <o.22..22> WUFIE
//    </check>
//  </item>
//  


// -------------------------------  Field Item: USART1_CR3_WUS  -----------------------------------
// SVD Line: 12590

//  <item> SFDITEM_FIELD__USART1_CR3_WUS
//    <name> WUS </name>
//    <rw> 
//    <i> [Bits 21..20] RW (@ 0x40013808) Wakeup from Stop mode interrupt flag  selection </i>
//    <edit> 
//      <loc> ( (unsigned char)((USART1_CR3 >> 20) & 0x3), ((USART1_CR3 = (USART1_CR3 & ~(0x3UL << 20 )) | ((unsigned long)(Gui_u8:GuiVal & 0x3) << 20 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -----------------------------  Field Item: USART1_CR3_SCARCNT  ---------------------------------
// SVD Line: 12597

//  <item> SFDITEM_FIELD__USART1_CR3_SCARCNT
//    <name> SCARCNT </name>
//    <rw> 
//    <i> [Bits 19..17] RW (@ 0x40013808) Smartcard auto-retry count </i>
//    <edit> 
//      <loc> ( (unsigned char)((USART1_CR3 >> 17) & 0x7), ((USART1_CR3 = (USART1_CR3 & ~(0x7UL << 17 )) | ((unsigned long)(Gui_u8:GuiVal & 0x7) << 17 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -------------------------------  Field Item: USART1_CR3_DEP  -----------------------------------
// SVD Line: 12603

//  <item> SFDITEM_FIELD__USART1_CR3_DEP
//    <name> DEP </name>
//    <rw> 
//    <i> [Bit 15] RW (@ 0x40013808) Driver enable polarity  selection </i>
//    <check> 
//      <loc> ( (unsigned int) USART1_CR3 ) </loc>
//      <o.15..15> DEP
//    </check>
//  </item>
//  


// -------------------------------  Field Item: USART1_CR3_DEM  -----------------------------------
// SVD Line: 12610

//  <item> SFDITEM_FIELD__USART1_CR3_DEM
//    <name> DEM </name>
//    <rw> 
//    <i> [Bit 14] RW (@ 0x40013808) Driver enable mode </i>
//    <check> 
//      <loc> ( (unsigned int) USART1_CR3 ) </loc>
//      <o.14..14> DEM
//    </check>
//  </item>
//  


// -------------------------------  Field Item: USART1_CR3_DDRE  ----------------------------------
// SVD Line: 12616

//  <item> SFDITEM_FIELD__USART1_CR3_DDRE
//    <name> DDRE </name>
//    <rw> 
//    <i> [Bit 13] RW (@ 0x40013808) DMA Disable on Reception  Error </i>
//    <check> 
//      <loc> ( (unsigned int) USART1_CR3 ) </loc>
//      <o.13..13> DDRE
//    </check>
//  </item>
//  


// ------------------------------  Field Item: USART1_CR3_OVRDIS  ---------------------------------
// SVD Line: 12623

//  <item> SFDITEM_FIELD__USART1_CR3_OVRDIS
//    <name> OVRDIS </name>
//    <rw> 
//    <i> [Bit 12] RW (@ 0x40013808) Overrun Disable </i>
//    <check> 
//      <loc> ( (unsigned int) USART1_CR3 ) </loc>
//      <o.12..12> OVRDIS
//    </check>
//  </item>
//  


// ------------------------------  Field Item: USART1_CR3_ONEBIT  ---------------------------------
// SVD Line: 12629

//  <item> SFDITEM_FIELD__USART1_CR3_ONEBIT
//    <name> ONEBIT </name>
//    <rw> 
//    <i> [Bit 11] RW (@ 0x40013808) One sample bit method  enable </i>
//    <check> 
//      <loc> ( (unsigned int) USART1_CR3 ) </loc>
//      <o.11..11> ONEBIT
//    </check>
//  </item>
//  


// ------------------------------  Field Item: USART1_CR3_CTSIE  ----------------------------------
// SVD Line: 12636

//  <item> SFDITEM_FIELD__USART1_CR3_CTSIE
//    <name> CTSIE </name>
//    <rw> 
//    <i> [Bit 10] RW (@ 0x40013808) CTS interrupt enable </i>
//    <check> 
//      <loc> ( (unsigned int) USART1_CR3 ) </loc>
//      <o.10..10> CTSIE
//    </check>
//  </item>
//  


// -------------------------------  Field Item: USART1_CR3_CTSE  ----------------------------------
// SVD Line: 12642

//  <item> SFDITEM_FIELD__USART1_CR3_CTSE
//    <name> CTSE </name>
//    <rw> 
//    <i> [Bit 9] RW (@ 0x40013808) CTS enable </i>
//    <check> 
//      <loc> ( (unsigned int) USART1_CR3 ) </loc>
//      <o.9..9> CTSE
//    </check>
//  </item>
//  


// -------------------------------  Field Item: USART1_CR3_RTSE  ----------------------------------
// SVD Line: 12648

//  <item> SFDITEM_FIELD__USART1_CR3_RTSE
//    <name> RTSE </name>
//    <rw> 
//    <i> [Bit 8] RW (@ 0x40013808) RTS enable </i>
//    <check> 
//      <loc> ( (unsigned int) USART1_CR3 ) </loc>
//      <o.8..8> RTSE
//    </check>
//  </item>
//  


// -------------------------------  Field Item: USART1_CR3_DMAT  ----------------------------------
// SVD Line: 12654

//  <item> SFDITEM_FIELD__USART1_CR3_DMAT
//    <name> DMAT </name>
//    <rw> 
//    <i> [Bit 7] RW (@ 0x40013808) DMA enable transmitter </i>
//    <check> 
//      <loc> ( (unsigned int) USART1_CR3 ) </loc>
//      <o.7..7> DMAT
//    </check>
//  </item>
//  


// -------------------------------  Field Item: USART1_CR3_DMAR  ----------------------------------
// SVD Line: 12660

//  <item> SFDITEM_FIELD__USART1_CR3_DMAR
//    <name> DMAR </name>
//    <rw> 
//    <i> [Bit 6] RW (@ 0x40013808) DMA enable receiver </i>
//    <check> 
//      <loc> ( (unsigned int) USART1_CR3 ) </loc>
//      <o.6..6> DMAR
//    </check>
//  </item>
//  


// -------------------------------  Field Item: USART1_CR3_SCEN  ----------------------------------
// SVD Line: 12666

//  <item> SFDITEM_FIELD__USART1_CR3_SCEN
//    <name> SCEN </name>
//    <rw> 
//    <i> [Bit 5] RW (@ 0x40013808) Smartcard mode enable </i>
//    <check> 
//      <loc> ( (unsigned int) USART1_CR3 ) </loc>
//      <o.5..5> SCEN
//    </check>
//  </item>
//  


// -------------------------------  Field Item: USART1_CR3_NACK  ----------------------------------
// SVD Line: 12672

//  <item> SFDITEM_FIELD__USART1_CR3_NACK
//    <name> NACK </name>
//    <rw> 
//    <i> [Bit 4] RW (@ 0x40013808) Smartcard NACK enable </i>
//    <check> 
//      <loc> ( (unsigned int) USART1_CR3 ) </loc>
//      <o.4..4> NACK
//    </check>
//  </item>
//  


// ------------------------------  Field Item: USART1_CR3_HDSEL  ----------------------------------
// SVD Line: 12678

//  <item> SFDITEM_FIELD__USART1_CR3_HDSEL
//    <name> HDSEL </name>
//    <rw> 
//    <i> [Bit 3] RW (@ 0x40013808) Half-duplex selection </i>
//    <check> 
//      <loc> ( (unsigned int) USART1_CR3 ) </loc>
//      <o.3..3> HDSEL
//    </check>
//  </item>
//  


// -------------------------------  Field Item: USART1_CR3_IRLP  ----------------------------------
// SVD Line: 12684

//  <item> SFDITEM_FIELD__USART1_CR3_IRLP
//    <name> IRLP </name>
//    <rw> 
//    <i> [Bit 2] RW (@ 0x40013808) Ir low-power </i>
//    <check> 
//      <loc> ( (unsigned int) USART1_CR3 ) </loc>
//      <o.2..2> IRLP
//    </check>
//  </item>
//  


// -------------------------------  Field Item: USART1_CR3_IREN  ----------------------------------
// SVD Line: 12690

//  <item> SFDITEM_FIELD__USART1_CR3_IREN
//    <name> IREN </name>
//    <rw> 
//    <i> [Bit 1] RW (@ 0x40013808) Ir mode enable </i>
//    <check> 
//      <loc> ( (unsigned int) USART1_CR3 ) </loc>
//      <o.1..1> IREN
//    </check>
//  </item>
//  


// -------------------------------  Field Item: USART1_CR3_EIE  -----------------------------------
// SVD Line: 12696

//  <item> SFDITEM_FIELD__USART1_CR3_EIE
//    <name> EIE </name>
//    <rw> 
//    <i> [Bit 0] RW (@ 0x40013808) Error interrupt enable </i>
//    <check> 
//      <loc> ( (unsigned int) USART1_CR3 ) </loc>
//      <o.0..0> EIE
//    </check>
//  </item>
//  


// -------------------------------  Register RTree: USART1_CR3  -----------------------------------
// SVD Line: 12540

//  <rtree> SFDITEM_REG__USART1_CR3
//    <name> CR3 </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x40013808) Control register 3 </i>
//    <loc> ( (unsigned int)((USART1_CR3 >> 0) & 0xFFFFFFFF), ((USART1_CR3 = (USART1_CR3 & ~(0xFFFEFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFEFFFF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__USART1_CR3_TXFTCFG </item>
//    <item> SFDITEM_FIELD__USART1_CR3_RXFTIE </item>
//    <item> SFDITEM_FIELD__USART1_CR3_RXFTCFG </item>
//    <item> SFDITEM_FIELD__USART1_CR3_TCBGTIE </item>
//    <item> SFDITEM_FIELD__USART1_CR3_TXFTIE </item>
//    <item> SFDITEM_FIELD__USART1_CR3_WUFIE </item>
//    <item> SFDITEM_FIELD__USART1_CR3_WUS </item>
//    <item> SFDITEM_FIELD__USART1_CR3_SCARCNT </item>
//    <item> SFDITEM_FIELD__USART1_CR3_DEP </item>
//    <item> SFDITEM_FIELD__USART1_CR3_DEM </item>
//    <item> SFDITEM_FIELD__USART1_CR3_DDRE </item>
//    <item> SFDITEM_FIELD__USART1_CR3_OVRDIS </item>
//    <item> SFDITEM_FIELD__USART1_CR3_ONEBIT </item>
//    <item> SFDITEM_FIELD__USART1_CR3_CTSIE </item>
//    <item> SFDITEM_FIELD__USART1_CR3_CTSE </item>
//    <item> SFDITEM_FIELD__USART1_CR3_RTSE </item>
//    <item> SFDITEM_FIELD__USART1_CR3_DMAT </item>
//    <item> SFDITEM_FIELD__USART1_CR3_DMAR </item>
//    <item> SFDITEM_FIELD__USART1_CR3_SCEN </item>
//    <item> SFDITEM_FIELD__USART1_CR3_NACK </item>
//    <item> SFDITEM_FIELD__USART1_CR3_HDSEL </item>
//    <item> SFDITEM_FIELD__USART1_CR3_IRLP </item>
//    <item> SFDITEM_FIELD__USART1_CR3_IREN </item>
//    <item> SFDITEM_FIELD__USART1_CR3_EIE </item>
//  </rtree>
//  


// ----------------------------  Register Item Address: USART1_BRR  -------------------------------
// SVD Line: 12704

unsigned int USART1_BRR __AT (0x4001380C);



// -----------------------------  Field Item: USART1_BRR_BRR_4_15  --------------------------------
// SVD Line: 12713

//  <item> SFDITEM_FIELD__USART1_BRR_BRR_4_15
//    <name> BRR_4_15 </name>
//    <rw> 
//    <i> [Bits 15..4] RW (@ 0x4001380C) BRR_4_15 </i>
//    <edit> 
//      <loc> ( (unsigned short)((USART1_BRR >> 4) & 0xFFF), ((USART1_BRR = (USART1_BRR & ~(0xFFFUL << 4 )) | ((unsigned long)(Gui_u16:GuiVal & 0xFFF) << 4 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -----------------------------  Field Item: USART1_BRR_BRR_0_3  ---------------------------------
// SVD Line: 12719

//  <item> SFDITEM_FIELD__USART1_BRR_BRR_0_3
//    <name> BRR_0_3 </name>
//    <rw> 
//    <i> [Bits 3..0] RW (@ 0x4001380C) BRR_0_3 </i>
//    <edit> 
//      <loc> ( (unsigned char)((USART1_BRR >> 0) & 0xF), ((USART1_BRR = (USART1_BRR & ~(0xFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -------------------------------  Register RTree: USART1_BRR  -----------------------------------
// SVD Line: 12704

//  <rtree> SFDITEM_REG__USART1_BRR
//    <name> BRR </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x4001380C) Baud rate register </i>
//    <loc> ( (unsigned int)((USART1_BRR >> 0) & 0xFFFFFFFF), ((USART1_BRR = (USART1_BRR & ~(0xFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__USART1_BRR_BRR_4_15 </item>
//    <item> SFDITEM_FIELD__USART1_BRR_BRR_0_3 </item>
//  </rtree>
//  


// ---------------------------  Register Item Address: USART1_GTPR  -------------------------------
// SVD Line: 12727

unsigned int USART1_GTPR __AT (0x40013810);



// -------------------------------  Field Item: USART1_GTPR_GT  -----------------------------------
// SVD Line: 12737

//  <item> SFDITEM_FIELD__USART1_GTPR_GT
//    <name> GT </name>
//    <rw> 
//    <i> [Bits 15..8] RW (@ 0x40013810) Guard time value </i>
//    <edit> 
//      <loc> ( (unsigned char)((USART1_GTPR >> 8) & 0xFF), ((USART1_GTPR = (USART1_GTPR & ~(0xFFUL << 8 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFF) << 8 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -------------------------------  Field Item: USART1_GTPR_PSC  ----------------------------------
// SVD Line: 12743

//  <item> SFDITEM_FIELD__USART1_GTPR_PSC
//    <name> PSC </name>
//    <rw> 
//    <i> [Bits 7..0] RW (@ 0x40013810) Prescaler value </i>
//    <edit> 
//      <loc> ( (unsigned char)((USART1_GTPR >> 0) & 0xFF), ((USART1_GTPR = (USART1_GTPR & ~(0xFFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -------------------------------  Register RTree: USART1_GTPR  ----------------------------------
// SVD Line: 12727

//  <rtree> SFDITEM_REG__USART1_GTPR
//    <name> GTPR </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x40013810) Guard time and prescaler  register </i>
//    <loc> ( (unsigned int)((USART1_GTPR >> 0) & 0xFFFFFFFF), ((USART1_GTPR = (USART1_GTPR & ~(0xFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__USART1_GTPR_GT </item>
//    <item> SFDITEM_FIELD__USART1_GTPR_PSC </item>
//  </rtree>
//  


// ---------------------------  Register Item Address: USART1_RTOR  -------------------------------
// SVD Line: 12751

unsigned int USART1_RTOR __AT (0x40013814);



// ------------------------------  Field Item: USART1_RTOR_BLEN  ----------------------------------
// SVD Line: 12760

//  <item> SFDITEM_FIELD__USART1_RTOR_BLEN
//    <name> BLEN </name>
//    <rw> 
//    <i> [Bits 31..24] RW (@ 0x40013814) Block Length </i>
//    <edit> 
//      <loc> ( (unsigned char)((USART1_RTOR >> 24) & 0xFF), ((USART1_RTOR = (USART1_RTOR & ~(0xFFUL << 24 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFF) << 24 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -------------------------------  Field Item: USART1_RTOR_RTO  ----------------------------------
// SVD Line: 12766

//  <item> SFDITEM_FIELD__USART1_RTOR_RTO
//    <name> RTO </name>
//    <rw> 
//    <i> [Bits 23..0] RW (@ 0x40013814) Receiver timeout value </i>
//    <edit> 
//      <loc> ( (unsigned int)((USART1_RTOR >> 0) & 0xFFFFFF), ((USART1_RTOR = (USART1_RTOR & ~(0xFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -------------------------------  Register RTree: USART1_RTOR  ----------------------------------
// SVD Line: 12751

//  <rtree> SFDITEM_REG__USART1_RTOR
//    <name> RTOR </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x40013814) Receiver timeout register </i>
//    <loc> ( (unsigned int)((USART1_RTOR >> 0) & 0xFFFFFFFF), ((USART1_RTOR = (USART1_RTOR & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__USART1_RTOR_BLEN </item>
//    <item> SFDITEM_FIELD__USART1_RTOR_RTO </item>
//  </rtree>
//  


// ----------------------------  Register Item Address: USART1_RQR  -------------------------------
// SVD Line: 12774

unsigned int USART1_RQR __AT (0x40013818);



// ------------------------------  Field Item: USART1_RQR_TXFRQ  ----------------------------------
// SVD Line: 12783

//  <item> SFDITEM_FIELD__USART1_RQR_TXFRQ
//    <name> TXFRQ </name>
//    <w> 
//    <i> [Bit 4] WO (@ 0x40013818) Transmit data flush  request </i>
//    <check> 
//      <loc> ( (unsigned int) USART1_RQR ) </loc>
//      <o.4..4> TXFRQ
//    </check>
//  </item>
//  


// ------------------------------  Field Item: USART1_RQR_RXFRQ  ----------------------------------
// SVD Line: 12790

//  <item> SFDITEM_FIELD__USART1_RQR_RXFRQ
//    <name> RXFRQ </name>
//    <w> 
//    <i> [Bit 3] WO (@ 0x40013818) Receive data flush request </i>
//    <check> 
//      <loc> ( (unsigned int) USART1_RQR ) </loc>
//      <o.3..3> RXFRQ
//    </check>
//  </item>
//  


// -------------------------------  Field Item: USART1_RQR_MMRQ  ----------------------------------
// SVD Line: 12796

//  <item> SFDITEM_FIELD__USART1_RQR_MMRQ
//    <name> MMRQ </name>
//    <w> 
//    <i> [Bit 2] WO (@ 0x40013818) Mute mode request </i>
//    <check> 
//      <loc> ( (unsigned int) USART1_RQR ) </loc>
//      <o.2..2> MMRQ
//    </check>
//  </item>
//  


// ------------------------------  Field Item: USART1_RQR_SBKRQ  ----------------------------------
// SVD Line: 12802

//  <item> SFDITEM_FIELD__USART1_RQR_SBKRQ
//    <name> SBKRQ </name>
//    <w> 
//    <i> [Bit 1] WO (@ 0x40013818) Send break request </i>
//    <check> 
//      <loc> ( (unsigned int) USART1_RQR ) </loc>
//      <o.1..1> SBKRQ
//    </check>
//  </item>
//  


// ------------------------------  Field Item: USART1_RQR_ABRRQ  ----------------------------------
// SVD Line: 12808

//  <item> SFDITEM_FIELD__USART1_RQR_ABRRQ
//    <name> ABRRQ </name>
//    <w> 
//    <i> [Bit 0] WO (@ 0x40013818) Auto baud rate request </i>
//    <check> 
//      <loc> ( (unsigned int) USART1_RQR ) </loc>
//      <o.0..0> ABRRQ
//    </check>
//  </item>
//  


// -------------------------------  Register RTree: USART1_RQR  -----------------------------------
// SVD Line: 12774

//  <rtree> SFDITEM_REG__USART1_RQR
//    <name> RQR </name>
//    <w> 
//    <i> [Bits 31..0] WO (@ 0x40013818) Request register </i>
//    <loc> ( (unsigned int)((USART1_RQR >> 0) & 0xFFFFFFFF), ((USART1_RQR = (USART1_RQR & ~(0x1FUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0x1F) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__USART1_RQR_TXFRQ </item>
//    <item> SFDITEM_FIELD__USART1_RQR_RXFRQ </item>
//    <item> SFDITEM_FIELD__USART1_RQR_MMRQ </item>
//    <item> SFDITEM_FIELD__USART1_RQR_SBKRQ </item>
//    <item> SFDITEM_FIELD__USART1_RQR_ABRRQ </item>
//  </rtree>
//  


// ----------------------------  Register Item Address: USART1_ISR  -------------------------------
// SVD Line: 12816

unsigned int USART1_ISR __AT (0x4001381C);



// -------------------------------  Field Item: USART1_ISR_TXFT  ----------------------------------
// SVD Line: 12826

//  <item> SFDITEM_FIELD__USART1_ISR_TXFT
//    <name> TXFT </name>
//    <r> 
//    <i> [Bit 27] RO (@ 0x4001381C) TXFIFO threshold flag </i>
//    <check> 
//      <loc> ( (unsigned int) USART1_ISR ) </loc>
//      <o.27..27> TXFT
//    </check>
//  </item>
//  


// -------------------------------  Field Item: USART1_ISR_RXFT  ----------------------------------
// SVD Line: 12832

//  <item> SFDITEM_FIELD__USART1_ISR_RXFT
//    <name> RXFT </name>
//    <r> 
//    <i> [Bit 26] RO (@ 0x4001381C) RXFIFO threshold flag </i>
//    <check> 
//      <loc> ( (unsigned int) USART1_ISR ) </loc>
//      <o.26..26> RXFT
//    </check>
//  </item>
//  


// ------------------------------  Field Item: USART1_ISR_TCBGT  ----------------------------------
// SVD Line: 12838

//  <item> SFDITEM_FIELD__USART1_ISR_TCBGT
//    <name> TCBGT </name>
//    <r> 
//    <i> [Bit 25] RO (@ 0x4001381C) Transmission complete before guard time  flag </i>
//    <check> 
//      <loc> ( (unsigned int) USART1_ISR ) </loc>
//      <o.25..25> TCBGT
//    </check>
//  </item>
//  


// -------------------------------  Field Item: USART1_ISR_RXFF  ----------------------------------
// SVD Line: 12845

//  <item> SFDITEM_FIELD__USART1_ISR_RXFF
//    <name> RXFF </name>
//    <r> 
//    <i> [Bit 24] RO (@ 0x4001381C) RXFIFO Full </i>
//    <check> 
//      <loc> ( (unsigned int) USART1_ISR ) </loc>
//      <o.24..24> RXFF
//    </check>
//  </item>
//  


// -------------------------------  Field Item: USART1_ISR_TXFE  ----------------------------------
// SVD Line: 12851

//  <item> SFDITEM_FIELD__USART1_ISR_TXFE
//    <name> TXFE </name>
//    <r> 
//    <i> [Bit 23] RO (@ 0x4001381C) TXFIFO Empty </i>
//    <check> 
//      <loc> ( (unsigned int) USART1_ISR ) </loc>
//      <o.23..23> TXFE
//    </check>
//  </item>
//  


// ------------------------------  Field Item: USART1_ISR_REACK  ----------------------------------
// SVD Line: 12857

//  <item> SFDITEM_FIELD__USART1_ISR_REACK
//    <name> REACK </name>
//    <r> 
//    <i> [Bit 22] RO (@ 0x4001381C) REACK </i>
//    <check> 
//      <loc> ( (unsigned int) USART1_ISR ) </loc>
//      <o.22..22> REACK
//    </check>
//  </item>
//  


// ------------------------------  Field Item: USART1_ISR_TEACK  ----------------------------------
// SVD Line: 12863

//  <item> SFDITEM_FIELD__USART1_ISR_TEACK
//    <name> TEACK </name>
//    <r> 
//    <i> [Bit 21] RO (@ 0x4001381C) TEACK </i>
//    <check> 
//      <loc> ( (unsigned int) USART1_ISR ) </loc>
//      <o.21..21> TEACK
//    </check>
//  </item>
//  


// -------------------------------  Field Item: USART1_ISR_WUF  -----------------------------------
// SVD Line: 12869

//  <item> SFDITEM_FIELD__USART1_ISR_WUF
//    <name> WUF </name>
//    <r> 
//    <i> [Bit 20] RO (@ 0x4001381C) WUF </i>
//    <check> 
//      <loc> ( (unsigned int) USART1_ISR ) </loc>
//      <o.20..20> WUF
//    </check>
//  </item>
//  


// -------------------------------  Field Item: USART1_ISR_RWU  -----------------------------------
// SVD Line: 12875

//  <item> SFDITEM_FIELD__USART1_ISR_RWU
//    <name> RWU </name>
//    <r> 
//    <i> [Bit 19] RO (@ 0x4001381C) RWU </i>
//    <check> 
//      <loc> ( (unsigned int) USART1_ISR ) </loc>
//      <o.19..19> RWU
//    </check>
//  </item>
//  


// -------------------------------  Field Item: USART1_ISR_SBKF  ----------------------------------
// SVD Line: 12881

//  <item> SFDITEM_FIELD__USART1_ISR_SBKF
//    <name> SBKF </name>
//    <r> 
//    <i> [Bit 18] RO (@ 0x4001381C) SBKF </i>
//    <check> 
//      <loc> ( (unsigned int) USART1_ISR ) </loc>
//      <o.18..18> SBKF
//    </check>
//  </item>
//  


// -------------------------------  Field Item: USART1_ISR_CMF  -----------------------------------
// SVD Line: 12887

//  <item> SFDITEM_FIELD__USART1_ISR_CMF
//    <name> CMF </name>
//    <r> 
//    <i> [Bit 17] RO (@ 0x4001381C) CMF </i>
//    <check> 
//      <loc> ( (unsigned int) USART1_ISR ) </loc>
//      <o.17..17> CMF
//    </check>
//  </item>
//  


// -------------------------------  Field Item: USART1_ISR_BUSY  ----------------------------------
// SVD Line: 12893

//  <item> SFDITEM_FIELD__USART1_ISR_BUSY
//    <name> BUSY </name>
//    <r> 
//    <i> [Bit 16] RO (@ 0x4001381C) BUSY </i>
//    <check> 
//      <loc> ( (unsigned int) USART1_ISR ) </loc>
//      <o.16..16> BUSY
//    </check>
//  </item>
//  


// -------------------------------  Field Item: USART1_ISR_ABRF  ----------------------------------
// SVD Line: 12899

//  <item> SFDITEM_FIELD__USART1_ISR_ABRF
//    <name> ABRF </name>
//    <r> 
//    <i> [Bit 15] RO (@ 0x4001381C) ABRF </i>
//    <check> 
//      <loc> ( (unsigned int) USART1_ISR ) </loc>
//      <o.15..15> ABRF
//    </check>
//  </item>
//  


// -------------------------------  Field Item: USART1_ISR_ABRE  ----------------------------------
// SVD Line: 12905

//  <item> SFDITEM_FIELD__USART1_ISR_ABRE
//    <name> ABRE </name>
//    <r> 
//    <i> [Bit 14] RO (@ 0x4001381C) ABRE </i>
//    <check> 
//      <loc> ( (unsigned int) USART1_ISR ) </loc>
//      <o.14..14> ABRE
//    </check>
//  </item>
//  


// -------------------------------  Field Item: USART1_ISR_UDR  -----------------------------------
// SVD Line: 12911

//  <item> SFDITEM_FIELD__USART1_ISR_UDR
//    <name> UDR </name>
//    <r> 
//    <i> [Bit 13] RO (@ 0x4001381C) SPI slave underrun error  flag </i>
//    <check> 
//      <loc> ( (unsigned int) USART1_ISR ) </loc>
//      <o.13..13> UDR
//    </check>
//  </item>
//  


// -------------------------------  Field Item: USART1_ISR_EOBF  ----------------------------------
// SVD Line: 12918

//  <item> SFDITEM_FIELD__USART1_ISR_EOBF
//    <name> EOBF </name>
//    <r> 
//    <i> [Bit 12] RO (@ 0x4001381C) EOBF </i>
//    <check> 
//      <loc> ( (unsigned int) USART1_ISR ) </loc>
//      <o.12..12> EOBF
//    </check>
//  </item>
//  


// -------------------------------  Field Item: USART1_ISR_RTOF  ----------------------------------
// SVD Line: 12924

//  <item> SFDITEM_FIELD__USART1_ISR_RTOF
//    <name> RTOF </name>
//    <r> 
//    <i> [Bit 11] RO (@ 0x4001381C) RTOF </i>
//    <check> 
//      <loc> ( (unsigned int) USART1_ISR ) </loc>
//      <o.11..11> RTOF
//    </check>
//  </item>
//  


// -------------------------------  Field Item: USART1_ISR_CTS  -----------------------------------
// SVD Line: 12930

//  <item> SFDITEM_FIELD__USART1_ISR_CTS
//    <name> CTS </name>
//    <r> 
//    <i> [Bit 10] RO (@ 0x4001381C) CTS </i>
//    <check> 
//      <loc> ( (unsigned int) USART1_ISR ) </loc>
//      <o.10..10> CTS
//    </check>
//  </item>
//  


// ------------------------------  Field Item: USART1_ISR_CTSIF  ----------------------------------
// SVD Line: 12936

//  <item> SFDITEM_FIELD__USART1_ISR_CTSIF
//    <name> CTSIF </name>
//    <r> 
//    <i> [Bit 9] RO (@ 0x4001381C) CTSIF </i>
//    <check> 
//      <loc> ( (unsigned int) USART1_ISR ) </loc>
//      <o.9..9> CTSIF
//    </check>
//  </item>
//  


// -------------------------------  Field Item: USART1_ISR_LBDF  ----------------------------------
// SVD Line: 12942

//  <item> SFDITEM_FIELD__USART1_ISR_LBDF
//    <name> LBDF </name>
//    <r> 
//    <i> [Bit 8] RO (@ 0x4001381C) LBDF </i>
//    <check> 
//      <loc> ( (unsigned int) USART1_ISR ) </loc>
//      <o.8..8> LBDF
//    </check>
//  </item>
//  


// -------------------------------  Field Item: USART1_ISR_TXE  -----------------------------------
// SVD Line: 12948

//  <item> SFDITEM_FIELD__USART1_ISR_TXE
//    <name> TXE </name>
//    <r> 
//    <i> [Bit 7] RO (@ 0x4001381C) TXE </i>
//    <check> 
//      <loc> ( (unsigned int) USART1_ISR ) </loc>
//      <o.7..7> TXE
//    </check>
//  </item>
//  


// --------------------------------  Field Item: USART1_ISR_TC  -----------------------------------
// SVD Line: 12954

//  <item> SFDITEM_FIELD__USART1_ISR_TC
//    <name> TC </name>
//    <r> 
//    <i> [Bit 6] RO (@ 0x4001381C) TC </i>
//    <check> 
//      <loc> ( (unsigned int) USART1_ISR ) </loc>
//      <o.6..6> TC
//    </check>
//  </item>
//  


// -------------------------------  Field Item: USART1_ISR_RXNE  ----------------------------------
// SVD Line: 12960

//  <item> SFDITEM_FIELD__USART1_ISR_RXNE
//    <name> RXNE </name>
//    <r> 
//    <i> [Bit 5] RO (@ 0x4001381C) RXNE </i>
//    <check> 
//      <loc> ( (unsigned int) USART1_ISR ) </loc>
//      <o.5..5> RXNE
//    </check>
//  </item>
//  


// -------------------------------  Field Item: USART1_ISR_IDLE  ----------------------------------
// SVD Line: 12966

//  <item> SFDITEM_FIELD__USART1_ISR_IDLE
//    <name> IDLE </name>
//    <r> 
//    <i> [Bit 4] RO (@ 0x4001381C) IDLE </i>
//    <check> 
//      <loc> ( (unsigned int) USART1_ISR ) </loc>
//      <o.4..4> IDLE
//    </check>
//  </item>
//  


// -------------------------------  Field Item: USART1_ISR_ORE  -----------------------------------
// SVD Line: 12972

//  <item> SFDITEM_FIELD__USART1_ISR_ORE
//    <name> ORE </name>
//    <r> 
//    <i> [Bit 3] RO (@ 0x4001381C) ORE </i>
//    <check> 
//      <loc> ( (unsigned int) USART1_ISR ) </loc>
//      <o.3..3> ORE
//    </check>
//  </item>
//  


// --------------------------------  Field Item: USART1_ISR_NF  -----------------------------------
// SVD Line: 12978

//  <item> SFDITEM_FIELD__USART1_ISR_NF
//    <name> NF </name>
//    <r> 
//    <i> [Bit 2] RO (@ 0x4001381C) NF </i>
//    <check> 
//      <loc> ( (unsigned int) USART1_ISR ) </loc>
//      <o.2..2> NF
//    </check>
//  </item>
//  


// --------------------------------  Field Item: USART1_ISR_FE  -----------------------------------
// SVD Line: 12984

//  <item> SFDITEM_FIELD__USART1_ISR_FE
//    <name> FE </name>
//    <r> 
//    <i> [Bit 1] RO (@ 0x4001381C) FE </i>
//    <check> 
//      <loc> ( (unsigned int) USART1_ISR ) </loc>
//      <o.1..1> FE
//    </check>
//  </item>
//  


// --------------------------------  Field Item: USART1_ISR_PE  -----------------------------------
// SVD Line: 12990

//  <item> SFDITEM_FIELD__USART1_ISR_PE
//    <name> PE </name>
//    <r> 
//    <i> [Bit 0] RO (@ 0x4001381C) PE </i>
//    <check> 
//      <loc> ( (unsigned int) USART1_ISR ) </loc>
//      <o.0..0> PE
//    </check>
//  </item>
//  


// -------------------------------  Register RTree: USART1_ISR  -----------------------------------
// SVD Line: 12816

//  <rtree> SFDITEM_REG__USART1_ISR
//    <name> ISR </name>
//    <r> 
//    <i> [Bits 31..0] RO (@ 0x4001381C) Interrupt & status  register </i>
//    <loc> ( (unsigned int)((USART1_ISR >> 0) & 0xFFFFFFFF) ) </loc>
//    <item> SFDITEM_FIELD__USART1_ISR_TXFT </item>
//    <item> SFDITEM_FIELD__USART1_ISR_RXFT </item>
//    <item> SFDITEM_FIELD__USART1_ISR_TCBGT </item>
//    <item> SFDITEM_FIELD__USART1_ISR_RXFF </item>
//    <item> SFDITEM_FIELD__USART1_ISR_TXFE </item>
//    <item> SFDITEM_FIELD__USART1_ISR_REACK </item>
//    <item> SFDITEM_FIELD__USART1_ISR_TEACK </item>
//    <item> SFDITEM_FIELD__USART1_ISR_WUF </item>
//    <item> SFDITEM_FIELD__USART1_ISR_RWU </item>
//    <item> SFDITEM_FIELD__USART1_ISR_SBKF </item>
//    <item> SFDITEM_FIELD__USART1_ISR_CMF </item>
//    <item> SFDITEM_FIELD__USART1_ISR_BUSY </item>
//    <item> SFDITEM_FIELD__USART1_ISR_ABRF </item>
//    <item> SFDITEM_FIELD__USART1_ISR_ABRE </item>
//    <item> SFDITEM_FIELD__USART1_ISR_UDR </item>
//    <item> SFDITEM_FIELD__USART1_ISR_EOBF </item>
//    <item> SFDITEM_FIELD__USART1_ISR_RTOF </item>
//    <item> SFDITEM_FIELD__USART1_ISR_CTS </item>
//    <item> SFDITEM_FIELD__USART1_ISR_CTSIF </item>
//    <item> SFDITEM_FIELD__USART1_ISR_LBDF </item>
//    <item> SFDITEM_FIELD__USART1_ISR_TXE </item>
//    <item> SFDITEM_FIELD__USART1_ISR_TC </item>
//    <item> SFDITEM_FIELD__USART1_ISR_RXNE </item>
//    <item> SFDITEM_FIELD__USART1_ISR_IDLE </item>
//    <item> SFDITEM_FIELD__USART1_ISR_ORE </item>
//    <item> SFDITEM_FIELD__USART1_ISR_NF </item>
//    <item> SFDITEM_FIELD__USART1_ISR_FE </item>
//    <item> SFDITEM_FIELD__USART1_ISR_PE </item>
//  </rtree>
//  


// ----------------------------  Register Item Address: USART1_ICR  -------------------------------
// SVD Line: 12998

unsigned int USART1_ICR __AT (0x40013820);



// -------------------------------  Field Item: USART1_ICR_WUCF  ----------------------------------
// SVD Line: 13007

//  <item> SFDITEM_FIELD__USART1_ICR_WUCF
//    <name> WUCF </name>
//    <w> 
//    <i> [Bit 20] WO (@ 0x40013820) Wakeup from Stop mode clear  flag </i>
//    <check> 
//      <loc> ( (unsigned int) USART1_ICR ) </loc>
//      <o.20..20> WUCF
//    </check>
//  </item>
//  


// -------------------------------  Field Item: USART1_ICR_CMCF  ----------------------------------
// SVD Line: 13014

//  <item> SFDITEM_FIELD__USART1_ICR_CMCF
//    <name> CMCF </name>
//    <w> 
//    <i> [Bit 17] WO (@ 0x40013820) Character match clear flag </i>
//    <check> 
//      <loc> ( (unsigned int) USART1_ICR ) </loc>
//      <o.17..17> CMCF
//    </check>
//  </item>
//  


// ------------------------------  Field Item: USART1_ICR_UDRCF  ----------------------------------
// SVD Line: 13020

//  <item> SFDITEM_FIELD__USART1_ICR_UDRCF
//    <name> UDRCF </name>
//    <w> 
//    <i> [Bit 13] WO (@ 0x40013820) SPI slave underrun clear  flag </i>
//    <check> 
//      <loc> ( (unsigned int) USART1_ICR ) </loc>
//      <o.13..13> UDRCF
//    </check>
//  </item>
//  


// ------------------------------  Field Item: USART1_ICR_EOBCF  ----------------------------------
// SVD Line: 13027

//  <item> SFDITEM_FIELD__USART1_ICR_EOBCF
//    <name> EOBCF </name>
//    <w> 
//    <i> [Bit 12] WO (@ 0x40013820) End of block clear flag </i>
//    <check> 
//      <loc> ( (unsigned int) USART1_ICR ) </loc>
//      <o.12..12> EOBCF
//    </check>
//  </item>
//  


// ------------------------------  Field Item: USART1_ICR_RTOCF  ----------------------------------
// SVD Line: 13033

//  <item> SFDITEM_FIELD__USART1_ICR_RTOCF
//    <name> RTOCF </name>
//    <w> 
//    <i> [Bit 11] WO (@ 0x40013820) Receiver timeout clear  flag </i>
//    <check> 
//      <loc> ( (unsigned int) USART1_ICR ) </loc>
//      <o.11..11> RTOCF
//    </check>
//  </item>
//  


// ------------------------------  Field Item: USART1_ICR_CTSCF  ----------------------------------
// SVD Line: 13040

//  <item> SFDITEM_FIELD__USART1_ICR_CTSCF
//    <name> CTSCF </name>
//    <w> 
//    <i> [Bit 9] WO (@ 0x40013820) CTS clear flag </i>
//    <check> 
//      <loc> ( (unsigned int) USART1_ICR ) </loc>
//      <o.9..9> CTSCF
//    </check>
//  </item>
//  


// ------------------------------  Field Item: USART1_ICR_LBDCF  ----------------------------------
// SVD Line: 13046

//  <item> SFDITEM_FIELD__USART1_ICR_LBDCF
//    <name> LBDCF </name>
//    <w> 
//    <i> [Bit 8] WO (@ 0x40013820) LIN break detection clear  flag </i>
//    <check> 
//      <loc> ( (unsigned int) USART1_ICR ) </loc>
//      <o.8..8> LBDCF
//    </check>
//  </item>
//  


// -----------------------------  Field Item: USART1_ICR_TCBGTCF  ---------------------------------
// SVD Line: 13053

//  <item> SFDITEM_FIELD__USART1_ICR_TCBGTCF
//    <name> TCBGTCF </name>
//    <w> 
//    <i> [Bit 7] WO (@ 0x40013820) Transmission complete before Guard time  clear flag </i>
//    <check> 
//      <loc> ( (unsigned int) USART1_ICR ) </loc>
//      <o.7..7> TCBGTCF
//    </check>
//  </item>
//  


// -------------------------------  Field Item: USART1_ICR_TCCF  ----------------------------------
// SVD Line: 13060

//  <item> SFDITEM_FIELD__USART1_ICR_TCCF
//    <name> TCCF </name>
//    <w> 
//    <i> [Bit 6] WO (@ 0x40013820) Transmission complete clear  flag </i>
//    <check> 
//      <loc> ( (unsigned int) USART1_ICR ) </loc>
//      <o.6..6> TCCF
//    </check>
//  </item>
//  


// ------------------------------  Field Item: USART1_ICR_TXFECF  ---------------------------------
// SVD Line: 13067

//  <item> SFDITEM_FIELD__USART1_ICR_TXFECF
//    <name> TXFECF </name>
//    <w> 
//    <i> [Bit 5] WO (@ 0x40013820) TXFIFO empty clear flag </i>
//    <check> 
//      <loc> ( (unsigned int) USART1_ICR ) </loc>
//      <o.5..5> TXFECF
//    </check>
//  </item>
//  


// ------------------------------  Field Item: USART1_ICR_IDLECF  ---------------------------------
// SVD Line: 13073

//  <item> SFDITEM_FIELD__USART1_ICR_IDLECF
//    <name> IDLECF </name>
//    <w> 
//    <i> [Bit 4] WO (@ 0x40013820) Idle line detected clear  flag </i>
//    <check> 
//      <loc> ( (unsigned int) USART1_ICR ) </loc>
//      <o.4..4> IDLECF
//    </check>
//  </item>
//  


// ------------------------------  Field Item: USART1_ICR_ORECF  ----------------------------------
// SVD Line: 13080

//  <item> SFDITEM_FIELD__USART1_ICR_ORECF
//    <name> ORECF </name>
//    <w> 
//    <i> [Bit 3] WO (@ 0x40013820) Overrun error clear flag </i>
//    <check> 
//      <loc> ( (unsigned int) USART1_ICR ) </loc>
//      <o.3..3> ORECF
//    </check>
//  </item>
//  


// -------------------------------  Field Item: USART1_ICR_NCF  -----------------------------------
// SVD Line: 13086

//  <item> SFDITEM_FIELD__USART1_ICR_NCF
//    <name> NCF </name>
//    <w> 
//    <i> [Bit 2] WO (@ 0x40013820) Noise detected clear flag </i>
//    <check> 
//      <loc> ( (unsigned int) USART1_ICR ) </loc>
//      <o.2..2> NCF
//    </check>
//  </item>
//  


// -------------------------------  Field Item: USART1_ICR_FECF  ----------------------------------
// SVD Line: 13092

//  <item> SFDITEM_FIELD__USART1_ICR_FECF
//    <name> FECF </name>
//    <w> 
//    <i> [Bit 1] WO (@ 0x40013820) Framing error clear flag </i>
//    <check> 
//      <loc> ( (unsigned int) USART1_ICR ) </loc>
//      <o.1..1> FECF
//    </check>
//  </item>
//  


// -------------------------------  Field Item: USART1_ICR_PECF  ----------------------------------
// SVD Line: 13098

//  <item> SFDITEM_FIELD__USART1_ICR_PECF
//    <name> PECF </name>
//    <w> 
//    <i> [Bit 0] WO (@ 0x40013820) Parity error clear flag </i>
//    <check> 
//      <loc> ( (unsigned int) USART1_ICR ) </loc>
//      <o.0..0> PECF
//    </check>
//  </item>
//  


// -------------------------------  Register RTree: USART1_ICR  -----------------------------------
// SVD Line: 12998

//  <rtree> SFDITEM_REG__USART1_ICR
//    <name> ICR </name>
//    <w> 
//    <i> [Bits 31..0] WO (@ 0x40013820) Interrupt flag clear register </i>
//    <loc> ( (unsigned int)((USART1_ICR >> 0) & 0xFFFFFFFF), ((USART1_ICR = (USART1_ICR & ~(0x123BFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0x123BFF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__USART1_ICR_WUCF </item>
//    <item> SFDITEM_FIELD__USART1_ICR_CMCF </item>
//    <item> SFDITEM_FIELD__USART1_ICR_UDRCF </item>
//    <item> SFDITEM_FIELD__USART1_ICR_EOBCF </item>
//    <item> SFDITEM_FIELD__USART1_ICR_RTOCF </item>
//    <item> SFDITEM_FIELD__USART1_ICR_CTSCF </item>
//    <item> SFDITEM_FIELD__USART1_ICR_LBDCF </item>
//    <item> SFDITEM_FIELD__USART1_ICR_TCBGTCF </item>
//    <item> SFDITEM_FIELD__USART1_ICR_TCCF </item>
//    <item> SFDITEM_FIELD__USART1_ICR_TXFECF </item>
//    <item> SFDITEM_FIELD__USART1_ICR_IDLECF </item>
//    <item> SFDITEM_FIELD__USART1_ICR_ORECF </item>
//    <item> SFDITEM_FIELD__USART1_ICR_NCF </item>
//    <item> SFDITEM_FIELD__USART1_ICR_FECF </item>
//    <item> SFDITEM_FIELD__USART1_ICR_PECF </item>
//  </rtree>
//  


// ----------------------------  Register Item Address: USART1_RDR  -------------------------------
// SVD Line: 13106

unsigned int USART1_RDR __AT (0x40013824);



// -------------------------------  Field Item: USART1_RDR_RDR  -----------------------------------
// SVD Line: 13115

//  <item> SFDITEM_FIELD__USART1_RDR_RDR
//    <name> RDR </name>
//    <r> 
//    <i> [Bits 8..0] RO (@ 0x40013824) Receive data value </i>
//    <edit> 
//      <loc> ( (unsigned short)((USART1_RDR >> 0) & 0x1FF) ) </loc>
//    </edit>
//  </item>
//  


// -------------------------------  Register RTree: USART1_RDR  -----------------------------------
// SVD Line: 13106

//  <rtree> SFDITEM_REG__USART1_RDR
//    <name> RDR </name>
//    <r> 
//    <i> [Bits 31..0] RO (@ 0x40013824) Receive data register </i>
//    <loc> ( (unsigned int)((USART1_RDR >> 0) & 0xFFFFFFFF) ) </loc>
//    <item> SFDITEM_FIELD__USART1_RDR_RDR </item>
//  </rtree>
//  


// ----------------------------  Register Item Address: USART1_TDR  -------------------------------
// SVD Line: 13123

unsigned int USART1_TDR __AT (0x40013828);



// -------------------------------  Field Item: USART1_TDR_TDR  -----------------------------------
// SVD Line: 13132

//  <item> SFDITEM_FIELD__USART1_TDR_TDR
//    <name> TDR </name>
//    <rw> 
//    <i> [Bits 8..0] RW (@ 0x40013828) Transmit data value </i>
//    <edit> 
//      <loc> ( (unsigned short)((USART1_TDR >> 0) & 0x1FF), ((USART1_TDR = (USART1_TDR & ~(0x1FFUL << 0 )) | ((unsigned long)(Gui_u16:GuiVal & 0x1FF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -------------------------------  Register RTree: USART1_TDR  -----------------------------------
// SVD Line: 13123

//  <rtree> SFDITEM_REG__USART1_TDR
//    <name> TDR </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x40013828) Transmit data register </i>
//    <loc> ( (unsigned int)((USART1_TDR >> 0) & 0xFFFFFFFF), ((USART1_TDR = (USART1_TDR & ~(0x1FFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0x1FF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__USART1_TDR_TDR </item>
//  </rtree>
//  


// ---------------------------  Register Item Address: USART1_PRESC  ------------------------------
// SVD Line: 13140

unsigned int USART1_PRESC __AT (0x4001382C);



// ---------------------------  Field Item: USART1_PRESC_PRESCALER  -------------------------------
// SVD Line: 13149

//  <item> SFDITEM_FIELD__USART1_PRESC_PRESCALER
//    <name> PRESCALER </name>
//    <rw> 
//    <i> [Bits 3..0] RW (@ 0x4001382C) Clock prescaler </i>
//    <edit> 
//      <loc> ( (unsigned char)((USART1_PRESC >> 0) & 0xF), ((USART1_PRESC = (USART1_PRESC & ~(0xFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ------------------------------  Register RTree: USART1_PRESC  ----------------------------------
// SVD Line: 13140

//  <rtree> SFDITEM_REG__USART1_PRESC
//    <name> PRESC </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x4001382C) Prescaler register </i>
//    <loc> ( (unsigned int)((USART1_PRESC >> 0) & 0xFFFFFFFF), ((USART1_PRESC = (USART1_PRESC & ~(0xFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__USART1_PRESC_PRESCALER </item>
//  </rtree>
//  


// ---------------------------------  Peripheral View: USART1  ------------------------------------
// SVD Line: 12219

//  <view> USART1
//    <name> USART1 </name>
//    <item> SFDITEM_REG__USART1_CR1 </item>
//    <item> SFDITEM_REG__USART1_CR2 </item>
//    <item> SFDITEM_REG__USART1_CR3 </item>
//    <item> SFDITEM_REG__USART1_BRR </item>
//    <item> SFDITEM_REG__USART1_GTPR </item>
//    <item> SFDITEM_REG__USART1_RTOR </item>
//    <item> SFDITEM_REG__USART1_RQR </item>
//    <item> SFDITEM_REG__USART1_ISR </item>
//    <item> SFDITEM_REG__USART1_ICR </item>
//    <item> SFDITEM_REG__USART1_RDR </item>
//    <item> SFDITEM_REG__USART1_TDR </item>
//    <item> SFDITEM_REG__USART1_PRESC </item>
//  </view>
//  


// ----------------------------  Register Item Address: USART2_CR1  -------------------------------
// SVD Line: 12236

unsigned int USART2_CR1 __AT (0x40004400);



// ------------------------------  Field Item: USART2_CR1_RXFFIE  ---------------------------------
// SVD Line: 12245

//  <item> SFDITEM_FIELD__USART2_CR1_RXFFIE
//    <name> RXFFIE </name>
//    <rw> 
//    <i> [Bit 31] RW (@ 0x40004400) RXFIFO Full interrupt  enable </i>
//    <check> 
//      <loc> ( (unsigned int) USART2_CR1 ) </loc>
//      <o.31..31> RXFFIE
//    </check>
//  </item>
//  


// ------------------------------  Field Item: USART2_CR1_TXFEIE  ---------------------------------
// SVD Line: 12252

//  <item> SFDITEM_FIELD__USART2_CR1_TXFEIE
//    <name> TXFEIE </name>
//    <rw> 
//    <i> [Bit 30] RW (@ 0x40004400) TXFIFO empty interrupt  enable </i>
//    <check> 
//      <loc> ( (unsigned int) USART2_CR1 ) </loc>
//      <o.30..30> TXFEIE
//    </check>
//  </item>
//  


// ------------------------------  Field Item: USART2_CR1_FIFOEN  ---------------------------------
// SVD Line: 12259

//  <item> SFDITEM_FIELD__USART2_CR1_FIFOEN
//    <name> FIFOEN </name>
//    <rw> 
//    <i> [Bit 29] RW (@ 0x40004400) FIFO mode enable </i>
//    <check> 
//      <loc> ( (unsigned int) USART2_CR1 ) </loc>
//      <o.29..29> FIFOEN
//    </check>
//  </item>
//  


// --------------------------------  Field Item: USART2_CR1_M1  -----------------------------------
// SVD Line: 12265

//  <item> SFDITEM_FIELD__USART2_CR1_M1
//    <name> M1 </name>
//    <rw> 
//    <i> [Bit 28] RW (@ 0x40004400) Word length </i>
//    <check> 
//      <loc> ( (unsigned int) USART2_CR1 ) </loc>
//      <o.28..28> M1
//    </check>
//  </item>
//  


// ------------------------------  Field Item: USART2_CR1_EOBIE  ----------------------------------
// SVD Line: 12271

//  <item> SFDITEM_FIELD__USART2_CR1_EOBIE
//    <name> EOBIE </name>
//    <rw> 
//    <i> [Bit 27] RW (@ 0x40004400) End of Block interrupt  enable </i>
//    <check> 
//      <loc> ( (unsigned int) USART2_CR1 ) </loc>
//      <o.27..27> EOBIE
//    </check>
//  </item>
//  


// ------------------------------  Field Item: USART2_CR1_RTOIE  ----------------------------------
// SVD Line: 12278

//  <item> SFDITEM_FIELD__USART2_CR1_RTOIE
//    <name> RTOIE </name>
//    <rw> 
//    <i> [Bit 26] RW (@ 0x40004400) Receiver timeout interrupt  enable </i>
//    <check> 
//      <loc> ( (unsigned int) USART2_CR1 ) </loc>
//      <o.26..26> RTOIE
//    </check>
//  </item>
//  


// -------------------------------  Field Item: USART2_CR1_DEAT  ----------------------------------
// SVD Line: 12285

//  <item> SFDITEM_FIELD__USART2_CR1_DEAT
//    <name> DEAT </name>
//    <rw> 
//    <i> [Bits 25..21] RW (@ 0x40004400) DEAT </i>
//    <edit> 
//      <loc> ( (unsigned char)((USART2_CR1 >> 21) & 0x1F), ((USART2_CR1 = (USART2_CR1 & ~(0x1FUL << 21 )) | ((unsigned long)(Gui_u8:GuiVal & 0x1F) << 21 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -------------------------------  Field Item: USART2_CR1_DEDT  ----------------------------------
// SVD Line: 12291

//  <item> SFDITEM_FIELD__USART2_CR1_DEDT
//    <name> DEDT </name>
//    <rw> 
//    <i> [Bits 20..16] RW (@ 0x40004400) DEDT </i>
//    <edit> 
//      <loc> ( (unsigned char)((USART2_CR1 >> 16) & 0x1F), ((USART2_CR1 = (USART2_CR1 & ~(0x1FUL << 16 )) | ((unsigned long)(Gui_u8:GuiVal & 0x1F) << 16 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ------------------------------  Field Item: USART2_CR1_OVER8  ----------------------------------
// SVD Line: 12297

//  <item> SFDITEM_FIELD__USART2_CR1_OVER8
//    <name> OVER8 </name>
//    <rw> 
//    <i> [Bit 15] RW (@ 0x40004400) Oversampling mode </i>
//    <check> 
//      <loc> ( (unsigned int) USART2_CR1 ) </loc>
//      <o.15..15> OVER8
//    </check>
//  </item>
//  


// -------------------------------  Field Item: USART2_CR1_CMIE  ----------------------------------
// SVD Line: 12303

//  <item> SFDITEM_FIELD__USART2_CR1_CMIE
//    <name> CMIE </name>
//    <rw> 
//    <i> [Bit 14] RW (@ 0x40004400) Character match interrupt  enable </i>
//    <check> 
//      <loc> ( (unsigned int) USART2_CR1 ) </loc>
//      <o.14..14> CMIE
//    </check>
//  </item>
//  


// -------------------------------  Field Item: USART2_CR1_MME  -----------------------------------
// SVD Line: 12310

//  <item> SFDITEM_FIELD__USART2_CR1_MME
//    <name> MME </name>
//    <rw> 
//    <i> [Bit 13] RW (@ 0x40004400) Mute mode enable </i>
//    <check> 
//      <loc> ( (unsigned int) USART2_CR1 ) </loc>
//      <o.13..13> MME
//    </check>
//  </item>
//  


// --------------------------------  Field Item: USART2_CR1_M0  -----------------------------------
// SVD Line: 12316

//  <item> SFDITEM_FIELD__USART2_CR1_M0
//    <name> M0 </name>
//    <rw> 
//    <i> [Bit 12] RW (@ 0x40004400) Word length </i>
//    <check> 
//      <loc> ( (unsigned int) USART2_CR1 ) </loc>
//      <o.12..12> M0
//    </check>
//  </item>
//  


// -------------------------------  Field Item: USART2_CR1_WAKE  ----------------------------------
// SVD Line: 12322

//  <item> SFDITEM_FIELD__USART2_CR1_WAKE
//    <name> WAKE </name>
//    <rw> 
//    <i> [Bit 11] RW (@ 0x40004400) Receiver wakeup method </i>
//    <check> 
//      <loc> ( (unsigned int) USART2_CR1 ) </loc>
//      <o.11..11> WAKE
//    </check>
//  </item>
//  


// -------------------------------  Field Item: USART2_CR1_PCE  -----------------------------------
// SVD Line: 12328

//  <item> SFDITEM_FIELD__USART2_CR1_PCE
//    <name> PCE </name>
//    <rw> 
//    <i> [Bit 10] RW (@ 0x40004400) Parity control enable </i>
//    <check> 
//      <loc> ( (unsigned int) USART2_CR1 ) </loc>
//      <o.10..10> PCE
//    </check>
//  </item>
//  


// --------------------------------  Field Item: USART2_CR1_PS  -----------------------------------
// SVD Line: 12334

//  <item> SFDITEM_FIELD__USART2_CR1_PS
//    <name> PS </name>
//    <rw> 
//    <i> [Bit 9] RW (@ 0x40004400) Parity selection </i>
//    <check> 
//      <loc> ( (unsigned int) USART2_CR1 ) </loc>
//      <o.9..9> PS
//    </check>
//  </item>
//  


// -------------------------------  Field Item: USART2_CR1_PEIE  ----------------------------------
// SVD Line: 12340

//  <item> SFDITEM_FIELD__USART2_CR1_PEIE
//    <name> PEIE </name>
//    <rw> 
//    <i> [Bit 8] RW (@ 0x40004400) PE interrupt enable </i>
//    <check> 
//      <loc> ( (unsigned int) USART2_CR1 ) </loc>
//      <o.8..8> PEIE
//    </check>
//  </item>
//  


// ------------------------------  Field Item: USART2_CR1_TXEIE  ----------------------------------
// SVD Line: 12346

//  <item> SFDITEM_FIELD__USART2_CR1_TXEIE
//    <name> TXEIE </name>
//    <rw> 
//    <i> [Bit 7] RW (@ 0x40004400) interrupt enable </i>
//    <check> 
//      <loc> ( (unsigned int) USART2_CR1 ) </loc>
//      <o.7..7> TXEIE
//    </check>
//  </item>
//  


// -------------------------------  Field Item: USART2_CR1_TCIE  ----------------------------------
// SVD Line: 12352

//  <item> SFDITEM_FIELD__USART2_CR1_TCIE
//    <name> TCIE </name>
//    <rw> 
//    <i> [Bit 6] RW (@ 0x40004400) Transmission complete interrupt  enable </i>
//    <check> 
//      <loc> ( (unsigned int) USART2_CR1 ) </loc>
//      <o.6..6> TCIE
//    </check>
//  </item>
//  


// ------------------------------  Field Item: USART2_CR1_RXNEIE  ---------------------------------
// SVD Line: 12359

//  <item> SFDITEM_FIELD__USART2_CR1_RXNEIE
//    <name> RXNEIE </name>
//    <rw> 
//    <i> [Bit 5] RW (@ 0x40004400) RXNE interrupt enable </i>
//    <check> 
//      <loc> ( (unsigned int) USART2_CR1 ) </loc>
//      <o.5..5> RXNEIE
//    </check>
//  </item>
//  


// ------------------------------  Field Item: USART2_CR1_IDLEIE  ---------------------------------
// SVD Line: 12365

//  <item> SFDITEM_FIELD__USART2_CR1_IDLEIE
//    <name> IDLEIE </name>
//    <rw> 
//    <i> [Bit 4] RW (@ 0x40004400) IDLE interrupt enable </i>
//    <check> 
//      <loc> ( (unsigned int) USART2_CR1 ) </loc>
//      <o.4..4> IDLEIE
//    </check>
//  </item>
//  


// --------------------------------  Field Item: USART2_CR1_TE  -----------------------------------
// SVD Line: 12371

//  <item> SFDITEM_FIELD__USART2_CR1_TE
//    <name> TE </name>
//    <rw> 
//    <i> [Bit 3] RW (@ 0x40004400) Transmitter enable </i>
//    <check> 
//      <loc> ( (unsigned int) USART2_CR1 ) </loc>
//      <o.3..3> TE
//    </check>
//  </item>
//  


// --------------------------------  Field Item: USART2_CR1_RE  -----------------------------------
// SVD Line: 12377

//  <item> SFDITEM_FIELD__USART2_CR1_RE
//    <name> RE </name>
//    <rw> 
//    <i> [Bit 2] RW (@ 0x40004400) Receiver enable </i>
//    <check> 
//      <loc> ( (unsigned int) USART2_CR1 ) </loc>
//      <o.2..2> RE
//    </check>
//  </item>
//  


// -------------------------------  Field Item: USART2_CR1_UESM  ----------------------------------
// SVD Line: 12383

//  <item> SFDITEM_FIELD__USART2_CR1_UESM
//    <name> UESM </name>
//    <rw> 
//    <i> [Bit 1] RW (@ 0x40004400) USART enable in Stop mode </i>
//    <check> 
//      <loc> ( (unsigned int) USART2_CR1 ) </loc>
//      <o.1..1> UESM
//    </check>
//  </item>
//  


// --------------------------------  Field Item: USART2_CR1_UE  -----------------------------------
// SVD Line: 12389

//  <item> SFDITEM_FIELD__USART2_CR1_UE
//    <name> UE </name>
//    <rw> 
//    <i> [Bit 0] RW (@ 0x40004400) USART enable </i>
//    <check> 
//      <loc> ( (unsigned int) USART2_CR1 ) </loc>
//      <o.0..0> UE
//    </check>
//  </item>
//  


// -------------------------------  Register RTree: USART2_CR1  -----------------------------------
// SVD Line: 12236

//  <rtree> SFDITEM_REG__USART2_CR1
//    <name> CR1 </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x40004400) Control register 1 </i>
//    <loc> ( (unsigned int)((USART2_CR1 >> 0) & 0xFFFFFFFF), ((USART2_CR1 = (USART2_CR1 & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__USART2_CR1_RXFFIE </item>
//    <item> SFDITEM_FIELD__USART2_CR1_TXFEIE </item>
//    <item> SFDITEM_FIELD__USART2_CR1_FIFOEN </item>
//    <item> SFDITEM_FIELD__USART2_CR1_M1 </item>
//    <item> SFDITEM_FIELD__USART2_CR1_EOBIE </item>
//    <item> SFDITEM_FIELD__USART2_CR1_RTOIE </item>
//    <item> SFDITEM_FIELD__USART2_CR1_DEAT </item>
//    <item> SFDITEM_FIELD__USART2_CR1_DEDT </item>
//    <item> SFDITEM_FIELD__USART2_CR1_OVER8 </item>
//    <item> SFDITEM_FIELD__USART2_CR1_CMIE </item>
//    <item> SFDITEM_FIELD__USART2_CR1_MME </item>
//    <item> SFDITEM_FIELD__USART2_CR1_M0 </item>
//    <item> SFDITEM_FIELD__USART2_CR1_WAKE </item>
//    <item> SFDITEM_FIELD__USART2_CR1_PCE </item>
//    <item> SFDITEM_FIELD__USART2_CR1_PS </item>
//    <item> SFDITEM_FIELD__USART2_CR1_PEIE </item>
//    <item> SFDITEM_FIELD__USART2_CR1_TXEIE </item>
//    <item> SFDITEM_FIELD__USART2_CR1_TCIE </item>
//    <item> SFDITEM_FIELD__USART2_CR1_RXNEIE </item>
//    <item> SFDITEM_FIELD__USART2_CR1_IDLEIE </item>
//    <item> SFDITEM_FIELD__USART2_CR1_TE </item>
//    <item> SFDITEM_FIELD__USART2_CR1_RE </item>
//    <item> SFDITEM_FIELD__USART2_CR1_UESM </item>
//    <item> SFDITEM_FIELD__USART2_CR1_UE </item>
//  </rtree>
//  


// ----------------------------  Register Item Address: USART2_CR2  -------------------------------
// SVD Line: 12397

unsigned int USART2_CR2 __AT (0x40004404);



// ------------------------------  Field Item: USART2_CR2_ADD4_7  ---------------------------------
// SVD Line: 12406

//  <item> SFDITEM_FIELD__USART2_CR2_ADD4_7
//    <name> ADD4_7 </name>
//    <rw> 
//    <i> [Bits 31..28] RW (@ 0x40004404) Address of the USART node </i>
//    <edit> 
//      <loc> ( (unsigned char)((USART2_CR2 >> 28) & 0xF), ((USART2_CR2 = (USART2_CR2 & ~(0xFUL << 28 )) | ((unsigned long)(Gui_u8:GuiVal & 0xF) << 28 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ------------------------------  Field Item: USART2_CR2_ADD0_3  ---------------------------------
// SVD Line: 12412

//  <item> SFDITEM_FIELD__USART2_CR2_ADD0_3
//    <name> ADD0_3 </name>
//    <rw> 
//    <i> [Bits 27..24] RW (@ 0x40004404) Address of the USART node </i>
//    <edit> 
//      <loc> ( (unsigned char)((USART2_CR2 >> 24) & 0xF), ((USART2_CR2 = (USART2_CR2 & ~(0xFUL << 24 )) | ((unsigned long)(Gui_u8:GuiVal & 0xF) << 24 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ------------------------------  Field Item: USART2_CR2_RTOEN  ----------------------------------
// SVD Line: 12418

//  <item> SFDITEM_FIELD__USART2_CR2_RTOEN
//    <name> RTOEN </name>
//    <rw> 
//    <i> [Bit 23] RW (@ 0x40004404) Receiver timeout enable </i>
//    <check> 
//      <loc> ( (unsigned int) USART2_CR2 ) </loc>
//      <o.23..23> RTOEN
//    </check>
//  </item>
//  


// ------------------------------  Field Item: USART2_CR2_ABRMOD  ---------------------------------
// SVD Line: 12424

//  <item> SFDITEM_FIELD__USART2_CR2_ABRMOD
//    <name> ABRMOD </name>
//    <rw> 
//    <i> [Bits 22..21] RW (@ 0x40004404) Auto baud rate mode </i>
//    <edit> 
//      <loc> ( (unsigned char)((USART2_CR2 >> 21) & 0x3), ((USART2_CR2 = (USART2_CR2 & ~(0x3UL << 21 )) | ((unsigned long)(Gui_u8:GuiVal & 0x3) << 21 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ------------------------------  Field Item: USART2_CR2_ABREN  ----------------------------------
// SVD Line: 12430

//  <item> SFDITEM_FIELD__USART2_CR2_ABREN
//    <name> ABREN </name>
//    <rw> 
//    <i> [Bit 20] RW (@ 0x40004404) Auto baud rate enable </i>
//    <check> 
//      <loc> ( (unsigned int) USART2_CR2 ) </loc>
//      <o.20..20> ABREN
//    </check>
//  </item>
//  


// -----------------------------  Field Item: USART2_CR2_MSBFIRST  --------------------------------
// SVD Line: 12436

//  <item> SFDITEM_FIELD__USART2_CR2_MSBFIRST
//    <name> MSBFIRST </name>
//    <rw> 
//    <i> [Bit 19] RW (@ 0x40004404) Most significant bit first </i>
//    <check> 
//      <loc> ( (unsigned int) USART2_CR2 ) </loc>
//      <o.19..19> MSBFIRST
//    </check>
//  </item>
//  


// ------------------------------  Field Item: USART2_CR2_TAINV  ----------------------------------
// SVD Line: 12442

//  <item> SFDITEM_FIELD__USART2_CR2_TAINV
//    <name> TAINV </name>
//    <rw> 
//    <i> [Bit 18] RW (@ 0x40004404) Binary data inversion </i>
//    <check> 
//      <loc> ( (unsigned int) USART2_CR2 ) </loc>
//      <o.18..18> TAINV
//    </check>
//  </item>
//  


// ------------------------------  Field Item: USART2_CR2_TXINV  ----------------------------------
// SVD Line: 12448

//  <item> SFDITEM_FIELD__USART2_CR2_TXINV
//    <name> TXINV </name>
//    <rw> 
//    <i> [Bit 17] RW (@ 0x40004404) TX pin active level  inversion </i>
//    <check> 
//      <loc> ( (unsigned int) USART2_CR2 ) </loc>
//      <o.17..17> TXINV
//    </check>
//  </item>
//  


// ------------------------------  Field Item: USART2_CR2_RXINV  ----------------------------------
// SVD Line: 12455

//  <item> SFDITEM_FIELD__USART2_CR2_RXINV
//    <name> RXINV </name>
//    <rw> 
//    <i> [Bit 16] RW (@ 0x40004404) RX pin active level  inversion </i>
//    <check> 
//      <loc> ( (unsigned int) USART2_CR2 ) </loc>
//      <o.16..16> RXINV
//    </check>
//  </item>
//  


// -------------------------------  Field Item: USART2_CR2_SWAP  ----------------------------------
// SVD Line: 12462

//  <item> SFDITEM_FIELD__USART2_CR2_SWAP
//    <name> SWAP </name>
//    <rw> 
//    <i> [Bit 15] RW (@ 0x40004404) Swap TX/RX pins </i>
//    <check> 
//      <loc> ( (unsigned int) USART2_CR2 ) </loc>
//      <o.15..15> SWAP
//    </check>
//  </item>
//  


// ------------------------------  Field Item: USART2_CR2_LINEN  ----------------------------------
// SVD Line: 12468

//  <item> SFDITEM_FIELD__USART2_CR2_LINEN
//    <name> LINEN </name>
//    <rw> 
//    <i> [Bit 14] RW (@ 0x40004404) LIN mode enable </i>
//    <check> 
//      <loc> ( (unsigned int) USART2_CR2 ) </loc>
//      <o.14..14> LINEN
//    </check>
//  </item>
//  


// -------------------------------  Field Item: USART2_CR2_STOP  ----------------------------------
// SVD Line: 12474

//  <item> SFDITEM_FIELD__USART2_CR2_STOP
//    <name> STOP </name>
//    <rw> 
//    <i> [Bits 13..12] RW (@ 0x40004404) STOP bits </i>
//    <edit> 
//      <loc> ( (unsigned char)((USART2_CR2 >> 12) & 0x3), ((USART2_CR2 = (USART2_CR2 & ~(0x3UL << 12 )) | ((unsigned long)(Gui_u8:GuiVal & 0x3) << 12 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ------------------------------  Field Item: USART2_CR2_CLKEN  ----------------------------------
// SVD Line: 12480

//  <item> SFDITEM_FIELD__USART2_CR2_CLKEN
//    <name> CLKEN </name>
//    <rw> 
//    <i> [Bit 11] RW (@ 0x40004404) Clock enable </i>
//    <check> 
//      <loc> ( (unsigned int) USART2_CR2 ) </loc>
//      <o.11..11> CLKEN
//    </check>
//  </item>
//  


// -------------------------------  Field Item: USART2_CR2_CPOL  ----------------------------------
// SVD Line: 12486

//  <item> SFDITEM_FIELD__USART2_CR2_CPOL
//    <name> CPOL </name>
//    <rw> 
//    <i> [Bit 10] RW (@ 0x40004404) Clock polarity </i>
//    <check> 
//      <loc> ( (unsigned int) USART2_CR2 ) </loc>
//      <o.10..10> CPOL
//    </check>
//  </item>
//  


// -------------------------------  Field Item: USART2_CR2_CPHA  ----------------------------------
// SVD Line: 12492

//  <item> SFDITEM_FIELD__USART2_CR2_CPHA
//    <name> CPHA </name>
//    <rw> 
//    <i> [Bit 9] RW (@ 0x40004404) Clock phase </i>
//    <check> 
//      <loc> ( (unsigned int) USART2_CR2 ) </loc>
//      <o.9..9> CPHA
//    </check>
//  </item>
//  


// -------------------------------  Field Item: USART2_CR2_LBCL  ----------------------------------
// SVD Line: 12498

//  <item> SFDITEM_FIELD__USART2_CR2_LBCL
//    <name> LBCL </name>
//    <rw> 
//    <i> [Bit 8] RW (@ 0x40004404) Last bit clock pulse </i>
//    <check> 
//      <loc> ( (unsigned int) USART2_CR2 ) </loc>
//      <o.8..8> LBCL
//    </check>
//  </item>
//  


// ------------------------------  Field Item: USART2_CR2_LBDIE  ----------------------------------
// SVD Line: 12504

//  <item> SFDITEM_FIELD__USART2_CR2_LBDIE
//    <name> LBDIE </name>
//    <rw> 
//    <i> [Bit 6] RW (@ 0x40004404) LIN break detection interrupt  enable </i>
//    <check> 
//      <loc> ( (unsigned int) USART2_CR2 ) </loc>
//      <o.6..6> LBDIE
//    </check>
//  </item>
//  


// -------------------------------  Field Item: USART2_CR2_LBDL  ----------------------------------
// SVD Line: 12511

//  <item> SFDITEM_FIELD__USART2_CR2_LBDL
//    <name> LBDL </name>
//    <rw> 
//    <i> [Bit 5] RW (@ 0x40004404) LIN break detection length </i>
//    <check> 
//      <loc> ( (unsigned int) USART2_CR2 ) </loc>
//      <o.5..5> LBDL
//    </check>
//  </item>
//  


// ------------------------------  Field Item: USART2_CR2_ADDM7  ----------------------------------
// SVD Line: 12517

//  <item> SFDITEM_FIELD__USART2_CR2_ADDM7
//    <name> ADDM7 </name>
//    <rw> 
//    <i> [Bit 4] RW (@ 0x40004404) 7-bit Address Detection/4-bit Address  Detection </i>
//    <check> 
//      <loc> ( (unsigned int) USART2_CR2 ) </loc>
//      <o.4..4> ADDM7
//    </check>
//  </item>
//  


// -----------------------------  Field Item: USART2_CR2_DIS_NSS  ---------------------------------
// SVD Line: 12524

//  <item> SFDITEM_FIELD__USART2_CR2_DIS_NSS
//    <name> DIS_NSS </name>
//    <rw> 
//    <i> [Bit 3] RW (@ 0x40004404) When the DSI_NSS bit is set, the NSS pin  input will be ignored </i>
//    <check> 
//      <loc> ( (unsigned int) USART2_CR2 ) </loc>
//      <o.3..3> DIS_NSS
//    </check>
//  </item>
//  


// ------------------------------  Field Item: USART2_CR2_SLVEN  ----------------------------------
// SVD Line: 12531

//  <item> SFDITEM_FIELD__USART2_CR2_SLVEN
//    <name> SLVEN </name>
//    <rw> 
//    <i> [Bit 0] RW (@ 0x40004404) Synchronous Slave mode  enable </i>
//    <check> 
//      <loc> ( (unsigned int) USART2_CR2 ) </loc>
//      <o.0..0> SLVEN
//    </check>
//  </item>
//  


// -------------------------------  Register RTree: USART2_CR2  -----------------------------------
// SVD Line: 12397

//  <rtree> SFDITEM_REG__USART2_CR2
//    <name> CR2 </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x40004404) Control register 2 </i>
//    <loc> ( (unsigned int)((USART2_CR2 >> 0) & 0xFFFFFFFF), ((USART2_CR2 = (USART2_CR2 & ~(0xFFFFFF79UL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFF79) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__USART2_CR2_ADD4_7 </item>
//    <item> SFDITEM_FIELD__USART2_CR2_ADD0_3 </item>
//    <item> SFDITEM_FIELD__USART2_CR2_RTOEN </item>
//    <item> SFDITEM_FIELD__USART2_CR2_ABRMOD </item>
//    <item> SFDITEM_FIELD__USART2_CR2_ABREN </item>
//    <item> SFDITEM_FIELD__USART2_CR2_MSBFIRST </item>
//    <item> SFDITEM_FIELD__USART2_CR2_TAINV </item>
//    <item> SFDITEM_FIELD__USART2_CR2_TXINV </item>
//    <item> SFDITEM_FIELD__USART2_CR2_RXINV </item>
//    <item> SFDITEM_FIELD__USART2_CR2_SWAP </item>
//    <item> SFDITEM_FIELD__USART2_CR2_LINEN </item>
//    <item> SFDITEM_FIELD__USART2_CR2_STOP </item>
//    <item> SFDITEM_FIELD__USART2_CR2_CLKEN </item>
//    <item> SFDITEM_FIELD__USART2_CR2_CPOL </item>
//    <item> SFDITEM_FIELD__USART2_CR2_CPHA </item>
//    <item> SFDITEM_FIELD__USART2_CR2_LBCL </item>
//    <item> SFDITEM_FIELD__USART2_CR2_LBDIE </item>
//    <item> SFDITEM_FIELD__USART2_CR2_LBDL </item>
//    <item> SFDITEM_FIELD__USART2_CR2_ADDM7 </item>
//    <item> SFDITEM_FIELD__USART2_CR2_DIS_NSS </item>
//    <item> SFDITEM_FIELD__USART2_CR2_SLVEN </item>
//  </rtree>
//  


// ----------------------------  Register Item Address: USART2_CR3  -------------------------------
// SVD Line: 12540

unsigned int USART2_CR3 __AT (0x40004408);



// -----------------------------  Field Item: USART2_CR3_TXFTCFG  ---------------------------------
// SVD Line: 12549

//  <item> SFDITEM_FIELD__USART2_CR3_TXFTCFG
//    <name> TXFTCFG </name>
//    <rw> 
//    <i> [Bits 31..29] RW (@ 0x40004408) TXFIFO threshold  configuration </i>
//    <edit> 
//      <loc> ( (unsigned char)((USART2_CR3 >> 29) & 0x7), ((USART2_CR3 = (USART2_CR3 & ~(0x7UL << 29 )) | ((unsigned long)(Gui_u8:GuiVal & 0x7) << 29 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ------------------------------  Field Item: USART2_CR3_RXFTIE  ---------------------------------
// SVD Line: 12556

//  <item> SFDITEM_FIELD__USART2_CR3_RXFTIE
//    <name> RXFTIE </name>
//    <rw> 
//    <i> [Bit 28] RW (@ 0x40004408) RXFIFO threshold interrupt  enable </i>
//    <check> 
//      <loc> ( (unsigned int) USART2_CR3 ) </loc>
//      <o.28..28> RXFTIE
//    </check>
//  </item>
//  


// -----------------------------  Field Item: USART2_CR3_RXFTCFG  ---------------------------------
// SVD Line: 12563

//  <item> SFDITEM_FIELD__USART2_CR3_RXFTCFG
//    <name> RXFTCFG </name>
//    <rw> 
//    <i> [Bits 27..25] RW (@ 0x40004408) Receive FIFO threshold  configuration </i>
//    <edit> 
//      <loc> ( (unsigned char)((USART2_CR3 >> 25) & 0x7), ((USART2_CR3 = (USART2_CR3 & ~(0x7UL << 25 )) | ((unsigned long)(Gui_u8:GuiVal & 0x7) << 25 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -----------------------------  Field Item: USART2_CR3_TCBGTIE  ---------------------------------
// SVD Line: 12570

//  <item> SFDITEM_FIELD__USART2_CR3_TCBGTIE
//    <name> TCBGTIE </name>
//    <rw> 
//    <i> [Bit 24] RW (@ 0x40004408) Tr Complete before guard time, interrupt  enable </i>
//    <check> 
//      <loc> ( (unsigned int) USART2_CR3 ) </loc>
//      <o.24..24> TCBGTIE
//    </check>
//  </item>
//  


// ------------------------------  Field Item: USART2_CR3_TXFTIE  ---------------------------------
// SVD Line: 12577

//  <item> SFDITEM_FIELD__USART2_CR3_TXFTIE
//    <name> TXFTIE </name>
//    <rw> 
//    <i> [Bit 23] RW (@ 0x40004408) threshold interrupt enable </i>
//    <check> 
//      <loc> ( (unsigned int) USART2_CR3 ) </loc>
//      <o.23..23> TXFTIE
//    </check>
//  </item>
//  


// ------------------------------  Field Item: USART2_CR3_WUFIE  ----------------------------------
// SVD Line: 12583

//  <item> SFDITEM_FIELD__USART2_CR3_WUFIE
//    <name> WUFIE </name>
//    <rw> 
//    <i> [Bit 22] RW (@ 0x40004408) Wakeup from Stop mode interrupt  enable </i>
//    <check> 
//      <loc> ( (unsigned int) USART2_CR3 ) </loc>
//      <o.22..22> WUFIE
//    </check>
//  </item>
//  


// -------------------------------  Field Item: USART2_CR3_WUS  -----------------------------------
// SVD Line: 12590

//  <item> SFDITEM_FIELD__USART2_CR3_WUS
//    <name> WUS </name>
//    <rw> 
//    <i> [Bits 21..20] RW (@ 0x40004408) Wakeup from Stop mode interrupt flag  selection </i>
//    <edit> 
//      <loc> ( (unsigned char)((USART2_CR3 >> 20) & 0x3), ((USART2_CR3 = (USART2_CR3 & ~(0x3UL << 20 )) | ((unsigned long)(Gui_u8:GuiVal & 0x3) << 20 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -----------------------------  Field Item: USART2_CR3_SCARCNT  ---------------------------------
// SVD Line: 12597

//  <item> SFDITEM_FIELD__USART2_CR3_SCARCNT
//    <name> SCARCNT </name>
//    <rw> 
//    <i> [Bits 19..17] RW (@ 0x40004408) Smartcard auto-retry count </i>
//    <edit> 
//      <loc> ( (unsigned char)((USART2_CR3 >> 17) & 0x7), ((USART2_CR3 = (USART2_CR3 & ~(0x7UL << 17 )) | ((unsigned long)(Gui_u8:GuiVal & 0x7) << 17 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -------------------------------  Field Item: USART2_CR3_DEP  -----------------------------------
// SVD Line: 12603

//  <item> SFDITEM_FIELD__USART2_CR3_DEP
//    <name> DEP </name>
//    <rw> 
//    <i> [Bit 15] RW (@ 0x40004408) Driver enable polarity  selection </i>
//    <check> 
//      <loc> ( (unsigned int) USART2_CR3 ) </loc>
//      <o.15..15> DEP
//    </check>
//  </item>
//  


// -------------------------------  Field Item: USART2_CR3_DEM  -----------------------------------
// SVD Line: 12610

//  <item> SFDITEM_FIELD__USART2_CR3_DEM
//    <name> DEM </name>
//    <rw> 
//    <i> [Bit 14] RW (@ 0x40004408) Driver enable mode </i>
//    <check> 
//      <loc> ( (unsigned int) USART2_CR3 ) </loc>
//      <o.14..14> DEM
//    </check>
//  </item>
//  


// -------------------------------  Field Item: USART2_CR3_DDRE  ----------------------------------
// SVD Line: 12616

//  <item> SFDITEM_FIELD__USART2_CR3_DDRE
//    <name> DDRE </name>
//    <rw> 
//    <i> [Bit 13] RW (@ 0x40004408) DMA Disable on Reception  Error </i>
//    <check> 
//      <loc> ( (unsigned int) USART2_CR3 ) </loc>
//      <o.13..13> DDRE
//    </check>
//  </item>
//  


// ------------------------------  Field Item: USART2_CR3_OVRDIS  ---------------------------------
// SVD Line: 12623

//  <item> SFDITEM_FIELD__USART2_CR3_OVRDIS
//    <name> OVRDIS </name>
//    <rw> 
//    <i> [Bit 12] RW (@ 0x40004408) Overrun Disable </i>
//    <check> 
//      <loc> ( (unsigned int) USART2_CR3 ) </loc>
//      <o.12..12> OVRDIS
//    </check>
//  </item>
//  


// ------------------------------  Field Item: USART2_CR3_ONEBIT  ---------------------------------
// SVD Line: 12629

//  <item> SFDITEM_FIELD__USART2_CR3_ONEBIT
//    <name> ONEBIT </name>
//    <rw> 
//    <i> [Bit 11] RW (@ 0x40004408) One sample bit method  enable </i>
//    <check> 
//      <loc> ( (unsigned int) USART2_CR3 ) </loc>
//      <o.11..11> ONEBIT
//    </check>
//  </item>
//  


// ------------------------------  Field Item: USART2_CR3_CTSIE  ----------------------------------
// SVD Line: 12636

//  <item> SFDITEM_FIELD__USART2_CR3_CTSIE
//    <name> CTSIE </name>
//    <rw> 
//    <i> [Bit 10] RW (@ 0x40004408) CTS interrupt enable </i>
//    <check> 
//      <loc> ( (unsigned int) USART2_CR3 ) </loc>
//      <o.10..10> CTSIE
//    </check>
//  </item>
//  


// -------------------------------  Field Item: USART2_CR3_CTSE  ----------------------------------
// SVD Line: 12642

//  <item> SFDITEM_FIELD__USART2_CR3_CTSE
//    <name> CTSE </name>
//    <rw> 
//    <i> [Bit 9] RW (@ 0x40004408) CTS enable </i>
//    <check> 
//      <loc> ( (unsigned int) USART2_CR3 ) </loc>
//      <o.9..9> CTSE
//    </check>
//  </item>
//  


// -------------------------------  Field Item: USART2_CR3_RTSE  ----------------------------------
// SVD Line: 12648

//  <item> SFDITEM_FIELD__USART2_CR3_RTSE
//    <name> RTSE </name>
//    <rw> 
//    <i> [Bit 8] RW (@ 0x40004408) RTS enable </i>
//    <check> 
//      <loc> ( (unsigned int) USART2_CR3 ) </loc>
//      <o.8..8> RTSE
//    </check>
//  </item>
//  


// -------------------------------  Field Item: USART2_CR3_DMAT  ----------------------------------
// SVD Line: 12654

//  <item> SFDITEM_FIELD__USART2_CR3_DMAT
//    <name> DMAT </name>
//    <rw> 
//    <i> [Bit 7] RW (@ 0x40004408) DMA enable transmitter </i>
//    <check> 
//      <loc> ( (unsigned int) USART2_CR3 ) </loc>
//      <o.7..7> DMAT
//    </check>
//  </item>
//  


// -------------------------------  Field Item: USART2_CR3_DMAR  ----------------------------------
// SVD Line: 12660

//  <item> SFDITEM_FIELD__USART2_CR3_DMAR
//    <name> DMAR </name>
//    <rw> 
//    <i> [Bit 6] RW (@ 0x40004408) DMA enable receiver </i>
//    <check> 
//      <loc> ( (unsigned int) USART2_CR3 ) </loc>
//      <o.6..6> DMAR
//    </check>
//  </item>
//  


// -------------------------------  Field Item: USART2_CR3_SCEN  ----------------------------------
// SVD Line: 12666

//  <item> SFDITEM_FIELD__USART2_CR3_SCEN
//    <name> SCEN </name>
//    <rw> 
//    <i> [Bit 5] RW (@ 0x40004408) Smartcard mode enable </i>
//    <check> 
//      <loc> ( (unsigned int) USART2_CR3 ) </loc>
//      <o.5..5> SCEN
//    </check>
//  </item>
//  


// -------------------------------  Field Item: USART2_CR3_NACK  ----------------------------------
// SVD Line: 12672

//  <item> SFDITEM_FIELD__USART2_CR3_NACK
//    <name> NACK </name>
//    <rw> 
//    <i> [Bit 4] RW (@ 0x40004408) Smartcard NACK enable </i>
//    <check> 
//      <loc> ( (unsigned int) USART2_CR3 ) </loc>
//      <o.4..4> NACK
//    </check>
//  </item>
//  


// ------------------------------  Field Item: USART2_CR3_HDSEL  ----------------------------------
// SVD Line: 12678

//  <item> SFDITEM_FIELD__USART2_CR3_HDSEL
//    <name> HDSEL </name>
//    <rw> 
//    <i> [Bit 3] RW (@ 0x40004408) Half-duplex selection </i>
//    <check> 
//      <loc> ( (unsigned int) USART2_CR3 ) </loc>
//      <o.3..3> HDSEL
//    </check>
//  </item>
//  


// -------------------------------  Field Item: USART2_CR3_IRLP  ----------------------------------
// SVD Line: 12684

//  <item> SFDITEM_FIELD__USART2_CR3_IRLP
//    <name> IRLP </name>
//    <rw> 
//    <i> [Bit 2] RW (@ 0x40004408) Ir low-power </i>
//    <check> 
//      <loc> ( (unsigned int) USART2_CR3 ) </loc>
//      <o.2..2> IRLP
//    </check>
//  </item>
//  


// -------------------------------  Field Item: USART2_CR3_IREN  ----------------------------------
// SVD Line: 12690

//  <item> SFDITEM_FIELD__USART2_CR3_IREN
//    <name> IREN </name>
//    <rw> 
//    <i> [Bit 1] RW (@ 0x40004408) Ir mode enable </i>
//    <check> 
//      <loc> ( (unsigned int) USART2_CR3 ) </loc>
//      <o.1..1> IREN
//    </check>
//  </item>
//  


// -------------------------------  Field Item: USART2_CR3_EIE  -----------------------------------
// SVD Line: 12696

//  <item> SFDITEM_FIELD__USART2_CR3_EIE
//    <name> EIE </name>
//    <rw> 
//    <i> [Bit 0] RW (@ 0x40004408) Error interrupt enable </i>
//    <check> 
//      <loc> ( (unsigned int) USART2_CR3 ) </loc>
//      <o.0..0> EIE
//    </check>
//  </item>
//  


// -------------------------------  Register RTree: USART2_CR3  -----------------------------------
// SVD Line: 12540

//  <rtree> SFDITEM_REG__USART2_CR3
//    <name> CR3 </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x40004408) Control register 3 </i>
//    <loc> ( (unsigned int)((USART2_CR3 >> 0) & 0xFFFFFFFF), ((USART2_CR3 = (USART2_CR3 & ~(0xFFFEFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFEFFFF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__USART2_CR3_TXFTCFG </item>
//    <item> SFDITEM_FIELD__USART2_CR3_RXFTIE </item>
//    <item> SFDITEM_FIELD__USART2_CR3_RXFTCFG </item>
//    <item> SFDITEM_FIELD__USART2_CR3_TCBGTIE </item>
//    <item> SFDITEM_FIELD__USART2_CR3_TXFTIE </item>
//    <item> SFDITEM_FIELD__USART2_CR3_WUFIE </item>
//    <item> SFDITEM_FIELD__USART2_CR3_WUS </item>
//    <item> SFDITEM_FIELD__USART2_CR3_SCARCNT </item>
//    <item> SFDITEM_FIELD__USART2_CR3_DEP </item>
//    <item> SFDITEM_FIELD__USART2_CR3_DEM </item>
//    <item> SFDITEM_FIELD__USART2_CR3_DDRE </item>
//    <item> SFDITEM_FIELD__USART2_CR3_OVRDIS </item>
//    <item> SFDITEM_FIELD__USART2_CR3_ONEBIT </item>
//    <item> SFDITEM_FIELD__USART2_CR3_CTSIE </item>
//    <item> SFDITEM_FIELD__USART2_CR3_CTSE </item>
//    <item> SFDITEM_FIELD__USART2_CR3_RTSE </item>
//    <item> SFDITEM_FIELD__USART2_CR3_DMAT </item>
//    <item> SFDITEM_FIELD__USART2_CR3_DMAR </item>
//    <item> SFDITEM_FIELD__USART2_CR3_SCEN </item>
//    <item> SFDITEM_FIELD__USART2_CR3_NACK </item>
//    <item> SFDITEM_FIELD__USART2_CR3_HDSEL </item>
//    <item> SFDITEM_FIELD__USART2_CR3_IRLP </item>
//    <item> SFDITEM_FIELD__USART2_CR3_IREN </item>
//    <item> SFDITEM_FIELD__USART2_CR3_EIE </item>
//  </rtree>
//  


// ----------------------------  Register Item Address: USART2_BRR  -------------------------------
// SVD Line: 12704

unsigned int USART2_BRR __AT (0x4000440C);



// -----------------------------  Field Item: USART2_BRR_BRR_4_15  --------------------------------
// SVD Line: 12713

//  <item> SFDITEM_FIELD__USART2_BRR_BRR_4_15
//    <name> BRR_4_15 </name>
//    <rw> 
//    <i> [Bits 15..4] RW (@ 0x4000440C) BRR_4_15 </i>
//    <edit> 
//      <loc> ( (unsigned short)((USART2_BRR >> 4) & 0xFFF), ((USART2_BRR = (USART2_BRR & ~(0xFFFUL << 4 )) | ((unsigned long)(Gui_u16:GuiVal & 0xFFF) << 4 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -----------------------------  Field Item: USART2_BRR_BRR_0_3  ---------------------------------
// SVD Line: 12719

//  <item> SFDITEM_FIELD__USART2_BRR_BRR_0_3
//    <name> BRR_0_3 </name>
//    <rw> 
//    <i> [Bits 3..0] RW (@ 0x4000440C) BRR_0_3 </i>
//    <edit> 
//      <loc> ( (unsigned char)((USART2_BRR >> 0) & 0xF), ((USART2_BRR = (USART2_BRR & ~(0xFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -------------------------------  Register RTree: USART2_BRR  -----------------------------------
// SVD Line: 12704

//  <rtree> SFDITEM_REG__USART2_BRR
//    <name> BRR </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x4000440C) Baud rate register </i>
//    <loc> ( (unsigned int)((USART2_BRR >> 0) & 0xFFFFFFFF), ((USART2_BRR = (USART2_BRR & ~(0xFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__USART2_BRR_BRR_4_15 </item>
//    <item> SFDITEM_FIELD__USART2_BRR_BRR_0_3 </item>
//  </rtree>
//  


// ---------------------------  Register Item Address: USART2_GTPR  -------------------------------
// SVD Line: 12727

unsigned int USART2_GTPR __AT (0x40004410);



// -------------------------------  Field Item: USART2_GTPR_GT  -----------------------------------
// SVD Line: 12737

//  <item> SFDITEM_FIELD__USART2_GTPR_GT
//    <name> GT </name>
//    <rw> 
//    <i> [Bits 15..8] RW (@ 0x40004410) Guard time value </i>
//    <edit> 
//      <loc> ( (unsigned char)((USART2_GTPR >> 8) & 0xFF), ((USART2_GTPR = (USART2_GTPR & ~(0xFFUL << 8 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFF) << 8 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -------------------------------  Field Item: USART2_GTPR_PSC  ----------------------------------
// SVD Line: 12743

//  <item> SFDITEM_FIELD__USART2_GTPR_PSC
//    <name> PSC </name>
//    <rw> 
//    <i> [Bits 7..0] RW (@ 0x40004410) Prescaler value </i>
//    <edit> 
//      <loc> ( (unsigned char)((USART2_GTPR >> 0) & 0xFF), ((USART2_GTPR = (USART2_GTPR & ~(0xFFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -------------------------------  Register RTree: USART2_GTPR  ----------------------------------
// SVD Line: 12727

//  <rtree> SFDITEM_REG__USART2_GTPR
//    <name> GTPR </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x40004410) Guard time and prescaler  register </i>
//    <loc> ( (unsigned int)((USART2_GTPR >> 0) & 0xFFFFFFFF), ((USART2_GTPR = (USART2_GTPR & ~(0xFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__USART2_GTPR_GT </item>
//    <item> SFDITEM_FIELD__USART2_GTPR_PSC </item>
//  </rtree>
//  


// ---------------------------  Register Item Address: USART2_RTOR  -------------------------------
// SVD Line: 12751

unsigned int USART2_RTOR __AT (0x40004414);



// ------------------------------  Field Item: USART2_RTOR_BLEN  ----------------------------------
// SVD Line: 12760

//  <item> SFDITEM_FIELD__USART2_RTOR_BLEN
//    <name> BLEN </name>
//    <rw> 
//    <i> [Bits 31..24] RW (@ 0x40004414) Block Length </i>
//    <edit> 
//      <loc> ( (unsigned char)((USART2_RTOR >> 24) & 0xFF), ((USART2_RTOR = (USART2_RTOR & ~(0xFFUL << 24 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFF) << 24 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -------------------------------  Field Item: USART2_RTOR_RTO  ----------------------------------
// SVD Line: 12766

//  <item> SFDITEM_FIELD__USART2_RTOR_RTO
//    <name> RTO </name>
//    <rw> 
//    <i> [Bits 23..0] RW (@ 0x40004414) Receiver timeout value </i>
//    <edit> 
//      <loc> ( (unsigned int)((USART2_RTOR >> 0) & 0xFFFFFF), ((USART2_RTOR = (USART2_RTOR & ~(0xFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -------------------------------  Register RTree: USART2_RTOR  ----------------------------------
// SVD Line: 12751

//  <rtree> SFDITEM_REG__USART2_RTOR
//    <name> RTOR </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x40004414) Receiver timeout register </i>
//    <loc> ( (unsigned int)((USART2_RTOR >> 0) & 0xFFFFFFFF), ((USART2_RTOR = (USART2_RTOR & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__USART2_RTOR_BLEN </item>
//    <item> SFDITEM_FIELD__USART2_RTOR_RTO </item>
//  </rtree>
//  


// ----------------------------  Register Item Address: USART2_RQR  -------------------------------
// SVD Line: 12774

unsigned int USART2_RQR __AT (0x40004418);



// ------------------------------  Field Item: USART2_RQR_TXFRQ  ----------------------------------
// SVD Line: 12783

//  <item> SFDITEM_FIELD__USART2_RQR_TXFRQ
//    <name> TXFRQ </name>
//    <w> 
//    <i> [Bit 4] WO (@ 0x40004418) Transmit data flush  request </i>
//    <check> 
//      <loc> ( (unsigned int) USART2_RQR ) </loc>
//      <o.4..4> TXFRQ
//    </check>
//  </item>
//  


// ------------------------------  Field Item: USART2_RQR_RXFRQ  ----------------------------------
// SVD Line: 12790

//  <item> SFDITEM_FIELD__USART2_RQR_RXFRQ
//    <name> RXFRQ </name>
//    <w> 
//    <i> [Bit 3] WO (@ 0x40004418) Receive data flush request </i>
//    <check> 
//      <loc> ( (unsigned int) USART2_RQR ) </loc>
//      <o.3..3> RXFRQ
//    </check>
//  </item>
//  


// -------------------------------  Field Item: USART2_RQR_MMRQ  ----------------------------------
// SVD Line: 12796

//  <item> SFDITEM_FIELD__USART2_RQR_MMRQ
//    <name> MMRQ </name>
//    <w> 
//    <i> [Bit 2] WO (@ 0x40004418) Mute mode request </i>
//    <check> 
//      <loc> ( (unsigned int) USART2_RQR ) </loc>
//      <o.2..2> MMRQ
//    </check>
//  </item>
//  


// ------------------------------  Field Item: USART2_RQR_SBKRQ  ----------------------------------
// SVD Line: 12802

//  <item> SFDITEM_FIELD__USART2_RQR_SBKRQ
//    <name> SBKRQ </name>
//    <w> 
//    <i> [Bit 1] WO (@ 0x40004418) Send break request </i>
//    <check> 
//      <loc> ( (unsigned int) USART2_RQR ) </loc>
//      <o.1..1> SBKRQ
//    </check>
//  </item>
//  


// ------------------------------  Field Item: USART2_RQR_ABRRQ  ----------------------------------
// SVD Line: 12808

//  <item> SFDITEM_FIELD__USART2_RQR_ABRRQ
//    <name> ABRRQ </name>
//    <w> 
//    <i> [Bit 0] WO (@ 0x40004418) Auto baud rate request </i>
//    <check> 
//      <loc> ( (unsigned int) USART2_RQR ) </loc>
//      <o.0..0> ABRRQ
//    </check>
//  </item>
//  


// -------------------------------  Register RTree: USART2_RQR  -----------------------------------
// SVD Line: 12774

//  <rtree> SFDITEM_REG__USART2_RQR
//    <name> RQR </name>
//    <w> 
//    <i> [Bits 31..0] WO (@ 0x40004418) Request register </i>
//    <loc> ( (unsigned int)((USART2_RQR >> 0) & 0xFFFFFFFF), ((USART2_RQR = (USART2_RQR & ~(0x1FUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0x1F) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__USART2_RQR_TXFRQ </item>
//    <item> SFDITEM_FIELD__USART2_RQR_RXFRQ </item>
//    <item> SFDITEM_FIELD__USART2_RQR_MMRQ </item>
//    <item> SFDITEM_FIELD__USART2_RQR_SBKRQ </item>
//    <item> SFDITEM_FIELD__USART2_RQR_ABRRQ </item>
//  </rtree>
//  


// ----------------------------  Register Item Address: USART2_ISR  -------------------------------
// SVD Line: 12816

unsigned int USART2_ISR __AT (0x4000441C);



// -------------------------------  Field Item: USART2_ISR_TXFT  ----------------------------------
// SVD Line: 12826

//  <item> SFDITEM_FIELD__USART2_ISR_TXFT
//    <name> TXFT </name>
//    <r> 
//    <i> [Bit 27] RO (@ 0x4000441C) TXFIFO threshold flag </i>
//    <check> 
//      <loc> ( (unsigned int) USART2_ISR ) </loc>
//      <o.27..27> TXFT
//    </check>
//  </item>
//  


// -------------------------------  Field Item: USART2_ISR_RXFT  ----------------------------------
// SVD Line: 12832

//  <item> SFDITEM_FIELD__USART2_ISR_RXFT
//    <name> RXFT </name>
//    <r> 
//    <i> [Bit 26] RO (@ 0x4000441C) RXFIFO threshold flag </i>
//    <check> 
//      <loc> ( (unsigned int) USART2_ISR ) </loc>
//      <o.26..26> RXFT
//    </check>
//  </item>
//  


// ------------------------------  Field Item: USART2_ISR_TCBGT  ----------------------------------
// SVD Line: 12838

//  <item> SFDITEM_FIELD__USART2_ISR_TCBGT
//    <name> TCBGT </name>
//    <r> 
//    <i> [Bit 25] RO (@ 0x4000441C) Transmission complete before guard time  flag </i>
//    <check> 
//      <loc> ( (unsigned int) USART2_ISR ) </loc>
//      <o.25..25> TCBGT
//    </check>
//  </item>
//  


// -------------------------------  Field Item: USART2_ISR_RXFF  ----------------------------------
// SVD Line: 12845

//  <item> SFDITEM_FIELD__USART2_ISR_RXFF
//    <name> RXFF </name>
//    <r> 
//    <i> [Bit 24] RO (@ 0x4000441C) RXFIFO Full </i>
//    <check> 
//      <loc> ( (unsigned int) USART2_ISR ) </loc>
//      <o.24..24> RXFF
//    </check>
//  </item>
//  


// -------------------------------  Field Item: USART2_ISR_TXFE  ----------------------------------
// SVD Line: 12851

//  <item> SFDITEM_FIELD__USART2_ISR_TXFE
//    <name> TXFE </name>
//    <r> 
//    <i> [Bit 23] RO (@ 0x4000441C) TXFIFO Empty </i>
//    <check> 
//      <loc> ( (unsigned int) USART2_ISR ) </loc>
//      <o.23..23> TXFE
//    </check>
//  </item>
//  


// ------------------------------  Field Item: USART2_ISR_REACK  ----------------------------------
// SVD Line: 12857

//  <item> SFDITEM_FIELD__USART2_ISR_REACK
//    <name> REACK </name>
//    <r> 
//    <i> [Bit 22] RO (@ 0x4000441C) REACK </i>
//    <check> 
//      <loc> ( (unsigned int) USART2_ISR ) </loc>
//      <o.22..22> REACK
//    </check>
//  </item>
//  


// ------------------------------  Field Item: USART2_ISR_TEACK  ----------------------------------
// SVD Line: 12863

//  <item> SFDITEM_FIELD__USART2_ISR_TEACK
//    <name> TEACK </name>
//    <r> 
//    <i> [Bit 21] RO (@ 0x4000441C) TEACK </i>
//    <check> 
//      <loc> ( (unsigned int) USART2_ISR ) </loc>
//      <o.21..21> TEACK
//    </check>
//  </item>
//  


// -------------------------------  Field Item: USART2_ISR_WUF  -----------------------------------
// SVD Line: 12869

//  <item> SFDITEM_FIELD__USART2_ISR_WUF
//    <name> WUF </name>
//    <r> 
//    <i> [Bit 20] RO (@ 0x4000441C) WUF </i>
//    <check> 
//      <loc> ( (unsigned int) USART2_ISR ) </loc>
//      <o.20..20> WUF
//    </check>
//  </item>
//  


// -------------------------------  Field Item: USART2_ISR_RWU  -----------------------------------
// SVD Line: 12875

//  <item> SFDITEM_FIELD__USART2_ISR_RWU
//    <name> RWU </name>
//    <r> 
//    <i> [Bit 19] RO (@ 0x4000441C) RWU </i>
//    <check> 
//      <loc> ( (unsigned int) USART2_ISR ) </loc>
//      <o.19..19> RWU
//    </check>
//  </item>
//  


// -------------------------------  Field Item: USART2_ISR_SBKF  ----------------------------------
// SVD Line: 12881

//  <item> SFDITEM_FIELD__USART2_ISR_SBKF
//    <name> SBKF </name>
//    <r> 
//    <i> [Bit 18] RO (@ 0x4000441C) SBKF </i>
//    <check> 
//      <loc> ( (unsigned int) USART2_ISR ) </loc>
//      <o.18..18> SBKF
//    </check>
//  </item>
//  


// -------------------------------  Field Item: USART2_ISR_CMF  -----------------------------------
// SVD Line: 12887

//  <item> SFDITEM_FIELD__USART2_ISR_CMF
//    <name> CMF </name>
//    <r> 
//    <i> [Bit 17] RO (@ 0x4000441C) CMF </i>
//    <check> 
//      <loc> ( (unsigned int) USART2_ISR ) </loc>
//      <o.17..17> CMF
//    </check>
//  </item>
//  


// -------------------------------  Field Item: USART2_ISR_BUSY  ----------------------------------
// SVD Line: 12893

//  <item> SFDITEM_FIELD__USART2_ISR_BUSY
//    <name> BUSY </name>
//    <r> 
//    <i> [Bit 16] RO (@ 0x4000441C) BUSY </i>
//    <check> 
//      <loc> ( (unsigned int) USART2_ISR ) </loc>
//      <o.16..16> BUSY
//    </check>
//  </item>
//  


// -------------------------------  Field Item: USART2_ISR_ABRF  ----------------------------------
// SVD Line: 12899

//  <item> SFDITEM_FIELD__USART2_ISR_ABRF
//    <name> ABRF </name>
//    <r> 
//    <i> [Bit 15] RO (@ 0x4000441C) ABRF </i>
//    <check> 
//      <loc> ( (unsigned int) USART2_ISR ) </loc>
//      <o.15..15> ABRF
//    </check>
//  </item>
//  


// -------------------------------  Field Item: USART2_ISR_ABRE  ----------------------------------
// SVD Line: 12905

//  <item> SFDITEM_FIELD__USART2_ISR_ABRE
//    <name> ABRE </name>
//    <r> 
//    <i> [Bit 14] RO (@ 0x4000441C) ABRE </i>
//    <check> 
//      <loc> ( (unsigned int) USART2_ISR ) </loc>
//      <o.14..14> ABRE
//    </check>
//  </item>
//  


// -------------------------------  Field Item: USART2_ISR_UDR  -----------------------------------
// SVD Line: 12911

//  <item> SFDITEM_FIELD__USART2_ISR_UDR
//    <name> UDR </name>
//    <r> 
//    <i> [Bit 13] RO (@ 0x4000441C) SPI slave underrun error  flag </i>
//    <check> 
//      <loc> ( (unsigned int) USART2_ISR ) </loc>
//      <o.13..13> UDR
//    </check>
//  </item>
//  


// -------------------------------  Field Item: USART2_ISR_EOBF  ----------------------------------
// SVD Line: 12918

//  <item> SFDITEM_FIELD__USART2_ISR_EOBF
//    <name> EOBF </name>
//    <r> 
//    <i> [Bit 12] RO (@ 0x4000441C) EOBF </i>
//    <check> 
//      <loc> ( (unsigned int) USART2_ISR ) </loc>
//      <o.12..12> EOBF
//    </check>
//  </item>
//  


// -------------------------------  Field Item: USART2_ISR_RTOF  ----------------------------------
// SVD Line: 12924

//  <item> SFDITEM_FIELD__USART2_ISR_RTOF
//    <name> RTOF </name>
//    <r> 
//    <i> [Bit 11] RO (@ 0x4000441C) RTOF </i>
//    <check> 
//      <loc> ( (unsigned int) USART2_ISR ) </loc>
//      <o.11..11> RTOF
//    </check>
//  </item>
//  


// -------------------------------  Field Item: USART2_ISR_CTS  -----------------------------------
// SVD Line: 12930

//  <item> SFDITEM_FIELD__USART2_ISR_CTS
//    <name> CTS </name>
//    <r> 
//    <i> [Bit 10] RO (@ 0x4000441C) CTS </i>
//    <check> 
//      <loc> ( (unsigned int) USART2_ISR ) </loc>
//      <o.10..10> CTS
//    </check>
//  </item>
//  


// ------------------------------  Field Item: USART2_ISR_CTSIF  ----------------------------------
// SVD Line: 12936

//  <item> SFDITEM_FIELD__USART2_ISR_CTSIF
//    <name> CTSIF </name>
//    <r> 
//    <i> [Bit 9] RO (@ 0x4000441C) CTSIF </i>
//    <check> 
//      <loc> ( (unsigned int) USART2_ISR ) </loc>
//      <o.9..9> CTSIF
//    </check>
//  </item>
//  


// -------------------------------  Field Item: USART2_ISR_LBDF  ----------------------------------
// SVD Line: 12942

//  <item> SFDITEM_FIELD__USART2_ISR_LBDF
//    <name> LBDF </name>
//    <r> 
//    <i> [Bit 8] RO (@ 0x4000441C) LBDF </i>
//    <check> 
//      <loc> ( (unsigned int) USART2_ISR ) </loc>
//      <o.8..8> LBDF
//    </check>
//  </item>
//  


// -------------------------------  Field Item: USART2_ISR_TXE  -----------------------------------
// SVD Line: 12948

//  <item> SFDITEM_FIELD__USART2_ISR_TXE
//    <name> TXE </name>
//    <r> 
//    <i> [Bit 7] RO (@ 0x4000441C) TXE </i>
//    <check> 
//      <loc> ( (unsigned int) USART2_ISR ) </loc>
//      <o.7..7> TXE
//    </check>
//  </item>
//  


// --------------------------------  Field Item: USART2_ISR_TC  -----------------------------------
// SVD Line: 12954

//  <item> SFDITEM_FIELD__USART2_ISR_TC
//    <name> TC </name>
//    <r> 
//    <i> [Bit 6] RO (@ 0x4000441C) TC </i>
//    <check> 
//      <loc> ( (unsigned int) USART2_ISR ) </loc>
//      <o.6..6> TC
//    </check>
//  </item>
//  


// -------------------------------  Field Item: USART2_ISR_RXNE  ----------------------------------
// SVD Line: 12960

//  <item> SFDITEM_FIELD__USART2_ISR_RXNE
//    <name> RXNE </name>
//    <r> 
//    <i> [Bit 5] RO (@ 0x4000441C) RXNE </i>
//    <check> 
//      <loc> ( (unsigned int) USART2_ISR ) </loc>
//      <o.5..5> RXNE
//    </check>
//  </item>
//  


// -------------------------------  Field Item: USART2_ISR_IDLE  ----------------------------------
// SVD Line: 12966

//  <item> SFDITEM_FIELD__USART2_ISR_IDLE
//    <name> IDLE </name>
//    <r> 
//    <i> [Bit 4] RO (@ 0x4000441C) IDLE </i>
//    <check> 
//      <loc> ( (unsigned int) USART2_ISR ) </loc>
//      <o.4..4> IDLE
//    </check>
//  </item>
//  


// -------------------------------  Field Item: USART2_ISR_ORE  -----------------------------------
// SVD Line: 12972

//  <item> SFDITEM_FIELD__USART2_ISR_ORE
//    <name> ORE </name>
//    <r> 
//    <i> [Bit 3] RO (@ 0x4000441C) ORE </i>
//    <check> 
//      <loc> ( (unsigned int) USART2_ISR ) </loc>
//      <o.3..3> ORE
//    </check>
//  </item>
//  


// --------------------------------  Field Item: USART2_ISR_NF  -----------------------------------
// SVD Line: 12978

//  <item> SFDITEM_FIELD__USART2_ISR_NF
//    <name> NF </name>
//    <r> 
//    <i> [Bit 2] RO (@ 0x4000441C) NF </i>
//    <check> 
//      <loc> ( (unsigned int) USART2_ISR ) </loc>
//      <o.2..2> NF
//    </check>
//  </item>
//  


// --------------------------------  Field Item: USART2_ISR_FE  -----------------------------------
// SVD Line: 12984

//  <item> SFDITEM_FIELD__USART2_ISR_FE
//    <name> FE </name>
//    <r> 
//    <i> [Bit 1] RO (@ 0x4000441C) FE </i>
//    <check> 
//      <loc> ( (unsigned int) USART2_ISR ) </loc>
//      <o.1..1> FE
//    </check>
//  </item>
//  


// --------------------------------  Field Item: USART2_ISR_PE  -----------------------------------
// SVD Line: 12990

//  <item> SFDITEM_FIELD__USART2_ISR_PE
//    <name> PE </name>
//    <r> 
//    <i> [Bit 0] RO (@ 0x4000441C) PE </i>
//    <check> 
//      <loc> ( (unsigned int) USART2_ISR ) </loc>
//      <o.0..0> PE
//    </check>
//  </item>
//  


// -------------------------------  Register RTree: USART2_ISR  -----------------------------------
// SVD Line: 12816

//  <rtree> SFDITEM_REG__USART2_ISR
//    <name> ISR </name>
//    <r> 
//    <i> [Bits 31..0] RO (@ 0x4000441C) Interrupt & status  register </i>
//    <loc> ( (unsigned int)((USART2_ISR >> 0) & 0xFFFFFFFF) ) </loc>
//    <item> SFDITEM_FIELD__USART2_ISR_TXFT </item>
//    <item> SFDITEM_FIELD__USART2_ISR_RXFT </item>
//    <item> SFDITEM_FIELD__USART2_ISR_TCBGT </item>
//    <item> SFDITEM_FIELD__USART2_ISR_RXFF </item>
//    <item> SFDITEM_FIELD__USART2_ISR_TXFE </item>
//    <item> SFDITEM_FIELD__USART2_ISR_REACK </item>
//    <item> SFDITEM_FIELD__USART2_ISR_TEACK </item>
//    <item> SFDITEM_FIELD__USART2_ISR_WUF </item>
//    <item> SFDITEM_FIELD__USART2_ISR_RWU </item>
//    <item> SFDITEM_FIELD__USART2_ISR_SBKF </item>
//    <item> SFDITEM_FIELD__USART2_ISR_CMF </item>
//    <item> SFDITEM_FIELD__USART2_ISR_BUSY </item>
//    <item> SFDITEM_FIELD__USART2_ISR_ABRF </item>
//    <item> SFDITEM_FIELD__USART2_ISR_ABRE </item>
//    <item> SFDITEM_FIELD__USART2_ISR_UDR </item>
//    <item> SFDITEM_FIELD__USART2_ISR_EOBF </item>
//    <item> SFDITEM_FIELD__USART2_ISR_RTOF </item>
//    <item> SFDITEM_FIELD__USART2_ISR_CTS </item>
//    <item> SFDITEM_FIELD__USART2_ISR_CTSIF </item>
//    <item> SFDITEM_FIELD__USART2_ISR_LBDF </item>
//    <item> SFDITEM_FIELD__USART2_ISR_TXE </item>
//    <item> SFDITEM_FIELD__USART2_ISR_TC </item>
//    <item> SFDITEM_FIELD__USART2_ISR_RXNE </item>
//    <item> SFDITEM_FIELD__USART2_ISR_IDLE </item>
//    <item> SFDITEM_FIELD__USART2_ISR_ORE </item>
//    <item> SFDITEM_FIELD__USART2_ISR_NF </item>
//    <item> SFDITEM_FIELD__USART2_ISR_FE </item>
//    <item> SFDITEM_FIELD__USART2_ISR_PE </item>
//  </rtree>
//  


// ----------------------------  Register Item Address: USART2_ICR  -------------------------------
// SVD Line: 12998

unsigned int USART2_ICR __AT (0x40004420);



// -------------------------------  Field Item: USART2_ICR_WUCF  ----------------------------------
// SVD Line: 13007

//  <item> SFDITEM_FIELD__USART2_ICR_WUCF
//    <name> WUCF </name>
//    <w> 
//    <i> [Bit 20] WO (@ 0x40004420) Wakeup from Stop mode clear  flag </i>
//    <check> 
//      <loc> ( (unsigned int) USART2_ICR ) </loc>
//      <o.20..20> WUCF
//    </check>
//  </item>
//  


// -------------------------------  Field Item: USART2_ICR_CMCF  ----------------------------------
// SVD Line: 13014

//  <item> SFDITEM_FIELD__USART2_ICR_CMCF
//    <name> CMCF </name>
//    <w> 
//    <i> [Bit 17] WO (@ 0x40004420) Character match clear flag </i>
//    <check> 
//      <loc> ( (unsigned int) USART2_ICR ) </loc>
//      <o.17..17> CMCF
//    </check>
//  </item>
//  


// ------------------------------  Field Item: USART2_ICR_UDRCF  ----------------------------------
// SVD Line: 13020

//  <item> SFDITEM_FIELD__USART2_ICR_UDRCF
//    <name> UDRCF </name>
//    <w> 
//    <i> [Bit 13] WO (@ 0x40004420) SPI slave underrun clear  flag </i>
//    <check> 
//      <loc> ( (unsigned int) USART2_ICR ) </loc>
//      <o.13..13> UDRCF
//    </check>
//  </item>
//  


// ------------------------------  Field Item: USART2_ICR_EOBCF  ----------------------------------
// SVD Line: 13027

//  <item> SFDITEM_FIELD__USART2_ICR_EOBCF
//    <name> EOBCF </name>
//    <w> 
//    <i> [Bit 12] WO (@ 0x40004420) End of block clear flag </i>
//    <check> 
//      <loc> ( (unsigned int) USART2_ICR ) </loc>
//      <o.12..12> EOBCF
//    </check>
//  </item>
//  


// ------------------------------  Field Item: USART2_ICR_RTOCF  ----------------------------------
// SVD Line: 13033

//  <item> SFDITEM_FIELD__USART2_ICR_RTOCF
//    <name> RTOCF </name>
//    <w> 
//    <i> [Bit 11] WO (@ 0x40004420) Receiver timeout clear  flag </i>
//    <check> 
//      <loc> ( (unsigned int) USART2_ICR ) </loc>
//      <o.11..11> RTOCF
//    </check>
//  </item>
//  


// ------------------------------  Field Item: USART2_ICR_CTSCF  ----------------------------------
// SVD Line: 13040

//  <item> SFDITEM_FIELD__USART2_ICR_CTSCF
//    <name> CTSCF </name>
//    <w> 
//    <i> [Bit 9] WO (@ 0x40004420) CTS clear flag </i>
//    <check> 
//      <loc> ( (unsigned int) USART2_ICR ) </loc>
//      <o.9..9> CTSCF
//    </check>
//  </item>
//  


// ------------------------------  Field Item: USART2_ICR_LBDCF  ----------------------------------
// SVD Line: 13046

//  <item> SFDITEM_FIELD__USART2_ICR_LBDCF
//    <name> LBDCF </name>
//    <w> 
//    <i> [Bit 8] WO (@ 0x40004420) LIN break detection clear  flag </i>
//    <check> 
//      <loc> ( (unsigned int) USART2_ICR ) </loc>
//      <o.8..8> LBDCF
//    </check>
//  </item>
//  


// -----------------------------  Field Item: USART2_ICR_TCBGTCF  ---------------------------------
// SVD Line: 13053

//  <item> SFDITEM_FIELD__USART2_ICR_TCBGTCF
//    <name> TCBGTCF </name>
//    <w> 
//    <i> [Bit 7] WO (@ 0x40004420) Transmission complete before Guard time  clear flag </i>
//    <check> 
//      <loc> ( (unsigned int) USART2_ICR ) </loc>
//      <o.7..7> TCBGTCF
//    </check>
//  </item>
//  


// -------------------------------  Field Item: USART2_ICR_TCCF  ----------------------------------
// SVD Line: 13060

//  <item> SFDITEM_FIELD__USART2_ICR_TCCF
//    <name> TCCF </name>
//    <w> 
//    <i> [Bit 6] WO (@ 0x40004420) Transmission complete clear  flag </i>
//    <check> 
//      <loc> ( (unsigned int) USART2_ICR ) </loc>
//      <o.6..6> TCCF
//    </check>
//  </item>
//  


// ------------------------------  Field Item: USART2_ICR_TXFECF  ---------------------------------
// SVD Line: 13067

//  <item> SFDITEM_FIELD__USART2_ICR_TXFECF
//    <name> TXFECF </name>
//    <w> 
//    <i> [Bit 5] WO (@ 0x40004420) TXFIFO empty clear flag </i>
//    <check> 
//      <loc> ( (unsigned int) USART2_ICR ) </loc>
//      <o.5..5> TXFECF
//    </check>
//  </item>
//  


// ------------------------------  Field Item: USART2_ICR_IDLECF  ---------------------------------
// SVD Line: 13073

//  <item> SFDITEM_FIELD__USART2_ICR_IDLECF
//    <name> IDLECF </name>
//    <w> 
//    <i> [Bit 4] WO (@ 0x40004420) Idle line detected clear  flag </i>
//    <check> 
//      <loc> ( (unsigned int) USART2_ICR ) </loc>
//      <o.4..4> IDLECF
//    </check>
//  </item>
//  


// ------------------------------  Field Item: USART2_ICR_ORECF  ----------------------------------
// SVD Line: 13080

//  <item> SFDITEM_FIELD__USART2_ICR_ORECF
//    <name> ORECF </name>
//    <w> 
//    <i> [Bit 3] WO (@ 0x40004420) Overrun error clear flag </i>
//    <check> 
//      <loc> ( (unsigned int) USART2_ICR ) </loc>
//      <o.3..3> ORECF
//    </check>
//  </item>
//  


// -------------------------------  Field Item: USART2_ICR_NCF  -----------------------------------
// SVD Line: 13086

//  <item> SFDITEM_FIELD__USART2_ICR_NCF
//    <name> NCF </name>
//    <w> 
//    <i> [Bit 2] WO (@ 0x40004420) Noise detected clear flag </i>
//    <check> 
//      <loc> ( (unsigned int) USART2_ICR ) </loc>
//      <o.2..2> NCF
//    </check>
//  </item>
//  


// -------------------------------  Field Item: USART2_ICR_FECF  ----------------------------------
// SVD Line: 13092

//  <item> SFDITEM_FIELD__USART2_ICR_FECF
//    <name> FECF </name>
//    <w> 
//    <i> [Bit 1] WO (@ 0x40004420) Framing error clear flag </i>
//    <check> 
//      <loc> ( (unsigned int) USART2_ICR ) </loc>
//      <o.1..1> FECF
//    </check>
//  </item>
//  


// -------------------------------  Field Item: USART2_ICR_PECF  ----------------------------------
// SVD Line: 13098

//  <item> SFDITEM_FIELD__USART2_ICR_PECF
//    <name> PECF </name>
//    <w> 
//    <i> [Bit 0] WO (@ 0x40004420) Parity error clear flag </i>
//    <check> 
//      <loc> ( (unsigned int) USART2_ICR ) </loc>
//      <o.0..0> PECF
//    </check>
//  </item>
//  


// -------------------------------  Register RTree: USART2_ICR  -----------------------------------
// SVD Line: 12998

//  <rtree> SFDITEM_REG__USART2_ICR
//    <name> ICR </name>
//    <w> 
//    <i> [Bits 31..0] WO (@ 0x40004420) Interrupt flag clear register </i>
//    <loc> ( (unsigned int)((USART2_ICR >> 0) & 0xFFFFFFFF), ((USART2_ICR = (USART2_ICR & ~(0x123BFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0x123BFF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__USART2_ICR_WUCF </item>
//    <item> SFDITEM_FIELD__USART2_ICR_CMCF </item>
//    <item> SFDITEM_FIELD__USART2_ICR_UDRCF </item>
//    <item> SFDITEM_FIELD__USART2_ICR_EOBCF </item>
//    <item> SFDITEM_FIELD__USART2_ICR_RTOCF </item>
//    <item> SFDITEM_FIELD__USART2_ICR_CTSCF </item>
//    <item> SFDITEM_FIELD__USART2_ICR_LBDCF </item>
//    <item> SFDITEM_FIELD__USART2_ICR_TCBGTCF </item>
//    <item> SFDITEM_FIELD__USART2_ICR_TCCF </item>
//    <item> SFDITEM_FIELD__USART2_ICR_TXFECF </item>
//    <item> SFDITEM_FIELD__USART2_ICR_IDLECF </item>
//    <item> SFDITEM_FIELD__USART2_ICR_ORECF </item>
//    <item> SFDITEM_FIELD__USART2_ICR_NCF </item>
//    <item> SFDITEM_FIELD__USART2_ICR_FECF </item>
//    <item> SFDITEM_FIELD__USART2_ICR_PECF </item>
//  </rtree>
//  


// ----------------------------  Register Item Address: USART2_RDR  -------------------------------
// SVD Line: 13106

unsigned int USART2_RDR __AT (0x40004424);



// -------------------------------  Field Item: USART2_RDR_RDR  -----------------------------------
// SVD Line: 13115

//  <item> SFDITEM_FIELD__USART2_RDR_RDR
//    <name> RDR </name>
//    <r> 
//    <i> [Bits 8..0] RO (@ 0x40004424) Receive data value </i>
//    <edit> 
//      <loc> ( (unsigned short)((USART2_RDR >> 0) & 0x1FF) ) </loc>
//    </edit>
//  </item>
//  


// -------------------------------  Register RTree: USART2_RDR  -----------------------------------
// SVD Line: 13106

//  <rtree> SFDITEM_REG__USART2_RDR
//    <name> RDR </name>
//    <r> 
//    <i> [Bits 31..0] RO (@ 0x40004424) Receive data register </i>
//    <loc> ( (unsigned int)((USART2_RDR >> 0) & 0xFFFFFFFF) ) </loc>
//    <item> SFDITEM_FIELD__USART2_RDR_RDR </item>
//  </rtree>
//  


// ----------------------------  Register Item Address: USART2_TDR  -------------------------------
// SVD Line: 13123

unsigned int USART2_TDR __AT (0x40004428);



// -------------------------------  Field Item: USART2_TDR_TDR  -----------------------------------
// SVD Line: 13132

//  <item> SFDITEM_FIELD__USART2_TDR_TDR
//    <name> TDR </name>
//    <rw> 
//    <i> [Bits 8..0] RW (@ 0x40004428) Transmit data value </i>
//    <edit> 
//      <loc> ( (unsigned short)((USART2_TDR >> 0) & 0x1FF), ((USART2_TDR = (USART2_TDR & ~(0x1FFUL << 0 )) | ((unsigned long)(Gui_u16:GuiVal & 0x1FF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -------------------------------  Register RTree: USART2_TDR  -----------------------------------
// SVD Line: 13123

//  <rtree> SFDITEM_REG__USART2_TDR
//    <name> TDR </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x40004428) Transmit data register </i>
//    <loc> ( (unsigned int)((USART2_TDR >> 0) & 0xFFFFFFFF), ((USART2_TDR = (USART2_TDR & ~(0x1FFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0x1FF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__USART2_TDR_TDR </item>
//  </rtree>
//  


// ---------------------------  Register Item Address: USART2_PRESC  ------------------------------
// SVD Line: 13140

unsigned int USART2_PRESC __AT (0x4000442C);



// ---------------------------  Field Item: USART2_PRESC_PRESCALER  -------------------------------
// SVD Line: 13149

//  <item> SFDITEM_FIELD__USART2_PRESC_PRESCALER
//    <name> PRESCALER </name>
//    <rw> 
//    <i> [Bits 3..0] RW (@ 0x4000442C) Clock prescaler </i>
//    <edit> 
//      <loc> ( (unsigned char)((USART2_PRESC >> 0) & 0xF), ((USART2_PRESC = (USART2_PRESC & ~(0xFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ------------------------------  Register RTree: USART2_PRESC  ----------------------------------
// SVD Line: 13140

//  <rtree> SFDITEM_REG__USART2_PRESC
//    <name> PRESC </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x4000442C) Prescaler register </i>
//    <loc> ( (unsigned int)((USART2_PRESC >> 0) & 0xFFFFFFFF), ((USART2_PRESC = (USART2_PRESC & ~(0xFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__USART2_PRESC_PRESCALER </item>
//  </rtree>
//  


// ---------------------------------  Peripheral View: USART2  ------------------------------------
// SVD Line: 13159

//  <view> USART2
//    <name> USART2 </name>
//    <item> SFDITEM_REG__USART2_CR1 </item>
//    <item> SFDITEM_REG__USART2_CR2 </item>
//    <item> SFDITEM_REG__USART2_CR3 </item>
//    <item> SFDITEM_REG__USART2_BRR </item>
//    <item> SFDITEM_REG__USART2_GTPR </item>
//    <item> SFDITEM_REG__USART2_RTOR </item>
//    <item> SFDITEM_REG__USART2_RQR </item>
//    <item> SFDITEM_REG__USART2_ISR </item>
//    <item> SFDITEM_REG__USART2_ICR </item>
//    <item> SFDITEM_REG__USART2_RDR </item>
//    <item> SFDITEM_REG__USART2_TDR </item>
//    <item> SFDITEM_REG__USART2_PRESC </item>
//  </view>
//  


// ----------------------------  Register Item Address: USART3_CR1  -------------------------------
// SVD Line: 12236

unsigned int USART3_CR1 __AT (0x40004800);



// ------------------------------  Field Item: USART3_CR1_RXFFIE  ---------------------------------
// SVD Line: 12245

//  <item> SFDITEM_FIELD__USART3_CR1_RXFFIE
//    <name> RXFFIE </name>
//    <rw> 
//    <i> [Bit 31] RW (@ 0x40004800) RXFIFO Full interrupt  enable </i>
//    <check> 
//      <loc> ( (unsigned int) USART3_CR1 ) </loc>
//      <o.31..31> RXFFIE
//    </check>
//  </item>
//  


// ------------------------------  Field Item: USART3_CR1_TXFEIE  ---------------------------------
// SVD Line: 12252

//  <item> SFDITEM_FIELD__USART3_CR1_TXFEIE
//    <name> TXFEIE </name>
//    <rw> 
//    <i> [Bit 30] RW (@ 0x40004800) TXFIFO empty interrupt  enable </i>
//    <check> 
//      <loc> ( (unsigned int) USART3_CR1 ) </loc>
//      <o.30..30> TXFEIE
//    </check>
//  </item>
//  


// ------------------------------  Field Item: USART3_CR1_FIFOEN  ---------------------------------
// SVD Line: 12259

//  <item> SFDITEM_FIELD__USART3_CR1_FIFOEN
//    <name> FIFOEN </name>
//    <rw> 
//    <i> [Bit 29] RW (@ 0x40004800) FIFO mode enable </i>
//    <check> 
//      <loc> ( (unsigned int) USART3_CR1 ) </loc>
//      <o.29..29> FIFOEN
//    </check>
//  </item>
//  


// --------------------------------  Field Item: USART3_CR1_M1  -----------------------------------
// SVD Line: 12265

//  <item> SFDITEM_FIELD__USART3_CR1_M1
//    <name> M1 </name>
//    <rw> 
//    <i> [Bit 28] RW (@ 0x40004800) Word length </i>
//    <check> 
//      <loc> ( (unsigned int) USART3_CR1 ) </loc>
//      <o.28..28> M1
//    </check>
//  </item>
//  


// ------------------------------  Field Item: USART3_CR1_EOBIE  ----------------------------------
// SVD Line: 12271

//  <item> SFDITEM_FIELD__USART3_CR1_EOBIE
//    <name> EOBIE </name>
//    <rw> 
//    <i> [Bit 27] RW (@ 0x40004800) End of Block interrupt  enable </i>
//    <check> 
//      <loc> ( (unsigned int) USART3_CR1 ) </loc>
//      <o.27..27> EOBIE
//    </check>
//  </item>
//  


// ------------------------------  Field Item: USART3_CR1_RTOIE  ----------------------------------
// SVD Line: 12278

//  <item> SFDITEM_FIELD__USART3_CR1_RTOIE
//    <name> RTOIE </name>
//    <rw> 
//    <i> [Bit 26] RW (@ 0x40004800) Receiver timeout interrupt  enable </i>
//    <check> 
//      <loc> ( (unsigned int) USART3_CR1 ) </loc>
//      <o.26..26> RTOIE
//    </check>
//  </item>
//  


// -------------------------------  Field Item: USART3_CR1_DEAT  ----------------------------------
// SVD Line: 12285

//  <item> SFDITEM_FIELD__USART3_CR1_DEAT
//    <name> DEAT </name>
//    <rw> 
//    <i> [Bits 25..21] RW (@ 0x40004800) DEAT </i>
//    <edit> 
//      <loc> ( (unsigned char)((USART3_CR1 >> 21) & 0x1F), ((USART3_CR1 = (USART3_CR1 & ~(0x1FUL << 21 )) | ((unsigned long)(Gui_u8:GuiVal & 0x1F) << 21 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -------------------------------  Field Item: USART3_CR1_DEDT  ----------------------------------
// SVD Line: 12291

//  <item> SFDITEM_FIELD__USART3_CR1_DEDT
//    <name> DEDT </name>
//    <rw> 
//    <i> [Bits 20..16] RW (@ 0x40004800) DEDT </i>
//    <edit> 
//      <loc> ( (unsigned char)((USART3_CR1 >> 16) & 0x1F), ((USART3_CR1 = (USART3_CR1 & ~(0x1FUL << 16 )) | ((unsigned long)(Gui_u8:GuiVal & 0x1F) << 16 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ------------------------------  Field Item: USART3_CR1_OVER8  ----------------------------------
// SVD Line: 12297

//  <item> SFDITEM_FIELD__USART3_CR1_OVER8
//    <name> OVER8 </name>
//    <rw> 
//    <i> [Bit 15] RW (@ 0x40004800) Oversampling mode </i>
//    <check> 
//      <loc> ( (unsigned int) USART3_CR1 ) </loc>
//      <o.15..15> OVER8
//    </check>
//  </item>
//  


// -------------------------------  Field Item: USART3_CR1_CMIE  ----------------------------------
// SVD Line: 12303

//  <item> SFDITEM_FIELD__USART3_CR1_CMIE
//    <name> CMIE </name>
//    <rw> 
//    <i> [Bit 14] RW (@ 0x40004800) Character match interrupt  enable </i>
//    <check> 
//      <loc> ( (unsigned int) USART3_CR1 ) </loc>
//      <o.14..14> CMIE
//    </check>
//  </item>
//  


// -------------------------------  Field Item: USART3_CR1_MME  -----------------------------------
// SVD Line: 12310

//  <item> SFDITEM_FIELD__USART3_CR1_MME
//    <name> MME </name>
//    <rw> 
//    <i> [Bit 13] RW (@ 0x40004800) Mute mode enable </i>
//    <check> 
//      <loc> ( (unsigned int) USART3_CR1 ) </loc>
//      <o.13..13> MME
//    </check>
//  </item>
//  


// --------------------------------  Field Item: USART3_CR1_M0  -----------------------------------
// SVD Line: 12316

//  <item> SFDITEM_FIELD__USART3_CR1_M0
//    <name> M0 </name>
//    <rw> 
//    <i> [Bit 12] RW (@ 0x40004800) Word length </i>
//    <check> 
//      <loc> ( (unsigned int) USART3_CR1 ) </loc>
//      <o.12..12> M0
//    </check>
//  </item>
//  


// -------------------------------  Field Item: USART3_CR1_WAKE  ----------------------------------
// SVD Line: 12322

//  <item> SFDITEM_FIELD__USART3_CR1_WAKE
//    <name> WAKE </name>
//    <rw> 
//    <i> [Bit 11] RW (@ 0x40004800) Receiver wakeup method </i>
//    <check> 
//      <loc> ( (unsigned int) USART3_CR1 ) </loc>
//      <o.11..11> WAKE
//    </check>
//  </item>
//  


// -------------------------------  Field Item: USART3_CR1_PCE  -----------------------------------
// SVD Line: 12328

//  <item> SFDITEM_FIELD__USART3_CR1_PCE
//    <name> PCE </name>
//    <rw> 
//    <i> [Bit 10] RW (@ 0x40004800) Parity control enable </i>
//    <check> 
//      <loc> ( (unsigned int) USART3_CR1 ) </loc>
//      <o.10..10> PCE
//    </check>
//  </item>
//  


// --------------------------------  Field Item: USART3_CR1_PS  -----------------------------------
// SVD Line: 12334

//  <item> SFDITEM_FIELD__USART3_CR1_PS
//    <name> PS </name>
//    <rw> 
//    <i> [Bit 9] RW (@ 0x40004800) Parity selection </i>
//    <check> 
//      <loc> ( (unsigned int) USART3_CR1 ) </loc>
//      <o.9..9> PS
//    </check>
//  </item>
//  


// -------------------------------  Field Item: USART3_CR1_PEIE  ----------------------------------
// SVD Line: 12340

//  <item> SFDITEM_FIELD__USART3_CR1_PEIE
//    <name> PEIE </name>
//    <rw> 
//    <i> [Bit 8] RW (@ 0x40004800) PE interrupt enable </i>
//    <check> 
//      <loc> ( (unsigned int) USART3_CR1 ) </loc>
//      <o.8..8> PEIE
//    </check>
//  </item>
//  


// ------------------------------  Field Item: USART3_CR1_TXEIE  ----------------------------------
// SVD Line: 12346

//  <item> SFDITEM_FIELD__USART3_CR1_TXEIE
//    <name> TXEIE </name>
//    <rw> 
//    <i> [Bit 7] RW (@ 0x40004800) interrupt enable </i>
//    <check> 
//      <loc> ( (unsigned int) USART3_CR1 ) </loc>
//      <o.7..7> TXEIE
//    </check>
//  </item>
//  


// -------------------------------  Field Item: USART3_CR1_TCIE  ----------------------------------
// SVD Line: 12352

//  <item> SFDITEM_FIELD__USART3_CR1_TCIE
//    <name> TCIE </name>
//    <rw> 
//    <i> [Bit 6] RW (@ 0x40004800) Transmission complete interrupt  enable </i>
//    <check> 
//      <loc> ( (unsigned int) USART3_CR1 ) </loc>
//      <o.6..6> TCIE
//    </check>
//  </item>
//  


// ------------------------------  Field Item: USART3_CR1_RXNEIE  ---------------------------------
// SVD Line: 12359

//  <item> SFDITEM_FIELD__USART3_CR1_RXNEIE
//    <name> RXNEIE </name>
//    <rw> 
//    <i> [Bit 5] RW (@ 0x40004800) RXNE interrupt enable </i>
//    <check> 
//      <loc> ( (unsigned int) USART3_CR1 ) </loc>
//      <o.5..5> RXNEIE
//    </check>
//  </item>
//  


// ------------------------------  Field Item: USART3_CR1_IDLEIE  ---------------------------------
// SVD Line: 12365

//  <item> SFDITEM_FIELD__USART3_CR1_IDLEIE
//    <name> IDLEIE </name>
//    <rw> 
//    <i> [Bit 4] RW (@ 0x40004800) IDLE interrupt enable </i>
//    <check> 
//      <loc> ( (unsigned int) USART3_CR1 ) </loc>
//      <o.4..4> IDLEIE
//    </check>
//  </item>
//  


// --------------------------------  Field Item: USART3_CR1_TE  -----------------------------------
// SVD Line: 12371

//  <item> SFDITEM_FIELD__USART3_CR1_TE
//    <name> TE </name>
//    <rw> 
//    <i> [Bit 3] RW (@ 0x40004800) Transmitter enable </i>
//    <check> 
//      <loc> ( (unsigned int) USART3_CR1 ) </loc>
//      <o.3..3> TE
//    </check>
//  </item>
//  


// --------------------------------  Field Item: USART3_CR1_RE  -----------------------------------
// SVD Line: 12377

//  <item> SFDITEM_FIELD__USART3_CR1_RE
//    <name> RE </name>
//    <rw> 
//    <i> [Bit 2] RW (@ 0x40004800) Receiver enable </i>
//    <check> 
//      <loc> ( (unsigned int) USART3_CR1 ) </loc>
//      <o.2..2> RE
//    </check>
//  </item>
//  


// -------------------------------  Field Item: USART3_CR1_UESM  ----------------------------------
// SVD Line: 12383

//  <item> SFDITEM_FIELD__USART3_CR1_UESM
//    <name> UESM </name>
//    <rw> 
//    <i> [Bit 1] RW (@ 0x40004800) USART enable in Stop mode </i>
//    <check> 
//      <loc> ( (unsigned int) USART3_CR1 ) </loc>
//      <o.1..1> UESM
//    </check>
//  </item>
//  


// --------------------------------  Field Item: USART3_CR1_UE  -----------------------------------
// SVD Line: 12389

//  <item> SFDITEM_FIELD__USART3_CR1_UE
//    <name> UE </name>
//    <rw> 
//    <i> [Bit 0] RW (@ 0x40004800) USART enable </i>
//    <check> 
//      <loc> ( (unsigned int) USART3_CR1 ) </loc>
//      <o.0..0> UE
//    </check>
//  </item>
//  


// -------------------------------  Register RTree: USART3_CR1  -----------------------------------
// SVD Line: 12236

//  <rtree> SFDITEM_REG__USART3_CR1
//    <name> CR1 </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x40004800) Control register 1 </i>
//    <loc> ( (unsigned int)((USART3_CR1 >> 0) & 0xFFFFFFFF), ((USART3_CR1 = (USART3_CR1 & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__USART3_CR1_RXFFIE </item>
//    <item> SFDITEM_FIELD__USART3_CR1_TXFEIE </item>
//    <item> SFDITEM_FIELD__USART3_CR1_FIFOEN </item>
//    <item> SFDITEM_FIELD__USART3_CR1_M1 </item>
//    <item> SFDITEM_FIELD__USART3_CR1_EOBIE </item>
//    <item> SFDITEM_FIELD__USART3_CR1_RTOIE </item>
//    <item> SFDITEM_FIELD__USART3_CR1_DEAT </item>
//    <item> SFDITEM_FIELD__USART3_CR1_DEDT </item>
//    <item> SFDITEM_FIELD__USART3_CR1_OVER8 </item>
//    <item> SFDITEM_FIELD__USART3_CR1_CMIE </item>
//    <item> SFDITEM_FIELD__USART3_CR1_MME </item>
//    <item> SFDITEM_FIELD__USART3_CR1_M0 </item>
//    <item> SFDITEM_FIELD__USART3_CR1_WAKE </item>
//    <item> SFDITEM_FIELD__USART3_CR1_PCE </item>
//    <item> SFDITEM_FIELD__USART3_CR1_PS </item>
//    <item> SFDITEM_FIELD__USART3_CR1_PEIE </item>
//    <item> SFDITEM_FIELD__USART3_CR1_TXEIE </item>
//    <item> SFDITEM_FIELD__USART3_CR1_TCIE </item>
//    <item> SFDITEM_FIELD__USART3_CR1_RXNEIE </item>
//    <item> SFDITEM_FIELD__USART3_CR1_IDLEIE </item>
//    <item> SFDITEM_FIELD__USART3_CR1_TE </item>
//    <item> SFDITEM_FIELD__USART3_CR1_RE </item>
//    <item> SFDITEM_FIELD__USART3_CR1_UESM </item>
//    <item> SFDITEM_FIELD__USART3_CR1_UE </item>
//  </rtree>
//  


// ----------------------------  Register Item Address: USART3_CR2  -------------------------------
// SVD Line: 12397

unsigned int USART3_CR2 __AT (0x40004804);



// ------------------------------  Field Item: USART3_CR2_ADD4_7  ---------------------------------
// SVD Line: 12406

//  <item> SFDITEM_FIELD__USART3_CR2_ADD4_7
//    <name> ADD4_7 </name>
//    <rw> 
//    <i> [Bits 31..28] RW (@ 0x40004804) Address of the USART node </i>
//    <edit> 
//      <loc> ( (unsigned char)((USART3_CR2 >> 28) & 0xF), ((USART3_CR2 = (USART3_CR2 & ~(0xFUL << 28 )) | ((unsigned long)(Gui_u8:GuiVal & 0xF) << 28 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ------------------------------  Field Item: USART3_CR2_ADD0_3  ---------------------------------
// SVD Line: 12412

//  <item> SFDITEM_FIELD__USART3_CR2_ADD0_3
//    <name> ADD0_3 </name>
//    <rw> 
//    <i> [Bits 27..24] RW (@ 0x40004804) Address of the USART node </i>
//    <edit> 
//      <loc> ( (unsigned char)((USART3_CR2 >> 24) & 0xF), ((USART3_CR2 = (USART3_CR2 & ~(0xFUL << 24 )) | ((unsigned long)(Gui_u8:GuiVal & 0xF) << 24 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ------------------------------  Field Item: USART3_CR2_RTOEN  ----------------------------------
// SVD Line: 12418

//  <item> SFDITEM_FIELD__USART3_CR2_RTOEN
//    <name> RTOEN </name>
//    <rw> 
//    <i> [Bit 23] RW (@ 0x40004804) Receiver timeout enable </i>
//    <check> 
//      <loc> ( (unsigned int) USART3_CR2 ) </loc>
//      <o.23..23> RTOEN
//    </check>
//  </item>
//  


// ------------------------------  Field Item: USART3_CR2_ABRMOD  ---------------------------------
// SVD Line: 12424

//  <item> SFDITEM_FIELD__USART3_CR2_ABRMOD
//    <name> ABRMOD </name>
//    <rw> 
//    <i> [Bits 22..21] RW (@ 0x40004804) Auto baud rate mode </i>
//    <edit> 
//      <loc> ( (unsigned char)((USART3_CR2 >> 21) & 0x3), ((USART3_CR2 = (USART3_CR2 & ~(0x3UL << 21 )) | ((unsigned long)(Gui_u8:GuiVal & 0x3) << 21 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ------------------------------  Field Item: USART3_CR2_ABREN  ----------------------------------
// SVD Line: 12430

//  <item> SFDITEM_FIELD__USART3_CR2_ABREN
//    <name> ABREN </name>
//    <rw> 
//    <i> [Bit 20] RW (@ 0x40004804) Auto baud rate enable </i>
//    <check> 
//      <loc> ( (unsigned int) USART3_CR2 ) </loc>
//      <o.20..20> ABREN
//    </check>
//  </item>
//  


// -----------------------------  Field Item: USART3_CR2_MSBFIRST  --------------------------------
// SVD Line: 12436

//  <item> SFDITEM_FIELD__USART3_CR2_MSBFIRST
//    <name> MSBFIRST </name>
//    <rw> 
//    <i> [Bit 19] RW (@ 0x40004804) Most significant bit first </i>
//    <check> 
//      <loc> ( (unsigned int) USART3_CR2 ) </loc>
//      <o.19..19> MSBFIRST
//    </check>
//  </item>
//  


// ------------------------------  Field Item: USART3_CR2_TAINV  ----------------------------------
// SVD Line: 12442

//  <item> SFDITEM_FIELD__USART3_CR2_TAINV
//    <name> TAINV </name>
//    <rw> 
//    <i> [Bit 18] RW (@ 0x40004804) Binary data inversion </i>
//    <check> 
//      <loc> ( (unsigned int) USART3_CR2 ) </loc>
//      <o.18..18> TAINV
//    </check>
//  </item>
//  


// ------------------------------  Field Item: USART3_CR2_TXINV  ----------------------------------
// SVD Line: 12448

//  <item> SFDITEM_FIELD__USART3_CR2_TXINV
//    <name> TXINV </name>
//    <rw> 
//    <i> [Bit 17] RW (@ 0x40004804) TX pin active level  inversion </i>
//    <check> 
//      <loc> ( (unsigned int) USART3_CR2 ) </loc>
//      <o.17..17> TXINV
//    </check>
//  </item>
//  


// ------------------------------  Field Item: USART3_CR2_RXINV  ----------------------------------
// SVD Line: 12455

//  <item> SFDITEM_FIELD__USART3_CR2_RXINV
//    <name> RXINV </name>
//    <rw> 
//    <i> [Bit 16] RW (@ 0x40004804) RX pin active level  inversion </i>
//    <check> 
//      <loc> ( (unsigned int) USART3_CR2 ) </loc>
//      <o.16..16> RXINV
//    </check>
//  </item>
//  


// -------------------------------  Field Item: USART3_CR2_SWAP  ----------------------------------
// SVD Line: 12462

//  <item> SFDITEM_FIELD__USART3_CR2_SWAP
//    <name> SWAP </name>
//    <rw> 
//    <i> [Bit 15] RW (@ 0x40004804) Swap TX/RX pins </i>
//    <check> 
//      <loc> ( (unsigned int) USART3_CR2 ) </loc>
//      <o.15..15> SWAP
//    </check>
//  </item>
//  


// ------------------------------  Field Item: USART3_CR2_LINEN  ----------------------------------
// SVD Line: 12468

//  <item> SFDITEM_FIELD__USART3_CR2_LINEN
//    <name> LINEN </name>
//    <rw> 
//    <i> [Bit 14] RW (@ 0x40004804) LIN mode enable </i>
//    <check> 
//      <loc> ( (unsigned int) USART3_CR2 ) </loc>
//      <o.14..14> LINEN
//    </check>
//  </item>
//  


// -------------------------------  Field Item: USART3_CR2_STOP  ----------------------------------
// SVD Line: 12474

//  <item> SFDITEM_FIELD__USART3_CR2_STOP
//    <name> STOP </name>
//    <rw> 
//    <i> [Bits 13..12] RW (@ 0x40004804) STOP bits </i>
//    <edit> 
//      <loc> ( (unsigned char)((USART3_CR2 >> 12) & 0x3), ((USART3_CR2 = (USART3_CR2 & ~(0x3UL << 12 )) | ((unsigned long)(Gui_u8:GuiVal & 0x3) << 12 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ------------------------------  Field Item: USART3_CR2_CLKEN  ----------------------------------
// SVD Line: 12480

//  <item> SFDITEM_FIELD__USART3_CR2_CLKEN
//    <name> CLKEN </name>
//    <rw> 
//    <i> [Bit 11] RW (@ 0x40004804) Clock enable </i>
//    <check> 
//      <loc> ( (unsigned int) USART3_CR2 ) </loc>
//      <o.11..11> CLKEN
//    </check>
//  </item>
//  


// -------------------------------  Field Item: USART3_CR2_CPOL  ----------------------------------
// SVD Line: 12486

//  <item> SFDITEM_FIELD__USART3_CR2_CPOL
//    <name> CPOL </name>
//    <rw> 
//    <i> [Bit 10] RW (@ 0x40004804) Clock polarity </i>
//    <check> 
//      <loc> ( (unsigned int) USART3_CR2 ) </loc>
//      <o.10..10> CPOL
//    </check>
//  </item>
//  


// -------------------------------  Field Item: USART3_CR2_CPHA  ----------------------------------
// SVD Line: 12492

//  <item> SFDITEM_FIELD__USART3_CR2_CPHA
//    <name> CPHA </name>
//    <rw> 
//    <i> [Bit 9] RW (@ 0x40004804) Clock phase </i>
//    <check> 
//      <loc> ( (unsigned int) USART3_CR2 ) </loc>
//      <o.9..9> CPHA
//    </check>
//  </item>
//  


// -------------------------------  Field Item: USART3_CR2_LBCL  ----------------------------------
// SVD Line: 12498

//  <item> SFDITEM_FIELD__USART3_CR2_LBCL
//    <name> LBCL </name>
//    <rw> 
//    <i> [Bit 8] RW (@ 0x40004804) Last bit clock pulse </i>
//    <check> 
//      <loc> ( (unsigned int) USART3_CR2 ) </loc>
//      <o.8..8> LBCL
//    </check>
//  </item>
//  


// ------------------------------  Field Item: USART3_CR2_LBDIE  ----------------------------------
// SVD Line: 12504

//  <item> SFDITEM_FIELD__USART3_CR2_LBDIE
//    <name> LBDIE </name>
//    <rw> 
//    <i> [Bit 6] RW (@ 0x40004804) LIN break detection interrupt  enable </i>
//    <check> 
//      <loc> ( (unsigned int) USART3_CR2 ) </loc>
//      <o.6..6> LBDIE
//    </check>
//  </item>
//  


// -------------------------------  Field Item: USART3_CR2_LBDL  ----------------------------------
// SVD Line: 12511

//  <item> SFDITEM_FIELD__USART3_CR2_LBDL
//    <name> LBDL </name>
//    <rw> 
//    <i> [Bit 5] RW (@ 0x40004804) LIN break detection length </i>
//    <check> 
//      <loc> ( (unsigned int) USART3_CR2 ) </loc>
//      <o.5..5> LBDL
//    </check>
//  </item>
//  


// ------------------------------  Field Item: USART3_CR2_ADDM7  ----------------------------------
// SVD Line: 12517

//  <item> SFDITEM_FIELD__USART3_CR2_ADDM7
//    <name> ADDM7 </name>
//    <rw> 
//    <i> [Bit 4] RW (@ 0x40004804) 7-bit Address Detection/4-bit Address  Detection </i>
//    <check> 
//      <loc> ( (unsigned int) USART3_CR2 ) </loc>
//      <o.4..4> ADDM7
//    </check>
//  </item>
//  


// -----------------------------  Field Item: USART3_CR2_DIS_NSS  ---------------------------------
// SVD Line: 12524

//  <item> SFDITEM_FIELD__USART3_CR2_DIS_NSS
//    <name> DIS_NSS </name>
//    <rw> 
//    <i> [Bit 3] RW (@ 0x40004804) When the DSI_NSS bit is set, the NSS pin  input will be ignored </i>
//    <check> 
//      <loc> ( (unsigned int) USART3_CR2 ) </loc>
//      <o.3..3> DIS_NSS
//    </check>
//  </item>
//  


// ------------------------------  Field Item: USART3_CR2_SLVEN  ----------------------------------
// SVD Line: 12531

//  <item> SFDITEM_FIELD__USART3_CR2_SLVEN
//    <name> SLVEN </name>
//    <rw> 
//    <i> [Bit 0] RW (@ 0x40004804) Synchronous Slave mode  enable </i>
//    <check> 
//      <loc> ( (unsigned int) USART3_CR2 ) </loc>
//      <o.0..0> SLVEN
//    </check>
//  </item>
//  


// -------------------------------  Register RTree: USART3_CR2  -----------------------------------
// SVD Line: 12397

//  <rtree> SFDITEM_REG__USART3_CR2
//    <name> CR2 </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x40004804) Control register 2 </i>
//    <loc> ( (unsigned int)((USART3_CR2 >> 0) & 0xFFFFFFFF), ((USART3_CR2 = (USART3_CR2 & ~(0xFFFFFF79UL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFF79) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__USART3_CR2_ADD4_7 </item>
//    <item> SFDITEM_FIELD__USART3_CR2_ADD0_3 </item>
//    <item> SFDITEM_FIELD__USART3_CR2_RTOEN </item>
//    <item> SFDITEM_FIELD__USART3_CR2_ABRMOD </item>
//    <item> SFDITEM_FIELD__USART3_CR2_ABREN </item>
//    <item> SFDITEM_FIELD__USART3_CR2_MSBFIRST </item>
//    <item> SFDITEM_FIELD__USART3_CR2_TAINV </item>
//    <item> SFDITEM_FIELD__USART3_CR2_TXINV </item>
//    <item> SFDITEM_FIELD__USART3_CR2_RXINV </item>
//    <item> SFDITEM_FIELD__USART3_CR2_SWAP </item>
//    <item> SFDITEM_FIELD__USART3_CR2_LINEN </item>
//    <item> SFDITEM_FIELD__USART3_CR2_STOP </item>
//    <item> SFDITEM_FIELD__USART3_CR2_CLKEN </item>
//    <item> SFDITEM_FIELD__USART3_CR2_CPOL </item>
//    <item> SFDITEM_FIELD__USART3_CR2_CPHA </item>
//    <item> SFDITEM_FIELD__USART3_CR2_LBCL </item>
//    <item> SFDITEM_FIELD__USART3_CR2_LBDIE </item>
//    <item> SFDITEM_FIELD__USART3_CR2_LBDL </item>
//    <item> SFDITEM_FIELD__USART3_CR2_ADDM7 </item>
//    <item> SFDITEM_FIELD__USART3_CR2_DIS_NSS </item>
//    <item> SFDITEM_FIELD__USART3_CR2_SLVEN </item>
//  </rtree>
//  


// ----------------------------  Register Item Address: USART3_CR3  -------------------------------
// SVD Line: 12540

unsigned int USART3_CR3 __AT (0x40004808);



// -----------------------------  Field Item: USART3_CR3_TXFTCFG  ---------------------------------
// SVD Line: 12549

//  <item> SFDITEM_FIELD__USART3_CR3_TXFTCFG
//    <name> TXFTCFG </name>
//    <rw> 
//    <i> [Bits 31..29] RW (@ 0x40004808) TXFIFO threshold  configuration </i>
//    <edit> 
//      <loc> ( (unsigned char)((USART3_CR3 >> 29) & 0x7), ((USART3_CR3 = (USART3_CR3 & ~(0x7UL << 29 )) | ((unsigned long)(Gui_u8:GuiVal & 0x7) << 29 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ------------------------------  Field Item: USART3_CR3_RXFTIE  ---------------------------------
// SVD Line: 12556

//  <item> SFDITEM_FIELD__USART3_CR3_RXFTIE
//    <name> RXFTIE </name>
//    <rw> 
//    <i> [Bit 28] RW (@ 0x40004808) RXFIFO threshold interrupt  enable </i>
//    <check> 
//      <loc> ( (unsigned int) USART3_CR3 ) </loc>
//      <o.28..28> RXFTIE
//    </check>
//  </item>
//  


// -----------------------------  Field Item: USART3_CR3_RXFTCFG  ---------------------------------
// SVD Line: 12563

//  <item> SFDITEM_FIELD__USART3_CR3_RXFTCFG
//    <name> RXFTCFG </name>
//    <rw> 
//    <i> [Bits 27..25] RW (@ 0x40004808) Receive FIFO threshold  configuration </i>
//    <edit> 
//      <loc> ( (unsigned char)((USART3_CR3 >> 25) & 0x7), ((USART3_CR3 = (USART3_CR3 & ~(0x7UL << 25 )) | ((unsigned long)(Gui_u8:GuiVal & 0x7) << 25 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -----------------------------  Field Item: USART3_CR3_TCBGTIE  ---------------------------------
// SVD Line: 12570

//  <item> SFDITEM_FIELD__USART3_CR3_TCBGTIE
//    <name> TCBGTIE </name>
//    <rw> 
//    <i> [Bit 24] RW (@ 0x40004808) Tr Complete before guard time, interrupt  enable </i>
//    <check> 
//      <loc> ( (unsigned int) USART3_CR3 ) </loc>
//      <o.24..24> TCBGTIE
//    </check>
//  </item>
//  


// ------------------------------  Field Item: USART3_CR3_TXFTIE  ---------------------------------
// SVD Line: 12577

//  <item> SFDITEM_FIELD__USART3_CR3_TXFTIE
//    <name> TXFTIE </name>
//    <rw> 
//    <i> [Bit 23] RW (@ 0x40004808) threshold interrupt enable </i>
//    <check> 
//      <loc> ( (unsigned int) USART3_CR3 ) </loc>
//      <o.23..23> TXFTIE
//    </check>
//  </item>
//  


// ------------------------------  Field Item: USART3_CR3_WUFIE  ----------------------------------
// SVD Line: 12583

//  <item> SFDITEM_FIELD__USART3_CR3_WUFIE
//    <name> WUFIE </name>
//    <rw> 
//    <i> [Bit 22] RW (@ 0x40004808) Wakeup from Stop mode interrupt  enable </i>
//    <check> 
//      <loc> ( (unsigned int) USART3_CR3 ) </loc>
//      <o.22..22> WUFIE
//    </check>
//  </item>
//  


// -------------------------------  Field Item: USART3_CR3_WUS  -----------------------------------
// SVD Line: 12590

//  <item> SFDITEM_FIELD__USART3_CR3_WUS
//    <name> WUS </name>
//    <rw> 
//    <i> [Bits 21..20] RW (@ 0x40004808) Wakeup from Stop mode interrupt flag  selection </i>
//    <edit> 
//      <loc> ( (unsigned char)((USART3_CR3 >> 20) & 0x3), ((USART3_CR3 = (USART3_CR3 & ~(0x3UL << 20 )) | ((unsigned long)(Gui_u8:GuiVal & 0x3) << 20 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -----------------------------  Field Item: USART3_CR3_SCARCNT  ---------------------------------
// SVD Line: 12597

//  <item> SFDITEM_FIELD__USART3_CR3_SCARCNT
//    <name> SCARCNT </name>
//    <rw> 
//    <i> [Bits 19..17] RW (@ 0x40004808) Smartcard auto-retry count </i>
//    <edit> 
//      <loc> ( (unsigned char)((USART3_CR3 >> 17) & 0x7), ((USART3_CR3 = (USART3_CR3 & ~(0x7UL << 17 )) | ((unsigned long)(Gui_u8:GuiVal & 0x7) << 17 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -------------------------------  Field Item: USART3_CR3_DEP  -----------------------------------
// SVD Line: 12603

//  <item> SFDITEM_FIELD__USART3_CR3_DEP
//    <name> DEP </name>
//    <rw> 
//    <i> [Bit 15] RW (@ 0x40004808) Driver enable polarity  selection </i>
//    <check> 
//      <loc> ( (unsigned int) USART3_CR3 ) </loc>
//      <o.15..15> DEP
//    </check>
//  </item>
//  


// -------------------------------  Field Item: USART3_CR3_DEM  -----------------------------------
// SVD Line: 12610

//  <item> SFDITEM_FIELD__USART3_CR3_DEM
//    <name> DEM </name>
//    <rw> 
//    <i> [Bit 14] RW (@ 0x40004808) Driver enable mode </i>
//    <check> 
//      <loc> ( (unsigned int) USART3_CR3 ) </loc>
//      <o.14..14> DEM
//    </check>
//  </item>
//  


// -------------------------------  Field Item: USART3_CR3_DDRE  ----------------------------------
// SVD Line: 12616

//  <item> SFDITEM_FIELD__USART3_CR3_DDRE
//    <name> DDRE </name>
//    <rw> 
//    <i> [Bit 13] RW (@ 0x40004808) DMA Disable on Reception  Error </i>
//    <check> 
//      <loc> ( (unsigned int) USART3_CR3 ) </loc>
//      <o.13..13> DDRE
//    </check>
//  </item>
//  


// ------------------------------  Field Item: USART3_CR3_OVRDIS  ---------------------------------
// SVD Line: 12623

//  <item> SFDITEM_FIELD__USART3_CR3_OVRDIS
//    <name> OVRDIS </name>
//    <rw> 
//    <i> [Bit 12] RW (@ 0x40004808) Overrun Disable </i>
//    <check> 
//      <loc> ( (unsigned int) USART3_CR3 ) </loc>
//      <o.12..12> OVRDIS
//    </check>
//  </item>
//  


// ------------------------------  Field Item: USART3_CR3_ONEBIT  ---------------------------------
// SVD Line: 12629

//  <item> SFDITEM_FIELD__USART3_CR3_ONEBIT
//    <name> ONEBIT </name>
//    <rw> 
//    <i> [Bit 11] RW (@ 0x40004808) One sample bit method  enable </i>
//    <check> 
//      <loc> ( (unsigned int) USART3_CR3 ) </loc>
//      <o.11..11> ONEBIT
//    </check>
//  </item>
//  


// ------------------------------  Field Item: USART3_CR3_CTSIE  ----------------------------------
// SVD Line: 12636

//  <item> SFDITEM_FIELD__USART3_CR3_CTSIE
//    <name> CTSIE </name>
//    <rw> 
//    <i> [Bit 10] RW (@ 0x40004808) CTS interrupt enable </i>
//    <check> 
//      <loc> ( (unsigned int) USART3_CR3 ) </loc>
//      <o.10..10> CTSIE
//    </check>
//  </item>
//  


// -------------------------------  Field Item: USART3_CR3_CTSE  ----------------------------------
// SVD Line: 12642

//  <item> SFDITEM_FIELD__USART3_CR3_CTSE
//    <name> CTSE </name>
//    <rw> 
//    <i> [Bit 9] RW (@ 0x40004808) CTS enable </i>
//    <check> 
//      <loc> ( (unsigned int) USART3_CR3 ) </loc>
//      <o.9..9> CTSE
//    </check>
//  </item>
//  


// -------------------------------  Field Item: USART3_CR3_RTSE  ----------------------------------
// SVD Line: 12648

//  <item> SFDITEM_FIELD__USART3_CR3_RTSE
//    <name> RTSE </name>
//    <rw> 
//    <i> [Bit 8] RW (@ 0x40004808) RTS enable </i>
//    <check> 
//      <loc> ( (unsigned int) USART3_CR3 ) </loc>
//      <o.8..8> RTSE
//    </check>
//  </item>
//  


// -------------------------------  Field Item: USART3_CR3_DMAT  ----------------------------------
// SVD Line: 12654

//  <item> SFDITEM_FIELD__USART3_CR3_DMAT
//    <name> DMAT </name>
//    <rw> 
//    <i> [Bit 7] RW (@ 0x40004808) DMA enable transmitter </i>
//    <check> 
//      <loc> ( (unsigned int) USART3_CR3 ) </loc>
//      <o.7..7> DMAT
//    </check>
//  </item>
//  


// -------------------------------  Field Item: USART3_CR3_DMAR  ----------------------------------
// SVD Line: 12660

//  <item> SFDITEM_FIELD__USART3_CR3_DMAR
//    <name> DMAR </name>
//    <rw> 
//    <i> [Bit 6] RW (@ 0x40004808) DMA enable receiver </i>
//    <check> 
//      <loc> ( (unsigned int) USART3_CR3 ) </loc>
//      <o.6..6> DMAR
//    </check>
//  </item>
//  


// -------------------------------  Field Item: USART3_CR3_SCEN  ----------------------------------
// SVD Line: 12666

//  <item> SFDITEM_FIELD__USART3_CR3_SCEN
//    <name> SCEN </name>
//    <rw> 
//    <i> [Bit 5] RW (@ 0x40004808) Smartcard mode enable </i>
//    <check> 
//      <loc> ( (unsigned int) USART3_CR3 ) </loc>
//      <o.5..5> SCEN
//    </check>
//  </item>
//  


// -------------------------------  Field Item: USART3_CR3_NACK  ----------------------------------
// SVD Line: 12672

//  <item> SFDITEM_FIELD__USART3_CR3_NACK
//    <name> NACK </name>
//    <rw> 
//    <i> [Bit 4] RW (@ 0x40004808) Smartcard NACK enable </i>
//    <check> 
//      <loc> ( (unsigned int) USART3_CR3 ) </loc>
//      <o.4..4> NACK
//    </check>
//  </item>
//  


// ------------------------------  Field Item: USART3_CR3_HDSEL  ----------------------------------
// SVD Line: 12678

//  <item> SFDITEM_FIELD__USART3_CR3_HDSEL
//    <name> HDSEL </name>
//    <rw> 
//    <i> [Bit 3] RW (@ 0x40004808) Half-duplex selection </i>
//    <check> 
//      <loc> ( (unsigned int) USART3_CR3 ) </loc>
//      <o.3..3> HDSEL
//    </check>
//  </item>
//  


// -------------------------------  Field Item: USART3_CR3_IRLP  ----------------------------------
// SVD Line: 12684

//  <item> SFDITEM_FIELD__USART3_CR3_IRLP
//    <name> IRLP </name>
//    <rw> 
//    <i> [Bit 2] RW (@ 0x40004808) Ir low-power </i>
//    <check> 
//      <loc> ( (unsigned int) USART3_CR3 ) </loc>
//      <o.2..2> IRLP
//    </check>
//  </item>
//  


// -------------------------------  Field Item: USART3_CR3_IREN  ----------------------------------
// SVD Line: 12690

//  <item> SFDITEM_FIELD__USART3_CR3_IREN
//    <name> IREN </name>
//    <rw> 
//    <i> [Bit 1] RW (@ 0x40004808) Ir mode enable </i>
//    <check> 
//      <loc> ( (unsigned int) USART3_CR3 ) </loc>
//      <o.1..1> IREN
//    </check>
//  </item>
//  


// -------------------------------  Field Item: USART3_CR3_EIE  -----------------------------------
// SVD Line: 12696

//  <item> SFDITEM_FIELD__USART3_CR3_EIE
//    <name> EIE </name>
//    <rw> 
//    <i> [Bit 0] RW (@ 0x40004808) Error interrupt enable </i>
//    <check> 
//      <loc> ( (unsigned int) USART3_CR3 ) </loc>
//      <o.0..0> EIE
//    </check>
//  </item>
//  


// -------------------------------  Register RTree: USART3_CR3  -----------------------------------
// SVD Line: 12540

//  <rtree> SFDITEM_REG__USART3_CR3
//    <name> CR3 </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x40004808) Control register 3 </i>
//    <loc> ( (unsigned int)((USART3_CR3 >> 0) & 0xFFFFFFFF), ((USART3_CR3 = (USART3_CR3 & ~(0xFFFEFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFEFFFF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__USART3_CR3_TXFTCFG </item>
//    <item> SFDITEM_FIELD__USART3_CR3_RXFTIE </item>
//    <item> SFDITEM_FIELD__USART3_CR3_RXFTCFG </item>
//    <item> SFDITEM_FIELD__USART3_CR3_TCBGTIE </item>
//    <item> SFDITEM_FIELD__USART3_CR3_TXFTIE </item>
//    <item> SFDITEM_FIELD__USART3_CR3_WUFIE </item>
//    <item> SFDITEM_FIELD__USART3_CR3_WUS </item>
//    <item> SFDITEM_FIELD__USART3_CR3_SCARCNT </item>
//    <item> SFDITEM_FIELD__USART3_CR3_DEP </item>
//    <item> SFDITEM_FIELD__USART3_CR3_DEM </item>
//    <item> SFDITEM_FIELD__USART3_CR3_DDRE </item>
//    <item> SFDITEM_FIELD__USART3_CR3_OVRDIS </item>
//    <item> SFDITEM_FIELD__USART3_CR3_ONEBIT </item>
//    <item> SFDITEM_FIELD__USART3_CR3_CTSIE </item>
//    <item> SFDITEM_FIELD__USART3_CR3_CTSE </item>
//    <item> SFDITEM_FIELD__USART3_CR3_RTSE </item>
//    <item> SFDITEM_FIELD__USART3_CR3_DMAT </item>
//    <item> SFDITEM_FIELD__USART3_CR3_DMAR </item>
//    <item> SFDITEM_FIELD__USART3_CR3_SCEN </item>
//    <item> SFDITEM_FIELD__USART3_CR3_NACK </item>
//    <item> SFDITEM_FIELD__USART3_CR3_HDSEL </item>
//    <item> SFDITEM_FIELD__USART3_CR3_IRLP </item>
//    <item> SFDITEM_FIELD__USART3_CR3_IREN </item>
//    <item> SFDITEM_FIELD__USART3_CR3_EIE </item>
//  </rtree>
//  


// ----------------------------  Register Item Address: USART3_BRR  -------------------------------
// SVD Line: 12704

unsigned int USART3_BRR __AT (0x4000480C);



// -----------------------------  Field Item: USART3_BRR_BRR_4_15  --------------------------------
// SVD Line: 12713

//  <item> SFDITEM_FIELD__USART3_BRR_BRR_4_15
//    <name> BRR_4_15 </name>
//    <rw> 
//    <i> [Bits 15..4] RW (@ 0x4000480C) BRR_4_15 </i>
//    <edit> 
//      <loc> ( (unsigned short)((USART3_BRR >> 4) & 0xFFF), ((USART3_BRR = (USART3_BRR & ~(0xFFFUL << 4 )) | ((unsigned long)(Gui_u16:GuiVal & 0xFFF) << 4 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -----------------------------  Field Item: USART3_BRR_BRR_0_3  ---------------------------------
// SVD Line: 12719

//  <item> SFDITEM_FIELD__USART3_BRR_BRR_0_3
//    <name> BRR_0_3 </name>
//    <rw> 
//    <i> [Bits 3..0] RW (@ 0x4000480C) BRR_0_3 </i>
//    <edit> 
//      <loc> ( (unsigned char)((USART3_BRR >> 0) & 0xF), ((USART3_BRR = (USART3_BRR & ~(0xFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -------------------------------  Register RTree: USART3_BRR  -----------------------------------
// SVD Line: 12704

//  <rtree> SFDITEM_REG__USART3_BRR
//    <name> BRR </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x4000480C) Baud rate register </i>
//    <loc> ( (unsigned int)((USART3_BRR >> 0) & 0xFFFFFFFF), ((USART3_BRR = (USART3_BRR & ~(0xFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__USART3_BRR_BRR_4_15 </item>
//    <item> SFDITEM_FIELD__USART3_BRR_BRR_0_3 </item>
//  </rtree>
//  


// ---------------------------  Register Item Address: USART3_GTPR  -------------------------------
// SVD Line: 12727

unsigned int USART3_GTPR __AT (0x40004810);



// -------------------------------  Field Item: USART3_GTPR_GT  -----------------------------------
// SVD Line: 12737

//  <item> SFDITEM_FIELD__USART3_GTPR_GT
//    <name> GT </name>
//    <rw> 
//    <i> [Bits 15..8] RW (@ 0x40004810) Guard time value </i>
//    <edit> 
//      <loc> ( (unsigned char)((USART3_GTPR >> 8) & 0xFF), ((USART3_GTPR = (USART3_GTPR & ~(0xFFUL << 8 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFF) << 8 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -------------------------------  Field Item: USART3_GTPR_PSC  ----------------------------------
// SVD Line: 12743

//  <item> SFDITEM_FIELD__USART3_GTPR_PSC
//    <name> PSC </name>
//    <rw> 
//    <i> [Bits 7..0] RW (@ 0x40004810) Prescaler value </i>
//    <edit> 
//      <loc> ( (unsigned char)((USART3_GTPR >> 0) & 0xFF), ((USART3_GTPR = (USART3_GTPR & ~(0xFFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -------------------------------  Register RTree: USART3_GTPR  ----------------------------------
// SVD Line: 12727

//  <rtree> SFDITEM_REG__USART3_GTPR
//    <name> GTPR </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x40004810) Guard time and prescaler  register </i>
//    <loc> ( (unsigned int)((USART3_GTPR >> 0) & 0xFFFFFFFF), ((USART3_GTPR = (USART3_GTPR & ~(0xFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__USART3_GTPR_GT </item>
//    <item> SFDITEM_FIELD__USART3_GTPR_PSC </item>
//  </rtree>
//  


// ---------------------------  Register Item Address: USART3_RTOR  -------------------------------
// SVD Line: 12751

unsigned int USART3_RTOR __AT (0x40004814);



// ------------------------------  Field Item: USART3_RTOR_BLEN  ----------------------------------
// SVD Line: 12760

//  <item> SFDITEM_FIELD__USART3_RTOR_BLEN
//    <name> BLEN </name>
//    <rw> 
//    <i> [Bits 31..24] RW (@ 0x40004814) Block Length </i>
//    <edit> 
//      <loc> ( (unsigned char)((USART3_RTOR >> 24) & 0xFF), ((USART3_RTOR = (USART3_RTOR & ~(0xFFUL << 24 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFF) << 24 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -------------------------------  Field Item: USART3_RTOR_RTO  ----------------------------------
// SVD Line: 12766

//  <item> SFDITEM_FIELD__USART3_RTOR_RTO
//    <name> RTO </name>
//    <rw> 
//    <i> [Bits 23..0] RW (@ 0x40004814) Receiver timeout value </i>
//    <edit> 
//      <loc> ( (unsigned int)((USART3_RTOR >> 0) & 0xFFFFFF), ((USART3_RTOR = (USART3_RTOR & ~(0xFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -------------------------------  Register RTree: USART3_RTOR  ----------------------------------
// SVD Line: 12751

//  <rtree> SFDITEM_REG__USART3_RTOR
//    <name> RTOR </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x40004814) Receiver timeout register </i>
//    <loc> ( (unsigned int)((USART3_RTOR >> 0) & 0xFFFFFFFF), ((USART3_RTOR = (USART3_RTOR & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__USART3_RTOR_BLEN </item>
//    <item> SFDITEM_FIELD__USART3_RTOR_RTO </item>
//  </rtree>
//  


// ----------------------------  Register Item Address: USART3_RQR  -------------------------------
// SVD Line: 12774

unsigned int USART3_RQR __AT (0x40004818);



// ------------------------------  Field Item: USART3_RQR_TXFRQ  ----------------------------------
// SVD Line: 12783

//  <item> SFDITEM_FIELD__USART3_RQR_TXFRQ
//    <name> TXFRQ </name>
//    <w> 
//    <i> [Bit 4] WO (@ 0x40004818) Transmit data flush  request </i>
//    <check> 
//      <loc> ( (unsigned int) USART3_RQR ) </loc>
//      <o.4..4> TXFRQ
//    </check>
//  </item>
//  


// ------------------------------  Field Item: USART3_RQR_RXFRQ  ----------------------------------
// SVD Line: 12790

//  <item> SFDITEM_FIELD__USART3_RQR_RXFRQ
//    <name> RXFRQ </name>
//    <w> 
//    <i> [Bit 3] WO (@ 0x40004818) Receive data flush request </i>
//    <check> 
//      <loc> ( (unsigned int) USART3_RQR ) </loc>
//      <o.3..3> RXFRQ
//    </check>
//  </item>
//  


// -------------------------------  Field Item: USART3_RQR_MMRQ  ----------------------------------
// SVD Line: 12796

//  <item> SFDITEM_FIELD__USART3_RQR_MMRQ
//    <name> MMRQ </name>
//    <w> 
//    <i> [Bit 2] WO (@ 0x40004818) Mute mode request </i>
//    <check> 
//      <loc> ( (unsigned int) USART3_RQR ) </loc>
//      <o.2..2> MMRQ
//    </check>
//  </item>
//  


// ------------------------------  Field Item: USART3_RQR_SBKRQ  ----------------------------------
// SVD Line: 12802

//  <item> SFDITEM_FIELD__USART3_RQR_SBKRQ
//    <name> SBKRQ </name>
//    <w> 
//    <i> [Bit 1] WO (@ 0x40004818) Send break request </i>
//    <check> 
//      <loc> ( (unsigned int) USART3_RQR ) </loc>
//      <o.1..1> SBKRQ
//    </check>
//  </item>
//  


// ------------------------------  Field Item: USART3_RQR_ABRRQ  ----------------------------------
// SVD Line: 12808

//  <item> SFDITEM_FIELD__USART3_RQR_ABRRQ
//    <name> ABRRQ </name>
//    <w> 
//    <i> [Bit 0] WO (@ 0x40004818) Auto baud rate request </i>
//    <check> 
//      <loc> ( (unsigned int) USART3_RQR ) </loc>
//      <o.0..0> ABRRQ
//    </check>
//  </item>
//  


// -------------------------------  Register RTree: USART3_RQR  -----------------------------------
// SVD Line: 12774

//  <rtree> SFDITEM_REG__USART3_RQR
//    <name> RQR </name>
//    <w> 
//    <i> [Bits 31..0] WO (@ 0x40004818) Request register </i>
//    <loc> ( (unsigned int)((USART3_RQR >> 0) & 0xFFFFFFFF), ((USART3_RQR = (USART3_RQR & ~(0x1FUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0x1F) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__USART3_RQR_TXFRQ </item>
//    <item> SFDITEM_FIELD__USART3_RQR_RXFRQ </item>
//    <item> SFDITEM_FIELD__USART3_RQR_MMRQ </item>
//    <item> SFDITEM_FIELD__USART3_RQR_SBKRQ </item>
//    <item> SFDITEM_FIELD__USART3_RQR_ABRRQ </item>
//  </rtree>
//  


// ----------------------------  Register Item Address: USART3_ISR  -------------------------------
// SVD Line: 12816

unsigned int USART3_ISR __AT (0x4000481C);



// -------------------------------  Field Item: USART3_ISR_TXFT  ----------------------------------
// SVD Line: 12826

//  <item> SFDITEM_FIELD__USART3_ISR_TXFT
//    <name> TXFT </name>
//    <r> 
//    <i> [Bit 27] RO (@ 0x4000481C) TXFIFO threshold flag </i>
//    <check> 
//      <loc> ( (unsigned int) USART3_ISR ) </loc>
//      <o.27..27> TXFT
//    </check>
//  </item>
//  


// -------------------------------  Field Item: USART3_ISR_RXFT  ----------------------------------
// SVD Line: 12832

//  <item> SFDITEM_FIELD__USART3_ISR_RXFT
//    <name> RXFT </name>
//    <r> 
//    <i> [Bit 26] RO (@ 0x4000481C) RXFIFO threshold flag </i>
//    <check> 
//      <loc> ( (unsigned int) USART3_ISR ) </loc>
//      <o.26..26> RXFT
//    </check>
//  </item>
//  


// ------------------------------  Field Item: USART3_ISR_TCBGT  ----------------------------------
// SVD Line: 12838

//  <item> SFDITEM_FIELD__USART3_ISR_TCBGT
//    <name> TCBGT </name>
//    <r> 
//    <i> [Bit 25] RO (@ 0x4000481C) Transmission complete before guard time  flag </i>
//    <check> 
//      <loc> ( (unsigned int) USART3_ISR ) </loc>
//      <o.25..25> TCBGT
//    </check>
//  </item>
//  


// -------------------------------  Field Item: USART3_ISR_RXFF  ----------------------------------
// SVD Line: 12845

//  <item> SFDITEM_FIELD__USART3_ISR_RXFF
//    <name> RXFF </name>
//    <r> 
//    <i> [Bit 24] RO (@ 0x4000481C) RXFIFO Full </i>
//    <check> 
//      <loc> ( (unsigned int) USART3_ISR ) </loc>
//      <o.24..24> RXFF
//    </check>
//  </item>
//  


// -------------------------------  Field Item: USART3_ISR_TXFE  ----------------------------------
// SVD Line: 12851

//  <item> SFDITEM_FIELD__USART3_ISR_TXFE
//    <name> TXFE </name>
//    <r> 
//    <i> [Bit 23] RO (@ 0x4000481C) TXFIFO Empty </i>
//    <check> 
//      <loc> ( (unsigned int) USART3_ISR ) </loc>
//      <o.23..23> TXFE
//    </check>
//  </item>
//  


// ------------------------------  Field Item: USART3_ISR_REACK  ----------------------------------
// SVD Line: 12857

//  <item> SFDITEM_FIELD__USART3_ISR_REACK
//    <name> REACK </name>
//    <r> 
//    <i> [Bit 22] RO (@ 0x4000481C) REACK </i>
//    <check> 
//      <loc> ( (unsigned int) USART3_ISR ) </loc>
//      <o.22..22> REACK
//    </check>
//  </item>
//  


// ------------------------------  Field Item: USART3_ISR_TEACK  ----------------------------------
// SVD Line: 12863

//  <item> SFDITEM_FIELD__USART3_ISR_TEACK
//    <name> TEACK </name>
//    <r> 
//    <i> [Bit 21] RO (@ 0x4000481C) TEACK </i>
//    <check> 
//      <loc> ( (unsigned int) USART3_ISR ) </loc>
//      <o.21..21> TEACK
//    </check>
//  </item>
//  


// -------------------------------  Field Item: USART3_ISR_WUF  -----------------------------------
// SVD Line: 12869

//  <item> SFDITEM_FIELD__USART3_ISR_WUF
//    <name> WUF </name>
//    <r> 
//    <i> [Bit 20] RO (@ 0x4000481C) WUF </i>
//    <check> 
//      <loc> ( (unsigned int) USART3_ISR ) </loc>
//      <o.20..20> WUF
//    </check>
//  </item>
//  


// -------------------------------  Field Item: USART3_ISR_RWU  -----------------------------------
// SVD Line: 12875

//  <item> SFDITEM_FIELD__USART3_ISR_RWU
//    <name> RWU </name>
//    <r> 
//    <i> [Bit 19] RO (@ 0x4000481C) RWU </i>
//    <check> 
//      <loc> ( (unsigned int) USART3_ISR ) </loc>
//      <o.19..19> RWU
//    </check>
//  </item>
//  


// -------------------------------  Field Item: USART3_ISR_SBKF  ----------------------------------
// SVD Line: 12881

//  <item> SFDITEM_FIELD__USART3_ISR_SBKF
//    <name> SBKF </name>
//    <r> 
//    <i> [Bit 18] RO (@ 0x4000481C) SBKF </i>
//    <check> 
//      <loc> ( (unsigned int) USART3_ISR ) </loc>
//      <o.18..18> SBKF
//    </check>
//  </item>
//  


// -------------------------------  Field Item: USART3_ISR_CMF  -----------------------------------
// SVD Line: 12887

//  <item> SFDITEM_FIELD__USART3_ISR_CMF
//    <name> CMF </name>
//    <r> 
//    <i> [Bit 17] RO (@ 0x4000481C) CMF </i>
//    <check> 
//      <loc> ( (unsigned int) USART3_ISR ) </loc>
//      <o.17..17> CMF
//    </check>
//  </item>
//  


// -------------------------------  Field Item: USART3_ISR_BUSY  ----------------------------------
// SVD Line: 12893

//  <item> SFDITEM_FIELD__USART3_ISR_BUSY
//    <name> BUSY </name>
//    <r> 
//    <i> [Bit 16] RO (@ 0x4000481C) BUSY </i>
//    <check> 
//      <loc> ( (unsigned int) USART3_ISR ) </loc>
//      <o.16..16> BUSY
//    </check>
//  </item>
//  


// -------------------------------  Field Item: USART3_ISR_ABRF  ----------------------------------
// SVD Line: 12899

//  <item> SFDITEM_FIELD__USART3_ISR_ABRF
//    <name> ABRF </name>
//    <r> 
//    <i> [Bit 15] RO (@ 0x4000481C) ABRF </i>
//    <check> 
//      <loc> ( (unsigned int) USART3_ISR ) </loc>
//      <o.15..15> ABRF
//    </check>
//  </item>
//  


// -------------------------------  Field Item: USART3_ISR_ABRE  ----------------------------------
// SVD Line: 12905

//  <item> SFDITEM_FIELD__USART3_ISR_ABRE
//    <name> ABRE </name>
//    <r> 
//    <i> [Bit 14] RO (@ 0x4000481C) ABRE </i>
//    <check> 
//      <loc> ( (unsigned int) USART3_ISR ) </loc>
//      <o.14..14> ABRE
//    </check>
//  </item>
//  


// -------------------------------  Field Item: USART3_ISR_UDR  -----------------------------------
// SVD Line: 12911

//  <item> SFDITEM_FIELD__USART3_ISR_UDR
//    <name> UDR </name>
//    <r> 
//    <i> [Bit 13] RO (@ 0x4000481C) SPI slave underrun error  flag </i>
//    <check> 
//      <loc> ( (unsigned int) USART3_ISR ) </loc>
//      <o.13..13> UDR
//    </check>
//  </item>
//  


// -------------------------------  Field Item: USART3_ISR_EOBF  ----------------------------------
// SVD Line: 12918

//  <item> SFDITEM_FIELD__USART3_ISR_EOBF
//    <name> EOBF </name>
//    <r> 
//    <i> [Bit 12] RO (@ 0x4000481C) EOBF </i>
//    <check> 
//      <loc> ( (unsigned int) USART3_ISR ) </loc>
//      <o.12..12> EOBF
//    </check>
//  </item>
//  


// -------------------------------  Field Item: USART3_ISR_RTOF  ----------------------------------
// SVD Line: 12924

//  <item> SFDITEM_FIELD__USART3_ISR_RTOF
//    <name> RTOF </name>
//    <r> 
//    <i> [Bit 11] RO (@ 0x4000481C) RTOF </i>
//    <check> 
//      <loc> ( (unsigned int) USART3_ISR ) </loc>
//      <o.11..11> RTOF
//    </check>
//  </item>
//  


// -------------------------------  Field Item: USART3_ISR_CTS  -----------------------------------
// SVD Line: 12930

//  <item> SFDITEM_FIELD__USART3_ISR_CTS
//    <name> CTS </name>
//    <r> 
//    <i> [Bit 10] RO (@ 0x4000481C) CTS </i>
//    <check> 
//      <loc> ( (unsigned int) USART3_ISR ) </loc>
//      <o.10..10> CTS
//    </check>
//  </item>
//  


// ------------------------------  Field Item: USART3_ISR_CTSIF  ----------------------------------
// SVD Line: 12936

//  <item> SFDITEM_FIELD__USART3_ISR_CTSIF
//    <name> CTSIF </name>
//    <r> 
//    <i> [Bit 9] RO (@ 0x4000481C) CTSIF </i>
//    <check> 
//      <loc> ( (unsigned int) USART3_ISR ) </loc>
//      <o.9..9> CTSIF
//    </check>
//  </item>
//  


// -------------------------------  Field Item: USART3_ISR_LBDF  ----------------------------------
// SVD Line: 12942

//  <item> SFDITEM_FIELD__USART3_ISR_LBDF
//    <name> LBDF </name>
//    <r> 
//    <i> [Bit 8] RO (@ 0x4000481C) LBDF </i>
//    <check> 
//      <loc> ( (unsigned int) USART3_ISR ) </loc>
//      <o.8..8> LBDF
//    </check>
//  </item>
//  


// -------------------------------  Field Item: USART3_ISR_TXE  -----------------------------------
// SVD Line: 12948

//  <item> SFDITEM_FIELD__USART3_ISR_TXE
//    <name> TXE </name>
//    <r> 
//    <i> [Bit 7] RO (@ 0x4000481C) TXE </i>
//    <check> 
//      <loc> ( (unsigned int) USART3_ISR ) </loc>
//      <o.7..7> TXE
//    </check>
//  </item>
//  


// --------------------------------  Field Item: USART3_ISR_TC  -----------------------------------
// SVD Line: 12954

//  <item> SFDITEM_FIELD__USART3_ISR_TC
//    <name> TC </name>
//    <r> 
//    <i> [Bit 6] RO (@ 0x4000481C) TC </i>
//    <check> 
//      <loc> ( (unsigned int) USART3_ISR ) </loc>
//      <o.6..6> TC
//    </check>
//  </item>
//  


// -------------------------------  Field Item: USART3_ISR_RXNE  ----------------------------------
// SVD Line: 12960

//  <item> SFDITEM_FIELD__USART3_ISR_RXNE
//    <name> RXNE </name>
//    <r> 
//    <i> [Bit 5] RO (@ 0x4000481C) RXNE </i>
//    <check> 
//      <loc> ( (unsigned int) USART3_ISR ) </loc>
//      <o.5..5> RXNE
//    </check>
//  </item>
//  


// -------------------------------  Field Item: USART3_ISR_IDLE  ----------------------------------
// SVD Line: 12966

//  <item> SFDITEM_FIELD__USART3_ISR_IDLE
//    <name> IDLE </name>
//    <r> 
//    <i> [Bit 4] RO (@ 0x4000481C) IDLE </i>
//    <check> 
//      <loc> ( (unsigned int) USART3_ISR ) </loc>
//      <o.4..4> IDLE
//    </check>
//  </item>
//  


// -------------------------------  Field Item: USART3_ISR_ORE  -----------------------------------
// SVD Line: 12972

//  <item> SFDITEM_FIELD__USART3_ISR_ORE
//    <name> ORE </name>
//    <r> 
//    <i> [Bit 3] RO (@ 0x4000481C) ORE </i>
//    <check> 
//      <loc> ( (unsigned int) USART3_ISR ) </loc>
//      <o.3..3> ORE
//    </check>
//  </item>
//  


// --------------------------------  Field Item: USART3_ISR_NF  -----------------------------------
// SVD Line: 12978

//  <item> SFDITEM_FIELD__USART3_ISR_NF
//    <name> NF </name>
//    <r> 
//    <i> [Bit 2] RO (@ 0x4000481C) NF </i>
//    <check> 
//      <loc> ( (unsigned int) USART3_ISR ) </loc>
//      <o.2..2> NF
//    </check>
//  </item>
//  


// --------------------------------  Field Item: USART3_ISR_FE  -----------------------------------
// SVD Line: 12984

//  <item> SFDITEM_FIELD__USART3_ISR_FE
//    <name> FE </name>
//    <r> 
//    <i> [Bit 1] RO (@ 0x4000481C) FE </i>
//    <check> 
//      <loc> ( (unsigned int) USART3_ISR ) </loc>
//      <o.1..1> FE
//    </check>
//  </item>
//  


// --------------------------------  Field Item: USART3_ISR_PE  -----------------------------------
// SVD Line: 12990

//  <item> SFDITEM_FIELD__USART3_ISR_PE
//    <name> PE </name>
//    <r> 
//    <i> [Bit 0] RO (@ 0x4000481C) PE </i>
//    <check> 
//      <loc> ( (unsigned int) USART3_ISR ) </loc>
//      <o.0..0> PE
//    </check>
//  </item>
//  


// -------------------------------  Register RTree: USART3_ISR  -----------------------------------
// SVD Line: 12816

//  <rtree> SFDITEM_REG__USART3_ISR
//    <name> ISR </name>
//    <r> 
//    <i> [Bits 31..0] RO (@ 0x4000481C) Interrupt & status  register </i>
//    <loc> ( (unsigned int)((USART3_ISR >> 0) & 0xFFFFFFFF) ) </loc>
//    <item> SFDITEM_FIELD__USART3_ISR_TXFT </item>
//    <item> SFDITEM_FIELD__USART3_ISR_RXFT </item>
//    <item> SFDITEM_FIELD__USART3_ISR_TCBGT </item>
//    <item> SFDITEM_FIELD__USART3_ISR_RXFF </item>
//    <item> SFDITEM_FIELD__USART3_ISR_TXFE </item>
//    <item> SFDITEM_FIELD__USART3_ISR_REACK </item>
//    <item> SFDITEM_FIELD__USART3_ISR_TEACK </item>
//    <item> SFDITEM_FIELD__USART3_ISR_WUF </item>
//    <item> SFDITEM_FIELD__USART3_ISR_RWU </item>
//    <item> SFDITEM_FIELD__USART3_ISR_SBKF </item>
//    <item> SFDITEM_FIELD__USART3_ISR_CMF </item>
//    <item> SFDITEM_FIELD__USART3_ISR_BUSY </item>
//    <item> SFDITEM_FIELD__USART3_ISR_ABRF </item>
//    <item> SFDITEM_FIELD__USART3_ISR_ABRE </item>
//    <item> SFDITEM_FIELD__USART3_ISR_UDR </item>
//    <item> SFDITEM_FIELD__USART3_ISR_EOBF </item>
//    <item> SFDITEM_FIELD__USART3_ISR_RTOF </item>
//    <item> SFDITEM_FIELD__USART3_ISR_CTS </item>
//    <item> SFDITEM_FIELD__USART3_ISR_CTSIF </item>
//    <item> SFDITEM_FIELD__USART3_ISR_LBDF </item>
//    <item> SFDITEM_FIELD__USART3_ISR_TXE </item>
//    <item> SFDITEM_FIELD__USART3_ISR_TC </item>
//    <item> SFDITEM_FIELD__USART3_ISR_RXNE </item>
//    <item> SFDITEM_FIELD__USART3_ISR_IDLE </item>
//    <item> SFDITEM_FIELD__USART3_ISR_ORE </item>
//    <item> SFDITEM_FIELD__USART3_ISR_NF </item>
//    <item> SFDITEM_FIELD__USART3_ISR_FE </item>
//    <item> SFDITEM_FIELD__USART3_ISR_PE </item>
//  </rtree>
//  


// ----------------------------  Register Item Address: USART3_ICR  -------------------------------
// SVD Line: 12998

unsigned int USART3_ICR __AT (0x40004820);



// -------------------------------  Field Item: USART3_ICR_WUCF  ----------------------------------
// SVD Line: 13007

//  <item> SFDITEM_FIELD__USART3_ICR_WUCF
//    <name> WUCF </name>
//    <w> 
//    <i> [Bit 20] WO (@ 0x40004820) Wakeup from Stop mode clear  flag </i>
//    <check> 
//      <loc> ( (unsigned int) USART3_ICR ) </loc>
//      <o.20..20> WUCF
//    </check>
//  </item>
//  


// -------------------------------  Field Item: USART3_ICR_CMCF  ----------------------------------
// SVD Line: 13014

//  <item> SFDITEM_FIELD__USART3_ICR_CMCF
//    <name> CMCF </name>
//    <w> 
//    <i> [Bit 17] WO (@ 0x40004820) Character match clear flag </i>
//    <check> 
//      <loc> ( (unsigned int) USART3_ICR ) </loc>
//      <o.17..17> CMCF
//    </check>
//  </item>
//  


// ------------------------------  Field Item: USART3_ICR_UDRCF  ----------------------------------
// SVD Line: 13020

//  <item> SFDITEM_FIELD__USART3_ICR_UDRCF
//    <name> UDRCF </name>
//    <w> 
//    <i> [Bit 13] WO (@ 0x40004820) SPI slave underrun clear  flag </i>
//    <check> 
//      <loc> ( (unsigned int) USART3_ICR ) </loc>
//      <o.13..13> UDRCF
//    </check>
//  </item>
//  


// ------------------------------  Field Item: USART3_ICR_EOBCF  ----------------------------------
// SVD Line: 13027

//  <item> SFDITEM_FIELD__USART3_ICR_EOBCF
//    <name> EOBCF </name>
//    <w> 
//    <i> [Bit 12] WO (@ 0x40004820) End of block clear flag </i>
//    <check> 
//      <loc> ( (unsigned int) USART3_ICR ) </loc>
//      <o.12..12> EOBCF
//    </check>
//  </item>
//  


// ------------------------------  Field Item: USART3_ICR_RTOCF  ----------------------------------
// SVD Line: 13033

//  <item> SFDITEM_FIELD__USART3_ICR_RTOCF
//    <name> RTOCF </name>
//    <w> 
//    <i> [Bit 11] WO (@ 0x40004820) Receiver timeout clear  flag </i>
//    <check> 
//      <loc> ( (unsigned int) USART3_ICR ) </loc>
//      <o.11..11> RTOCF
//    </check>
//  </item>
//  


// ------------------------------  Field Item: USART3_ICR_CTSCF  ----------------------------------
// SVD Line: 13040

//  <item> SFDITEM_FIELD__USART3_ICR_CTSCF
//    <name> CTSCF </name>
//    <w> 
//    <i> [Bit 9] WO (@ 0x40004820) CTS clear flag </i>
//    <check> 
//      <loc> ( (unsigned int) USART3_ICR ) </loc>
//      <o.9..9> CTSCF
//    </check>
//  </item>
//  


// ------------------------------  Field Item: USART3_ICR_LBDCF  ----------------------------------
// SVD Line: 13046

//  <item> SFDITEM_FIELD__USART3_ICR_LBDCF
//    <name> LBDCF </name>
//    <w> 
//    <i> [Bit 8] WO (@ 0x40004820) LIN break detection clear  flag </i>
//    <check> 
//      <loc> ( (unsigned int) USART3_ICR ) </loc>
//      <o.8..8> LBDCF
//    </check>
//  </item>
//  


// -----------------------------  Field Item: USART3_ICR_TCBGTCF  ---------------------------------
// SVD Line: 13053

//  <item> SFDITEM_FIELD__USART3_ICR_TCBGTCF
//    <name> TCBGTCF </name>
//    <w> 
//    <i> [Bit 7] WO (@ 0x40004820) Transmission complete before Guard time  clear flag </i>
//    <check> 
//      <loc> ( (unsigned int) USART3_ICR ) </loc>
//      <o.7..7> TCBGTCF
//    </check>
//  </item>
//  


// -------------------------------  Field Item: USART3_ICR_TCCF  ----------------------------------
// SVD Line: 13060

//  <item> SFDITEM_FIELD__USART3_ICR_TCCF
//    <name> TCCF </name>
//    <w> 
//    <i> [Bit 6] WO (@ 0x40004820) Transmission complete clear  flag </i>
//    <check> 
//      <loc> ( (unsigned int) USART3_ICR ) </loc>
//      <o.6..6> TCCF
//    </check>
//  </item>
//  


// ------------------------------  Field Item: USART3_ICR_TXFECF  ---------------------------------
// SVD Line: 13067

//  <item> SFDITEM_FIELD__USART3_ICR_TXFECF
//    <name> TXFECF </name>
//    <w> 
//    <i> [Bit 5] WO (@ 0x40004820) TXFIFO empty clear flag </i>
//    <check> 
//      <loc> ( (unsigned int) USART3_ICR ) </loc>
//      <o.5..5> TXFECF
//    </check>
//  </item>
//  


// ------------------------------  Field Item: USART3_ICR_IDLECF  ---------------------------------
// SVD Line: 13073

//  <item> SFDITEM_FIELD__USART3_ICR_IDLECF
//    <name> IDLECF </name>
//    <w> 
//    <i> [Bit 4] WO (@ 0x40004820) Idle line detected clear  flag </i>
//    <check> 
//      <loc> ( (unsigned int) USART3_ICR ) </loc>
//      <o.4..4> IDLECF
//    </check>
//  </item>
//  


// ------------------------------  Field Item: USART3_ICR_ORECF  ----------------------------------
// SVD Line: 13080

//  <item> SFDITEM_FIELD__USART3_ICR_ORECF
//    <name> ORECF </name>
//    <w> 
//    <i> [Bit 3] WO (@ 0x40004820) Overrun error clear flag </i>
//    <check> 
//      <loc> ( (unsigned int) USART3_ICR ) </loc>
//      <o.3..3> ORECF
//    </check>
//  </item>
//  


// -------------------------------  Field Item: USART3_ICR_NCF  -----------------------------------
// SVD Line: 13086

//  <item> SFDITEM_FIELD__USART3_ICR_NCF
//    <name> NCF </name>
//    <w> 
//    <i> [Bit 2] WO (@ 0x40004820) Noise detected clear flag </i>
//    <check> 
//      <loc> ( (unsigned int) USART3_ICR ) </loc>
//      <o.2..2> NCF
//    </check>
//  </item>
//  


// -------------------------------  Field Item: USART3_ICR_FECF  ----------------------------------
// SVD Line: 13092

//  <item> SFDITEM_FIELD__USART3_ICR_FECF
//    <name> FECF </name>
//    <w> 
//    <i> [Bit 1] WO (@ 0x40004820) Framing error clear flag </i>
//    <check> 
//      <loc> ( (unsigned int) USART3_ICR ) </loc>
//      <o.1..1> FECF
//    </check>
//  </item>
//  


// -------------------------------  Field Item: USART3_ICR_PECF  ----------------------------------
// SVD Line: 13098

//  <item> SFDITEM_FIELD__USART3_ICR_PECF
//    <name> PECF </name>
//    <w> 
//    <i> [Bit 0] WO (@ 0x40004820) Parity error clear flag </i>
//    <check> 
//      <loc> ( (unsigned int) USART3_ICR ) </loc>
//      <o.0..0> PECF
//    </check>
//  </item>
//  


// -------------------------------  Register RTree: USART3_ICR  -----------------------------------
// SVD Line: 12998

//  <rtree> SFDITEM_REG__USART3_ICR
//    <name> ICR </name>
//    <w> 
//    <i> [Bits 31..0] WO (@ 0x40004820) Interrupt flag clear register </i>
//    <loc> ( (unsigned int)((USART3_ICR >> 0) & 0xFFFFFFFF), ((USART3_ICR = (USART3_ICR & ~(0x123BFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0x123BFF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__USART3_ICR_WUCF </item>
//    <item> SFDITEM_FIELD__USART3_ICR_CMCF </item>
//    <item> SFDITEM_FIELD__USART3_ICR_UDRCF </item>
//    <item> SFDITEM_FIELD__USART3_ICR_EOBCF </item>
//    <item> SFDITEM_FIELD__USART3_ICR_RTOCF </item>
//    <item> SFDITEM_FIELD__USART3_ICR_CTSCF </item>
//    <item> SFDITEM_FIELD__USART3_ICR_LBDCF </item>
//    <item> SFDITEM_FIELD__USART3_ICR_TCBGTCF </item>
//    <item> SFDITEM_FIELD__USART3_ICR_TCCF </item>
//    <item> SFDITEM_FIELD__USART3_ICR_TXFECF </item>
//    <item> SFDITEM_FIELD__USART3_ICR_IDLECF </item>
//    <item> SFDITEM_FIELD__USART3_ICR_ORECF </item>
//    <item> SFDITEM_FIELD__USART3_ICR_NCF </item>
//    <item> SFDITEM_FIELD__USART3_ICR_FECF </item>
//    <item> SFDITEM_FIELD__USART3_ICR_PECF </item>
//  </rtree>
//  


// ----------------------------  Register Item Address: USART3_RDR  -------------------------------
// SVD Line: 13106

unsigned int USART3_RDR __AT (0x40004824);



// -------------------------------  Field Item: USART3_RDR_RDR  -----------------------------------
// SVD Line: 13115

//  <item> SFDITEM_FIELD__USART3_RDR_RDR
//    <name> RDR </name>
//    <r> 
//    <i> [Bits 8..0] RO (@ 0x40004824) Receive data value </i>
//    <edit> 
//      <loc> ( (unsigned short)((USART3_RDR >> 0) & 0x1FF) ) </loc>
//    </edit>
//  </item>
//  


// -------------------------------  Register RTree: USART3_RDR  -----------------------------------
// SVD Line: 13106

//  <rtree> SFDITEM_REG__USART3_RDR
//    <name> RDR </name>
//    <r> 
//    <i> [Bits 31..0] RO (@ 0x40004824) Receive data register </i>
//    <loc> ( (unsigned int)((USART3_RDR >> 0) & 0xFFFFFFFF) ) </loc>
//    <item> SFDITEM_FIELD__USART3_RDR_RDR </item>
//  </rtree>
//  


// ----------------------------  Register Item Address: USART3_TDR  -------------------------------
// SVD Line: 13123

unsigned int USART3_TDR __AT (0x40004828);



// -------------------------------  Field Item: USART3_TDR_TDR  -----------------------------------
// SVD Line: 13132

//  <item> SFDITEM_FIELD__USART3_TDR_TDR
//    <name> TDR </name>
//    <rw> 
//    <i> [Bits 8..0] RW (@ 0x40004828) Transmit data value </i>
//    <edit> 
//      <loc> ( (unsigned short)((USART3_TDR >> 0) & 0x1FF), ((USART3_TDR = (USART3_TDR & ~(0x1FFUL << 0 )) | ((unsigned long)(Gui_u16:GuiVal & 0x1FF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -------------------------------  Register RTree: USART3_TDR  -----------------------------------
// SVD Line: 13123

//  <rtree> SFDITEM_REG__USART3_TDR
//    <name> TDR </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x40004828) Transmit data register </i>
//    <loc> ( (unsigned int)((USART3_TDR >> 0) & 0xFFFFFFFF), ((USART3_TDR = (USART3_TDR & ~(0x1FFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0x1FF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__USART3_TDR_TDR </item>
//  </rtree>
//  


// ---------------------------  Register Item Address: USART3_PRESC  ------------------------------
// SVD Line: 13140

unsigned int USART3_PRESC __AT (0x4000482C);



// ---------------------------  Field Item: USART3_PRESC_PRESCALER  -------------------------------
// SVD Line: 13149

//  <item> SFDITEM_FIELD__USART3_PRESC_PRESCALER
//    <name> PRESCALER </name>
//    <rw> 
//    <i> [Bits 3..0] RW (@ 0x4000482C) Clock prescaler </i>
//    <edit> 
//      <loc> ( (unsigned char)((USART3_PRESC >> 0) & 0xF), ((USART3_PRESC = (USART3_PRESC & ~(0xFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ------------------------------  Register RTree: USART3_PRESC  ----------------------------------
// SVD Line: 13140

//  <rtree> SFDITEM_REG__USART3_PRESC
//    <name> PRESC </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x4000482C) Prescaler register </i>
//    <loc> ( (unsigned int)((USART3_PRESC >> 0) & 0xFFFFFFFF), ((USART3_PRESC = (USART3_PRESC & ~(0xFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__USART3_PRESC_PRESCALER </item>
//  </rtree>
//  


// ---------------------------------  Peripheral View: USART3  ------------------------------------
// SVD Line: 13168

//  <view> USART3
//    <name> USART3 </name>
//    <item> SFDITEM_REG__USART3_CR1 </item>
//    <item> SFDITEM_REG__USART3_CR2 </item>
//    <item> SFDITEM_REG__USART3_CR3 </item>
//    <item> SFDITEM_REG__USART3_BRR </item>
//    <item> SFDITEM_REG__USART3_GTPR </item>
//    <item> SFDITEM_REG__USART3_RTOR </item>
//    <item> SFDITEM_REG__USART3_RQR </item>
//    <item> SFDITEM_REG__USART3_ISR </item>
//    <item> SFDITEM_REG__USART3_ICR </item>
//    <item> SFDITEM_REG__USART3_RDR </item>
//    <item> SFDITEM_REG__USART3_TDR </item>
//    <item> SFDITEM_REG__USART3_PRESC </item>
//  </view>
//  


// ----------------------------  Register Item Address: USART4_CR1  -------------------------------
// SVD Line: 12236

unsigned int USART4_CR1 __AT (0x40004C00);



// ------------------------------  Field Item: USART4_CR1_RXFFIE  ---------------------------------
// SVD Line: 12245

//  <item> SFDITEM_FIELD__USART4_CR1_RXFFIE
//    <name> RXFFIE </name>
//    <rw> 
//    <i> [Bit 31] RW (@ 0x40004C00) RXFIFO Full interrupt  enable </i>
//    <check> 
//      <loc> ( (unsigned int) USART4_CR1 ) </loc>
//      <o.31..31> RXFFIE
//    </check>
//  </item>
//  


// ------------------------------  Field Item: USART4_CR1_TXFEIE  ---------------------------------
// SVD Line: 12252

//  <item> SFDITEM_FIELD__USART4_CR1_TXFEIE
//    <name> TXFEIE </name>
//    <rw> 
//    <i> [Bit 30] RW (@ 0x40004C00) TXFIFO empty interrupt  enable </i>
//    <check> 
//      <loc> ( (unsigned int) USART4_CR1 ) </loc>
//      <o.30..30> TXFEIE
//    </check>
//  </item>
//  


// ------------------------------  Field Item: USART4_CR1_FIFOEN  ---------------------------------
// SVD Line: 12259

//  <item> SFDITEM_FIELD__USART4_CR1_FIFOEN
//    <name> FIFOEN </name>
//    <rw> 
//    <i> [Bit 29] RW (@ 0x40004C00) FIFO mode enable </i>
//    <check> 
//      <loc> ( (unsigned int) USART4_CR1 ) </loc>
//      <o.29..29> FIFOEN
//    </check>
//  </item>
//  


// --------------------------------  Field Item: USART4_CR1_M1  -----------------------------------
// SVD Line: 12265

//  <item> SFDITEM_FIELD__USART4_CR1_M1
//    <name> M1 </name>
//    <rw> 
//    <i> [Bit 28] RW (@ 0x40004C00) Word length </i>
//    <check> 
//      <loc> ( (unsigned int) USART4_CR1 ) </loc>
//      <o.28..28> M1
//    </check>
//  </item>
//  


// ------------------------------  Field Item: USART4_CR1_EOBIE  ----------------------------------
// SVD Line: 12271

//  <item> SFDITEM_FIELD__USART4_CR1_EOBIE
//    <name> EOBIE </name>
//    <rw> 
//    <i> [Bit 27] RW (@ 0x40004C00) End of Block interrupt  enable </i>
//    <check> 
//      <loc> ( (unsigned int) USART4_CR1 ) </loc>
//      <o.27..27> EOBIE
//    </check>
//  </item>
//  


// ------------------------------  Field Item: USART4_CR1_RTOIE  ----------------------------------
// SVD Line: 12278

//  <item> SFDITEM_FIELD__USART4_CR1_RTOIE
//    <name> RTOIE </name>
//    <rw> 
//    <i> [Bit 26] RW (@ 0x40004C00) Receiver timeout interrupt  enable </i>
//    <check> 
//      <loc> ( (unsigned int) USART4_CR1 ) </loc>
//      <o.26..26> RTOIE
//    </check>
//  </item>
//  


// -------------------------------  Field Item: USART4_CR1_DEAT  ----------------------------------
// SVD Line: 12285

//  <item> SFDITEM_FIELD__USART4_CR1_DEAT
//    <name> DEAT </name>
//    <rw> 
//    <i> [Bits 25..21] RW (@ 0x40004C00) DEAT </i>
//    <edit> 
//      <loc> ( (unsigned char)((USART4_CR1 >> 21) & 0x1F), ((USART4_CR1 = (USART4_CR1 & ~(0x1FUL << 21 )) | ((unsigned long)(Gui_u8:GuiVal & 0x1F) << 21 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -------------------------------  Field Item: USART4_CR1_DEDT  ----------------------------------
// SVD Line: 12291

//  <item> SFDITEM_FIELD__USART4_CR1_DEDT
//    <name> DEDT </name>
//    <rw> 
//    <i> [Bits 20..16] RW (@ 0x40004C00) DEDT </i>
//    <edit> 
//      <loc> ( (unsigned char)((USART4_CR1 >> 16) & 0x1F), ((USART4_CR1 = (USART4_CR1 & ~(0x1FUL << 16 )) | ((unsigned long)(Gui_u8:GuiVal & 0x1F) << 16 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ------------------------------  Field Item: USART4_CR1_OVER8  ----------------------------------
// SVD Line: 12297

//  <item> SFDITEM_FIELD__USART4_CR1_OVER8
//    <name> OVER8 </name>
//    <rw> 
//    <i> [Bit 15] RW (@ 0x40004C00) Oversampling mode </i>
//    <check> 
//      <loc> ( (unsigned int) USART4_CR1 ) </loc>
//      <o.15..15> OVER8
//    </check>
//  </item>
//  


// -------------------------------  Field Item: USART4_CR1_CMIE  ----------------------------------
// SVD Line: 12303

//  <item> SFDITEM_FIELD__USART4_CR1_CMIE
//    <name> CMIE </name>
//    <rw> 
//    <i> [Bit 14] RW (@ 0x40004C00) Character match interrupt  enable </i>
//    <check> 
//      <loc> ( (unsigned int) USART4_CR1 ) </loc>
//      <o.14..14> CMIE
//    </check>
//  </item>
//  


// -------------------------------  Field Item: USART4_CR1_MME  -----------------------------------
// SVD Line: 12310

//  <item> SFDITEM_FIELD__USART4_CR1_MME
//    <name> MME </name>
//    <rw> 
//    <i> [Bit 13] RW (@ 0x40004C00) Mute mode enable </i>
//    <check> 
//      <loc> ( (unsigned int) USART4_CR1 ) </loc>
//      <o.13..13> MME
//    </check>
//  </item>
//  


// --------------------------------  Field Item: USART4_CR1_M0  -----------------------------------
// SVD Line: 12316

//  <item> SFDITEM_FIELD__USART4_CR1_M0
//    <name> M0 </name>
//    <rw> 
//    <i> [Bit 12] RW (@ 0x40004C00) Word length </i>
//    <check> 
//      <loc> ( (unsigned int) USART4_CR1 ) </loc>
//      <o.12..12> M0
//    </check>
//  </item>
//  


// -------------------------------  Field Item: USART4_CR1_WAKE  ----------------------------------
// SVD Line: 12322

//  <item> SFDITEM_FIELD__USART4_CR1_WAKE
//    <name> WAKE </name>
//    <rw> 
//    <i> [Bit 11] RW (@ 0x40004C00) Receiver wakeup method </i>
//    <check> 
//      <loc> ( (unsigned int) USART4_CR1 ) </loc>
//      <o.11..11> WAKE
//    </check>
//  </item>
//  


// -------------------------------  Field Item: USART4_CR1_PCE  -----------------------------------
// SVD Line: 12328

//  <item> SFDITEM_FIELD__USART4_CR1_PCE
//    <name> PCE </name>
//    <rw> 
//    <i> [Bit 10] RW (@ 0x40004C00) Parity control enable </i>
//    <check> 
//      <loc> ( (unsigned int) USART4_CR1 ) </loc>
//      <o.10..10> PCE
//    </check>
//  </item>
//  


// --------------------------------  Field Item: USART4_CR1_PS  -----------------------------------
// SVD Line: 12334

//  <item> SFDITEM_FIELD__USART4_CR1_PS
//    <name> PS </name>
//    <rw> 
//    <i> [Bit 9] RW (@ 0x40004C00) Parity selection </i>
//    <check> 
//      <loc> ( (unsigned int) USART4_CR1 ) </loc>
//      <o.9..9> PS
//    </check>
//  </item>
//  


// -------------------------------  Field Item: USART4_CR1_PEIE  ----------------------------------
// SVD Line: 12340

//  <item> SFDITEM_FIELD__USART4_CR1_PEIE
//    <name> PEIE </name>
//    <rw> 
//    <i> [Bit 8] RW (@ 0x40004C00) PE interrupt enable </i>
//    <check> 
//      <loc> ( (unsigned int) USART4_CR1 ) </loc>
//      <o.8..8> PEIE
//    </check>
//  </item>
//  


// ------------------------------  Field Item: USART4_CR1_TXEIE  ----------------------------------
// SVD Line: 12346

//  <item> SFDITEM_FIELD__USART4_CR1_TXEIE
//    <name> TXEIE </name>
//    <rw> 
//    <i> [Bit 7] RW (@ 0x40004C00) interrupt enable </i>
//    <check> 
//      <loc> ( (unsigned int) USART4_CR1 ) </loc>
//      <o.7..7> TXEIE
//    </check>
//  </item>
//  


// -------------------------------  Field Item: USART4_CR1_TCIE  ----------------------------------
// SVD Line: 12352

//  <item> SFDITEM_FIELD__USART4_CR1_TCIE
//    <name> TCIE </name>
//    <rw> 
//    <i> [Bit 6] RW (@ 0x40004C00) Transmission complete interrupt  enable </i>
//    <check> 
//      <loc> ( (unsigned int) USART4_CR1 ) </loc>
//      <o.6..6> TCIE
//    </check>
//  </item>
//  


// ------------------------------  Field Item: USART4_CR1_RXNEIE  ---------------------------------
// SVD Line: 12359

//  <item> SFDITEM_FIELD__USART4_CR1_RXNEIE
//    <name> RXNEIE </name>
//    <rw> 
//    <i> [Bit 5] RW (@ 0x40004C00) RXNE interrupt enable </i>
//    <check> 
//      <loc> ( (unsigned int) USART4_CR1 ) </loc>
//      <o.5..5> RXNEIE
//    </check>
//  </item>
//  


// ------------------------------  Field Item: USART4_CR1_IDLEIE  ---------------------------------
// SVD Line: 12365

//  <item> SFDITEM_FIELD__USART4_CR1_IDLEIE
//    <name> IDLEIE </name>
//    <rw> 
//    <i> [Bit 4] RW (@ 0x40004C00) IDLE interrupt enable </i>
//    <check> 
//      <loc> ( (unsigned int) USART4_CR1 ) </loc>
//      <o.4..4> IDLEIE
//    </check>
//  </item>
//  


// --------------------------------  Field Item: USART4_CR1_TE  -----------------------------------
// SVD Line: 12371

//  <item> SFDITEM_FIELD__USART4_CR1_TE
//    <name> TE </name>
//    <rw> 
//    <i> [Bit 3] RW (@ 0x40004C00) Transmitter enable </i>
//    <check> 
//      <loc> ( (unsigned int) USART4_CR1 ) </loc>
//      <o.3..3> TE
//    </check>
//  </item>
//  


// --------------------------------  Field Item: USART4_CR1_RE  -----------------------------------
// SVD Line: 12377

//  <item> SFDITEM_FIELD__USART4_CR1_RE
//    <name> RE </name>
//    <rw> 
//    <i> [Bit 2] RW (@ 0x40004C00) Receiver enable </i>
//    <check> 
//      <loc> ( (unsigned int) USART4_CR1 ) </loc>
//      <o.2..2> RE
//    </check>
//  </item>
//  


// -------------------------------  Field Item: USART4_CR1_UESM  ----------------------------------
// SVD Line: 12383

//  <item> SFDITEM_FIELD__USART4_CR1_UESM
//    <name> UESM </name>
//    <rw> 
//    <i> [Bit 1] RW (@ 0x40004C00) USART enable in Stop mode </i>
//    <check> 
//      <loc> ( (unsigned int) USART4_CR1 ) </loc>
//      <o.1..1> UESM
//    </check>
//  </item>
//  


// --------------------------------  Field Item: USART4_CR1_UE  -----------------------------------
// SVD Line: 12389

//  <item> SFDITEM_FIELD__USART4_CR1_UE
//    <name> UE </name>
//    <rw> 
//    <i> [Bit 0] RW (@ 0x40004C00) USART enable </i>
//    <check> 
//      <loc> ( (unsigned int) USART4_CR1 ) </loc>
//      <o.0..0> UE
//    </check>
//  </item>
//  


// -------------------------------  Register RTree: USART4_CR1  -----------------------------------
// SVD Line: 12236

//  <rtree> SFDITEM_REG__USART4_CR1
//    <name> CR1 </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x40004C00) Control register 1 </i>
//    <loc> ( (unsigned int)((USART4_CR1 >> 0) & 0xFFFFFFFF), ((USART4_CR1 = (USART4_CR1 & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__USART4_CR1_RXFFIE </item>
//    <item> SFDITEM_FIELD__USART4_CR1_TXFEIE </item>
//    <item> SFDITEM_FIELD__USART4_CR1_FIFOEN </item>
//    <item> SFDITEM_FIELD__USART4_CR1_M1 </item>
//    <item> SFDITEM_FIELD__USART4_CR1_EOBIE </item>
//    <item> SFDITEM_FIELD__USART4_CR1_RTOIE </item>
//    <item> SFDITEM_FIELD__USART4_CR1_DEAT </item>
//    <item> SFDITEM_FIELD__USART4_CR1_DEDT </item>
//    <item> SFDITEM_FIELD__USART4_CR1_OVER8 </item>
//    <item> SFDITEM_FIELD__USART4_CR1_CMIE </item>
//    <item> SFDITEM_FIELD__USART4_CR1_MME </item>
//    <item> SFDITEM_FIELD__USART4_CR1_M0 </item>
//    <item> SFDITEM_FIELD__USART4_CR1_WAKE </item>
//    <item> SFDITEM_FIELD__USART4_CR1_PCE </item>
//    <item> SFDITEM_FIELD__USART4_CR1_PS </item>
//    <item> SFDITEM_FIELD__USART4_CR1_PEIE </item>
//    <item> SFDITEM_FIELD__USART4_CR1_TXEIE </item>
//    <item> SFDITEM_FIELD__USART4_CR1_TCIE </item>
//    <item> SFDITEM_FIELD__USART4_CR1_RXNEIE </item>
//    <item> SFDITEM_FIELD__USART4_CR1_IDLEIE </item>
//    <item> SFDITEM_FIELD__USART4_CR1_TE </item>
//    <item> SFDITEM_FIELD__USART4_CR1_RE </item>
//    <item> SFDITEM_FIELD__USART4_CR1_UESM </item>
//    <item> SFDITEM_FIELD__USART4_CR1_UE </item>
//  </rtree>
//  


// ----------------------------  Register Item Address: USART4_CR2  -------------------------------
// SVD Line: 12397

unsigned int USART4_CR2 __AT (0x40004C04);



// ------------------------------  Field Item: USART4_CR2_ADD4_7  ---------------------------------
// SVD Line: 12406

//  <item> SFDITEM_FIELD__USART4_CR2_ADD4_7
//    <name> ADD4_7 </name>
//    <rw> 
//    <i> [Bits 31..28] RW (@ 0x40004C04) Address of the USART node </i>
//    <edit> 
//      <loc> ( (unsigned char)((USART4_CR2 >> 28) & 0xF), ((USART4_CR2 = (USART4_CR2 & ~(0xFUL << 28 )) | ((unsigned long)(Gui_u8:GuiVal & 0xF) << 28 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ------------------------------  Field Item: USART4_CR2_ADD0_3  ---------------------------------
// SVD Line: 12412

//  <item> SFDITEM_FIELD__USART4_CR2_ADD0_3
//    <name> ADD0_3 </name>
//    <rw> 
//    <i> [Bits 27..24] RW (@ 0x40004C04) Address of the USART node </i>
//    <edit> 
//      <loc> ( (unsigned char)((USART4_CR2 >> 24) & 0xF), ((USART4_CR2 = (USART4_CR2 & ~(0xFUL << 24 )) | ((unsigned long)(Gui_u8:GuiVal & 0xF) << 24 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ------------------------------  Field Item: USART4_CR2_RTOEN  ----------------------------------
// SVD Line: 12418

//  <item> SFDITEM_FIELD__USART4_CR2_RTOEN
//    <name> RTOEN </name>
//    <rw> 
//    <i> [Bit 23] RW (@ 0x40004C04) Receiver timeout enable </i>
//    <check> 
//      <loc> ( (unsigned int) USART4_CR2 ) </loc>
//      <o.23..23> RTOEN
//    </check>
//  </item>
//  


// ------------------------------  Field Item: USART4_CR2_ABRMOD  ---------------------------------
// SVD Line: 12424

//  <item> SFDITEM_FIELD__USART4_CR2_ABRMOD
//    <name> ABRMOD </name>
//    <rw> 
//    <i> [Bits 22..21] RW (@ 0x40004C04) Auto baud rate mode </i>
//    <edit> 
//      <loc> ( (unsigned char)((USART4_CR2 >> 21) & 0x3), ((USART4_CR2 = (USART4_CR2 & ~(0x3UL << 21 )) | ((unsigned long)(Gui_u8:GuiVal & 0x3) << 21 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ------------------------------  Field Item: USART4_CR2_ABREN  ----------------------------------
// SVD Line: 12430

//  <item> SFDITEM_FIELD__USART4_CR2_ABREN
//    <name> ABREN </name>
//    <rw> 
//    <i> [Bit 20] RW (@ 0x40004C04) Auto baud rate enable </i>
//    <check> 
//      <loc> ( (unsigned int) USART4_CR2 ) </loc>
//      <o.20..20> ABREN
//    </check>
//  </item>
//  


// -----------------------------  Field Item: USART4_CR2_MSBFIRST  --------------------------------
// SVD Line: 12436

//  <item> SFDITEM_FIELD__USART4_CR2_MSBFIRST
//    <name> MSBFIRST </name>
//    <rw> 
//    <i> [Bit 19] RW (@ 0x40004C04) Most significant bit first </i>
//    <check> 
//      <loc> ( (unsigned int) USART4_CR2 ) </loc>
//      <o.19..19> MSBFIRST
//    </check>
//  </item>
//  


// ------------------------------  Field Item: USART4_CR2_TAINV  ----------------------------------
// SVD Line: 12442

//  <item> SFDITEM_FIELD__USART4_CR2_TAINV
//    <name> TAINV </name>
//    <rw> 
//    <i> [Bit 18] RW (@ 0x40004C04) Binary data inversion </i>
//    <check> 
//      <loc> ( (unsigned int) USART4_CR2 ) </loc>
//      <o.18..18> TAINV
//    </check>
//  </item>
//  


// ------------------------------  Field Item: USART4_CR2_TXINV  ----------------------------------
// SVD Line: 12448

//  <item> SFDITEM_FIELD__USART4_CR2_TXINV
//    <name> TXINV </name>
//    <rw> 
//    <i> [Bit 17] RW (@ 0x40004C04) TX pin active level  inversion </i>
//    <check> 
//      <loc> ( (unsigned int) USART4_CR2 ) </loc>
//      <o.17..17> TXINV
//    </check>
//  </item>
//  


// ------------------------------  Field Item: USART4_CR2_RXINV  ----------------------------------
// SVD Line: 12455

//  <item> SFDITEM_FIELD__USART4_CR2_RXINV
//    <name> RXINV </name>
//    <rw> 
//    <i> [Bit 16] RW (@ 0x40004C04) RX pin active level  inversion </i>
//    <check> 
//      <loc> ( (unsigned int) USART4_CR2 ) </loc>
//      <o.16..16> RXINV
//    </check>
//  </item>
//  


// -------------------------------  Field Item: USART4_CR2_SWAP  ----------------------------------
// SVD Line: 12462

//  <item> SFDITEM_FIELD__USART4_CR2_SWAP
//    <name> SWAP </name>
//    <rw> 
//    <i> [Bit 15] RW (@ 0x40004C04) Swap TX/RX pins </i>
//    <check> 
//      <loc> ( (unsigned int) USART4_CR2 ) </loc>
//      <o.15..15> SWAP
//    </check>
//  </item>
//  


// ------------------------------  Field Item: USART4_CR2_LINEN  ----------------------------------
// SVD Line: 12468

//  <item> SFDITEM_FIELD__USART4_CR2_LINEN
//    <name> LINEN </name>
//    <rw> 
//    <i> [Bit 14] RW (@ 0x40004C04) LIN mode enable </i>
//    <check> 
//      <loc> ( (unsigned int) USART4_CR2 ) </loc>
//      <o.14..14> LINEN
//    </check>
//  </item>
//  


// -------------------------------  Field Item: USART4_CR2_STOP  ----------------------------------
// SVD Line: 12474

//  <item> SFDITEM_FIELD__USART4_CR2_STOP
//    <name> STOP </name>
//    <rw> 
//    <i> [Bits 13..12] RW (@ 0x40004C04) STOP bits </i>
//    <edit> 
//      <loc> ( (unsigned char)((USART4_CR2 >> 12) & 0x3), ((USART4_CR2 = (USART4_CR2 & ~(0x3UL << 12 )) | ((unsigned long)(Gui_u8:GuiVal & 0x3) << 12 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ------------------------------  Field Item: USART4_CR2_CLKEN  ----------------------------------
// SVD Line: 12480

//  <item> SFDITEM_FIELD__USART4_CR2_CLKEN
//    <name> CLKEN </name>
//    <rw> 
//    <i> [Bit 11] RW (@ 0x40004C04) Clock enable </i>
//    <check> 
//      <loc> ( (unsigned int) USART4_CR2 ) </loc>
//      <o.11..11> CLKEN
//    </check>
//  </item>
//  


// -------------------------------  Field Item: USART4_CR2_CPOL  ----------------------------------
// SVD Line: 12486

//  <item> SFDITEM_FIELD__USART4_CR2_CPOL
//    <name> CPOL </name>
//    <rw> 
//    <i> [Bit 10] RW (@ 0x40004C04) Clock polarity </i>
//    <check> 
//      <loc> ( (unsigned int) USART4_CR2 ) </loc>
//      <o.10..10> CPOL
//    </check>
//  </item>
//  


// -------------------------------  Field Item: USART4_CR2_CPHA  ----------------------------------
// SVD Line: 12492

//  <item> SFDITEM_FIELD__USART4_CR2_CPHA
//    <name> CPHA </name>
//    <rw> 
//    <i> [Bit 9] RW (@ 0x40004C04) Clock phase </i>
//    <check> 
//      <loc> ( (unsigned int) USART4_CR2 ) </loc>
//      <o.9..9> CPHA
//    </check>
//  </item>
//  


// -------------------------------  Field Item: USART4_CR2_LBCL  ----------------------------------
// SVD Line: 12498

//  <item> SFDITEM_FIELD__USART4_CR2_LBCL
//    <name> LBCL </name>
//    <rw> 
//    <i> [Bit 8] RW (@ 0x40004C04) Last bit clock pulse </i>
//    <check> 
//      <loc> ( (unsigned int) USART4_CR2 ) </loc>
//      <o.8..8> LBCL
//    </check>
//  </item>
//  


// ------------------------------  Field Item: USART4_CR2_LBDIE  ----------------------------------
// SVD Line: 12504

//  <item> SFDITEM_FIELD__USART4_CR2_LBDIE
//    <name> LBDIE </name>
//    <rw> 
//    <i> [Bit 6] RW (@ 0x40004C04) LIN break detection interrupt  enable </i>
//    <check> 
//      <loc> ( (unsigned int) USART4_CR2 ) </loc>
//      <o.6..6> LBDIE
//    </check>
//  </item>
//  


// -------------------------------  Field Item: USART4_CR2_LBDL  ----------------------------------
// SVD Line: 12511

//  <item> SFDITEM_FIELD__USART4_CR2_LBDL
//    <name> LBDL </name>
//    <rw> 
//    <i> [Bit 5] RW (@ 0x40004C04) LIN break detection length </i>
//    <check> 
//      <loc> ( (unsigned int) USART4_CR2 ) </loc>
//      <o.5..5> LBDL
//    </check>
//  </item>
//  


// ------------------------------  Field Item: USART4_CR2_ADDM7  ----------------------------------
// SVD Line: 12517

//  <item> SFDITEM_FIELD__USART4_CR2_ADDM7
//    <name> ADDM7 </name>
//    <rw> 
//    <i> [Bit 4] RW (@ 0x40004C04) 7-bit Address Detection/4-bit Address  Detection </i>
//    <check> 
//      <loc> ( (unsigned int) USART4_CR2 ) </loc>
//      <o.4..4> ADDM7
//    </check>
//  </item>
//  


// -----------------------------  Field Item: USART4_CR2_DIS_NSS  ---------------------------------
// SVD Line: 12524

//  <item> SFDITEM_FIELD__USART4_CR2_DIS_NSS
//    <name> DIS_NSS </name>
//    <rw> 
//    <i> [Bit 3] RW (@ 0x40004C04) When the DSI_NSS bit is set, the NSS pin  input will be ignored </i>
//    <check> 
//      <loc> ( (unsigned int) USART4_CR2 ) </loc>
//      <o.3..3> DIS_NSS
//    </check>
//  </item>
//  


// ------------------------------  Field Item: USART4_CR2_SLVEN  ----------------------------------
// SVD Line: 12531

//  <item> SFDITEM_FIELD__USART4_CR2_SLVEN
//    <name> SLVEN </name>
//    <rw> 
//    <i> [Bit 0] RW (@ 0x40004C04) Synchronous Slave mode  enable </i>
//    <check> 
//      <loc> ( (unsigned int) USART4_CR2 ) </loc>
//      <o.0..0> SLVEN
//    </check>
//  </item>
//  


// -------------------------------  Register RTree: USART4_CR2  -----------------------------------
// SVD Line: 12397

//  <rtree> SFDITEM_REG__USART4_CR2
//    <name> CR2 </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x40004C04) Control register 2 </i>
//    <loc> ( (unsigned int)((USART4_CR2 >> 0) & 0xFFFFFFFF), ((USART4_CR2 = (USART4_CR2 & ~(0xFFFFFF79UL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFF79) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__USART4_CR2_ADD4_7 </item>
//    <item> SFDITEM_FIELD__USART4_CR2_ADD0_3 </item>
//    <item> SFDITEM_FIELD__USART4_CR2_RTOEN </item>
//    <item> SFDITEM_FIELD__USART4_CR2_ABRMOD </item>
//    <item> SFDITEM_FIELD__USART4_CR2_ABREN </item>
//    <item> SFDITEM_FIELD__USART4_CR2_MSBFIRST </item>
//    <item> SFDITEM_FIELD__USART4_CR2_TAINV </item>
//    <item> SFDITEM_FIELD__USART4_CR2_TXINV </item>
//    <item> SFDITEM_FIELD__USART4_CR2_RXINV </item>
//    <item> SFDITEM_FIELD__USART4_CR2_SWAP </item>
//    <item> SFDITEM_FIELD__USART4_CR2_LINEN </item>
//    <item> SFDITEM_FIELD__USART4_CR2_STOP </item>
//    <item> SFDITEM_FIELD__USART4_CR2_CLKEN </item>
//    <item> SFDITEM_FIELD__USART4_CR2_CPOL </item>
//    <item> SFDITEM_FIELD__USART4_CR2_CPHA </item>
//    <item> SFDITEM_FIELD__USART4_CR2_LBCL </item>
//    <item> SFDITEM_FIELD__USART4_CR2_LBDIE </item>
//    <item> SFDITEM_FIELD__USART4_CR2_LBDL </item>
//    <item> SFDITEM_FIELD__USART4_CR2_ADDM7 </item>
//    <item> SFDITEM_FIELD__USART4_CR2_DIS_NSS </item>
//    <item> SFDITEM_FIELD__USART4_CR2_SLVEN </item>
//  </rtree>
//  


// ----------------------------  Register Item Address: USART4_CR3  -------------------------------
// SVD Line: 12540

unsigned int USART4_CR3 __AT (0x40004C08);



// -----------------------------  Field Item: USART4_CR3_TXFTCFG  ---------------------------------
// SVD Line: 12549

//  <item> SFDITEM_FIELD__USART4_CR3_TXFTCFG
//    <name> TXFTCFG </name>
//    <rw> 
//    <i> [Bits 31..29] RW (@ 0x40004C08) TXFIFO threshold  configuration </i>
//    <edit> 
//      <loc> ( (unsigned char)((USART4_CR3 >> 29) & 0x7), ((USART4_CR3 = (USART4_CR3 & ~(0x7UL << 29 )) | ((unsigned long)(Gui_u8:GuiVal & 0x7) << 29 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ------------------------------  Field Item: USART4_CR3_RXFTIE  ---------------------------------
// SVD Line: 12556

//  <item> SFDITEM_FIELD__USART4_CR3_RXFTIE
//    <name> RXFTIE </name>
//    <rw> 
//    <i> [Bit 28] RW (@ 0x40004C08) RXFIFO threshold interrupt  enable </i>
//    <check> 
//      <loc> ( (unsigned int) USART4_CR3 ) </loc>
//      <o.28..28> RXFTIE
//    </check>
//  </item>
//  


// -----------------------------  Field Item: USART4_CR3_RXFTCFG  ---------------------------------
// SVD Line: 12563

//  <item> SFDITEM_FIELD__USART4_CR3_RXFTCFG
//    <name> RXFTCFG </name>
//    <rw> 
//    <i> [Bits 27..25] RW (@ 0x40004C08) Receive FIFO threshold  configuration </i>
//    <edit> 
//      <loc> ( (unsigned char)((USART4_CR3 >> 25) & 0x7), ((USART4_CR3 = (USART4_CR3 & ~(0x7UL << 25 )) | ((unsigned long)(Gui_u8:GuiVal & 0x7) << 25 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -----------------------------  Field Item: USART4_CR3_TCBGTIE  ---------------------------------
// SVD Line: 12570

//  <item> SFDITEM_FIELD__USART4_CR3_TCBGTIE
//    <name> TCBGTIE </name>
//    <rw> 
//    <i> [Bit 24] RW (@ 0x40004C08) Tr Complete before guard time, interrupt  enable </i>
//    <check> 
//      <loc> ( (unsigned int) USART4_CR3 ) </loc>
//      <o.24..24> TCBGTIE
//    </check>
//  </item>
//  


// ------------------------------  Field Item: USART4_CR3_TXFTIE  ---------------------------------
// SVD Line: 12577

//  <item> SFDITEM_FIELD__USART4_CR3_TXFTIE
//    <name> TXFTIE </name>
//    <rw> 
//    <i> [Bit 23] RW (@ 0x40004C08) threshold interrupt enable </i>
//    <check> 
//      <loc> ( (unsigned int) USART4_CR3 ) </loc>
//      <o.23..23> TXFTIE
//    </check>
//  </item>
//  


// ------------------------------  Field Item: USART4_CR3_WUFIE  ----------------------------------
// SVD Line: 12583

//  <item> SFDITEM_FIELD__USART4_CR3_WUFIE
//    <name> WUFIE </name>
//    <rw> 
//    <i> [Bit 22] RW (@ 0x40004C08) Wakeup from Stop mode interrupt  enable </i>
//    <check> 
//      <loc> ( (unsigned int) USART4_CR3 ) </loc>
//      <o.22..22> WUFIE
//    </check>
//  </item>
//  


// -------------------------------  Field Item: USART4_CR3_WUS  -----------------------------------
// SVD Line: 12590

//  <item> SFDITEM_FIELD__USART4_CR3_WUS
//    <name> WUS </name>
//    <rw> 
//    <i> [Bits 21..20] RW (@ 0x40004C08) Wakeup from Stop mode interrupt flag  selection </i>
//    <edit> 
//      <loc> ( (unsigned char)((USART4_CR3 >> 20) & 0x3), ((USART4_CR3 = (USART4_CR3 & ~(0x3UL << 20 )) | ((unsigned long)(Gui_u8:GuiVal & 0x3) << 20 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -----------------------------  Field Item: USART4_CR3_SCARCNT  ---------------------------------
// SVD Line: 12597

//  <item> SFDITEM_FIELD__USART4_CR3_SCARCNT
//    <name> SCARCNT </name>
//    <rw> 
//    <i> [Bits 19..17] RW (@ 0x40004C08) Smartcard auto-retry count </i>
//    <edit> 
//      <loc> ( (unsigned char)((USART4_CR3 >> 17) & 0x7), ((USART4_CR3 = (USART4_CR3 & ~(0x7UL << 17 )) | ((unsigned long)(Gui_u8:GuiVal & 0x7) << 17 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -------------------------------  Field Item: USART4_CR3_DEP  -----------------------------------
// SVD Line: 12603

//  <item> SFDITEM_FIELD__USART4_CR3_DEP
//    <name> DEP </name>
//    <rw> 
//    <i> [Bit 15] RW (@ 0x40004C08) Driver enable polarity  selection </i>
//    <check> 
//      <loc> ( (unsigned int) USART4_CR3 ) </loc>
//      <o.15..15> DEP
//    </check>
//  </item>
//  


// -------------------------------  Field Item: USART4_CR3_DEM  -----------------------------------
// SVD Line: 12610

//  <item> SFDITEM_FIELD__USART4_CR3_DEM
//    <name> DEM </name>
//    <rw> 
//    <i> [Bit 14] RW (@ 0x40004C08) Driver enable mode </i>
//    <check> 
//      <loc> ( (unsigned int) USART4_CR3 ) </loc>
//      <o.14..14> DEM
//    </check>
//  </item>
//  


// -------------------------------  Field Item: USART4_CR3_DDRE  ----------------------------------
// SVD Line: 12616

//  <item> SFDITEM_FIELD__USART4_CR3_DDRE
//    <name> DDRE </name>
//    <rw> 
//    <i> [Bit 13] RW (@ 0x40004C08) DMA Disable on Reception  Error </i>
//    <check> 
//      <loc> ( (unsigned int) USART4_CR3 ) </loc>
//      <o.13..13> DDRE
//    </check>
//  </item>
//  


// ------------------------------  Field Item: USART4_CR3_OVRDIS  ---------------------------------
// SVD Line: 12623

//  <item> SFDITEM_FIELD__USART4_CR3_OVRDIS
//    <name> OVRDIS </name>
//    <rw> 
//    <i> [Bit 12] RW (@ 0x40004C08) Overrun Disable </i>
//    <check> 
//      <loc> ( (unsigned int) USART4_CR3 ) </loc>
//      <o.12..12> OVRDIS
//    </check>
//  </item>
//  


// ------------------------------  Field Item: USART4_CR3_ONEBIT  ---------------------------------
// SVD Line: 12629

//  <item> SFDITEM_FIELD__USART4_CR3_ONEBIT
//    <name> ONEBIT </name>
//    <rw> 
//    <i> [Bit 11] RW (@ 0x40004C08) One sample bit method  enable </i>
//    <check> 
//      <loc> ( (unsigned int) USART4_CR3 ) </loc>
//      <o.11..11> ONEBIT
//    </check>
//  </item>
//  


// ------------------------------  Field Item: USART4_CR3_CTSIE  ----------------------------------
// SVD Line: 12636

//  <item> SFDITEM_FIELD__USART4_CR3_CTSIE
//    <name> CTSIE </name>
//    <rw> 
//    <i> [Bit 10] RW (@ 0x40004C08) CTS interrupt enable </i>
//    <check> 
//      <loc> ( (unsigned int) USART4_CR3 ) </loc>
//      <o.10..10> CTSIE
//    </check>
//  </item>
//  


// -------------------------------  Field Item: USART4_CR3_CTSE  ----------------------------------
// SVD Line: 12642

//  <item> SFDITEM_FIELD__USART4_CR3_CTSE
//    <name> CTSE </name>
//    <rw> 
//    <i> [Bit 9] RW (@ 0x40004C08) CTS enable </i>
//    <check> 
//      <loc> ( (unsigned int) USART4_CR3 ) </loc>
//      <o.9..9> CTSE
//    </check>
//  </item>
//  


// -------------------------------  Field Item: USART4_CR3_RTSE  ----------------------------------
// SVD Line: 12648

//  <item> SFDITEM_FIELD__USART4_CR3_RTSE
//    <name> RTSE </name>
//    <rw> 
//    <i> [Bit 8] RW (@ 0x40004C08) RTS enable </i>
//    <check> 
//      <loc> ( (unsigned int) USART4_CR3 ) </loc>
//      <o.8..8> RTSE
//    </check>
//  </item>
//  


// -------------------------------  Field Item: USART4_CR3_DMAT  ----------------------------------
// SVD Line: 12654

//  <item> SFDITEM_FIELD__USART4_CR3_DMAT
//    <name> DMAT </name>
//    <rw> 
//    <i> [Bit 7] RW (@ 0x40004C08) DMA enable transmitter </i>
//    <check> 
//      <loc> ( (unsigned int) USART4_CR3 ) </loc>
//      <o.7..7> DMAT
//    </check>
//  </item>
//  


// -------------------------------  Field Item: USART4_CR3_DMAR  ----------------------------------
// SVD Line: 12660

//  <item> SFDITEM_FIELD__USART4_CR3_DMAR
//    <name> DMAR </name>
//    <rw> 
//    <i> [Bit 6] RW (@ 0x40004C08) DMA enable receiver </i>
//    <check> 
//      <loc> ( (unsigned int) USART4_CR3 ) </loc>
//      <o.6..6> DMAR
//    </check>
//  </item>
//  


// -------------------------------  Field Item: USART4_CR3_SCEN  ----------------------------------
// SVD Line: 12666

//  <item> SFDITEM_FIELD__USART4_CR3_SCEN
//    <name> SCEN </name>
//    <rw> 
//    <i> [Bit 5] RW (@ 0x40004C08) Smartcard mode enable </i>
//    <check> 
//      <loc> ( (unsigned int) USART4_CR3 ) </loc>
//      <o.5..5> SCEN
//    </check>
//  </item>
//  


// -------------------------------  Field Item: USART4_CR3_NACK  ----------------------------------
// SVD Line: 12672

//  <item> SFDITEM_FIELD__USART4_CR3_NACK
//    <name> NACK </name>
//    <rw> 
//    <i> [Bit 4] RW (@ 0x40004C08) Smartcard NACK enable </i>
//    <check> 
//      <loc> ( (unsigned int) USART4_CR3 ) </loc>
//      <o.4..4> NACK
//    </check>
//  </item>
//  


// ------------------------------  Field Item: USART4_CR3_HDSEL  ----------------------------------
// SVD Line: 12678

//  <item> SFDITEM_FIELD__USART4_CR3_HDSEL
//    <name> HDSEL </name>
//    <rw> 
//    <i> [Bit 3] RW (@ 0x40004C08) Half-duplex selection </i>
//    <check> 
//      <loc> ( (unsigned int) USART4_CR3 ) </loc>
//      <o.3..3> HDSEL
//    </check>
//  </item>
//  


// -------------------------------  Field Item: USART4_CR3_IRLP  ----------------------------------
// SVD Line: 12684

//  <item> SFDITEM_FIELD__USART4_CR3_IRLP
//    <name> IRLP </name>
//    <rw> 
//    <i> [Bit 2] RW (@ 0x40004C08) Ir low-power </i>
//    <check> 
//      <loc> ( (unsigned int) USART4_CR3 ) </loc>
//      <o.2..2> IRLP
//    </check>
//  </item>
//  


// -------------------------------  Field Item: USART4_CR3_IREN  ----------------------------------
// SVD Line: 12690

//  <item> SFDITEM_FIELD__USART4_CR3_IREN
//    <name> IREN </name>
//    <rw> 
//    <i> [Bit 1] RW (@ 0x40004C08) Ir mode enable </i>
//    <check> 
//      <loc> ( (unsigned int) USART4_CR3 ) </loc>
//      <o.1..1> IREN
//    </check>
//  </item>
//  


// -------------------------------  Field Item: USART4_CR3_EIE  -----------------------------------
// SVD Line: 12696

//  <item> SFDITEM_FIELD__USART4_CR3_EIE
//    <name> EIE </name>
//    <rw> 
//    <i> [Bit 0] RW (@ 0x40004C08) Error interrupt enable </i>
//    <check> 
//      <loc> ( (unsigned int) USART4_CR3 ) </loc>
//      <o.0..0> EIE
//    </check>
//  </item>
//  


// -------------------------------  Register RTree: USART4_CR3  -----------------------------------
// SVD Line: 12540

//  <rtree> SFDITEM_REG__USART4_CR3
//    <name> CR3 </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x40004C08) Control register 3 </i>
//    <loc> ( (unsigned int)((USART4_CR3 >> 0) & 0xFFFFFFFF), ((USART4_CR3 = (USART4_CR3 & ~(0xFFFEFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFEFFFF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__USART4_CR3_TXFTCFG </item>
//    <item> SFDITEM_FIELD__USART4_CR3_RXFTIE </item>
//    <item> SFDITEM_FIELD__USART4_CR3_RXFTCFG </item>
//    <item> SFDITEM_FIELD__USART4_CR3_TCBGTIE </item>
//    <item> SFDITEM_FIELD__USART4_CR3_TXFTIE </item>
//    <item> SFDITEM_FIELD__USART4_CR3_WUFIE </item>
//    <item> SFDITEM_FIELD__USART4_CR3_WUS </item>
//    <item> SFDITEM_FIELD__USART4_CR3_SCARCNT </item>
//    <item> SFDITEM_FIELD__USART4_CR3_DEP </item>
//    <item> SFDITEM_FIELD__USART4_CR3_DEM </item>
//    <item> SFDITEM_FIELD__USART4_CR3_DDRE </item>
//    <item> SFDITEM_FIELD__USART4_CR3_OVRDIS </item>
//    <item> SFDITEM_FIELD__USART4_CR3_ONEBIT </item>
//    <item> SFDITEM_FIELD__USART4_CR3_CTSIE </item>
//    <item> SFDITEM_FIELD__USART4_CR3_CTSE </item>
//    <item> SFDITEM_FIELD__USART4_CR3_RTSE </item>
//    <item> SFDITEM_FIELD__USART4_CR3_DMAT </item>
//    <item> SFDITEM_FIELD__USART4_CR3_DMAR </item>
//    <item> SFDITEM_FIELD__USART4_CR3_SCEN </item>
//    <item> SFDITEM_FIELD__USART4_CR3_NACK </item>
//    <item> SFDITEM_FIELD__USART4_CR3_HDSEL </item>
//    <item> SFDITEM_FIELD__USART4_CR3_IRLP </item>
//    <item> SFDITEM_FIELD__USART4_CR3_IREN </item>
//    <item> SFDITEM_FIELD__USART4_CR3_EIE </item>
//  </rtree>
//  


// ----------------------------  Register Item Address: USART4_BRR  -------------------------------
// SVD Line: 12704

unsigned int USART4_BRR __AT (0x40004C0C);



// -----------------------------  Field Item: USART4_BRR_BRR_4_15  --------------------------------
// SVD Line: 12713

//  <item> SFDITEM_FIELD__USART4_BRR_BRR_4_15
//    <name> BRR_4_15 </name>
//    <rw> 
//    <i> [Bits 15..4] RW (@ 0x40004C0C) BRR_4_15 </i>
//    <edit> 
//      <loc> ( (unsigned short)((USART4_BRR >> 4) & 0xFFF), ((USART4_BRR = (USART4_BRR & ~(0xFFFUL << 4 )) | ((unsigned long)(Gui_u16:GuiVal & 0xFFF) << 4 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -----------------------------  Field Item: USART4_BRR_BRR_0_3  ---------------------------------
// SVD Line: 12719

//  <item> SFDITEM_FIELD__USART4_BRR_BRR_0_3
//    <name> BRR_0_3 </name>
//    <rw> 
//    <i> [Bits 3..0] RW (@ 0x40004C0C) BRR_0_3 </i>
//    <edit> 
//      <loc> ( (unsigned char)((USART4_BRR >> 0) & 0xF), ((USART4_BRR = (USART4_BRR & ~(0xFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -------------------------------  Register RTree: USART4_BRR  -----------------------------------
// SVD Line: 12704

//  <rtree> SFDITEM_REG__USART4_BRR
//    <name> BRR </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x40004C0C) Baud rate register </i>
//    <loc> ( (unsigned int)((USART4_BRR >> 0) & 0xFFFFFFFF), ((USART4_BRR = (USART4_BRR & ~(0xFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__USART4_BRR_BRR_4_15 </item>
//    <item> SFDITEM_FIELD__USART4_BRR_BRR_0_3 </item>
//  </rtree>
//  


// ---------------------------  Register Item Address: USART4_GTPR  -------------------------------
// SVD Line: 12727

unsigned int USART4_GTPR __AT (0x40004C10);



// -------------------------------  Field Item: USART4_GTPR_GT  -----------------------------------
// SVD Line: 12737

//  <item> SFDITEM_FIELD__USART4_GTPR_GT
//    <name> GT </name>
//    <rw> 
//    <i> [Bits 15..8] RW (@ 0x40004C10) Guard time value </i>
//    <edit> 
//      <loc> ( (unsigned char)((USART4_GTPR >> 8) & 0xFF), ((USART4_GTPR = (USART4_GTPR & ~(0xFFUL << 8 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFF) << 8 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -------------------------------  Field Item: USART4_GTPR_PSC  ----------------------------------
// SVD Line: 12743

//  <item> SFDITEM_FIELD__USART4_GTPR_PSC
//    <name> PSC </name>
//    <rw> 
//    <i> [Bits 7..0] RW (@ 0x40004C10) Prescaler value </i>
//    <edit> 
//      <loc> ( (unsigned char)((USART4_GTPR >> 0) & 0xFF), ((USART4_GTPR = (USART4_GTPR & ~(0xFFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -------------------------------  Register RTree: USART4_GTPR  ----------------------------------
// SVD Line: 12727

//  <rtree> SFDITEM_REG__USART4_GTPR
//    <name> GTPR </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x40004C10) Guard time and prescaler  register </i>
//    <loc> ( (unsigned int)((USART4_GTPR >> 0) & 0xFFFFFFFF), ((USART4_GTPR = (USART4_GTPR & ~(0xFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__USART4_GTPR_GT </item>
//    <item> SFDITEM_FIELD__USART4_GTPR_PSC </item>
//  </rtree>
//  


// ---------------------------  Register Item Address: USART4_RTOR  -------------------------------
// SVD Line: 12751

unsigned int USART4_RTOR __AT (0x40004C14);



// ------------------------------  Field Item: USART4_RTOR_BLEN  ----------------------------------
// SVD Line: 12760

//  <item> SFDITEM_FIELD__USART4_RTOR_BLEN
//    <name> BLEN </name>
//    <rw> 
//    <i> [Bits 31..24] RW (@ 0x40004C14) Block Length </i>
//    <edit> 
//      <loc> ( (unsigned char)((USART4_RTOR >> 24) & 0xFF), ((USART4_RTOR = (USART4_RTOR & ~(0xFFUL << 24 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFF) << 24 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -------------------------------  Field Item: USART4_RTOR_RTO  ----------------------------------
// SVD Line: 12766

//  <item> SFDITEM_FIELD__USART4_RTOR_RTO
//    <name> RTO </name>
//    <rw> 
//    <i> [Bits 23..0] RW (@ 0x40004C14) Receiver timeout value </i>
//    <edit> 
//      <loc> ( (unsigned int)((USART4_RTOR >> 0) & 0xFFFFFF), ((USART4_RTOR = (USART4_RTOR & ~(0xFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -------------------------------  Register RTree: USART4_RTOR  ----------------------------------
// SVD Line: 12751

//  <rtree> SFDITEM_REG__USART4_RTOR
//    <name> RTOR </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x40004C14) Receiver timeout register </i>
//    <loc> ( (unsigned int)((USART4_RTOR >> 0) & 0xFFFFFFFF), ((USART4_RTOR = (USART4_RTOR & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__USART4_RTOR_BLEN </item>
//    <item> SFDITEM_FIELD__USART4_RTOR_RTO </item>
//  </rtree>
//  


// ----------------------------  Register Item Address: USART4_RQR  -------------------------------
// SVD Line: 12774

unsigned int USART4_RQR __AT (0x40004C18);



// ------------------------------  Field Item: USART4_RQR_TXFRQ  ----------------------------------
// SVD Line: 12783

//  <item> SFDITEM_FIELD__USART4_RQR_TXFRQ
//    <name> TXFRQ </name>
//    <w> 
//    <i> [Bit 4] WO (@ 0x40004C18) Transmit data flush  request </i>
//    <check> 
//      <loc> ( (unsigned int) USART4_RQR ) </loc>
//      <o.4..4> TXFRQ
//    </check>
//  </item>
//  


// ------------------------------  Field Item: USART4_RQR_RXFRQ  ----------------------------------
// SVD Line: 12790

//  <item> SFDITEM_FIELD__USART4_RQR_RXFRQ
//    <name> RXFRQ </name>
//    <w> 
//    <i> [Bit 3] WO (@ 0x40004C18) Receive data flush request </i>
//    <check> 
//      <loc> ( (unsigned int) USART4_RQR ) </loc>
//      <o.3..3> RXFRQ
//    </check>
//  </item>
//  


// -------------------------------  Field Item: USART4_RQR_MMRQ  ----------------------------------
// SVD Line: 12796

//  <item> SFDITEM_FIELD__USART4_RQR_MMRQ
//    <name> MMRQ </name>
//    <w> 
//    <i> [Bit 2] WO (@ 0x40004C18) Mute mode request </i>
//    <check> 
//      <loc> ( (unsigned int) USART4_RQR ) </loc>
//      <o.2..2> MMRQ
//    </check>
//  </item>
//  


// ------------------------------  Field Item: USART4_RQR_SBKRQ  ----------------------------------
// SVD Line: 12802

//  <item> SFDITEM_FIELD__USART4_RQR_SBKRQ
//    <name> SBKRQ </name>
//    <w> 
//    <i> [Bit 1] WO (@ 0x40004C18) Send break request </i>
//    <check> 
//      <loc> ( (unsigned int) USART4_RQR ) </loc>
//      <o.1..1> SBKRQ
//    </check>
//  </item>
//  


// ------------------------------  Field Item: USART4_RQR_ABRRQ  ----------------------------------
// SVD Line: 12808

//  <item> SFDITEM_FIELD__USART4_RQR_ABRRQ
//    <name> ABRRQ </name>
//    <w> 
//    <i> [Bit 0] WO (@ 0x40004C18) Auto baud rate request </i>
//    <check> 
//      <loc> ( (unsigned int) USART4_RQR ) </loc>
//      <o.0..0> ABRRQ
//    </check>
//  </item>
//  


// -------------------------------  Register RTree: USART4_RQR  -----------------------------------
// SVD Line: 12774

//  <rtree> SFDITEM_REG__USART4_RQR
//    <name> RQR </name>
//    <w> 
//    <i> [Bits 31..0] WO (@ 0x40004C18) Request register </i>
//    <loc> ( (unsigned int)((USART4_RQR >> 0) & 0xFFFFFFFF), ((USART4_RQR = (USART4_RQR & ~(0x1FUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0x1F) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__USART4_RQR_TXFRQ </item>
//    <item> SFDITEM_FIELD__USART4_RQR_RXFRQ </item>
//    <item> SFDITEM_FIELD__USART4_RQR_MMRQ </item>
//    <item> SFDITEM_FIELD__USART4_RQR_SBKRQ </item>
//    <item> SFDITEM_FIELD__USART4_RQR_ABRRQ </item>
//  </rtree>
//  


// ----------------------------  Register Item Address: USART4_ISR  -------------------------------
// SVD Line: 12816

unsigned int USART4_ISR __AT (0x40004C1C);



// -------------------------------  Field Item: USART4_ISR_TXFT  ----------------------------------
// SVD Line: 12826

//  <item> SFDITEM_FIELD__USART4_ISR_TXFT
//    <name> TXFT </name>
//    <r> 
//    <i> [Bit 27] RO (@ 0x40004C1C) TXFIFO threshold flag </i>
//    <check> 
//      <loc> ( (unsigned int) USART4_ISR ) </loc>
//      <o.27..27> TXFT
//    </check>
//  </item>
//  


// -------------------------------  Field Item: USART4_ISR_RXFT  ----------------------------------
// SVD Line: 12832

//  <item> SFDITEM_FIELD__USART4_ISR_RXFT
//    <name> RXFT </name>
//    <r> 
//    <i> [Bit 26] RO (@ 0x40004C1C) RXFIFO threshold flag </i>
//    <check> 
//      <loc> ( (unsigned int) USART4_ISR ) </loc>
//      <o.26..26> RXFT
//    </check>
//  </item>
//  


// ------------------------------  Field Item: USART4_ISR_TCBGT  ----------------------------------
// SVD Line: 12838

//  <item> SFDITEM_FIELD__USART4_ISR_TCBGT
//    <name> TCBGT </name>
//    <r> 
//    <i> [Bit 25] RO (@ 0x40004C1C) Transmission complete before guard time  flag </i>
//    <check> 
//      <loc> ( (unsigned int) USART4_ISR ) </loc>
//      <o.25..25> TCBGT
//    </check>
//  </item>
//  


// -------------------------------  Field Item: USART4_ISR_RXFF  ----------------------------------
// SVD Line: 12845

//  <item> SFDITEM_FIELD__USART4_ISR_RXFF
//    <name> RXFF </name>
//    <r> 
//    <i> [Bit 24] RO (@ 0x40004C1C) RXFIFO Full </i>
//    <check> 
//      <loc> ( (unsigned int) USART4_ISR ) </loc>
//      <o.24..24> RXFF
//    </check>
//  </item>
//  


// -------------------------------  Field Item: USART4_ISR_TXFE  ----------------------------------
// SVD Line: 12851

//  <item> SFDITEM_FIELD__USART4_ISR_TXFE
//    <name> TXFE </name>
//    <r> 
//    <i> [Bit 23] RO (@ 0x40004C1C) TXFIFO Empty </i>
//    <check> 
//      <loc> ( (unsigned int) USART4_ISR ) </loc>
//      <o.23..23> TXFE
//    </check>
//  </item>
//  


// ------------------------------  Field Item: USART4_ISR_REACK  ----------------------------------
// SVD Line: 12857

//  <item> SFDITEM_FIELD__USART4_ISR_REACK
//    <name> REACK </name>
//    <r> 
//    <i> [Bit 22] RO (@ 0x40004C1C) REACK </i>
//    <check> 
//      <loc> ( (unsigned int) USART4_ISR ) </loc>
//      <o.22..22> REACK
//    </check>
//  </item>
//  


// ------------------------------  Field Item: USART4_ISR_TEACK  ----------------------------------
// SVD Line: 12863

//  <item> SFDITEM_FIELD__USART4_ISR_TEACK
//    <name> TEACK </name>
//    <r> 
//    <i> [Bit 21] RO (@ 0x40004C1C) TEACK </i>
//    <check> 
//      <loc> ( (unsigned int) USART4_ISR ) </loc>
//      <o.21..21> TEACK
//    </check>
//  </item>
//  


// -------------------------------  Field Item: USART4_ISR_WUF  -----------------------------------
// SVD Line: 12869

//  <item> SFDITEM_FIELD__USART4_ISR_WUF
//    <name> WUF </name>
//    <r> 
//    <i> [Bit 20] RO (@ 0x40004C1C) WUF </i>
//    <check> 
//      <loc> ( (unsigned int) USART4_ISR ) </loc>
//      <o.20..20> WUF
//    </check>
//  </item>
//  


// -------------------------------  Field Item: USART4_ISR_RWU  -----------------------------------
// SVD Line: 12875

//  <item> SFDITEM_FIELD__USART4_ISR_RWU
//    <name> RWU </name>
//    <r> 
//    <i> [Bit 19] RO (@ 0x40004C1C) RWU </i>
//    <check> 
//      <loc> ( (unsigned int) USART4_ISR ) </loc>
//      <o.19..19> RWU
//    </check>
//  </item>
//  


// -------------------------------  Field Item: USART4_ISR_SBKF  ----------------------------------
// SVD Line: 12881

//  <item> SFDITEM_FIELD__USART4_ISR_SBKF
//    <name> SBKF </name>
//    <r> 
//    <i> [Bit 18] RO (@ 0x40004C1C) SBKF </i>
//    <check> 
//      <loc> ( (unsigned int) USART4_ISR ) </loc>
//      <o.18..18> SBKF
//    </check>
//  </item>
//  


// -------------------------------  Field Item: USART4_ISR_CMF  -----------------------------------
// SVD Line: 12887

//  <item> SFDITEM_FIELD__USART4_ISR_CMF
//    <name> CMF </name>
//    <r> 
//    <i> [Bit 17] RO (@ 0x40004C1C) CMF </i>
//    <check> 
//      <loc> ( (unsigned int) USART4_ISR ) </loc>
//      <o.17..17> CMF
//    </check>
//  </item>
//  


// -------------------------------  Field Item: USART4_ISR_BUSY  ----------------------------------
// SVD Line: 12893

//  <item> SFDITEM_FIELD__USART4_ISR_BUSY
//    <name> BUSY </name>
//    <r> 
//    <i> [Bit 16] RO (@ 0x40004C1C) BUSY </i>
//    <check> 
//      <loc> ( (unsigned int) USART4_ISR ) </loc>
//      <o.16..16> BUSY
//    </check>
//  </item>
//  


// -------------------------------  Field Item: USART4_ISR_ABRF  ----------------------------------
// SVD Line: 12899

//  <item> SFDITEM_FIELD__USART4_ISR_ABRF
//    <name> ABRF </name>
//    <r> 
//    <i> [Bit 15] RO (@ 0x40004C1C) ABRF </i>
//    <check> 
//      <loc> ( (unsigned int) USART4_ISR ) </loc>
//      <o.15..15> ABRF
//    </check>
//  </item>
//  


// -------------------------------  Field Item: USART4_ISR_ABRE  ----------------------------------
// SVD Line: 12905

//  <item> SFDITEM_FIELD__USART4_ISR_ABRE
//    <name> ABRE </name>
//    <r> 
//    <i> [Bit 14] RO (@ 0x40004C1C) ABRE </i>
//    <check> 
//      <loc> ( (unsigned int) USART4_ISR ) </loc>
//      <o.14..14> ABRE
//    </check>
//  </item>
//  


// -------------------------------  Field Item: USART4_ISR_UDR  -----------------------------------
// SVD Line: 12911

//  <item> SFDITEM_FIELD__USART4_ISR_UDR
//    <name> UDR </name>
//    <r> 
//    <i> [Bit 13] RO (@ 0x40004C1C) SPI slave underrun error  flag </i>
//    <check> 
//      <loc> ( (unsigned int) USART4_ISR ) </loc>
//      <o.13..13> UDR
//    </check>
//  </item>
//  


// -------------------------------  Field Item: USART4_ISR_EOBF  ----------------------------------
// SVD Line: 12918

//  <item> SFDITEM_FIELD__USART4_ISR_EOBF
//    <name> EOBF </name>
//    <r> 
//    <i> [Bit 12] RO (@ 0x40004C1C) EOBF </i>
//    <check> 
//      <loc> ( (unsigned int) USART4_ISR ) </loc>
//      <o.12..12> EOBF
//    </check>
//  </item>
//  


// -------------------------------  Field Item: USART4_ISR_RTOF  ----------------------------------
// SVD Line: 12924

//  <item> SFDITEM_FIELD__USART4_ISR_RTOF
//    <name> RTOF </name>
//    <r> 
//    <i> [Bit 11] RO (@ 0x40004C1C) RTOF </i>
//    <check> 
//      <loc> ( (unsigned int) USART4_ISR ) </loc>
//      <o.11..11> RTOF
//    </check>
//  </item>
//  


// -------------------------------  Field Item: USART4_ISR_CTS  -----------------------------------
// SVD Line: 12930

//  <item> SFDITEM_FIELD__USART4_ISR_CTS
//    <name> CTS </name>
//    <r> 
//    <i> [Bit 10] RO (@ 0x40004C1C) CTS </i>
//    <check> 
//      <loc> ( (unsigned int) USART4_ISR ) </loc>
//      <o.10..10> CTS
//    </check>
//  </item>
//  


// ------------------------------  Field Item: USART4_ISR_CTSIF  ----------------------------------
// SVD Line: 12936

//  <item> SFDITEM_FIELD__USART4_ISR_CTSIF
//    <name> CTSIF </name>
//    <r> 
//    <i> [Bit 9] RO (@ 0x40004C1C) CTSIF </i>
//    <check> 
//      <loc> ( (unsigned int) USART4_ISR ) </loc>
//      <o.9..9> CTSIF
//    </check>
//  </item>
//  


// -------------------------------  Field Item: USART4_ISR_LBDF  ----------------------------------
// SVD Line: 12942

//  <item> SFDITEM_FIELD__USART4_ISR_LBDF
//    <name> LBDF </name>
//    <r> 
//    <i> [Bit 8] RO (@ 0x40004C1C) LBDF </i>
//    <check> 
//      <loc> ( (unsigned int) USART4_ISR ) </loc>
//      <o.8..8> LBDF
//    </check>
//  </item>
//  


// -------------------------------  Field Item: USART4_ISR_TXE  -----------------------------------
// SVD Line: 12948

//  <item> SFDITEM_FIELD__USART4_ISR_TXE
//    <name> TXE </name>
//    <r> 
//    <i> [Bit 7] RO (@ 0x40004C1C) TXE </i>
//    <check> 
//      <loc> ( (unsigned int) USART4_ISR ) </loc>
//      <o.7..7> TXE
//    </check>
//  </item>
//  


// --------------------------------  Field Item: USART4_ISR_TC  -----------------------------------
// SVD Line: 12954

//  <item> SFDITEM_FIELD__USART4_ISR_TC
//    <name> TC </name>
//    <r> 
//    <i> [Bit 6] RO (@ 0x40004C1C) TC </i>
//    <check> 
//      <loc> ( (unsigned int) USART4_ISR ) </loc>
//      <o.6..6> TC
//    </check>
//  </item>
//  


// -------------------------------  Field Item: USART4_ISR_RXNE  ----------------------------------
// SVD Line: 12960

//  <item> SFDITEM_FIELD__USART4_ISR_RXNE
//    <name> RXNE </name>
//    <r> 
//    <i> [Bit 5] RO (@ 0x40004C1C) RXNE </i>
//    <check> 
//      <loc> ( (unsigned int) USART4_ISR ) </loc>
//      <o.5..5> RXNE
//    </check>
//  </item>
//  


// -------------------------------  Field Item: USART4_ISR_IDLE  ----------------------------------
// SVD Line: 12966

//  <item> SFDITEM_FIELD__USART4_ISR_IDLE
//    <name> IDLE </name>
//    <r> 
//    <i> [Bit 4] RO (@ 0x40004C1C) IDLE </i>
//    <check> 
//      <loc> ( (unsigned int) USART4_ISR ) </loc>
//      <o.4..4> IDLE
//    </check>
//  </item>
//  


// -------------------------------  Field Item: USART4_ISR_ORE  -----------------------------------
// SVD Line: 12972

//  <item> SFDITEM_FIELD__USART4_ISR_ORE
//    <name> ORE </name>
//    <r> 
//    <i> [Bit 3] RO (@ 0x40004C1C) ORE </i>
//    <check> 
//      <loc> ( (unsigned int) USART4_ISR ) </loc>
//      <o.3..3> ORE
//    </check>
//  </item>
//  


// --------------------------------  Field Item: USART4_ISR_NF  -----------------------------------
// SVD Line: 12978

//  <item> SFDITEM_FIELD__USART4_ISR_NF
//    <name> NF </name>
//    <r> 
//    <i> [Bit 2] RO (@ 0x40004C1C) NF </i>
//    <check> 
//      <loc> ( (unsigned int) USART4_ISR ) </loc>
//      <o.2..2> NF
//    </check>
//  </item>
//  


// --------------------------------  Field Item: USART4_ISR_FE  -----------------------------------
// SVD Line: 12984

//  <item> SFDITEM_FIELD__USART4_ISR_FE
//    <name> FE </name>
//    <r> 
//    <i> [Bit 1] RO (@ 0x40004C1C) FE </i>
//    <check> 
//      <loc> ( (unsigned int) USART4_ISR ) </loc>
//      <o.1..1> FE
//    </check>
//  </item>
//  


// --------------------------------  Field Item: USART4_ISR_PE  -----------------------------------
// SVD Line: 12990

//  <item> SFDITEM_FIELD__USART4_ISR_PE
//    <name> PE </name>
//    <r> 
//    <i> [Bit 0] RO (@ 0x40004C1C) PE </i>
//    <check> 
//      <loc> ( (unsigned int) USART4_ISR ) </loc>
//      <o.0..0> PE
//    </check>
//  </item>
//  


// -------------------------------  Register RTree: USART4_ISR  -----------------------------------
// SVD Line: 12816

//  <rtree> SFDITEM_REG__USART4_ISR
//    <name> ISR </name>
//    <r> 
//    <i> [Bits 31..0] RO (@ 0x40004C1C) Interrupt & status  register </i>
//    <loc> ( (unsigned int)((USART4_ISR >> 0) & 0xFFFFFFFF) ) </loc>
//    <item> SFDITEM_FIELD__USART4_ISR_TXFT </item>
//    <item> SFDITEM_FIELD__USART4_ISR_RXFT </item>
//    <item> SFDITEM_FIELD__USART4_ISR_TCBGT </item>
//    <item> SFDITEM_FIELD__USART4_ISR_RXFF </item>
//    <item> SFDITEM_FIELD__USART4_ISR_TXFE </item>
//    <item> SFDITEM_FIELD__USART4_ISR_REACK </item>
//    <item> SFDITEM_FIELD__USART4_ISR_TEACK </item>
//    <item> SFDITEM_FIELD__USART4_ISR_WUF </item>
//    <item> SFDITEM_FIELD__USART4_ISR_RWU </item>
//    <item> SFDITEM_FIELD__USART4_ISR_SBKF </item>
//    <item> SFDITEM_FIELD__USART4_ISR_CMF </item>
//    <item> SFDITEM_FIELD__USART4_ISR_BUSY </item>
//    <item> SFDITEM_FIELD__USART4_ISR_ABRF </item>
//    <item> SFDITEM_FIELD__USART4_ISR_ABRE </item>
//    <item> SFDITEM_FIELD__USART4_ISR_UDR </item>
//    <item> SFDITEM_FIELD__USART4_ISR_EOBF </item>
//    <item> SFDITEM_FIELD__USART4_ISR_RTOF </item>
//    <item> SFDITEM_FIELD__USART4_ISR_CTS </item>
//    <item> SFDITEM_FIELD__USART4_ISR_CTSIF </item>
//    <item> SFDITEM_FIELD__USART4_ISR_LBDF </item>
//    <item> SFDITEM_FIELD__USART4_ISR_TXE </item>
//    <item> SFDITEM_FIELD__USART4_ISR_TC </item>
//    <item> SFDITEM_FIELD__USART4_ISR_RXNE </item>
//    <item> SFDITEM_FIELD__USART4_ISR_IDLE </item>
//    <item> SFDITEM_FIELD__USART4_ISR_ORE </item>
//    <item> SFDITEM_FIELD__USART4_ISR_NF </item>
//    <item> SFDITEM_FIELD__USART4_ISR_FE </item>
//    <item> SFDITEM_FIELD__USART4_ISR_PE </item>
//  </rtree>
//  


// ----------------------------  Register Item Address: USART4_ICR  -------------------------------
// SVD Line: 12998

unsigned int USART4_ICR __AT (0x40004C20);



// -------------------------------  Field Item: USART4_ICR_WUCF  ----------------------------------
// SVD Line: 13007

//  <item> SFDITEM_FIELD__USART4_ICR_WUCF
//    <name> WUCF </name>
//    <w> 
//    <i> [Bit 20] WO (@ 0x40004C20) Wakeup from Stop mode clear  flag </i>
//    <check> 
//      <loc> ( (unsigned int) USART4_ICR ) </loc>
//      <o.20..20> WUCF
//    </check>
//  </item>
//  


// -------------------------------  Field Item: USART4_ICR_CMCF  ----------------------------------
// SVD Line: 13014

//  <item> SFDITEM_FIELD__USART4_ICR_CMCF
//    <name> CMCF </name>
//    <w> 
//    <i> [Bit 17] WO (@ 0x40004C20) Character match clear flag </i>
//    <check> 
//      <loc> ( (unsigned int) USART4_ICR ) </loc>
//      <o.17..17> CMCF
//    </check>
//  </item>
//  


// ------------------------------  Field Item: USART4_ICR_UDRCF  ----------------------------------
// SVD Line: 13020

//  <item> SFDITEM_FIELD__USART4_ICR_UDRCF
//    <name> UDRCF </name>
//    <w> 
//    <i> [Bit 13] WO (@ 0x40004C20) SPI slave underrun clear  flag </i>
//    <check> 
//      <loc> ( (unsigned int) USART4_ICR ) </loc>
//      <o.13..13> UDRCF
//    </check>
//  </item>
//  


// ------------------------------  Field Item: USART4_ICR_EOBCF  ----------------------------------
// SVD Line: 13027

//  <item> SFDITEM_FIELD__USART4_ICR_EOBCF
//    <name> EOBCF </name>
//    <w> 
//    <i> [Bit 12] WO (@ 0x40004C20) End of block clear flag </i>
//    <check> 
//      <loc> ( (unsigned int) USART4_ICR ) </loc>
//      <o.12..12> EOBCF
//    </check>
//  </item>
//  


// ------------------------------  Field Item: USART4_ICR_RTOCF  ----------------------------------
// SVD Line: 13033

//  <item> SFDITEM_FIELD__USART4_ICR_RTOCF
//    <name> RTOCF </name>
//    <w> 
//    <i> [Bit 11] WO (@ 0x40004C20) Receiver timeout clear  flag </i>
//    <check> 
//      <loc> ( (unsigned int) USART4_ICR ) </loc>
//      <o.11..11> RTOCF
//    </check>
//  </item>
//  


// ------------------------------  Field Item: USART4_ICR_CTSCF  ----------------------------------
// SVD Line: 13040

//  <item> SFDITEM_FIELD__USART4_ICR_CTSCF
//    <name> CTSCF </name>
//    <w> 
//    <i> [Bit 9] WO (@ 0x40004C20) CTS clear flag </i>
//    <check> 
//      <loc> ( (unsigned int) USART4_ICR ) </loc>
//      <o.9..9> CTSCF
//    </check>
//  </item>
//  


// ------------------------------  Field Item: USART4_ICR_LBDCF  ----------------------------------
// SVD Line: 13046

//  <item> SFDITEM_FIELD__USART4_ICR_LBDCF
//    <name> LBDCF </name>
//    <w> 
//    <i> [Bit 8] WO (@ 0x40004C20) LIN break detection clear  flag </i>
//    <check> 
//      <loc> ( (unsigned int) USART4_ICR ) </loc>
//      <o.8..8> LBDCF
//    </check>
//  </item>
//  


// -----------------------------  Field Item: USART4_ICR_TCBGTCF  ---------------------------------
// SVD Line: 13053

//  <item> SFDITEM_FIELD__USART4_ICR_TCBGTCF
//    <name> TCBGTCF </name>
//    <w> 
//    <i> [Bit 7] WO (@ 0x40004C20) Transmission complete before Guard time  clear flag </i>
//    <check> 
//      <loc> ( (unsigned int) USART4_ICR ) </loc>
//      <o.7..7> TCBGTCF
//    </check>
//  </item>
//  


// -------------------------------  Field Item: USART4_ICR_TCCF  ----------------------------------
// SVD Line: 13060

//  <item> SFDITEM_FIELD__USART4_ICR_TCCF
//    <name> TCCF </name>
//    <w> 
//    <i> [Bit 6] WO (@ 0x40004C20) Transmission complete clear  flag </i>
//    <check> 
//      <loc> ( (unsigned int) USART4_ICR ) </loc>
//      <o.6..6> TCCF
//    </check>
//  </item>
//  


// ------------------------------  Field Item: USART4_ICR_TXFECF  ---------------------------------
// SVD Line: 13067

//  <item> SFDITEM_FIELD__USART4_ICR_TXFECF
//    <name> TXFECF </name>
//    <w> 
//    <i> [Bit 5] WO (@ 0x40004C20) TXFIFO empty clear flag </i>
//    <check> 
//      <loc> ( (unsigned int) USART4_ICR ) </loc>
//      <o.5..5> TXFECF
//    </check>
//  </item>
//  


// ------------------------------  Field Item: USART4_ICR_IDLECF  ---------------------------------
// SVD Line: 13073

//  <item> SFDITEM_FIELD__USART4_ICR_IDLECF
//    <name> IDLECF </name>
//    <w> 
//    <i> [Bit 4] WO (@ 0x40004C20) Idle line detected clear  flag </i>
//    <check> 
//      <loc> ( (unsigned int) USART4_ICR ) </loc>
//      <o.4..4> IDLECF
//    </check>
//  </item>
//  


// ------------------------------  Field Item: USART4_ICR_ORECF  ----------------------------------
// SVD Line: 13080

//  <item> SFDITEM_FIELD__USART4_ICR_ORECF
//    <name> ORECF </name>
//    <w> 
//    <i> [Bit 3] WO (@ 0x40004C20) Overrun error clear flag </i>
//    <check> 
//      <loc> ( (unsigned int) USART4_ICR ) </loc>
//      <o.3..3> ORECF
//    </check>
//  </item>
//  


// -------------------------------  Field Item: USART4_ICR_NCF  -----------------------------------
// SVD Line: 13086

//  <item> SFDITEM_FIELD__USART4_ICR_NCF
//    <name> NCF </name>
//    <w> 
//    <i> [Bit 2] WO (@ 0x40004C20) Noise detected clear flag </i>
//    <check> 
//      <loc> ( (unsigned int) USART4_ICR ) </loc>
//      <o.2..2> NCF
//    </check>
//  </item>
//  


// -------------------------------  Field Item: USART4_ICR_FECF  ----------------------------------
// SVD Line: 13092

//  <item> SFDITEM_FIELD__USART4_ICR_FECF
//    <name> FECF </name>
//    <w> 
//    <i> [Bit 1] WO (@ 0x40004C20) Framing error clear flag </i>
//    <check> 
//      <loc> ( (unsigned int) USART4_ICR ) </loc>
//      <o.1..1> FECF
//    </check>
//  </item>
//  


// -------------------------------  Field Item: USART4_ICR_PECF  ----------------------------------
// SVD Line: 13098

//  <item> SFDITEM_FIELD__USART4_ICR_PECF
//    <name> PECF </name>
//    <w> 
//    <i> [Bit 0] WO (@ 0x40004C20) Parity error clear flag </i>
//    <check> 
//      <loc> ( (unsigned int) USART4_ICR ) </loc>
//      <o.0..0> PECF
//    </check>
//  </item>
//  


// -------------------------------  Register RTree: USART4_ICR  -----------------------------------
// SVD Line: 12998

//  <rtree> SFDITEM_REG__USART4_ICR
//    <name> ICR </name>
//    <w> 
//    <i> [Bits 31..0] WO (@ 0x40004C20) Interrupt flag clear register </i>
//    <loc> ( (unsigned int)((USART4_ICR >> 0) & 0xFFFFFFFF), ((USART4_ICR = (USART4_ICR & ~(0x123BFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0x123BFF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__USART4_ICR_WUCF </item>
//    <item> SFDITEM_FIELD__USART4_ICR_CMCF </item>
//    <item> SFDITEM_FIELD__USART4_ICR_UDRCF </item>
//    <item> SFDITEM_FIELD__USART4_ICR_EOBCF </item>
//    <item> SFDITEM_FIELD__USART4_ICR_RTOCF </item>
//    <item> SFDITEM_FIELD__USART4_ICR_CTSCF </item>
//    <item> SFDITEM_FIELD__USART4_ICR_LBDCF </item>
//    <item> SFDITEM_FIELD__USART4_ICR_TCBGTCF </item>
//    <item> SFDITEM_FIELD__USART4_ICR_TCCF </item>
//    <item> SFDITEM_FIELD__USART4_ICR_TXFECF </item>
//    <item> SFDITEM_FIELD__USART4_ICR_IDLECF </item>
//    <item> SFDITEM_FIELD__USART4_ICR_ORECF </item>
//    <item> SFDITEM_FIELD__USART4_ICR_NCF </item>
//    <item> SFDITEM_FIELD__USART4_ICR_FECF </item>
//    <item> SFDITEM_FIELD__USART4_ICR_PECF </item>
//  </rtree>
//  


// ----------------------------  Register Item Address: USART4_RDR  -------------------------------
// SVD Line: 13106

unsigned int USART4_RDR __AT (0x40004C24);



// -------------------------------  Field Item: USART4_RDR_RDR  -----------------------------------
// SVD Line: 13115

//  <item> SFDITEM_FIELD__USART4_RDR_RDR
//    <name> RDR </name>
//    <r> 
//    <i> [Bits 8..0] RO (@ 0x40004C24) Receive data value </i>
//    <edit> 
//      <loc> ( (unsigned short)((USART4_RDR >> 0) & 0x1FF) ) </loc>
//    </edit>
//  </item>
//  


// -------------------------------  Register RTree: USART4_RDR  -----------------------------------
// SVD Line: 13106

//  <rtree> SFDITEM_REG__USART4_RDR
//    <name> RDR </name>
//    <r> 
//    <i> [Bits 31..0] RO (@ 0x40004C24) Receive data register </i>
//    <loc> ( (unsigned int)((USART4_RDR >> 0) & 0xFFFFFFFF) ) </loc>
//    <item> SFDITEM_FIELD__USART4_RDR_RDR </item>
//  </rtree>
//  


// ----------------------------  Register Item Address: USART4_TDR  -------------------------------
// SVD Line: 13123

unsigned int USART4_TDR __AT (0x40004C28);



// -------------------------------  Field Item: USART4_TDR_TDR  -----------------------------------
// SVD Line: 13132

//  <item> SFDITEM_FIELD__USART4_TDR_TDR
//    <name> TDR </name>
//    <rw> 
//    <i> [Bits 8..0] RW (@ 0x40004C28) Transmit data value </i>
//    <edit> 
//      <loc> ( (unsigned short)((USART4_TDR >> 0) & 0x1FF), ((USART4_TDR = (USART4_TDR & ~(0x1FFUL << 0 )) | ((unsigned long)(Gui_u16:GuiVal & 0x1FF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -------------------------------  Register RTree: USART4_TDR  -----------------------------------
// SVD Line: 13123

//  <rtree> SFDITEM_REG__USART4_TDR
//    <name> TDR </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x40004C28) Transmit data register </i>
//    <loc> ( (unsigned int)((USART4_TDR >> 0) & 0xFFFFFFFF), ((USART4_TDR = (USART4_TDR & ~(0x1FFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0x1FF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__USART4_TDR_TDR </item>
//  </rtree>
//  


// ---------------------------  Register Item Address: USART4_PRESC  ------------------------------
// SVD Line: 13140

unsigned int USART4_PRESC __AT (0x40004C2C);



// ---------------------------  Field Item: USART4_PRESC_PRESCALER  -------------------------------
// SVD Line: 13149

//  <item> SFDITEM_FIELD__USART4_PRESC_PRESCALER
//    <name> PRESCALER </name>
//    <rw> 
//    <i> [Bits 3..0] RW (@ 0x40004C2C) Clock prescaler </i>
//    <edit> 
//      <loc> ( (unsigned char)((USART4_PRESC >> 0) & 0xF), ((USART4_PRESC = (USART4_PRESC & ~(0xFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ------------------------------  Register RTree: USART4_PRESC  ----------------------------------
// SVD Line: 13140

//  <rtree> SFDITEM_REG__USART4_PRESC
//    <name> PRESC </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x40004C2C) Prescaler register </i>
//    <loc> ( (unsigned int)((USART4_PRESC >> 0) & 0xFFFFFFFF), ((USART4_PRESC = (USART4_PRESC & ~(0xFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__USART4_PRESC_PRESCALER </item>
//  </rtree>
//  


// ---------------------------------  Peripheral View: USART4  ------------------------------------
// SVD Line: 13177

//  <view> USART4
//    <name> USART4 </name>
//    <item> SFDITEM_REG__USART4_CR1 </item>
//    <item> SFDITEM_REG__USART4_CR2 </item>
//    <item> SFDITEM_REG__USART4_CR3 </item>
//    <item> SFDITEM_REG__USART4_BRR </item>
//    <item> SFDITEM_REG__USART4_GTPR </item>
//    <item> SFDITEM_REG__USART4_RTOR </item>
//    <item> SFDITEM_REG__USART4_RQR </item>
//    <item> SFDITEM_REG__USART4_ISR </item>
//    <item> SFDITEM_REG__USART4_ICR </item>
//    <item> SFDITEM_REG__USART4_RDR </item>
//    <item> SFDITEM_REG__USART4_TDR </item>
//    <item> SFDITEM_REG__USART4_PRESC </item>
//  </view>
//  


// -----------------------------  Register Item Address: SPI1_CR1  --------------------------------
// SVD Line: 13198

unsigned int SPI1_CR1 __AT (0x40013000);



// ------------------------------  Field Item: SPI1_CR1_BIDIMODE  ---------------------------------
// SVD Line: 13207

//  <item> SFDITEM_FIELD__SPI1_CR1_BIDIMODE
//    <name> BIDIMODE </name>
//    <rw> 
//    <i> [Bit 15] RW (@ 0x40013000) Bidirectional data mode  enable </i>
//    <check> 
//      <loc> ( (unsigned int) SPI1_CR1 ) </loc>
//      <o.15..15> BIDIMODE
//    </check>
//  </item>
//  


// -------------------------------  Field Item: SPI1_CR1_BIDIOE  ----------------------------------
// SVD Line: 13214

//  <item> SFDITEM_FIELD__SPI1_CR1_BIDIOE
//    <name> BIDIOE </name>
//    <rw> 
//    <i> [Bit 14] RW (@ 0x40013000) Output enable in bidirectional  mode </i>
//    <check> 
//      <loc> ( (unsigned int) SPI1_CR1 ) </loc>
//      <o.14..14> BIDIOE
//    </check>
//  </item>
//  


// -------------------------------  Field Item: SPI1_CR1_CRCEN  -----------------------------------
// SVD Line: 13221

//  <item> SFDITEM_FIELD__SPI1_CR1_CRCEN
//    <name> CRCEN </name>
//    <rw> 
//    <i> [Bit 13] RW (@ 0x40013000) Hardware CRC calculation  enable </i>
//    <check> 
//      <loc> ( (unsigned int) SPI1_CR1 ) </loc>
//      <o.13..13> CRCEN
//    </check>
//  </item>
//  


// ------------------------------  Field Item: SPI1_CR1_CRCNEXT  ----------------------------------
// SVD Line: 13228

//  <item> SFDITEM_FIELD__SPI1_CR1_CRCNEXT
//    <name> CRCNEXT </name>
//    <rw> 
//    <i> [Bit 12] RW (@ 0x40013000) CRC transfer next </i>
//    <check> 
//      <loc> ( (unsigned int) SPI1_CR1 ) </loc>
//      <o.12..12> CRCNEXT
//    </check>
//  </item>
//  


// --------------------------------  Field Item: SPI1_CR1_DFF  ------------------------------------
// SVD Line: 13234

//  <item> SFDITEM_FIELD__SPI1_CR1_DFF
//    <name> DFF </name>
//    <rw> 
//    <i> [Bit 11] RW (@ 0x40013000) Data frame format </i>
//    <check> 
//      <loc> ( (unsigned int) SPI1_CR1 ) </loc>
//      <o.11..11> DFF
//    </check>
//  </item>
//  


// -------------------------------  Field Item: SPI1_CR1_RXONLY  ----------------------------------
// SVD Line: 13240

//  <item> SFDITEM_FIELD__SPI1_CR1_RXONLY
//    <name> RXONLY </name>
//    <rw> 
//    <i> [Bit 10] RW (@ 0x40013000) Receive only </i>
//    <check> 
//      <loc> ( (unsigned int) SPI1_CR1 ) </loc>
//      <o.10..10> RXONLY
//    </check>
//  </item>
//  


// --------------------------------  Field Item: SPI1_CR1_SSM  ------------------------------------
// SVD Line: 13246

//  <item> SFDITEM_FIELD__SPI1_CR1_SSM
//    <name> SSM </name>
//    <rw> 
//    <i> [Bit 9] RW (@ 0x40013000) Software slave management </i>
//    <check> 
//      <loc> ( (unsigned int) SPI1_CR1 ) </loc>
//      <o.9..9> SSM
//    </check>
//  </item>
//  


// --------------------------------  Field Item: SPI1_CR1_SSI  ------------------------------------
// SVD Line: 13252

//  <item> SFDITEM_FIELD__SPI1_CR1_SSI
//    <name> SSI </name>
//    <rw> 
//    <i> [Bit 8] RW (@ 0x40013000) Internal slave select </i>
//    <check> 
//      <loc> ( (unsigned int) SPI1_CR1 ) </loc>
//      <o.8..8> SSI
//    </check>
//  </item>
//  


// ------------------------------  Field Item: SPI1_CR1_LSBFIRST  ---------------------------------
// SVD Line: 13258

//  <item> SFDITEM_FIELD__SPI1_CR1_LSBFIRST
//    <name> LSBFIRST </name>
//    <rw> 
//    <i> [Bit 7] RW (@ 0x40013000) Frame format </i>
//    <check> 
//      <loc> ( (unsigned int) SPI1_CR1 ) </loc>
//      <o.7..7> LSBFIRST
//    </check>
//  </item>
//  


// --------------------------------  Field Item: SPI1_CR1_SPE  ------------------------------------
// SVD Line: 13264

//  <item> SFDITEM_FIELD__SPI1_CR1_SPE
//    <name> SPE </name>
//    <rw> 
//    <i> [Bit 6] RW (@ 0x40013000) SPI enable </i>
//    <check> 
//      <loc> ( (unsigned int) SPI1_CR1 ) </loc>
//      <o.6..6> SPE
//    </check>
//  </item>
//  


// ---------------------------------  Field Item: SPI1_CR1_BR  ------------------------------------
// SVD Line: 13270

//  <item> SFDITEM_FIELD__SPI1_CR1_BR
//    <name> BR </name>
//    <rw> 
//    <i> [Bits 5..3] RW (@ 0x40013000) Baud rate control </i>
//    <edit> 
//      <loc> ( (unsigned char)((SPI1_CR1 >> 3) & 0x7), ((SPI1_CR1 = (SPI1_CR1 & ~(0x7UL << 3 )) | ((unsigned long)(Gui_u8:GuiVal & 0x7) << 3 ) ) )) </loc>
//    </edit>
//  </item>
//  


// --------------------------------  Field Item: SPI1_CR1_MSTR  -----------------------------------
// SVD Line: 13276

//  <item> SFDITEM_FIELD__SPI1_CR1_MSTR
//    <name> MSTR </name>
//    <rw> 
//    <i> [Bit 2] RW (@ 0x40013000) Master selection </i>
//    <check> 
//      <loc> ( (unsigned int) SPI1_CR1 ) </loc>
//      <o.2..2> MSTR
//    </check>
//  </item>
//  


// --------------------------------  Field Item: SPI1_CR1_CPOL  -----------------------------------
// SVD Line: 13282

//  <item> SFDITEM_FIELD__SPI1_CR1_CPOL
//    <name> CPOL </name>
//    <rw> 
//    <i> [Bit 1] RW (@ 0x40013000) Clock polarity </i>
//    <check> 
//      <loc> ( (unsigned int) SPI1_CR1 ) </loc>
//      <o.1..1> CPOL
//    </check>
//  </item>
//  


// --------------------------------  Field Item: SPI1_CR1_CPHA  -----------------------------------
// SVD Line: 13288

//  <item> SFDITEM_FIELD__SPI1_CR1_CPHA
//    <name> CPHA </name>
//    <rw> 
//    <i> [Bit 0] RW (@ 0x40013000) Clock phase </i>
//    <check> 
//      <loc> ( (unsigned int) SPI1_CR1 ) </loc>
//      <o.0..0> CPHA
//    </check>
//  </item>
//  


// --------------------------------  Register RTree: SPI1_CR1  ------------------------------------
// SVD Line: 13198

//  <rtree> SFDITEM_REG__SPI1_CR1
//    <name> CR1 </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x40013000) control register 1 </i>
//    <loc> ( (unsigned int)((SPI1_CR1 >> 0) & 0xFFFFFFFF), ((SPI1_CR1 = (SPI1_CR1 & ~(0xFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__SPI1_CR1_BIDIMODE </item>
//    <item> SFDITEM_FIELD__SPI1_CR1_BIDIOE </item>
//    <item> SFDITEM_FIELD__SPI1_CR1_CRCEN </item>
//    <item> SFDITEM_FIELD__SPI1_CR1_CRCNEXT </item>
//    <item> SFDITEM_FIELD__SPI1_CR1_DFF </item>
//    <item> SFDITEM_FIELD__SPI1_CR1_RXONLY </item>
//    <item> SFDITEM_FIELD__SPI1_CR1_SSM </item>
//    <item> SFDITEM_FIELD__SPI1_CR1_SSI </item>
//    <item> SFDITEM_FIELD__SPI1_CR1_LSBFIRST </item>
//    <item> SFDITEM_FIELD__SPI1_CR1_SPE </item>
//    <item> SFDITEM_FIELD__SPI1_CR1_BR </item>
//    <item> SFDITEM_FIELD__SPI1_CR1_MSTR </item>
//    <item> SFDITEM_FIELD__SPI1_CR1_CPOL </item>
//    <item> SFDITEM_FIELD__SPI1_CR1_CPHA </item>
//  </rtree>
//  


// -----------------------------  Register Item Address: SPI1_CR2  --------------------------------
// SVD Line: 13296

unsigned int SPI1_CR2 __AT (0x40013004);



// ------------------------------  Field Item: SPI1_CR2_RXDMAEN  ----------------------------------
// SVD Line: 13305

//  <item> SFDITEM_FIELD__SPI1_CR2_RXDMAEN
//    <name> RXDMAEN </name>
//    <rw> 
//    <i> [Bit 0] RW (@ 0x40013004) Rx buffer DMA enable </i>
//    <check> 
//      <loc> ( (unsigned int) SPI1_CR2 ) </loc>
//      <o.0..0> RXDMAEN
//    </check>
//  </item>
//  


// ------------------------------  Field Item: SPI1_CR2_TXDMAEN  ----------------------------------
// SVD Line: 13311

//  <item> SFDITEM_FIELD__SPI1_CR2_TXDMAEN
//    <name> TXDMAEN </name>
//    <rw> 
//    <i> [Bit 1] RW (@ 0x40013004) Tx buffer DMA enable </i>
//    <check> 
//      <loc> ( (unsigned int) SPI1_CR2 ) </loc>
//      <o.1..1> TXDMAEN
//    </check>
//  </item>
//  


// --------------------------------  Field Item: SPI1_CR2_SSOE  -----------------------------------
// SVD Line: 13317

//  <item> SFDITEM_FIELD__SPI1_CR2_SSOE
//    <name> SSOE </name>
//    <rw> 
//    <i> [Bit 2] RW (@ 0x40013004) SS output enable </i>
//    <check> 
//      <loc> ( (unsigned int) SPI1_CR2 ) </loc>
//      <o.2..2> SSOE
//    </check>
//  </item>
//  


// --------------------------------  Field Item: SPI1_CR2_NSSP  -----------------------------------
// SVD Line: 13323

//  <item> SFDITEM_FIELD__SPI1_CR2_NSSP
//    <name> NSSP </name>
//    <rw> 
//    <i> [Bit 3] RW (@ 0x40013004) NSS pulse management </i>
//    <check> 
//      <loc> ( (unsigned int) SPI1_CR2 ) </loc>
//      <o.3..3> NSSP
//    </check>
//  </item>
//  


// --------------------------------  Field Item: SPI1_CR2_FRF  ------------------------------------
// SVD Line: 13329

//  <item> SFDITEM_FIELD__SPI1_CR2_FRF
//    <name> FRF </name>
//    <rw> 
//    <i> [Bit 4] RW (@ 0x40013004) Frame format </i>
//    <check> 
//      <loc> ( (unsigned int) SPI1_CR2 ) </loc>
//      <o.4..4> FRF
//    </check>
//  </item>
//  


// -------------------------------  Field Item: SPI1_CR2_ERRIE  -----------------------------------
// SVD Line: 13335

//  <item> SFDITEM_FIELD__SPI1_CR2_ERRIE
//    <name> ERRIE </name>
//    <rw> 
//    <i> [Bit 5] RW (@ 0x40013004) Error interrupt enable </i>
//    <check> 
//      <loc> ( (unsigned int) SPI1_CR2 ) </loc>
//      <o.5..5> ERRIE
//    </check>
//  </item>
//  


// -------------------------------  Field Item: SPI1_CR2_RXNEIE  ----------------------------------
// SVD Line: 13341

//  <item> SFDITEM_FIELD__SPI1_CR2_RXNEIE
//    <name> RXNEIE </name>
//    <rw> 
//    <i> [Bit 6] RW (@ 0x40013004) RX buffer not empty interrupt  enable </i>
//    <check> 
//      <loc> ( (unsigned int) SPI1_CR2 ) </loc>
//      <o.6..6> RXNEIE
//    </check>
//  </item>
//  


// -------------------------------  Field Item: SPI1_CR2_TXEIE  -----------------------------------
// SVD Line: 13348

//  <item> SFDITEM_FIELD__SPI1_CR2_TXEIE
//    <name> TXEIE </name>
//    <rw> 
//    <i> [Bit 7] RW (@ 0x40013004) Tx buffer empty interrupt  enable </i>
//    <check> 
//      <loc> ( (unsigned int) SPI1_CR2 ) </loc>
//      <o.7..7> TXEIE
//    </check>
//  </item>
//  


// ---------------------------------  Field Item: SPI1_CR2_DS  ------------------------------------
// SVD Line: 13355

//  <item> SFDITEM_FIELD__SPI1_CR2_DS
//    <name> DS </name>
//    <rw> 
//    <i> [Bits 11..8] RW (@ 0x40013004) Data size </i>
//    <edit> 
//      <loc> ( (unsigned char)((SPI1_CR2 >> 8) & 0xF), ((SPI1_CR2 = (SPI1_CR2 & ~(0xFUL << 8 )) | ((unsigned long)(Gui_u8:GuiVal & 0xF) << 8 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -------------------------------  Field Item: SPI1_CR2_FRXTH  -----------------------------------
// SVD Line: 13361

//  <item> SFDITEM_FIELD__SPI1_CR2_FRXTH
//    <name> FRXTH </name>
//    <rw> 
//    <i> [Bit 12] RW (@ 0x40013004) FIFO reception threshold </i>
//    <check> 
//      <loc> ( (unsigned int) SPI1_CR2 ) </loc>
//      <o.12..12> FRXTH
//    </check>
//  </item>
//  


// ------------------------------  Field Item: SPI1_CR2_LDMA_RX  ----------------------------------
// SVD Line: 13367

//  <item> SFDITEM_FIELD__SPI1_CR2_LDMA_RX
//    <name> LDMA_RX </name>
//    <rw> 
//    <i> [Bit 13] RW (@ 0x40013004) Last DMA transfer for  reception </i>
//    <check> 
//      <loc> ( (unsigned int) SPI1_CR2 ) </loc>
//      <o.13..13> LDMA_RX
//    </check>
//  </item>
//  


// ------------------------------  Field Item: SPI1_CR2_LDMA_TX  ----------------------------------
// SVD Line: 13374

//  <item> SFDITEM_FIELD__SPI1_CR2_LDMA_TX
//    <name> LDMA_TX </name>
//    <rw> 
//    <i> [Bit 14] RW (@ 0x40013004) Last DMA transfer for  transmission </i>
//    <check> 
//      <loc> ( (unsigned int) SPI1_CR2 ) </loc>
//      <o.14..14> LDMA_TX
//    </check>
//  </item>
//  


// --------------------------------  Register RTree: SPI1_CR2  ------------------------------------
// SVD Line: 13296

//  <rtree> SFDITEM_REG__SPI1_CR2
//    <name> CR2 </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x40013004) control register 2 </i>
//    <loc> ( (unsigned int)((SPI1_CR2 >> 0) & 0xFFFFFFFF), ((SPI1_CR2 = (SPI1_CR2 & ~(0x7FFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0x7FFF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__SPI1_CR2_RXDMAEN </item>
//    <item> SFDITEM_FIELD__SPI1_CR2_TXDMAEN </item>
//    <item> SFDITEM_FIELD__SPI1_CR2_SSOE </item>
//    <item> SFDITEM_FIELD__SPI1_CR2_NSSP </item>
//    <item> SFDITEM_FIELD__SPI1_CR2_FRF </item>
//    <item> SFDITEM_FIELD__SPI1_CR2_ERRIE </item>
//    <item> SFDITEM_FIELD__SPI1_CR2_RXNEIE </item>
//    <item> SFDITEM_FIELD__SPI1_CR2_TXEIE </item>
//    <item> SFDITEM_FIELD__SPI1_CR2_DS </item>
//    <item> SFDITEM_FIELD__SPI1_CR2_FRXTH </item>
//    <item> SFDITEM_FIELD__SPI1_CR2_LDMA_RX </item>
//    <item> SFDITEM_FIELD__SPI1_CR2_LDMA_TX </item>
//  </rtree>
//  


// -----------------------------  Register Item Address: SPI1_SR  ---------------------------------
// SVD Line: 13383

unsigned int SPI1_SR __AT (0x40013008);



// --------------------------------  Field Item: SPI1_SR_RXNE  ------------------------------------
// SVD Line: 13391

//  <item> SFDITEM_FIELD__SPI1_SR_RXNE
//    <name> RXNE </name>
//    <r> 
//    <i> [Bit 0] RO (@ 0x40013008) Receive buffer not empty </i>
//    <check> 
//      <loc> ( (unsigned int) SPI1_SR ) </loc>
//      <o.0..0> RXNE
//    </check>
//  </item>
//  


// ---------------------------------  Field Item: SPI1_SR_TXE  ------------------------------------
// SVD Line: 13398

//  <item> SFDITEM_FIELD__SPI1_SR_TXE
//    <name> TXE </name>
//    <r> 
//    <i> [Bit 1] RO (@ 0x40013008) Transmit buffer empty </i>
//    <check> 
//      <loc> ( (unsigned int) SPI1_SR ) </loc>
//      <o.1..1> TXE
//    </check>
//  </item>
//  


// -------------------------------  Field Item: SPI1_SR_CHSIDE  -----------------------------------
// SVD Line: 13405

//  <item> SFDITEM_FIELD__SPI1_SR_CHSIDE
//    <name> CHSIDE </name>
//    <r> 
//    <i> [Bit 2] RO (@ 0x40013008) Channel side </i>
//    <check> 
//      <loc> ( (unsigned int) SPI1_SR ) </loc>
//      <o.2..2> CHSIDE
//    </check>
//  </item>
//  


// ---------------------------------  Field Item: SPI1_SR_UDR  ------------------------------------
// SVD Line: 13412

//  <item> SFDITEM_FIELD__SPI1_SR_UDR
//    <name> UDR </name>
//    <r> 
//    <i> [Bit 3] RO (@ 0x40013008) Underrun flag </i>
//    <check> 
//      <loc> ( (unsigned int) SPI1_SR ) </loc>
//      <o.3..3> UDR
//    </check>
//  </item>
//  


// -------------------------------  Field Item: SPI1_SR_CRCERR  -----------------------------------
// SVD Line: 13419

//  <item> SFDITEM_FIELD__SPI1_SR_CRCERR
//    <name> CRCERR </name>
//    <rw> 
//    <i> [Bit 4] RW (@ 0x40013008) CRC error flag </i>
//    <check> 
//      <loc> ( (unsigned int) SPI1_SR ) </loc>
//      <o.4..4> CRCERR
//    </check>
//  </item>
//  


// --------------------------------  Field Item: SPI1_SR_MODF  ------------------------------------
// SVD Line: 13426

//  <item> SFDITEM_FIELD__SPI1_SR_MODF
//    <name> MODF </name>
//    <r> 
//    <i> [Bit 5] RO (@ 0x40013008) Mode fault </i>
//    <check> 
//      <loc> ( (unsigned int) SPI1_SR ) </loc>
//      <o.5..5> MODF
//    </check>
//  </item>
//  


// ---------------------------------  Field Item: SPI1_SR_OVR  ------------------------------------
// SVD Line: 13433

//  <item> SFDITEM_FIELD__SPI1_SR_OVR
//    <name> OVR </name>
//    <r> 
//    <i> [Bit 6] RO (@ 0x40013008) Overrun flag </i>
//    <check> 
//      <loc> ( (unsigned int) SPI1_SR ) </loc>
//      <o.6..6> OVR
//    </check>
//  </item>
//  


// ---------------------------------  Field Item: SPI1_SR_BSY  ------------------------------------
// SVD Line: 13440

//  <item> SFDITEM_FIELD__SPI1_SR_BSY
//    <name> BSY </name>
//    <r> 
//    <i> [Bit 7] RO (@ 0x40013008) Busy flag </i>
//    <check> 
//      <loc> ( (unsigned int) SPI1_SR ) </loc>
//      <o.7..7> BSY
//    </check>
//  </item>
//  


// -------------------------------  Field Item: SPI1_SR_TIFRFE  -----------------------------------
// SVD Line: 13447

//  <item> SFDITEM_FIELD__SPI1_SR_TIFRFE
//    <name> TIFRFE </name>
//    <r> 
//    <i> [Bit 8] RO (@ 0x40013008) TI frame format error </i>
//    <check> 
//      <loc> ( (unsigned int) SPI1_SR ) </loc>
//      <o.8..8> TIFRFE
//    </check>
//  </item>
//  


// --------------------------------  Field Item: SPI1_SR_FRLVL  -----------------------------------
// SVD Line: 13454

//  <item> SFDITEM_FIELD__SPI1_SR_FRLVL
//    <name> FRLVL </name>
//    <r> 
//    <i> [Bits 10..9] RO (@ 0x40013008) FIFO reception level </i>
//    <edit> 
//      <loc> ( (unsigned char)((SPI1_SR >> 9) & 0x3) ) </loc>
//    </edit>
//  </item>
//  


// --------------------------------  Field Item: SPI1_SR_FTLVL  -----------------------------------
// SVD Line: 13461

//  <item> SFDITEM_FIELD__SPI1_SR_FTLVL
//    <name> FTLVL </name>
//    <r> 
//    <i> [Bits 12..11] RO (@ 0x40013008) FIFO transmission level </i>
//    <edit> 
//      <loc> ( (unsigned char)((SPI1_SR >> 11) & 0x3) ) </loc>
//    </edit>
//  </item>
//  


// ---------------------------------  Register RTree: SPI1_SR  ------------------------------------
// SVD Line: 13383

//  <rtree> SFDITEM_REG__SPI1_SR
//    <name> SR </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x40013008) status register </i>
//    <loc> ( (unsigned int)((SPI1_SR >> 0) & 0xFFFFFFFF), ((SPI1_SR = (SPI1_SR & ~(0x10UL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0x10) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__SPI1_SR_RXNE </item>
//    <item> SFDITEM_FIELD__SPI1_SR_TXE </item>
//    <item> SFDITEM_FIELD__SPI1_SR_CHSIDE </item>
//    <item> SFDITEM_FIELD__SPI1_SR_UDR </item>
//    <item> SFDITEM_FIELD__SPI1_SR_CRCERR </item>
//    <item> SFDITEM_FIELD__SPI1_SR_MODF </item>
//    <item> SFDITEM_FIELD__SPI1_SR_OVR </item>
//    <item> SFDITEM_FIELD__SPI1_SR_BSY </item>
//    <item> SFDITEM_FIELD__SPI1_SR_TIFRFE </item>
//    <item> SFDITEM_FIELD__SPI1_SR_FRLVL </item>
//    <item> SFDITEM_FIELD__SPI1_SR_FTLVL </item>
//  </rtree>
//  


// -----------------------------  Register Item Address: SPI1_DR  ---------------------------------
// SVD Line: 13470

unsigned int SPI1_DR __AT (0x4001300C);



// ---------------------------------  Field Item: SPI1_DR_DR  -------------------------------------
// SVD Line: 13479

//  <item> SFDITEM_FIELD__SPI1_DR_DR
//    <name> DR </name>
//    <rw> 
//    <i> [Bits 15..0] RW (@ 0x4001300C) Data register </i>
//    <edit> 
//      <loc> ( (unsigned short)((SPI1_DR >> 0) & 0xFFFF), ((SPI1_DR = (SPI1_DR & ~(0xFFFFUL << 0 )) | ((unsigned long)(Gui_u16:GuiVal & 0xFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ---------------------------------  Register RTree: SPI1_DR  ------------------------------------
// SVD Line: 13470

//  <rtree> SFDITEM_REG__SPI1_DR
//    <name> DR </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x4001300C) data register </i>
//    <loc> ( (unsigned int)((SPI1_DR >> 0) & 0xFFFFFFFF), ((SPI1_DR = (SPI1_DR & ~(0xFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__SPI1_DR_DR </item>
//  </rtree>
//  


// ----------------------------  Register Item Address: SPI1_CRCPR  -------------------------------
// SVD Line: 13487

unsigned int SPI1_CRCPR __AT (0x40013010);



// -----------------------------  Field Item: SPI1_CRCPR_CRCPOLY  ---------------------------------
// SVD Line: 13496

//  <item> SFDITEM_FIELD__SPI1_CRCPR_CRCPOLY
//    <name> CRCPOLY </name>
//    <rw> 
//    <i> [Bits 15..0] RW (@ 0x40013010) CRC polynomial register </i>
//    <edit> 
//      <loc> ( (unsigned short)((SPI1_CRCPR >> 0) & 0xFFFF), ((SPI1_CRCPR = (SPI1_CRCPR & ~(0xFFFFUL << 0 )) | ((unsigned long)(Gui_u16:GuiVal & 0xFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -------------------------------  Register RTree: SPI1_CRCPR  -----------------------------------
// SVD Line: 13487

//  <rtree> SFDITEM_REG__SPI1_CRCPR
//    <name> CRCPR </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x40013010) CRC polynomial register </i>
//    <loc> ( (unsigned int)((SPI1_CRCPR >> 0) & 0xFFFFFFFF), ((SPI1_CRCPR = (SPI1_CRCPR & ~(0xFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__SPI1_CRCPR_CRCPOLY </item>
//  </rtree>
//  


// ---------------------------  Register Item Address: SPI1_RXCRCR  -------------------------------
// SVD Line: 13504

unsigned int SPI1_RXCRCR __AT (0x40013014);



// ------------------------------  Field Item: SPI1_RXCRCR_RxCRC  ---------------------------------
// SVD Line: 13513

//  <item> SFDITEM_FIELD__SPI1_RXCRCR_RxCRC
//    <name> RxCRC </name>
//    <r> 
//    <i> [Bits 15..0] RO (@ 0x40013014) Rx CRC register </i>
//    <edit> 
//      <loc> ( (unsigned short)((SPI1_RXCRCR >> 0) & 0xFFFF) ) </loc>
//    </edit>
//  </item>
//  


// -------------------------------  Register RTree: SPI1_RXCRCR  ----------------------------------
// SVD Line: 13504

//  <rtree> SFDITEM_REG__SPI1_RXCRCR
//    <name> RXCRCR </name>
//    <r> 
//    <i> [Bits 31..0] RO (@ 0x40013014) RX CRC register </i>
//    <loc> ( (unsigned int)((SPI1_RXCRCR >> 0) & 0xFFFFFFFF) ) </loc>
//    <item> SFDITEM_FIELD__SPI1_RXCRCR_RxCRC </item>
//  </rtree>
//  


// ---------------------------  Register Item Address: SPI1_TXCRCR  -------------------------------
// SVD Line: 13521

unsigned int SPI1_TXCRCR __AT (0x40013018);



// ------------------------------  Field Item: SPI1_TXCRCR_TxCRC  ---------------------------------
// SVD Line: 13530

//  <item> SFDITEM_FIELD__SPI1_TXCRCR_TxCRC
//    <name> TxCRC </name>
//    <r> 
//    <i> [Bits 15..0] RO (@ 0x40013018) Tx CRC register </i>
//    <edit> 
//      <loc> ( (unsigned short)((SPI1_TXCRCR >> 0) & 0xFFFF) ) </loc>
//    </edit>
//  </item>
//  


// -------------------------------  Register RTree: SPI1_TXCRCR  ----------------------------------
// SVD Line: 13521

//  <rtree> SFDITEM_REG__SPI1_TXCRCR
//    <name> TXCRCR </name>
//    <r> 
//    <i> [Bits 31..0] RO (@ 0x40013018) TX CRC register </i>
//    <loc> ( (unsigned int)((SPI1_TXCRCR >> 0) & 0xFFFFFFFF) ) </loc>
//    <item> SFDITEM_FIELD__SPI1_TXCRCR_TxCRC </item>
//  </rtree>
//  


// ---------------------------  Register Item Address: SPI1_I2SCFGR  ------------------------------
// SVD Line: 13538

unsigned int SPI1_I2SCFGR __AT (0x4001301C);



// -----------------------------  Field Item: SPI1_I2SCFGR_CHLEN  ---------------------------------
// SVD Line: 13547

//  <item> SFDITEM_FIELD__SPI1_I2SCFGR_CHLEN
//    <name> CHLEN </name>
//    <rw> 
//    <i> [Bit 0] RW (@ 0x4001301C) Channel length (number of bits per audio  channel) </i>
//    <check> 
//      <loc> ( (unsigned int) SPI1_I2SCFGR ) </loc>
//      <o.0..0> CHLEN
//    </check>
//  </item>
//  


// -----------------------------  Field Item: SPI1_I2SCFGR_DATLEN  --------------------------------
// SVD Line: 13554

//  <item> SFDITEM_FIELD__SPI1_I2SCFGR_DATLEN
//    <name> DATLEN </name>
//    <rw> 
//    <i> [Bits 2..1] RW (@ 0x4001301C) Data length to be  transferred </i>
//    <edit> 
//      <loc> ( (unsigned char)((SPI1_I2SCFGR >> 1) & 0x3), ((SPI1_I2SCFGR = (SPI1_I2SCFGR & ~(0x3UL << 1 )) | ((unsigned long)(Gui_u8:GuiVal & 0x3) << 1 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -----------------------------  Field Item: SPI1_I2SCFGR_CKPOL  ---------------------------------
// SVD Line: 13561

//  <item> SFDITEM_FIELD__SPI1_I2SCFGR_CKPOL
//    <name> CKPOL </name>
//    <rw> 
//    <i> [Bit 3] RW (@ 0x4001301C) Inactive state clock  polarity </i>
//    <check> 
//      <loc> ( (unsigned int) SPI1_I2SCFGR ) </loc>
//      <o.3..3> CKPOL
//    </check>
//  </item>
//  


// -----------------------------  Field Item: SPI1_I2SCFGR_I2SSTD  --------------------------------
// SVD Line: 13568

//  <item> SFDITEM_FIELD__SPI1_I2SCFGR_I2SSTD
//    <name> I2SSTD </name>
//    <rw> 
//    <i> [Bits 5..4] RW (@ 0x4001301C) standard selection </i>
//    <edit> 
//      <loc> ( (unsigned char)((SPI1_I2SCFGR >> 4) & 0x3), ((SPI1_I2SCFGR = (SPI1_I2SCFGR & ~(0x3UL << 4 )) | ((unsigned long)(Gui_u8:GuiVal & 0x3) << 4 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ----------------------------  Field Item: SPI1_I2SCFGR_PCMSYNC  --------------------------------
// SVD Line: 13574

//  <item> SFDITEM_FIELD__SPI1_I2SCFGR_PCMSYNC
//    <name> PCMSYNC </name>
//    <rw> 
//    <i> [Bit 7] RW (@ 0x4001301C) PCM frame synchronization </i>
//    <check> 
//      <loc> ( (unsigned int) SPI1_I2SCFGR ) </loc>
//      <o.7..7> PCMSYNC
//    </check>
//  </item>
//  


// -----------------------------  Field Item: SPI1_I2SCFGR_I2SCFG  --------------------------------
// SVD Line: 13580

//  <item> SFDITEM_FIELD__SPI1_I2SCFGR_I2SCFG
//    <name> I2SCFG </name>
//    <rw> 
//    <i> [Bits 9..8] RW (@ 0x4001301C) I2S configuration mode </i>
//    <edit> 
//      <loc> ( (unsigned char)((SPI1_I2SCFGR >> 8) & 0x3), ((SPI1_I2SCFGR = (SPI1_I2SCFGR & ~(0x3UL << 8 )) | ((unsigned long)(Gui_u8:GuiVal & 0x3) << 8 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ------------------------------  Field Item: SPI1_I2SCFGR_SE2  ----------------------------------
// SVD Line: 13586

//  <item> SFDITEM_FIELD__SPI1_I2SCFGR_SE2
//    <name> SE2 </name>
//    <rw> 
//    <i> [Bit 10] RW (@ 0x4001301C) I2S enable </i>
//    <check> 
//      <loc> ( (unsigned int) SPI1_I2SCFGR ) </loc>
//      <o.10..10> SE2
//    </check>
//  </item>
//  


// -----------------------------  Field Item: SPI1_I2SCFGR_I2SMOD  --------------------------------
// SVD Line: 13592

//  <item> SFDITEM_FIELD__SPI1_I2SCFGR_I2SMOD
//    <name> I2SMOD </name>
//    <rw> 
//    <i> [Bit 11] RW (@ 0x4001301C) I2S mode selection </i>
//    <check> 
//      <loc> ( (unsigned int) SPI1_I2SCFGR ) </loc>
//      <o.11..11> I2SMOD
//    </check>
//  </item>
//  


// ------------------------------  Register RTree: SPI1_I2SCFGR  ----------------------------------
// SVD Line: 13538

//  <rtree> SFDITEM_REG__SPI1_I2SCFGR
//    <name> I2SCFGR </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x4001301C) configuration register </i>
//    <loc> ( (unsigned int)((SPI1_I2SCFGR >> 0) & 0xFFFFFFFF), ((SPI1_I2SCFGR = (SPI1_I2SCFGR & ~(0xFBFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFBF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__SPI1_I2SCFGR_CHLEN </item>
//    <item> SFDITEM_FIELD__SPI1_I2SCFGR_DATLEN </item>
//    <item> SFDITEM_FIELD__SPI1_I2SCFGR_CKPOL </item>
//    <item> SFDITEM_FIELD__SPI1_I2SCFGR_I2SSTD </item>
//    <item> SFDITEM_FIELD__SPI1_I2SCFGR_PCMSYNC </item>
//    <item> SFDITEM_FIELD__SPI1_I2SCFGR_I2SCFG </item>
//    <item> SFDITEM_FIELD__SPI1_I2SCFGR_SE2 </item>
//    <item> SFDITEM_FIELD__SPI1_I2SCFGR_I2SMOD </item>
//  </rtree>
//  


// ----------------------------  Register Item Address: SPI1_I2SPR  -------------------------------
// SVD Line: 13600

unsigned int SPI1_I2SPR __AT (0x40013020);



// ------------------------------  Field Item: SPI1_I2SPR_I2SDIV  ---------------------------------
// SVD Line: 13609

//  <item> SFDITEM_FIELD__SPI1_I2SPR_I2SDIV
//    <name> I2SDIV </name>
//    <rw> 
//    <i> [Bits 7..0] RW (@ 0x40013020) linear prescaler </i>
//    <edit> 
//      <loc> ( (unsigned char)((SPI1_I2SPR >> 0) & 0xFF), ((SPI1_I2SPR = (SPI1_I2SPR & ~(0xFFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -------------------------------  Field Item: SPI1_I2SPR_ODD  -----------------------------------
// SVD Line: 13615

//  <item> SFDITEM_FIELD__SPI1_I2SPR_ODD
//    <name> ODD </name>
//    <rw> 
//    <i> [Bit 8] RW (@ 0x40013020) Odd factor for the  prescaler </i>
//    <check> 
//      <loc> ( (unsigned int) SPI1_I2SPR ) </loc>
//      <o.8..8> ODD
//    </check>
//  </item>
//  


// ------------------------------  Field Item: SPI1_I2SPR_MCKOE  ----------------------------------
// SVD Line: 13622

//  <item> SFDITEM_FIELD__SPI1_I2SPR_MCKOE
//    <name> MCKOE </name>
//    <rw> 
//    <i> [Bit 9] RW (@ 0x40013020) Master clock output enable </i>
//    <check> 
//      <loc> ( (unsigned int) SPI1_I2SPR ) </loc>
//      <o.9..9> MCKOE
//    </check>
//  </item>
//  


// -------------------------------  Register RTree: SPI1_I2SPR  -----------------------------------
// SVD Line: 13600

//  <rtree> SFDITEM_REG__SPI1_I2SPR
//    <name> I2SPR </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x40013020) prescaler register </i>
//    <loc> ( (unsigned int)((SPI1_I2SPR >> 0) & 0xFFFFFFFF), ((SPI1_I2SPR = (SPI1_I2SPR & ~(0x3FFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0x3FF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__SPI1_I2SPR_I2SDIV </item>
//    <item> SFDITEM_FIELD__SPI1_I2SPR_ODD </item>
//    <item> SFDITEM_FIELD__SPI1_I2SPR_MCKOE </item>
//  </rtree>
//  


// ---------------------------  Register Item Address: SPI1_HWCFGR  -------------------------------
// SVD Line: 13630

unsigned int SPI1_HWCFGR __AT (0x400133F0);



// -----------------------------  Field Item: SPI1_HWCFGR_CRCCFG  ---------------------------------
// SVD Line: 13640

//  <item> SFDITEM_FIELD__SPI1_HWCFGR_CRCCFG
//    <name> CRCCFG </name>
//    <r> 
//    <i> [Bits 3..0] RO (@ 0x400133F0) CRC capable at SPI mode </i>
//    <edit> 
//      <loc> ( (unsigned char)((SPI1_HWCFGR >> 0) & 0xF) ) </loc>
//    </edit>
//  </item>
//  


// -----------------------------  Field Item: SPI1_HWCFGR_I2SCFG  ---------------------------------
// SVD Line: 13646

//  <item> SFDITEM_FIELD__SPI1_HWCFGR_I2SCFG
//    <name> I2SCFG </name>
//    <r> 
//    <i> [Bits 7..4] RO (@ 0x400133F0) I2S mode implementation </i>
//    <edit> 
//      <loc> ( (unsigned char)((SPI1_HWCFGR >> 4) & 0xF) ) </loc>
//    </edit>
//  </item>
//  


// ----------------------------  Field Item: SPI1_HWCFGR_I2SCKCFG  --------------------------------
// SVD Line: 13652

//  <item> SFDITEM_FIELD__SPI1_HWCFGR_I2SCKCFG
//    <name> I2SCKCFG </name>
//    <r> 
//    <i> [Bits 11..8] RO (@ 0x400133F0) I2S master clock generator at I2S  mode </i>
//    <edit> 
//      <loc> ( (unsigned char)((SPI1_HWCFGR >> 8) & 0xF) ) </loc>
//    </edit>
//  </item>
//  


// ------------------------------  Field Item: SPI1_HWCFGR_DSCFG  ---------------------------------
// SVD Line: 13659

//  <item> SFDITEM_FIELD__SPI1_HWCFGR_DSCFG
//    <name> DSCFG </name>
//    <r> 
//    <i> [Bits 15..12] RO (@ 0x400133F0) SPI data size  configuration </i>
//    <edit> 
//      <loc> ( (unsigned char)((SPI1_HWCFGR >> 12) & 0xF) ) </loc>
//    </edit>
//  </item>
//  


// -----------------------------  Field Item: SPI1_HWCFGR_NSSCFG  ---------------------------------
// SVD Line: 13666

//  <item> SFDITEM_FIELD__SPI1_HWCFGR_NSSCFG
//    <name> NSSCFG </name>
//    <r> 
//    <i> [Bits 19..16] RO (@ 0x400133F0) NSS pulse feature enhancement at SPI  master </i>
//    <edit> 
//      <loc> ( (unsigned char)((SPI1_HWCFGR >> 16) & 0xF) ) </loc>
//    </edit>
//  </item>
//  


// -------------------------------  Register RTree: SPI1_HWCFGR  ----------------------------------
// SVD Line: 13630

//  <rtree> SFDITEM_REG__SPI1_HWCFGR
//    <name> HWCFGR </name>
//    <r> 
//    <i> [Bits 31..0] RO (@ 0x400133F0) hardware configuration  register </i>
//    <loc> ( (unsigned int)((SPI1_HWCFGR >> 0) & 0xFFFFFFFF) ) </loc>
//    <item> SFDITEM_FIELD__SPI1_HWCFGR_CRCCFG </item>
//    <item> SFDITEM_FIELD__SPI1_HWCFGR_I2SCFG </item>
//    <item> SFDITEM_FIELD__SPI1_HWCFGR_I2SCKCFG </item>
//    <item> SFDITEM_FIELD__SPI1_HWCFGR_DSCFG </item>
//    <item> SFDITEM_FIELD__SPI1_HWCFGR_NSSCFG </item>
//  </rtree>
//  


// ----------------------------  Register Item Address: SPI1_VERR  --------------------------------
// SVD Line: 13675

unsigned int SPI1_VERR __AT (0x400133F4);



// ------------------------------  Field Item: SPI1_VERR_MINREV  ----------------------------------
// SVD Line: 13684

//  <item> SFDITEM_FIELD__SPI1_VERR_MINREV
//    <name> MINREV </name>
//    <r> 
//    <i> [Bits 3..0] RO (@ 0x400133F4) Minor Revision number </i>
//    <edit> 
//      <loc> ( (unsigned char)((SPI1_VERR >> 0) & 0xF) ) </loc>
//    </edit>
//  </item>
//  


// ------------------------------  Field Item: SPI1_VERR_MAJREV  ----------------------------------
// SVD Line: 13690

//  <item> SFDITEM_FIELD__SPI1_VERR_MAJREV
//    <name> MAJREV </name>
//    <r> 
//    <i> [Bits 7..4] RO (@ 0x400133F4) Major Revision number </i>
//    <edit> 
//      <loc> ( (unsigned char)((SPI1_VERR >> 4) & 0xF) ) </loc>
//    </edit>
//  </item>
//  


// --------------------------------  Register RTree: SPI1_VERR  -----------------------------------
// SVD Line: 13675

//  <rtree> SFDITEM_REG__SPI1_VERR
//    <name> VERR </name>
//    <r> 
//    <i> [Bits 31..0] RO (@ 0x400133F4) EXTI IP Version register </i>
//    <loc> ( (unsigned int)((SPI1_VERR >> 0) & 0xFFFFFFFF) ) </loc>
//    <item> SFDITEM_FIELD__SPI1_VERR_MINREV </item>
//    <item> SFDITEM_FIELD__SPI1_VERR_MAJREV </item>
//  </rtree>
//  


// ----------------------------  Register Item Address: SPI1_IPIDR  -------------------------------
// SVD Line: 13698

unsigned int SPI1_IPIDR __AT (0x400133F8);



// -------------------------------  Field Item: SPI1_IPIDR_IPID  ----------------------------------
// SVD Line: 13707

//  <item> SFDITEM_FIELD__SPI1_IPIDR_IPID
//    <name> IPID </name>
//    <r> 
//    <i> [Bits 31..0] RO (@ 0x400133F8) IP Identification </i>
//    <edit> 
//      <loc> ( (unsigned int)((SPI1_IPIDR >> 0) & 0xFFFFFFFF) ) </loc>
//    </edit>
//  </item>
//  


// -------------------------------  Register RTree: SPI1_IPIDR  -----------------------------------
// SVD Line: 13698

//  <rtree> SFDITEM_REG__SPI1_IPIDR
//    <name> IPIDR </name>
//    <r> 
//    <i> [Bits 31..0] RO (@ 0x400133F8) EXTI Identification register </i>
//    <loc> ( (unsigned int)((SPI1_IPIDR >> 0) & 0xFFFFFFFF) ) </loc>
//    <item> SFDITEM_FIELD__SPI1_IPIDR_IPID </item>
//  </rtree>
//  


// ----------------------------  Register Item Address: SPI1_SIDR  --------------------------------
// SVD Line: 13715

unsigned int SPI1_SIDR __AT (0x400133FC);



// --------------------------------  Field Item: SPI1_SIDR_SID  -----------------------------------
// SVD Line: 13724

//  <item> SFDITEM_FIELD__SPI1_SIDR_SID
//    <name> SID </name>
//    <r> 
//    <i> [Bits 31..0] RO (@ 0x400133FC) Size Identification </i>
//    <edit> 
//      <loc> ( (unsigned int)((SPI1_SIDR >> 0) & 0xFFFFFFFF) ) </loc>
//    </edit>
//  </item>
//  


// --------------------------------  Register RTree: SPI1_SIDR  -----------------------------------
// SVD Line: 13715

//  <rtree> SFDITEM_REG__SPI1_SIDR
//    <name> SIDR </name>
//    <r> 
//    <i> [Bits 31..0] RO (@ 0x400133FC) EXTI Size ID register </i>
//    <loc> ( (unsigned int)((SPI1_SIDR >> 0) & 0xFFFFFFFF) ) </loc>
//    <item> SFDITEM_FIELD__SPI1_SIDR_SID </item>
//  </rtree>
//  


// ----------------------------------  Peripheral View: SPI1  -------------------------------------
// SVD Line: 13181

//  <view> SPI1
//    <name> SPI1 </name>
//    <item> SFDITEM_REG__SPI1_CR1 </item>
//    <item> SFDITEM_REG__SPI1_CR2 </item>
//    <item> SFDITEM_REG__SPI1_SR </item>
//    <item> SFDITEM_REG__SPI1_DR </item>
//    <item> SFDITEM_REG__SPI1_CRCPR </item>
//    <item> SFDITEM_REG__SPI1_RXCRCR </item>
//    <item> SFDITEM_REG__SPI1_TXCRCR </item>
//    <item> SFDITEM_REG__SPI1_I2SCFGR </item>
//    <item> SFDITEM_REG__SPI1_I2SPR </item>
//    <item> SFDITEM_REG__SPI1_HWCFGR </item>
//    <item> SFDITEM_REG__SPI1_VERR </item>
//    <item> SFDITEM_REG__SPI1_IPIDR </item>
//    <item> SFDITEM_REG__SPI1_SIDR </item>
//  </view>
//  


// -----------------------------  Register Item Address: SPI2_CR1  --------------------------------
// SVD Line: 13198

unsigned int SPI2_CR1 __AT (0x40003800);



// ------------------------------  Field Item: SPI2_CR1_BIDIMODE  ---------------------------------
// SVD Line: 13207

//  <item> SFDITEM_FIELD__SPI2_CR1_BIDIMODE
//    <name> BIDIMODE </name>
//    <rw> 
//    <i> [Bit 15] RW (@ 0x40003800) Bidirectional data mode  enable </i>
//    <check> 
//      <loc> ( (unsigned int) SPI2_CR1 ) </loc>
//      <o.15..15> BIDIMODE
//    </check>
//  </item>
//  


// -------------------------------  Field Item: SPI2_CR1_BIDIOE  ----------------------------------
// SVD Line: 13214

//  <item> SFDITEM_FIELD__SPI2_CR1_BIDIOE
//    <name> BIDIOE </name>
//    <rw> 
//    <i> [Bit 14] RW (@ 0x40003800) Output enable in bidirectional  mode </i>
//    <check> 
//      <loc> ( (unsigned int) SPI2_CR1 ) </loc>
//      <o.14..14> BIDIOE
//    </check>
//  </item>
//  


// -------------------------------  Field Item: SPI2_CR1_CRCEN  -----------------------------------
// SVD Line: 13221

//  <item> SFDITEM_FIELD__SPI2_CR1_CRCEN
//    <name> CRCEN </name>
//    <rw> 
//    <i> [Bit 13] RW (@ 0x40003800) Hardware CRC calculation  enable </i>
//    <check> 
//      <loc> ( (unsigned int) SPI2_CR1 ) </loc>
//      <o.13..13> CRCEN
//    </check>
//  </item>
//  


// ------------------------------  Field Item: SPI2_CR1_CRCNEXT  ----------------------------------
// SVD Line: 13228

//  <item> SFDITEM_FIELD__SPI2_CR1_CRCNEXT
//    <name> CRCNEXT </name>
//    <rw> 
//    <i> [Bit 12] RW (@ 0x40003800) CRC transfer next </i>
//    <check> 
//      <loc> ( (unsigned int) SPI2_CR1 ) </loc>
//      <o.12..12> CRCNEXT
//    </check>
//  </item>
//  


// --------------------------------  Field Item: SPI2_CR1_DFF  ------------------------------------
// SVD Line: 13234

//  <item> SFDITEM_FIELD__SPI2_CR1_DFF
//    <name> DFF </name>
//    <rw> 
//    <i> [Bit 11] RW (@ 0x40003800) Data frame format </i>
//    <check> 
//      <loc> ( (unsigned int) SPI2_CR1 ) </loc>
//      <o.11..11> DFF
//    </check>
//  </item>
//  


// -------------------------------  Field Item: SPI2_CR1_RXONLY  ----------------------------------
// SVD Line: 13240

//  <item> SFDITEM_FIELD__SPI2_CR1_RXONLY
//    <name> RXONLY </name>
//    <rw> 
//    <i> [Bit 10] RW (@ 0x40003800) Receive only </i>
//    <check> 
//      <loc> ( (unsigned int) SPI2_CR1 ) </loc>
//      <o.10..10> RXONLY
//    </check>
//  </item>
//  


// --------------------------------  Field Item: SPI2_CR1_SSM  ------------------------------------
// SVD Line: 13246

//  <item> SFDITEM_FIELD__SPI2_CR1_SSM
//    <name> SSM </name>
//    <rw> 
//    <i> [Bit 9] RW (@ 0x40003800) Software slave management </i>
//    <check> 
//      <loc> ( (unsigned int) SPI2_CR1 ) </loc>
//      <o.9..9> SSM
//    </check>
//  </item>
//  


// --------------------------------  Field Item: SPI2_CR1_SSI  ------------------------------------
// SVD Line: 13252

//  <item> SFDITEM_FIELD__SPI2_CR1_SSI
//    <name> SSI </name>
//    <rw> 
//    <i> [Bit 8] RW (@ 0x40003800) Internal slave select </i>
//    <check> 
//      <loc> ( (unsigned int) SPI2_CR1 ) </loc>
//      <o.8..8> SSI
//    </check>
//  </item>
//  


// ------------------------------  Field Item: SPI2_CR1_LSBFIRST  ---------------------------------
// SVD Line: 13258

//  <item> SFDITEM_FIELD__SPI2_CR1_LSBFIRST
//    <name> LSBFIRST </name>
//    <rw> 
//    <i> [Bit 7] RW (@ 0x40003800) Frame format </i>
//    <check> 
//      <loc> ( (unsigned int) SPI2_CR1 ) </loc>
//      <o.7..7> LSBFIRST
//    </check>
//  </item>
//  


// --------------------------------  Field Item: SPI2_CR1_SPE  ------------------------------------
// SVD Line: 13264

//  <item> SFDITEM_FIELD__SPI2_CR1_SPE
//    <name> SPE </name>
//    <rw> 
//    <i> [Bit 6] RW (@ 0x40003800) SPI enable </i>
//    <check> 
//      <loc> ( (unsigned int) SPI2_CR1 ) </loc>
//      <o.6..6> SPE
//    </check>
//  </item>
//  


// ---------------------------------  Field Item: SPI2_CR1_BR  ------------------------------------
// SVD Line: 13270

//  <item> SFDITEM_FIELD__SPI2_CR1_BR
//    <name> BR </name>
//    <rw> 
//    <i> [Bits 5..3] RW (@ 0x40003800) Baud rate control </i>
//    <edit> 
//      <loc> ( (unsigned char)((SPI2_CR1 >> 3) & 0x7), ((SPI2_CR1 = (SPI2_CR1 & ~(0x7UL << 3 )) | ((unsigned long)(Gui_u8:GuiVal & 0x7) << 3 ) ) )) </loc>
//    </edit>
//  </item>
//  


// --------------------------------  Field Item: SPI2_CR1_MSTR  -----------------------------------
// SVD Line: 13276

//  <item> SFDITEM_FIELD__SPI2_CR1_MSTR
//    <name> MSTR </name>
//    <rw> 
//    <i> [Bit 2] RW (@ 0x40003800) Master selection </i>
//    <check> 
//      <loc> ( (unsigned int) SPI2_CR1 ) </loc>
//      <o.2..2> MSTR
//    </check>
//  </item>
//  


// --------------------------------  Field Item: SPI2_CR1_CPOL  -----------------------------------
// SVD Line: 13282

//  <item> SFDITEM_FIELD__SPI2_CR1_CPOL
//    <name> CPOL </name>
//    <rw> 
//    <i> [Bit 1] RW (@ 0x40003800) Clock polarity </i>
//    <check> 
//      <loc> ( (unsigned int) SPI2_CR1 ) </loc>
//      <o.1..1> CPOL
//    </check>
//  </item>
//  


// --------------------------------  Field Item: SPI2_CR1_CPHA  -----------------------------------
// SVD Line: 13288

//  <item> SFDITEM_FIELD__SPI2_CR1_CPHA
//    <name> CPHA </name>
//    <rw> 
//    <i> [Bit 0] RW (@ 0x40003800) Clock phase </i>
//    <check> 
//      <loc> ( (unsigned int) SPI2_CR1 ) </loc>
//      <o.0..0> CPHA
//    </check>
//  </item>
//  


// --------------------------------  Register RTree: SPI2_CR1  ------------------------------------
// SVD Line: 13198

//  <rtree> SFDITEM_REG__SPI2_CR1
//    <name> CR1 </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x40003800) control register 1 </i>
//    <loc> ( (unsigned int)((SPI2_CR1 >> 0) & 0xFFFFFFFF), ((SPI2_CR1 = (SPI2_CR1 & ~(0xFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__SPI2_CR1_BIDIMODE </item>
//    <item> SFDITEM_FIELD__SPI2_CR1_BIDIOE </item>
//    <item> SFDITEM_FIELD__SPI2_CR1_CRCEN </item>
//    <item> SFDITEM_FIELD__SPI2_CR1_CRCNEXT </item>
//    <item> SFDITEM_FIELD__SPI2_CR1_DFF </item>
//    <item> SFDITEM_FIELD__SPI2_CR1_RXONLY </item>
//    <item> SFDITEM_FIELD__SPI2_CR1_SSM </item>
//    <item> SFDITEM_FIELD__SPI2_CR1_SSI </item>
//    <item> SFDITEM_FIELD__SPI2_CR1_LSBFIRST </item>
//    <item> SFDITEM_FIELD__SPI2_CR1_SPE </item>
//    <item> SFDITEM_FIELD__SPI2_CR1_BR </item>
//    <item> SFDITEM_FIELD__SPI2_CR1_MSTR </item>
//    <item> SFDITEM_FIELD__SPI2_CR1_CPOL </item>
//    <item> SFDITEM_FIELD__SPI2_CR1_CPHA </item>
//  </rtree>
//  


// -----------------------------  Register Item Address: SPI2_CR2  --------------------------------
// SVD Line: 13296

unsigned int SPI2_CR2 __AT (0x40003804);



// ------------------------------  Field Item: SPI2_CR2_RXDMAEN  ----------------------------------
// SVD Line: 13305

//  <item> SFDITEM_FIELD__SPI2_CR2_RXDMAEN
//    <name> RXDMAEN </name>
//    <rw> 
//    <i> [Bit 0] RW (@ 0x40003804) Rx buffer DMA enable </i>
//    <check> 
//      <loc> ( (unsigned int) SPI2_CR2 ) </loc>
//      <o.0..0> RXDMAEN
//    </check>
//  </item>
//  


// ------------------------------  Field Item: SPI2_CR2_TXDMAEN  ----------------------------------
// SVD Line: 13311

//  <item> SFDITEM_FIELD__SPI2_CR2_TXDMAEN
//    <name> TXDMAEN </name>
//    <rw> 
//    <i> [Bit 1] RW (@ 0x40003804) Tx buffer DMA enable </i>
//    <check> 
//      <loc> ( (unsigned int) SPI2_CR2 ) </loc>
//      <o.1..1> TXDMAEN
//    </check>
//  </item>
//  


// --------------------------------  Field Item: SPI2_CR2_SSOE  -----------------------------------
// SVD Line: 13317

//  <item> SFDITEM_FIELD__SPI2_CR2_SSOE
//    <name> SSOE </name>
//    <rw> 
//    <i> [Bit 2] RW (@ 0x40003804) SS output enable </i>
//    <check> 
//      <loc> ( (unsigned int) SPI2_CR2 ) </loc>
//      <o.2..2> SSOE
//    </check>
//  </item>
//  


// --------------------------------  Field Item: SPI2_CR2_NSSP  -----------------------------------
// SVD Line: 13323

//  <item> SFDITEM_FIELD__SPI2_CR2_NSSP
//    <name> NSSP </name>
//    <rw> 
//    <i> [Bit 3] RW (@ 0x40003804) NSS pulse management </i>
//    <check> 
//      <loc> ( (unsigned int) SPI2_CR2 ) </loc>
//      <o.3..3> NSSP
//    </check>
//  </item>
//  


// --------------------------------  Field Item: SPI2_CR2_FRF  ------------------------------------
// SVD Line: 13329

//  <item> SFDITEM_FIELD__SPI2_CR2_FRF
//    <name> FRF </name>
//    <rw> 
//    <i> [Bit 4] RW (@ 0x40003804) Frame format </i>
//    <check> 
//      <loc> ( (unsigned int) SPI2_CR2 ) </loc>
//      <o.4..4> FRF
//    </check>
//  </item>
//  


// -------------------------------  Field Item: SPI2_CR2_ERRIE  -----------------------------------
// SVD Line: 13335

//  <item> SFDITEM_FIELD__SPI2_CR2_ERRIE
//    <name> ERRIE </name>
//    <rw> 
//    <i> [Bit 5] RW (@ 0x40003804) Error interrupt enable </i>
//    <check> 
//      <loc> ( (unsigned int) SPI2_CR2 ) </loc>
//      <o.5..5> ERRIE
//    </check>
//  </item>
//  


// -------------------------------  Field Item: SPI2_CR2_RXNEIE  ----------------------------------
// SVD Line: 13341

//  <item> SFDITEM_FIELD__SPI2_CR2_RXNEIE
//    <name> RXNEIE </name>
//    <rw> 
//    <i> [Bit 6] RW (@ 0x40003804) RX buffer not empty interrupt  enable </i>
//    <check> 
//      <loc> ( (unsigned int) SPI2_CR2 ) </loc>
//      <o.6..6> RXNEIE
//    </check>
//  </item>
//  


// -------------------------------  Field Item: SPI2_CR2_TXEIE  -----------------------------------
// SVD Line: 13348

//  <item> SFDITEM_FIELD__SPI2_CR2_TXEIE
//    <name> TXEIE </name>
//    <rw> 
//    <i> [Bit 7] RW (@ 0x40003804) Tx buffer empty interrupt  enable </i>
//    <check> 
//      <loc> ( (unsigned int) SPI2_CR2 ) </loc>
//      <o.7..7> TXEIE
//    </check>
//  </item>
//  


// ---------------------------------  Field Item: SPI2_CR2_DS  ------------------------------------
// SVD Line: 13355

//  <item> SFDITEM_FIELD__SPI2_CR2_DS
//    <name> DS </name>
//    <rw> 
//    <i> [Bits 11..8] RW (@ 0x40003804) Data size </i>
//    <edit> 
//      <loc> ( (unsigned char)((SPI2_CR2 >> 8) & 0xF), ((SPI2_CR2 = (SPI2_CR2 & ~(0xFUL << 8 )) | ((unsigned long)(Gui_u8:GuiVal & 0xF) << 8 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -------------------------------  Field Item: SPI2_CR2_FRXTH  -----------------------------------
// SVD Line: 13361

//  <item> SFDITEM_FIELD__SPI2_CR2_FRXTH
//    <name> FRXTH </name>
//    <rw> 
//    <i> [Bit 12] RW (@ 0x40003804) FIFO reception threshold </i>
//    <check> 
//      <loc> ( (unsigned int) SPI2_CR2 ) </loc>
//      <o.12..12> FRXTH
//    </check>
//  </item>
//  


// ------------------------------  Field Item: SPI2_CR2_LDMA_RX  ----------------------------------
// SVD Line: 13367

//  <item> SFDITEM_FIELD__SPI2_CR2_LDMA_RX
//    <name> LDMA_RX </name>
//    <rw> 
//    <i> [Bit 13] RW (@ 0x40003804) Last DMA transfer for  reception </i>
//    <check> 
//      <loc> ( (unsigned int) SPI2_CR2 ) </loc>
//      <o.13..13> LDMA_RX
//    </check>
//  </item>
//  


// ------------------------------  Field Item: SPI2_CR2_LDMA_TX  ----------------------------------
// SVD Line: 13374

//  <item> SFDITEM_FIELD__SPI2_CR2_LDMA_TX
//    <name> LDMA_TX </name>
//    <rw> 
//    <i> [Bit 14] RW (@ 0x40003804) Last DMA transfer for  transmission </i>
//    <check> 
//      <loc> ( (unsigned int) SPI2_CR2 ) </loc>
//      <o.14..14> LDMA_TX
//    </check>
//  </item>
//  


// --------------------------------  Register RTree: SPI2_CR2  ------------------------------------
// SVD Line: 13296

//  <rtree> SFDITEM_REG__SPI2_CR2
//    <name> CR2 </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x40003804) control register 2 </i>
//    <loc> ( (unsigned int)((SPI2_CR2 >> 0) & 0xFFFFFFFF), ((SPI2_CR2 = (SPI2_CR2 & ~(0x7FFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0x7FFF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__SPI2_CR2_RXDMAEN </item>
//    <item> SFDITEM_FIELD__SPI2_CR2_TXDMAEN </item>
//    <item> SFDITEM_FIELD__SPI2_CR2_SSOE </item>
//    <item> SFDITEM_FIELD__SPI2_CR2_NSSP </item>
//    <item> SFDITEM_FIELD__SPI2_CR2_FRF </item>
//    <item> SFDITEM_FIELD__SPI2_CR2_ERRIE </item>
//    <item> SFDITEM_FIELD__SPI2_CR2_RXNEIE </item>
//    <item> SFDITEM_FIELD__SPI2_CR2_TXEIE </item>
//    <item> SFDITEM_FIELD__SPI2_CR2_DS </item>
//    <item> SFDITEM_FIELD__SPI2_CR2_FRXTH </item>
//    <item> SFDITEM_FIELD__SPI2_CR2_LDMA_RX </item>
//    <item> SFDITEM_FIELD__SPI2_CR2_LDMA_TX </item>
//  </rtree>
//  


// -----------------------------  Register Item Address: SPI2_SR  ---------------------------------
// SVD Line: 13383

unsigned int SPI2_SR __AT (0x40003808);



// --------------------------------  Field Item: SPI2_SR_RXNE  ------------------------------------
// SVD Line: 13391

//  <item> SFDITEM_FIELD__SPI2_SR_RXNE
//    <name> RXNE </name>
//    <r> 
//    <i> [Bit 0] RO (@ 0x40003808) Receive buffer not empty </i>
//    <check> 
//      <loc> ( (unsigned int) SPI2_SR ) </loc>
//      <o.0..0> RXNE
//    </check>
//  </item>
//  


// ---------------------------------  Field Item: SPI2_SR_TXE  ------------------------------------
// SVD Line: 13398

//  <item> SFDITEM_FIELD__SPI2_SR_TXE
//    <name> TXE </name>
//    <r> 
//    <i> [Bit 1] RO (@ 0x40003808) Transmit buffer empty </i>
//    <check> 
//      <loc> ( (unsigned int) SPI2_SR ) </loc>
//      <o.1..1> TXE
//    </check>
//  </item>
//  


// -------------------------------  Field Item: SPI2_SR_CHSIDE  -----------------------------------
// SVD Line: 13405

//  <item> SFDITEM_FIELD__SPI2_SR_CHSIDE
//    <name> CHSIDE </name>
//    <r> 
//    <i> [Bit 2] RO (@ 0x40003808) Channel side </i>
//    <check> 
//      <loc> ( (unsigned int) SPI2_SR ) </loc>
//      <o.2..2> CHSIDE
//    </check>
//  </item>
//  


// ---------------------------------  Field Item: SPI2_SR_UDR  ------------------------------------
// SVD Line: 13412

//  <item> SFDITEM_FIELD__SPI2_SR_UDR
//    <name> UDR </name>
//    <r> 
//    <i> [Bit 3] RO (@ 0x40003808) Underrun flag </i>
//    <check> 
//      <loc> ( (unsigned int) SPI2_SR ) </loc>
//      <o.3..3> UDR
//    </check>
//  </item>
//  


// -------------------------------  Field Item: SPI2_SR_CRCERR  -----------------------------------
// SVD Line: 13419

//  <item> SFDITEM_FIELD__SPI2_SR_CRCERR
//    <name> CRCERR </name>
//    <rw> 
//    <i> [Bit 4] RW (@ 0x40003808) CRC error flag </i>
//    <check> 
//      <loc> ( (unsigned int) SPI2_SR ) </loc>
//      <o.4..4> CRCERR
//    </check>
//  </item>
//  


// --------------------------------  Field Item: SPI2_SR_MODF  ------------------------------------
// SVD Line: 13426

//  <item> SFDITEM_FIELD__SPI2_SR_MODF
//    <name> MODF </name>
//    <r> 
//    <i> [Bit 5] RO (@ 0x40003808) Mode fault </i>
//    <check> 
//      <loc> ( (unsigned int) SPI2_SR ) </loc>
//      <o.5..5> MODF
//    </check>
//  </item>
//  


// ---------------------------------  Field Item: SPI2_SR_OVR  ------------------------------------
// SVD Line: 13433

//  <item> SFDITEM_FIELD__SPI2_SR_OVR
//    <name> OVR </name>
//    <r> 
//    <i> [Bit 6] RO (@ 0x40003808) Overrun flag </i>
//    <check> 
//      <loc> ( (unsigned int) SPI2_SR ) </loc>
//      <o.6..6> OVR
//    </check>
//  </item>
//  


// ---------------------------------  Field Item: SPI2_SR_BSY  ------------------------------------
// SVD Line: 13440

//  <item> SFDITEM_FIELD__SPI2_SR_BSY
//    <name> BSY </name>
//    <r> 
//    <i> [Bit 7] RO (@ 0x40003808) Busy flag </i>
//    <check> 
//      <loc> ( (unsigned int) SPI2_SR ) </loc>
//      <o.7..7> BSY
//    </check>
//  </item>
//  


// -------------------------------  Field Item: SPI2_SR_TIFRFE  -----------------------------------
// SVD Line: 13447

//  <item> SFDITEM_FIELD__SPI2_SR_TIFRFE
//    <name> TIFRFE </name>
//    <r> 
//    <i> [Bit 8] RO (@ 0x40003808) TI frame format error </i>
//    <check> 
//      <loc> ( (unsigned int) SPI2_SR ) </loc>
//      <o.8..8> TIFRFE
//    </check>
//  </item>
//  


// --------------------------------  Field Item: SPI2_SR_FRLVL  -----------------------------------
// SVD Line: 13454

//  <item> SFDITEM_FIELD__SPI2_SR_FRLVL
//    <name> FRLVL </name>
//    <r> 
//    <i> [Bits 10..9] RO (@ 0x40003808) FIFO reception level </i>
//    <edit> 
//      <loc> ( (unsigned char)((SPI2_SR >> 9) & 0x3) ) </loc>
//    </edit>
//  </item>
//  


// --------------------------------  Field Item: SPI2_SR_FTLVL  -----------------------------------
// SVD Line: 13461

//  <item> SFDITEM_FIELD__SPI2_SR_FTLVL
//    <name> FTLVL </name>
//    <r> 
//    <i> [Bits 12..11] RO (@ 0x40003808) FIFO transmission level </i>
//    <edit> 
//      <loc> ( (unsigned char)((SPI2_SR >> 11) & 0x3) ) </loc>
//    </edit>
//  </item>
//  


// ---------------------------------  Register RTree: SPI2_SR  ------------------------------------
// SVD Line: 13383

//  <rtree> SFDITEM_REG__SPI2_SR
//    <name> SR </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x40003808) status register </i>
//    <loc> ( (unsigned int)((SPI2_SR >> 0) & 0xFFFFFFFF), ((SPI2_SR = (SPI2_SR & ~(0x10UL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0x10) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__SPI2_SR_RXNE </item>
//    <item> SFDITEM_FIELD__SPI2_SR_TXE </item>
//    <item> SFDITEM_FIELD__SPI2_SR_CHSIDE </item>
//    <item> SFDITEM_FIELD__SPI2_SR_UDR </item>
//    <item> SFDITEM_FIELD__SPI2_SR_CRCERR </item>
//    <item> SFDITEM_FIELD__SPI2_SR_MODF </item>
//    <item> SFDITEM_FIELD__SPI2_SR_OVR </item>
//    <item> SFDITEM_FIELD__SPI2_SR_BSY </item>
//    <item> SFDITEM_FIELD__SPI2_SR_TIFRFE </item>
//    <item> SFDITEM_FIELD__SPI2_SR_FRLVL </item>
//    <item> SFDITEM_FIELD__SPI2_SR_FTLVL </item>
//  </rtree>
//  


// -----------------------------  Register Item Address: SPI2_DR  ---------------------------------
// SVD Line: 13470

unsigned int SPI2_DR __AT (0x4000380C);



// ---------------------------------  Field Item: SPI2_DR_DR  -------------------------------------
// SVD Line: 13479

//  <item> SFDITEM_FIELD__SPI2_DR_DR
//    <name> DR </name>
//    <rw> 
//    <i> [Bits 15..0] RW (@ 0x4000380C) Data register </i>
//    <edit> 
//      <loc> ( (unsigned short)((SPI2_DR >> 0) & 0xFFFF), ((SPI2_DR = (SPI2_DR & ~(0xFFFFUL << 0 )) | ((unsigned long)(Gui_u16:GuiVal & 0xFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ---------------------------------  Register RTree: SPI2_DR  ------------------------------------
// SVD Line: 13470

//  <rtree> SFDITEM_REG__SPI2_DR
//    <name> DR </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x4000380C) data register </i>
//    <loc> ( (unsigned int)((SPI2_DR >> 0) & 0xFFFFFFFF), ((SPI2_DR = (SPI2_DR & ~(0xFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__SPI2_DR_DR </item>
//  </rtree>
//  


// ----------------------------  Register Item Address: SPI2_CRCPR  -------------------------------
// SVD Line: 13487

unsigned int SPI2_CRCPR __AT (0x40003810);



// -----------------------------  Field Item: SPI2_CRCPR_CRCPOLY  ---------------------------------
// SVD Line: 13496

//  <item> SFDITEM_FIELD__SPI2_CRCPR_CRCPOLY
//    <name> CRCPOLY </name>
//    <rw> 
//    <i> [Bits 15..0] RW (@ 0x40003810) CRC polynomial register </i>
//    <edit> 
//      <loc> ( (unsigned short)((SPI2_CRCPR >> 0) & 0xFFFF), ((SPI2_CRCPR = (SPI2_CRCPR & ~(0xFFFFUL << 0 )) | ((unsigned long)(Gui_u16:GuiVal & 0xFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -------------------------------  Register RTree: SPI2_CRCPR  -----------------------------------
// SVD Line: 13487

//  <rtree> SFDITEM_REG__SPI2_CRCPR
//    <name> CRCPR </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x40003810) CRC polynomial register </i>
//    <loc> ( (unsigned int)((SPI2_CRCPR >> 0) & 0xFFFFFFFF), ((SPI2_CRCPR = (SPI2_CRCPR & ~(0xFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__SPI2_CRCPR_CRCPOLY </item>
//  </rtree>
//  


// ---------------------------  Register Item Address: SPI2_RXCRCR  -------------------------------
// SVD Line: 13504

unsigned int SPI2_RXCRCR __AT (0x40003814);



// ------------------------------  Field Item: SPI2_RXCRCR_RxCRC  ---------------------------------
// SVD Line: 13513

//  <item> SFDITEM_FIELD__SPI2_RXCRCR_RxCRC
//    <name> RxCRC </name>
//    <r> 
//    <i> [Bits 15..0] RO (@ 0x40003814) Rx CRC register </i>
//    <edit> 
//      <loc> ( (unsigned short)((SPI2_RXCRCR >> 0) & 0xFFFF) ) </loc>
//    </edit>
//  </item>
//  


// -------------------------------  Register RTree: SPI2_RXCRCR  ----------------------------------
// SVD Line: 13504

//  <rtree> SFDITEM_REG__SPI2_RXCRCR
//    <name> RXCRCR </name>
//    <r> 
//    <i> [Bits 31..0] RO (@ 0x40003814) RX CRC register </i>
//    <loc> ( (unsigned int)((SPI2_RXCRCR >> 0) & 0xFFFFFFFF) ) </loc>
//    <item> SFDITEM_FIELD__SPI2_RXCRCR_RxCRC </item>
//  </rtree>
//  


// ---------------------------  Register Item Address: SPI2_TXCRCR  -------------------------------
// SVD Line: 13521

unsigned int SPI2_TXCRCR __AT (0x40003818);



// ------------------------------  Field Item: SPI2_TXCRCR_TxCRC  ---------------------------------
// SVD Line: 13530

//  <item> SFDITEM_FIELD__SPI2_TXCRCR_TxCRC
//    <name> TxCRC </name>
//    <r> 
//    <i> [Bits 15..0] RO (@ 0x40003818) Tx CRC register </i>
//    <edit> 
//      <loc> ( (unsigned short)((SPI2_TXCRCR >> 0) & 0xFFFF) ) </loc>
//    </edit>
//  </item>
//  


// -------------------------------  Register RTree: SPI2_TXCRCR  ----------------------------------
// SVD Line: 13521

//  <rtree> SFDITEM_REG__SPI2_TXCRCR
//    <name> TXCRCR </name>
//    <r> 
//    <i> [Bits 31..0] RO (@ 0x40003818) TX CRC register </i>
//    <loc> ( (unsigned int)((SPI2_TXCRCR >> 0) & 0xFFFFFFFF) ) </loc>
//    <item> SFDITEM_FIELD__SPI2_TXCRCR_TxCRC </item>
//  </rtree>
//  


// ---------------------------  Register Item Address: SPI2_I2SCFGR  ------------------------------
// SVD Line: 13538

unsigned int SPI2_I2SCFGR __AT (0x4000381C);



// -----------------------------  Field Item: SPI2_I2SCFGR_CHLEN  ---------------------------------
// SVD Line: 13547

//  <item> SFDITEM_FIELD__SPI2_I2SCFGR_CHLEN
//    <name> CHLEN </name>
//    <rw> 
//    <i> [Bit 0] RW (@ 0x4000381C) Channel length (number of bits per audio  channel) </i>
//    <check> 
//      <loc> ( (unsigned int) SPI2_I2SCFGR ) </loc>
//      <o.0..0> CHLEN
//    </check>
//  </item>
//  


// -----------------------------  Field Item: SPI2_I2SCFGR_DATLEN  --------------------------------
// SVD Line: 13554

//  <item> SFDITEM_FIELD__SPI2_I2SCFGR_DATLEN
//    <name> DATLEN </name>
//    <rw> 
//    <i> [Bits 2..1] RW (@ 0x4000381C) Data length to be  transferred </i>
//    <edit> 
//      <loc> ( (unsigned char)((SPI2_I2SCFGR >> 1) & 0x3), ((SPI2_I2SCFGR = (SPI2_I2SCFGR & ~(0x3UL << 1 )) | ((unsigned long)(Gui_u8:GuiVal & 0x3) << 1 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -----------------------------  Field Item: SPI2_I2SCFGR_CKPOL  ---------------------------------
// SVD Line: 13561

//  <item> SFDITEM_FIELD__SPI2_I2SCFGR_CKPOL
//    <name> CKPOL </name>
//    <rw> 
//    <i> [Bit 3] RW (@ 0x4000381C) Inactive state clock  polarity </i>
//    <check> 
//      <loc> ( (unsigned int) SPI2_I2SCFGR ) </loc>
//      <o.3..3> CKPOL
//    </check>
//  </item>
//  


// -----------------------------  Field Item: SPI2_I2SCFGR_I2SSTD  --------------------------------
// SVD Line: 13568

//  <item> SFDITEM_FIELD__SPI2_I2SCFGR_I2SSTD
//    <name> I2SSTD </name>
//    <rw> 
//    <i> [Bits 5..4] RW (@ 0x4000381C) standard selection </i>
//    <edit> 
//      <loc> ( (unsigned char)((SPI2_I2SCFGR >> 4) & 0x3), ((SPI2_I2SCFGR = (SPI2_I2SCFGR & ~(0x3UL << 4 )) | ((unsigned long)(Gui_u8:GuiVal & 0x3) << 4 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ----------------------------  Field Item: SPI2_I2SCFGR_PCMSYNC  --------------------------------
// SVD Line: 13574

//  <item> SFDITEM_FIELD__SPI2_I2SCFGR_PCMSYNC
//    <name> PCMSYNC </name>
//    <rw> 
//    <i> [Bit 7] RW (@ 0x4000381C) PCM frame synchronization </i>
//    <check> 
//      <loc> ( (unsigned int) SPI2_I2SCFGR ) </loc>
//      <o.7..7> PCMSYNC
//    </check>
//  </item>
//  


// -----------------------------  Field Item: SPI2_I2SCFGR_I2SCFG  --------------------------------
// SVD Line: 13580

//  <item> SFDITEM_FIELD__SPI2_I2SCFGR_I2SCFG
//    <name> I2SCFG </name>
//    <rw> 
//    <i> [Bits 9..8] RW (@ 0x4000381C) I2S configuration mode </i>
//    <edit> 
//      <loc> ( (unsigned char)((SPI2_I2SCFGR >> 8) & 0x3), ((SPI2_I2SCFGR = (SPI2_I2SCFGR & ~(0x3UL << 8 )) | ((unsigned long)(Gui_u8:GuiVal & 0x3) << 8 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ------------------------------  Field Item: SPI2_I2SCFGR_SE2  ----------------------------------
// SVD Line: 13586

//  <item> SFDITEM_FIELD__SPI2_I2SCFGR_SE2
//    <name> SE2 </name>
//    <rw> 
//    <i> [Bit 10] RW (@ 0x4000381C) I2S enable </i>
//    <check> 
//      <loc> ( (unsigned int) SPI2_I2SCFGR ) </loc>
//      <o.10..10> SE2
//    </check>
//  </item>
//  


// -----------------------------  Field Item: SPI2_I2SCFGR_I2SMOD  --------------------------------
// SVD Line: 13592

//  <item> SFDITEM_FIELD__SPI2_I2SCFGR_I2SMOD
//    <name> I2SMOD </name>
//    <rw> 
//    <i> [Bit 11] RW (@ 0x4000381C) I2S mode selection </i>
//    <check> 
//      <loc> ( (unsigned int) SPI2_I2SCFGR ) </loc>
//      <o.11..11> I2SMOD
//    </check>
//  </item>
//  


// ------------------------------  Register RTree: SPI2_I2SCFGR  ----------------------------------
// SVD Line: 13538

//  <rtree> SFDITEM_REG__SPI2_I2SCFGR
//    <name> I2SCFGR </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x4000381C) configuration register </i>
//    <loc> ( (unsigned int)((SPI2_I2SCFGR >> 0) & 0xFFFFFFFF), ((SPI2_I2SCFGR = (SPI2_I2SCFGR & ~(0xFBFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFBF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__SPI2_I2SCFGR_CHLEN </item>
//    <item> SFDITEM_FIELD__SPI2_I2SCFGR_DATLEN </item>
//    <item> SFDITEM_FIELD__SPI2_I2SCFGR_CKPOL </item>
//    <item> SFDITEM_FIELD__SPI2_I2SCFGR_I2SSTD </item>
//    <item> SFDITEM_FIELD__SPI2_I2SCFGR_PCMSYNC </item>
//    <item> SFDITEM_FIELD__SPI2_I2SCFGR_I2SCFG </item>
//    <item> SFDITEM_FIELD__SPI2_I2SCFGR_SE2 </item>
//    <item> SFDITEM_FIELD__SPI2_I2SCFGR_I2SMOD </item>
//  </rtree>
//  


// ----------------------------  Register Item Address: SPI2_I2SPR  -------------------------------
// SVD Line: 13600

unsigned int SPI2_I2SPR __AT (0x40003820);



// ------------------------------  Field Item: SPI2_I2SPR_I2SDIV  ---------------------------------
// SVD Line: 13609

//  <item> SFDITEM_FIELD__SPI2_I2SPR_I2SDIV
//    <name> I2SDIV </name>
//    <rw> 
//    <i> [Bits 7..0] RW (@ 0x40003820) linear prescaler </i>
//    <edit> 
//      <loc> ( (unsigned char)((SPI2_I2SPR >> 0) & 0xFF), ((SPI2_I2SPR = (SPI2_I2SPR & ~(0xFFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -------------------------------  Field Item: SPI2_I2SPR_ODD  -----------------------------------
// SVD Line: 13615

//  <item> SFDITEM_FIELD__SPI2_I2SPR_ODD
//    <name> ODD </name>
//    <rw> 
//    <i> [Bit 8] RW (@ 0x40003820) Odd factor for the  prescaler </i>
//    <check> 
//      <loc> ( (unsigned int) SPI2_I2SPR ) </loc>
//      <o.8..8> ODD
//    </check>
//  </item>
//  


// ------------------------------  Field Item: SPI2_I2SPR_MCKOE  ----------------------------------
// SVD Line: 13622

//  <item> SFDITEM_FIELD__SPI2_I2SPR_MCKOE
//    <name> MCKOE </name>
//    <rw> 
//    <i> [Bit 9] RW (@ 0x40003820) Master clock output enable </i>
//    <check> 
//      <loc> ( (unsigned int) SPI2_I2SPR ) </loc>
//      <o.9..9> MCKOE
//    </check>
//  </item>
//  


// -------------------------------  Register RTree: SPI2_I2SPR  -----------------------------------
// SVD Line: 13600

//  <rtree> SFDITEM_REG__SPI2_I2SPR
//    <name> I2SPR </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x40003820) prescaler register </i>
//    <loc> ( (unsigned int)((SPI2_I2SPR >> 0) & 0xFFFFFFFF), ((SPI2_I2SPR = (SPI2_I2SPR & ~(0x3FFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0x3FF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__SPI2_I2SPR_I2SDIV </item>
//    <item> SFDITEM_FIELD__SPI2_I2SPR_ODD </item>
//    <item> SFDITEM_FIELD__SPI2_I2SPR_MCKOE </item>
//  </rtree>
//  


// ---------------------------  Register Item Address: SPI2_HWCFGR  -------------------------------
// SVD Line: 13630

unsigned int SPI2_HWCFGR __AT (0x40003BF0);



// -----------------------------  Field Item: SPI2_HWCFGR_CRCCFG  ---------------------------------
// SVD Line: 13640

//  <item> SFDITEM_FIELD__SPI2_HWCFGR_CRCCFG
//    <name> CRCCFG </name>
//    <r> 
//    <i> [Bits 3..0] RO (@ 0x40003BF0) CRC capable at SPI mode </i>
//    <edit> 
//      <loc> ( (unsigned char)((SPI2_HWCFGR >> 0) & 0xF) ) </loc>
//    </edit>
//  </item>
//  


// -----------------------------  Field Item: SPI2_HWCFGR_I2SCFG  ---------------------------------
// SVD Line: 13646

//  <item> SFDITEM_FIELD__SPI2_HWCFGR_I2SCFG
//    <name> I2SCFG </name>
//    <r> 
//    <i> [Bits 7..4] RO (@ 0x40003BF0) I2S mode implementation </i>
//    <edit> 
//      <loc> ( (unsigned char)((SPI2_HWCFGR >> 4) & 0xF) ) </loc>
//    </edit>
//  </item>
//  


// ----------------------------  Field Item: SPI2_HWCFGR_I2SCKCFG  --------------------------------
// SVD Line: 13652

//  <item> SFDITEM_FIELD__SPI2_HWCFGR_I2SCKCFG
//    <name> I2SCKCFG </name>
//    <r> 
//    <i> [Bits 11..8] RO (@ 0x40003BF0) I2S master clock generator at I2S  mode </i>
//    <edit> 
//      <loc> ( (unsigned char)((SPI2_HWCFGR >> 8) & 0xF) ) </loc>
//    </edit>
//  </item>
//  


// ------------------------------  Field Item: SPI2_HWCFGR_DSCFG  ---------------------------------
// SVD Line: 13659

//  <item> SFDITEM_FIELD__SPI2_HWCFGR_DSCFG
//    <name> DSCFG </name>
//    <r> 
//    <i> [Bits 15..12] RO (@ 0x40003BF0) SPI data size  configuration </i>
//    <edit> 
//      <loc> ( (unsigned char)((SPI2_HWCFGR >> 12) & 0xF) ) </loc>
//    </edit>
//  </item>
//  


// -----------------------------  Field Item: SPI2_HWCFGR_NSSCFG  ---------------------------------
// SVD Line: 13666

//  <item> SFDITEM_FIELD__SPI2_HWCFGR_NSSCFG
//    <name> NSSCFG </name>
//    <r> 
//    <i> [Bits 19..16] RO (@ 0x40003BF0) NSS pulse feature enhancement at SPI  master </i>
//    <edit> 
//      <loc> ( (unsigned char)((SPI2_HWCFGR >> 16) & 0xF) ) </loc>
//    </edit>
//  </item>
//  


// -------------------------------  Register RTree: SPI2_HWCFGR  ----------------------------------
// SVD Line: 13630

//  <rtree> SFDITEM_REG__SPI2_HWCFGR
//    <name> HWCFGR </name>
//    <r> 
//    <i> [Bits 31..0] RO (@ 0x40003BF0) hardware configuration  register </i>
//    <loc> ( (unsigned int)((SPI2_HWCFGR >> 0) & 0xFFFFFFFF) ) </loc>
//    <item> SFDITEM_FIELD__SPI2_HWCFGR_CRCCFG </item>
//    <item> SFDITEM_FIELD__SPI2_HWCFGR_I2SCFG </item>
//    <item> SFDITEM_FIELD__SPI2_HWCFGR_I2SCKCFG </item>
//    <item> SFDITEM_FIELD__SPI2_HWCFGR_DSCFG </item>
//    <item> SFDITEM_FIELD__SPI2_HWCFGR_NSSCFG </item>
//  </rtree>
//  


// ----------------------------  Register Item Address: SPI2_VERR  --------------------------------
// SVD Line: 13675

unsigned int SPI2_VERR __AT (0x40003BF4);



// ------------------------------  Field Item: SPI2_VERR_MINREV  ----------------------------------
// SVD Line: 13684

//  <item> SFDITEM_FIELD__SPI2_VERR_MINREV
//    <name> MINREV </name>
//    <r> 
//    <i> [Bits 3..0] RO (@ 0x40003BF4) Minor Revision number </i>
//    <edit> 
//      <loc> ( (unsigned char)((SPI2_VERR >> 0) & 0xF) ) </loc>
//    </edit>
//  </item>
//  


// ------------------------------  Field Item: SPI2_VERR_MAJREV  ----------------------------------
// SVD Line: 13690

//  <item> SFDITEM_FIELD__SPI2_VERR_MAJREV
//    <name> MAJREV </name>
//    <r> 
//    <i> [Bits 7..4] RO (@ 0x40003BF4) Major Revision number </i>
//    <edit> 
//      <loc> ( (unsigned char)((SPI2_VERR >> 4) & 0xF) ) </loc>
//    </edit>
//  </item>
//  


// --------------------------------  Register RTree: SPI2_VERR  -----------------------------------
// SVD Line: 13675

//  <rtree> SFDITEM_REG__SPI2_VERR
//    <name> VERR </name>
//    <r> 
//    <i> [Bits 31..0] RO (@ 0x40003BF4) EXTI IP Version register </i>
//    <loc> ( (unsigned int)((SPI2_VERR >> 0) & 0xFFFFFFFF) ) </loc>
//    <item> SFDITEM_FIELD__SPI2_VERR_MINREV </item>
//    <item> SFDITEM_FIELD__SPI2_VERR_MAJREV </item>
//  </rtree>
//  


// ----------------------------  Register Item Address: SPI2_IPIDR  -------------------------------
// SVD Line: 13698

unsigned int SPI2_IPIDR __AT (0x40003BF8);



// -------------------------------  Field Item: SPI2_IPIDR_IPID  ----------------------------------
// SVD Line: 13707

//  <item> SFDITEM_FIELD__SPI2_IPIDR_IPID
//    <name> IPID </name>
//    <r> 
//    <i> [Bits 31..0] RO (@ 0x40003BF8) IP Identification </i>
//    <edit> 
//      <loc> ( (unsigned int)((SPI2_IPIDR >> 0) & 0xFFFFFFFF) ) </loc>
//    </edit>
//  </item>
//  


// -------------------------------  Register RTree: SPI2_IPIDR  -----------------------------------
// SVD Line: 13698

//  <rtree> SFDITEM_REG__SPI2_IPIDR
//    <name> IPIDR </name>
//    <r> 
//    <i> [Bits 31..0] RO (@ 0x40003BF8) EXTI Identification register </i>
//    <loc> ( (unsigned int)((SPI2_IPIDR >> 0) & 0xFFFFFFFF) ) </loc>
//    <item> SFDITEM_FIELD__SPI2_IPIDR_IPID </item>
//  </rtree>
//  


// ----------------------------  Register Item Address: SPI2_SIDR  --------------------------------
// SVD Line: 13715

unsigned int SPI2_SIDR __AT (0x40003BFC);



// --------------------------------  Field Item: SPI2_SIDR_SID  -----------------------------------
// SVD Line: 13724

//  <item> SFDITEM_FIELD__SPI2_SIDR_SID
//    <name> SID </name>
//    <r> 
//    <i> [Bits 31..0] RO (@ 0x40003BFC) Size Identification </i>
//    <edit> 
//      <loc> ( (unsigned int)((SPI2_SIDR >> 0) & 0xFFFFFFFF) ) </loc>
//    </edit>
//  </item>
//  


// --------------------------------  Register RTree: SPI2_SIDR  -----------------------------------
// SVD Line: 13715

//  <rtree> SFDITEM_REG__SPI2_SIDR
//    <name> SIDR </name>
//    <r> 
//    <i> [Bits 31..0] RO (@ 0x40003BFC) EXTI Size ID register </i>
//    <loc> ( (unsigned int)((SPI2_SIDR >> 0) & 0xFFFFFFFF) ) </loc>
//    <item> SFDITEM_FIELD__SPI2_SIDR_SID </item>
//  </rtree>
//  


// ----------------------------------  Peripheral View: SPI2  -------------------------------------
// SVD Line: 13734

//  <view> SPI2
//    <name> SPI2 </name>
//    <item> SFDITEM_REG__SPI2_CR1 </item>
//    <item> SFDITEM_REG__SPI2_CR2 </item>
//    <item> SFDITEM_REG__SPI2_SR </item>
//    <item> SFDITEM_REG__SPI2_DR </item>
//    <item> SFDITEM_REG__SPI2_CRCPR </item>
//    <item> SFDITEM_REG__SPI2_RXCRCR </item>
//    <item> SFDITEM_REG__SPI2_TXCRCR </item>
//    <item> SFDITEM_REG__SPI2_I2SCFGR </item>
//    <item> SFDITEM_REG__SPI2_I2SPR </item>
//    <item> SFDITEM_REG__SPI2_HWCFGR </item>
//    <item> SFDITEM_REG__SPI2_VERR </item>
//    <item> SFDITEM_REG__SPI2_IPIDR </item>
//    <item> SFDITEM_REG__SPI2_SIDR </item>
//  </view>
//  


// -----------------------------  Register Item Address: TIM1_CR1  --------------------------------
// SVD Line: 13764

unsigned int TIM1_CR1 __AT (0x40012C00);



// --------------------------------  Field Item: TIM1_CR1_CEN  ------------------------------------
// SVD Line: 13773

//  <item> SFDITEM_FIELD__TIM1_CR1_CEN
//    <name> CEN </name>
//    <rw> 
//    <i> [Bit 0] RW (@ 0x40012C00) Counter enable </i>
//    <check> 
//      <loc> ( (unsigned int) TIM1_CR1 ) </loc>
//      <o.0..0> CEN
//    </check>
//  </item>
//  


// --------------------------------  Field Item: TIM1_CR1_OPM  ------------------------------------
// SVD Line: 13779

//  <item> SFDITEM_FIELD__TIM1_CR1_OPM
//    <name> OPM </name>
//    <rw> 
//    <i> [Bit 3] RW (@ 0x40012C00) One-pulse mode </i>
//    <check> 
//      <loc> ( (unsigned int) TIM1_CR1 ) </loc>
//      <o.3..3> OPM
//    </check>
//  </item>
//  


// --------------------------------  Field Item: TIM1_CR1_UDIS  -----------------------------------
// SVD Line: 13785

//  <item> SFDITEM_FIELD__TIM1_CR1_UDIS
//    <name> UDIS </name>
//    <rw> 
//    <i> [Bit 1] RW (@ 0x40012C00) Update disable </i>
//    <check> 
//      <loc> ( (unsigned int) TIM1_CR1 ) </loc>
//      <o.1..1> UDIS
//    </check>
//  </item>
//  


// --------------------------------  Field Item: TIM1_CR1_URS  ------------------------------------
// SVD Line: 13791

//  <item> SFDITEM_FIELD__TIM1_CR1_URS
//    <name> URS </name>
//    <rw> 
//    <i> [Bit 2] RW (@ 0x40012C00) Update request source </i>
//    <check> 
//      <loc> ( (unsigned int) TIM1_CR1 ) </loc>
//      <o.2..2> URS
//    </check>
//  </item>
//  


// --------------------------------  Field Item: TIM1_CR1_DIR  ------------------------------------
// SVD Line: 13797

//  <item> SFDITEM_FIELD__TIM1_CR1_DIR
//    <name> DIR </name>
//    <rw> 
//    <i> [Bit 4] RW (@ 0x40012C00) Direction </i>
//    <check> 
//      <loc> ( (unsigned int) TIM1_CR1 ) </loc>
//      <o.4..4> DIR
//    </check>
//  </item>
//  


// --------------------------------  Field Item: TIM1_CR1_CMS  ------------------------------------
// SVD Line: 13803

//  <item> SFDITEM_FIELD__TIM1_CR1_CMS
//    <name> CMS </name>
//    <rw> 
//    <i> [Bits 6..5] RW (@ 0x40012C00) Center-aligned mode  selection </i>
//    <edit> 
//      <loc> ( (unsigned char)((TIM1_CR1 >> 5) & 0x3), ((TIM1_CR1 = (TIM1_CR1 & ~(0x3UL << 5 )) | ((unsigned long)(Gui_u8:GuiVal & 0x3) << 5 ) ) )) </loc>
//    </edit>
//  </item>
//  


// --------------------------------  Field Item: TIM1_CR1_ARPE  -----------------------------------
// SVD Line: 13810

//  <item> SFDITEM_FIELD__TIM1_CR1_ARPE
//    <name> ARPE </name>
//    <rw> 
//    <i> [Bit 7] RW (@ 0x40012C00) Auto-reload preload enable </i>
//    <check> 
//      <loc> ( (unsigned int) TIM1_CR1 ) </loc>
//      <o.7..7> ARPE
//    </check>
//  </item>
//  


// --------------------------------  Field Item: TIM1_CR1_CKD  ------------------------------------
// SVD Line: 13816

//  <item> SFDITEM_FIELD__TIM1_CR1_CKD
//    <name> CKD </name>
//    <rw> 
//    <i> [Bits 9..8] RW (@ 0x40012C00) Clock division </i>
//    <edit> 
//      <loc> ( (unsigned char)((TIM1_CR1 >> 8) & 0x3), ((TIM1_CR1 = (TIM1_CR1 & ~(0x3UL << 8 )) | ((unsigned long)(Gui_u8:GuiVal & 0x3) << 8 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ------------------------------  Field Item: TIM1_CR1_UIFREMAP  ---------------------------------
// SVD Line: 13822

//  <item> SFDITEM_FIELD__TIM1_CR1_UIFREMAP
//    <name> UIFREMAP </name>
//    <rw> 
//    <i> [Bit 11] RW (@ 0x40012C00) UIF status bit remapping </i>
//    <check> 
//      <loc> ( (unsigned int) TIM1_CR1 ) </loc>
//      <o.11..11> UIFREMAP
//    </check>
//  </item>
//  


// --------------------------------  Register RTree: TIM1_CR1  ------------------------------------
// SVD Line: 13764

//  <rtree> SFDITEM_REG__TIM1_CR1
//    <name> CR1 </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x40012C00) control register 1 </i>
//    <loc> ( (unsigned int)((TIM1_CR1 >> 0) & 0xFFFFFFFF), ((TIM1_CR1 = (TIM1_CR1 & ~(0xBFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xBFF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__TIM1_CR1_CEN </item>
//    <item> SFDITEM_FIELD__TIM1_CR1_OPM </item>
//    <item> SFDITEM_FIELD__TIM1_CR1_UDIS </item>
//    <item> SFDITEM_FIELD__TIM1_CR1_URS </item>
//    <item> SFDITEM_FIELD__TIM1_CR1_DIR </item>
//    <item> SFDITEM_FIELD__TIM1_CR1_CMS </item>
//    <item> SFDITEM_FIELD__TIM1_CR1_ARPE </item>
//    <item> SFDITEM_FIELD__TIM1_CR1_CKD </item>
//    <item> SFDITEM_FIELD__TIM1_CR1_UIFREMAP </item>
//  </rtree>
//  


// -----------------------------  Register Item Address: TIM1_CR2  --------------------------------
// SVD Line: 13830

unsigned int TIM1_CR2 __AT (0x40012C04);



// --------------------------------  Field Item: TIM1_CR2_MMS2  -----------------------------------
// SVD Line: 13839

//  <item> SFDITEM_FIELD__TIM1_CR2_MMS2
//    <name> MMS2 </name>
//    <rw> 
//    <i> [Bits 23..20] RW (@ 0x40012C04) Master mode selection 2 </i>
//    <edit> 
//      <loc> ( (unsigned char)((TIM1_CR2 >> 20) & 0xF), ((TIM1_CR2 = (TIM1_CR2 & ~(0xFUL << 20 )) | ((unsigned long)(Gui_u8:GuiVal & 0xF) << 20 ) ) )) </loc>
//    </edit>
//  </item>
//  


// --------------------------------  Field Item: TIM1_CR2_OIS6  -----------------------------------
// SVD Line: 13845

//  <item> SFDITEM_FIELD__TIM1_CR2_OIS6
//    <name> OIS6 </name>
//    <rw> 
//    <i> [Bit 18] RW (@ 0x40012C04) Output Idle state 6 (OC6  output) </i>
//    <check> 
//      <loc> ( (unsigned int) TIM1_CR2 ) </loc>
//      <o.18..18> OIS6
//    </check>
//  </item>
//  


// --------------------------------  Field Item: TIM1_CR2_OIS5  -----------------------------------
// SVD Line: 13852

//  <item> SFDITEM_FIELD__TIM1_CR2_OIS5
//    <name> OIS5 </name>
//    <rw> 
//    <i> [Bit 16] RW (@ 0x40012C04) Output Idle state 5 (OC5  output) </i>
//    <check> 
//      <loc> ( (unsigned int) TIM1_CR2 ) </loc>
//      <o.16..16> OIS5
//    </check>
//  </item>
//  


// --------------------------------  Field Item: TIM1_CR2_OIS4  -----------------------------------
// SVD Line: 13859

//  <item> SFDITEM_FIELD__TIM1_CR2_OIS4
//    <name> OIS4 </name>
//    <rw> 
//    <i> [Bit 14] RW (@ 0x40012C04) Output Idle state 4 </i>
//    <check> 
//      <loc> ( (unsigned int) TIM1_CR2 ) </loc>
//      <o.14..14> OIS4
//    </check>
//  </item>
//  


// -------------------------------  Field Item: TIM1_CR2_OIS3N  -----------------------------------
// SVD Line: 13865

//  <item> SFDITEM_FIELD__TIM1_CR2_OIS3N
//    <name> OIS3N </name>
//    <rw> 
//    <i> [Bit 13] RW (@ 0x40012C04) Output Idle state 3 </i>
//    <check> 
//      <loc> ( (unsigned int) TIM1_CR2 ) </loc>
//      <o.13..13> OIS3N
//    </check>
//  </item>
//  


// --------------------------------  Field Item: TIM1_CR2_OIS3  -----------------------------------
// SVD Line: 13871

//  <item> SFDITEM_FIELD__TIM1_CR2_OIS3
//    <name> OIS3 </name>
//    <rw> 
//    <i> [Bit 12] RW (@ 0x40012C04) Output Idle state 3 </i>
//    <check> 
//      <loc> ( (unsigned int) TIM1_CR2 ) </loc>
//      <o.12..12> OIS3
//    </check>
//  </item>
//  


// -------------------------------  Field Item: TIM1_CR2_OIS2N  -----------------------------------
// SVD Line: 13877

//  <item> SFDITEM_FIELD__TIM1_CR2_OIS2N
//    <name> OIS2N </name>
//    <rw> 
//    <i> [Bit 11] RW (@ 0x40012C04) Output Idle state 2 </i>
//    <check> 
//      <loc> ( (unsigned int) TIM1_CR2 ) </loc>
//      <o.11..11> OIS2N
//    </check>
//  </item>
//  


// --------------------------------  Field Item: TIM1_CR2_OIS2  -----------------------------------
// SVD Line: 13883

//  <item> SFDITEM_FIELD__TIM1_CR2_OIS2
//    <name> OIS2 </name>
//    <rw> 
//    <i> [Bit 10] RW (@ 0x40012C04) Output Idle state 2 </i>
//    <check> 
//      <loc> ( (unsigned int) TIM1_CR2 ) </loc>
//      <o.10..10> OIS2
//    </check>
//  </item>
//  


// -------------------------------  Field Item: TIM1_CR2_OIS1N  -----------------------------------
// SVD Line: 13889

//  <item> SFDITEM_FIELD__TIM1_CR2_OIS1N
//    <name> OIS1N </name>
//    <rw> 
//    <i> [Bit 9] RW (@ 0x40012C04) Output Idle state 1 </i>
//    <check> 
//      <loc> ( (unsigned int) TIM1_CR2 ) </loc>
//      <o.9..9> OIS1N
//    </check>
//  </item>
//  


// --------------------------------  Field Item: TIM1_CR2_OIS1  -----------------------------------
// SVD Line: 13895

//  <item> SFDITEM_FIELD__TIM1_CR2_OIS1
//    <name> OIS1 </name>
//    <rw> 
//    <i> [Bit 8] RW (@ 0x40012C04) Output Idle state 1 </i>
//    <check> 
//      <loc> ( (unsigned int) TIM1_CR2 ) </loc>
//      <o.8..8> OIS1
//    </check>
//  </item>
//  


// --------------------------------  Field Item: TIM1_CR2_TI1S  -----------------------------------
// SVD Line: 13901

//  <item> SFDITEM_FIELD__TIM1_CR2_TI1S
//    <name> TI1S </name>
//    <rw> 
//    <i> [Bit 7] RW (@ 0x40012C04) TI1 selection </i>
//    <check> 
//      <loc> ( (unsigned int) TIM1_CR2 ) </loc>
//      <o.7..7> TI1S
//    </check>
//  </item>
//  


// --------------------------------  Field Item: TIM1_CR2_MMS  ------------------------------------
// SVD Line: 13907

//  <item> SFDITEM_FIELD__TIM1_CR2_MMS
//    <name> MMS </name>
//    <rw> 
//    <i> [Bits 6..4] RW (@ 0x40012C04) Master mode selection </i>
//    <edit> 
//      <loc> ( (unsigned char)((TIM1_CR2 >> 4) & 0x7), ((TIM1_CR2 = (TIM1_CR2 & ~(0x7UL << 4 )) | ((unsigned long)(Gui_u8:GuiVal & 0x7) << 4 ) ) )) </loc>
//    </edit>
//  </item>
//  


// --------------------------------  Field Item: TIM1_CR2_CCDS  -----------------------------------
// SVD Line: 13913

//  <item> SFDITEM_FIELD__TIM1_CR2_CCDS
//    <name> CCDS </name>
//    <rw> 
//    <i> [Bit 3] RW (@ 0x40012C04) Capture/compare DMA  selection </i>
//    <check> 
//      <loc> ( (unsigned int) TIM1_CR2 ) </loc>
//      <o.3..3> CCDS
//    </check>
//  </item>
//  


// --------------------------------  Field Item: TIM1_CR2_CCUS  -----------------------------------
// SVD Line: 13920

//  <item> SFDITEM_FIELD__TIM1_CR2_CCUS
//    <name> CCUS </name>
//    <rw> 
//    <i> [Bit 2] RW (@ 0x40012C04) Capture/compare control update  selection </i>
//    <check> 
//      <loc> ( (unsigned int) TIM1_CR2 ) </loc>
//      <o.2..2> CCUS
//    </check>
//  </item>
//  


// --------------------------------  Field Item: TIM1_CR2_CCPC  -----------------------------------
// SVD Line: 13927

//  <item> SFDITEM_FIELD__TIM1_CR2_CCPC
//    <name> CCPC </name>
//    <rw> 
//    <i> [Bit 0] RW (@ 0x40012C04) Capture/compare preloaded  control </i>
//    <check> 
//      <loc> ( (unsigned int) TIM1_CR2 ) </loc>
//      <o.0..0> CCPC
//    </check>
//  </item>
//  


// --------------------------------  Register RTree: TIM1_CR2  ------------------------------------
// SVD Line: 13830

//  <rtree> SFDITEM_REG__TIM1_CR2
//    <name> CR2 </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x40012C04) control register 2 </i>
//    <loc> ( (unsigned int)((TIM1_CR2 >> 0) & 0xFFFFFFFF), ((TIM1_CR2 = (TIM1_CR2 & ~(0xF57FFDUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xF57FFD) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__TIM1_CR2_MMS2 </item>
//    <item> SFDITEM_FIELD__TIM1_CR2_OIS6 </item>
//    <item> SFDITEM_FIELD__TIM1_CR2_OIS5 </item>
//    <item> SFDITEM_FIELD__TIM1_CR2_OIS4 </item>
//    <item> SFDITEM_FIELD__TIM1_CR2_OIS3N </item>
//    <item> SFDITEM_FIELD__TIM1_CR2_OIS3 </item>
//    <item> SFDITEM_FIELD__TIM1_CR2_OIS2N </item>
//    <item> SFDITEM_FIELD__TIM1_CR2_OIS2 </item>
//    <item> SFDITEM_FIELD__TIM1_CR2_OIS1N </item>
//    <item> SFDITEM_FIELD__TIM1_CR2_OIS1 </item>
//    <item> SFDITEM_FIELD__TIM1_CR2_TI1S </item>
//    <item> SFDITEM_FIELD__TIM1_CR2_MMS </item>
//    <item> SFDITEM_FIELD__TIM1_CR2_CCDS </item>
//    <item> SFDITEM_FIELD__TIM1_CR2_CCUS </item>
//    <item> SFDITEM_FIELD__TIM1_CR2_CCPC </item>
//  </rtree>
//  


// ----------------------------  Register Item Address: TIM1_SMCR  --------------------------------
// SVD Line: 13936

unsigned int TIM1_SMCR __AT (0x40012C08);



// --------------------------------  Field Item: TIM1_SMCR_SMS  -----------------------------------
// SVD Line: 13945

//  <item> SFDITEM_FIELD__TIM1_SMCR_SMS
//    <name> SMS </name>
//    <rw> 
//    <i> [Bits 2..0] RW (@ 0x40012C08) Slave mode selection </i>
//    <edit> 
//      <loc> ( (unsigned char)((TIM1_SMCR >> 0) & 0x7), ((TIM1_SMCR = (TIM1_SMCR & ~(0x7UL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0x7) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -------------------------------  Field Item: TIM1_SMCR_OCCS  -----------------------------------
// SVD Line: 13951

//  <item> SFDITEM_FIELD__TIM1_SMCR_OCCS
//    <name> OCCS </name>
//    <rw> 
//    <i> [Bit 3] RW (@ 0x40012C08) OCREF clear selection </i>
//    <check> 
//      <loc> ( (unsigned int) TIM1_SMCR ) </loc>
//      <o.3..3> OCCS
//    </check>
//  </item>
//  


// -------------------------------  Field Item: TIM1_SMCR_TS_4  -----------------------------------
// SVD Line: 13957

//  <item> SFDITEM_FIELD__TIM1_SMCR_TS_4
//    <name> TS_4 </name>
//    <rw> 
//    <i> [Bits 6..4] RW (@ 0x40012C08) Trigger selection </i>
//    <edit> 
//      <loc> ( (unsigned char)((TIM1_SMCR >> 4) & 0x7), ((TIM1_SMCR = (TIM1_SMCR & ~(0x7UL << 4 )) | ((unsigned long)(Gui_u8:GuiVal & 0x7) << 4 ) ) )) </loc>
//    </edit>
//  </item>
//  


// --------------------------------  Field Item: TIM1_SMCR_MSM  -----------------------------------
// SVD Line: 13963

//  <item> SFDITEM_FIELD__TIM1_SMCR_MSM
//    <name> MSM </name>
//    <rw> 
//    <i> [Bit 7] RW (@ 0x40012C08) Master/Slave mode </i>
//    <check> 
//      <loc> ( (unsigned int) TIM1_SMCR ) </loc>
//      <o.7..7> MSM
//    </check>
//  </item>
//  


// --------------------------------  Field Item: TIM1_SMCR_ETF  -----------------------------------
// SVD Line: 13969

//  <item> SFDITEM_FIELD__TIM1_SMCR_ETF
//    <name> ETF </name>
//    <rw> 
//    <i> [Bits 11..8] RW (@ 0x40012C08) External trigger filter </i>
//    <edit> 
//      <loc> ( (unsigned char)((TIM1_SMCR >> 8) & 0xF), ((TIM1_SMCR = (TIM1_SMCR & ~(0xFUL << 8 )) | ((unsigned long)(Gui_u8:GuiVal & 0xF) << 8 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -------------------------------  Field Item: TIM1_SMCR_ETPS  -----------------------------------
// SVD Line: 13975

//  <item> SFDITEM_FIELD__TIM1_SMCR_ETPS
//    <name> ETPS </name>
//    <rw> 
//    <i> [Bits 13..12] RW (@ 0x40012C08) External trigger prescaler </i>
//    <edit> 
//      <loc> ( (unsigned char)((TIM1_SMCR >> 12) & 0x3), ((TIM1_SMCR = (TIM1_SMCR & ~(0x3UL << 12 )) | ((unsigned long)(Gui_u8:GuiVal & 0x3) << 12 ) ) )) </loc>
//    </edit>
//  </item>
//  


// --------------------------------  Field Item: TIM1_SMCR_ECE  -----------------------------------
// SVD Line: 13981

//  <item> SFDITEM_FIELD__TIM1_SMCR_ECE
//    <name> ECE </name>
//    <rw> 
//    <i> [Bit 14] RW (@ 0x40012C08) External clock enable </i>
//    <check> 
//      <loc> ( (unsigned int) TIM1_SMCR ) </loc>
//      <o.14..14> ECE
//    </check>
//  </item>
//  


// --------------------------------  Field Item: TIM1_SMCR_ETP  -----------------------------------
// SVD Line: 13987

//  <item> SFDITEM_FIELD__TIM1_SMCR_ETP
//    <name> ETP </name>
//    <rw> 
//    <i> [Bit 15] RW (@ 0x40012C08) External trigger polarity </i>
//    <check> 
//      <loc> ( (unsigned int) TIM1_SMCR ) </loc>
//      <o.15..15> ETP
//    </check>
//  </item>
//  


// -------------------------------  Field Item: TIM1_SMCR_SMS_3  ----------------------------------
// SVD Line: 13993

//  <item> SFDITEM_FIELD__TIM1_SMCR_SMS_3
//    <name> SMS_3 </name>
//    <rw> 
//    <i> [Bit 16] RW (@ 0x40012C08) Slave mode selection - bit  3 </i>
//    <check> 
//      <loc> ( (unsigned int) TIM1_SMCR ) </loc>
//      <o.16..16> SMS_3
//    </check>
//  </item>
//  


// --------------------------------  Field Item: TIM1_SMCR_TS  ------------------------------------
// SVD Line: 14000

//  <item> SFDITEM_FIELD__TIM1_SMCR_TS
//    <name> TS </name>
//    <rw> 
//    <i> [Bits 21..20] RW (@ 0x40012C08) Trigger selection </i>
//    <edit> 
//      <loc> ( (unsigned char)((TIM1_SMCR >> 20) & 0x3), ((TIM1_SMCR = (TIM1_SMCR & ~(0x3UL << 20 )) | ((unsigned long)(Gui_u8:GuiVal & 0x3) << 20 ) ) )) </loc>
//    </edit>
//  </item>
//  


// --------------------------------  Register RTree: TIM1_SMCR  -----------------------------------
// SVD Line: 13936

//  <rtree> SFDITEM_REG__TIM1_SMCR
//    <name> SMCR </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x40012C08) slave mode control register </i>
//    <loc> ( (unsigned int)((TIM1_SMCR >> 0) & 0xFFFFFFFF), ((TIM1_SMCR = (TIM1_SMCR & ~(0x31FFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0x31FFFF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__TIM1_SMCR_SMS </item>
//    <item> SFDITEM_FIELD__TIM1_SMCR_OCCS </item>
//    <item> SFDITEM_FIELD__TIM1_SMCR_TS_4 </item>
//    <item> SFDITEM_FIELD__TIM1_SMCR_MSM </item>
//    <item> SFDITEM_FIELD__TIM1_SMCR_ETF </item>
//    <item> SFDITEM_FIELD__TIM1_SMCR_ETPS </item>
//    <item> SFDITEM_FIELD__TIM1_SMCR_ECE </item>
//    <item> SFDITEM_FIELD__TIM1_SMCR_ETP </item>
//    <item> SFDITEM_FIELD__TIM1_SMCR_SMS_3 </item>
//    <item> SFDITEM_FIELD__TIM1_SMCR_TS </item>
//  </rtree>
//  


// ----------------------------  Register Item Address: TIM1_DIER  --------------------------------
// SVD Line: 14008

unsigned int TIM1_DIER __AT (0x40012C0C);



// --------------------------------  Field Item: TIM1_DIER_UIE  -----------------------------------
// SVD Line: 14017

//  <item> SFDITEM_FIELD__TIM1_DIER_UIE
//    <name> UIE </name>
//    <rw> 
//    <i> [Bit 0] RW (@ 0x40012C0C) Update interrupt enable </i>
//    <check> 
//      <loc> ( (unsigned int) TIM1_DIER ) </loc>
//      <o.0..0> UIE
//    </check>
//  </item>
//  


// -------------------------------  Field Item: TIM1_DIER_CC1IE  ----------------------------------
// SVD Line: 14023

//  <item> SFDITEM_FIELD__TIM1_DIER_CC1IE
//    <name> CC1IE </name>
//    <rw> 
//    <i> [Bit 1] RW (@ 0x40012C0C) Capture/Compare 1 interrupt  enable </i>
//    <check> 
//      <loc> ( (unsigned int) TIM1_DIER ) </loc>
//      <o.1..1> CC1IE
//    </check>
//  </item>
//  


// -------------------------------  Field Item: TIM1_DIER_CC2IE  ----------------------------------
// SVD Line: 14030

//  <item> SFDITEM_FIELD__TIM1_DIER_CC2IE
//    <name> CC2IE </name>
//    <rw> 
//    <i> [Bit 2] RW (@ 0x40012C0C) Capture/Compare 2 interrupt  enable </i>
//    <check> 
//      <loc> ( (unsigned int) TIM1_DIER ) </loc>
//      <o.2..2> CC2IE
//    </check>
//  </item>
//  


// -------------------------------  Field Item: TIM1_DIER_CC3IE  ----------------------------------
// SVD Line: 14037

//  <item> SFDITEM_FIELD__TIM1_DIER_CC3IE
//    <name> CC3IE </name>
//    <rw> 
//    <i> [Bit 3] RW (@ 0x40012C0C) Capture/Compare 3 interrupt  enable </i>
//    <check> 
//      <loc> ( (unsigned int) TIM1_DIER ) </loc>
//      <o.3..3> CC3IE
//    </check>
//  </item>
//  


// -------------------------------  Field Item: TIM1_DIER_CC4IE  ----------------------------------
// SVD Line: 14044

//  <item> SFDITEM_FIELD__TIM1_DIER_CC4IE
//    <name> CC4IE </name>
//    <rw> 
//    <i> [Bit 4] RW (@ 0x40012C0C) Capture/Compare 4 interrupt  enable </i>
//    <check> 
//      <loc> ( (unsigned int) TIM1_DIER ) </loc>
//      <o.4..4> CC4IE
//    </check>
//  </item>
//  


// -------------------------------  Field Item: TIM1_DIER_COMIE  ----------------------------------
// SVD Line: 14051

//  <item> SFDITEM_FIELD__TIM1_DIER_COMIE
//    <name> COMIE </name>
//    <rw> 
//    <i> [Bit 5] RW (@ 0x40012C0C) COM interrupt enable </i>
//    <check> 
//      <loc> ( (unsigned int) TIM1_DIER ) </loc>
//      <o.5..5> COMIE
//    </check>
//  </item>
//  


// --------------------------------  Field Item: TIM1_DIER_TIE  -----------------------------------
// SVD Line: 14057

//  <item> SFDITEM_FIELD__TIM1_DIER_TIE
//    <name> TIE </name>
//    <rw> 
//    <i> [Bit 6] RW (@ 0x40012C0C) Trigger interrupt enable </i>
//    <check> 
//      <loc> ( (unsigned int) TIM1_DIER ) </loc>
//      <o.6..6> TIE
//    </check>
//  </item>
//  


// --------------------------------  Field Item: TIM1_DIER_BIE  -----------------------------------
// SVD Line: 14063

//  <item> SFDITEM_FIELD__TIM1_DIER_BIE
//    <name> BIE </name>
//    <rw> 
//    <i> [Bit 7] RW (@ 0x40012C0C) Break interrupt enable </i>
//    <check> 
//      <loc> ( (unsigned int) TIM1_DIER ) </loc>
//      <o.7..7> BIE
//    </check>
//  </item>
//  


// --------------------------------  Field Item: TIM1_DIER_UDE  -----------------------------------
// SVD Line: 14069

//  <item> SFDITEM_FIELD__TIM1_DIER_UDE
//    <name> UDE </name>
//    <rw> 
//    <i> [Bit 8] RW (@ 0x40012C0C) Update DMA request enable </i>
//    <check> 
//      <loc> ( (unsigned int) TIM1_DIER ) </loc>
//      <o.8..8> UDE
//    </check>
//  </item>
//  


// -------------------------------  Field Item: TIM1_DIER_CC1DE  ----------------------------------
// SVD Line: 14075

//  <item> SFDITEM_FIELD__TIM1_DIER_CC1DE
//    <name> CC1DE </name>
//    <rw> 
//    <i> [Bit 9] RW (@ 0x40012C0C) Capture/Compare 1 DMA request  enable </i>
//    <check> 
//      <loc> ( (unsigned int) TIM1_DIER ) </loc>
//      <o.9..9> CC1DE
//    </check>
//  </item>
//  


// -------------------------------  Field Item: TIM1_DIER_CC2DE  ----------------------------------
// SVD Line: 14082

//  <item> SFDITEM_FIELD__TIM1_DIER_CC2DE
//    <name> CC2DE </name>
//    <rw> 
//    <i> [Bit 10] RW (@ 0x40012C0C) Capture/Compare 2 DMA request  enable </i>
//    <check> 
//      <loc> ( (unsigned int) TIM1_DIER ) </loc>
//      <o.10..10> CC2DE
//    </check>
//  </item>
//  


// -------------------------------  Field Item: TIM1_DIER_CC3DE  ----------------------------------
// SVD Line: 14089

//  <item> SFDITEM_FIELD__TIM1_DIER_CC3DE
//    <name> CC3DE </name>
//    <rw> 
//    <i> [Bit 11] RW (@ 0x40012C0C) Capture/Compare 3 DMA request  enable </i>
//    <check> 
//      <loc> ( (unsigned int) TIM1_DIER ) </loc>
//      <o.11..11> CC3DE
//    </check>
//  </item>
//  


// -------------------------------  Field Item: TIM1_DIER_CC4DE  ----------------------------------
// SVD Line: 14096

//  <item> SFDITEM_FIELD__TIM1_DIER_CC4DE
//    <name> CC4DE </name>
//    <rw> 
//    <i> [Bit 12] RW (@ 0x40012C0C) Capture/Compare 4 DMA request  enable </i>
//    <check> 
//      <loc> ( (unsigned int) TIM1_DIER ) </loc>
//      <o.12..12> CC4DE
//    </check>
//  </item>
//  


// -------------------------------  Field Item: TIM1_DIER_COMDE  ----------------------------------
// SVD Line: 14103

//  <item> SFDITEM_FIELD__TIM1_DIER_COMDE
//    <name> COMDE </name>
//    <rw> 
//    <i> [Bit 13] RW (@ 0x40012C0C) COM DMA request enable </i>
//    <check> 
//      <loc> ( (unsigned int) TIM1_DIER ) </loc>
//      <o.13..13> COMDE
//    </check>
//  </item>
//  


// --------------------------------  Field Item: TIM1_DIER_TDE  -----------------------------------
// SVD Line: 14109

//  <item> SFDITEM_FIELD__TIM1_DIER_TDE
//    <name> TDE </name>
//    <rw> 
//    <i> [Bit 14] RW (@ 0x40012C0C) Trigger DMA request enable </i>
//    <check> 
//      <loc> ( (unsigned int) TIM1_DIER ) </loc>
//      <o.14..14> TDE
//    </check>
//  </item>
//  


// --------------------------------  Register RTree: TIM1_DIER  -----------------------------------
// SVD Line: 14008

//  <rtree> SFDITEM_REG__TIM1_DIER
//    <name> DIER </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x40012C0C) DMA/Interrupt enable register </i>
//    <loc> ( (unsigned int)((TIM1_DIER >> 0) & 0xFFFFFFFF), ((TIM1_DIER = (TIM1_DIER & ~(0x7FFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0x7FFF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__TIM1_DIER_UIE </item>
//    <item> SFDITEM_FIELD__TIM1_DIER_CC1IE </item>
//    <item> SFDITEM_FIELD__TIM1_DIER_CC2IE </item>
//    <item> SFDITEM_FIELD__TIM1_DIER_CC3IE </item>
//    <item> SFDITEM_FIELD__TIM1_DIER_CC4IE </item>
//    <item> SFDITEM_FIELD__TIM1_DIER_COMIE </item>
//    <item> SFDITEM_FIELD__TIM1_DIER_TIE </item>
//    <item> SFDITEM_FIELD__TIM1_DIER_BIE </item>
//    <item> SFDITEM_FIELD__TIM1_DIER_UDE </item>
//    <item> SFDITEM_FIELD__TIM1_DIER_CC1DE </item>
//    <item> SFDITEM_FIELD__TIM1_DIER_CC2DE </item>
//    <item> SFDITEM_FIELD__TIM1_DIER_CC3DE </item>
//    <item> SFDITEM_FIELD__TIM1_DIER_CC4DE </item>
//    <item> SFDITEM_FIELD__TIM1_DIER_COMDE </item>
//    <item> SFDITEM_FIELD__TIM1_DIER_TDE </item>
//  </rtree>
//  


// -----------------------------  Register Item Address: TIM1_SR  ---------------------------------
// SVD Line: 14117

unsigned int TIM1_SR __AT (0x40012C10);



// ---------------------------------  Field Item: TIM1_SR_UIF  ------------------------------------
// SVD Line: 14126

//  <item> SFDITEM_FIELD__TIM1_SR_UIF
//    <name> UIF </name>
//    <rw> 
//    <i> [Bit 0] RW (@ 0x40012C10) Update interrupt flag </i>
//    <check> 
//      <loc> ( (unsigned int) TIM1_SR ) </loc>
//      <o.0..0> UIF
//    </check>
//  </item>
//  


// --------------------------------  Field Item: TIM1_SR_CC1IF  -----------------------------------
// SVD Line: 14132

//  <item> SFDITEM_FIELD__TIM1_SR_CC1IF
//    <name> CC1IF </name>
//    <rw> 
//    <i> [Bit 1] RW (@ 0x40012C10) Capture/compare 1 interrupt  flag </i>
//    <check> 
//      <loc> ( (unsigned int) TIM1_SR ) </loc>
//      <o.1..1> CC1IF
//    </check>
//  </item>
//  


// --------------------------------  Field Item: TIM1_SR_CC2IF  -----------------------------------
// SVD Line: 14139

//  <item> SFDITEM_FIELD__TIM1_SR_CC2IF
//    <name> CC2IF </name>
//    <rw> 
//    <i> [Bit 2] RW (@ 0x40012C10) Capture/Compare 2 interrupt  flag </i>
//    <check> 
//      <loc> ( (unsigned int) TIM1_SR ) </loc>
//      <o.2..2> CC2IF
//    </check>
//  </item>
//  


// --------------------------------  Field Item: TIM1_SR_CC3IF  -----------------------------------
// SVD Line: 14146

//  <item> SFDITEM_FIELD__TIM1_SR_CC3IF
//    <name> CC3IF </name>
//    <rw> 
//    <i> [Bit 3] RW (@ 0x40012C10) Capture/Compare 3 interrupt  flag </i>
//    <check> 
//      <loc> ( (unsigned int) TIM1_SR ) </loc>
//      <o.3..3> CC3IF
//    </check>
//  </item>
//  


// --------------------------------  Field Item: TIM1_SR_CC4IF  -----------------------------------
// SVD Line: 14153

//  <item> SFDITEM_FIELD__TIM1_SR_CC4IF
//    <name> CC4IF </name>
//    <rw> 
//    <i> [Bit 4] RW (@ 0x40012C10) Capture/Compare 4 interrupt  flag </i>
//    <check> 
//      <loc> ( (unsigned int) TIM1_SR ) </loc>
//      <o.4..4> CC4IF
//    </check>
//  </item>
//  


// --------------------------------  Field Item: TIM1_SR_COMIF  -----------------------------------
// SVD Line: 14160

//  <item> SFDITEM_FIELD__TIM1_SR_COMIF
//    <name> COMIF </name>
//    <rw> 
//    <i> [Bit 5] RW (@ 0x40012C10) COM interrupt flag </i>
//    <check> 
//      <loc> ( (unsigned int) TIM1_SR ) </loc>
//      <o.5..5> COMIF
//    </check>
//  </item>
//  


// ---------------------------------  Field Item: TIM1_SR_TIF  ------------------------------------
// SVD Line: 14166

//  <item> SFDITEM_FIELD__TIM1_SR_TIF
//    <name> TIF </name>
//    <rw> 
//    <i> [Bit 6] RW (@ 0x40012C10) Trigger interrupt flag </i>
//    <check> 
//      <loc> ( (unsigned int) TIM1_SR ) </loc>
//      <o.6..6> TIF
//    </check>
//  </item>
//  


// ---------------------------------  Field Item: TIM1_SR_BIF  ------------------------------------
// SVD Line: 14172

//  <item> SFDITEM_FIELD__TIM1_SR_BIF
//    <name> BIF </name>
//    <rw> 
//    <i> [Bit 7] RW (@ 0x40012C10) Break interrupt flag </i>
//    <check> 
//      <loc> ( (unsigned int) TIM1_SR ) </loc>
//      <o.7..7> BIF
//    </check>
//  </item>
//  


// --------------------------------  Field Item: TIM1_SR_B2IF  ------------------------------------
// SVD Line: 14178

//  <item> SFDITEM_FIELD__TIM1_SR_B2IF
//    <name> B2IF </name>
//    <rw> 
//    <i> [Bit 8] RW (@ 0x40012C10) Break 2 interrupt flag </i>
//    <check> 
//      <loc> ( (unsigned int) TIM1_SR ) </loc>
//      <o.8..8> B2IF
//    </check>
//  </item>
//  


// --------------------------------  Field Item: TIM1_SR_CC1OF  -----------------------------------
// SVD Line: 14184

//  <item> SFDITEM_FIELD__TIM1_SR_CC1OF
//    <name> CC1OF </name>
//    <rw> 
//    <i> [Bit 9] RW (@ 0x40012C10) Capture/Compare 1 overcapture  flag </i>
//    <check> 
//      <loc> ( (unsigned int) TIM1_SR ) </loc>
//      <o.9..9> CC1OF
//    </check>
//  </item>
//  


// --------------------------------  Field Item: TIM1_SR_CC2OF  -----------------------------------
// SVD Line: 14191

//  <item> SFDITEM_FIELD__TIM1_SR_CC2OF
//    <name> CC2OF </name>
//    <rw> 
//    <i> [Bit 10] RW (@ 0x40012C10) Capture/compare 2 overcapture  flag </i>
//    <check> 
//      <loc> ( (unsigned int) TIM1_SR ) </loc>
//      <o.10..10> CC2OF
//    </check>
//  </item>
//  


// --------------------------------  Field Item: TIM1_SR_CC3OF  -----------------------------------
// SVD Line: 14198

//  <item> SFDITEM_FIELD__TIM1_SR_CC3OF
//    <name> CC3OF </name>
//    <rw> 
//    <i> [Bit 11] RW (@ 0x40012C10) Capture/Compare 3 overcapture  flag </i>
//    <check> 
//      <loc> ( (unsigned int) TIM1_SR ) </loc>
//      <o.11..11> CC3OF
//    </check>
//  </item>
//  


// --------------------------------  Field Item: TIM1_SR_CC4OF  -----------------------------------
// SVD Line: 14205

//  <item> SFDITEM_FIELD__TIM1_SR_CC4OF
//    <name> CC4OF </name>
//    <rw> 
//    <i> [Bit 12] RW (@ 0x40012C10) Capture/Compare 4 overcapture  flag </i>
//    <check> 
//      <loc> ( (unsigned int) TIM1_SR ) </loc>
//      <o.12..12> CC4OF
//    </check>
//  </item>
//  


// --------------------------------  Field Item: TIM1_SR_SBIF  ------------------------------------
// SVD Line: 14212

//  <item> SFDITEM_FIELD__TIM1_SR_SBIF
//    <name> SBIF </name>
//    <rw> 
//    <i> [Bit 13] RW (@ 0x40012C10) System Break interrupt  flag </i>
//    <check> 
//      <loc> ( (unsigned int) TIM1_SR ) </loc>
//      <o.13..13> SBIF
//    </check>
//  </item>
//  


// --------------------------------  Field Item: TIM1_SR_CC5IF  -----------------------------------
// SVD Line: 14219

//  <item> SFDITEM_FIELD__TIM1_SR_CC5IF
//    <name> CC5IF </name>
//    <rw> 
//    <i> [Bit 16] RW (@ 0x40012C10) Compare 5 interrupt flag </i>
//    <check> 
//      <loc> ( (unsigned int) TIM1_SR ) </loc>
//      <o.16..16> CC5IF
//    </check>
//  </item>
//  


// --------------------------------  Field Item: TIM1_SR_CC6IF  -----------------------------------
// SVD Line: 14225

//  <item> SFDITEM_FIELD__TIM1_SR_CC6IF
//    <name> CC6IF </name>
//    <rw> 
//    <i> [Bit 17] RW (@ 0x40012C10) Compare 6 interrupt flag </i>
//    <check> 
//      <loc> ( (unsigned int) TIM1_SR ) </loc>
//      <o.17..17> CC6IF
//    </check>
//  </item>
//  


// ---------------------------------  Register RTree: TIM1_SR  ------------------------------------
// SVD Line: 14117

//  <rtree> SFDITEM_REG__TIM1_SR
//    <name> SR </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x40012C10) status register </i>
//    <loc> ( (unsigned int)((TIM1_SR >> 0) & 0xFFFFFFFF), ((TIM1_SR = (TIM1_SR & ~(0x33FFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0x33FFF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__TIM1_SR_UIF </item>
//    <item> SFDITEM_FIELD__TIM1_SR_CC1IF </item>
//    <item> SFDITEM_FIELD__TIM1_SR_CC2IF </item>
//    <item> SFDITEM_FIELD__TIM1_SR_CC3IF </item>
//    <item> SFDITEM_FIELD__TIM1_SR_CC4IF </item>
//    <item> SFDITEM_FIELD__TIM1_SR_COMIF </item>
//    <item> SFDITEM_FIELD__TIM1_SR_TIF </item>
//    <item> SFDITEM_FIELD__TIM1_SR_BIF </item>
//    <item> SFDITEM_FIELD__TIM1_SR_B2IF </item>
//    <item> SFDITEM_FIELD__TIM1_SR_CC1OF </item>
//    <item> SFDITEM_FIELD__TIM1_SR_CC2OF </item>
//    <item> SFDITEM_FIELD__TIM1_SR_CC3OF </item>
//    <item> SFDITEM_FIELD__TIM1_SR_CC4OF </item>
//    <item> SFDITEM_FIELD__TIM1_SR_SBIF </item>
//    <item> SFDITEM_FIELD__TIM1_SR_CC5IF </item>
//    <item> SFDITEM_FIELD__TIM1_SR_CC6IF </item>
//  </rtree>
//  


// -----------------------------  Register Item Address: TIM1_EGR  --------------------------------
// SVD Line: 14233

unsigned int TIM1_EGR __AT (0x40012C14);



// ---------------------------------  Field Item: TIM1_EGR_UG  ------------------------------------
// SVD Line: 14242

//  <item> SFDITEM_FIELD__TIM1_EGR_UG
//    <name> UG </name>
//    <w> 
//    <i> [Bit 0] WO (@ 0x40012C14) Update generation </i>
//    <check> 
//      <loc> ( (unsigned int) TIM1_EGR ) </loc>
//      <o.0..0> UG
//    </check>
//  </item>
//  


// --------------------------------  Field Item: TIM1_EGR_CC1G  -----------------------------------
// SVD Line: 14248

//  <item> SFDITEM_FIELD__TIM1_EGR_CC1G
//    <name> CC1G </name>
//    <w> 
//    <i> [Bit 1] WO (@ 0x40012C14) Capture/compare 1  generation </i>
//    <check> 
//      <loc> ( (unsigned int) TIM1_EGR ) </loc>
//      <o.1..1> CC1G
//    </check>
//  </item>
//  


// --------------------------------  Field Item: TIM1_EGR_CC2G  -----------------------------------
// SVD Line: 14255

//  <item> SFDITEM_FIELD__TIM1_EGR_CC2G
//    <name> CC2G </name>
//    <w> 
//    <i> [Bit 2] WO (@ 0x40012C14) Capture/compare 2  generation </i>
//    <check> 
//      <loc> ( (unsigned int) TIM1_EGR ) </loc>
//      <o.2..2> CC2G
//    </check>
//  </item>
//  


// --------------------------------  Field Item: TIM1_EGR_CC3G  -----------------------------------
// SVD Line: 14262

//  <item> SFDITEM_FIELD__TIM1_EGR_CC3G
//    <name> CC3G </name>
//    <w> 
//    <i> [Bit 3] WO (@ 0x40012C14) Capture/compare 3  generation </i>
//    <check> 
//      <loc> ( (unsigned int) TIM1_EGR ) </loc>
//      <o.3..3> CC3G
//    </check>
//  </item>
//  


// --------------------------------  Field Item: TIM1_EGR_CC4G  -----------------------------------
// SVD Line: 14269

//  <item> SFDITEM_FIELD__TIM1_EGR_CC4G
//    <name> CC4G </name>
//    <w> 
//    <i> [Bit 4] WO (@ 0x40012C14) Capture/compare 4  generation </i>
//    <check> 
//      <loc> ( (unsigned int) TIM1_EGR ) </loc>
//      <o.4..4> CC4G
//    </check>
//  </item>
//  


// --------------------------------  Field Item: TIM1_EGR_COMG  -----------------------------------
// SVD Line: 14276

//  <item> SFDITEM_FIELD__TIM1_EGR_COMG
//    <name> COMG </name>
//    <w> 
//    <i> [Bit 5] WO (@ 0x40012C14) Capture/Compare control update  generation </i>
//    <check> 
//      <loc> ( (unsigned int) TIM1_EGR ) </loc>
//      <o.5..5> COMG
//    </check>
//  </item>
//  


// ---------------------------------  Field Item: TIM1_EGR_TG  ------------------------------------
// SVD Line: 14283

//  <item> SFDITEM_FIELD__TIM1_EGR_TG
//    <name> TG </name>
//    <w> 
//    <i> [Bit 6] WO (@ 0x40012C14) Trigger generation </i>
//    <check> 
//      <loc> ( (unsigned int) TIM1_EGR ) </loc>
//      <o.6..6> TG
//    </check>
//  </item>
//  


// ---------------------------------  Field Item: TIM1_EGR_BG  ------------------------------------
// SVD Line: 14289

//  <item> SFDITEM_FIELD__TIM1_EGR_BG
//    <name> BG </name>
//    <w> 
//    <i> [Bit 7] WO (@ 0x40012C14) Break generation </i>
//    <check> 
//      <loc> ( (unsigned int) TIM1_EGR ) </loc>
//      <o.7..7> BG
//    </check>
//  </item>
//  


// --------------------------------  Field Item: TIM1_EGR_B2G  ------------------------------------
// SVD Line: 14295

//  <item> SFDITEM_FIELD__TIM1_EGR_B2G
//    <name> B2G </name>
//    <w> 
//    <i> [Bit 8] WO (@ 0x40012C14) Break 2 generation </i>
//    <check> 
//      <loc> ( (unsigned int) TIM1_EGR ) </loc>
//      <o.8..8> B2G
//    </check>
//  </item>
//  


// --------------------------------  Register RTree: TIM1_EGR  ------------------------------------
// SVD Line: 14233

//  <rtree> SFDITEM_REG__TIM1_EGR
//    <name> EGR </name>
//    <w> 
//    <i> [Bits 31..0] WO (@ 0x40012C14) event generation register </i>
//    <loc> ( (unsigned int)((TIM1_EGR >> 0) & 0xFFFFFFFF), ((TIM1_EGR = (TIM1_EGR & ~(0x1FFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0x1FF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__TIM1_EGR_UG </item>
//    <item> SFDITEM_FIELD__TIM1_EGR_CC1G </item>
//    <item> SFDITEM_FIELD__TIM1_EGR_CC2G </item>
//    <item> SFDITEM_FIELD__TIM1_EGR_CC3G </item>
//    <item> SFDITEM_FIELD__TIM1_EGR_CC4G </item>
//    <item> SFDITEM_FIELD__TIM1_EGR_COMG </item>
//    <item> SFDITEM_FIELD__TIM1_EGR_TG </item>
//    <item> SFDITEM_FIELD__TIM1_EGR_BG </item>
//    <item> SFDITEM_FIELD__TIM1_EGR_B2G </item>
//  </rtree>
//  


// ------------------------  Register Item Address: TIM1_CCMR1_Output  ----------------------------
// SVD Line: 14303

unsigned int TIM1_CCMR1_Output __AT (0x40012C18);



// ---------------------------  Field Item: TIM1_CCMR1_Output_CC1S  -------------------------------
// SVD Line: 14313

//  <item> SFDITEM_FIELD__TIM1_CCMR1_Output_CC1S
//    <name> CC1S </name>
//    <rw> 
//    <i> [Bits 1..0] RW (@ 0x40012C18) Capture/Compare 1  selection </i>
//    <edit> 
//      <loc> ( (unsigned char)((TIM1_CCMR1_Output >> 0) & 0x3), ((TIM1_CCMR1_Output = (TIM1_CCMR1_Output & ~(0x3UL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0x3) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ---------------------------  Field Item: TIM1_CCMR1_Output_OC1FE  ------------------------------
// SVD Line: 14320

//  <item> SFDITEM_FIELD__TIM1_CCMR1_Output_OC1FE
//    <name> OC1FE </name>
//    <rw> 
//    <i> [Bit 2] RW (@ 0x40012C18) Output Compare 1 fast  enable </i>
//    <check> 
//      <loc> ( (unsigned int) TIM1_CCMR1_Output ) </loc>
//      <o.2..2> OC1FE
//    </check>
//  </item>
//  


// ---------------------------  Field Item: TIM1_CCMR1_Output_OC1PE  ------------------------------
// SVD Line: 14327

//  <item> SFDITEM_FIELD__TIM1_CCMR1_Output_OC1PE
//    <name> OC1PE </name>
//    <rw> 
//    <i> [Bit 3] RW (@ 0x40012C18) Output Compare 1 preload  enable </i>
//    <check> 
//      <loc> ( (unsigned int) TIM1_CCMR1_Output ) </loc>
//      <o.3..3> OC1PE
//    </check>
//  </item>
//  


// ---------------------------  Field Item: TIM1_CCMR1_Output_OC1M  -------------------------------
// SVD Line: 14334

//  <item> SFDITEM_FIELD__TIM1_CCMR1_Output_OC1M
//    <name> OC1M </name>
//    <rw> 
//    <i> [Bits 6..4] RW (@ 0x40012C18) Output Compare 1 mode </i>
//    <edit> 
//      <loc> ( (unsigned char)((TIM1_CCMR1_Output >> 4) & 0x7), ((TIM1_CCMR1_Output = (TIM1_CCMR1_Output & ~(0x7UL << 4 )) | ((unsigned long)(Gui_u8:GuiVal & 0x7) << 4 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ---------------------------  Field Item: TIM1_CCMR1_Output_OC1CE  ------------------------------
// SVD Line: 14340

//  <item> SFDITEM_FIELD__TIM1_CCMR1_Output_OC1CE
//    <name> OC1CE </name>
//    <rw> 
//    <i> [Bit 7] RW (@ 0x40012C18) Output Compare 1 clear  enable </i>
//    <check> 
//      <loc> ( (unsigned int) TIM1_CCMR1_Output ) </loc>
//      <o.7..7> OC1CE
//    </check>
//  </item>
//  


// ---------------------------  Field Item: TIM1_CCMR1_Output_CC2S  -------------------------------
// SVD Line: 14347

//  <item> SFDITEM_FIELD__TIM1_CCMR1_Output_CC2S
//    <name> CC2S </name>
//    <rw> 
//    <i> [Bits 9..8] RW (@ 0x40012C18) Capture/Compare 2  selection </i>
//    <edit> 
//      <loc> ( (unsigned char)((TIM1_CCMR1_Output >> 8) & 0x3), ((TIM1_CCMR1_Output = (TIM1_CCMR1_Output & ~(0x3UL << 8 )) | ((unsigned long)(Gui_u8:GuiVal & 0x3) << 8 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ---------------------------  Field Item: TIM1_CCMR1_Output_OC2FE  ------------------------------
// SVD Line: 14354

//  <item> SFDITEM_FIELD__TIM1_CCMR1_Output_OC2FE
//    <name> OC2FE </name>
//    <rw> 
//    <i> [Bit 10] RW (@ 0x40012C18) Output Compare 2 fast  enable </i>
//    <check> 
//      <loc> ( (unsigned int) TIM1_CCMR1_Output ) </loc>
//      <o.10..10> OC2FE
//    </check>
//  </item>
//  


// ---------------------------  Field Item: TIM1_CCMR1_Output_OC2PE  ------------------------------
// SVD Line: 14361

//  <item> SFDITEM_FIELD__TIM1_CCMR1_Output_OC2PE
//    <name> OC2PE </name>
//    <rw> 
//    <i> [Bit 11] RW (@ 0x40012C18) Output Compare 2 preload  enable </i>
//    <check> 
//      <loc> ( (unsigned int) TIM1_CCMR1_Output ) </loc>
//      <o.11..11> OC2PE
//    </check>
//  </item>
//  


// ---------------------------  Field Item: TIM1_CCMR1_Output_OC2M  -------------------------------
// SVD Line: 14368

//  <item> SFDITEM_FIELD__TIM1_CCMR1_Output_OC2M
//    <name> OC2M </name>
//    <rw> 
//    <i> [Bits 14..12] RW (@ 0x40012C18) Output Compare 2 mode </i>
//    <edit> 
//      <loc> ( (unsigned char)((TIM1_CCMR1_Output >> 12) & 0x7), ((TIM1_CCMR1_Output = (TIM1_CCMR1_Output & ~(0x7UL << 12 )) | ((unsigned long)(Gui_u8:GuiVal & 0x7) << 12 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ---------------------------  Field Item: TIM1_CCMR1_Output_OC2CE  ------------------------------
// SVD Line: 14374

//  <item> SFDITEM_FIELD__TIM1_CCMR1_Output_OC2CE
//    <name> OC2CE </name>
//    <rw> 
//    <i> [Bit 15] RW (@ 0x40012C18) Output Compare 2 clear  enable </i>
//    <check> 
//      <loc> ( (unsigned int) TIM1_CCMR1_Output ) </loc>
//      <o.15..15> OC2CE
//    </check>
//  </item>
//  


// --------------------------  Field Item: TIM1_CCMR1_Output_OC1M_3  ------------------------------
// SVD Line: 14381

//  <item> SFDITEM_FIELD__TIM1_CCMR1_Output_OC1M_3
//    <name> OC1M_3 </name>
//    <rw> 
//    <i> [Bit 16] RW (@ 0x40012C18) Output Compare 1 mode - bit  3 </i>
//    <check> 
//      <loc> ( (unsigned int) TIM1_CCMR1_Output ) </loc>
//      <o.16..16> OC1M_3
//    </check>
//  </item>
//  


// --------------------------  Field Item: TIM1_CCMR1_Output_OC2M_3  ------------------------------
// SVD Line: 14388

//  <item> SFDITEM_FIELD__TIM1_CCMR1_Output_OC2M_3
//    <name> OC2M_3 </name>
//    <rw> 
//    <i> [Bit 24] RW (@ 0x40012C18) Output Compare 2 mode - bit  3 </i>
//    <check> 
//      <loc> ( (unsigned int) TIM1_CCMR1_Output ) </loc>
//      <o.24..24> OC2M_3
//    </check>
//  </item>
//  


// ----------------------------  Register RTree: TIM1_CCMR1_Output  -------------------------------
// SVD Line: 14303

//  <rtree> SFDITEM_REG__TIM1_CCMR1_Output
//    <name> CCMR1_Output </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x40012C18) capture/compare mode register 1 (output  mode) </i>
//    <loc> ( (unsigned int)((TIM1_CCMR1_Output >> 0) & 0xFFFFFFFF), ((TIM1_CCMR1_Output = (TIM1_CCMR1_Output & ~(0x101FFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0x101FFFF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__TIM1_CCMR1_Output_CC1S </item>
//    <item> SFDITEM_FIELD__TIM1_CCMR1_Output_OC1FE </item>
//    <item> SFDITEM_FIELD__TIM1_CCMR1_Output_OC1PE </item>
//    <item> SFDITEM_FIELD__TIM1_CCMR1_Output_OC1M </item>
//    <item> SFDITEM_FIELD__TIM1_CCMR1_Output_OC1CE </item>
//    <item> SFDITEM_FIELD__TIM1_CCMR1_Output_CC2S </item>
//    <item> SFDITEM_FIELD__TIM1_CCMR1_Output_OC2FE </item>
//    <item> SFDITEM_FIELD__TIM1_CCMR1_Output_OC2PE </item>
//    <item> SFDITEM_FIELD__TIM1_CCMR1_Output_OC2M </item>
//    <item> SFDITEM_FIELD__TIM1_CCMR1_Output_OC2CE </item>
//    <item> SFDITEM_FIELD__TIM1_CCMR1_Output_OC1M_3 </item>
//    <item> SFDITEM_FIELD__TIM1_CCMR1_Output_OC2M_3 </item>
//  </rtree>
//  


// -------------------------  Register Item Address: TIM1_CCMR1_Input  ----------------------------
// SVD Line: 14397

unsigned int TIM1_CCMR1_Input __AT (0x40012C18);



// ----------------------------  Field Item: TIM1_CCMR1_Input_CC1S  -------------------------------
// SVD Line: 14408

//  <item> SFDITEM_FIELD__TIM1_CCMR1_Input_CC1S
//    <name> CC1S </name>
//    <rw> 
//    <i> [Bits 1..0] RW (@ 0x40012C18) Capture/Compare 1  selection </i>
//    <edit> 
//      <loc> ( (unsigned char)((TIM1_CCMR1_Input >> 0) & 0x3), ((TIM1_CCMR1_Input = (TIM1_CCMR1_Input & ~(0x3UL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0x3) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ---------------------------  Field Item: TIM1_CCMR1_Input_OC1FE  -------------------------------
// SVD Line: 14415

//  <item> SFDITEM_FIELD__TIM1_CCMR1_Input_OC1FE
//    <name> OC1FE </name>
//    <rw> 
//    <i> [Bit 2] RW (@ 0x40012C18) Output Compare 1 fast  enable </i>
//    <check> 
//      <loc> ( (unsigned int) TIM1_CCMR1_Input ) </loc>
//      <o.2..2> OC1FE
//    </check>
//  </item>
//  


// ---------------------------  Field Item: TIM1_CCMR1_Input_OC1PE  -------------------------------
// SVD Line: 14422

//  <item> SFDITEM_FIELD__TIM1_CCMR1_Input_OC1PE
//    <name> OC1PE </name>
//    <rw> 
//    <i> [Bit 3] RW (@ 0x40012C18) Output Compare 1 preload  enable </i>
//    <check> 
//      <loc> ( (unsigned int) TIM1_CCMR1_Input ) </loc>
//      <o.3..3> OC1PE
//    </check>
//  </item>
//  


// ----------------------------  Field Item: TIM1_CCMR1_Input_OC1M  -------------------------------
// SVD Line: 14429

//  <item> SFDITEM_FIELD__TIM1_CCMR1_Input_OC1M
//    <name> OC1M </name>
//    <rw> 
//    <i> [Bits 6..4] RW (@ 0x40012C18) Output Compare 1 mode </i>
//    <edit> 
//      <loc> ( (unsigned char)((TIM1_CCMR1_Input >> 4) & 0x7), ((TIM1_CCMR1_Input = (TIM1_CCMR1_Input & ~(0x7UL << 4 )) | ((unsigned long)(Gui_u8:GuiVal & 0x7) << 4 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ---------------------------  Field Item: TIM1_CCMR1_Input_OC1CE  -------------------------------
// SVD Line: 14435

//  <item> SFDITEM_FIELD__TIM1_CCMR1_Input_OC1CE
//    <name> OC1CE </name>
//    <rw> 
//    <i> [Bit 7] RW (@ 0x40012C18) Output Compare 1 clear  enable </i>
//    <check> 
//      <loc> ( (unsigned int) TIM1_CCMR1_Input ) </loc>
//      <o.7..7> OC1CE
//    </check>
//  </item>
//  


// ----------------------------  Field Item: TIM1_CCMR1_Input_CC2S  -------------------------------
// SVD Line: 14442

//  <item> SFDITEM_FIELD__TIM1_CCMR1_Input_CC2S
//    <name> CC2S </name>
//    <rw> 
//    <i> [Bits 9..8] RW (@ 0x40012C18) Capture/Compare 2  selection </i>
//    <edit> 
//      <loc> ( (unsigned char)((TIM1_CCMR1_Input >> 8) & 0x3), ((TIM1_CCMR1_Input = (TIM1_CCMR1_Input & ~(0x3UL << 8 )) | ((unsigned long)(Gui_u8:GuiVal & 0x3) << 8 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ---------------------------  Field Item: TIM1_CCMR1_Input_OC2FE  -------------------------------
// SVD Line: 14449

//  <item> SFDITEM_FIELD__TIM1_CCMR1_Input_OC2FE
//    <name> OC2FE </name>
//    <rw> 
//    <i> [Bit 10] RW (@ 0x40012C18) Output Compare 2 fast  enable </i>
//    <check> 
//      <loc> ( (unsigned int) TIM1_CCMR1_Input ) </loc>
//      <o.10..10> OC2FE
//    </check>
//  </item>
//  


// ---------------------------  Field Item: TIM1_CCMR1_Input_OC2PE  -------------------------------
// SVD Line: 14456

//  <item> SFDITEM_FIELD__TIM1_CCMR1_Input_OC2PE
//    <name> OC2PE </name>
//    <rw> 
//    <i> [Bit 11] RW (@ 0x40012C18) Output Compare 2 preload  enable </i>
//    <check> 
//      <loc> ( (unsigned int) TIM1_CCMR1_Input ) </loc>
//      <o.11..11> OC2PE
//    </check>
//  </item>
//  


// ----------------------------  Field Item: TIM1_CCMR1_Input_OC2M  -------------------------------
// SVD Line: 14463

//  <item> SFDITEM_FIELD__TIM1_CCMR1_Input_OC2M
//    <name> OC2M </name>
//    <rw> 
//    <i> [Bits 14..12] RW (@ 0x40012C18) Output Compare 2 mode </i>
//    <edit> 
//      <loc> ( (unsigned char)((TIM1_CCMR1_Input >> 12) & 0x7), ((TIM1_CCMR1_Input = (TIM1_CCMR1_Input & ~(0x7UL << 12 )) | ((unsigned long)(Gui_u8:GuiVal & 0x7) << 12 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ---------------------------  Field Item: TIM1_CCMR1_Input_OC2CE  -------------------------------
// SVD Line: 14469

//  <item> SFDITEM_FIELD__TIM1_CCMR1_Input_OC2CE
//    <name> OC2CE </name>
//    <rw> 
//    <i> [Bit 15] RW (@ 0x40012C18) Output Compare 2 clear  enable </i>
//    <check> 
//      <loc> ( (unsigned int) TIM1_CCMR1_Input ) </loc>
//      <o.15..15> OC2CE
//    </check>
//  </item>
//  


// ----------------------------  Register RTree: TIM1_CCMR1_Input  --------------------------------
// SVD Line: 14397

//  <rtree> SFDITEM_REG__TIM1_CCMR1_Input
//    <name> CCMR1_Input </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x40012C18) capture/compare mode register 1 (output  mode) </i>
//    <loc> ( (unsigned int)((TIM1_CCMR1_Input >> 0) & 0xFFFFFFFF), ((TIM1_CCMR1_Input = (TIM1_CCMR1_Input & ~(0xFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__TIM1_CCMR1_Input_CC1S </item>
//    <item> SFDITEM_FIELD__TIM1_CCMR1_Input_OC1FE </item>
//    <item> SFDITEM_FIELD__TIM1_CCMR1_Input_OC1PE </item>
//    <item> SFDITEM_FIELD__TIM1_CCMR1_Input_OC1M </item>
//    <item> SFDITEM_FIELD__TIM1_CCMR1_Input_OC1CE </item>
//    <item> SFDITEM_FIELD__TIM1_CCMR1_Input_CC2S </item>
//    <item> SFDITEM_FIELD__TIM1_CCMR1_Input_OC2FE </item>
//    <item> SFDITEM_FIELD__TIM1_CCMR1_Input_OC2PE </item>
//    <item> SFDITEM_FIELD__TIM1_CCMR1_Input_OC2M </item>
//    <item> SFDITEM_FIELD__TIM1_CCMR1_Input_OC2CE </item>
//  </rtree>
//  


// ------------------------  Register Item Address: TIM1_CCMR2_Output  ----------------------------
// SVD Line: 14478

unsigned int TIM1_CCMR2_Output __AT (0x40012C1C);



// ---------------------------  Field Item: TIM1_CCMR2_Output_CC3S  -------------------------------
// SVD Line: 14488

//  <item> SFDITEM_FIELD__TIM1_CCMR2_Output_CC3S
//    <name> CC3S </name>
//    <rw> 
//    <i> [Bits 1..0] RW (@ 0x40012C1C) Capture/Compare 3  selection </i>
//    <edit> 
//      <loc> ( (unsigned char)((TIM1_CCMR2_Output >> 0) & 0x3), ((TIM1_CCMR2_Output = (TIM1_CCMR2_Output & ~(0x3UL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0x3) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ---------------------------  Field Item: TIM1_CCMR2_Output_OC3FE  ------------------------------
// SVD Line: 14495

//  <item> SFDITEM_FIELD__TIM1_CCMR2_Output_OC3FE
//    <name> OC3FE </name>
//    <rw> 
//    <i> [Bit 2] RW (@ 0x40012C1C) Output compare 3 fast  enable </i>
//    <check> 
//      <loc> ( (unsigned int) TIM1_CCMR2_Output ) </loc>
//      <o.2..2> OC3FE
//    </check>
//  </item>
//  


// ---------------------------  Field Item: TIM1_CCMR2_Output_OC3PE  ------------------------------
// SVD Line: 14502

//  <item> SFDITEM_FIELD__TIM1_CCMR2_Output_OC3PE
//    <name> OC3PE </name>
//    <rw> 
//    <i> [Bit 3] RW (@ 0x40012C1C) Output compare 3 preload  enable </i>
//    <check> 
//      <loc> ( (unsigned int) TIM1_CCMR2_Output ) </loc>
//      <o.3..3> OC3PE
//    </check>
//  </item>
//  


// ---------------------------  Field Item: TIM1_CCMR2_Output_OC3M  -------------------------------
// SVD Line: 14509

//  <item> SFDITEM_FIELD__TIM1_CCMR2_Output_OC3M
//    <name> OC3M </name>
//    <rw> 
//    <i> [Bits 6..4] RW (@ 0x40012C1C) Output compare 3 mode </i>
//    <edit> 
//      <loc> ( (unsigned char)((TIM1_CCMR2_Output >> 4) & 0x7), ((TIM1_CCMR2_Output = (TIM1_CCMR2_Output & ~(0x7UL << 4 )) | ((unsigned long)(Gui_u8:GuiVal & 0x7) << 4 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ---------------------------  Field Item: TIM1_CCMR2_Output_OC3CE  ------------------------------
// SVD Line: 14515

//  <item> SFDITEM_FIELD__TIM1_CCMR2_Output_OC3CE
//    <name> OC3CE </name>
//    <rw> 
//    <i> [Bit 7] RW (@ 0x40012C1C) Output compare 3 clear  enable </i>
//    <check> 
//      <loc> ( (unsigned int) TIM1_CCMR2_Output ) </loc>
//      <o.7..7> OC3CE
//    </check>
//  </item>
//  


// ---------------------------  Field Item: TIM1_CCMR2_Output_CC4S  -------------------------------
// SVD Line: 14522

//  <item> SFDITEM_FIELD__TIM1_CCMR2_Output_CC4S
//    <name> CC4S </name>
//    <rw> 
//    <i> [Bits 9..8] RW (@ 0x40012C1C) Capture/Compare 4  selection </i>
//    <edit> 
//      <loc> ( (unsigned char)((TIM1_CCMR2_Output >> 8) & 0x3), ((TIM1_CCMR2_Output = (TIM1_CCMR2_Output & ~(0x3UL << 8 )) | ((unsigned long)(Gui_u8:GuiVal & 0x3) << 8 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ---------------------------  Field Item: TIM1_CCMR2_Output_OC4FE  ------------------------------
// SVD Line: 14529

//  <item> SFDITEM_FIELD__TIM1_CCMR2_Output_OC4FE
//    <name> OC4FE </name>
//    <rw> 
//    <i> [Bit 10] RW (@ 0x40012C1C) Output compare 4 fast  enable </i>
//    <check> 
//      <loc> ( (unsigned int) TIM1_CCMR2_Output ) </loc>
//      <o.10..10> OC4FE
//    </check>
//  </item>
//  


// ---------------------------  Field Item: TIM1_CCMR2_Output_OC4PE  ------------------------------
// SVD Line: 14536

//  <item> SFDITEM_FIELD__TIM1_CCMR2_Output_OC4PE
//    <name> OC4PE </name>
//    <rw> 
//    <i> [Bit 11] RW (@ 0x40012C1C) Output compare 4 preload  enable </i>
//    <check> 
//      <loc> ( (unsigned int) TIM1_CCMR2_Output ) </loc>
//      <o.11..11> OC4PE
//    </check>
//  </item>
//  


// ---------------------------  Field Item: TIM1_CCMR2_Output_OC4M  -------------------------------
// SVD Line: 14543

//  <item> SFDITEM_FIELD__TIM1_CCMR2_Output_OC4M
//    <name> OC4M </name>
//    <rw> 
//    <i> [Bits 14..12] RW (@ 0x40012C1C) Output compare 4 mode </i>
//    <edit> 
//      <loc> ( (unsigned char)((TIM1_CCMR2_Output >> 12) & 0x7), ((TIM1_CCMR2_Output = (TIM1_CCMR2_Output & ~(0x7UL << 12 )) | ((unsigned long)(Gui_u8:GuiVal & 0x7) << 12 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ---------------------------  Field Item: TIM1_CCMR2_Output_OC4CE  ------------------------------
// SVD Line: 14549

//  <item> SFDITEM_FIELD__TIM1_CCMR2_Output_OC4CE
//    <name> OC4CE </name>
//    <rw> 
//    <i> [Bit 15] RW (@ 0x40012C1C) Output compare 4 clear  enable </i>
//    <check> 
//      <loc> ( (unsigned int) TIM1_CCMR2_Output ) </loc>
//      <o.15..15> OC4CE
//    </check>
//  </item>
//  


// --------------------------  Field Item: TIM1_CCMR2_Output_OC3M_3  ------------------------------
// SVD Line: 14556

//  <item> SFDITEM_FIELD__TIM1_CCMR2_Output_OC3M_3
//    <name> OC3M_3 </name>
//    <rw> 
//    <i> [Bit 16] RW (@ 0x40012C1C) Output Compare 3 mode - bit  3 </i>
//    <check> 
//      <loc> ( (unsigned int) TIM1_CCMR2_Output ) </loc>
//      <o.16..16> OC3M_3
//    </check>
//  </item>
//  


// --------------------------  Field Item: TIM1_CCMR2_Output_OC4M_3  ------------------------------
// SVD Line: 14563

//  <item> SFDITEM_FIELD__TIM1_CCMR2_Output_OC4M_3
//    <name> OC4M_3 </name>
//    <rw> 
//    <i> [Bit 24] RW (@ 0x40012C1C) Output Compare 4 mode - bit  3 </i>
//    <check> 
//      <loc> ( (unsigned int) TIM1_CCMR2_Output ) </loc>
//      <o.24..24> OC4M_3
//    </check>
//  </item>
//  


// ----------------------------  Register RTree: TIM1_CCMR2_Output  -------------------------------
// SVD Line: 14478

//  <rtree> SFDITEM_REG__TIM1_CCMR2_Output
//    <name> CCMR2_Output </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x40012C1C) capture/compare mode register 2 (output  mode) </i>
//    <loc> ( (unsigned int)((TIM1_CCMR2_Output >> 0) & 0xFFFFFFFF), ((TIM1_CCMR2_Output = (TIM1_CCMR2_Output & ~(0x101FFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0x101FFFF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__TIM1_CCMR2_Output_CC3S </item>
//    <item> SFDITEM_FIELD__TIM1_CCMR2_Output_OC3FE </item>
//    <item> SFDITEM_FIELD__TIM1_CCMR2_Output_OC3PE </item>
//    <item> SFDITEM_FIELD__TIM1_CCMR2_Output_OC3M </item>
//    <item> SFDITEM_FIELD__TIM1_CCMR2_Output_OC3CE </item>
//    <item> SFDITEM_FIELD__TIM1_CCMR2_Output_CC4S </item>
//    <item> SFDITEM_FIELD__TIM1_CCMR2_Output_OC4FE </item>
//    <item> SFDITEM_FIELD__TIM1_CCMR2_Output_OC4PE </item>
//    <item> SFDITEM_FIELD__TIM1_CCMR2_Output_OC4M </item>
//    <item> SFDITEM_FIELD__TIM1_CCMR2_Output_OC4CE </item>
//    <item> SFDITEM_FIELD__TIM1_CCMR2_Output_OC3M_3 </item>
//    <item> SFDITEM_FIELD__TIM1_CCMR2_Output_OC4M_3 </item>
//  </rtree>
//  


// -------------------------  Register Item Address: TIM1_CCMR2_Input  ----------------------------
// SVD Line: 14572

unsigned int TIM1_CCMR2_Input __AT (0x40012C1C);



// ----------------------------  Field Item: TIM1_CCMR2_Input_CC3S  -------------------------------
// SVD Line: 14583

//  <item> SFDITEM_FIELD__TIM1_CCMR2_Input_CC3S
//    <name> CC3S </name>
//    <rw> 
//    <i> [Bits 1..0] RW (@ 0x40012C1C) Capture/Compare 3  selection </i>
//    <edit> 
//      <loc> ( (unsigned char)((TIM1_CCMR2_Input >> 0) & 0x3), ((TIM1_CCMR2_Input = (TIM1_CCMR2_Input & ~(0x3UL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0x3) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ---------------------------  Field Item: TIM1_CCMR2_Input_OC3FE  -------------------------------
// SVD Line: 14590

//  <item> SFDITEM_FIELD__TIM1_CCMR2_Input_OC3FE
//    <name> OC3FE </name>
//    <rw> 
//    <i> [Bit 2] RW (@ 0x40012C1C) Output compare 3 fast  enable </i>
//    <check> 
//      <loc> ( (unsigned int) TIM1_CCMR2_Input ) </loc>
//      <o.2..2> OC3FE
//    </check>
//  </item>
//  


// ---------------------------  Field Item: TIM1_CCMR2_Input_OC3PE  -------------------------------
// SVD Line: 14597

//  <item> SFDITEM_FIELD__TIM1_CCMR2_Input_OC3PE
//    <name> OC3PE </name>
//    <rw> 
//    <i> [Bit 3] RW (@ 0x40012C1C) Output compare 3 preload  enable </i>
//    <check> 
//      <loc> ( (unsigned int) TIM1_CCMR2_Input ) </loc>
//      <o.3..3> OC3PE
//    </check>
//  </item>
//  


// ----------------------------  Field Item: TIM1_CCMR2_Input_OC3M  -------------------------------
// SVD Line: 14604

//  <item> SFDITEM_FIELD__TIM1_CCMR2_Input_OC3M
//    <name> OC3M </name>
//    <rw> 
//    <i> [Bits 6..4] RW (@ 0x40012C1C) Output compare 3 mode </i>
//    <edit> 
//      <loc> ( (unsigned char)((TIM1_CCMR2_Input >> 4) & 0x7), ((TIM1_CCMR2_Input = (TIM1_CCMR2_Input & ~(0x7UL << 4 )) | ((unsigned long)(Gui_u8:GuiVal & 0x7) << 4 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ---------------------------  Field Item: TIM1_CCMR2_Input_OC3CE  -------------------------------
// SVD Line: 14610

//  <item> SFDITEM_FIELD__TIM1_CCMR2_Input_OC3CE
//    <name> OC3CE </name>
//    <rw> 
//    <i> [Bit 7] RW (@ 0x40012C1C) Output compare 3 clear  enable </i>
//    <check> 
//      <loc> ( (unsigned int) TIM1_CCMR2_Input ) </loc>
//      <o.7..7> OC3CE
//    </check>
//  </item>
//  


// ----------------------------  Field Item: TIM1_CCMR2_Input_CC4S  -------------------------------
// SVD Line: 14617

//  <item> SFDITEM_FIELD__TIM1_CCMR2_Input_CC4S
//    <name> CC4S </name>
//    <rw> 
//    <i> [Bits 9..8] RW (@ 0x40012C1C) Capture/Compare 4  selection </i>
//    <edit> 
//      <loc> ( (unsigned char)((TIM1_CCMR2_Input >> 8) & 0x3), ((TIM1_CCMR2_Input = (TIM1_CCMR2_Input & ~(0x3UL << 8 )) | ((unsigned long)(Gui_u8:GuiVal & 0x3) << 8 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ---------------------------  Field Item: TIM1_CCMR2_Input_OC4FE  -------------------------------
// SVD Line: 14624

//  <item> SFDITEM_FIELD__TIM1_CCMR2_Input_OC4FE
//    <name> OC4FE </name>
//    <rw> 
//    <i> [Bit 10] RW (@ 0x40012C1C) Output compare 4 fast  enable </i>
//    <check> 
//      <loc> ( (unsigned int) TIM1_CCMR2_Input ) </loc>
//      <o.10..10> OC4FE
//    </check>
//  </item>
//  


// ---------------------------  Field Item: TIM1_CCMR2_Input_OC4PE  -------------------------------
// SVD Line: 14631

//  <item> SFDITEM_FIELD__TIM1_CCMR2_Input_OC4PE
//    <name> OC4PE </name>
//    <rw> 
//    <i> [Bit 11] RW (@ 0x40012C1C) Output compare 4 preload  enable </i>
//    <check> 
//      <loc> ( (unsigned int) TIM1_CCMR2_Input ) </loc>
//      <o.11..11> OC4PE
//    </check>
//  </item>
//  


// ----------------------------  Field Item: TIM1_CCMR2_Input_OC4M  -------------------------------
// SVD Line: 14638

//  <item> SFDITEM_FIELD__TIM1_CCMR2_Input_OC4M
//    <name> OC4M </name>
//    <rw> 
//    <i> [Bits 14..12] RW (@ 0x40012C1C) Output compare 4 mode </i>
//    <edit> 
//      <loc> ( (unsigned char)((TIM1_CCMR2_Input >> 12) & 0x7), ((TIM1_CCMR2_Input = (TIM1_CCMR2_Input & ~(0x7UL << 12 )) | ((unsigned long)(Gui_u8:GuiVal & 0x7) << 12 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ---------------------------  Field Item: TIM1_CCMR2_Input_OC4CE  -------------------------------
// SVD Line: 14644

//  <item> SFDITEM_FIELD__TIM1_CCMR2_Input_OC4CE
//    <name> OC4CE </name>
//    <rw> 
//    <i> [Bit 15] RW (@ 0x40012C1C) Output compare 4 clear  enable </i>
//    <check> 
//      <loc> ( (unsigned int) TIM1_CCMR2_Input ) </loc>
//      <o.15..15> OC4CE
//    </check>
//  </item>
//  


// ----------------------------  Register RTree: TIM1_CCMR2_Input  --------------------------------
// SVD Line: 14572

//  <rtree> SFDITEM_REG__TIM1_CCMR2_Input
//    <name> CCMR2_Input </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x40012C1C) capture/compare mode register 2 (output  mode) </i>
//    <loc> ( (unsigned int)((TIM1_CCMR2_Input >> 0) & 0xFFFFFFFF), ((TIM1_CCMR2_Input = (TIM1_CCMR2_Input & ~(0xFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__TIM1_CCMR2_Input_CC3S </item>
//    <item> SFDITEM_FIELD__TIM1_CCMR2_Input_OC3FE </item>
//    <item> SFDITEM_FIELD__TIM1_CCMR2_Input_OC3PE </item>
//    <item> SFDITEM_FIELD__TIM1_CCMR2_Input_OC3M </item>
//    <item> SFDITEM_FIELD__TIM1_CCMR2_Input_OC3CE </item>
//    <item> SFDITEM_FIELD__TIM1_CCMR2_Input_CC4S </item>
//    <item> SFDITEM_FIELD__TIM1_CCMR2_Input_OC4FE </item>
//    <item> SFDITEM_FIELD__TIM1_CCMR2_Input_OC4PE </item>
//    <item> SFDITEM_FIELD__TIM1_CCMR2_Input_OC4M </item>
//    <item> SFDITEM_FIELD__TIM1_CCMR2_Input_OC4CE </item>
//  </rtree>
//  


// ----------------------------  Register Item Address: TIM1_CCER  --------------------------------
// SVD Line: 14653

unsigned int TIM1_CCER __AT (0x40012C20);



// -------------------------------  Field Item: TIM1_CCER_CC1E  -----------------------------------
// SVD Line: 14663

//  <item> SFDITEM_FIELD__TIM1_CCER_CC1E
//    <name> CC1E </name>
//    <rw> 
//    <i> [Bit 0] RW (@ 0x40012C20) Capture/Compare 1 output  enable </i>
//    <check> 
//      <loc> ( (unsigned int) TIM1_CCER ) </loc>
//      <o.0..0> CC1E
//    </check>
//  </item>
//  


// -------------------------------  Field Item: TIM1_CCER_CC1P  -----------------------------------
// SVD Line: 14670

//  <item> SFDITEM_FIELD__TIM1_CCER_CC1P
//    <name> CC1P </name>
//    <rw> 
//    <i> [Bit 1] RW (@ 0x40012C20) Capture/Compare 1 output  Polarity </i>
//    <check> 
//      <loc> ( (unsigned int) TIM1_CCER ) </loc>
//      <o.1..1> CC1P
//    </check>
//  </item>
//  


// -------------------------------  Field Item: TIM1_CCER_CC1NE  ----------------------------------
// SVD Line: 14677

//  <item> SFDITEM_FIELD__TIM1_CCER_CC1NE
//    <name> CC1NE </name>
//    <rw> 
//    <i> [Bit 2] RW (@ 0x40012C20) Capture/Compare 1 complementary output  enable </i>
//    <check> 
//      <loc> ( (unsigned int) TIM1_CCER ) </loc>
//      <o.2..2> CC1NE
//    </check>
//  </item>
//  


// -------------------------------  Field Item: TIM1_CCER_CC1NP  ----------------------------------
// SVD Line: 14684

//  <item> SFDITEM_FIELD__TIM1_CCER_CC1NP
//    <name> CC1NP </name>
//    <rw> 
//    <i> [Bit 3] RW (@ 0x40012C20) Capture/Compare 1 output  Polarity </i>
//    <check> 
//      <loc> ( (unsigned int) TIM1_CCER ) </loc>
//      <o.3..3> CC1NP
//    </check>
//  </item>
//  


// -------------------------------  Field Item: TIM1_CCER_CC2E  -----------------------------------
// SVD Line: 14691

//  <item> SFDITEM_FIELD__TIM1_CCER_CC2E
//    <name> CC2E </name>
//    <rw> 
//    <i> [Bit 4] RW (@ 0x40012C20) Capture/Compare 2 output  enable </i>
//    <check> 
//      <loc> ( (unsigned int) TIM1_CCER ) </loc>
//      <o.4..4> CC2E
//    </check>
//  </item>
//  


// -------------------------------  Field Item: TIM1_CCER_CC2P  -----------------------------------
// SVD Line: 14698

//  <item> SFDITEM_FIELD__TIM1_CCER_CC2P
//    <name> CC2P </name>
//    <rw> 
//    <i> [Bit 5] RW (@ 0x40012C20) Capture/Compare 2 output  Polarity </i>
//    <check> 
//      <loc> ( (unsigned int) TIM1_CCER ) </loc>
//      <o.5..5> CC2P
//    </check>
//  </item>
//  


// -------------------------------  Field Item: TIM1_CCER_CC2NE  ----------------------------------
// SVD Line: 14705

//  <item> SFDITEM_FIELD__TIM1_CCER_CC2NE
//    <name> CC2NE </name>
//    <rw> 
//    <i> [Bit 6] RW (@ 0x40012C20) Capture/Compare 2 complementary output  enable </i>
//    <check> 
//      <loc> ( (unsigned int) TIM1_CCER ) </loc>
//      <o.6..6> CC2NE
//    </check>
//  </item>
//  


// -------------------------------  Field Item: TIM1_CCER_CC2NP  ----------------------------------
// SVD Line: 14712

//  <item> SFDITEM_FIELD__TIM1_CCER_CC2NP
//    <name> CC2NP </name>
//    <rw> 
//    <i> [Bit 7] RW (@ 0x40012C20) Capture/Compare 2 output  Polarity </i>
//    <check> 
//      <loc> ( (unsigned int) TIM1_CCER ) </loc>
//      <o.7..7> CC2NP
//    </check>
//  </item>
//  


// -------------------------------  Field Item: TIM1_CCER_CC3E  -----------------------------------
// SVD Line: 14719

//  <item> SFDITEM_FIELD__TIM1_CCER_CC3E
//    <name> CC3E </name>
//    <rw> 
//    <i> [Bit 8] RW (@ 0x40012C20) Capture/Compare 3 output  enable </i>
//    <check> 
//      <loc> ( (unsigned int) TIM1_CCER ) </loc>
//      <o.8..8> CC3E
//    </check>
//  </item>
//  


// -------------------------------  Field Item: TIM1_CCER_CC3P  -----------------------------------
// SVD Line: 14726

//  <item> SFDITEM_FIELD__TIM1_CCER_CC3P
//    <name> CC3P </name>
//    <rw> 
//    <i> [Bit 9] RW (@ 0x40012C20) Capture/Compare 3 output  Polarity </i>
//    <check> 
//      <loc> ( (unsigned int) TIM1_CCER ) </loc>
//      <o.9..9> CC3P
//    </check>
//  </item>
//  


// -------------------------------  Field Item: TIM1_CCER_CC3NE  ----------------------------------
// SVD Line: 14733

//  <item> SFDITEM_FIELD__TIM1_CCER_CC3NE
//    <name> CC3NE </name>
//    <rw> 
//    <i> [Bit 10] RW (@ 0x40012C20) Capture/Compare 3 complementary output  enable </i>
//    <check> 
//      <loc> ( (unsigned int) TIM1_CCER ) </loc>
//      <o.10..10> CC3NE
//    </check>
//  </item>
//  


// -------------------------------  Field Item: TIM1_CCER_CC3NP  ----------------------------------
// SVD Line: 14740

//  <item> SFDITEM_FIELD__TIM1_CCER_CC3NP
//    <name> CC3NP </name>
//    <rw> 
//    <i> [Bit 11] RW (@ 0x40012C20) Capture/Compare 3 output  Polarity </i>
//    <check> 
//      <loc> ( (unsigned int) TIM1_CCER ) </loc>
//      <o.11..11> CC3NP
//    </check>
//  </item>
//  


// -------------------------------  Field Item: TIM1_CCER_CC4E  -----------------------------------
// SVD Line: 14747

//  <item> SFDITEM_FIELD__TIM1_CCER_CC4E
//    <name> CC4E </name>
//    <rw> 
//    <i> [Bit 12] RW (@ 0x40012C20) Capture/Compare 4 output  enable </i>
//    <check> 
//      <loc> ( (unsigned int) TIM1_CCER ) </loc>
//      <o.12..12> CC4E
//    </check>
//  </item>
//  


// -------------------------------  Field Item: TIM1_CCER_CC4P  -----------------------------------
// SVD Line: 14754

//  <item> SFDITEM_FIELD__TIM1_CCER_CC4P
//    <name> CC4P </name>
//    <rw> 
//    <i> [Bit 13] RW (@ 0x40012C20) Capture/Compare 3 output  Polarity </i>
//    <check> 
//      <loc> ( (unsigned int) TIM1_CCER ) </loc>
//      <o.13..13> CC4P
//    </check>
//  </item>
//  


// -------------------------------  Field Item: TIM1_CCER_CC4NP  ----------------------------------
// SVD Line: 14761

//  <item> SFDITEM_FIELD__TIM1_CCER_CC4NP
//    <name> CC4NP </name>
//    <rw> 
//    <i> [Bit 15] RW (@ 0x40012C20) Capture/Compare 4 complementary output  polarity </i>
//    <check> 
//      <loc> ( (unsigned int) TIM1_CCER ) </loc>
//      <o.15..15> CC4NP
//    </check>
//  </item>
//  


// -------------------------------  Field Item: TIM1_CCER_CC5E  -----------------------------------
// SVD Line: 14768

//  <item> SFDITEM_FIELD__TIM1_CCER_CC5E
//    <name> CC5E </name>
//    <rw> 
//    <i> [Bit 16] RW (@ 0x40012C20) Capture/Compare 5 output  enable </i>
//    <check> 
//      <loc> ( (unsigned int) TIM1_CCER ) </loc>
//      <o.16..16> CC5E
//    </check>
//  </item>
//  


// -------------------------------  Field Item: TIM1_CCER_CC5P  -----------------------------------
// SVD Line: 14775

//  <item> SFDITEM_FIELD__TIM1_CCER_CC5P
//    <name> CC5P </name>
//    <rw> 
//    <i> [Bit 17] RW (@ 0x40012C20) Capture/Compare 5 output  polarity </i>
//    <check> 
//      <loc> ( (unsigned int) TIM1_CCER ) </loc>
//      <o.17..17> CC5P
//    </check>
//  </item>
//  


// -------------------------------  Field Item: TIM1_CCER_CC6E  -----------------------------------
// SVD Line: 14782

//  <item> SFDITEM_FIELD__TIM1_CCER_CC6E
//    <name> CC6E </name>
//    <rw> 
//    <i> [Bit 20] RW (@ 0x40012C20) Capture/Compare 6 output  enable </i>
//    <check> 
//      <loc> ( (unsigned int) TIM1_CCER ) </loc>
//      <o.20..20> CC6E
//    </check>
//  </item>
//  


// -------------------------------  Field Item: TIM1_CCER_CC6P  -----------------------------------
// SVD Line: 14789

//  <item> SFDITEM_FIELD__TIM1_CCER_CC6P
//    <name> CC6P </name>
//    <rw> 
//    <i> [Bit 21] RW (@ 0x40012C20) Capture/Compare 6 output  polarity </i>
//    <check> 
//      <loc> ( (unsigned int) TIM1_CCER ) </loc>
//      <o.21..21> CC6P
//    </check>
//  </item>
//  


// --------------------------------  Register RTree: TIM1_CCER  -----------------------------------
// SVD Line: 14653

//  <rtree> SFDITEM_REG__TIM1_CCER
//    <name> CCER </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x40012C20) capture/compare enable  register </i>
//    <loc> ( (unsigned int)((TIM1_CCER >> 0) & 0xFFFFFFFF), ((TIM1_CCER = (TIM1_CCER & ~(0x33BFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0x33BFFF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__TIM1_CCER_CC1E </item>
//    <item> SFDITEM_FIELD__TIM1_CCER_CC1P </item>
//    <item> SFDITEM_FIELD__TIM1_CCER_CC1NE </item>
//    <item> SFDITEM_FIELD__TIM1_CCER_CC1NP </item>
//    <item> SFDITEM_FIELD__TIM1_CCER_CC2E </item>
//    <item> SFDITEM_FIELD__TIM1_CCER_CC2P </item>
//    <item> SFDITEM_FIELD__TIM1_CCER_CC2NE </item>
//    <item> SFDITEM_FIELD__TIM1_CCER_CC2NP </item>
//    <item> SFDITEM_FIELD__TIM1_CCER_CC3E </item>
//    <item> SFDITEM_FIELD__TIM1_CCER_CC3P </item>
//    <item> SFDITEM_FIELD__TIM1_CCER_CC3NE </item>
//    <item> SFDITEM_FIELD__TIM1_CCER_CC3NP </item>
//    <item> SFDITEM_FIELD__TIM1_CCER_CC4E </item>
//    <item> SFDITEM_FIELD__TIM1_CCER_CC4P </item>
//    <item> SFDITEM_FIELD__TIM1_CCER_CC4NP </item>
//    <item> SFDITEM_FIELD__TIM1_CCER_CC5E </item>
//    <item> SFDITEM_FIELD__TIM1_CCER_CC5P </item>
//    <item> SFDITEM_FIELD__TIM1_CCER_CC6E </item>
//    <item> SFDITEM_FIELD__TIM1_CCER_CC6P </item>
//  </rtree>
//  


// -----------------------------  Register Item Address: TIM1_CNT  --------------------------------
// SVD Line: 14798

unsigned int TIM1_CNT __AT (0x40012C24);



// --------------------------------  Field Item: TIM1_CNT_CNT  ------------------------------------
// SVD Line: 14806

//  <item> SFDITEM_FIELD__TIM1_CNT_CNT
//    <name> CNT </name>
//    <rw> 
//    <i> [Bits 15..0] RW (@ 0x40012C24) counter value </i>
//    <edit> 
//      <loc> ( (unsigned short)((TIM1_CNT >> 0) & 0xFFFF), ((TIM1_CNT = (TIM1_CNT & ~(0xFFFFUL << 0 )) | ((unsigned long)(Gui_u16:GuiVal & 0xFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -------------------------------  Field Item: TIM1_CNT_UIFCPY  ----------------------------------
// SVD Line: 14813

//  <item> SFDITEM_FIELD__TIM1_CNT_UIFCPY
//    <name> UIFCPY </name>
//    <r> 
//    <i> [Bit 31] RO (@ 0x40012C24) UIF copy </i>
//    <check> 
//      <loc> ( (unsigned int) TIM1_CNT ) </loc>
//      <o.31..31> UIFCPY
//    </check>
//  </item>
//  


// --------------------------------  Register RTree: TIM1_CNT  ------------------------------------
// SVD Line: 14798

//  <rtree> SFDITEM_REG__TIM1_CNT
//    <name> CNT </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x40012C24) counter </i>
//    <loc> ( (unsigned int)((TIM1_CNT >> 0) & 0xFFFFFFFF), ((TIM1_CNT = (TIM1_CNT & ~(0xFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__TIM1_CNT_CNT </item>
//    <item> SFDITEM_FIELD__TIM1_CNT_UIFCPY </item>
//  </rtree>
//  


// -----------------------------  Register Item Address: TIM1_PSC  --------------------------------
// SVD Line: 14822

unsigned int TIM1_PSC __AT (0x40012C28);



// --------------------------------  Field Item: TIM1_PSC_PSC  ------------------------------------
// SVD Line: 14831

//  <item> SFDITEM_FIELD__TIM1_PSC_PSC
//    <name> PSC </name>
//    <rw> 
//    <i> [Bits 15..0] RW (@ 0x40012C28) Prescaler value </i>
//    <edit> 
//      <loc> ( (unsigned short)((TIM1_PSC >> 0) & 0xFFFF), ((TIM1_PSC = (TIM1_PSC & ~(0xFFFFUL << 0 )) | ((unsigned long)(Gui_u16:GuiVal & 0xFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// --------------------------------  Register RTree: TIM1_PSC  ------------------------------------
// SVD Line: 14822

//  <rtree> SFDITEM_REG__TIM1_PSC
//    <name> PSC </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x40012C28) prescaler </i>
//    <loc> ( (unsigned int)((TIM1_PSC >> 0) & 0xFFFFFFFF), ((TIM1_PSC = (TIM1_PSC & ~(0xFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__TIM1_PSC_PSC </item>
//  </rtree>
//  


// -----------------------------  Register Item Address: TIM1_ARR  --------------------------------
// SVD Line: 14839

unsigned int TIM1_ARR __AT (0x40012C2C);



// --------------------------------  Field Item: TIM1_ARR_ARR  ------------------------------------
// SVD Line: 14848

//  <item> SFDITEM_FIELD__TIM1_ARR_ARR
//    <name> ARR </name>
//    <rw> 
//    <i> [Bits 15..0] RW (@ 0x40012C2C) Auto-reload value </i>
//    <edit> 
//      <loc> ( (unsigned short)((TIM1_ARR >> 0) & 0xFFFF), ((TIM1_ARR = (TIM1_ARR & ~(0xFFFFUL << 0 )) | ((unsigned long)(Gui_u16:GuiVal & 0xFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// --------------------------------  Register RTree: TIM1_ARR  ------------------------------------
// SVD Line: 14839

//  <rtree> SFDITEM_REG__TIM1_ARR
//    <name> ARR </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x40012C2C) auto-reload register </i>
//    <loc> ( (unsigned int)((TIM1_ARR >> 0) & 0xFFFFFFFF), ((TIM1_ARR = (TIM1_ARR & ~(0xFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__TIM1_ARR_ARR </item>
//  </rtree>
//  


// -----------------------------  Register Item Address: TIM1_RCR  --------------------------------
// SVD Line: 14856

unsigned int TIM1_RCR __AT (0x40012C30);



// --------------------------------  Field Item: TIM1_RCR_REP  ------------------------------------
// SVD Line: 14865

//  <item> SFDITEM_FIELD__TIM1_RCR_REP
//    <name> REP </name>
//    <rw> 
//    <i> [Bits 15..0] RW (@ 0x40012C30) Repetition counter value </i>
//    <edit> 
//      <loc> ( (unsigned short)((TIM1_RCR >> 0) & 0xFFFF), ((TIM1_RCR = (TIM1_RCR & ~(0xFFFFUL << 0 )) | ((unsigned long)(Gui_u16:GuiVal & 0xFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// --------------------------------  Register RTree: TIM1_RCR  ------------------------------------
// SVD Line: 14856

//  <rtree> SFDITEM_REG__TIM1_RCR
//    <name> RCR </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x40012C30) repetition counter register </i>
//    <loc> ( (unsigned int)((TIM1_RCR >> 0) & 0xFFFFFFFF), ((TIM1_RCR = (TIM1_RCR & ~(0xFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__TIM1_RCR_REP </item>
//  </rtree>
//  


// ----------------------------  Register Item Address: TIM1_CCR1  --------------------------------
// SVD Line: 14873

unsigned int TIM1_CCR1 __AT (0x40012C34);



// -------------------------------  Field Item: TIM1_CCR1_CCR1  -----------------------------------
// SVD Line: 14882

//  <item> SFDITEM_FIELD__TIM1_CCR1_CCR1
//    <name> CCR1 </name>
//    <rw> 
//    <i> [Bits 15..0] RW (@ 0x40012C34) Capture/Compare 1 value </i>
//    <edit> 
//      <loc> ( (unsigned short)((TIM1_CCR1 >> 0) & 0xFFFF), ((TIM1_CCR1 = (TIM1_CCR1 & ~(0xFFFFUL << 0 )) | ((unsigned long)(Gui_u16:GuiVal & 0xFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// --------------------------------  Register RTree: TIM1_CCR1  -----------------------------------
// SVD Line: 14873

//  <rtree> SFDITEM_REG__TIM1_CCR1
//    <name> CCR1 </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x40012C34) capture/compare register 1 </i>
//    <loc> ( (unsigned int)((TIM1_CCR1 >> 0) & 0xFFFFFFFF), ((TIM1_CCR1 = (TIM1_CCR1 & ~(0xFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__TIM1_CCR1_CCR1 </item>
//  </rtree>
//  


// ----------------------------  Register Item Address: TIM1_CCR2  --------------------------------
// SVD Line: 14890

unsigned int TIM1_CCR2 __AT (0x40012C38);



// -------------------------------  Field Item: TIM1_CCR2_CCR2  -----------------------------------
// SVD Line: 14899

//  <item> SFDITEM_FIELD__TIM1_CCR2_CCR2
//    <name> CCR2 </name>
//    <rw> 
//    <i> [Bits 15..0] RW (@ 0x40012C38) Capture/Compare 2 value </i>
//    <edit> 
//      <loc> ( (unsigned short)((TIM1_CCR2 >> 0) & 0xFFFF), ((TIM1_CCR2 = (TIM1_CCR2 & ~(0xFFFFUL << 0 )) | ((unsigned long)(Gui_u16:GuiVal & 0xFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// --------------------------------  Register RTree: TIM1_CCR2  -----------------------------------
// SVD Line: 14890

//  <rtree> SFDITEM_REG__TIM1_CCR2
//    <name> CCR2 </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x40012C38) capture/compare register 2 </i>
//    <loc> ( (unsigned int)((TIM1_CCR2 >> 0) & 0xFFFFFFFF), ((TIM1_CCR2 = (TIM1_CCR2 & ~(0xFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__TIM1_CCR2_CCR2 </item>
//  </rtree>
//  


// ----------------------------  Register Item Address: TIM1_CCR3  --------------------------------
// SVD Line: 14907

unsigned int TIM1_CCR3 __AT (0x40012C3C);



// -------------------------------  Field Item: TIM1_CCR3_CCR3  -----------------------------------
// SVD Line: 14916

//  <item> SFDITEM_FIELD__TIM1_CCR3_CCR3
//    <name> CCR3 </name>
//    <rw> 
//    <i> [Bits 15..0] RW (@ 0x40012C3C) Capture/Compare value </i>
//    <edit> 
//      <loc> ( (unsigned short)((TIM1_CCR3 >> 0) & 0xFFFF), ((TIM1_CCR3 = (TIM1_CCR3 & ~(0xFFFFUL << 0 )) | ((unsigned long)(Gui_u16:GuiVal & 0xFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// --------------------------------  Register RTree: TIM1_CCR3  -----------------------------------
// SVD Line: 14907

//  <rtree> SFDITEM_REG__TIM1_CCR3
//    <name> CCR3 </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x40012C3C) capture/compare register 3 </i>
//    <loc> ( (unsigned int)((TIM1_CCR3 >> 0) & 0xFFFFFFFF), ((TIM1_CCR3 = (TIM1_CCR3 & ~(0xFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__TIM1_CCR3_CCR3 </item>
//  </rtree>
//  


// ----------------------------  Register Item Address: TIM1_CCR4  --------------------------------
// SVD Line: 14924

unsigned int TIM1_CCR4 __AT (0x40012C40);



// -------------------------------  Field Item: TIM1_CCR4_CCR4  -----------------------------------
// SVD Line: 14933

//  <item> SFDITEM_FIELD__TIM1_CCR4_CCR4
//    <name> CCR4 </name>
//    <rw> 
//    <i> [Bits 15..0] RW (@ 0x40012C40) Capture/Compare value </i>
//    <edit> 
//      <loc> ( (unsigned short)((TIM1_CCR4 >> 0) & 0xFFFF), ((TIM1_CCR4 = (TIM1_CCR4 & ~(0xFFFFUL << 0 )) | ((unsigned long)(Gui_u16:GuiVal & 0xFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// --------------------------------  Register RTree: TIM1_CCR4  -----------------------------------
// SVD Line: 14924

//  <rtree> SFDITEM_REG__TIM1_CCR4
//    <name> CCR4 </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x40012C40) capture/compare register 4 </i>
//    <loc> ( (unsigned int)((TIM1_CCR4 >> 0) & 0xFFFFFFFF), ((TIM1_CCR4 = (TIM1_CCR4 & ~(0xFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__TIM1_CCR4_CCR4 </item>
//  </rtree>
//  


// ----------------------------  Register Item Address: TIM1_BDTR  --------------------------------
// SVD Line: 14941

unsigned int TIM1_BDTR __AT (0x40012C44);



// --------------------------------  Field Item: TIM1_BDTR_DTG  -----------------------------------
// SVD Line: 14950

//  <item> SFDITEM_FIELD__TIM1_BDTR_DTG
//    <name> DTG </name>
//    <rw> 
//    <i> [Bits 7..0] RW (@ 0x40012C44) Dead-time generator setup </i>
//    <edit> 
//      <loc> ( (unsigned char)((TIM1_BDTR >> 0) & 0xFF), ((TIM1_BDTR = (TIM1_BDTR & ~(0xFFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -------------------------------  Field Item: TIM1_BDTR_LOCK  -----------------------------------
// SVD Line: 14956

//  <item> SFDITEM_FIELD__TIM1_BDTR_LOCK
//    <name> LOCK </name>
//    <rw> 
//    <i> [Bits 9..8] RW (@ 0x40012C44) Lock configuration </i>
//    <edit> 
//      <loc> ( (unsigned char)((TIM1_BDTR >> 8) & 0x3), ((TIM1_BDTR = (TIM1_BDTR & ~(0x3UL << 8 )) | ((unsigned long)(Gui_u8:GuiVal & 0x3) << 8 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -------------------------------  Field Item: TIM1_BDTR_OSSI  -----------------------------------
// SVD Line: 14962

//  <item> SFDITEM_FIELD__TIM1_BDTR_OSSI
//    <name> OSSI </name>
//    <rw> 
//    <i> [Bit 10] RW (@ 0x40012C44) Off-state selection for Idle  mode </i>
//    <check> 
//      <loc> ( (unsigned int) TIM1_BDTR ) </loc>
//      <o.10..10> OSSI
//    </check>
//  </item>
//  


// -------------------------------  Field Item: TIM1_BDTR_OSSR  -----------------------------------
// SVD Line: 14969

//  <item> SFDITEM_FIELD__TIM1_BDTR_OSSR
//    <name> OSSR </name>
//    <rw> 
//    <i> [Bit 11] RW (@ 0x40012C44) Off-state selection for Run  mode </i>
//    <check> 
//      <loc> ( (unsigned int) TIM1_BDTR ) </loc>
//      <o.11..11> OSSR
//    </check>
//  </item>
//  


// --------------------------------  Field Item: TIM1_BDTR_BKE  -----------------------------------
// SVD Line: 14976

//  <item> SFDITEM_FIELD__TIM1_BDTR_BKE
//    <name> BKE </name>
//    <rw> 
//    <i> [Bit 12] RW (@ 0x40012C44) Break enable </i>
//    <check> 
//      <loc> ( (unsigned int) TIM1_BDTR ) </loc>
//      <o.12..12> BKE
//    </check>
//  </item>
//  


// --------------------------------  Field Item: TIM1_BDTR_BKP  -----------------------------------
// SVD Line: 14982

//  <item> SFDITEM_FIELD__TIM1_BDTR_BKP
//    <name> BKP </name>
//    <rw> 
//    <i> [Bit 13] RW (@ 0x40012C44) Break polarity </i>
//    <check> 
//      <loc> ( (unsigned int) TIM1_BDTR ) </loc>
//      <o.13..13> BKP
//    </check>
//  </item>
//  


// --------------------------------  Field Item: TIM1_BDTR_AOE  -----------------------------------
// SVD Line: 14988

//  <item> SFDITEM_FIELD__TIM1_BDTR_AOE
//    <name> AOE </name>
//    <rw> 
//    <i> [Bit 14] RW (@ 0x40012C44) Automatic output enable </i>
//    <check> 
//      <loc> ( (unsigned int) TIM1_BDTR ) </loc>
//      <o.14..14> AOE
//    </check>
//  </item>
//  


// --------------------------------  Field Item: TIM1_BDTR_MOE  -----------------------------------
// SVD Line: 14994

//  <item> SFDITEM_FIELD__TIM1_BDTR_MOE
//    <name> MOE </name>
//    <rw> 
//    <i> [Bit 15] RW (@ 0x40012C44) Main output enable </i>
//    <check> 
//      <loc> ( (unsigned int) TIM1_BDTR ) </loc>
//      <o.15..15> MOE
//    </check>
//  </item>
//  


// --------------------------------  Field Item: TIM1_BDTR_BKF  -----------------------------------
// SVD Line: 15000

//  <item> SFDITEM_FIELD__TIM1_BDTR_BKF
//    <name> BKF </name>
//    <rw> 
//    <i> [Bits 19..16] RW (@ 0x40012C44) Break filter </i>
//    <edit> 
//      <loc> ( (unsigned char)((TIM1_BDTR >> 16) & 0xF), ((TIM1_BDTR = (TIM1_BDTR & ~(0xFUL << 16 )) | ((unsigned long)(Gui_u8:GuiVal & 0xF) << 16 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -------------------------------  Field Item: TIM1_BDTR_BK2F  -----------------------------------
// SVD Line: 15006

//  <item> SFDITEM_FIELD__TIM1_BDTR_BK2F
//    <name> BK2F </name>
//    <rw> 
//    <i> [Bits 23..20] RW (@ 0x40012C44) Break 2 filter </i>
//    <edit> 
//      <loc> ( (unsigned char)((TIM1_BDTR >> 20) & 0xF), ((TIM1_BDTR = (TIM1_BDTR & ~(0xFUL << 20 )) | ((unsigned long)(Gui_u8:GuiVal & 0xF) << 20 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -------------------------------  Field Item: TIM1_BDTR_BK2E  -----------------------------------
// SVD Line: 15012

//  <item> SFDITEM_FIELD__TIM1_BDTR_BK2E
//    <name> BK2E </name>
//    <rw> 
//    <i> [Bit 24] RW (@ 0x40012C44) Break 2 enable </i>
//    <check> 
//      <loc> ( (unsigned int) TIM1_BDTR ) </loc>
//      <o.24..24> BK2E
//    </check>
//  </item>
//  


// -------------------------------  Field Item: TIM1_BDTR_BK2P  -----------------------------------
// SVD Line: 15018

//  <item> SFDITEM_FIELD__TIM1_BDTR_BK2P
//    <name> BK2P </name>
//    <rw> 
//    <i> [Bit 25] RW (@ 0x40012C44) Break 2 polarity </i>
//    <check> 
//      <loc> ( (unsigned int) TIM1_BDTR ) </loc>
//      <o.25..25> BK2P
//    </check>
//  </item>
//  


// ------------------------------  Field Item: TIM1_BDTR_BKDSRM  ----------------------------------
// SVD Line: 15024

//  <item> SFDITEM_FIELD__TIM1_BDTR_BKDSRM
//    <name> BKDSRM </name>
//    <rw> 
//    <i> [Bit 26] RW (@ 0x40012C44) Break Disarm </i>
//    <check> 
//      <loc> ( (unsigned int) TIM1_BDTR ) </loc>
//      <o.26..26> BKDSRM
//    </check>
//  </item>
//  


// ------------------------------  Field Item: TIM1_BDTR_BK2DSRM  ---------------------------------
// SVD Line: 15030

//  <item> SFDITEM_FIELD__TIM1_BDTR_BK2DSRM
//    <name> BK2DSRM </name>
//    <rw> 
//    <i> [Bit 27] RW (@ 0x40012C44) Break2 Disarm </i>
//    <check> 
//      <loc> ( (unsigned int) TIM1_BDTR ) </loc>
//      <o.27..27> BK2DSRM
//    </check>
//  </item>
//  


// -------------------------------  Field Item: TIM1_BDTR_BKBID  ----------------------------------
// SVD Line: 15036

//  <item> SFDITEM_FIELD__TIM1_BDTR_BKBID
//    <name> BKBID </name>
//    <rw> 
//    <i> [Bit 28] RW (@ 0x40012C44) Break Bidirectional </i>
//    <check> 
//      <loc> ( (unsigned int) TIM1_BDTR ) </loc>
//      <o.28..28> BKBID
//    </check>
//  </item>
//  


// -------------------------------  Field Item: TIM1_BDTR_BK2ID  ----------------------------------
// SVD Line: 15042

//  <item> SFDITEM_FIELD__TIM1_BDTR_BK2ID
//    <name> BK2ID </name>
//    <rw> 
//    <i> [Bit 29] RW (@ 0x40012C44) Break2 bidirectional </i>
//    <check> 
//      <loc> ( (unsigned int) TIM1_BDTR ) </loc>
//      <o.29..29> BK2ID
//    </check>
//  </item>
//  


// --------------------------------  Register RTree: TIM1_BDTR  -----------------------------------
// SVD Line: 14941

//  <rtree> SFDITEM_REG__TIM1_BDTR
//    <name> BDTR </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x40012C44) break and dead-time register </i>
//    <loc> ( (unsigned int)((TIM1_BDTR >> 0) & 0xFFFFFFFF), ((TIM1_BDTR = (TIM1_BDTR & ~(0x3FFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0x3FFFFFFF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__TIM1_BDTR_DTG </item>
//    <item> SFDITEM_FIELD__TIM1_BDTR_LOCK </item>
//    <item> SFDITEM_FIELD__TIM1_BDTR_OSSI </item>
//    <item> SFDITEM_FIELD__TIM1_BDTR_OSSR </item>
//    <item> SFDITEM_FIELD__TIM1_BDTR_BKE </item>
//    <item> SFDITEM_FIELD__TIM1_BDTR_BKP </item>
//    <item> SFDITEM_FIELD__TIM1_BDTR_AOE </item>
//    <item> SFDITEM_FIELD__TIM1_BDTR_MOE </item>
//    <item> SFDITEM_FIELD__TIM1_BDTR_BKF </item>
//    <item> SFDITEM_FIELD__TIM1_BDTR_BK2F </item>
//    <item> SFDITEM_FIELD__TIM1_BDTR_BK2E </item>
//    <item> SFDITEM_FIELD__TIM1_BDTR_BK2P </item>
//    <item> SFDITEM_FIELD__TIM1_BDTR_BKDSRM </item>
//    <item> SFDITEM_FIELD__TIM1_BDTR_BK2DSRM </item>
//    <item> SFDITEM_FIELD__TIM1_BDTR_BKBID </item>
//    <item> SFDITEM_FIELD__TIM1_BDTR_BK2ID </item>
//  </rtree>
//  


// -----------------------------  Register Item Address: TIM1_DCR  --------------------------------
// SVD Line: 15050

unsigned int TIM1_DCR __AT (0x40012C48);



// --------------------------------  Field Item: TIM1_DCR_DBL  ------------------------------------
// SVD Line: 15059

//  <item> SFDITEM_FIELD__TIM1_DCR_DBL
//    <name> DBL </name>
//    <rw> 
//    <i> [Bits 12..8] RW (@ 0x40012C48) DMA burst length </i>
//    <edit> 
//      <loc> ( (unsigned char)((TIM1_DCR >> 8) & 0x1F), ((TIM1_DCR = (TIM1_DCR & ~(0x1FUL << 8 )) | ((unsigned long)(Gui_u8:GuiVal & 0x1F) << 8 ) ) )) </loc>
//    </edit>
//  </item>
//  


// --------------------------------  Field Item: TIM1_DCR_DBA  ------------------------------------
// SVD Line: 15065

//  <item> SFDITEM_FIELD__TIM1_DCR_DBA
//    <name> DBA </name>
//    <rw> 
//    <i> [Bits 4..0] RW (@ 0x40012C48) DMA base address </i>
//    <edit> 
//      <loc> ( (unsigned char)((TIM1_DCR >> 0) & 0x1F), ((TIM1_DCR = (TIM1_DCR & ~(0x1FUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0x1F) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// --------------------------------  Register RTree: TIM1_DCR  ------------------------------------
// SVD Line: 15050

//  <rtree> SFDITEM_REG__TIM1_DCR
//    <name> DCR </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x40012C48) DMA control register </i>
//    <loc> ( (unsigned int)((TIM1_DCR >> 0) & 0xFFFFFFFF), ((TIM1_DCR = (TIM1_DCR & ~(0x1F1FUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0x1F1F) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__TIM1_DCR_DBL </item>
//    <item> SFDITEM_FIELD__TIM1_DCR_DBA </item>
//  </rtree>
//  


// ----------------------------  Register Item Address: TIM1_DMAR  --------------------------------
// SVD Line: 15073

unsigned int TIM1_DMAR __AT (0x40012C4C);



// -------------------------------  Field Item: TIM1_DMAR_DMAB  -----------------------------------
// SVD Line: 15082

//  <item> SFDITEM_FIELD__TIM1_DMAR_DMAB
//    <name> DMAB </name>
//    <rw> 
//    <i> [Bits 15..0] RW (@ 0x40012C4C) DMA register for burst  accesses </i>
//    <edit> 
//      <loc> ( (unsigned short)((TIM1_DMAR >> 0) & 0xFFFF), ((TIM1_DMAR = (TIM1_DMAR & ~(0xFFFFUL << 0 )) | ((unsigned long)(Gui_u16:GuiVal & 0xFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// --------------------------------  Register RTree: TIM1_DMAR  -----------------------------------
// SVD Line: 15073

//  <rtree> SFDITEM_REG__TIM1_DMAR
//    <name> DMAR </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x40012C4C) DMA address for full transfer </i>
//    <loc> ( (unsigned int)((TIM1_DMAR >> 0) & 0xFFFFFFFF), ((TIM1_DMAR = (TIM1_DMAR & ~(0xFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__TIM1_DMAR_DMAB </item>
//  </rtree>
//  


// -----------------------------  Register Item Address: TIM1_OR1  --------------------------------
// SVD Line: 15091

unsigned int TIM1_OR1 __AT (0x40012C50);



// -----------------------------  Field Item: TIM1_OR1_OCREF_CLR  ---------------------------------
// SVD Line: 15100

//  <item> SFDITEM_FIELD__TIM1_OR1_OCREF_CLR
//    <name> OCREF_CLR </name>
//    <rw> 
//    <i> [Bit 0] RW (@ 0x40012C50) Ocref_clr source selection </i>
//    <check> 
//      <loc> ( (unsigned int) TIM1_OR1 ) </loc>
//      <o.0..0> OCREF_CLR
//    </check>
//  </item>
//  


// --------------------------------  Register RTree: TIM1_OR1  ------------------------------------
// SVD Line: 15091

//  <rtree> SFDITEM_REG__TIM1_OR1
//    <name> OR1 </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x40012C50) option register 1 </i>
//    <loc> ( (unsigned int)((TIM1_OR1 >> 0) & 0xFFFFFFFF), ((TIM1_OR1 = (TIM1_OR1 & ~(0x1UL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0x1) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__TIM1_OR1_OCREF_CLR </item>
//  </rtree>
//  


// ------------------------  Register Item Address: TIM1_CCMR3_Output  ----------------------------
// SVD Line: 15108

unsigned int TIM1_CCMR3_Output __AT (0x40012C54);



// -------------------------  Field Item: TIM1_CCMR3_Output_OC6M_bit3  ----------------------------
// SVD Line: 15118

//  <item> SFDITEM_FIELD__TIM1_CCMR3_Output_OC6M_bit3
//    <name> OC6M_bit3 </name>
//    <rw> 
//    <i> [Bit 24] RW (@ 0x40012C54) Output Compare 6 mode bit  3 </i>
//    <check> 
//      <loc> ( (unsigned int) TIM1_CCMR3_Output ) </loc>
//      <o.24..24> OC6M_bit3
//    </check>
//  </item>
//  


// -------------------------  Field Item: TIM1_CCMR3_Output_OC5M_bit3  ----------------------------
// SVD Line: 15125

//  <item> SFDITEM_FIELD__TIM1_CCMR3_Output_OC5M_bit3
//    <name> OC5M_bit3 </name>
//    <rw> 
//    <i> [Bit 16] RW (@ 0x40012C54) Output Compare 5 mode bit  3 </i>
//    <check> 
//      <loc> ( (unsigned int) TIM1_CCMR3_Output ) </loc>
//      <o.16..16> OC5M_bit3
//    </check>
//  </item>
//  


// ---------------------------  Field Item: TIM1_CCMR3_Output_OC6CE  ------------------------------
// SVD Line: 15132

//  <item> SFDITEM_FIELD__TIM1_CCMR3_Output_OC6CE
//    <name> OC6CE </name>
//    <rw> 
//    <i> [Bit 15] RW (@ 0x40012C54) Output compare 6 clear  enable </i>
//    <check> 
//      <loc> ( (unsigned int) TIM1_CCMR3_Output ) </loc>
//      <o.15..15> OC6CE
//    </check>
//  </item>
//  


// ---------------------------  Field Item: TIM1_CCMR3_Output_OC6M  -------------------------------
// SVD Line: 15139

//  <item> SFDITEM_FIELD__TIM1_CCMR3_Output_OC6M
//    <name> OC6M </name>
//    <rw> 
//    <i> [Bits 14..12] RW (@ 0x40012C54) Output compare 6 mode </i>
//    <edit> 
//      <loc> ( (unsigned char)((TIM1_CCMR3_Output >> 12) & 0x7), ((TIM1_CCMR3_Output = (TIM1_CCMR3_Output & ~(0x7UL << 12 )) | ((unsigned long)(Gui_u8:GuiVal & 0x7) << 12 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ---------------------------  Field Item: TIM1_CCMR3_Output_OC6PE  ------------------------------
// SVD Line: 15145

//  <item> SFDITEM_FIELD__TIM1_CCMR3_Output_OC6PE
//    <name> OC6PE </name>
//    <rw> 
//    <i> [Bit 11] RW (@ 0x40012C54) Output compare 6 preload  enable </i>
//    <check> 
//      <loc> ( (unsigned int) TIM1_CCMR3_Output ) </loc>
//      <o.11..11> OC6PE
//    </check>
//  </item>
//  


// ---------------------------  Field Item: TIM1_CCMR3_Output_OC6FE  ------------------------------
// SVD Line: 15152

//  <item> SFDITEM_FIELD__TIM1_CCMR3_Output_OC6FE
//    <name> OC6FE </name>
//    <rw> 
//    <i> [Bit 10] RW (@ 0x40012C54) Output compare 6 fast  enable </i>
//    <check> 
//      <loc> ( (unsigned int) TIM1_CCMR3_Output ) </loc>
//      <o.10..10> OC6FE
//    </check>
//  </item>
//  


// ---------------------------  Field Item: TIM1_CCMR3_Output_OC5CE  ------------------------------
// SVD Line: 15159

//  <item> SFDITEM_FIELD__TIM1_CCMR3_Output_OC5CE
//    <name> OC5CE </name>
//    <rw> 
//    <i> [Bit 7] RW (@ 0x40012C54) Output compare 5 clear  enable </i>
//    <check> 
//      <loc> ( (unsigned int) TIM1_CCMR3_Output ) </loc>
//      <o.7..7> OC5CE
//    </check>
//  </item>
//  


// ---------------------------  Field Item: TIM1_CCMR3_Output_OC5M  -------------------------------
// SVD Line: 15166

//  <item> SFDITEM_FIELD__TIM1_CCMR3_Output_OC5M
//    <name> OC5M </name>
//    <rw> 
//    <i> [Bits 6..4] RW (@ 0x40012C54) Output compare 5 mode </i>
//    <edit> 
//      <loc> ( (unsigned char)((TIM1_CCMR3_Output >> 4) & 0x7), ((TIM1_CCMR3_Output = (TIM1_CCMR3_Output & ~(0x7UL << 4 )) | ((unsigned long)(Gui_u8:GuiVal & 0x7) << 4 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ---------------------------  Field Item: TIM1_CCMR3_Output_OC5PE  ------------------------------
// SVD Line: 15172

//  <item> SFDITEM_FIELD__TIM1_CCMR3_Output_OC5PE
//    <name> OC5PE </name>
//    <rw> 
//    <i> [Bit 3] RW (@ 0x40012C54) Output compare 5 preload  enable </i>
//    <check> 
//      <loc> ( (unsigned int) TIM1_CCMR3_Output ) </loc>
//      <o.3..3> OC5PE
//    </check>
//  </item>
//  


// ---------------------------  Field Item: TIM1_CCMR3_Output_OC5FE  ------------------------------
// SVD Line: 15179

//  <item> SFDITEM_FIELD__TIM1_CCMR3_Output_OC5FE
//    <name> OC5FE </name>
//    <rw> 
//    <i> [Bit 2] RW (@ 0x40012C54) Output compare 5 fast  enable </i>
//    <check> 
//      <loc> ( (unsigned int) TIM1_CCMR3_Output ) </loc>
//      <o.2..2> OC5FE
//    </check>
//  </item>
//  


// ----------------------------  Register RTree: TIM1_CCMR3_Output  -------------------------------
// SVD Line: 15108

//  <rtree> SFDITEM_REG__TIM1_CCMR3_Output
//    <name> CCMR3_Output </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x40012C54) capture/compare mode register 2 (output  mode) </i>
//    <loc> ( (unsigned int)((TIM1_CCMR3_Output >> 0) & 0xFFFFFFFF), ((TIM1_CCMR3_Output = (TIM1_CCMR3_Output & ~(0x101FCFCUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0x101FCFC) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__TIM1_CCMR3_Output_OC6M_bit3 </item>
//    <item> SFDITEM_FIELD__TIM1_CCMR3_Output_OC5M_bit3 </item>
//    <item> SFDITEM_FIELD__TIM1_CCMR3_Output_OC6CE </item>
//    <item> SFDITEM_FIELD__TIM1_CCMR3_Output_OC6M </item>
//    <item> SFDITEM_FIELD__TIM1_CCMR3_Output_OC6PE </item>
//    <item> SFDITEM_FIELD__TIM1_CCMR3_Output_OC6FE </item>
//    <item> SFDITEM_FIELD__TIM1_CCMR3_Output_OC5CE </item>
//    <item> SFDITEM_FIELD__TIM1_CCMR3_Output_OC5M </item>
//    <item> SFDITEM_FIELD__TIM1_CCMR3_Output_OC5PE </item>
//    <item> SFDITEM_FIELD__TIM1_CCMR3_Output_OC5FE </item>
//  </rtree>
//  


// ----------------------------  Register Item Address: TIM1_CCR5  --------------------------------
// SVD Line: 15188

unsigned int TIM1_CCR5 __AT (0x40012C58);



// -------------------------------  Field Item: TIM1_CCR5_CCR5  -----------------------------------
// SVD Line: 15197

//  <item> SFDITEM_FIELD__TIM1_CCR5_CCR5
//    <name> CCR5 </name>
//    <rw> 
//    <i> [Bits 15..0] RW (@ 0x40012C58) Capture/Compare value </i>
//    <edit> 
//      <loc> ( (unsigned short)((TIM1_CCR5 >> 0) & 0xFFFF), ((TIM1_CCR5 = (TIM1_CCR5 & ~(0xFFFFUL << 0 )) | ((unsigned long)(Gui_u16:GuiVal & 0xFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -------------------------------  Field Item: TIM1_CCR5_GC5C1  ----------------------------------
// SVD Line: 15203

//  <item> SFDITEM_FIELD__TIM1_CCR5_GC5C1
//    <name> GC5C1 </name>
//    <rw> 
//    <i> [Bit 29] RW (@ 0x40012C58) Group Channel 5 and Channel  1 </i>
//    <check> 
//      <loc> ( (unsigned int) TIM1_CCR5 ) </loc>
//      <o.29..29> GC5C1
//    </check>
//  </item>
//  


// -------------------------------  Field Item: TIM1_CCR5_GC5C2  ----------------------------------
// SVD Line: 15210

//  <item> SFDITEM_FIELD__TIM1_CCR5_GC5C2
//    <name> GC5C2 </name>
//    <rw> 
//    <i> [Bit 30] RW (@ 0x40012C58) Group Channel 5 and Channel  2 </i>
//    <check> 
//      <loc> ( (unsigned int) TIM1_CCR5 ) </loc>
//      <o.30..30> GC5C2
//    </check>
//  </item>
//  


// -------------------------------  Field Item: TIM1_CCR5_GC5C3  ----------------------------------
// SVD Line: 15217

//  <item> SFDITEM_FIELD__TIM1_CCR5_GC5C3
//    <name> GC5C3 </name>
//    <rw> 
//    <i> [Bit 31] RW (@ 0x40012C58) Group Channel 5 and Channel  3 </i>
//    <check> 
//      <loc> ( (unsigned int) TIM1_CCR5 ) </loc>
//      <o.31..31> GC5C3
//    </check>
//  </item>
//  


// --------------------------------  Register RTree: TIM1_CCR5  -----------------------------------
// SVD Line: 15188

//  <rtree> SFDITEM_REG__TIM1_CCR5
//    <name> CCR5 </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x40012C58) capture/compare register 4 </i>
//    <loc> ( (unsigned int)((TIM1_CCR5 >> 0) & 0xFFFFFFFF), ((TIM1_CCR5 = (TIM1_CCR5 & ~(0xE000FFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xE000FFFF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__TIM1_CCR5_CCR5 </item>
//    <item> SFDITEM_FIELD__TIM1_CCR5_GC5C1 </item>
//    <item> SFDITEM_FIELD__TIM1_CCR5_GC5C2 </item>
//    <item> SFDITEM_FIELD__TIM1_CCR5_GC5C3 </item>
//  </rtree>
//  


// ----------------------------  Register Item Address: TIM1_CCR6  --------------------------------
// SVD Line: 15226

unsigned int TIM1_CCR6 __AT (0x40012C5C);



// -------------------------------  Field Item: TIM1_CCR6_CCR6  -----------------------------------
// SVD Line: 15235

//  <item> SFDITEM_FIELD__TIM1_CCR6_CCR6
//    <name> CCR6 </name>
//    <rw> 
//    <i> [Bits 15..0] RW (@ 0x40012C5C) Capture/Compare value </i>
//    <edit> 
//      <loc> ( (unsigned short)((TIM1_CCR6 >> 0) & 0xFFFF), ((TIM1_CCR6 = (TIM1_CCR6 & ~(0xFFFFUL << 0 )) | ((unsigned long)(Gui_u16:GuiVal & 0xFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// --------------------------------  Register RTree: TIM1_CCR6  -----------------------------------
// SVD Line: 15226

//  <rtree> SFDITEM_REG__TIM1_CCR6
//    <name> CCR6 </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x40012C5C) capture/compare register 4 </i>
//    <loc> ( (unsigned int)((TIM1_CCR6 >> 0) & 0xFFFFFFFF), ((TIM1_CCR6 = (TIM1_CCR6 & ~(0xFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__TIM1_CCR6_CCR6 </item>
//  </rtree>
//  


// -----------------------------  Register Item Address: TIM1_AF1  --------------------------------
// SVD Line: 15243

unsigned int TIM1_AF1 __AT (0x40012C60);



// -------------------------------  Field Item: TIM1_AF1_BKINE  -----------------------------------
// SVD Line: 15252

//  <item> SFDITEM_FIELD__TIM1_AF1_BKINE
//    <name> BKINE </name>
//    <rw> 
//    <i> [Bit 0] RW (@ 0x40012C60) BRK BKIN input enable </i>
//    <check> 
//      <loc> ( (unsigned int) TIM1_AF1 ) </loc>
//      <o.0..0> BKINE
//    </check>
//  </item>
//  


// ------------------------------  Field Item: TIM1_AF1_BKCMP1E  ----------------------------------
// SVD Line: 15258

//  <item> SFDITEM_FIELD__TIM1_AF1_BKCMP1E
//    <name> BKCMP1E </name>
//    <rw> 
//    <i> [Bit 1] RW (@ 0x40012C60) BRK COMP1 enable </i>
//    <check> 
//      <loc> ( (unsigned int) TIM1_AF1 ) </loc>
//      <o.1..1> BKCMP1E
//    </check>
//  </item>
//  


// ------------------------------  Field Item: TIM1_AF1_BKCMP2E  ----------------------------------
// SVD Line: 15264

//  <item> SFDITEM_FIELD__TIM1_AF1_BKCMP2E
//    <name> BKCMP2E </name>
//    <rw> 
//    <i> [Bit 2] RW (@ 0x40012C60) BRK COMP2 enable </i>
//    <check> 
//      <loc> ( (unsigned int) TIM1_AF1 ) </loc>
//      <o.2..2> BKCMP2E
//    </check>
//  </item>
//  


// -------------------------------  Field Item: TIM1_AF1_BKINP  -----------------------------------
// SVD Line: 15270

//  <item> SFDITEM_FIELD__TIM1_AF1_BKINP
//    <name> BKINP </name>
//    <rw> 
//    <i> [Bit 9] RW (@ 0x40012C60) BRK BKIN input polarity </i>
//    <check> 
//      <loc> ( (unsigned int) TIM1_AF1 ) </loc>
//      <o.9..9> BKINP
//    </check>
//  </item>
//  


// ------------------------------  Field Item: TIM1_AF1_BKCMP1P  ----------------------------------
// SVD Line: 15276

//  <item> SFDITEM_FIELD__TIM1_AF1_BKCMP1P
//    <name> BKCMP1P </name>
//    <rw> 
//    <i> [Bit 10] RW (@ 0x40012C60) BRK COMP1 input polarity </i>
//    <check> 
//      <loc> ( (unsigned int) TIM1_AF1 ) </loc>
//      <o.10..10> BKCMP1P
//    </check>
//  </item>
//  


// ------------------------------  Field Item: TIM1_AF1_BKCMP2P  ----------------------------------
// SVD Line: 15282

//  <item> SFDITEM_FIELD__TIM1_AF1_BKCMP2P
//    <name> BKCMP2P </name>
//    <rw> 
//    <i> [Bit 11] RW (@ 0x40012C60) BRK COMP2 input polarity </i>
//    <check> 
//      <loc> ( (unsigned int) TIM1_AF1 ) </loc>
//      <o.11..11> BKCMP2P
//    </check>
//  </item>
//  


// -------------------------------  Field Item: TIM1_AF1_ETRSEL  ----------------------------------
// SVD Line: 15288

//  <item> SFDITEM_FIELD__TIM1_AF1_ETRSEL
//    <name> ETRSEL </name>
//    <rw> 
//    <i> [Bits 16..14] RW (@ 0x40012C60) ETR source selection </i>
//    <edit> 
//      <loc> ( (unsigned char)((TIM1_AF1 >> 14) & 0x7), ((TIM1_AF1 = (TIM1_AF1 & ~(0x7UL << 14 )) | ((unsigned long)(Gui_u8:GuiVal & 0x7) << 14 ) ) )) </loc>
//    </edit>
//  </item>
//  


// --------------------------------  Register RTree: TIM1_AF1  ------------------------------------
// SVD Line: 15243

//  <rtree> SFDITEM_REG__TIM1_AF1
//    <name> AF1 </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x40012C60) DMA address for full transfer </i>
//    <loc> ( (unsigned int)((TIM1_AF1 >> 0) & 0xFFFFFFFF), ((TIM1_AF1 = (TIM1_AF1 & ~(0x1CE07UL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0x1CE07) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__TIM1_AF1_BKINE </item>
//    <item> SFDITEM_FIELD__TIM1_AF1_BKCMP1E </item>
//    <item> SFDITEM_FIELD__TIM1_AF1_BKCMP2E </item>
//    <item> SFDITEM_FIELD__TIM1_AF1_BKINP </item>
//    <item> SFDITEM_FIELD__TIM1_AF1_BKCMP1P </item>
//    <item> SFDITEM_FIELD__TIM1_AF1_BKCMP2P </item>
//    <item> SFDITEM_FIELD__TIM1_AF1_ETRSEL </item>
//  </rtree>
//  


// -----------------------------  Register Item Address: TIM1_AF2  --------------------------------
// SVD Line: 15296

unsigned int TIM1_AF2 __AT (0x40012C64);



// -------------------------------  Field Item: TIM1_AF2_BK2INE  ----------------------------------
// SVD Line: 15305

//  <item> SFDITEM_FIELD__TIM1_AF2_BK2INE
//    <name> BK2INE </name>
//    <rw> 
//    <i> [Bit 0] RW (@ 0x40012C64) BRK2 BKIN input enable </i>
//    <check> 
//      <loc> ( (unsigned int) TIM1_AF2 ) </loc>
//      <o.0..0> BK2INE
//    </check>
//  </item>
//  


// ------------------------------  Field Item: TIM1_AF2_BK2CMP1E  ---------------------------------
// SVD Line: 15311

//  <item> SFDITEM_FIELD__TIM1_AF2_BK2CMP1E
//    <name> BK2CMP1E </name>
//    <rw> 
//    <i> [Bit 1] RW (@ 0x40012C64) BRK2 COMP1 enable </i>
//    <check> 
//      <loc> ( (unsigned int) TIM1_AF2 ) </loc>
//      <o.1..1> BK2CMP1E
//    </check>
//  </item>
//  


// ------------------------------  Field Item: TIM1_AF2_BK2CMP2E  ---------------------------------
// SVD Line: 15317

//  <item> SFDITEM_FIELD__TIM1_AF2_BK2CMP2E
//    <name> BK2CMP2E </name>
//    <rw> 
//    <i> [Bit 2] RW (@ 0x40012C64) BRK2 COMP2 enable </i>
//    <check> 
//      <loc> ( (unsigned int) TIM1_AF2 ) </loc>
//      <o.2..2> BK2CMP2E
//    </check>
//  </item>
//  


// -----------------------------  Field Item: TIM1_AF2_BK2DFBK0E  ---------------------------------
// SVD Line: 15323

//  <item> SFDITEM_FIELD__TIM1_AF2_BK2DFBK0E
//    <name> BK2DFBK0E </name>
//    <rw> 
//    <i> [Bit 8] RW (@ 0x40012C64) BRK2 DFSDM_BREAK0 enable </i>
//    <check> 
//      <loc> ( (unsigned int) TIM1_AF2 ) </loc>
//      <o.8..8> BK2DFBK0E
//    </check>
//  </item>
//  


// -------------------------------  Field Item: TIM1_AF2_BK2INP  ----------------------------------
// SVD Line: 15329

//  <item> SFDITEM_FIELD__TIM1_AF2_BK2INP
//    <name> BK2INP </name>
//    <rw> 
//    <i> [Bit 9] RW (@ 0x40012C64) BRK2 BKIN input polarity </i>
//    <check> 
//      <loc> ( (unsigned int) TIM1_AF2 ) </loc>
//      <o.9..9> BK2INP
//    </check>
//  </item>
//  


// ------------------------------  Field Item: TIM1_AF2_BK2CMP1P  ---------------------------------
// SVD Line: 15335

//  <item> SFDITEM_FIELD__TIM1_AF2_BK2CMP1P
//    <name> BK2CMP1P </name>
//    <rw> 
//    <i> [Bit 10] RW (@ 0x40012C64) BRK2 COMP1 input polarity </i>
//    <check> 
//      <loc> ( (unsigned int) TIM1_AF2 ) </loc>
//      <o.10..10> BK2CMP1P
//    </check>
//  </item>
//  


// ------------------------------  Field Item: TIM1_AF2_BK2CMP2P  ---------------------------------
// SVD Line: 15341

//  <item> SFDITEM_FIELD__TIM1_AF2_BK2CMP2P
//    <name> BK2CMP2P </name>
//    <rw> 
//    <i> [Bit 11] RW (@ 0x40012C64) BRK2 COMP2 input polarity </i>
//    <check> 
//      <loc> ( (unsigned int) TIM1_AF2 ) </loc>
//      <o.11..11> BK2CMP2P
//    </check>
//  </item>
//  


// --------------------------------  Register RTree: TIM1_AF2  ------------------------------------
// SVD Line: 15296

//  <rtree> SFDITEM_REG__TIM1_AF2
//    <name> AF2 </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x40012C64) DMA address for full transfer </i>
//    <loc> ( (unsigned int)((TIM1_AF2 >> 0) & 0xFFFFFFFF), ((TIM1_AF2 = (TIM1_AF2 & ~(0xF07UL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xF07) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__TIM1_AF2_BK2INE </item>
//    <item> SFDITEM_FIELD__TIM1_AF2_BK2CMP1E </item>
//    <item> SFDITEM_FIELD__TIM1_AF2_BK2CMP2E </item>
//    <item> SFDITEM_FIELD__TIM1_AF2_BK2DFBK0E </item>
//    <item> SFDITEM_FIELD__TIM1_AF2_BK2INP </item>
//    <item> SFDITEM_FIELD__TIM1_AF2_BK2CMP1P </item>
//    <item> SFDITEM_FIELD__TIM1_AF2_BK2CMP2P </item>
//  </rtree>
//  


// ----------------------------------  Peripheral View: TIM1  -------------------------------------
// SVD Line: 13743

//  <view> TIM1
//    <name> TIM1 </name>
//    <item> SFDITEM_REG__TIM1_CR1 </item>
//    <item> SFDITEM_REG__TIM1_CR2 </item>
//    <item> SFDITEM_REG__TIM1_SMCR </item>
//    <item> SFDITEM_REG__TIM1_DIER </item>
//    <item> SFDITEM_REG__TIM1_SR </item>
//    <item> SFDITEM_REG__TIM1_EGR </item>
//    <item> SFDITEM_REG__TIM1_CCMR1_Output </item>
//    <item> SFDITEM_REG__TIM1_CCMR1_Input </item>
//    <item> SFDITEM_REG__TIM1_CCMR2_Output </item>
//    <item> SFDITEM_REG__TIM1_CCMR2_Input </item>
//    <item> SFDITEM_REG__TIM1_CCER </item>
//    <item> SFDITEM_REG__TIM1_CNT </item>
//    <item> SFDITEM_REG__TIM1_PSC </item>
//    <item> SFDITEM_REG__TIM1_ARR </item>
//    <item> SFDITEM_REG__TIM1_RCR </item>
//    <item> SFDITEM_REG__TIM1_CCR1 </item>
//    <item> SFDITEM_REG__TIM1_CCR2 </item>
//    <item> SFDITEM_REG__TIM1_CCR3 </item>
//    <item> SFDITEM_REG__TIM1_CCR4 </item>
//    <item> SFDITEM_REG__TIM1_BDTR </item>
//    <item> SFDITEM_REG__TIM1_DCR </item>
//    <item> SFDITEM_REG__TIM1_DMAR </item>
//    <item> SFDITEM_REG__TIM1_OR1 </item>
//    <item> SFDITEM_REG__TIM1_CCMR3_Output </item>
//    <item> SFDITEM_REG__TIM1_CCR5 </item>
//    <item> SFDITEM_REG__TIM1_CCR6 </item>
//    <item> SFDITEM_REG__TIM1_AF1 </item>
//    <item> SFDITEM_REG__TIM1_AF2 </item>
//  </view>
//  


// ---------------------------  Register Item Address: ADC_ADC_ISR  -------------------------------
// SVD Line: 15368

unsigned int ADC_ADC_ISR __AT (0x40012400);



// ------------------------------  Field Item: ADC_ADC_ISR_ADRDY  ---------------------------------
// SVD Line: 15377

//  <item> SFDITEM_FIELD__ADC_ADC_ISR_ADRDY
//    <name> ADRDY </name>
//    <rw> 
//    <i> [Bit 0] RW (@ 0x40012400) \nADC ready  This bit is set by hardware after the ADC has been enabled (ADEN=1) and when the ADC reaches a state where it is ready to accept conversion requests.  It is cleared by software writing 1 to it.\n0 : B_0x0 = ADC not yet ready to start conversion (or the flag event was already acknowledged and cleared by software)\n1 : B_0x1 = ADC is ready to start conversion </i>
//    <combo> 
//      <loc> ( (unsigned int) ADC_ADC_ISR ) </loc>
//      <o.0..0> ADRDY
//        <0=> 0: B_0x0 = ADC not yet ready to start conversion (or the flag event was already acknowledged and cleared by software)
//        <1=> 1: B_0x1 = ADC is ready to start conversion
//    </combo>
//  </item>
//  


// ------------------------------  Field Item: ADC_ADC_ISR_EOSMP  ---------------------------------
// SVD Line: 15398

//  <item> SFDITEM_FIELD__ADC_ADC_ISR_EOSMP
//    <name> EOSMP </name>
//    <rw> 
//    <i> [Bit 1] RW (@ 0x40012400) \nEnd of sampling flag  This bit is set by hardware during the conversion, at the end of the sampling phase.It is cleared by software by programming it to '1.\n0 : B_0x0 = Not at the end of the sampling phase (or the flag event was already acknowledged and cleared by software)\n1 : B_0x1 = End of sampling phase reached </i>
//    <combo> 
//      <loc> ( (unsigned int) ADC_ADC_ISR ) </loc>
//      <o.1..1> EOSMP
//        <0=> 0: B_0x0 = Not at the end of the sampling phase (or the flag event was already acknowledged and cleared by software)
//        <1=> 1: B_0x1 = End of sampling phase reached
//    </combo>
//  </item>
//  


// -------------------------------  Field Item: ADC_ADC_ISR_EOC  ----------------------------------
// SVD Line: 15418

//  <item> SFDITEM_FIELD__ADC_ADC_ISR_EOC
//    <name> EOC </name>
//    <rw> 
//    <i> [Bit 2] RW (@ 0x40012400) \nEnd of conversion flag  This bit is set by hardware at the end of each conversion of a channel when a new data result is available in the ADC_DR register. It is cleared by software writing 1 to it or by reading the ADC_DR register.\n0 : B_0x0 = Channel conversion not complete (or the flag event was already acknowledged and cleared by software)\n1 : B_0x1 = Channel conversion complete </i>
//    <combo> 
//      <loc> ( (unsigned int) ADC_ADC_ISR ) </loc>
//      <o.2..2> EOC
//        <0=> 0: B_0x0 = Channel conversion not complete (or the flag event was already acknowledged and cleared by software)
//        <1=> 1: B_0x1 = Channel conversion complete
//    </combo>
//  </item>
//  


// -------------------------------  Field Item: ADC_ADC_ISR_EOS  ----------------------------------
// SVD Line: 15438

//  <item> SFDITEM_FIELD__ADC_ADC_ISR_EOS
//    <name> EOS </name>
//    <rw> 
//    <i> [Bit 3] RW (@ 0x40012400) \nEnd of sequence flag  This bit is set by hardware at the end of the conversion of a sequence of channels selected by the CHSEL bits. It is cleared by software writing 1 to it.\n0 : B_0x0 = Conversion sequence not complete (or the flag event was already acknowledged and cleared by software)\n1 : B_0x1 = Conversion sequence complete </i>
//    <combo> 
//      <loc> ( (unsigned int) ADC_ADC_ISR ) </loc>
//      <o.3..3> EOS
//        <0=> 0: B_0x0 = Conversion sequence not complete (or the flag event was already acknowledged and cleared by software)
//        <1=> 1: B_0x1 = Conversion sequence complete
//    </combo>
//  </item>
//  


// -------------------------------  Field Item: ADC_ADC_ISR_OVR  ----------------------------------
// SVD Line: 15458

//  <item> SFDITEM_FIELD__ADC_ADC_ISR_OVR
//    <name> OVR </name>
//    <rw> 
//    <i> [Bit 4] RW (@ 0x40012400) \nADC overrun  This bit is set by hardware when an overrun occurs, meaning that a new conversion has complete while the EOC flag was already set. It is cleared by software writing 1 to it.\n0 : B_0x0 = No overrun occurred (or the flag event was already acknowledged and cleared by software)\n1 : B_0x1 = Overrun has occurred </i>
//    <combo> 
//      <loc> ( (unsigned int) ADC_ADC_ISR ) </loc>
//      <o.4..4> OVR
//        <0=> 0: B_0x0 = No overrun occurred (or the flag event was already acknowledged and cleared by software)
//        <1=> 1: B_0x1 = Overrun has occurred
//    </combo>
//  </item>
//  


// ------------------------------  Field Item: ADC_ADC_ISR_AWD1  ----------------------------------
// SVD Line: 15478

//  <item> SFDITEM_FIELD__ADC_ADC_ISR_AWD1
//    <name> AWD1 </name>
//    <rw> 
//    <i> [Bit 7] RW (@ 0x40012400) \nAnalog watchdog 1 flag  This bit is set by hardware when the converted voltage crosses the values programmed in ADC_TR1 and ADC_HR1 registers. It is cleared by software by programming it to 1.\n0 : B_0x0 = No analog watchdog event occurred (or the flag event was already acknowledged and cleared by software)\n1 : B_0x1 = Analog watchdog event occurred </i>
//    <combo> 
//      <loc> ( (unsigned int) ADC_ADC_ISR ) </loc>
//      <o.7..7> AWD1
//        <0=> 0: B_0x0 = No analog watchdog event occurred (or the flag event was already acknowledged and cleared by software)
//        <1=> 1: B_0x1 = Analog watchdog event occurred
//    </combo>
//  </item>
//  


// ------------------------------  Field Item: ADC_ADC_ISR_AWD2  ----------------------------------
// SVD Line: 15498

//  <item> SFDITEM_FIELD__ADC_ADC_ISR_AWD2
//    <name> AWD2 </name>
//    <rw> 
//    <i> [Bit 8] RW (@ 0x40012400) \nAnalog watchdog 2 flag  This bit is set by hardware when the converted voltage crosses the values programmed in ADC_AWD2TR and ADC_AWD2TR registers. It is cleared by software programming it it.\n0 : B_0x0 = No analog watchdog event occurred (or the flag event was already acknowledged and cleared by software)\n1 : B_0x1 = Analog watchdog event occurred </i>
//    <combo> 
//      <loc> ( (unsigned int) ADC_ADC_ISR ) </loc>
//      <o.8..8> AWD2
//        <0=> 0: B_0x0 = No analog watchdog event occurred (or the flag event was already acknowledged and cleared by software)
//        <1=> 1: B_0x1 = Analog watchdog event occurred
//    </combo>
//  </item>
//  


// ------------------------------  Field Item: ADC_ADC_ISR_AWD3  ----------------------------------
// SVD Line: 15518

//  <item> SFDITEM_FIELD__ADC_ADC_ISR_AWD3
//    <name> AWD3 </name>
//    <rw> 
//    <i> [Bit 9] RW (@ 0x40012400) \nAnalog watchdog 3 flag  This bit is set by hardware when the converted voltage crosses the values programmed in ADC_AWD3TR and ADC_AWD3TR registers. It is cleared by software by programming it to 1.\n0 : B_0x0 = No analog watchdog event occurred (or the flag event was already acknowledged and cleared by software)\n1 : B_0x1 = Analog watchdog event occurred </i>
//    <combo> 
//      <loc> ( (unsigned int) ADC_ADC_ISR ) </loc>
//      <o.9..9> AWD3
//        <0=> 0: B_0x0 = No analog watchdog event occurred (or the flag event was already acknowledged and cleared by software)
//        <1=> 1: B_0x1 = Analog watchdog event occurred
//    </combo>
//  </item>
//  


// ------------------------------  Field Item: ADC_ADC_ISR_EOCAL  ---------------------------------
// SVD Line: 15538

//  <item> SFDITEM_FIELD__ADC_ADC_ISR_EOCAL
//    <name> EOCAL </name>
//    <rw> 
//    <i> [Bit 11] RW (@ 0x40012400) \nEnd Of Calibration flag  This bit is set by hardware when calibration is complete. It is cleared by software writing 1 to it.\n0 : B_0x0 = Calibration is not complete\n1 : B_0x1 = Calibration is complete </i>
//    <combo> 
//      <loc> ( (unsigned int) ADC_ADC_ISR ) </loc>
//      <o.11..11> EOCAL
//        <0=> 0: B_0x0 = Calibration is not complete
//        <1=> 1: B_0x1 = Calibration is complete
//    </combo>
//  </item>
//  


// ------------------------------  Field Item: ADC_ADC_ISR_CCRDY  ---------------------------------
// SVD Line: 15558

//  <item> SFDITEM_FIELD__ADC_ADC_ISR_CCRDY
//    <name> CCRDY </name>
//    <rw> 
//    <i> [Bit 13] RW (@ 0x40012400) \nChannel Configuration Ready flag  This flag bit is set by hardware when the channel configuration is applied after programming to ADC_CHSELR register or changing CHSELRMOD or SCANDIR. It is cleared by software by programming it to it.  Note: When the software configures the channels (by programming ADC_CHSELR or changing CHSELRMOD or SCANDIR), it must wait until the CCRDY flag rises before configuring again or starting conversions, otherwise the new configuration (or the START bit) is ignored. Once the flag is asserted, if the software needs to configure again the channels, it must clear the CCRDY flag before proceeding with a new configuration.\n0 : B_0x0 = Channel configuration update not applied.\n1 : B_0x1 = Channel configuration update is applied. </i>
//    <combo> 
//      <loc> ( (unsigned int) ADC_ADC_ISR ) </loc>
//      <o.13..13> CCRDY
//        <0=> 0: B_0x0 = Channel configuration update not applied.
//        <1=> 1: B_0x1 = Channel configuration update is applied.
//    </combo>
//  </item>
//  


// -------------------------------  Register RTree: ADC_ADC_ISR  ----------------------------------
// SVD Line: 15368

//  <rtree> SFDITEM_REG__ADC_ADC_ISR
//    <name> ADC_ISR </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x40012400) ADC interrupt and status register </i>
//    <loc> ( (unsigned int)((ADC_ADC_ISR >> 0) & 0xFFFFFFFF), ((ADC_ADC_ISR = (ADC_ADC_ISR & ~(0x2B9FUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0x2B9F) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__ADC_ADC_ISR_ADRDY </item>
//    <item> SFDITEM_FIELD__ADC_ADC_ISR_EOSMP </item>
//    <item> SFDITEM_FIELD__ADC_ADC_ISR_EOC </item>
//    <item> SFDITEM_FIELD__ADC_ADC_ISR_EOS </item>
//    <item> SFDITEM_FIELD__ADC_ADC_ISR_OVR </item>
//    <item> SFDITEM_FIELD__ADC_ADC_ISR_AWD1 </item>
//    <item> SFDITEM_FIELD__ADC_ADC_ISR_AWD2 </item>
//    <item> SFDITEM_FIELD__ADC_ADC_ISR_AWD3 </item>
//    <item> SFDITEM_FIELD__ADC_ADC_ISR_EOCAL </item>
//    <item> SFDITEM_FIELD__ADC_ADC_ISR_CCRDY </item>
//  </rtree>
//  


// ---------------------------  Register Item Address: ADC_ADC_IER  -------------------------------
// SVD Line: 15581

unsigned int ADC_ADC_IER __AT (0x40012404);



// -----------------------------  Field Item: ADC_ADC_IER_ADRDYIE  --------------------------------
// SVD Line: 15590

//  <item> SFDITEM_FIELD__ADC_ADC_IER_ADRDYIE
//    <name> ADRDYIE </name>
//    <rw> 
//    <i> [Bit 0] RW (@ 0x40012404) \nADC ready interrupt enable  This bit is set and cleared by software to enable/disable the ADC Ready interrupt.  Note: The software is allowed to write this bit only when ADSTART bit is cleared to 0 (this ensures that no conversion is ongoing).\n0 : B_0x0 = ADRDY interrupt disabled.\n1 : B_0x1 = ADRDY interrupt enabled. An interrupt is generated when the ADRDY bit is set. </i>
//    <combo> 
//      <loc> ( (unsigned int) ADC_ADC_IER ) </loc>
//      <o.0..0> ADRDYIE
//        <0=> 0: B_0x0 = ADRDY interrupt disabled.
//        <1=> 1: B_0x1 = ADRDY interrupt enabled. An interrupt is generated when the ADRDY bit is set.
//    </combo>
//  </item>
//  


// -----------------------------  Field Item: ADC_ADC_IER_EOSMPIE  --------------------------------
// SVD Line: 15611

//  <item> SFDITEM_FIELD__ADC_ADC_IER_EOSMPIE
//    <name> EOSMPIE </name>
//    <rw> 
//    <i> [Bit 1] RW (@ 0x40012404) \nEnd of sampling flag interrupt enable  This bit is set and cleared by software to enable/disable the end of the sampling phase interrupt.  Note: The software is allowed to write this bit only when ADSTART bit is cleared to 0 (this ensures that no conversion is ongoing).\n0 : B_0x0 = EOSMP interrupt disabled.\n1 : B_0x1 = EOSMP interrupt enabled. An interrupt is generated when the EOSMP bit is set. </i>
//    <combo> 
//      <loc> ( (unsigned int) ADC_ADC_IER ) </loc>
//      <o.1..1> EOSMPIE
//        <0=> 0: B_0x0 = EOSMP interrupt disabled.
//        <1=> 1: B_0x1 = EOSMP interrupt enabled. An interrupt is generated when the EOSMP bit is set.
//    </combo>
//  </item>
//  


// ------------------------------  Field Item: ADC_ADC_IER_EOCIE  ---------------------------------
// SVD Line: 15632

//  <item> SFDITEM_FIELD__ADC_ADC_IER_EOCIE
//    <name> EOCIE </name>
//    <rw> 
//    <i> [Bit 2] RW (@ 0x40012404) \nEnd of conversion interrupt enable  This bit is set and cleared by software to enable/disable the end of conversion interrupt.  Note: The software is allowed to write this bit only when ADSTART bit is cleared to 0 (this ensures that no conversion is ongoing).\n0 : B_0x0 = EOC interrupt disabled\n1 : B_0x1 = EOC interrupt enabled. An interrupt is generated when the EOC bit is set. </i>
//    <combo> 
//      <loc> ( (unsigned int) ADC_ADC_IER ) </loc>
//      <o.2..2> EOCIE
//        <0=> 0: B_0x0 = EOC interrupt disabled
//        <1=> 1: B_0x1 = EOC interrupt enabled. An interrupt is generated when the EOC bit is set.
//    </combo>
//  </item>
//  


// ------------------------------  Field Item: ADC_ADC_IER_EOSIE  ---------------------------------
// SVD Line: 15653

//  <item> SFDITEM_FIELD__ADC_ADC_IER_EOSIE
//    <name> EOSIE </name>
//    <rw> 
//    <i> [Bit 3] RW (@ 0x40012404) \nEnd of conversion sequence interrupt enable  This bit is set and cleared by software to enable/disable the end of sequence of conversions interrupt.  Note: The software is allowed to write this bit only when ADSTART bit is cleared to 0 (this ensures that no conversion is ongoing).\n0 : B_0x0 = EOS interrupt disabled\n1 : B_0x1 = EOS interrupt enabled. An interrupt is generated when the EOS bit is set. </i>
//    <combo> 
//      <loc> ( (unsigned int) ADC_ADC_IER ) </loc>
//      <o.3..3> EOSIE
//        <0=> 0: B_0x0 = EOS interrupt disabled
//        <1=> 1: B_0x1 = EOS interrupt enabled. An interrupt is generated when the EOS bit is set.
//    </combo>
//  </item>
//  


// ------------------------------  Field Item: ADC_ADC_IER_OVRIE  ---------------------------------
// SVD Line: 15674

//  <item> SFDITEM_FIELD__ADC_ADC_IER_OVRIE
//    <name> OVRIE </name>
//    <rw> 
//    <i> [Bit 4] RW (@ 0x40012404) \nOverrun interrupt enable  This bit is set and cleared by software to enable/disable the overrun interrupt.  Note: The software is allowed to write this bit only when ADSTART bit is cleared to 0 (this ensures that no conversion is ongoing).\n0 : B_0x0 = Overrun interrupt disabled\n1 : B_0x1 = Overrun interrupt enabled. An interrupt is generated when the OVR bit is set. </i>
//    <combo> 
//      <loc> ( (unsigned int) ADC_ADC_IER ) </loc>
//      <o.4..4> OVRIE
//        <0=> 0: B_0x0 = Overrun interrupt disabled
//        <1=> 1: B_0x1 = Overrun interrupt enabled. An interrupt is generated when the OVR bit is set.
//    </combo>
//  </item>
//  


// -----------------------------  Field Item: ADC_ADC_IER_AWD1IE  ---------------------------------
// SVD Line: 15695

//  <item> SFDITEM_FIELD__ADC_ADC_IER_AWD1IE
//    <name> AWD1IE </name>
//    <rw> 
//    <i> [Bit 7] RW (@ 0x40012404) \nAnalog watchdog 1 interrupt enable  This bit is set and cleared by software to enable/disable the analog watchdog interrupt.  Note: The Software is allowed to write this bit only when ADSTART bit is cleared to 0 (this ensures that no conversion is ongoing).\n0 : B_0x0 = Analog watchdog interrupt disabled\n1 : B_0x1 = Analog watchdog interrupt enabled </i>
//    <combo> 
//      <loc> ( (unsigned int) ADC_ADC_IER ) </loc>
//      <o.7..7> AWD1IE
//        <0=> 0: B_0x0 = Analog watchdog interrupt disabled
//        <1=> 1: B_0x1 = Analog watchdog interrupt enabled
//    </combo>
//  </item>
//  


// -----------------------------  Field Item: ADC_ADC_IER_AWD2IE  ---------------------------------
// SVD Line: 15716

//  <item> SFDITEM_FIELD__ADC_ADC_IER_AWD2IE
//    <name> AWD2IE </name>
//    <rw> 
//    <i> [Bit 8] RW (@ 0x40012404) \nAnalog watchdog 2 interrupt enable  This bit is set and cleared by software to enable/disable the analog watchdog interrupt.  Note: The Software is allowed to write this bit only when ADSTART bit is cleared to 0 (this ensures that no conversion is ongoing).\n0 : B_0x0 = Analog watchdog interrupt disabled\n1 : B_0x1 = Analog watchdog interrupt enabled </i>
//    <combo> 
//      <loc> ( (unsigned int) ADC_ADC_IER ) </loc>
//      <o.8..8> AWD2IE
//        <0=> 0: B_0x0 = Analog watchdog interrupt disabled
//        <1=> 1: B_0x1 = Analog watchdog interrupt enabled
//    </combo>
//  </item>
//  


// -----------------------------  Field Item: ADC_ADC_IER_AWD3IE  ---------------------------------
// SVD Line: 15737

//  <item> SFDITEM_FIELD__ADC_ADC_IER_AWD3IE
//    <name> AWD3IE </name>
//    <rw> 
//    <i> [Bit 9] RW (@ 0x40012404) \nAnalog watchdog 3 interrupt enable  This bit is set and cleared by software to enable/disable the analog watchdog interrupt.  Note: The Software is allowed to write this bit only when ADSTART bit is cleared to 0 (this ensures that no conversion is ongoing).\n0 : B_0x0 = Analog watchdog interrupt disabled\n1 : B_0x1 = Analog watchdog interrupt enabled </i>
//    <combo> 
//      <loc> ( (unsigned int) ADC_ADC_IER ) </loc>
//      <o.9..9> AWD3IE
//        <0=> 0: B_0x0 = Analog watchdog interrupt disabled
//        <1=> 1: B_0x1 = Analog watchdog interrupt enabled
//    </combo>
//  </item>
//  


// -----------------------------  Field Item: ADC_ADC_IER_EOCALIE  --------------------------------
// SVD Line: 15758

//  <item> SFDITEM_FIELD__ADC_ADC_IER_EOCALIE
//    <name> EOCALIE </name>
//    <rw> 
//    <i> [Bit 11] RW (@ 0x40012404) \nEnd of calibration interrupt enable  This bit is set and cleared by software to enable/disable the end of calibration interrupt.  Note: The software is allowed to write this bit only when ADSTART bit is cleared to 0 (this ensures that no conversion is ongoing).\n0 : B_0x0 = End of calibration interrupt disabled\n1 : B_0x1 = End of calibration interrupt enabled </i>
//    <combo> 
//      <loc> ( (unsigned int) ADC_ADC_IER ) </loc>
//      <o.11..11> EOCALIE
//        <0=> 0: B_0x0 = End of calibration interrupt disabled
//        <1=> 1: B_0x1 = End of calibration interrupt enabled
//    </combo>
//  </item>
//  


// -----------------------------  Field Item: ADC_ADC_IER_CCRDYIE  --------------------------------
// SVD Line: 15779

//  <item> SFDITEM_FIELD__ADC_ADC_IER_CCRDYIE
//    <name> CCRDYIE </name>
//    <rw> 
//    <i> [Bit 13] RW (@ 0x40012404) \nChannel Configuration Ready Interrupt enable  This bit is set and cleared by software to enable/disable the channel configuration ready interrupt.  Note: The software is allowed to write this bit only when ADSTART bit is cleared to 0 (this ensures that no conversion is ongoing).\n0 : B_0x0 = Channel configuration ready interrupt disabled\n1 : B_0x1 = Channel configuration ready interrupt enabled </i>
//    <combo> 
//      <loc> ( (unsigned int) ADC_ADC_IER ) </loc>
//      <o.13..13> CCRDYIE
//        <0=> 0: B_0x0 = Channel configuration ready interrupt disabled
//        <1=> 1: B_0x1 = Channel configuration ready interrupt enabled
//    </combo>
//  </item>
//  


// -------------------------------  Register RTree: ADC_ADC_IER  ----------------------------------
// SVD Line: 15581

//  <rtree> SFDITEM_REG__ADC_ADC_IER
//    <name> ADC_IER </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x40012404) ADC interrupt enable register </i>
//    <loc> ( (unsigned int)((ADC_ADC_IER >> 0) & 0xFFFFFFFF), ((ADC_ADC_IER = (ADC_ADC_IER & ~(0x2B9FUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0x2B9F) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__ADC_ADC_IER_ADRDYIE </item>
//    <item> SFDITEM_FIELD__ADC_ADC_IER_EOSMPIE </item>
//    <item> SFDITEM_FIELD__ADC_ADC_IER_EOCIE </item>
//    <item> SFDITEM_FIELD__ADC_ADC_IER_EOSIE </item>
//    <item> SFDITEM_FIELD__ADC_ADC_IER_OVRIE </item>
//    <item> SFDITEM_FIELD__ADC_ADC_IER_AWD1IE </item>
//    <item> SFDITEM_FIELD__ADC_ADC_IER_AWD2IE </item>
//    <item> SFDITEM_FIELD__ADC_ADC_IER_AWD3IE </item>
//    <item> SFDITEM_FIELD__ADC_ADC_IER_EOCALIE </item>
//    <item> SFDITEM_FIELD__ADC_ADC_IER_CCRDYIE </item>
//  </rtree>
//  


// ----------------------------  Register Item Address: ADC_ADC_CR  -------------------------------
// SVD Line: 15802

unsigned int ADC_ADC_CR __AT (0x40012408);



// -------------------------------  Field Item: ADC_ADC_CR_ADEN  ----------------------------------
// SVD Line: 15811

//  <item> SFDITEM_FIELD__ADC_ADC_CR_ADEN
//    <name> ADEN </name>
//    <rw> 
//    <i> [Bit 0] RW (@ 0x40012408) \nADC enable command  This bit is set by software to enable the ADC. The ADC is effectively ready to operate once the ADRDY flag has been set.  It is cleared by hardware when the ADC is disabled, after the execution of the ADDIS command.  Note: The software is allowed to set ADEN only when all bits of ADC_CR registers are 0 (ADCAL=0, ADSTP=0, ADSTART=0, ADDIS=0 and ADEN=0)\n0 : B_0x0 = ADC is disabled (OFF state)\n1 : B_0x1 = Write 1 to enable the ADC. </i>
//    <combo> 
//      <loc> ( (unsigned int) ADC_ADC_CR ) </loc>
//      <o.0..0> ADEN
//        <0=> 0: B_0x0 = ADC is disabled (OFF state)
//        <1=> 1: B_0x1 = Write 1 to enable the ADC.
//    </combo>
//  </item>
//  


// ------------------------------  Field Item: ADC_ADC_CR_ADDIS  ----------------------------------
// SVD Line: 15833

//  <item> SFDITEM_FIELD__ADC_ADC_CR_ADDIS
//    <name> ADDIS </name>
//    <rw> 
//    <i> [Bit 1] RW (@ 0x40012408) \nADC disable command  This bit is set by software to disable the ADC (ADDIS command) and put it into power-down state (OFF state).  It is cleared by hardware once the ADC is effectively disabled (ADEN is also cleared by hardware at this time).  Note: Setting ADDIS to '1 is only effective when ADEN=1 and ADSTART=0 (which ensures that no conversion is ongoing)\n0 : B_0x0 = No ADDIS command ongoing\n1 : B_0x1 = Write 1 to disable the ADC. Read 1 means that an ADDIS command is in progress. </i>
//    <combo> 
//      <loc> ( (unsigned int) ADC_ADC_CR ) </loc>
//      <o.1..1> ADDIS
//        <0=> 0: B_0x0 = No ADDIS command ongoing
//        <1=> 1: B_0x1 = Write 1 to disable the ADC. Read 1 means that an ADDIS command is in progress.
//    </combo>
//  </item>
//  


// -----------------------------  Field Item: ADC_ADC_CR_ADSTART  ---------------------------------
// SVD Line: 15855

//  <item> SFDITEM_FIELD__ADC_ADC_CR_ADSTART
//    <name> ADSTART </name>
//    <rw> 
//    <i> [Bit 2] RW (@ 0x40012408) \nADC start conversion command  This bit is set by software to start ADC conversion. Depending on the EXTEN [1:0] configuration bits, a conversion either starts immediately (software trigger configuration) or once a hardware trigger event occurs (hardware trigger configuration).  It is cleared by hardware:  In single conversion mode (CONT=0, DISCEN=0), when software trigger is selected (EXTEN=00): at the assertion of the end of Conversion Sequence (EOS) flag.  In discontinuous conversion mode(CONT=0, DISCEN=1), when the software trigger is selected (EXTEN=00): at the assertion of the end of Conversion (EOC) flag.  In all other cases: after the execution of the ADSTP command, at the same time as the ADSTP bit is cleared by hardware.  Note: The software is allowed to set ADSTART only when ADEN=1 and ADDIS=0 (ADC is enabled and there is no pending request to disable the ADC).  After writing to ADC_CHSELR register or changing CHSELRMOD or SCANDIRW, it is mandatory to wait until CCRDY flag is asserted before setting ADSTART, otherwise, the value written to ADSTART is ignored.\n0 : B_0x0 = No ADC conversion is ongoing.\n1 : B_0x1 = Write 1 to start the ADC. Read 1 means that the ADC is operating and may be converting. </i>
//    <combo> 
//      <loc> ( (unsigned int) ADC_ADC_CR ) </loc>
//      <o.2..2> ADSTART
//        <0=> 0: B_0x0 = No ADC conversion is ongoing.
//        <1=> 1: B_0x1 = Write 1 to start the ADC. Read 1 means that the ADC is operating and may be converting.
//    </combo>
//  </item>
//  


// ------------------------------  Field Item: ADC_ADC_CR_ADSTP  ----------------------------------
// SVD Line: 15881

//  <item> SFDITEM_FIELD__ADC_ADC_CR_ADSTP
//    <name> ADSTP </name>
//    <rw> 
//    <i> [Bit 4] RW (@ 0x40012408) \nADC stop conversion command  This bit is set by software to stop and discard an ongoing conversion (ADSTP Command).  It is cleared by hardware when the conversion is effectively discarded and the ADC is ready to accept a new start conversion command.  Note: Setting ADSTP to '1 is only effective when ADSTART=1 and ADDIS=0 (ADC is enabled and may be converting and there is no pending request to disable the ADC)\n0 : B_0x0 = No ADC stop conversion command ongoing\n1 : B_0x1 = Write 1 to stop the ADC. Read 1 means that an ADSTP command is in progress. </i>
//    <combo> 
//      <loc> ( (unsigned int) ADC_ADC_CR ) </loc>
//      <o.4..4> ADSTP
//        <0=> 0: B_0x0 = No ADC stop conversion command ongoing
//        <1=> 1: B_0x1 = Write 1 to stop the ADC. Read 1 means that an ADSTP command is in progress.
//    </combo>
//  </item>
//  


// -----------------------------  Field Item: ADC_ADC_CR_ADVREGEN  --------------------------------
// SVD Line: 15903

//  <item> SFDITEM_FIELD__ADC_ADC_CR_ADVREGEN
//    <name> ADVREGEN </name>
//    <rw> 
//    <i> [Bit 28] RW (@ 0x40012408) \nADC Voltage Regulator Enable  This bit is set by software, to enable the ADC internal voltage regulator. The voltage regulator output is available after tADCVREG_SETUP.  It is cleared by software to disable the voltage regulator. It can be cleared only if ADEN is et to 0.  Note: The software is allowed to program this bit field only when the ADC is disabled (ADCAL=0, ADSTART=0, ADSTP=0, ADDIS=0 and ADEN=0).\n0 : B_0x0 = ADC voltage regulator disabled\n1 : B_0x1 = ADC voltage regulator enabled </i>
//    <combo> 
//      <loc> ( (unsigned int) ADC_ADC_CR ) </loc>
//      <o.28..28> ADVREGEN
//        <0=> 0: B_0x0 = ADC voltage regulator disabled
//        <1=> 1: B_0x1 = ADC voltage regulator enabled
//    </combo>
//  </item>
//  


// ------------------------------  Field Item: ADC_ADC_CR_ADCAL  ----------------------------------
// SVD Line: 15925

//  <item> SFDITEM_FIELD__ADC_ADC_CR_ADCAL
//    <name> ADCAL </name>
//    <rw> 
//    <i> [Bit 31] RW (@ 0x40012408) \nADC calibration  This bit is set by software to start the calibration of the ADC.  It is cleared by hardware after calibration is complete.  Note: The software is allowed to set ADCAL only when the ADC is disabled (ADCAL=0, ADSTART=0, ADSTP=0, ADDIS=0 and ADEN=0).  The software is allowed to update the calibration factor by writing ADC_CALFACT only when ADEN=1 and ADSTART=0 (ADC enabled and no conversion is ongoing).\n0 : B_0x0 = Calibration complete\n1 : B_0x1 = Write 1 to calibrate the ADC. Read at 1 means that a calibration is in progress. </i>
//    <combo> 
//      <loc> ( (unsigned int) ADC_ADC_CR ) </loc>
//      <o.31..31> ADCAL
//        <0=> 0: B_0x0 = Calibration complete
//        <1=> 1: B_0x1 = Write 1 to calibrate the ADC. Read at 1 means that a calibration is in progress.
//    </combo>
//  </item>
//  


// -------------------------------  Register RTree: ADC_ADC_CR  -----------------------------------
// SVD Line: 15802

//  <rtree> SFDITEM_REG__ADC_ADC_CR
//    <name> ADC_CR </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x40012408) ADC control register </i>
//    <loc> ( (unsigned int)((ADC_ADC_CR >> 0) & 0xFFFFFFFF), ((ADC_ADC_CR = (ADC_ADC_CR & ~(0x90000017UL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0x90000017) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__ADC_ADC_CR_ADEN </item>
//    <item> SFDITEM_FIELD__ADC_ADC_CR_ADDIS </item>
//    <item> SFDITEM_FIELD__ADC_ADC_CR_ADSTART </item>
//    <item> SFDITEM_FIELD__ADC_ADC_CR_ADSTP </item>
//    <item> SFDITEM_FIELD__ADC_ADC_CR_ADVREGEN </item>
//    <item> SFDITEM_FIELD__ADC_ADC_CR_ADCAL </item>
//  </rtree>
//  


// --------------------------  Register Item Address: ADC_ADC_CFGR1  ------------------------------
// SVD Line: 15950

unsigned int ADC_ADC_CFGR1 __AT (0x4001240C);



// -----------------------------  Field Item: ADC_ADC_CFGR1_DMAEN  --------------------------------
// SVD Line: 15959

//  <item> SFDITEM_FIELD__ADC_ADC_CFGR1_DMAEN
//    <name> DMAEN </name>
//    <rw> 
//    <i> [Bit 0] RW (@ 0x4001240C) \nDirect memory access enable  This bit is set and cleared by software to enable the generation of DMA requests. This allows the DMA controller to be used to manage automatically the converted data. For more details, refer to .  Note: The software is allowed to write this bit only when ADSTART bit is cleared to 0 (this ensures that no conversion is ongoing).\n0 : B_0x0 = DMA disabled\n1 : B_0x1 = DMA enabled </i>
//    <combo> 
//      <loc> ( (unsigned int) ADC_ADC_CFGR1 ) </loc>
//      <o.0..0> DMAEN
//        <0=> 0: B_0x0 = DMA disabled
//        <1=> 1: B_0x1 = DMA enabled
//    </combo>
//  </item>
//  


// ----------------------------  Field Item: ADC_ADC_CFGR1_DMACFG  --------------------------------
// SVD Line: 15980

//  <item> SFDITEM_FIELD__ADC_ADC_CFGR1_DMACFG
//    <name> DMACFG </name>
//    <rw> 
//    <i> [Bit 1] RW (@ 0x4001240C) \nDirect memory access configuration  This bit is set and cleared by software to select between two DMA modes of operation and is effective only when DMAEN=1.  For more details, refer to page391  Note: The software is allowed to write this bit only when ADSTART bit is cleared to 0 (this ensures that no conversion is ongoing).\n0 : B_0x0 = DMA one shot mode selected\n1 : B_0x1 = DMA circular mode selected </i>
//    <combo> 
//      <loc> ( (unsigned int) ADC_ADC_CFGR1 ) </loc>
//      <o.1..1> DMACFG
//        <0=> 0: B_0x0 = DMA one shot mode selected
//        <1=> 1: B_0x1 = DMA circular mode selected
//    </combo>
//  </item>
//  


// ----------------------------  Field Item: ADC_ADC_CFGR1_SCANDIR  -------------------------------
// SVD Line: 16002

//  <item> SFDITEM_FIELD__ADC_ADC_CFGR1_SCANDIR
//    <name> SCANDIR </name>
//    <rw> 
//    <i> [Bit 2] RW (@ 0x4001240C) \nScan sequence direction  This bit is set and cleared by software to select the direction in which the channels is scanned in the sequence. It is effective only if CHSELMOD bit is cleared to 0.  Note: The software is allowed to write this bit only when ADSTART bit is cleared to 0 (this ensures that no conversion is ongoing).  If CCRDY is not yet asserted after channel configuration (writing ADC_CHSELR register or changing CHSELRMOD or SCANDIR), the value written to this bit is ignored.\n0 : B_0x0 = Upward scan (from CHSEL0 to CHSEL18)\n1 : B_0x1 = Backward scan (from CHSEL18 to CHSEL0) </i>
//    <combo> 
//      <loc> ( (unsigned int) ADC_ADC_CFGR1 ) </loc>
//      <o.2..2> SCANDIR
//        <0=> 0: B_0x0 = Upward scan (from CHSEL0 to CHSEL18)
//        <1=> 1: B_0x1 = Backward scan (from CHSEL18 to CHSEL0)
//    </combo>
//  </item>
//  


// ------------------------------  Field Item: ADC_ADC_CFGR1_RES  ---------------------------------
// SVD Line: 16024

//  <item> SFDITEM_FIELD__ADC_ADC_CFGR1_RES
//    <name> RES </name>
//    <rw> 
//    <i> [Bits 4..3] RW (@ 0x4001240C) \nData resolution  These bits are written by software to select the resolution of the conversion.  Note: The software is allowed to write these bits only when ADEN=0.\n0 : B_0x0 = 12 bits\n1 : B_0x1 = 10 bits\n2 : B_0x2 = 8 bits\n3 : B_0x3 = 6 bits </i>
//    <combo> 
//      <loc> ( (unsigned int) ADC_ADC_CFGR1 ) </loc>
//      <o.4..3> RES
//        <0=> 0: B_0x0 = 12 bits
//        <1=> 1: B_0x1 = 10 bits
//        <2=> 2: B_0x2 = 8 bits
//        <3=> 3: B_0x3 = 6 bits
//    </combo>
//  </item>
//  


// -----------------------------  Field Item: ADC_ADC_CFGR1_ALIGN  --------------------------------
// SVD Line: 16055

//  <item> SFDITEM_FIELD__ADC_ADC_CFGR1_ALIGN
//    <name> ALIGN </name>
//    <rw> 
//    <i> [Bit 5] RW (@ 0x4001240C) \nData alignment  This bit is set and cleared by software to select right or left alignment. Refer to Data alignment and resolution (oversampling disabled: OVSE = 0) on page389  Note: The software is allowed to write this bit only when ADSTART bit is cleared to 0 (this ensures that no conversion is ongoing).\n0 : B_0x0 = Right alignment\n1 : B_0x1 = Left alignment </i>
//    <combo> 
//      <loc> ( (unsigned int) ADC_ADC_CFGR1 ) </loc>
//      <o.5..5> ALIGN
//        <0=> 0: B_0x0 = Right alignment
//        <1=> 1: B_0x1 = Left alignment
//    </combo>
//  </item>
//  


// ----------------------------  Field Item: ADC_ADC_CFGR1_EXTSEL  --------------------------------
// SVD Line: 16076

//  <item> SFDITEM_FIELD__ADC_ADC_CFGR1_EXTSEL
//    <name> EXTSEL </name>
//    <rw> 
//    <i> [Bits 8..6] RW (@ 0x4001240C) \nExternal trigger selection  These bits select the external event used to trigger the start of conversion (refer to External triggers for details):  Note: The software is allowed to write this bit only when ADSTART bit is cleared to 0 (this ensures that no conversion is ongoing).\n0 : B_0x0 = TRG0\n1 : B_0x1 = TRG1\n2 : B_0x2 = TRG2\n3 : B_0x3 = TRG3\n4 : B_0x4 = TRG4\n5 : B_0x5 = TRG5\n6 : B_0x6 = TRG6\n7 : B_0x7 = TRG7 </i>
//    <combo> 
//      <loc> ( (unsigned int) ADC_ADC_CFGR1 ) </loc>
//      <o.8..6> EXTSEL
//        <0=> 0: B_0x0 = TRG0
//        <1=> 1: B_0x1 = TRG1
//        <2=> 2: B_0x2 = TRG2
//        <3=> 3: B_0x3 = TRG3
//        <4=> 4: B_0x4 = TRG4
//        <5=> 5: B_0x5 = TRG5
//        <6=> 6: B_0x6 = TRG6
//        <7=> 7: B_0x7 = TRG7
//    </combo>
//  </item>
//  


// -----------------------------  Field Item: ADC_ADC_CFGR1_EXTEN  --------------------------------
// SVD Line: 16127

//  <item> SFDITEM_FIELD__ADC_ADC_CFGR1_EXTEN
//    <name> EXTEN </name>
//    <rw> 
//    <i> [Bits 11..10] RW (@ 0x4001240C) \nExternal trigger enable and polarity selection  These bits are set and cleared by software to select the external trigger polarity and enable the trigger.  Note: The software is allowed to write this bit only when ADSTART bit is cleared to 0 (this ensures that no conversion is ongoing).\n0 : B_0x0 = Hardware trigger detection disabled (conversions can be started by software)\n1 : B_0x1 = Hardware trigger detection on the rising edge\n2 : B_0x2 = Hardware trigger detection on the falling edge\n3 : B_0x3 = Hardware trigger detection on both the rising and falling edges </i>
//    <combo> 
//      <loc> ( (unsigned int) ADC_ADC_CFGR1 ) </loc>
//      <o.11..10> EXTEN
//        <0=> 0: B_0x0 = Hardware trigger detection disabled (conversions can be started by software)
//        <1=> 1: B_0x1 = Hardware trigger detection on the rising edge
//        <2=> 2: B_0x2 = Hardware trigger detection on the falling edge
//        <3=> 3: B_0x3 = Hardware trigger detection on both the rising and falling edges
//    </combo>
//  </item>
//  


// ----------------------------  Field Item: ADC_ADC_CFGR1_OVRMOD  --------------------------------
// SVD Line: 16158

//  <item> SFDITEM_FIELD__ADC_ADC_CFGR1_OVRMOD
//    <name> OVRMOD </name>
//    <rw> 
//    <i> [Bit 12] RW (@ 0x4001240C) \nOverrun management mode  This bit is set and cleared by software and configure the way data overruns are managed.  Note: The software is allowed to write this bit only when ADSTART bit is cleared to 0 (this ensures that no conversion is ongoing).\n0 : B_0x0 = ADC_DR register is preserved with the old data when an overrun is detected.\n1 : B_0x1 = ADC_DR register is overwritten with the last conversion result when an overrun is detected. </i>
//    <combo> 
//      <loc> ( (unsigned int) ADC_ADC_CFGR1 ) </loc>
//      <o.12..12> OVRMOD
//        <0=> 0: B_0x0 = ADC_DR register is preserved with the old data when an overrun is detected.
//        <1=> 1: B_0x1 = ADC_DR register is overwritten with the last conversion result when an overrun is detected.
//    </combo>
//  </item>
//  


// -----------------------------  Field Item: ADC_ADC_CFGR1_CONT  ---------------------------------
// SVD Line: 16179

//  <item> SFDITEM_FIELD__ADC_ADC_CFGR1_CONT
//    <name> CONT </name>
//    <rw> 
//    <i> [Bit 13] RW (@ 0x4001240C) \nSingle / continuous conversion mode  This bit is set and cleared by software. If it is set, conversion takes place continuously until it is cleared.  Note: It is not possible to have both discontinuous mode and continuous mode enabled: it is forbidden to set both bits DISCEN=1 and CONT=1.  The software is allowed to write this bit only when ADSTART bit is cleared to 0 (this ensures that no conversion is ongoing).\n0 : B_0x0 = Single conversion mode\n1 : B_0x1 = Continuous conversion mode </i>
//    <combo> 
//      <loc> ( (unsigned int) ADC_ADC_CFGR1 ) </loc>
//      <o.13..13> CONT
//        <0=> 0: B_0x0 = Single conversion mode
//        <1=> 1: B_0x1 = Continuous conversion mode
//    </combo>
//  </item>
//  


// -----------------------------  Field Item: ADC_ADC_CFGR1_WAIT  ---------------------------------
// SVD Line: 16201

//  <item> SFDITEM_FIELD__ADC_ADC_CFGR1_WAIT
//    <name> WAIT </name>
//    <rw> 
//    <i> [Bit 14] RW (@ 0x4001240C) \nWait conversion mode  This bit is set and cleared by software to enable/disable wait conversion mode..  Note: The software is allowed to write this bit only when ADSTART bit is cleared to 0 (this ensures that no conversion is ongoing).\n0 : B_0x0 = Wait conversion mode off\n1 : B_0x1 = Wait conversion mode on </i>
//    <combo> 
//      <loc> ( (unsigned int) ADC_ADC_CFGR1 ) </loc>
//      <o.14..14> WAIT
//        <0=> 0: B_0x0 = Wait conversion mode off
//        <1=> 1: B_0x1 = Wait conversion mode on
//    </combo>
//  </item>
//  


// ----------------------------  Field Item: ADC_ADC_CFGR1_AUTOFF  --------------------------------
// SVD Line: 16222

//  <item> SFDITEM_FIELD__ADC_ADC_CFGR1_AUTOFF
//    <name> AUTOFF </name>
//    <rw> 
//    <i> [Bit 15] RW (@ 0x4001240C) \nAuto-off mode  This bit is set and cleared by software to enable/disable auto-off mode..  Note: The software is allowed to write this bit only when ADSTART bit is cleared to 0 (this ensures that no conversion is ongoing).\n0 : B_0x0 = Auto-off mode disabled\n1 : B_0x1 = Auto-off mode enabled </i>
//    <combo> 
//      <loc> ( (unsigned int) ADC_ADC_CFGR1 ) </loc>
//      <o.15..15> AUTOFF
//        <0=> 0: B_0x0 = Auto-off mode disabled
//        <1=> 1: B_0x1 = Auto-off mode enabled
//    </combo>
//  </item>
//  


// ----------------------------  Field Item: ADC_ADC_CFGR1_DISCEN  --------------------------------
// SVD Line: 16243

//  <item> SFDITEM_FIELD__ADC_ADC_CFGR1_DISCEN
//    <name> DISCEN </name>
//    <rw> 
//    <i> [Bit 16] RW (@ 0x4001240C) \nDiscontinuous mode  This bit is set and cleared by software to enable/disable discontinuous mode.  Note: It is not possible to have both discontinuous mode and continuous mode enabled: it is forbidden to set both bits DISCEN=1 and CONT=1.  The software is allowed to write this bit only when ADSTART bit is cleared to 0 (this ensures that no conversion is ongoing).\n0 : B_0x0 = Discontinuous mode disabled\n1 : B_0x1 = Discontinuous mode enabled </i>
//    <combo> 
//      <loc> ( (unsigned int) ADC_ADC_CFGR1 ) </loc>
//      <o.16..16> DISCEN
//        <0=> 0: B_0x0 = Discontinuous mode disabled
//        <1=> 1: B_0x1 = Discontinuous mode enabled
//    </combo>
//  </item>
//  


// ---------------------------  Field Item: ADC_ADC_CFGR1_CHSELRMOD  ------------------------------
// SVD Line: 16265

//  <item> SFDITEM_FIELD__ADC_ADC_CFGR1_CHSELRMOD
//    <name> CHSELRMOD </name>
//    <rw> 
//    <i> [Bit 21] RW (@ 0x4001240C) \nMode selection of the ADC_CHSELR register  This bit is set and cleared by software to control the ADC_CHSELR feature:  Note: The software is allowed to write this bit only when ADSTART bit is cleared to 0 (this ensures that no conversion is ongoing).  If CCRDY is not yet asserted after channel configuration (writing ADC_CHSELR register or changing CHSELRMOD or SCANDIR), the value written to this bit is ignored.\n0 : B_0x0 = Each bit of the ADC_CHSELR register enables an input\n1 : B_0x1 = ADC_CHSELR register is able to sequence up to 8 channels </i>
//    <combo> 
//      <loc> ( (unsigned int) ADC_ADC_CFGR1 ) </loc>
//      <o.21..21> CHSELRMOD
//        <0=> 0: B_0x0 = Each bit of the ADC_CHSELR register enables an input
//        <1=> 1: B_0x1 = ADC_CHSELR register is able to sequence up to 8 channels
//    </combo>
//  </item>
//  


// ----------------------------  Field Item: ADC_ADC_CFGR1_AWD1SGL  -------------------------------
// SVD Line: 16287

//  <item> SFDITEM_FIELD__ADC_ADC_CFGR1_AWD1SGL
//    <name> AWD1SGL </name>
//    <rw> 
//    <i> [Bit 22] RW (@ 0x4001240C) \nEnable the watchdog on a single channel or on all channels  This bit is set and cleared by software to enable the analog watchdog on the channel identified by the AWDCH[4:0] bits or on all the channels  Note: The software is allowed to write this bit only when ADSTART bit is cleared to 0 (this ensures that no conversion is ongoing).\n0 : B_0x0 = Analog watchdog 1 enabled on all channels\n1 : B_0x1 = Analog watchdog 1 enabled on a single channel </i>
//    <combo> 
//      <loc> ( (unsigned int) ADC_ADC_CFGR1 ) </loc>
//      <o.22..22> AWD1SGL
//        <0=> 0: B_0x0 = Analog watchdog 1 enabled on all channels
//        <1=> 1: B_0x1 = Analog watchdog 1 enabled on a single channel
//    </combo>
//  </item>
//  


// ----------------------------  Field Item: ADC_ADC_CFGR1_AWD1EN  --------------------------------
// SVD Line: 16308

//  <item> SFDITEM_FIELD__ADC_ADC_CFGR1_AWD1EN
//    <name> AWD1EN </name>
//    <rw> 
//    <i> [Bit 23] RW (@ 0x4001240C) \nAnalog watchdog enable  This bit is set and cleared by software.  Note: The software is allowed to write this bit only when ADSTART bit is cleared to 0 (this ensures that no conversion is ongoing).\n0 : B_0x0 = Analog watchdog 1 disabled\n1 : B_0x1 = Analog watchdog 1 enabled </i>
//    <combo> 
//      <loc> ( (unsigned int) ADC_ADC_CFGR1 ) </loc>
//      <o.23..23> AWD1EN
//        <0=> 0: B_0x0 = Analog watchdog 1 disabled
//        <1=> 1: B_0x1 = Analog watchdog 1 enabled
//    </combo>
//  </item>
//  


// ----------------------------  Field Item: ADC_ADC_CFGR1_AWD1CH  --------------------------------
// SVD Line: 16329

//  <item> SFDITEM_FIELD__ADC_ADC_CFGR1_AWD1CH
//    <name> AWD1CH </name>
//    <rw> 
//    <i> [Bits 30..26] RW (@ 0x4001240C) \nAnalog watchdog channel selection  These bits are set and cleared by software. They select the input channel to be guarded by the analog watchdog.  .....  Others: Reserved  Note: The channel selected by the AWDCH[4:0] bits must be also set into the CHSELR register.  The software is allowed to write this bit only when ADSTART bit is cleared to 0 (this ensures that no conversion is ongoing).\n0 : B_0x0 = ADC analog input Channel 0 monitored by AWD\n1 : B_0x1 = ADC analog input Channel 1 monitored by AWD\n2 : Reserved - do not use\n3 : Reserved - do not use\n4 : Reserved - do not use\n5 : Reserved - do not use\n6 : Reserved - do not use\n7 : Reserved - do not use\n8 : Reserved - do not use\n9 : Reserved - do not use\n10 : Reserved - do not use\n11 : Reserved - do not use\n12 : Reserved - do not use\n13 : Reserved - do not use\n14 : Reserved - do not use\n15 : Reserved - do not use\n16 : Reserved - do not use\n17 : B_0x11 = ADC analog input Channel 17 monitored by AWD\n18 : B_0x12 = ADC analog input Channel 18 monitored by AWD\n19 : Reserved - do not use\n20 : Reserved - do not use\n21 : Reserved - do not use\n22 : Reserved - do not use\n23 : Reserved - do not use\n24 : Reserved - do not use\n25 : Reserved - do not use\n26 : Reserved - do not use\n27 : Reserved - do not use\n28 : Reserved - do not use\n29 : Reserved - do not use\n30 : Reserved - do not use\n31 : Reserved - do not use </i>
//    <combo> 
//      <loc> ( (unsigned int) ADC_ADC_CFGR1 ) </loc>
//      <o.30..26> AWD1CH
//        <0=> 0: B_0x0 = ADC analog input Channel 0 monitored by AWD
//        <1=> 1: B_0x1 = ADC analog input Channel 1 monitored by AWD
//        <2=> 2: 
//        <3=> 3: 
//        <4=> 4: 
//        <5=> 5: 
//        <6=> 6: 
//        <7=> 7: 
//        <8=> 8: 
//        <9=> 9: 
//        <10=> 10: 
//        <11=> 11: 
//        <12=> 12: 
//        <13=> 13: 
//        <14=> 14: 
//        <15=> 15: 
//        <16=> 16: 
//        <17=> 17: B_0x11 = ADC analog input Channel 17 monitored by AWD
//        <18=> 18: B_0x12 = ADC analog input Channel 18 monitored by AWD
//        <19=> 19: 
//        <20=> 20: 
//        <21=> 21: 
//        <22=> 22: 
//        <23=> 23: 
//        <24=> 24: 
//        <25=> 25: 
//        <26=> 26: 
//        <27=> 27: 
//        <28=> 28: 
//        <29=> 29: 
//        <30=> 30: 
//        <31=> 31: 
//    </combo>
//  </item>
//  


// ------------------------------  Register RTree: ADC_ADC_CFGR1  ---------------------------------
// SVD Line: 15950

//  <rtree> SFDITEM_REG__ADC_ADC_CFGR1
//    <name> ADC_CFGR1 </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x4001240C) ADC configuration register 1 </i>
//    <loc> ( (unsigned int)((ADC_ADC_CFGR1 >> 0) & 0xFFFFFFFF), ((ADC_ADC_CFGR1 = (ADC_ADC_CFGR1 & ~(0x7CE1FDFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0x7CE1FDFF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__ADC_ADC_CFGR1_DMAEN </item>
//    <item> SFDITEM_FIELD__ADC_ADC_CFGR1_DMACFG </item>
//    <item> SFDITEM_FIELD__ADC_ADC_CFGR1_SCANDIR </item>
//    <item> SFDITEM_FIELD__ADC_ADC_CFGR1_RES </item>
//    <item> SFDITEM_FIELD__ADC_ADC_CFGR1_ALIGN </item>
//    <item> SFDITEM_FIELD__ADC_ADC_CFGR1_EXTSEL </item>
//    <item> SFDITEM_FIELD__ADC_ADC_CFGR1_EXTEN </item>
//    <item> SFDITEM_FIELD__ADC_ADC_CFGR1_OVRMOD </item>
//    <item> SFDITEM_FIELD__ADC_ADC_CFGR1_CONT </item>
//    <item> SFDITEM_FIELD__ADC_ADC_CFGR1_WAIT </item>
//    <item> SFDITEM_FIELD__ADC_ADC_CFGR1_AUTOFF </item>
//    <item> SFDITEM_FIELD__ADC_ADC_CFGR1_DISCEN </item>
//    <item> SFDITEM_FIELD__ADC_ADC_CFGR1_CHSELRMOD </item>
//    <item> SFDITEM_FIELD__ADC_ADC_CFGR1_AWD1SGL </item>
//    <item> SFDITEM_FIELD__ADC_ADC_CFGR1_AWD1EN </item>
//    <item> SFDITEM_FIELD__ADC_ADC_CFGR1_AWD1CH </item>
//  </rtree>
//  


// --------------------------  Register Item Address: ADC_ADC_CFGR2  ------------------------------
// SVD Line: 16365

unsigned int ADC_ADC_CFGR2 __AT (0x40012410);



// -----------------------------  Field Item: ADC_ADC_CFGR2_OVSE  ---------------------------------
// SVD Line: 16374

//  <item> SFDITEM_FIELD__ADC_ADC_CFGR2_OVSE
//    <name> OVSE </name>
//    <rw> 
//    <i> [Bit 0] RW (@ 0x40012410) \nOversampler Enable  This bit is set and cleared by software.  Note: Software is allowed to write this bit only when ADSTART=0 (which ensures that no conversion is ongoing).\n0 : B_0x0 = Oversampler disabled\n1 : B_0x1 = Oversampler enabled </i>
//    <combo> 
//      <loc> ( (unsigned int) ADC_ADC_CFGR2 ) </loc>
//      <o.0..0> OVSE
//        <0=> 0: B_0x0 = Oversampler disabled
//        <1=> 1: B_0x1 = Oversampler enabled
//    </combo>
//  </item>
//  


// -----------------------------  Field Item: ADC_ADC_CFGR2_OVSR  ---------------------------------
// SVD Line: 16395

//  <item> SFDITEM_FIELD__ADC_ADC_CFGR2_OVSR
//    <name> OVSR </name>
//    <rw> 
//    <i> [Bits 4..2] RW (@ 0x40012410) \nOversampling ratio  This bit filed defines the number of oversampling ratio.  Note: The software is allowed to write this bit only when ADSTART=0 (which ensures that no conversion is ongoing).\n0 : B_0x0 = 2x\n1 : B_0x1 = 4x\n2 : B_0x2 = 8x\n3 : B_0x3 = 16x\n4 : B_0x4 = 32x\n5 : B_0x5 = 64x\n6 : B_0x6 = 128x\n7 : B_0x7 = 256x </i>
//    <combo> 
//      <loc> ( (unsigned int) ADC_ADC_CFGR2 ) </loc>
//      <o.4..2> OVSR
//        <0=> 0: B_0x0 = 2x
//        <1=> 1: B_0x1 = 4x
//        <2=> 2: B_0x2 = 8x
//        <3=> 3: B_0x3 = 16x
//        <4=> 4: B_0x4 = 32x
//        <5=> 5: B_0x5 = 64x
//        <6=> 6: B_0x6 = 128x
//        <7=> 7: B_0x7 = 256x
//    </combo>
//  </item>
//  


// -----------------------------  Field Item: ADC_ADC_CFGR2_OVSS  ---------------------------------
// SVD Line: 16446

//  <item> SFDITEM_FIELD__ADC_ADC_CFGR2_OVSS
//    <name> OVSS </name>
//    <rw> 
//    <i> [Bits 8..5] RW (@ 0x40012410) \nOversampling shift  This bit is set and cleared by software.  Others: Reserved  Note: The software is allowed to write this bit only when ADSTART=0 (which ensures that no conversion is ongoing).\n0 : B_0x0 = No shift\n1 : B_0x1 = Shift 1-bit\n2 : B_0x2 = Shift 2-bits\n3 : B_0x3 = Shift 3-bits\n4 : B_0x4 = Shift 4-bits\n5 : B_0x5 = Shift 5-bits\n6 : B_0x6 = Shift 6-bits\n7 : B_0x7 = Shift 7-bits\n8 : B_0x8 = Shift 8-bits\n9 : Reserved - do not use\n10 : Reserved - do not use\n11 : Reserved - do not use\n12 : Reserved - do not use\n13 : Reserved - do not use\n14 : Reserved - do not use\n15 : Reserved - do not use </i>
//    <combo> 
//      <loc> ( (unsigned int) ADC_ADC_CFGR2 ) </loc>
//      <o.8..5> OVSS
//        <0=> 0: B_0x0 = No shift
//        <1=> 1: B_0x1 = Shift 1-bit
//        <2=> 2: B_0x2 = Shift 2-bits
//        <3=> 3: B_0x3 = Shift 3-bits
//        <4=> 4: B_0x4 = Shift 4-bits
//        <5=> 5: B_0x5 = Shift 5-bits
//        <6=> 6: B_0x6 = Shift 6-bits
//        <7=> 7: B_0x7 = Shift 7-bits
//        <8=> 8: B_0x8 = Shift 8-bits
//        <9=> 9: 
//        <10=> 10: 
//        <11=> 11: 
//        <12=> 12: 
//        <13=> 13: 
//        <14=> 14: 
//        <15=> 15: 
//    </combo>
//  </item>
//  


// -----------------------------  Field Item: ADC_ADC_CFGR2_TOVS  ---------------------------------
// SVD Line: 16503

//  <item> SFDITEM_FIELD__ADC_ADC_CFGR2_TOVS
//    <name> TOVS </name>
//    <rw> 
//    <i> [Bit 9] RW (@ 0x40012410) \nTriggered Oversampling  This bit is set and cleared by software.  Note: The software is allowed to write this bit only when ADSTART=0 (which ensures that no conversion is ongoing).\n0 : B_0x0 = All oversampled conversions for a channel are done consecutively after a trigger\n1 : B_0x1 = Each oversampled conversion for a channel needs a trigger </i>
//    <combo> 
//      <loc> ( (unsigned int) ADC_ADC_CFGR2 ) </loc>
//      <o.9..9> TOVS
//        <0=> 0: B_0x0 = All oversampled conversions for a channel are done consecutively after a trigger
//        <1=> 1: B_0x1 = Each oversampled conversion for a channel needs a trigger
//    </combo>
//  </item>
//  


// ----------------------------  Field Item: ADC_ADC_CFGR2_LFTRIG  --------------------------------
// SVD Line: 16524

//  <item> SFDITEM_FIELD__ADC_ADC_CFGR2_LFTRIG
//    <name> LFTRIG </name>
//    <rw> 
//    <i> [Bit 29] RW (@ 0x40012410) \nLow frequency trigger mode enable  This bit is set and cleared by software.  Note: The software is allowed to write this bit only when ADSTART bit is cleared to 0 (this ensures that no conversion is ongoing).\n0 : B_0x0 = Low Frequency Trigger Mode disabled\n1 : B_0x1 = Low Frequency Trigger Mode enabled </i>
//    <combo> 
//      <loc> ( (unsigned int) ADC_ADC_CFGR2 ) </loc>
//      <o.29..29> LFTRIG
//        <0=> 0: B_0x0 = Low Frequency Trigger Mode disabled
//        <1=> 1: B_0x1 = Low Frequency Trigger Mode enabled
//    </combo>
//  </item>
//  


// ----------------------------  Field Item: ADC_ADC_CFGR2_CKMODE  --------------------------------
// SVD Line: 16545

//  <item> SFDITEM_FIELD__ADC_ADC_CFGR2_CKMODE
//    <name> CKMODE </name>
//    <rw> 
//    <i> [Bits 31..30] RW (@ 0x40012410) \nADC clock mode  These bits are set and cleared by software to define how the analog ADC is clocked:  In all synchronous clock modes, there is no jitter in the delay from a timer trigger to the start of a conversion.  Note: The software is allowed to write these bits only when the ADC is disabled (ADCAL=0, ADSTART=0, ADSTP=0, ADDIS=0 and ADEN=0).\n0 : B_0x0 = ADCCLK (Asynchronous clock mode), generated at product level (refer to RCC section)\n1 : B_0x1 = PCLK/2 (Synchronous clock mode)\n2 : B_0x2 = PCLK/4 (Synchronous clock mode)\n3 : B_0x3 = PCLK (Synchronous clock mode). This configuration must be enabled only if PCLK has a 50% duty clock cycle (APB prescaler configured inside the RCC must be bypassed and the system clock must by 50% duty cycle) </i>
//    <combo> 
//      <loc> ( (unsigned int) ADC_ADC_CFGR2 ) </loc>
//      <o.31..30> CKMODE
//        <0=> 0: B_0x0 = ADCCLK (Asynchronous clock mode), generated at product level (refer to RCC section)
//        <1=> 1: B_0x1 = PCLK/2 (Synchronous clock mode)
//        <2=> 2: B_0x2 = PCLK/4 (Synchronous clock mode)
//        <3=> 3: B_0x3 = PCLK (Synchronous clock mode). This configuration must be enabled only if PCLK has a 50% duty clock cycle (APB prescaler configured inside the RCC must be bypassed and the system clock must by 50% duty cycle)
//    </combo>
//  </item>
//  


// ------------------------------  Register RTree: ADC_ADC_CFGR2  ---------------------------------
// SVD Line: 16365

//  <rtree> SFDITEM_REG__ADC_ADC_CFGR2
//    <name> ADC_CFGR2 </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x40012410) ADC configuration register 2 </i>
//    <loc> ( (unsigned int)((ADC_ADC_CFGR2 >> 0) & 0xFFFFFFFF), ((ADC_ADC_CFGR2 = (ADC_ADC_CFGR2 & ~(0xE00003FDUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xE00003FD) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__ADC_ADC_CFGR2_OVSE </item>
//    <item> SFDITEM_FIELD__ADC_ADC_CFGR2_OVSR </item>
//    <item> SFDITEM_FIELD__ADC_ADC_CFGR2_OVSS </item>
//    <item> SFDITEM_FIELD__ADC_ADC_CFGR2_TOVS </item>
//    <item> SFDITEM_FIELD__ADC_ADC_CFGR2_LFTRIG </item>
//    <item> SFDITEM_FIELD__ADC_ADC_CFGR2_CKMODE </item>
//  </rtree>
//  


// ---------------------------  Register Item Address: ADC_ADC_SMPR  ------------------------------
// SVD Line: 16579

unsigned int ADC_ADC_SMPR __AT (0x40012414);



// ------------------------------  Field Item: ADC_ADC_SMPR_SMP1  ---------------------------------
// SVD Line: 16588

//  <item> SFDITEM_FIELD__ADC_ADC_SMPR_SMP1
//    <name> SMP1 </name>
//    <rw> 
//    <i> [Bits 2..0] RW (@ 0x40012414) \nSampling time selection 1  These bits are written by software to select the sampling time that applies to all channels.  Note: The software is allowed to write this bit only when ADSTART=0 (which ensures that no conversion is ongoing).\n0 : B_0x0 = 1.5 ADC clock cycles\n1 : B_0x1 = 3.5 ADC clock cycles\n2 : B_0x2 = 7.5 ADC clock cycles\n3 : B_0x3 = 12.5 ADC clock cycles\n4 : B_0x4 = 19.5 ADC clock cycles\n5 : B_0x5 = 39.5 ADC clock cycles\n6 : B_0x6 = 79.5 ADC clock cycles\n7 : B_0x7 = 160.5 ADC clock cycles </i>
//    <combo> 
//      <loc> ( (unsigned int) ADC_ADC_SMPR ) </loc>
//      <o.2..0> SMP1
//        <0=> 0: B_0x0 = 1.5 ADC clock cycles
//        <1=> 1: B_0x1 = 3.5 ADC clock cycles
//        <2=> 2: B_0x2 = 7.5 ADC clock cycles
//        <3=> 3: B_0x3 = 12.5 ADC clock cycles
//        <4=> 4: B_0x4 = 19.5 ADC clock cycles
//        <5=> 5: B_0x5 = 39.5 ADC clock cycles
//        <6=> 6: B_0x6 = 79.5 ADC clock cycles
//        <7=> 7: B_0x7 = 160.5 ADC clock cycles
//    </combo>
//  </item>
//  


// ------------------------------  Field Item: ADC_ADC_SMPR_SMP2  ---------------------------------
// SVD Line: 16639

//  <item> SFDITEM_FIELD__ADC_ADC_SMPR_SMP2
//    <name> SMP2 </name>
//    <rw> 
//    <i> [Bits 6..4] RW (@ 0x40012414) \nSampling time selection 2  These bits are written by software to select the sampling time that applies to all channels.  Note: The software is allowed to write this bit only when ADSTART=0 (which ensures that no conversion is ongoing).\n0 : B_0x0 = 1.5 ADC clock cycles\n1 : B_0x1 = 3.5 ADC clock cycles\n2 : B_0x2 = 7.5 ADC clock cycles\n3 : B_0x3 = 12.5 ADC clock cycles\n4 : B_0x4 = 19.5 ADC clock cycles\n5 : B_0x5 = 39.5 ADC clock cycles\n6 : B_0x6 = 79.5 ADC clock cycles\n7 : B_0x7 = 160.5 ADC clock cycles </i>
//    <combo> 
//      <loc> ( (unsigned int) ADC_ADC_SMPR ) </loc>
//      <o.6..4> SMP2
//        <0=> 0: B_0x0 = 1.5 ADC clock cycles
//        <1=> 1: B_0x1 = 3.5 ADC clock cycles
//        <2=> 2: B_0x2 = 7.5 ADC clock cycles
//        <3=> 3: B_0x3 = 12.5 ADC clock cycles
//        <4=> 4: B_0x4 = 19.5 ADC clock cycles
//        <5=> 5: B_0x5 = 39.5 ADC clock cycles
//        <6=> 6: B_0x6 = 79.5 ADC clock cycles
//        <7=> 7: B_0x7 = 160.5 ADC clock cycles
//    </combo>
//  </item>
//  


// ----------------------------  Field Item: ADC_ADC_SMPR_SMPSEL0  --------------------------------
// SVD Line: 16690

//  <item> SFDITEM_FIELD__ADC_ADC_SMPR_SMPSEL0
//    <name> SMPSEL0 </name>
//    <rw> 
//    <i> [Bit 8] RW (@ 0x40012414) \nChannel-x sampling time selection  These bits are written by software to define which sampling time is used.  Note: The software is allowed to write this bit only when ADSTART=0 (which ensures that no conversion is ongoing).\n0 : B_0x0 = Sampling time of CHANNELx use the setting of SMP1[2:0] register.\n1 : B_0x1 = Sampling time of CHANNELx use the setting of SMP2[2:0] register. </i>
//    <combo> 
//      <loc> ( (unsigned int) ADC_ADC_SMPR ) </loc>
//      <o.8..8> SMPSEL0
//        <0=> 0: B_0x0 = Sampling time of CHANNELx use the setting of SMP1[2:0] register.
//        <1=> 1: B_0x1 = Sampling time of CHANNELx use the setting of SMP2[2:0] register.
//    </combo>
//  </item>
//  


// ----------------------------  Field Item: ADC_ADC_SMPR_SMPSEL1  --------------------------------
// SVD Line: 16712

//  <item> SFDITEM_FIELD__ADC_ADC_SMPR_SMPSEL1
//    <name> SMPSEL1 </name>
//    <rw> 
//    <i> [Bit 9] RW (@ 0x40012414) \nChannel-x sampling time selection  These bits are written by software to define which sampling time is used.  Note: The software is allowed to write this bit only when ADSTART=0 (which ensures that no conversion is ongoing).\n0 : B_0x0 = Sampling time of CHANNELx use the setting of SMP1[2:0] register.\n1 : B_0x1 = Sampling time of CHANNELx use the setting of SMP2[2:0] register. </i>
//    <combo> 
//      <loc> ( (unsigned int) ADC_ADC_SMPR ) </loc>
//      <o.9..9> SMPSEL1
//        <0=> 0: B_0x0 = Sampling time of CHANNELx use the setting of SMP1[2:0] register.
//        <1=> 1: B_0x1 = Sampling time of CHANNELx use the setting of SMP2[2:0] register.
//    </combo>
//  </item>
//  


// ----------------------------  Field Item: ADC_ADC_SMPR_SMPSEL2  --------------------------------
// SVD Line: 16734

//  <item> SFDITEM_FIELD__ADC_ADC_SMPR_SMPSEL2
//    <name> SMPSEL2 </name>
//    <rw> 
//    <i> [Bit 10] RW (@ 0x40012414) \nChannel-x sampling time selection  These bits are written by software to define which sampling time is used.  Note: The software is allowed to write this bit only when ADSTART=0 (which ensures that no conversion is ongoing).\n0 : B_0x0 = Sampling time of CHANNELx use the setting of SMP1[2:0] register.\n1 : B_0x1 = Sampling time of CHANNELx use the setting of SMP2[2:0] register. </i>
//    <combo> 
//      <loc> ( (unsigned int) ADC_ADC_SMPR ) </loc>
//      <o.10..10> SMPSEL2
//        <0=> 0: B_0x0 = Sampling time of CHANNELx use the setting of SMP1[2:0] register.
//        <1=> 1: B_0x1 = Sampling time of CHANNELx use the setting of SMP2[2:0] register.
//    </combo>
//  </item>
//  


// ----------------------------  Field Item: ADC_ADC_SMPR_SMPSEL3  --------------------------------
// SVD Line: 16756

//  <item> SFDITEM_FIELD__ADC_ADC_SMPR_SMPSEL3
//    <name> SMPSEL3 </name>
//    <rw> 
//    <i> [Bit 11] RW (@ 0x40012414) \nChannel-x sampling time selection  These bits are written by software to define which sampling time is used.  Note: The software is allowed to write this bit only when ADSTART=0 (which ensures that no conversion is ongoing).\n0 : B_0x0 = Sampling time of CHANNELx use the setting of SMP1[2:0] register.\n1 : B_0x1 = Sampling time of CHANNELx use the setting of SMP2[2:0] register. </i>
//    <combo> 
//      <loc> ( (unsigned int) ADC_ADC_SMPR ) </loc>
//      <o.11..11> SMPSEL3
//        <0=> 0: B_0x0 = Sampling time of CHANNELx use the setting of SMP1[2:0] register.
//        <1=> 1: B_0x1 = Sampling time of CHANNELx use the setting of SMP2[2:0] register.
//    </combo>
//  </item>
//  


// ----------------------------  Field Item: ADC_ADC_SMPR_SMPSEL4  --------------------------------
// SVD Line: 16778

//  <item> SFDITEM_FIELD__ADC_ADC_SMPR_SMPSEL4
//    <name> SMPSEL4 </name>
//    <rw> 
//    <i> [Bit 12] RW (@ 0x40012414) \nChannel-x sampling time selection  These bits are written by software to define which sampling time is used.  Note: The software is allowed to write this bit only when ADSTART=0 (which ensures that no conversion is ongoing).\n0 : B_0x0 = Sampling time of CHANNELx use the setting of SMP1[2:0] register.\n1 : B_0x1 = Sampling time of CHANNELx use the setting of SMP2[2:0] register. </i>
//    <combo> 
//      <loc> ( (unsigned int) ADC_ADC_SMPR ) </loc>
//      <o.12..12> SMPSEL4
//        <0=> 0: B_0x0 = Sampling time of CHANNELx use the setting of SMP1[2:0] register.
//        <1=> 1: B_0x1 = Sampling time of CHANNELx use the setting of SMP2[2:0] register.
//    </combo>
//  </item>
//  


// ----------------------------  Field Item: ADC_ADC_SMPR_SMPSEL5  --------------------------------
// SVD Line: 16800

//  <item> SFDITEM_FIELD__ADC_ADC_SMPR_SMPSEL5
//    <name> SMPSEL5 </name>
//    <rw> 
//    <i> [Bit 13] RW (@ 0x40012414) \nChannel-x sampling time selection  These bits are written by software to define which sampling time is used.  Note: The software is allowed to write this bit only when ADSTART=0 (which ensures that no conversion is ongoing).\n0 : B_0x0 = Sampling time of CHANNELx use the setting of SMP1[2:0] register.\n1 : B_0x1 = Sampling time of CHANNELx use the setting of SMP2[2:0] register. </i>
//    <combo> 
//      <loc> ( (unsigned int) ADC_ADC_SMPR ) </loc>
//      <o.13..13> SMPSEL5
//        <0=> 0: B_0x0 = Sampling time of CHANNELx use the setting of SMP1[2:0] register.
//        <1=> 1: B_0x1 = Sampling time of CHANNELx use the setting of SMP2[2:0] register.
//    </combo>
//  </item>
//  


// ----------------------------  Field Item: ADC_ADC_SMPR_SMPSEL6  --------------------------------
// SVD Line: 16822

//  <item> SFDITEM_FIELD__ADC_ADC_SMPR_SMPSEL6
//    <name> SMPSEL6 </name>
//    <rw> 
//    <i> [Bit 14] RW (@ 0x40012414) \nChannel-x sampling time selection  These bits are written by software to define which sampling time is used.  Note: The software is allowed to write this bit only when ADSTART=0 (which ensures that no conversion is ongoing).\n0 : B_0x0 = Sampling time of CHANNELx use the setting of SMP1[2:0] register.\n1 : B_0x1 = Sampling time of CHANNELx use the setting of SMP2[2:0] register. </i>
//    <combo> 
//      <loc> ( (unsigned int) ADC_ADC_SMPR ) </loc>
//      <o.14..14> SMPSEL6
//        <0=> 0: B_0x0 = Sampling time of CHANNELx use the setting of SMP1[2:0] register.
//        <1=> 1: B_0x1 = Sampling time of CHANNELx use the setting of SMP2[2:0] register.
//    </combo>
//  </item>
//  


// ----------------------------  Field Item: ADC_ADC_SMPR_SMPSEL7  --------------------------------
// SVD Line: 16844

//  <item> SFDITEM_FIELD__ADC_ADC_SMPR_SMPSEL7
//    <name> SMPSEL7 </name>
//    <rw> 
//    <i> [Bit 15] RW (@ 0x40012414) \nChannel-x sampling time selection  These bits are written by software to define which sampling time is used.  Note: The software is allowed to write this bit only when ADSTART=0 (which ensures that no conversion is ongoing).\n0 : B_0x0 = Sampling time of CHANNELx use the setting of SMP1[2:0] register.\n1 : B_0x1 = Sampling time of CHANNELx use the setting of SMP2[2:0] register. </i>
//    <combo> 
//      <loc> ( (unsigned int) ADC_ADC_SMPR ) </loc>
//      <o.15..15> SMPSEL7
//        <0=> 0: B_0x0 = Sampling time of CHANNELx use the setting of SMP1[2:0] register.
//        <1=> 1: B_0x1 = Sampling time of CHANNELx use the setting of SMP2[2:0] register.
//    </combo>
//  </item>
//  


// ----------------------------  Field Item: ADC_ADC_SMPR_SMPSEL8  --------------------------------
// SVD Line: 16866

//  <item> SFDITEM_FIELD__ADC_ADC_SMPR_SMPSEL8
//    <name> SMPSEL8 </name>
//    <rw> 
//    <i> [Bit 16] RW (@ 0x40012414) \nChannel-x sampling time selection  These bits are written by software to define which sampling time is used.  Note: The software is allowed to write this bit only when ADSTART=0 (which ensures that no conversion is ongoing).\n0 : B_0x0 = Sampling time of CHANNELx use the setting of SMP1[2:0] register.\n1 : B_0x1 = Sampling time of CHANNELx use the setting of SMP2[2:0] register. </i>
//    <combo> 
//      <loc> ( (unsigned int) ADC_ADC_SMPR ) </loc>
//      <o.16..16> SMPSEL8
//        <0=> 0: B_0x0 = Sampling time of CHANNELx use the setting of SMP1[2:0] register.
//        <1=> 1: B_0x1 = Sampling time of CHANNELx use the setting of SMP2[2:0] register.
//    </combo>
//  </item>
//  


// ----------------------------  Field Item: ADC_ADC_SMPR_SMPSEL9  --------------------------------
// SVD Line: 16888

//  <item> SFDITEM_FIELD__ADC_ADC_SMPR_SMPSEL9
//    <name> SMPSEL9 </name>
//    <rw> 
//    <i> [Bit 17] RW (@ 0x40012414) \nChannel-x sampling time selection  These bits are written by software to define which sampling time is used.  Note: The software is allowed to write this bit only when ADSTART=0 (which ensures that no conversion is ongoing).\n0 : B_0x0 = Sampling time of CHANNELx use the setting of SMP1[2:0] register.\n1 : B_0x1 = Sampling time of CHANNELx use the setting of SMP2[2:0] register. </i>
//    <combo> 
//      <loc> ( (unsigned int) ADC_ADC_SMPR ) </loc>
//      <o.17..17> SMPSEL9
//        <0=> 0: B_0x0 = Sampling time of CHANNELx use the setting of SMP1[2:0] register.
//        <1=> 1: B_0x1 = Sampling time of CHANNELx use the setting of SMP2[2:0] register.
//    </combo>
//  </item>
//  


// ----------------------------  Field Item: ADC_ADC_SMPR_SMPSEL10  -------------------------------
// SVD Line: 16910

//  <item> SFDITEM_FIELD__ADC_ADC_SMPR_SMPSEL10
//    <name> SMPSEL10 </name>
//    <rw> 
//    <i> [Bit 18] RW (@ 0x40012414) \nChannel-x sampling time selection  These bits are written by software to define which sampling time is used.  Note: The software is allowed to write this bit only when ADSTART=0 (which ensures that no conversion is ongoing).\n0 : B_0x0 = Sampling time of CHANNELx use the setting of SMP1[2:0] register.\n1 : B_0x1 = Sampling time of CHANNELx use the setting of SMP2[2:0] register. </i>
//    <combo> 
//      <loc> ( (unsigned int) ADC_ADC_SMPR ) </loc>
//      <o.18..18> SMPSEL10
//        <0=> 0: B_0x0 = Sampling time of CHANNELx use the setting of SMP1[2:0] register.
//        <1=> 1: B_0x1 = Sampling time of CHANNELx use the setting of SMP2[2:0] register.
//    </combo>
//  </item>
//  


// ----------------------------  Field Item: ADC_ADC_SMPR_SMPSEL11  -------------------------------
// SVD Line: 16932

//  <item> SFDITEM_FIELD__ADC_ADC_SMPR_SMPSEL11
//    <name> SMPSEL11 </name>
//    <rw> 
//    <i> [Bit 19] RW (@ 0x40012414) \nChannel-x sampling time selection  These bits are written by software to define which sampling time is used.  Note: The software is allowed to write this bit only when ADSTART=0 (which ensures that no conversion is ongoing).\n0 : B_0x0 = Sampling time of CHANNELx use the setting of SMP1[2:0] register.\n1 : B_0x1 = Sampling time of CHANNELx use the setting of SMP2[2:0] register. </i>
//    <combo> 
//      <loc> ( (unsigned int) ADC_ADC_SMPR ) </loc>
//      <o.19..19> SMPSEL11
//        <0=> 0: B_0x0 = Sampling time of CHANNELx use the setting of SMP1[2:0] register.
//        <1=> 1: B_0x1 = Sampling time of CHANNELx use the setting of SMP2[2:0] register.
//    </combo>
//  </item>
//  


// ----------------------------  Field Item: ADC_ADC_SMPR_SMPSEL12  -------------------------------
// SVD Line: 16954

//  <item> SFDITEM_FIELD__ADC_ADC_SMPR_SMPSEL12
//    <name> SMPSEL12 </name>
//    <rw> 
//    <i> [Bit 20] RW (@ 0x40012414) \nChannel-x sampling time selection  These bits are written by software to define which sampling time is used.  Note: The software is allowed to write this bit only when ADSTART=0 (which ensures that no conversion is ongoing).\n0 : B_0x0 = Sampling time of CHANNELx use the setting of SMP1[2:0] register.\n1 : B_0x1 = Sampling time of CHANNELx use the setting of SMP2[2:0] register. </i>
//    <combo> 
//      <loc> ( (unsigned int) ADC_ADC_SMPR ) </loc>
//      <o.20..20> SMPSEL12
//        <0=> 0: B_0x0 = Sampling time of CHANNELx use the setting of SMP1[2:0] register.
//        <1=> 1: B_0x1 = Sampling time of CHANNELx use the setting of SMP2[2:0] register.
//    </combo>
//  </item>
//  


// ----------------------------  Field Item: ADC_ADC_SMPR_SMPSEL13  -------------------------------
// SVD Line: 16976

//  <item> SFDITEM_FIELD__ADC_ADC_SMPR_SMPSEL13
//    <name> SMPSEL13 </name>
//    <rw> 
//    <i> [Bit 21] RW (@ 0x40012414) \nChannel-x sampling time selection  These bits are written by software to define which sampling time is used.  Note: The software is allowed to write this bit only when ADSTART=0 (which ensures that no conversion is ongoing).\n0 : B_0x0 = Sampling time of CHANNELx use the setting of SMP1[2:0] register.\n1 : B_0x1 = Sampling time of CHANNELx use the setting of SMP2[2:0] register. </i>
//    <combo> 
//      <loc> ( (unsigned int) ADC_ADC_SMPR ) </loc>
//      <o.21..21> SMPSEL13
//        <0=> 0: B_0x0 = Sampling time of CHANNELx use the setting of SMP1[2:0] register.
//        <1=> 1: B_0x1 = Sampling time of CHANNELx use the setting of SMP2[2:0] register.
//    </combo>
//  </item>
//  


// ----------------------------  Field Item: ADC_ADC_SMPR_SMPSEL14  -------------------------------
// SVD Line: 16998

//  <item> SFDITEM_FIELD__ADC_ADC_SMPR_SMPSEL14
//    <name> SMPSEL14 </name>
//    <rw> 
//    <i> [Bit 22] RW (@ 0x40012414) \nChannel-x sampling time selection  These bits are written by software to define which sampling time is used.  Note: The software is allowed to write this bit only when ADSTART=0 (which ensures that no conversion is ongoing).\n0 : B_0x0 = Sampling time of CHANNELx use the setting of SMP1[2:0] register.\n1 : B_0x1 = Sampling time of CHANNELx use the setting of SMP2[2:0] register. </i>
//    <combo> 
//      <loc> ( (unsigned int) ADC_ADC_SMPR ) </loc>
//      <o.22..22> SMPSEL14
//        <0=> 0: B_0x0 = Sampling time of CHANNELx use the setting of SMP1[2:0] register.
//        <1=> 1: B_0x1 = Sampling time of CHANNELx use the setting of SMP2[2:0] register.
//    </combo>
//  </item>
//  


// ----------------------------  Field Item: ADC_ADC_SMPR_SMPSEL15  -------------------------------
// SVD Line: 17020

//  <item> SFDITEM_FIELD__ADC_ADC_SMPR_SMPSEL15
//    <name> SMPSEL15 </name>
//    <rw> 
//    <i> [Bit 23] RW (@ 0x40012414) \nChannel-x sampling time selection  These bits are written by software to define which sampling time is used.  Note: The software is allowed to write this bit only when ADSTART=0 (which ensures that no conversion is ongoing).\n0 : B_0x0 = Sampling time of CHANNELx use the setting of SMP1[2:0] register.\n1 : B_0x1 = Sampling time of CHANNELx use the setting of SMP2[2:0] register. </i>
//    <combo> 
//      <loc> ( (unsigned int) ADC_ADC_SMPR ) </loc>
//      <o.23..23> SMPSEL15
//        <0=> 0: B_0x0 = Sampling time of CHANNELx use the setting of SMP1[2:0] register.
//        <1=> 1: B_0x1 = Sampling time of CHANNELx use the setting of SMP2[2:0] register.
//    </combo>
//  </item>
//  


// ----------------------------  Field Item: ADC_ADC_SMPR_SMPSEL16  -------------------------------
// SVD Line: 17042

//  <item> SFDITEM_FIELD__ADC_ADC_SMPR_SMPSEL16
//    <name> SMPSEL16 </name>
//    <rw> 
//    <i> [Bit 24] RW (@ 0x40012414) \nChannel-x sampling time selection  These bits are written by software to define which sampling time is used.  Note: The software is allowed to write this bit only when ADSTART=0 (which ensures that no conversion is ongoing).\n0 : B_0x0 = Sampling time of CHANNELx use the setting of SMP1[2:0] register.\n1 : B_0x1 = Sampling time of CHANNELx use the setting of SMP2[2:0] register. </i>
//    <combo> 
//      <loc> ( (unsigned int) ADC_ADC_SMPR ) </loc>
//      <o.24..24> SMPSEL16
//        <0=> 0: B_0x0 = Sampling time of CHANNELx use the setting of SMP1[2:0] register.
//        <1=> 1: B_0x1 = Sampling time of CHANNELx use the setting of SMP2[2:0] register.
//    </combo>
//  </item>
//  


// ----------------------------  Field Item: ADC_ADC_SMPR_SMPSEL17  -------------------------------
// SVD Line: 17064

//  <item> SFDITEM_FIELD__ADC_ADC_SMPR_SMPSEL17
//    <name> SMPSEL17 </name>
//    <rw> 
//    <i> [Bit 25] RW (@ 0x40012414) \nChannel-x sampling time selection  These bits are written by software to define which sampling time is used.  Note: The software is allowed to write this bit only when ADSTART=0 (which ensures that no conversion is ongoing).\n0 : B_0x0 = Sampling time of CHANNELx use the setting of SMP1[2:0] register.\n1 : B_0x1 = Sampling time of CHANNELx use the setting of SMP2[2:0] register. </i>
//    <combo> 
//      <loc> ( (unsigned int) ADC_ADC_SMPR ) </loc>
//      <o.25..25> SMPSEL17
//        <0=> 0: B_0x0 = Sampling time of CHANNELx use the setting of SMP1[2:0] register.
//        <1=> 1: B_0x1 = Sampling time of CHANNELx use the setting of SMP2[2:0] register.
//    </combo>
//  </item>
//  


// ----------------------------  Field Item: ADC_ADC_SMPR_SMPSEL18  -------------------------------
// SVD Line: 17086

//  <item> SFDITEM_FIELD__ADC_ADC_SMPR_SMPSEL18
//    <name> SMPSEL18 </name>
//    <rw> 
//    <i> [Bit 26] RW (@ 0x40012414) \nChannel-x sampling time selection  These bits are written by software to define which sampling time is used.  Note: The software is allowed to write this bit only when ADSTART=0 (which ensures that no conversion is ongoing).\n0 : B_0x0 = Sampling time of CHANNELx use the setting of SMP1[2:0] register.\n1 : B_0x1 = Sampling time of CHANNELx use the setting of SMP2[2:0] register. </i>
//    <combo> 
//      <loc> ( (unsigned int) ADC_ADC_SMPR ) </loc>
//      <o.26..26> SMPSEL18
//        <0=> 0: B_0x0 = Sampling time of CHANNELx use the setting of SMP1[2:0] register.
//        <1=> 1: B_0x1 = Sampling time of CHANNELx use the setting of SMP2[2:0] register.
//    </combo>
//  </item>
//  


// ------------------------------  Register RTree: ADC_ADC_SMPR  ----------------------------------
// SVD Line: 16579

//  <rtree> SFDITEM_REG__ADC_ADC_SMPR
//    <name> ADC_SMPR </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x40012414) ADC sampling time register </i>
//    <loc> ( (unsigned int)((ADC_ADC_SMPR >> 0) & 0xFFFFFFFF), ((ADC_ADC_SMPR = (ADC_ADC_SMPR & ~(0x7FFFF77UL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0x7FFFF77) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__ADC_ADC_SMPR_SMP1 </item>
//    <item> SFDITEM_FIELD__ADC_ADC_SMPR_SMP2 </item>
//    <item> SFDITEM_FIELD__ADC_ADC_SMPR_SMPSEL0 </item>
//    <item> SFDITEM_FIELD__ADC_ADC_SMPR_SMPSEL1 </item>
//    <item> SFDITEM_FIELD__ADC_ADC_SMPR_SMPSEL2 </item>
//    <item> SFDITEM_FIELD__ADC_ADC_SMPR_SMPSEL3 </item>
//    <item> SFDITEM_FIELD__ADC_ADC_SMPR_SMPSEL4 </item>
//    <item> SFDITEM_FIELD__ADC_ADC_SMPR_SMPSEL5 </item>
//    <item> SFDITEM_FIELD__ADC_ADC_SMPR_SMPSEL6 </item>
//    <item> SFDITEM_FIELD__ADC_ADC_SMPR_SMPSEL7 </item>
//    <item> SFDITEM_FIELD__ADC_ADC_SMPR_SMPSEL8 </item>
//    <item> SFDITEM_FIELD__ADC_ADC_SMPR_SMPSEL9 </item>
//    <item> SFDITEM_FIELD__ADC_ADC_SMPR_SMPSEL10 </item>
//    <item> SFDITEM_FIELD__ADC_ADC_SMPR_SMPSEL11 </item>
//    <item> SFDITEM_FIELD__ADC_ADC_SMPR_SMPSEL12 </item>
//    <item> SFDITEM_FIELD__ADC_ADC_SMPR_SMPSEL13 </item>
//    <item> SFDITEM_FIELD__ADC_ADC_SMPR_SMPSEL14 </item>
//    <item> SFDITEM_FIELD__ADC_ADC_SMPR_SMPSEL15 </item>
//    <item> SFDITEM_FIELD__ADC_ADC_SMPR_SMPSEL16 </item>
//    <item> SFDITEM_FIELD__ADC_ADC_SMPR_SMPSEL17 </item>
//    <item> SFDITEM_FIELD__ADC_ADC_SMPR_SMPSEL18 </item>
//  </rtree>
//  


// --------------------------  Register Item Address: ADC_ADC_AWD1TR  -----------------------------
// SVD Line: 17110

unsigned int ADC_ADC_AWD1TR __AT (0x40012420);



// -----------------------------  Field Item: ADC_ADC_AWD1TR_LT1  ---------------------------------
// SVD Line: 17119

//  <item> SFDITEM_FIELD__ADC_ADC_AWD1TR_LT1
//    <name> LT1 </name>
//    <rw> 
//    <i> [Bits 11..0] RW (@ 0x40012420) Analog watchdog 1 lower threshold  These bits are written by software to define the lower threshold for the analog watchdog.  Refer to ADC_AWDxTR) on page395. </i>
//    <edit> 
//      <loc> ( (unsigned short)((ADC_ADC_AWD1TR >> 0) & 0xFFF), ((ADC_ADC_AWD1TR = (ADC_ADC_AWD1TR & ~(0xFFFUL << 0 )) | ((unsigned long)(Gui_u16:GuiVal & 0xFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -----------------------------  Field Item: ADC_ADC_AWD1TR_HT1  ---------------------------------
// SVD Line: 17128

//  <item> SFDITEM_FIELD__ADC_ADC_AWD1TR_HT1
//    <name> HT1 </name>
//    <rw> 
//    <i> [Bits 27..16] RW (@ 0x40012420) Analog watchdog 1 higher threshold  These bits are written by software to define the higher threshold for the analog watchdog.  Refer to ADC_AWDxTR) on page395. </i>
//    <edit> 
//      <loc> ( (unsigned short)((ADC_ADC_AWD1TR >> 16) & 0xFFF), ((ADC_ADC_AWD1TR = (ADC_ADC_AWD1TR & ~(0xFFFUL << 16 )) | ((unsigned long)(Gui_u16:GuiVal & 0xFFF) << 16 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -----------------------------  Register RTree: ADC_ADC_AWD1TR  ---------------------------------
// SVD Line: 17110

//  <rtree> SFDITEM_REG__ADC_ADC_AWD1TR
//    <name> ADC_AWD1TR </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x40012420) ADC watchdog threshold register </i>
//    <loc> ( (unsigned int)((ADC_ADC_AWD1TR >> 0) & 0xFFFFFFFF), ((ADC_ADC_AWD1TR = (ADC_ADC_AWD1TR & ~(0xFFF0FFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFF0FFF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__ADC_ADC_AWD1TR_LT1 </item>
//    <item> SFDITEM_FIELD__ADC_ADC_AWD1TR_HT1 </item>
//  </rtree>
//  


// --------------------------  Register Item Address: ADC_ADC_AWD2TR  -----------------------------
// SVD Line: 17139

unsigned int ADC_ADC_AWD2TR __AT (0x40012424);



// -----------------------------  Field Item: ADC_ADC_AWD2TR_LT2  ---------------------------------
// SVD Line: 17148

//  <item> SFDITEM_FIELD__ADC_ADC_AWD2TR_LT2
//    <name> LT2 </name>
//    <rw> 
//    <i> [Bits 11..0] RW (@ 0x40012424) Analog watchdog 2 lower threshold  These bits are written by software to define the lower threshold for the analog watchdog.  Refer to ADC_AWDxTR) on page395. </i>
//    <edit> 
//      <loc> ( (unsigned short)((ADC_ADC_AWD2TR >> 0) & 0xFFF), ((ADC_ADC_AWD2TR = (ADC_ADC_AWD2TR & ~(0xFFFUL << 0 )) | ((unsigned long)(Gui_u16:GuiVal & 0xFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -----------------------------  Field Item: ADC_ADC_AWD2TR_HT2  ---------------------------------
// SVD Line: 17157

//  <item> SFDITEM_FIELD__ADC_ADC_AWD2TR_HT2
//    <name> HT2 </name>
//    <rw> 
//    <i> [Bits 27..16] RW (@ 0x40012424) Analog watchdog 2 higher threshold  These bits are written by software to define the higher threshold for the analog watchdog.  Refer to ADC_AWDxTR) on page395. </i>
//    <edit> 
//      <loc> ( (unsigned short)((ADC_ADC_AWD2TR >> 16) & 0xFFF), ((ADC_ADC_AWD2TR = (ADC_ADC_AWD2TR & ~(0xFFFUL << 16 )) | ((unsigned long)(Gui_u16:GuiVal & 0xFFF) << 16 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -----------------------------  Register RTree: ADC_ADC_AWD2TR  ---------------------------------
// SVD Line: 17139

//  <rtree> SFDITEM_REG__ADC_ADC_AWD2TR
//    <name> ADC_AWD2TR </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x40012424) ADC watchdog threshold register </i>
//    <loc> ( (unsigned int)((ADC_ADC_AWD2TR >> 0) & 0xFFFFFFFF), ((ADC_ADC_AWD2TR = (ADC_ADC_AWD2TR & ~(0xFFF0FFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFF0FFF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__ADC_ADC_AWD2TR_LT2 </item>
//    <item> SFDITEM_FIELD__ADC_ADC_AWD2TR_HT2 </item>
//  </rtree>
//  


// ------------------------  Register Item Address: ADC_ADC_CHSELRMOD0  ---------------------------
// SVD Line: 17168

unsigned int ADC_ADC_CHSELRMOD0 __AT (0x40012428);



// --------------------------  Field Item: ADC_ADC_CHSELRMOD0_CHSEL0  -----------------------------
// SVD Line: 17177

//  <item> SFDITEM_FIELD__ADC_ADC_CHSELRMOD0_CHSEL0
//    <name> CHSEL0 </name>
//    <rw> 
//    <i> [Bit 0] RW (@ 0x40012428) \nChannel-x selection  These bits are written by software and define which channels are part of the sequence of channels to be converted.  Note: The software is allowed to write this bit only when ADSTART=0 (which ensures that no conversion is ongoing).  If CCRDY is not yet asserted after channel configuration (writing ADC_CHSELR register or changing CHSELRMOD or SCANDIR), the value written to this bit is ignored.\n0 : B_0x0 = Input Channel-x is not selected for conversion\n1 : B_0x1 = Input Channel-x is selected for conversion </i>
//    <combo> 
//      <loc> ( (unsigned int) ADC_ADC_CHSELRMOD0 ) </loc>
//      <o.0..0> CHSEL0
//        <0=> 0: B_0x0 = Input Channel-x is not selected for conversion
//        <1=> 1: B_0x1 = Input Channel-x is selected for conversion
//    </combo>
//  </item>
//  


// --------------------------  Field Item: ADC_ADC_CHSELRMOD0_CHSEL1  -----------------------------
// SVD Line: 17200

//  <item> SFDITEM_FIELD__ADC_ADC_CHSELRMOD0_CHSEL1
//    <name> CHSEL1 </name>
//    <rw> 
//    <i> [Bit 1] RW (@ 0x40012428) \nChannel-x selection  These bits are written by software and define which channels are part of the sequence of channels to be converted.  Note: The software is allowed to write this bit only when ADSTART=0 (which ensures that no conversion is ongoing).  If CCRDY is not yet asserted after channel configuration (writing ADC_CHSELR register or changing CHSELRMOD or SCANDIR), the value written to this bit is ignored.\n0 : B_0x0 = Input Channel-x is not selected for conversion\n1 : B_0x1 = Input Channel-x is selected for conversion </i>
//    <combo> 
//      <loc> ( (unsigned int) ADC_ADC_CHSELRMOD0 ) </loc>
//      <o.1..1> CHSEL1
//        <0=> 0: B_0x0 = Input Channel-x is not selected for conversion
//        <1=> 1: B_0x1 = Input Channel-x is selected for conversion
//    </combo>
//  </item>
//  


// --------------------------  Field Item: ADC_ADC_CHSELRMOD0_CHSEL2  -----------------------------
// SVD Line: 17223

//  <item> SFDITEM_FIELD__ADC_ADC_CHSELRMOD0_CHSEL2
//    <name> CHSEL2 </name>
//    <rw> 
//    <i> [Bit 2] RW (@ 0x40012428) \nChannel-x selection  These bits are written by software and define which channels are part of the sequence of channels to be converted.  Note: The software is allowed to write this bit only when ADSTART=0 (which ensures that no conversion is ongoing).  If CCRDY is not yet asserted after channel configuration (writing ADC_CHSELR register or changing CHSELRMOD or SCANDIR), the value written to this bit is ignored.\n0 : B_0x0 = Input Channel-x is not selected for conversion\n1 : B_0x1 = Input Channel-x is selected for conversion </i>
//    <combo> 
//      <loc> ( (unsigned int) ADC_ADC_CHSELRMOD0 ) </loc>
//      <o.2..2> CHSEL2
//        <0=> 0: B_0x0 = Input Channel-x is not selected for conversion
//        <1=> 1: B_0x1 = Input Channel-x is selected for conversion
//    </combo>
//  </item>
//  


// --------------------------  Field Item: ADC_ADC_CHSELRMOD0_CHSEL3  -----------------------------
// SVD Line: 17246

//  <item> SFDITEM_FIELD__ADC_ADC_CHSELRMOD0_CHSEL3
//    <name> CHSEL3 </name>
//    <rw> 
//    <i> [Bit 3] RW (@ 0x40012428) \nChannel-x selection  These bits are written by software and define which channels are part of the sequence of channels to be converted.  Note: The software is allowed to write this bit only when ADSTART=0 (which ensures that no conversion is ongoing).  If CCRDY is not yet asserted after channel configuration (writing ADC_CHSELR register or changing CHSELRMOD or SCANDIR), the value written to this bit is ignored.\n0 : B_0x0 = Input Channel-x is not selected for conversion\n1 : B_0x1 = Input Channel-x is selected for conversion </i>
//    <combo> 
//      <loc> ( (unsigned int) ADC_ADC_CHSELRMOD0 ) </loc>
//      <o.3..3> CHSEL3
//        <0=> 0: B_0x0 = Input Channel-x is not selected for conversion
//        <1=> 1: B_0x1 = Input Channel-x is selected for conversion
//    </combo>
//  </item>
//  


// --------------------------  Field Item: ADC_ADC_CHSELRMOD0_CHSEL4  -----------------------------
// SVD Line: 17269

//  <item> SFDITEM_FIELD__ADC_ADC_CHSELRMOD0_CHSEL4
//    <name> CHSEL4 </name>
//    <rw> 
//    <i> [Bit 4] RW (@ 0x40012428) \nChannel-x selection  These bits are written by software and define which channels are part of the sequence of channels to be converted.  Note: The software is allowed to write this bit only when ADSTART=0 (which ensures that no conversion is ongoing).  If CCRDY is not yet asserted after channel configuration (writing ADC_CHSELR register or changing CHSELRMOD or SCANDIR), the value written to this bit is ignored.\n0 : B_0x0 = Input Channel-x is not selected for conversion\n1 : B_0x1 = Input Channel-x is selected for conversion </i>
//    <combo> 
//      <loc> ( (unsigned int) ADC_ADC_CHSELRMOD0 ) </loc>
//      <o.4..4> CHSEL4
//        <0=> 0: B_0x0 = Input Channel-x is not selected for conversion
//        <1=> 1: B_0x1 = Input Channel-x is selected for conversion
//    </combo>
//  </item>
//  


// --------------------------  Field Item: ADC_ADC_CHSELRMOD0_CHSEL5  -----------------------------
// SVD Line: 17292

//  <item> SFDITEM_FIELD__ADC_ADC_CHSELRMOD0_CHSEL5
//    <name> CHSEL5 </name>
//    <rw> 
//    <i> [Bit 5] RW (@ 0x40012428) \nChannel-x selection  These bits are written by software and define which channels are part of the sequence of channels to be converted.  Note: The software is allowed to write this bit only when ADSTART=0 (which ensures that no conversion is ongoing).  If CCRDY is not yet asserted after channel configuration (writing ADC_CHSELR register or changing CHSELRMOD or SCANDIR), the value written to this bit is ignored.\n0 : B_0x0 = Input Channel-x is not selected for conversion\n1 : B_0x1 = Input Channel-x is selected for conversion </i>
//    <combo> 
//      <loc> ( (unsigned int) ADC_ADC_CHSELRMOD0 ) </loc>
//      <o.5..5> CHSEL5
//        <0=> 0: B_0x0 = Input Channel-x is not selected for conversion
//        <1=> 1: B_0x1 = Input Channel-x is selected for conversion
//    </combo>
//  </item>
//  


// --------------------------  Field Item: ADC_ADC_CHSELRMOD0_CHSEL6  -----------------------------
// SVD Line: 17315

//  <item> SFDITEM_FIELD__ADC_ADC_CHSELRMOD0_CHSEL6
//    <name> CHSEL6 </name>
//    <rw> 
//    <i> [Bit 6] RW (@ 0x40012428) \nChannel-x selection  These bits are written by software and define which channels are part of the sequence of channels to be converted.  Note: The software is allowed to write this bit only when ADSTART=0 (which ensures that no conversion is ongoing).  If CCRDY is not yet asserted after channel configuration (writing ADC_CHSELR register or changing CHSELRMOD or SCANDIR), the value written to this bit is ignored.\n0 : B_0x0 = Input Channel-x is not selected for conversion\n1 : B_0x1 = Input Channel-x is selected for conversion </i>
//    <combo> 
//      <loc> ( (unsigned int) ADC_ADC_CHSELRMOD0 ) </loc>
//      <o.6..6> CHSEL6
//        <0=> 0: B_0x0 = Input Channel-x is not selected for conversion
//        <1=> 1: B_0x1 = Input Channel-x is selected for conversion
//    </combo>
//  </item>
//  


// --------------------------  Field Item: ADC_ADC_CHSELRMOD0_CHSEL7  -----------------------------
// SVD Line: 17338

//  <item> SFDITEM_FIELD__ADC_ADC_CHSELRMOD0_CHSEL7
//    <name> CHSEL7 </name>
//    <rw> 
//    <i> [Bit 7] RW (@ 0x40012428) \nChannel-x selection  These bits are written by software and define which channels are part of the sequence of channels to be converted.  Note: The software is allowed to write this bit only when ADSTART=0 (which ensures that no conversion is ongoing).  If CCRDY is not yet asserted after channel configuration (writing ADC_CHSELR register or changing CHSELRMOD or SCANDIR), the value written to this bit is ignored.\n0 : B_0x0 = Input Channel-x is not selected for conversion\n1 : B_0x1 = Input Channel-x is selected for conversion </i>
//    <combo> 
//      <loc> ( (unsigned int) ADC_ADC_CHSELRMOD0 ) </loc>
//      <o.7..7> CHSEL7
//        <0=> 0: B_0x0 = Input Channel-x is not selected for conversion
//        <1=> 1: B_0x1 = Input Channel-x is selected for conversion
//    </combo>
//  </item>
//  


// --------------------------  Field Item: ADC_ADC_CHSELRMOD0_CHSEL8  -----------------------------
// SVD Line: 17361

//  <item> SFDITEM_FIELD__ADC_ADC_CHSELRMOD0_CHSEL8
//    <name> CHSEL8 </name>
//    <rw> 
//    <i> [Bit 8] RW (@ 0x40012428) \nChannel-x selection  These bits are written by software and define which channels are part of the sequence of channels to be converted.  Note: The software is allowed to write this bit only when ADSTART=0 (which ensures that no conversion is ongoing).  If CCRDY is not yet asserted after channel configuration (writing ADC_CHSELR register or changing CHSELRMOD or SCANDIR), the value written to this bit is ignored.\n0 : B_0x0 = Input Channel-x is not selected for conversion\n1 : B_0x1 = Input Channel-x is selected for conversion </i>
//    <combo> 
//      <loc> ( (unsigned int) ADC_ADC_CHSELRMOD0 ) </loc>
//      <o.8..8> CHSEL8
//        <0=> 0: B_0x0 = Input Channel-x is not selected for conversion
//        <1=> 1: B_0x1 = Input Channel-x is selected for conversion
//    </combo>
//  </item>
//  


// --------------------------  Field Item: ADC_ADC_CHSELRMOD0_CHSEL9  -----------------------------
// SVD Line: 17384

//  <item> SFDITEM_FIELD__ADC_ADC_CHSELRMOD0_CHSEL9
//    <name> CHSEL9 </name>
//    <rw> 
//    <i> [Bit 9] RW (@ 0x40012428) \nChannel-x selection  These bits are written by software and define which channels are part of the sequence of channels to be converted.  Note: The software is allowed to write this bit only when ADSTART=0 (which ensures that no conversion is ongoing).  If CCRDY is not yet asserted after channel configuration (writing ADC_CHSELR register or changing CHSELRMOD or SCANDIR), the value written to this bit is ignored.\n0 : B_0x0 = Input Channel-x is not selected for conversion\n1 : B_0x1 = Input Channel-x is selected for conversion </i>
//    <combo> 
//      <loc> ( (unsigned int) ADC_ADC_CHSELRMOD0 ) </loc>
//      <o.9..9> CHSEL9
//        <0=> 0: B_0x0 = Input Channel-x is not selected for conversion
//        <1=> 1: B_0x1 = Input Channel-x is selected for conversion
//    </combo>
//  </item>
//  


// -------------------------  Field Item: ADC_ADC_CHSELRMOD0_CHSEL10  -----------------------------
// SVD Line: 17407

//  <item> SFDITEM_FIELD__ADC_ADC_CHSELRMOD0_CHSEL10
//    <name> CHSEL10 </name>
//    <rw> 
//    <i> [Bit 10] RW (@ 0x40012428) \nChannel-x selection  These bits are written by software and define which channels are part of the sequence of channels to be converted.  Note: The software is allowed to write this bit only when ADSTART=0 (which ensures that no conversion is ongoing).  If CCRDY is not yet asserted after channel configuration (writing ADC_CHSELR register or changing CHSELRMOD or SCANDIR), the value written to this bit is ignored.\n0 : B_0x0 = Input Channel-x is not selected for conversion\n1 : B_0x1 = Input Channel-x is selected for conversion </i>
//    <combo> 
//      <loc> ( (unsigned int) ADC_ADC_CHSELRMOD0 ) </loc>
//      <o.10..10> CHSEL10
//        <0=> 0: B_0x0 = Input Channel-x is not selected for conversion
//        <1=> 1: B_0x1 = Input Channel-x is selected for conversion
//    </combo>
//  </item>
//  


// -------------------------  Field Item: ADC_ADC_CHSELRMOD0_CHSEL11  -----------------------------
// SVD Line: 17430

//  <item> SFDITEM_FIELD__ADC_ADC_CHSELRMOD0_CHSEL11
//    <name> CHSEL11 </name>
//    <rw> 
//    <i> [Bit 11] RW (@ 0x40012428) \nChannel-x selection  These bits are written by software and define which channels are part of the sequence of channels to be converted.  Note: The software is allowed to write this bit only when ADSTART=0 (which ensures that no conversion is ongoing).  If CCRDY is not yet asserted after channel configuration (writing ADC_CHSELR register or changing CHSELRMOD or SCANDIR), the value written to this bit is ignored.\n0 : B_0x0 = Input Channel-x is not selected for conversion\n1 : B_0x1 = Input Channel-x is selected for conversion </i>
//    <combo> 
//      <loc> ( (unsigned int) ADC_ADC_CHSELRMOD0 ) </loc>
//      <o.11..11> CHSEL11
//        <0=> 0: B_0x0 = Input Channel-x is not selected for conversion
//        <1=> 1: B_0x1 = Input Channel-x is selected for conversion
//    </combo>
//  </item>
//  


// -------------------------  Field Item: ADC_ADC_CHSELRMOD0_CHSEL12  -----------------------------
// SVD Line: 17453

//  <item> SFDITEM_FIELD__ADC_ADC_CHSELRMOD0_CHSEL12
//    <name> CHSEL12 </name>
//    <rw> 
//    <i> [Bit 12] RW (@ 0x40012428) \nChannel-x selection  These bits are written by software and define which channels are part of the sequence of channels to be converted.  Note: The software is allowed to write this bit only when ADSTART=0 (which ensures that no conversion is ongoing).  If CCRDY is not yet asserted after channel configuration (writing ADC_CHSELR register or changing CHSELRMOD or SCANDIR), the value written to this bit is ignored.\n0 : B_0x0 = Input Channel-x is not selected for conversion\n1 : B_0x1 = Input Channel-x is selected for conversion </i>
//    <combo> 
//      <loc> ( (unsigned int) ADC_ADC_CHSELRMOD0 ) </loc>
//      <o.12..12> CHSEL12
//        <0=> 0: B_0x0 = Input Channel-x is not selected for conversion
//        <1=> 1: B_0x1 = Input Channel-x is selected for conversion
//    </combo>
//  </item>
//  


// -------------------------  Field Item: ADC_ADC_CHSELRMOD0_CHSEL13  -----------------------------
// SVD Line: 17476

//  <item> SFDITEM_FIELD__ADC_ADC_CHSELRMOD0_CHSEL13
//    <name> CHSEL13 </name>
//    <rw> 
//    <i> [Bit 13] RW (@ 0x40012428) \nChannel-x selection  These bits are written by software and define which channels are part of the sequence of channels to be converted.  Note: The software is allowed to write this bit only when ADSTART=0 (which ensures that no conversion is ongoing).  If CCRDY is not yet asserted after channel configuration (writing ADC_CHSELR register or changing CHSELRMOD or SCANDIR), the value written to this bit is ignored.\n0 : B_0x0 = Input Channel-x is not selected for conversion\n1 : B_0x1 = Input Channel-x is selected for conversion </i>
//    <combo> 
//      <loc> ( (unsigned int) ADC_ADC_CHSELRMOD0 ) </loc>
//      <o.13..13> CHSEL13
//        <0=> 0: B_0x0 = Input Channel-x is not selected for conversion
//        <1=> 1: B_0x1 = Input Channel-x is selected for conversion
//    </combo>
//  </item>
//  


// -------------------------  Field Item: ADC_ADC_CHSELRMOD0_CHSEL14  -----------------------------
// SVD Line: 17499

//  <item> SFDITEM_FIELD__ADC_ADC_CHSELRMOD0_CHSEL14
//    <name> CHSEL14 </name>
//    <rw> 
//    <i> [Bit 14] RW (@ 0x40012428) \nChannel-x selection  These bits are written by software and define which channels are part of the sequence of channels to be converted.  Note: The software is allowed to write this bit only when ADSTART=0 (which ensures that no conversion is ongoing).  If CCRDY is not yet asserted after channel configuration (writing ADC_CHSELR register or changing CHSELRMOD or SCANDIR), the value written to this bit is ignored.\n0 : B_0x0 = Input Channel-x is not selected for conversion\n1 : B_0x1 = Input Channel-x is selected for conversion </i>
//    <combo> 
//      <loc> ( (unsigned int) ADC_ADC_CHSELRMOD0 ) </loc>
//      <o.14..14> CHSEL14
//        <0=> 0: B_0x0 = Input Channel-x is not selected for conversion
//        <1=> 1: B_0x1 = Input Channel-x is selected for conversion
//    </combo>
//  </item>
//  


// -------------------------  Field Item: ADC_ADC_CHSELRMOD0_CHSEL15  -----------------------------
// SVD Line: 17522

//  <item> SFDITEM_FIELD__ADC_ADC_CHSELRMOD0_CHSEL15
//    <name> CHSEL15 </name>
//    <rw> 
//    <i> [Bit 15] RW (@ 0x40012428) \nChannel-x selection  These bits are written by software and define which channels are part of the sequence of channels to be converted.  Note: The software is allowed to write this bit only when ADSTART=0 (which ensures that no conversion is ongoing).  If CCRDY is not yet asserted after channel configuration (writing ADC_CHSELR register or changing CHSELRMOD or SCANDIR), the value written to this bit is ignored.\n0 : B_0x0 = Input Channel-x is not selected for conversion\n1 : B_0x1 = Input Channel-x is selected for conversion </i>
//    <combo> 
//      <loc> ( (unsigned int) ADC_ADC_CHSELRMOD0 ) </loc>
//      <o.15..15> CHSEL15
//        <0=> 0: B_0x0 = Input Channel-x is not selected for conversion
//        <1=> 1: B_0x1 = Input Channel-x is selected for conversion
//    </combo>
//  </item>
//  


// -------------------------  Field Item: ADC_ADC_CHSELRMOD0_CHSEL16  -----------------------------
// SVD Line: 17545

//  <item> SFDITEM_FIELD__ADC_ADC_CHSELRMOD0_CHSEL16
//    <name> CHSEL16 </name>
//    <rw> 
//    <i> [Bit 16] RW (@ 0x40012428) \nChannel-x selection  These bits are written by software and define which channels are part of the sequence of channels to be converted.  Note: The software is allowed to write this bit only when ADSTART=0 (which ensures that no conversion is ongoing).  If CCRDY is not yet asserted after channel configuration (writing ADC_CHSELR register or changing CHSELRMOD or SCANDIR), the value written to this bit is ignored.\n0 : B_0x0 = Input Channel-x is not selected for conversion\n1 : B_0x1 = Input Channel-x is selected for conversion </i>
//    <combo> 
//      <loc> ( (unsigned int) ADC_ADC_CHSELRMOD0 ) </loc>
//      <o.16..16> CHSEL16
//        <0=> 0: B_0x0 = Input Channel-x is not selected for conversion
//        <1=> 1: B_0x1 = Input Channel-x is selected for conversion
//    </combo>
//  </item>
//  


// -------------------------  Field Item: ADC_ADC_CHSELRMOD0_CHSEL17  -----------------------------
// SVD Line: 17568

//  <item> SFDITEM_FIELD__ADC_ADC_CHSELRMOD0_CHSEL17
//    <name> CHSEL17 </name>
//    <rw> 
//    <i> [Bit 17] RW (@ 0x40012428) \nChannel-x selection  These bits are written by software and define which channels are part of the sequence of channels to be converted.  Note: The software is allowed to write this bit only when ADSTART=0 (which ensures that no conversion is ongoing).  If CCRDY is not yet asserted after channel configuration (writing ADC_CHSELR register or changing CHSELRMOD or SCANDIR), the value written to this bit is ignored.\n0 : B_0x0 = Input Channel-x is not selected for conversion\n1 : B_0x1 = Input Channel-x is selected for conversion </i>
//    <combo> 
//      <loc> ( (unsigned int) ADC_ADC_CHSELRMOD0 ) </loc>
//      <o.17..17> CHSEL17
//        <0=> 0: B_0x0 = Input Channel-x is not selected for conversion
//        <1=> 1: B_0x1 = Input Channel-x is selected for conversion
//    </combo>
//  </item>
//  


// -------------------------  Field Item: ADC_ADC_CHSELRMOD0_CHSEL18  -----------------------------
// SVD Line: 17591

//  <item> SFDITEM_FIELD__ADC_ADC_CHSELRMOD0_CHSEL18
//    <name> CHSEL18 </name>
//    <rw> 
//    <i> [Bit 18] RW (@ 0x40012428) \nChannel-x selection  These bits are written by software and define which channels are part of the sequence of channels to be converted.  Note: The software is allowed to write this bit only when ADSTART=0 (which ensures that no conversion is ongoing).  If CCRDY is not yet asserted after channel configuration (writing ADC_CHSELR register or changing CHSELRMOD or SCANDIR), the value written to this bit is ignored.\n0 : B_0x0 = Input Channel-x is not selected for conversion\n1 : B_0x1 = Input Channel-x is selected for conversion </i>
//    <combo> 
//      <loc> ( (unsigned int) ADC_ADC_CHSELRMOD0 ) </loc>
//      <o.18..18> CHSEL18
//        <0=> 0: B_0x0 = Input Channel-x is not selected for conversion
//        <1=> 1: B_0x1 = Input Channel-x is selected for conversion
//    </combo>
//  </item>
//  


// ---------------------------  Register RTree: ADC_ADC_CHSELRMOD0  -------------------------------
// SVD Line: 17168

//  <rtree> SFDITEM_REG__ADC_ADC_CHSELRMOD0
//    <name> ADC_CHSELRMOD0 </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x40012428) ADC channel selection register </i>
//    <loc> ( (unsigned int)((ADC_ADC_CHSELRMOD0 >> 0) & 0xFFFFFFFF), ((ADC_ADC_CHSELRMOD0 = (ADC_ADC_CHSELRMOD0 & ~(0x7FFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0x7FFFF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__ADC_ADC_CHSELRMOD0_CHSEL0 </item>
//    <item> SFDITEM_FIELD__ADC_ADC_CHSELRMOD0_CHSEL1 </item>
//    <item> SFDITEM_FIELD__ADC_ADC_CHSELRMOD0_CHSEL2 </item>
//    <item> SFDITEM_FIELD__ADC_ADC_CHSELRMOD0_CHSEL3 </item>
//    <item> SFDITEM_FIELD__ADC_ADC_CHSELRMOD0_CHSEL4 </item>
//    <item> SFDITEM_FIELD__ADC_ADC_CHSELRMOD0_CHSEL5 </item>
//    <item> SFDITEM_FIELD__ADC_ADC_CHSELRMOD0_CHSEL6 </item>
//    <item> SFDITEM_FIELD__ADC_ADC_CHSELRMOD0_CHSEL7 </item>
//    <item> SFDITEM_FIELD__ADC_ADC_CHSELRMOD0_CHSEL8 </item>
//    <item> SFDITEM_FIELD__ADC_ADC_CHSELRMOD0_CHSEL9 </item>
//    <item> SFDITEM_FIELD__ADC_ADC_CHSELRMOD0_CHSEL10 </item>
//    <item> SFDITEM_FIELD__ADC_ADC_CHSELRMOD0_CHSEL11 </item>
//    <item> SFDITEM_FIELD__ADC_ADC_CHSELRMOD0_CHSEL12 </item>
//    <item> SFDITEM_FIELD__ADC_ADC_CHSELRMOD0_CHSEL13 </item>
//    <item> SFDITEM_FIELD__ADC_ADC_CHSELRMOD0_CHSEL14 </item>
//    <item> SFDITEM_FIELD__ADC_ADC_CHSELRMOD0_CHSEL15 </item>
//    <item> SFDITEM_FIELD__ADC_ADC_CHSELRMOD0_CHSEL16 </item>
//    <item> SFDITEM_FIELD__ADC_ADC_CHSELRMOD0_CHSEL17 </item>
//    <item> SFDITEM_FIELD__ADC_ADC_CHSELRMOD0_CHSEL18 </item>
//  </rtree>
//  


// ------------------------  Register Item Address: ADC_ADC_CHSELRMOD1  ---------------------------
// SVD Line: 17616

unsigned int ADC_ADC_CHSELRMOD1 __AT (0x40012428);



// ---------------------------  Field Item: ADC_ADC_CHSELRMOD1_SQ1  -------------------------------
// SVD Line: 17626

//  <item> SFDITEM_FIELD__ADC_ADC_CHSELRMOD1_SQ1
//    <name> SQ1 </name>
//    <rw> 
//    <i> [Bits 3..0] RW (@ 0x40012428) 1st conversion of the sequence  These bits are programmed by software with the channel number (0...14) assigned to the 8th conversion of the sequence. 0b1111 indicates end of the sequence.  When 0b1111 (end of sequence) is programmed to the lower sequence channels, these bits are ignored.  Refer to SQ8[3:0] for a definition of channel selection.  Note: The software is allowed to write this bit only when ADSTART=0 (which ensures that no conversion is ongoing). </i>
//    <edit> 
//      <loc> ( (unsigned char)((ADC_ADC_CHSELRMOD1 >> 0) & 0xF), ((ADC_ADC_CHSELRMOD1 = (ADC_ADC_CHSELRMOD1 & ~(0xFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ---------------------------  Field Item: ADC_ADC_CHSELRMOD1_SQ2  -------------------------------
// SVD Line: 17637

//  <item> SFDITEM_FIELD__ADC_ADC_CHSELRMOD1_SQ2
//    <name> SQ2 </name>
//    <rw> 
//    <i> [Bits 7..4] RW (@ 0x40012428) 2nd conversion of the sequence  These bits are programmed by software with the channel number (0...14) assigned to the 8th conversion of the sequence. 0b1111 indicates end of the sequence.  When 0b1111 (end of sequence) is programmed to the lower sequence channels, these bits are ignored.  Refer to SQ8[3:0] for a definition of channel selection.  Note: The software is allowed to write this bit only when ADSTART=0 (which ensures that no conversion is ongoing). </i>
//    <edit> 
//      <loc> ( (unsigned char)((ADC_ADC_CHSELRMOD1 >> 4) & 0xF), ((ADC_ADC_CHSELRMOD1 = (ADC_ADC_CHSELRMOD1 & ~(0xFUL << 4 )) | ((unsigned long)(Gui_u8:GuiVal & 0xF) << 4 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ---------------------------  Field Item: ADC_ADC_CHSELRMOD1_SQ3  -------------------------------
// SVD Line: 17648

//  <item> SFDITEM_FIELD__ADC_ADC_CHSELRMOD1_SQ3
//    <name> SQ3 </name>
//    <rw> 
//    <i> [Bits 11..8] RW (@ 0x40012428) 3rd conversion of the sequence  These bits are programmed by software with the channel number (0...14) assigned to the 8th conversion of the sequence. 0b1111 indicates end of the sequence.  When 0b1111 (end of sequence) is programmed to the lower sequence channels, these bits are ignored.  Refer to SQ8[3:0] for a definition of channel selection.  Note: The software is allowed to write this bit only when ADSTART=0 (which ensures that no conversion is ongoing). </i>
//    <edit> 
//      <loc> ( (unsigned char)((ADC_ADC_CHSELRMOD1 >> 8) & 0xF), ((ADC_ADC_CHSELRMOD1 = (ADC_ADC_CHSELRMOD1 & ~(0xFUL << 8 )) | ((unsigned long)(Gui_u8:GuiVal & 0xF) << 8 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ---------------------------  Field Item: ADC_ADC_CHSELRMOD1_SQ4  -------------------------------
// SVD Line: 17659

//  <item> SFDITEM_FIELD__ADC_ADC_CHSELRMOD1_SQ4
//    <name> SQ4 </name>
//    <rw> 
//    <i> [Bits 15..12] RW (@ 0x40012428) 4th conversion of the sequence  These bits are programmed by software with the channel number (0...14) assigned to the 8th conversion of the sequence. 0b1111 indicates end of the sequence.  When 0b1111 (end of sequence) is programmed to the lower sequence channels, these bits are ignored.  Refer to SQ8[3:0] for a definition of channel selection.  Note: The software is allowed to write this bit only when ADSTART=0 (which ensures that no conversion is ongoing). </i>
//    <edit> 
//      <loc> ( (unsigned char)((ADC_ADC_CHSELRMOD1 >> 12) & 0xF), ((ADC_ADC_CHSELRMOD1 = (ADC_ADC_CHSELRMOD1 & ~(0xFUL << 12 )) | ((unsigned long)(Gui_u8:GuiVal & 0xF) << 12 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ---------------------------  Field Item: ADC_ADC_CHSELRMOD1_SQ5  -------------------------------
// SVD Line: 17670

//  <item> SFDITEM_FIELD__ADC_ADC_CHSELRMOD1_SQ5
//    <name> SQ5 </name>
//    <rw> 
//    <i> [Bits 19..16] RW (@ 0x40012428) 5th conversion of the sequence  These bits are programmed by software with the channel number (0...14) assigned to the 8th conversion of the sequence. 0b1111 indicates end of the sequence.  When 0b1111 (end of sequence) is programmed to the lower sequence channels, these bits are ignored.  Refer to SQ8[3:0] for a definition of channel selection.  Note: The software is allowed to write this bit only when ADSTART=0 (which ensures that no conversion is ongoing). </i>
//    <edit> 
//      <loc> ( (unsigned char)((ADC_ADC_CHSELRMOD1 >> 16) & 0xF), ((ADC_ADC_CHSELRMOD1 = (ADC_ADC_CHSELRMOD1 & ~(0xFUL << 16 )) | ((unsigned long)(Gui_u8:GuiVal & 0xF) << 16 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ---------------------------  Field Item: ADC_ADC_CHSELRMOD1_SQ6  -------------------------------
// SVD Line: 17681

//  <item> SFDITEM_FIELD__ADC_ADC_CHSELRMOD1_SQ6
//    <name> SQ6 </name>
//    <rw> 
//    <i> [Bits 23..20] RW (@ 0x40012428) 6th conversion of the sequence  These bits are programmed by software with the channel number (0...14) assigned to the 8th conversion of the sequence. 0b1111 indicates end of the sequence.  When 0b1111 (end of sequence) is programmed to the lower sequence channels, these bits are ignored.  Refer to SQ8[3:0] for a definition of channel selection.  Note: The software is allowed to write this bit only when ADSTART=0 (which ensures that no conversion is ongoing). </i>
//    <edit> 
//      <loc> ( (unsigned char)((ADC_ADC_CHSELRMOD1 >> 20) & 0xF), ((ADC_ADC_CHSELRMOD1 = (ADC_ADC_CHSELRMOD1 & ~(0xFUL << 20 )) | ((unsigned long)(Gui_u8:GuiVal & 0xF) << 20 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ---------------------------  Field Item: ADC_ADC_CHSELRMOD1_SQ7  -------------------------------
// SVD Line: 17692

//  <item> SFDITEM_FIELD__ADC_ADC_CHSELRMOD1_SQ7
//    <name> SQ7 </name>
//    <rw> 
//    <i> [Bits 27..24] RW (@ 0x40012428) 7th conversion of the sequence  These bits are programmed by software with the channel number (0...14) assigned to the 8th conversion of the sequence. 0b1111 indicates end of the sequence.  When 0b1111 (end of sequence) is programmed to the lower sequence channels, these bits are ignored.  Refer to SQ8[3:0] for a definition of channel selection.  Note: The software is allowed to write this bit only when ADSTART=0 (which ensures that no conversion is ongoing). </i>
//    <edit> 
//      <loc> ( (unsigned char)((ADC_ADC_CHSELRMOD1 >> 24) & 0xF), ((ADC_ADC_CHSELRMOD1 = (ADC_ADC_CHSELRMOD1 & ~(0xFUL << 24 )) | ((unsigned long)(Gui_u8:GuiVal & 0xF) << 24 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ---------------------------  Field Item: ADC_ADC_CHSELRMOD1_SQ8  -------------------------------
// SVD Line: 17703

//  <item> SFDITEM_FIELD__ADC_ADC_CHSELRMOD1_SQ8
//    <name> SQ8 </name>
//    <rw> 
//    <i> [Bits 31..28] RW (@ 0x40012428) \n8th conversion of the sequence  These bits are programmed by software with the channel number (0...14) assigned to the 8th conversion of the sequence. 0b1111 indicates the end of the sequence.  When 0b1111 (end of sequence) is programmed to the lower sequence channels, these bits are ignored.  ...  Note: The software is allowed to write this bit only when ADSTART=0 (which ensures that no conversion is ongoing).\n0 : B_0x0 = CH0\n1 : B_0x1 = CH1\n2 : Reserved - do not use\n3 : Reserved - do not use\n4 : Reserved - do not use\n5 : Reserved - do not use\n6 : Reserved - do not use\n7 : Reserved - do not use\n8 : Reserved - do not use\n9 : Reserved - do not use\n10 : Reserved - do not use\n11 : Reserved - do not use\n12 : B_0xC = CH12\n13 : B_0xD = CH13\n14 : B_0xE = CH14\n15 : B_0xF = No channel selected (End of sequence) </i>
//    <combo> 
//      <loc> ( (unsigned int) ADC_ADC_CHSELRMOD1 ) </loc>
//      <o.31..28> SQ8
//        <0=> 0: B_0x0 = CH0
//        <1=> 1: B_0x1 = CH1
//        <2=> 2: 
//        <3=> 3: 
//        <4=> 4: 
//        <5=> 5: 
//        <6=> 6: 
//        <7=> 7: 
//        <8=> 8: 
//        <9=> 9: 
//        <10=> 10: 
//        <11=> 11: 
//        <12=> 12: B_0xC = CH12
//        <13=> 13: B_0xD = CH13
//        <14=> 14: B_0xE = CH14
//        <15=> 15: B_0xF = No channel selected (End of sequence)
//    </combo>
//  </item>
//  


// ---------------------------  Register RTree: ADC_ADC_CHSELRMOD1  -------------------------------
// SVD Line: 17616

//  <rtree> SFDITEM_REG__ADC_ADC_CHSELRMOD1
//    <name> ADC_CHSELRMOD1 </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x40012428) ADC channel selection register </i>
//    <loc> ( (unsigned int)((ADC_ADC_CHSELRMOD1 >> 0) & 0xFFFFFFFF), ((ADC_ADC_CHSELRMOD1 = (ADC_ADC_CHSELRMOD1 & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__ADC_ADC_CHSELRMOD1_SQ1 </item>
//    <item> SFDITEM_FIELD__ADC_ADC_CHSELRMOD1_SQ2 </item>
//    <item> SFDITEM_FIELD__ADC_ADC_CHSELRMOD1_SQ3 </item>
//    <item> SFDITEM_FIELD__ADC_ADC_CHSELRMOD1_SQ4 </item>
//    <item> SFDITEM_FIELD__ADC_ADC_CHSELRMOD1_SQ5 </item>
//    <item> SFDITEM_FIELD__ADC_ADC_CHSELRMOD1_SQ6 </item>
//    <item> SFDITEM_FIELD__ADC_ADC_CHSELRMOD1_SQ7 </item>
//    <item> SFDITEM_FIELD__ADC_ADC_CHSELRMOD1_SQ8 </item>
//  </rtree>
//  


// --------------------------  Register Item Address: ADC_ADC_AWD3TR  -----------------------------
// SVD Line: 17748

unsigned int ADC_ADC_AWD3TR __AT (0x4001242C);



// -----------------------------  Field Item: ADC_ADC_AWD3TR_LT3  ---------------------------------
// SVD Line: 17757

//  <item> SFDITEM_FIELD__ADC_ADC_AWD3TR_LT3
//    <name> LT3 </name>
//    <rw> 
//    <i> [Bits 11..0] RW (@ 0x4001242C) Analog watchdog 3lower threshold  These bits are written by software to define the lower threshold for the analog watchdog.  Refer to ADC_AWDxTR) on page395. </i>
//    <edit> 
//      <loc> ( (unsigned short)((ADC_ADC_AWD3TR >> 0) & 0xFFF), ((ADC_ADC_AWD3TR = (ADC_ADC_AWD3TR & ~(0xFFFUL << 0 )) | ((unsigned long)(Gui_u16:GuiVal & 0xFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -----------------------------  Field Item: ADC_ADC_AWD3TR_HT3  ---------------------------------
// SVD Line: 17766

//  <item> SFDITEM_FIELD__ADC_ADC_AWD3TR_HT3
//    <name> HT3 </name>
//    <rw> 
//    <i> [Bits 27..16] RW (@ 0x4001242C) Analog watchdog 3 higher threshold  These bits are written by software to define the higher threshold for the analog watchdog.  Refer to ADC_AWDxTR) on page395. </i>
//    <edit> 
//      <loc> ( (unsigned short)((ADC_ADC_AWD3TR >> 16) & 0xFFF), ((ADC_ADC_AWD3TR = (ADC_ADC_AWD3TR & ~(0xFFFUL << 16 )) | ((unsigned long)(Gui_u16:GuiVal & 0xFFF) << 16 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -----------------------------  Register RTree: ADC_ADC_AWD3TR  ---------------------------------
// SVD Line: 17748

//  <rtree> SFDITEM_REG__ADC_ADC_AWD3TR
//    <name> ADC_AWD3TR </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x4001242C) ADC watchdog threshold register </i>
//    <loc> ( (unsigned int)((ADC_ADC_AWD3TR >> 0) & 0xFFFFFFFF), ((ADC_ADC_AWD3TR = (ADC_ADC_AWD3TR & ~(0xFFF0FFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFF0FFF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__ADC_ADC_AWD3TR_LT3 </item>
//    <item> SFDITEM_FIELD__ADC_ADC_AWD3TR_HT3 </item>
//  </rtree>
//  


// ----------------------------  Register Item Address: ADC_ADC_DR  -------------------------------
// SVD Line: 17777

unsigned int ADC_ADC_DR __AT (0x40012440);



// -------------------------------  Field Item: ADC_ADC_DR_DATA  ----------------------------------
// SVD Line: 17786

//  <item> SFDITEM_FIELD__ADC_ADC_DR_DATA
//    <name> DATA </name>
//    <r> 
//    <i> [Bits 15..0] RO (@ 0x40012440) Converted data  These bits are read-only. They contain the conversion result from the last converted channel. The data are left- or right-aligned as shown in OVSE = 0) on page389.  Just after a calibration is complete, DATA[6:0] contains the calibration factor. </i>
//    <edit> 
//      <loc> ( (unsigned short)((ADC_ADC_DR >> 0) & 0xFFFF) ) </loc>
//    </edit>
//  </item>
//  


// -------------------------------  Register RTree: ADC_ADC_DR  -----------------------------------
// SVD Line: 17777

//  <rtree> SFDITEM_REG__ADC_ADC_DR
//    <name> ADC_DR </name>
//    <r> 
//    <i> [Bits 31..0] RO (@ 0x40012440) ADC data register </i>
//    <loc> ( (unsigned int)((ADC_ADC_DR >> 0) & 0xFFFFFFFF) ) </loc>
//    <item> SFDITEM_FIELD__ADC_ADC_DR_DATA </item>
//  </rtree>
//  


// --------------------------  Register Item Address: ADC_ADC_AWD2CR  -----------------------------
// SVD Line: 17797

unsigned int ADC_ADC_AWD2CR __AT (0x400124A0);



// ---------------------------  Field Item: ADC_ADC_AWD2CR_AWD2CH0  -------------------------------
// SVD Line: 17806

//  <item> SFDITEM_FIELD__ADC_ADC_AWD2CR_AWD2CH0
//    <name> AWD2CH0 </name>
//    <rw> 
//    <i> [Bit 0] RW (@ 0x400124A0) \nAnalog watchdog channel selection  These bits are set and cleared by software. They enable and select the input channels to be guarded by analog watchdog 2 (AWD2).  Note: The channels selected through ADC_AWD2CR must be also configured into the ADC_CHSELR registers. Refer to SQ8[3:0] for a definition of channel selection. The software is allowed to write this bit only when ADSTART=0 (which ensures that no conversion is ongoing).\n0 : B_0x0 = ADC analog channel-x is not monitored by AWD2\n1 : B_0x1 = ADC analog channel-x is monitored by AWD2 </i>
//    <combo> 
//      <loc> ( (unsigned int) ADC_ADC_AWD2CR ) </loc>
//      <o.0..0> AWD2CH0
//        <0=> 0: B_0x0 = ADC analog channel-x is not monitored by AWD2
//        <1=> 1: B_0x1 = ADC analog channel-x is monitored by AWD2
//    </combo>
//  </item>
//  


// ---------------------------  Field Item: ADC_ADC_AWD2CR_AWD2CH1  -------------------------------
// SVD Line: 17828

//  <item> SFDITEM_FIELD__ADC_ADC_AWD2CR_AWD2CH1
//    <name> AWD2CH1 </name>
//    <rw> 
//    <i> [Bit 1] RW (@ 0x400124A0) \nAnalog watchdog channel selection  These bits are set and cleared by software. They enable and select the input channels to be guarded by analog watchdog 2 (AWD2).  Note: The channels selected through ADC_AWD2CR must be also configured into the ADC_CHSELR registers. Refer to SQ8[3:0] for a definition of channel selection. The software is allowed to write this bit only when ADSTART=0 (which ensures that no conversion is ongoing).\n0 : B_0x0 = ADC analog channel-x is not monitored by AWD2\n1 : B_0x1 = ADC analog channel-x is monitored by AWD2 </i>
//    <combo> 
//      <loc> ( (unsigned int) ADC_ADC_AWD2CR ) </loc>
//      <o.1..1> AWD2CH1
//        <0=> 0: B_0x0 = ADC analog channel-x is not monitored by AWD2
//        <1=> 1: B_0x1 = ADC analog channel-x is monitored by AWD2
//    </combo>
//  </item>
//  


// ---------------------------  Field Item: ADC_ADC_AWD2CR_AWD2CH2  -------------------------------
// SVD Line: 17850

//  <item> SFDITEM_FIELD__ADC_ADC_AWD2CR_AWD2CH2
//    <name> AWD2CH2 </name>
//    <rw> 
//    <i> [Bit 2] RW (@ 0x400124A0) \nAnalog watchdog channel selection  These bits are set and cleared by software. They enable and select the input channels to be guarded by analog watchdog 2 (AWD2).  Note: The channels selected through ADC_AWD2CR must be also configured into the ADC_CHSELR registers. Refer to SQ8[3:0] for a definition of channel selection. The software is allowed to write this bit only when ADSTART=0 (which ensures that no conversion is ongoing).\n0 : B_0x0 = ADC analog channel-x is not monitored by AWD2\n1 : B_0x1 = ADC analog channel-x is monitored by AWD2 </i>
//    <combo> 
//      <loc> ( (unsigned int) ADC_ADC_AWD2CR ) </loc>
//      <o.2..2> AWD2CH2
//        <0=> 0: B_0x0 = ADC analog channel-x is not monitored by AWD2
//        <1=> 1: B_0x1 = ADC analog channel-x is monitored by AWD2
//    </combo>
//  </item>
//  


// ---------------------------  Field Item: ADC_ADC_AWD2CR_AWD2CH3  -------------------------------
// SVD Line: 17872

//  <item> SFDITEM_FIELD__ADC_ADC_AWD2CR_AWD2CH3
//    <name> AWD2CH3 </name>
//    <rw> 
//    <i> [Bit 3] RW (@ 0x400124A0) \nAnalog watchdog channel selection  These bits are set and cleared by software. They enable and select the input channels to be guarded by analog watchdog 2 (AWD2).  Note: The channels selected through ADC_AWD2CR must be also configured into the ADC_CHSELR registers. Refer to SQ8[3:0] for a definition of channel selection. The software is allowed to write this bit only when ADSTART=0 (which ensures that no conversion is ongoing).\n0 : B_0x0 = ADC analog channel-x is not monitored by AWD2\n1 : B_0x1 = ADC analog channel-x is monitored by AWD2 </i>
//    <combo> 
//      <loc> ( (unsigned int) ADC_ADC_AWD2CR ) </loc>
//      <o.3..3> AWD2CH3
//        <0=> 0: B_0x0 = ADC analog channel-x is not monitored by AWD2
//        <1=> 1: B_0x1 = ADC analog channel-x is monitored by AWD2
//    </combo>
//  </item>
//  


// ---------------------------  Field Item: ADC_ADC_AWD2CR_AWD2CH4  -------------------------------
// SVD Line: 17894

//  <item> SFDITEM_FIELD__ADC_ADC_AWD2CR_AWD2CH4
//    <name> AWD2CH4 </name>
//    <rw> 
//    <i> [Bit 4] RW (@ 0x400124A0) \nAnalog watchdog channel selection  These bits are set and cleared by software. They enable and select the input channels to be guarded by analog watchdog 2 (AWD2).  Note: The channels selected through ADC_AWD2CR must be also configured into the ADC_CHSELR registers. Refer to SQ8[3:0] for a definition of channel selection. The software is allowed to write this bit only when ADSTART=0 (which ensures that no conversion is ongoing).\n0 : B_0x0 = ADC analog channel-x is not monitored by AWD2\n1 : B_0x1 = ADC analog channel-x is monitored by AWD2 </i>
//    <combo> 
//      <loc> ( (unsigned int) ADC_ADC_AWD2CR ) </loc>
//      <o.4..4> AWD2CH4
//        <0=> 0: B_0x0 = ADC analog channel-x is not monitored by AWD2
//        <1=> 1: B_0x1 = ADC analog channel-x is monitored by AWD2
//    </combo>
//  </item>
//  


// ---------------------------  Field Item: ADC_ADC_AWD2CR_AWD2CH5  -------------------------------
// SVD Line: 17916

//  <item> SFDITEM_FIELD__ADC_ADC_AWD2CR_AWD2CH5
//    <name> AWD2CH5 </name>
//    <rw> 
//    <i> [Bit 5] RW (@ 0x400124A0) \nAnalog watchdog channel selection  These bits are set and cleared by software. They enable and select the input channels to be guarded by analog watchdog 2 (AWD2).  Note: The channels selected through ADC_AWD2CR must be also configured into the ADC_CHSELR registers. Refer to SQ8[3:0] for a definition of channel selection. The software is allowed to write this bit only when ADSTART=0 (which ensures that no conversion is ongoing).\n0 : B_0x0 = ADC analog channel-x is not monitored by AWD2\n1 : B_0x1 = ADC analog channel-x is monitored by AWD2 </i>
//    <combo> 
//      <loc> ( (unsigned int) ADC_ADC_AWD2CR ) </loc>
//      <o.5..5> AWD2CH5
//        <0=> 0: B_0x0 = ADC analog channel-x is not monitored by AWD2
//        <1=> 1: B_0x1 = ADC analog channel-x is monitored by AWD2
//    </combo>
//  </item>
//  


// ---------------------------  Field Item: ADC_ADC_AWD2CR_AWD2CH6  -------------------------------
// SVD Line: 17938

//  <item> SFDITEM_FIELD__ADC_ADC_AWD2CR_AWD2CH6
//    <name> AWD2CH6 </name>
//    <rw> 
//    <i> [Bit 6] RW (@ 0x400124A0) \nAnalog watchdog channel selection  These bits are set and cleared by software. They enable and select the input channels to be guarded by analog watchdog 2 (AWD2).  Note: The channels selected through ADC_AWD2CR must be also configured into the ADC_CHSELR registers. Refer to SQ8[3:0] for a definition of channel selection. The software is allowed to write this bit only when ADSTART=0 (which ensures that no conversion is ongoing).\n0 : B_0x0 = ADC analog channel-x is not monitored by AWD2\n1 : B_0x1 = ADC analog channel-x is monitored by AWD2 </i>
//    <combo> 
//      <loc> ( (unsigned int) ADC_ADC_AWD2CR ) </loc>
//      <o.6..6> AWD2CH6
//        <0=> 0: B_0x0 = ADC analog channel-x is not monitored by AWD2
//        <1=> 1: B_0x1 = ADC analog channel-x is monitored by AWD2
//    </combo>
//  </item>
//  


// ---------------------------  Field Item: ADC_ADC_AWD2CR_AWD2CH7  -------------------------------
// SVD Line: 17960

//  <item> SFDITEM_FIELD__ADC_ADC_AWD2CR_AWD2CH7
//    <name> AWD2CH7 </name>
//    <rw> 
//    <i> [Bit 7] RW (@ 0x400124A0) \nAnalog watchdog channel selection  These bits are set and cleared by software. They enable and select the input channels to be guarded by analog watchdog 2 (AWD2).  Note: The channels selected through ADC_AWD2CR must be also configured into the ADC_CHSELR registers. Refer to SQ8[3:0] for a definition of channel selection. The software is allowed to write this bit only when ADSTART=0 (which ensures that no conversion is ongoing).\n0 : B_0x0 = ADC analog channel-x is not monitored by AWD2\n1 : B_0x1 = ADC analog channel-x is monitored by AWD2 </i>
//    <combo> 
//      <loc> ( (unsigned int) ADC_ADC_AWD2CR ) </loc>
//      <o.7..7> AWD2CH7
//        <0=> 0: B_0x0 = ADC analog channel-x is not monitored by AWD2
//        <1=> 1: B_0x1 = ADC analog channel-x is monitored by AWD2
//    </combo>
//  </item>
//  


// ---------------------------  Field Item: ADC_ADC_AWD2CR_AWD2CH8  -------------------------------
// SVD Line: 17982

//  <item> SFDITEM_FIELD__ADC_ADC_AWD2CR_AWD2CH8
//    <name> AWD2CH8 </name>
//    <rw> 
//    <i> [Bit 8] RW (@ 0x400124A0) \nAnalog watchdog channel selection  These bits are set and cleared by software. They enable and select the input channels to be guarded by analog watchdog 2 (AWD2).  Note: The channels selected through ADC_AWD2CR must be also configured into the ADC_CHSELR registers. Refer to SQ8[3:0] for a definition of channel selection. The software is allowed to write this bit only when ADSTART=0 (which ensures that no conversion is ongoing).\n0 : B_0x0 = ADC analog channel-x is not monitored by AWD2\n1 : B_0x1 = ADC analog channel-x is monitored by AWD2 </i>
//    <combo> 
//      <loc> ( (unsigned int) ADC_ADC_AWD2CR ) </loc>
//      <o.8..8> AWD2CH8
//        <0=> 0: B_0x0 = ADC analog channel-x is not monitored by AWD2
//        <1=> 1: B_0x1 = ADC analog channel-x is monitored by AWD2
//    </combo>
//  </item>
//  


// ---------------------------  Field Item: ADC_ADC_AWD2CR_AWD2CH9  -------------------------------
// SVD Line: 18004

//  <item> SFDITEM_FIELD__ADC_ADC_AWD2CR_AWD2CH9
//    <name> AWD2CH9 </name>
//    <rw> 
//    <i> [Bit 9] RW (@ 0x400124A0) \nAnalog watchdog channel selection  These bits are set and cleared by software. They enable and select the input channels to be guarded by analog watchdog 2 (AWD2).  Note: The channels selected through ADC_AWD2CR must be also configured into the ADC_CHSELR registers. Refer to SQ8[3:0] for a definition of channel selection. The software is allowed to write this bit only when ADSTART=0 (which ensures that no conversion is ongoing).\n0 : B_0x0 = ADC analog channel-x is not monitored by AWD2\n1 : B_0x1 = ADC analog channel-x is monitored by AWD2 </i>
//    <combo> 
//      <loc> ( (unsigned int) ADC_ADC_AWD2CR ) </loc>
//      <o.9..9> AWD2CH9
//        <0=> 0: B_0x0 = ADC analog channel-x is not monitored by AWD2
//        <1=> 1: B_0x1 = ADC analog channel-x is monitored by AWD2
//    </combo>
//  </item>
//  


// ---------------------------  Field Item: ADC_ADC_AWD2CR_AWD2CH10  ------------------------------
// SVD Line: 18026

//  <item> SFDITEM_FIELD__ADC_ADC_AWD2CR_AWD2CH10
//    <name> AWD2CH10 </name>
//    <rw> 
//    <i> [Bit 10] RW (@ 0x400124A0) \nAnalog watchdog channel selection  These bits are set and cleared by software. They enable and select the input channels to be guarded by analog watchdog 2 (AWD2).  Note: The channels selected through ADC_AWD2CR must be also configured into the ADC_CHSELR registers. Refer to SQ8[3:0] for a definition of channel selection. The software is allowed to write this bit only when ADSTART=0 (which ensures that no conversion is ongoing).\n0 : B_0x0 = ADC analog channel-x is not monitored by AWD2\n1 : B_0x1 = ADC analog channel-x is monitored by AWD2 </i>
//    <combo> 
//      <loc> ( (unsigned int) ADC_ADC_AWD2CR ) </loc>
//      <o.10..10> AWD2CH10
//        <0=> 0: B_0x0 = ADC analog channel-x is not monitored by AWD2
//        <1=> 1: B_0x1 = ADC analog channel-x is monitored by AWD2
//    </combo>
//  </item>
//  


// ---------------------------  Field Item: ADC_ADC_AWD2CR_AWD2CH11  ------------------------------
// SVD Line: 18048

//  <item> SFDITEM_FIELD__ADC_ADC_AWD2CR_AWD2CH11
//    <name> AWD2CH11 </name>
//    <rw> 
//    <i> [Bit 11] RW (@ 0x400124A0) \nAnalog watchdog channel selection  These bits are set and cleared by software. They enable and select the input channels to be guarded by analog watchdog 2 (AWD2).  Note: The channels selected through ADC_AWD2CR must be also configured into the ADC_CHSELR registers. Refer to SQ8[3:0] for a definition of channel selection. The software is allowed to write this bit only when ADSTART=0 (which ensures that no conversion is ongoing).\n0 : B_0x0 = ADC analog channel-x is not monitored by AWD2\n1 : B_0x1 = ADC analog channel-x is monitored by AWD2 </i>
//    <combo> 
//      <loc> ( (unsigned int) ADC_ADC_AWD2CR ) </loc>
//      <o.11..11> AWD2CH11
//        <0=> 0: B_0x0 = ADC analog channel-x is not monitored by AWD2
//        <1=> 1: B_0x1 = ADC analog channel-x is monitored by AWD2
//    </combo>
//  </item>
//  


// ---------------------------  Field Item: ADC_ADC_AWD2CR_AWD2CH12  ------------------------------
// SVD Line: 18070

//  <item> SFDITEM_FIELD__ADC_ADC_AWD2CR_AWD2CH12
//    <name> AWD2CH12 </name>
//    <rw> 
//    <i> [Bit 12] RW (@ 0x400124A0) \nAnalog watchdog channel selection  These bits are set and cleared by software. They enable and select the input channels to be guarded by analog watchdog 2 (AWD2).  Note: The channels selected through ADC_AWD2CR must be also configured into the ADC_CHSELR registers. Refer to SQ8[3:0] for a definition of channel selection. The software is allowed to write this bit only when ADSTART=0 (which ensures that no conversion is ongoing).\n0 : B_0x0 = ADC analog channel-x is not monitored by AWD2\n1 : B_0x1 = ADC analog channel-x is monitored by AWD2 </i>
//    <combo> 
//      <loc> ( (unsigned int) ADC_ADC_AWD2CR ) </loc>
//      <o.12..12> AWD2CH12
//        <0=> 0: B_0x0 = ADC analog channel-x is not monitored by AWD2
//        <1=> 1: B_0x1 = ADC analog channel-x is monitored by AWD2
//    </combo>
//  </item>
//  


// ---------------------------  Field Item: ADC_ADC_AWD2CR_AWD2CH13  ------------------------------
// SVD Line: 18092

//  <item> SFDITEM_FIELD__ADC_ADC_AWD2CR_AWD2CH13
//    <name> AWD2CH13 </name>
//    <rw> 
//    <i> [Bit 13] RW (@ 0x400124A0) \nAnalog watchdog channel selection  These bits are set and cleared by software. They enable and select the input channels to be guarded by analog watchdog 2 (AWD2).  Note: The channels selected through ADC_AWD2CR must be also configured into the ADC_CHSELR registers. Refer to SQ8[3:0] for a definition of channel selection. The software is allowed to write this bit only when ADSTART=0 (which ensures that no conversion is ongoing).\n0 : B_0x0 = ADC analog channel-x is not monitored by AWD2\n1 : B_0x1 = ADC analog channel-x is monitored by AWD2 </i>
//    <combo> 
//      <loc> ( (unsigned int) ADC_ADC_AWD2CR ) </loc>
//      <o.13..13> AWD2CH13
//        <0=> 0: B_0x0 = ADC analog channel-x is not monitored by AWD2
//        <1=> 1: B_0x1 = ADC analog channel-x is monitored by AWD2
//    </combo>
//  </item>
//  


// ---------------------------  Field Item: ADC_ADC_AWD2CR_AWD2CH14  ------------------------------
// SVD Line: 18114

//  <item> SFDITEM_FIELD__ADC_ADC_AWD2CR_AWD2CH14
//    <name> AWD2CH14 </name>
//    <rw> 
//    <i> [Bit 14] RW (@ 0x400124A0) \nAnalog watchdog channel selection  These bits are set and cleared by software. They enable and select the input channels to be guarded by analog watchdog 2 (AWD2).  Note: The channels selected through ADC_AWD2CR must be also configured into the ADC_CHSELR registers. Refer to SQ8[3:0] for a definition of channel selection. The software is allowed to write this bit only when ADSTART=0 (which ensures that no conversion is ongoing).\n0 : B_0x0 = ADC analog channel-x is not monitored by AWD2\n1 : B_0x1 = ADC analog channel-x is monitored by AWD2 </i>
//    <combo> 
//      <loc> ( (unsigned int) ADC_ADC_AWD2CR ) </loc>
//      <o.14..14> AWD2CH14
//        <0=> 0: B_0x0 = ADC analog channel-x is not monitored by AWD2
//        <1=> 1: B_0x1 = ADC analog channel-x is monitored by AWD2
//    </combo>
//  </item>
//  


// ---------------------------  Field Item: ADC_ADC_AWD2CR_AWD2CH15  ------------------------------
// SVD Line: 18136

//  <item> SFDITEM_FIELD__ADC_ADC_AWD2CR_AWD2CH15
//    <name> AWD2CH15 </name>
//    <rw> 
//    <i> [Bit 15] RW (@ 0x400124A0) \nAnalog watchdog channel selection  These bits are set and cleared by software. They enable and select the input channels to be guarded by analog watchdog 2 (AWD2).  Note: The channels selected through ADC_AWD2CR must be also configured into the ADC_CHSELR registers. Refer to SQ8[3:0] for a definition of channel selection. The software is allowed to write this bit only when ADSTART=0 (which ensures that no conversion is ongoing).\n0 : B_0x0 = ADC analog channel-x is not monitored by AWD2\n1 : B_0x1 = ADC analog channel-x is monitored by AWD2 </i>
//    <combo> 
//      <loc> ( (unsigned int) ADC_ADC_AWD2CR ) </loc>
//      <o.15..15> AWD2CH15
//        <0=> 0: B_0x0 = ADC analog channel-x is not monitored by AWD2
//        <1=> 1: B_0x1 = ADC analog channel-x is monitored by AWD2
//    </combo>
//  </item>
//  


// ---------------------------  Field Item: ADC_ADC_AWD2CR_AWD2CH16  ------------------------------
// SVD Line: 18158

//  <item> SFDITEM_FIELD__ADC_ADC_AWD2CR_AWD2CH16
//    <name> AWD2CH16 </name>
//    <rw> 
//    <i> [Bit 16] RW (@ 0x400124A0) \nAnalog watchdog channel selection  These bits are set and cleared by software. They enable and select the input channels to be guarded by analog watchdog 2 (AWD2).  Note: The channels selected through ADC_AWD2CR must be also configured into the ADC_CHSELR registers. Refer to SQ8[3:0] for a definition of channel selection. The software is allowed to write this bit only when ADSTART=0 (which ensures that no conversion is ongoing).\n0 : B_0x0 = ADC analog channel-x is not monitored by AWD2\n1 : B_0x1 = ADC analog channel-x is monitored by AWD2 </i>
//    <combo> 
//      <loc> ( (unsigned int) ADC_ADC_AWD2CR ) </loc>
//      <o.16..16> AWD2CH16
//        <0=> 0: B_0x0 = ADC analog channel-x is not monitored by AWD2
//        <1=> 1: B_0x1 = ADC analog channel-x is monitored by AWD2
//    </combo>
//  </item>
//  


// ---------------------------  Field Item: ADC_ADC_AWD2CR_AWD2CH17  ------------------------------
// SVD Line: 18180

//  <item> SFDITEM_FIELD__ADC_ADC_AWD2CR_AWD2CH17
//    <name> AWD2CH17 </name>
//    <rw> 
//    <i> [Bit 17] RW (@ 0x400124A0) \nAnalog watchdog channel selection  These bits are set and cleared by software. They enable and select the input channels to be guarded by analog watchdog 2 (AWD2).  Note: The channels selected through ADC_AWD2CR must be also configured into the ADC_CHSELR registers. Refer to SQ8[3:0] for a definition of channel selection. The software is allowed to write this bit only when ADSTART=0 (which ensures that no conversion is ongoing).\n0 : B_0x0 = ADC analog channel-x is not monitored by AWD2\n1 : B_0x1 = ADC analog channel-x is monitored by AWD2 </i>
//    <combo> 
//      <loc> ( (unsigned int) ADC_ADC_AWD2CR ) </loc>
//      <o.17..17> AWD2CH17
//        <0=> 0: B_0x0 = ADC analog channel-x is not monitored by AWD2
//        <1=> 1: B_0x1 = ADC analog channel-x is monitored by AWD2
//    </combo>
//  </item>
//  


// ---------------------------  Field Item: ADC_ADC_AWD2CR_AWD2CH18  ------------------------------
// SVD Line: 18202

//  <item> SFDITEM_FIELD__ADC_ADC_AWD2CR_AWD2CH18
//    <name> AWD2CH18 </name>
//    <rw> 
//    <i> [Bit 18] RW (@ 0x400124A0) \nAnalog watchdog channel selection  These bits are set and cleared by software. They enable and select the input channels to be guarded by analog watchdog 2 (AWD2).  Note: The channels selected through ADC_AWD2CR must be also configured into the ADC_CHSELR registers. Refer to SQ8[3:0] for a definition of channel selection. The software is allowed to write this bit only when ADSTART=0 (which ensures that no conversion is ongoing).\n0 : B_0x0 = ADC analog channel-x is not monitored by AWD2\n1 : B_0x1 = ADC analog channel-x is monitored by AWD2 </i>
//    <combo> 
//      <loc> ( (unsigned int) ADC_ADC_AWD2CR ) </loc>
//      <o.18..18> AWD2CH18
//        <0=> 0: B_0x0 = ADC analog channel-x is not monitored by AWD2
//        <1=> 1: B_0x1 = ADC analog channel-x is monitored by AWD2
//    </combo>
//  </item>
//  


// -----------------------------  Register RTree: ADC_ADC_AWD2CR  ---------------------------------
// SVD Line: 17797

//  <rtree> SFDITEM_REG__ADC_ADC_AWD2CR
//    <name> ADC_AWD2CR </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x400124A0) ADC Analog Watchdog 2 Configuration register </i>
//    <loc> ( (unsigned int)((ADC_ADC_AWD2CR >> 0) & 0xFFFFFFFF), ((ADC_ADC_AWD2CR = (ADC_ADC_AWD2CR & ~(0x7FFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0x7FFFF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__ADC_ADC_AWD2CR_AWD2CH0 </item>
//    <item> SFDITEM_FIELD__ADC_ADC_AWD2CR_AWD2CH1 </item>
//    <item> SFDITEM_FIELD__ADC_ADC_AWD2CR_AWD2CH2 </item>
//    <item> SFDITEM_FIELD__ADC_ADC_AWD2CR_AWD2CH3 </item>
//    <item> SFDITEM_FIELD__ADC_ADC_AWD2CR_AWD2CH4 </item>
//    <item> SFDITEM_FIELD__ADC_ADC_AWD2CR_AWD2CH5 </item>
//    <item> SFDITEM_FIELD__ADC_ADC_AWD2CR_AWD2CH6 </item>
//    <item> SFDITEM_FIELD__ADC_ADC_AWD2CR_AWD2CH7 </item>
//    <item> SFDITEM_FIELD__ADC_ADC_AWD2CR_AWD2CH8 </item>
//    <item> SFDITEM_FIELD__ADC_ADC_AWD2CR_AWD2CH9 </item>
//    <item> SFDITEM_FIELD__ADC_ADC_AWD2CR_AWD2CH10 </item>
//    <item> SFDITEM_FIELD__ADC_ADC_AWD2CR_AWD2CH11 </item>
//    <item> SFDITEM_FIELD__ADC_ADC_AWD2CR_AWD2CH12 </item>
//    <item> SFDITEM_FIELD__ADC_ADC_AWD2CR_AWD2CH13 </item>
//    <item> SFDITEM_FIELD__ADC_ADC_AWD2CR_AWD2CH14 </item>
//    <item> SFDITEM_FIELD__ADC_ADC_AWD2CR_AWD2CH15 </item>
//    <item> SFDITEM_FIELD__ADC_ADC_AWD2CR_AWD2CH16 </item>
//    <item> SFDITEM_FIELD__ADC_ADC_AWD2CR_AWD2CH17 </item>
//    <item> SFDITEM_FIELD__ADC_ADC_AWD2CR_AWD2CH18 </item>
//  </rtree>
//  


// --------------------------  Register Item Address: ADC_ADC_AWD3CR  -----------------------------
// SVD Line: 18226

unsigned int ADC_ADC_AWD3CR __AT (0x400124A4);



// ---------------------------  Field Item: ADC_ADC_AWD3CR_AWD3CH0  -------------------------------
// SVD Line: 18235

//  <item> SFDITEM_FIELD__ADC_ADC_AWD3CR_AWD3CH0
//    <name> AWD3CH0 </name>
//    <rw> 
//    <i> [Bit 0] RW (@ 0x400124A4) \nAnalog watchdog channel selection  These bits are set and cleared by software. They enable and select the input channels to be guarded by analog watchdog 3 (AWD3).  Note: The channels selected through ADC_AWD3CR must be also configured into the ADC_CHSELR registers. Refer to SQ8[3:0] for a definition of channel selection. The software is allowed to write this bit only when ADSTART=0 (which ensures that no conversion is ongoing).\n0 : B_0x0 = ADC analog channel-x is not monitored by AWD3\n1 : B_0x1 = ADC analog channel-x is monitored by AWD3 </i>
//    <combo> 
//      <loc> ( (unsigned int) ADC_ADC_AWD3CR ) </loc>
//      <o.0..0> AWD3CH0
//        <0=> 0: B_0x0 = ADC analog channel-x is not monitored by AWD3
//        <1=> 1: B_0x1 = ADC analog channel-x is monitored by AWD3
//    </combo>
//  </item>
//  


// ---------------------------  Field Item: ADC_ADC_AWD3CR_AWD3CH1  -------------------------------
// SVD Line: 18257

//  <item> SFDITEM_FIELD__ADC_ADC_AWD3CR_AWD3CH1
//    <name> AWD3CH1 </name>
//    <rw> 
//    <i> [Bit 1] RW (@ 0x400124A4) \nAnalog watchdog channel selection  These bits are set and cleared by software. They enable and select the input channels to be guarded by analog watchdog 3 (AWD3).  Note: The channels selected through ADC_AWD3CR must be also configured into the ADC_CHSELR registers. Refer to SQ8[3:0] for a definition of channel selection. The software is allowed to write this bit only when ADSTART=0 (which ensures that no conversion is ongoing).\n0 : B_0x0 = ADC analog channel-x is not monitored by AWD3\n1 : B_0x1 = ADC analog channel-x is monitored by AWD3 </i>
//    <combo> 
//      <loc> ( (unsigned int) ADC_ADC_AWD3CR ) </loc>
//      <o.1..1> AWD3CH1
//        <0=> 0: B_0x0 = ADC analog channel-x is not monitored by AWD3
//        <1=> 1: B_0x1 = ADC analog channel-x is monitored by AWD3
//    </combo>
//  </item>
//  


// ---------------------------  Field Item: ADC_ADC_AWD3CR_AWD3CH2  -------------------------------
// SVD Line: 18279

//  <item> SFDITEM_FIELD__ADC_ADC_AWD3CR_AWD3CH2
//    <name> AWD3CH2 </name>
//    <rw> 
//    <i> [Bit 2] RW (@ 0x400124A4) \nAnalog watchdog channel selection  These bits are set and cleared by software. They enable and select the input channels to be guarded by analog watchdog 3 (AWD3).  Note: The channels selected through ADC_AWD3CR must be also configured into the ADC_CHSELR registers. Refer to SQ8[3:0] for a definition of channel selection. The software is allowed to write this bit only when ADSTART=0 (which ensures that no conversion is ongoing).\n0 : B_0x0 = ADC analog channel-x is not monitored by AWD3\n1 : B_0x1 = ADC analog channel-x is monitored by AWD3 </i>
//    <combo> 
//      <loc> ( (unsigned int) ADC_ADC_AWD3CR ) </loc>
//      <o.2..2> AWD3CH2
//        <0=> 0: B_0x0 = ADC analog channel-x is not monitored by AWD3
//        <1=> 1: B_0x1 = ADC analog channel-x is monitored by AWD3
//    </combo>
//  </item>
//  


// ---------------------------  Field Item: ADC_ADC_AWD3CR_AWD3CH3  -------------------------------
// SVD Line: 18301

//  <item> SFDITEM_FIELD__ADC_ADC_AWD3CR_AWD3CH3
//    <name> AWD3CH3 </name>
//    <rw> 
//    <i> [Bit 3] RW (@ 0x400124A4) \nAnalog watchdog channel selection  These bits are set and cleared by software. They enable and select the input channels to be guarded by analog watchdog 3 (AWD3).  Note: The channels selected through ADC_AWD3CR must be also configured into the ADC_CHSELR registers. Refer to SQ8[3:0] for a definition of channel selection. The software is allowed to write this bit only when ADSTART=0 (which ensures that no conversion is ongoing).\n0 : B_0x0 = ADC analog channel-x is not monitored by AWD3\n1 : B_0x1 = ADC analog channel-x is monitored by AWD3 </i>
//    <combo> 
//      <loc> ( (unsigned int) ADC_ADC_AWD3CR ) </loc>
//      <o.3..3> AWD3CH3
//        <0=> 0: B_0x0 = ADC analog channel-x is not monitored by AWD3
//        <1=> 1: B_0x1 = ADC analog channel-x is monitored by AWD3
//    </combo>
//  </item>
//  


// ---------------------------  Field Item: ADC_ADC_AWD3CR_AWD3CH4  -------------------------------
// SVD Line: 18323

//  <item> SFDITEM_FIELD__ADC_ADC_AWD3CR_AWD3CH4
//    <name> AWD3CH4 </name>
//    <rw> 
//    <i> [Bit 4] RW (@ 0x400124A4) \nAnalog watchdog channel selection  These bits are set and cleared by software. They enable and select the input channels to be guarded by analog watchdog 3 (AWD3).  Note: The channels selected through ADC_AWD3CR must be also configured into the ADC_CHSELR registers. Refer to SQ8[3:0] for a definition of channel selection. The software is allowed to write this bit only when ADSTART=0 (which ensures that no conversion is ongoing).\n0 : B_0x0 = ADC analog channel-x is not monitored by AWD3\n1 : B_0x1 = ADC analog channel-x is monitored by AWD3 </i>
//    <combo> 
//      <loc> ( (unsigned int) ADC_ADC_AWD3CR ) </loc>
//      <o.4..4> AWD3CH4
//        <0=> 0: B_0x0 = ADC analog channel-x is not monitored by AWD3
//        <1=> 1: B_0x1 = ADC analog channel-x is monitored by AWD3
//    </combo>
//  </item>
//  


// ---------------------------  Field Item: ADC_ADC_AWD3CR_AWD3CH5  -------------------------------
// SVD Line: 18345

//  <item> SFDITEM_FIELD__ADC_ADC_AWD3CR_AWD3CH5
//    <name> AWD3CH5 </name>
//    <rw> 
//    <i> [Bit 5] RW (@ 0x400124A4) \nAnalog watchdog channel selection  These bits are set and cleared by software. They enable and select the input channels to be guarded by analog watchdog 3 (AWD3).  Note: The channels selected through ADC_AWD3CR must be also configured into the ADC_CHSELR registers. Refer to SQ8[3:0] for a definition of channel selection. The software is allowed to write this bit only when ADSTART=0 (which ensures that no conversion is ongoing).\n0 : B_0x0 = ADC analog channel-x is not monitored by AWD3\n1 : B_0x1 = ADC analog channel-x is monitored by AWD3 </i>
//    <combo> 
//      <loc> ( (unsigned int) ADC_ADC_AWD3CR ) </loc>
//      <o.5..5> AWD3CH5
//        <0=> 0: B_0x0 = ADC analog channel-x is not monitored by AWD3
//        <1=> 1: B_0x1 = ADC analog channel-x is monitored by AWD3
//    </combo>
//  </item>
//  


// ---------------------------  Field Item: ADC_ADC_AWD3CR_AWD3CH6  -------------------------------
// SVD Line: 18367

//  <item> SFDITEM_FIELD__ADC_ADC_AWD3CR_AWD3CH6
//    <name> AWD3CH6 </name>
//    <rw> 
//    <i> [Bit 6] RW (@ 0x400124A4) \nAnalog watchdog channel selection  These bits are set and cleared by software. They enable and select the input channels to be guarded by analog watchdog 3 (AWD3).  Note: The channels selected through ADC_AWD3CR must be also configured into the ADC_CHSELR registers. Refer to SQ8[3:0] for a definition of channel selection. The software is allowed to write this bit only when ADSTART=0 (which ensures that no conversion is ongoing).\n0 : B_0x0 = ADC analog channel-x is not monitored by AWD3\n1 : B_0x1 = ADC analog channel-x is monitored by AWD3 </i>
//    <combo> 
//      <loc> ( (unsigned int) ADC_ADC_AWD3CR ) </loc>
//      <o.6..6> AWD3CH6
//        <0=> 0: B_0x0 = ADC analog channel-x is not monitored by AWD3
//        <1=> 1: B_0x1 = ADC analog channel-x is monitored by AWD3
//    </combo>
//  </item>
//  


// ---------------------------  Field Item: ADC_ADC_AWD3CR_AWD3CH7  -------------------------------
// SVD Line: 18389

//  <item> SFDITEM_FIELD__ADC_ADC_AWD3CR_AWD3CH7
//    <name> AWD3CH7 </name>
//    <rw> 
//    <i> [Bit 7] RW (@ 0x400124A4) \nAnalog watchdog channel selection  These bits are set and cleared by software. They enable and select the input channels to be guarded by analog watchdog 3 (AWD3).  Note: The channels selected through ADC_AWD3CR must be also configured into the ADC_CHSELR registers. Refer to SQ8[3:0] for a definition of channel selection. The software is allowed to write this bit only when ADSTART=0 (which ensures that no conversion is ongoing).\n0 : B_0x0 = ADC analog channel-x is not monitored by AWD3\n1 : B_0x1 = ADC analog channel-x is monitored by AWD3 </i>
//    <combo> 
//      <loc> ( (unsigned int) ADC_ADC_AWD3CR ) </loc>
//      <o.7..7> AWD3CH7
//        <0=> 0: B_0x0 = ADC analog channel-x is not monitored by AWD3
//        <1=> 1: B_0x1 = ADC analog channel-x is monitored by AWD3
//    </combo>
//  </item>
//  


// ---------------------------  Field Item: ADC_ADC_AWD3CR_AWD3CH8  -------------------------------
// SVD Line: 18411

//  <item> SFDITEM_FIELD__ADC_ADC_AWD3CR_AWD3CH8
//    <name> AWD3CH8 </name>
//    <rw> 
//    <i> [Bit 8] RW (@ 0x400124A4) \nAnalog watchdog channel selection  These bits are set and cleared by software. They enable and select the input channels to be guarded by analog watchdog 3 (AWD3).  Note: The channels selected through ADC_AWD3CR must be also configured into the ADC_CHSELR registers. Refer to SQ8[3:0] for a definition of channel selection. The software is allowed to write this bit only when ADSTART=0 (which ensures that no conversion is ongoing).\n0 : B_0x0 = ADC analog channel-x is not monitored by AWD3\n1 : B_0x1 = ADC analog channel-x is monitored by AWD3 </i>
//    <combo> 
//      <loc> ( (unsigned int) ADC_ADC_AWD3CR ) </loc>
//      <o.8..8> AWD3CH8
//        <0=> 0: B_0x0 = ADC analog channel-x is not monitored by AWD3
//        <1=> 1: B_0x1 = ADC analog channel-x is monitored by AWD3
//    </combo>
//  </item>
//  


// ---------------------------  Field Item: ADC_ADC_AWD3CR_AWD3CH9  -------------------------------
// SVD Line: 18433

//  <item> SFDITEM_FIELD__ADC_ADC_AWD3CR_AWD3CH9
//    <name> AWD3CH9 </name>
//    <rw> 
//    <i> [Bit 9] RW (@ 0x400124A4) \nAnalog watchdog channel selection  These bits are set and cleared by software. They enable and select the input channels to be guarded by analog watchdog 3 (AWD3).  Note: The channels selected through ADC_AWD3CR must be also configured into the ADC_CHSELR registers. Refer to SQ8[3:0] for a definition of channel selection. The software is allowed to write this bit only when ADSTART=0 (which ensures that no conversion is ongoing).\n0 : B_0x0 = ADC analog channel-x is not monitored by AWD3\n1 : B_0x1 = ADC analog channel-x is monitored by AWD3 </i>
//    <combo> 
//      <loc> ( (unsigned int) ADC_ADC_AWD3CR ) </loc>
//      <o.9..9> AWD3CH9
//        <0=> 0: B_0x0 = ADC analog channel-x is not monitored by AWD3
//        <1=> 1: B_0x1 = ADC analog channel-x is monitored by AWD3
//    </combo>
//  </item>
//  


// ---------------------------  Field Item: ADC_ADC_AWD3CR_AWD3CH10  ------------------------------
// SVD Line: 18455

//  <item> SFDITEM_FIELD__ADC_ADC_AWD3CR_AWD3CH10
//    <name> AWD3CH10 </name>
//    <rw> 
//    <i> [Bit 10] RW (@ 0x400124A4) \nAnalog watchdog channel selection  These bits are set and cleared by software. They enable and select the input channels to be guarded by analog watchdog 3 (AWD3).  Note: The channels selected through ADC_AWD3CR must be also configured into the ADC_CHSELR registers. Refer to SQ8[3:0] for a definition of channel selection. The software is allowed to write this bit only when ADSTART=0 (which ensures that no conversion is ongoing).\n0 : B_0x0 = ADC analog channel-x is not monitored by AWD3\n1 : B_0x1 = ADC analog channel-x is monitored by AWD3 </i>
//    <combo> 
//      <loc> ( (unsigned int) ADC_ADC_AWD3CR ) </loc>
//      <o.10..10> AWD3CH10
//        <0=> 0: B_0x0 = ADC analog channel-x is not monitored by AWD3
//        <1=> 1: B_0x1 = ADC analog channel-x is monitored by AWD3
//    </combo>
//  </item>
//  


// ---------------------------  Field Item: ADC_ADC_AWD3CR_AWD3CH11  ------------------------------
// SVD Line: 18477

//  <item> SFDITEM_FIELD__ADC_ADC_AWD3CR_AWD3CH11
//    <name> AWD3CH11 </name>
//    <rw> 
//    <i> [Bit 11] RW (@ 0x400124A4) \nAnalog watchdog channel selection  These bits are set and cleared by software. They enable and select the input channels to be guarded by analog watchdog 3 (AWD3).  Note: The channels selected through ADC_AWD3CR must be also configured into the ADC_CHSELR registers. Refer to SQ8[3:0] for a definition of channel selection. The software is allowed to write this bit only when ADSTART=0 (which ensures that no conversion is ongoing).\n0 : B_0x0 = ADC analog channel-x is not monitored by AWD3\n1 : B_0x1 = ADC analog channel-x is monitored by AWD3 </i>
//    <combo> 
//      <loc> ( (unsigned int) ADC_ADC_AWD3CR ) </loc>
//      <o.11..11> AWD3CH11
//        <0=> 0: B_0x0 = ADC analog channel-x is not monitored by AWD3
//        <1=> 1: B_0x1 = ADC analog channel-x is monitored by AWD3
//    </combo>
//  </item>
//  


// ---------------------------  Field Item: ADC_ADC_AWD3CR_AWD3CH12  ------------------------------
// SVD Line: 18499

//  <item> SFDITEM_FIELD__ADC_ADC_AWD3CR_AWD3CH12
//    <name> AWD3CH12 </name>
//    <rw> 
//    <i> [Bit 12] RW (@ 0x400124A4) \nAnalog watchdog channel selection  These bits are set and cleared by software. They enable and select the input channels to be guarded by analog watchdog 3 (AWD3).  Note: The channels selected through ADC_AWD3CR must be also configured into the ADC_CHSELR registers. Refer to SQ8[3:0] for a definition of channel selection. The software is allowed to write this bit only when ADSTART=0 (which ensures that no conversion is ongoing).\n0 : B_0x0 = ADC analog channel-x is not monitored by AWD3\n1 : B_0x1 = ADC analog channel-x is monitored by AWD3 </i>
//    <combo> 
//      <loc> ( (unsigned int) ADC_ADC_AWD3CR ) </loc>
//      <o.12..12> AWD3CH12
//        <0=> 0: B_0x0 = ADC analog channel-x is not monitored by AWD3
//        <1=> 1: B_0x1 = ADC analog channel-x is monitored by AWD3
//    </combo>
//  </item>
//  


// ---------------------------  Field Item: ADC_ADC_AWD3CR_AWD3CH13  ------------------------------
// SVD Line: 18521

//  <item> SFDITEM_FIELD__ADC_ADC_AWD3CR_AWD3CH13
//    <name> AWD3CH13 </name>
//    <rw> 
//    <i> [Bit 13] RW (@ 0x400124A4) \nAnalog watchdog channel selection  These bits are set and cleared by software. They enable and select the input channels to be guarded by analog watchdog 3 (AWD3).  Note: The channels selected through ADC_AWD3CR must be also configured into the ADC_CHSELR registers. Refer to SQ8[3:0] for a definition of channel selection. The software is allowed to write this bit only when ADSTART=0 (which ensures that no conversion is ongoing).\n0 : B_0x0 = ADC analog channel-x is not monitored by AWD3\n1 : B_0x1 = ADC analog channel-x is monitored by AWD3 </i>
//    <combo> 
//      <loc> ( (unsigned int) ADC_ADC_AWD3CR ) </loc>
//      <o.13..13> AWD3CH13
//        <0=> 0: B_0x0 = ADC analog channel-x is not monitored by AWD3
//        <1=> 1: B_0x1 = ADC analog channel-x is monitored by AWD3
//    </combo>
//  </item>
//  


// ---------------------------  Field Item: ADC_ADC_AWD3CR_AWD3CH14  ------------------------------
// SVD Line: 18543

//  <item> SFDITEM_FIELD__ADC_ADC_AWD3CR_AWD3CH14
//    <name> AWD3CH14 </name>
//    <rw> 
//    <i> [Bit 14] RW (@ 0x400124A4) \nAnalog watchdog channel selection  These bits are set and cleared by software. They enable and select the input channels to be guarded by analog watchdog 3 (AWD3).  Note: The channels selected through ADC_AWD3CR must be also configured into the ADC_CHSELR registers. Refer to SQ8[3:0] for a definition of channel selection. The software is allowed to write this bit only when ADSTART=0 (which ensures that no conversion is ongoing).\n0 : B_0x0 = ADC analog channel-x is not monitored by AWD3\n1 : B_0x1 = ADC analog channel-x is monitored by AWD3 </i>
//    <combo> 
//      <loc> ( (unsigned int) ADC_ADC_AWD3CR ) </loc>
//      <o.14..14> AWD3CH14
//        <0=> 0: B_0x0 = ADC analog channel-x is not monitored by AWD3
//        <1=> 1: B_0x1 = ADC analog channel-x is monitored by AWD3
//    </combo>
//  </item>
//  


// ---------------------------  Field Item: ADC_ADC_AWD3CR_AWD3CH15  ------------------------------
// SVD Line: 18565

//  <item> SFDITEM_FIELD__ADC_ADC_AWD3CR_AWD3CH15
//    <name> AWD3CH15 </name>
//    <rw> 
//    <i> [Bit 15] RW (@ 0x400124A4) \nAnalog watchdog channel selection  These bits are set and cleared by software. They enable and select the input channels to be guarded by analog watchdog 3 (AWD3).  Note: The channels selected through ADC_AWD3CR must be also configured into the ADC_CHSELR registers. Refer to SQ8[3:0] for a definition of channel selection. The software is allowed to write this bit only when ADSTART=0 (which ensures that no conversion is ongoing).\n0 : B_0x0 = ADC analog channel-x is not monitored by AWD3\n1 : B_0x1 = ADC analog channel-x is monitored by AWD3 </i>
//    <combo> 
//      <loc> ( (unsigned int) ADC_ADC_AWD3CR ) </loc>
//      <o.15..15> AWD3CH15
//        <0=> 0: B_0x0 = ADC analog channel-x is not monitored by AWD3
//        <1=> 1: B_0x1 = ADC analog channel-x is monitored by AWD3
//    </combo>
//  </item>
//  


// ---------------------------  Field Item: ADC_ADC_AWD3CR_AWD3CH16  ------------------------------
// SVD Line: 18587

//  <item> SFDITEM_FIELD__ADC_ADC_AWD3CR_AWD3CH16
//    <name> AWD3CH16 </name>
//    <rw> 
//    <i> [Bit 16] RW (@ 0x400124A4) \nAnalog watchdog channel selection  These bits are set and cleared by software. They enable and select the input channels to be guarded by analog watchdog 3 (AWD3).  Note: The channels selected through ADC_AWD3CR must be also configured into the ADC_CHSELR registers. Refer to SQ8[3:0] for a definition of channel selection. The software is allowed to write this bit only when ADSTART=0 (which ensures that no conversion is ongoing).\n0 : B_0x0 = ADC analog channel-x is not monitored by AWD3\n1 : B_0x1 = ADC analog channel-x is monitored by AWD3 </i>
//    <combo> 
//      <loc> ( (unsigned int) ADC_ADC_AWD3CR ) </loc>
//      <o.16..16> AWD3CH16
//        <0=> 0: B_0x0 = ADC analog channel-x is not monitored by AWD3
//        <1=> 1: B_0x1 = ADC analog channel-x is monitored by AWD3
//    </combo>
//  </item>
//  


// ---------------------------  Field Item: ADC_ADC_AWD3CR_AWD3CH17  ------------------------------
// SVD Line: 18609

//  <item> SFDITEM_FIELD__ADC_ADC_AWD3CR_AWD3CH17
//    <name> AWD3CH17 </name>
//    <rw> 
//    <i> [Bit 17] RW (@ 0x400124A4) \nAnalog watchdog channel selection  These bits are set and cleared by software. They enable and select the input channels to be guarded by analog watchdog 3 (AWD3).  Note: The channels selected through ADC_AWD3CR must be also configured into the ADC_CHSELR registers. Refer to SQ8[3:0] for a definition of channel selection. The software is allowed to write this bit only when ADSTART=0 (which ensures that no conversion is ongoing).\n0 : B_0x0 = ADC analog channel-x is not monitored by AWD3\n1 : B_0x1 = ADC analog channel-x is monitored by AWD3 </i>
//    <combo> 
//      <loc> ( (unsigned int) ADC_ADC_AWD3CR ) </loc>
//      <o.17..17> AWD3CH17
//        <0=> 0: B_0x0 = ADC analog channel-x is not monitored by AWD3
//        <1=> 1: B_0x1 = ADC analog channel-x is monitored by AWD3
//    </combo>
//  </item>
//  


// ---------------------------  Field Item: ADC_ADC_AWD3CR_AWD3CH18  ------------------------------
// SVD Line: 18631

//  <item> SFDITEM_FIELD__ADC_ADC_AWD3CR_AWD3CH18
//    <name> AWD3CH18 </name>
//    <rw> 
//    <i> [Bit 18] RW (@ 0x400124A4) \nAnalog watchdog channel selection  These bits are set and cleared by software. They enable and select the input channels to be guarded by analog watchdog 3 (AWD3).  Note: The channels selected through ADC_AWD3CR must be also configured into the ADC_CHSELR registers. Refer to SQ8[3:0] for a definition of channel selection. The software is allowed to write this bit only when ADSTART=0 (which ensures that no conversion is ongoing).\n0 : B_0x0 = ADC analog channel-x is not monitored by AWD3\n1 : B_0x1 = ADC analog channel-x is monitored by AWD3 </i>
//    <combo> 
//      <loc> ( (unsigned int) ADC_ADC_AWD3CR ) </loc>
//      <o.18..18> AWD3CH18
//        <0=> 0: B_0x0 = ADC analog channel-x is not monitored by AWD3
//        <1=> 1: B_0x1 = ADC analog channel-x is monitored by AWD3
//    </combo>
//  </item>
//  


// -----------------------------  Register RTree: ADC_ADC_AWD3CR  ---------------------------------
// SVD Line: 18226

//  <rtree> SFDITEM_REG__ADC_ADC_AWD3CR
//    <name> ADC_AWD3CR </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x400124A4) ADC Analog Watchdog 3 Configuration register </i>
//    <loc> ( (unsigned int)((ADC_ADC_AWD3CR >> 0) & 0xFFFFFFFF), ((ADC_ADC_AWD3CR = (ADC_ADC_AWD3CR & ~(0x7FFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0x7FFFF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__ADC_ADC_AWD3CR_AWD3CH0 </item>
//    <item> SFDITEM_FIELD__ADC_ADC_AWD3CR_AWD3CH1 </item>
//    <item> SFDITEM_FIELD__ADC_ADC_AWD3CR_AWD3CH2 </item>
//    <item> SFDITEM_FIELD__ADC_ADC_AWD3CR_AWD3CH3 </item>
//    <item> SFDITEM_FIELD__ADC_ADC_AWD3CR_AWD3CH4 </item>
//    <item> SFDITEM_FIELD__ADC_ADC_AWD3CR_AWD3CH5 </item>
//    <item> SFDITEM_FIELD__ADC_ADC_AWD3CR_AWD3CH6 </item>
//    <item> SFDITEM_FIELD__ADC_ADC_AWD3CR_AWD3CH7 </item>
//    <item> SFDITEM_FIELD__ADC_ADC_AWD3CR_AWD3CH8 </item>
//    <item> SFDITEM_FIELD__ADC_ADC_AWD3CR_AWD3CH9 </item>
//    <item> SFDITEM_FIELD__ADC_ADC_AWD3CR_AWD3CH10 </item>
//    <item> SFDITEM_FIELD__ADC_ADC_AWD3CR_AWD3CH11 </item>
//    <item> SFDITEM_FIELD__ADC_ADC_AWD3CR_AWD3CH12 </item>
//    <item> SFDITEM_FIELD__ADC_ADC_AWD3CR_AWD3CH13 </item>
//    <item> SFDITEM_FIELD__ADC_ADC_AWD3CR_AWD3CH14 </item>
//    <item> SFDITEM_FIELD__ADC_ADC_AWD3CR_AWD3CH15 </item>
//    <item> SFDITEM_FIELD__ADC_ADC_AWD3CR_AWD3CH16 </item>
//    <item> SFDITEM_FIELD__ADC_ADC_AWD3CR_AWD3CH17 </item>
//    <item> SFDITEM_FIELD__ADC_ADC_AWD3CR_AWD3CH18 </item>
//  </rtree>
//  


// -------------------------  Register Item Address: ADC_ADC_CALFACT  -----------------------------
// SVD Line: 18655

unsigned int ADC_ADC_CALFACT __AT (0x400124B4);



// ---------------------------  Field Item: ADC_ADC_CALFACT_CALFACT  ------------------------------
// SVD Line: 18664

//  <item> SFDITEM_FIELD__ADC_ADC_CALFACT_CALFACT
//    <name> CALFACT </name>
//    <rw> 
//    <i> [Bits 6..0] RW (@ 0x400124B4) Calibration factor  These bits are written by hardware or by software.  Once a calibration is complete,they are updated by hardware with the calibration factors.  Software can write these bits with a new calibration factor. If the new calibration factor is different from the current one stored into the analog ADC, it is then applied once a new calibration is launched.  Just after a calibration is complete, DATA[6:0] contains the calibration factor.  Note: Software can write these bits only when ADEN=1 (ADC is enabled and no calibration is ongoing and no conversion is ongoing). Refer to SQ8[3:0] for a definition of channel selection. </i>
//    <edit> 
//      <loc> ( (unsigned char)((ADC_ADC_CALFACT >> 0) & 0x7F), ((ADC_ADC_CALFACT = (ADC_ADC_CALFACT & ~(0x7FUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0x7F) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -----------------------------  Register RTree: ADC_ADC_CALFACT  --------------------------------
// SVD Line: 18655

//  <rtree> SFDITEM_REG__ADC_ADC_CALFACT
//    <name> ADC_CALFACT </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x400124B4) ADC Calibration factor </i>
//    <loc> ( (unsigned int)((ADC_ADC_CALFACT >> 0) & 0xFFFFFFFF), ((ADC_ADC_CALFACT = (ADC_ADC_CALFACT & ~(0x7FUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0x7F) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__ADC_ADC_CALFACT_CALFACT </item>
//  </rtree>
//  


// ---------------------------  Register Item Address: ADC_ADC_CCR  -------------------------------
// SVD Line: 18678

unsigned int ADC_ADC_CCR __AT (0x40012708);



// ------------------------------  Field Item: ADC_ADC_CCR_PRESC  ---------------------------------
// SVD Line: 18687

//  <item> SFDITEM_FIELD__ADC_ADC_CCR_PRESC
//    <name> PRESC </name>
//    <rw> 
//    <i> [Bits 21..18] RW (@ 0x40012708) \nADC prescaler Set and cleared by software to select the frequency of the clock to the ADC. Other: Reserved Note: Software is allowed to write these bits only when the ADC is disabled (ADCAL=0, ADSTART=0, ADSTP=0, ADDIS=0 and ADEN=0).\n0 : B_0x0 = input ADC clock not divided\n1 : B_0x1 = input ADC clock divided by 2\n2 : B_0x2 = input ADC clock divided by 4\n3 : B_0x3 = input ADC clock divided by 6\n4 : B_0x4 = input ADC clock divided by 8\n5 : B_0x5 = input ADC clock divided by 10\n6 : B_0x6 = input ADC clock divided by 12\n7 : B_0x7 = input ADC clock divided by 16\n8 : B_0x8 = input ADC clock divided by 32\n9 : B_0x9 = input ADC clock divided by 64\n10 : B_0xA = input ADC clock divided by 128\n11 : B_0xB = input ADC clock divided by 256\n12 : Reserved - do not use\n13 : Reserved - do not use\n14 : Reserved - do not use\n15 : Reserved - do not use </i>
//    <combo> 
//      <loc> ( (unsigned int) ADC_ADC_CCR ) </loc>
//      <o.21..18> PRESC
//        <0=> 0: B_0x0 = input ADC clock not divided
//        <1=> 1: B_0x1 = input ADC clock divided by 2
//        <2=> 2: B_0x2 = input ADC clock divided by 4
//        <3=> 3: B_0x3 = input ADC clock divided by 6
//        <4=> 4: B_0x4 = input ADC clock divided by 8
//        <5=> 5: B_0x5 = input ADC clock divided by 10
//        <6=> 6: B_0x6 = input ADC clock divided by 12
//        <7=> 7: B_0x7 = input ADC clock divided by 16
//        <8=> 8: B_0x8 = input ADC clock divided by 32
//        <9=> 9: B_0x9 = input ADC clock divided by 64
//        <10=> 10: B_0xA = input ADC clock divided by 128
//        <11=> 11: B_0xB = input ADC clock divided by 256
//        <12=> 12: 
//        <13=> 13: 
//        <14=> 14: 
//        <15=> 15: 
//    </combo>
//  </item>
//  


// -----------------------------  Field Item: ADC_ADC_CCR_VREFEN  ---------------------------------
// SVD Line: 18759

//  <item> SFDITEM_FIELD__ADC_ADC_CCR_VREFEN
//    <name> VREFEN </name>
//    <rw> 
//    <i> [Bit 22] RW (@ 0x40012708) \nVREFINT enable  This bit is set and cleared by software to enable/disable the VREFINT.  Note: Software is allowed to write this bit only when ADSTART=0 (which ensures that no conversion is ongoing).\n0 : B_0x0 = VREFINT disabled\n1 : B_0x1 = VREFINT enabled </i>
//    <combo> 
//      <loc> ( (unsigned int) ADC_ADC_CCR ) </loc>
//      <o.22..22> VREFEN
//        <0=> 0: B_0x0 = VREFINT disabled
//        <1=> 1: B_0x1 = VREFINT enabled
//    </combo>
//  </item>
//  


// ------------------------------  Field Item: ADC_ADC_CCR_TSEN  ----------------------------------
// SVD Line: 18780

//  <item> SFDITEM_FIELD__ADC_ADC_CCR_TSEN
//    <name> TSEN </name>
//    <rw> 
//    <i> [Bit 23] RW (@ 0x40012708) \nTemperature sensor enable  This bit is set and cleared by software to enable/disable the temperature sensor.  Note: Software is allowed to write this bit only when ADSTART=0 (which ensures that no conversion is ongoing).\n0 : B_0x0 = Temperature sensor disabled, DAC_OUT1 connected to ADC channel 12\n1 : B_0x1 = Temperature sensor enabled </i>
//    <combo> 
//      <loc> ( (unsigned int) ADC_ADC_CCR ) </loc>
//      <o.23..23> TSEN
//        <0=> 0: B_0x0 = Temperature sensor disabled, DAC_OUT1 connected to ADC channel 12
//        <1=> 1: B_0x1 = Temperature sensor enabled
//    </combo>
//  </item>
//  


// -----------------------------  Field Item: ADC_ADC_CCR_VBATEN  ---------------------------------
// SVD Line: 18801

//  <item> SFDITEM_FIELD__ADC_ADC_CCR_VBATEN
//    <name> VBATEN </name>
//    <rw> 
//    <i> [Bit 24] RW (@ 0x40012708) \nVBAT enable  This bit is set and cleared by software to enable/disable the VBAT channel.  Note: The software is allowed to write this bit only when ADSTART=0 (which ensures that no conversion is ongoing)\n0 : B_0x0 = VBAT channel disabled, DAC_OUT2 connected to ADC channel 14\n1 : B_0x1 = VBAT channel enabled </i>
//    <combo> 
//      <loc> ( (unsigned int) ADC_ADC_CCR ) </loc>
//      <o.24..24> VBATEN
//        <0=> 0: B_0x0 = VBAT channel disabled, DAC_OUT2 connected to ADC channel 14
//        <1=> 1: B_0x1 = VBAT channel enabled
//    </combo>
//  </item>
//  


// -------------------------------  Register RTree: ADC_ADC_CCR  ----------------------------------
// SVD Line: 18678

//  <rtree> SFDITEM_REG__ADC_ADC_CCR
//    <name> ADC_CCR </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x40012708) ADC common configuration register </i>
//    <loc> ( (unsigned int)((ADC_ADC_CCR >> 0) & 0xFFFFFFFF), ((ADC_ADC_CCR = (ADC_ADC_CCR & ~(0x1FC0000UL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0x1FC0000) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__ADC_ADC_CCR_PRESC </item>
//    <item> SFDITEM_FIELD__ADC_ADC_CCR_VREFEN </item>
//    <item> SFDITEM_FIELD__ADC_ADC_CCR_TSEN </item>
//    <item> SFDITEM_FIELD__ADC_ADC_CCR_VBATEN </item>
//  </rtree>
//  


// ----------------------------------  Peripheral View: ADC  --------------------------------------
// SVD Line: 15351

//  <view> ADC
//    <name> ADC </name>
//    <item> SFDITEM_REG__ADC_ADC_ISR </item>
//    <item> SFDITEM_REG__ADC_ADC_IER </item>
//    <item> SFDITEM_REG__ADC_ADC_CR </item>
//    <item> SFDITEM_REG__ADC_ADC_CFGR1 </item>
//    <item> SFDITEM_REG__ADC_ADC_CFGR2 </item>
//    <item> SFDITEM_REG__ADC_ADC_SMPR </item>
//    <item> SFDITEM_REG__ADC_ADC_AWD1TR </item>
//    <item> SFDITEM_REG__ADC_ADC_AWD2TR </item>
//    <item> SFDITEM_REG__ADC_ADC_CHSELRMOD0 </item>
//    <item> SFDITEM_REG__ADC_ADC_CHSELRMOD1 </item>
//    <item> SFDITEM_REG__ADC_ADC_AWD3TR </item>
//    <item> SFDITEM_REG__ADC_ADC_DR </item>
//    <item> SFDITEM_REG__ADC_ADC_AWD2CR </item>
//    <item> SFDITEM_REG__ADC_ADC_AWD3CR </item>
//    <item> SFDITEM_REG__ADC_ADC_CALFACT </item>
//    <item> SFDITEM_REG__ADC_ADC_CCR </item>
//  </view>
//  


// --------------------------  Register Item Address: COMP_COMP1_CSR  -----------------------------
// SVD Line: 18837

unsigned int COMP_COMP1_CSR __AT (0x40010200);



// ------------------------------  Field Item: COMP_COMP1_CSR_EN  ---------------------------------
// SVD Line: 18847

//  <item> SFDITEM_FIELD__COMP_COMP1_CSR_EN
//    <name> EN </name>
//    <rw> 
//    <i> [Bit 0] RW (@ 0x40010200) COMP channel 1 enable bit </i>
//    <check> 
//      <loc> ( (unsigned int) COMP_COMP1_CSR ) </loc>
//      <o.0..0> EN
//    </check>
//  </item>
//  


// ----------------------------  Field Item: COMP_COMP1_CSR_INMSEL  -------------------------------
// SVD Line: 18853

//  <item> SFDITEM_FIELD__COMP_COMP1_CSR_INMSEL
//    <name> INMSEL </name>
//    <rw> 
//    <i> [Bits 7..4] RW (@ 0x40010200) Comparator 2 signal selector for  inverting input INM </i>
//    <edit> 
//      <loc> ( (unsigned char)((COMP_COMP1_CSR >> 4) & 0xF), ((COMP_COMP1_CSR = (COMP_COMP1_CSR & ~(0xFUL << 4 )) | ((unsigned long)(Gui_u8:GuiVal & 0xF) << 4 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ----------------------------  Field Item: COMP_COMP1_CSR_INPSEL  -------------------------------
// SVD Line: 18860

//  <item> SFDITEM_FIELD__COMP_COMP1_CSR_INPSEL
//    <name> INPSEL </name>
//    <rw> 
//    <i> [Bits 9..8] RW (@ 0x40010200) Comparator 2 signal selector for  non-inverting input </i>
//    <edit> 
//      <loc> ( (unsigned char)((COMP_COMP1_CSR >> 8) & 0x3), ((COMP_COMP1_CSR = (COMP_COMP1_CSR & ~(0x3UL << 8 )) | ((unsigned long)(Gui_u8:GuiVal & 0x3) << 8 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ---------------------------  Field Item: COMP_COMP1_CSR_WINMODE  -------------------------------
// SVD Line: 18867

//  <item> SFDITEM_FIELD__COMP_COMP1_CSR_WINMODE
//    <name> WINMODE </name>
//    <rw> 
//    <i> [Bit 11] RW (@ 0x40010200) Comparator 2 non-inverting input  selector for window mode </i>
//    <check> 
//      <loc> ( (unsigned int) COMP_COMP1_CSR ) </loc>
//      <o.11..11> WINMODE
//    </check>
//  </item>
//  


// ----------------------------  Field Item: COMP_COMP1_CSR_WINOUT  -------------------------------
// SVD Line: 18874

//  <item> SFDITEM_FIELD__COMP_COMP1_CSR_WINOUT
//    <name> WINOUT </name>
//    <rw> 
//    <i> [Bit 14] RW (@ 0x40010200) Comparator 2 output  selector </i>
//    <check> 
//      <loc> ( (unsigned int) COMP_COMP1_CSR ) </loc>
//      <o.14..14> WINOUT
//    </check>
//  </item>
//  


// ---------------------------  Field Item: COMP_COMP1_CSR_POLARITY  ------------------------------
// SVD Line: 18881

//  <item> SFDITEM_FIELD__COMP_COMP1_CSR_POLARITY
//    <name> POLARITY </name>
//    <rw> 
//    <i> [Bit 15] RW (@ 0x40010200) Comparator 2 polarity  selector </i>
//    <check> 
//      <loc> ( (unsigned int) COMP_COMP1_CSR ) </loc>
//      <o.15..15> POLARITY
//    </check>
//  </item>
//  


// -----------------------------  Field Item: COMP_COMP1_CSR_HYST  --------------------------------
// SVD Line: 18888

//  <item> SFDITEM_FIELD__COMP_COMP1_CSR_HYST
//    <name> HYST </name>
//    <rw> 
//    <i> [Bits 17..16] RW (@ 0x40010200) Comparator 2 hysteresis  selector </i>
//    <edit> 
//      <loc> ( (unsigned char)((COMP_COMP1_CSR >> 16) & 0x3), ((COMP_COMP1_CSR = (COMP_COMP1_CSR & ~(0x3UL << 16 )) | ((unsigned long)(Gui_u8:GuiVal & 0x3) << 16 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ---------------------------  Field Item: COMP_COMP1_CSR_PWRMODE  -------------------------------
// SVD Line: 18895

//  <item> SFDITEM_FIELD__COMP_COMP1_CSR_PWRMODE
//    <name> PWRMODE </name>
//    <rw> 
//    <i> [Bits 19..18] RW (@ 0x40010200) Comparator 2 power mode  selector </i>
//    <edit> 
//      <loc> ( (unsigned char)((COMP_COMP1_CSR >> 18) & 0x3), ((COMP_COMP1_CSR = (COMP_COMP1_CSR & ~(0x3UL << 18 )) | ((unsigned long)(Gui_u8:GuiVal & 0x3) << 18 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ---------------------------  Field Item: COMP_COMP1_CSR_BLANKSEL  ------------------------------
// SVD Line: 18902

//  <item> SFDITEM_FIELD__COMP_COMP1_CSR_BLANKSEL
//    <name> BLANKSEL </name>
//    <rw> 
//    <i> [Bits 24..20] RW (@ 0x40010200) Comparator 2 blanking source  selector </i>
//    <edit> 
//      <loc> ( (unsigned char)((COMP_COMP1_CSR >> 20) & 0x1F), ((COMP_COMP1_CSR = (COMP_COMP1_CSR & ~(0x1FUL << 20 )) | ((unsigned long)(Gui_u8:GuiVal & 0x1F) << 20 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ----------------------------  Field Item: COMP_COMP1_CSR_VALUE  --------------------------------
// SVD Line: 18909

//  <item> SFDITEM_FIELD__COMP_COMP1_CSR_VALUE
//    <name> VALUE </name>
//    <rw> 
//    <i> [Bit 30] RW (@ 0x40010200) Comparator 2 output status </i>
//    <check> 
//      <loc> ( (unsigned int) COMP_COMP1_CSR ) </loc>
//      <o.30..30> VALUE
//    </check>
//  </item>
//  


// -----------------------------  Field Item: COMP_COMP1_CSR_LOCK  --------------------------------
// SVD Line: 18915

//  <item> SFDITEM_FIELD__COMP_COMP1_CSR_LOCK
//    <name> LOCK </name>
//    <rw> 
//    <i> [Bit 31] RW (@ 0x40010200) COMP2_CSR register lock </i>
//    <check> 
//      <loc> ( (unsigned int) COMP_COMP1_CSR ) </loc>
//      <o.31..31> LOCK
//    </check>
//  </item>
//  


// -----------------------------  Register RTree: COMP_COMP1_CSR  ---------------------------------
// SVD Line: 18837

//  <rtree> SFDITEM_REG__COMP_COMP1_CSR
//    <name> COMP1_CSR </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x40010200) Comparator 1 control and status  register </i>
//    <loc> ( (unsigned int)((COMP_COMP1_CSR >> 0) & 0xFFFFFFFF), ((COMP_COMP1_CSR = (COMP_COMP1_CSR & ~(0xC1FFCBF1UL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xC1FFCBF1) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__COMP_COMP1_CSR_EN </item>
//    <item> SFDITEM_FIELD__COMP_COMP1_CSR_INMSEL </item>
//    <item> SFDITEM_FIELD__COMP_COMP1_CSR_INPSEL </item>
//    <item> SFDITEM_FIELD__COMP_COMP1_CSR_WINMODE </item>
//    <item> SFDITEM_FIELD__COMP_COMP1_CSR_WINOUT </item>
//    <item> SFDITEM_FIELD__COMP_COMP1_CSR_POLARITY </item>
//    <item> SFDITEM_FIELD__COMP_COMP1_CSR_HYST </item>
//    <item> SFDITEM_FIELD__COMP_COMP1_CSR_PWRMODE </item>
//    <item> SFDITEM_FIELD__COMP_COMP1_CSR_BLANKSEL </item>
//    <item> SFDITEM_FIELD__COMP_COMP1_CSR_VALUE </item>
//    <item> SFDITEM_FIELD__COMP_COMP1_CSR_LOCK </item>
//  </rtree>
//  


// --------------------------  Register Item Address: COMP_COMP2_CSR  -----------------------------
// SVD Line: 18923

unsigned int COMP_COMP2_CSR __AT (0x40010204);



// ------------------------------  Field Item: COMP_COMP2_CSR_EN  ---------------------------------
// SVD Line: 18933

//  <item> SFDITEM_FIELD__COMP_COMP2_CSR_EN
//    <name> EN </name>
//    <rw> 
//    <i> [Bit 0] RW (@ 0x40010204) COMP channel 1 enable bit </i>
//    <check> 
//      <loc> ( (unsigned int) COMP_COMP2_CSR ) </loc>
//      <o.0..0> EN
//    </check>
//  </item>
//  


// ----------------------------  Field Item: COMP_COMP2_CSR_INMSEL  -------------------------------
// SVD Line: 18939

//  <item> SFDITEM_FIELD__COMP_COMP2_CSR_INMSEL
//    <name> INMSEL </name>
//    <rw> 
//    <i> [Bits 7..4] RW (@ 0x40010204) Comparator 2 signal selector for  inverting input INM </i>
//    <edit> 
//      <loc> ( (unsigned char)((COMP_COMP2_CSR >> 4) & 0xF), ((COMP_COMP2_CSR = (COMP_COMP2_CSR & ~(0xFUL << 4 )) | ((unsigned long)(Gui_u8:GuiVal & 0xF) << 4 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ----------------------------  Field Item: COMP_COMP2_CSR_INPSEL  -------------------------------
// SVD Line: 18946

//  <item> SFDITEM_FIELD__COMP_COMP2_CSR_INPSEL
//    <name> INPSEL </name>
//    <rw> 
//    <i> [Bits 9..8] RW (@ 0x40010204) Comparator 2 signal selector for  non-inverting input </i>
//    <edit> 
//      <loc> ( (unsigned char)((COMP_COMP2_CSR >> 8) & 0x3), ((COMP_COMP2_CSR = (COMP_COMP2_CSR & ~(0x3UL << 8 )) | ((unsigned long)(Gui_u8:GuiVal & 0x3) << 8 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ---------------------------  Field Item: COMP_COMP2_CSR_WINMODE  -------------------------------
// SVD Line: 18953

//  <item> SFDITEM_FIELD__COMP_COMP2_CSR_WINMODE
//    <name> WINMODE </name>
//    <rw> 
//    <i> [Bit 11] RW (@ 0x40010204) Comparator 2 non-inverting input  selector for window mode </i>
//    <check> 
//      <loc> ( (unsigned int) COMP_COMP2_CSR ) </loc>
//      <o.11..11> WINMODE
//    </check>
//  </item>
//  


// ----------------------------  Field Item: COMP_COMP2_CSR_WINOUT  -------------------------------
// SVD Line: 18960

//  <item> SFDITEM_FIELD__COMP_COMP2_CSR_WINOUT
//    <name> WINOUT </name>
//    <rw> 
//    <i> [Bit 14] RW (@ 0x40010204) Comparator 2 output  selector </i>
//    <check> 
//      <loc> ( (unsigned int) COMP_COMP2_CSR ) </loc>
//      <o.14..14> WINOUT
//    </check>
//  </item>
//  


// ---------------------------  Field Item: COMP_COMP2_CSR_POLARITY  ------------------------------
// SVD Line: 18967

//  <item> SFDITEM_FIELD__COMP_COMP2_CSR_POLARITY
//    <name> POLARITY </name>
//    <rw> 
//    <i> [Bit 15] RW (@ 0x40010204) Comparator 2 polarity  selector </i>
//    <check> 
//      <loc> ( (unsigned int) COMP_COMP2_CSR ) </loc>
//      <o.15..15> POLARITY
//    </check>
//  </item>
//  


// -----------------------------  Field Item: COMP_COMP2_CSR_HYST  --------------------------------
// SVD Line: 18974

//  <item> SFDITEM_FIELD__COMP_COMP2_CSR_HYST
//    <name> HYST </name>
//    <rw> 
//    <i> [Bits 17..16] RW (@ 0x40010204) Comparator 2 hysteresis  selector </i>
//    <edit> 
//      <loc> ( (unsigned char)((COMP_COMP2_CSR >> 16) & 0x3), ((COMP_COMP2_CSR = (COMP_COMP2_CSR & ~(0x3UL << 16 )) | ((unsigned long)(Gui_u8:GuiVal & 0x3) << 16 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ---------------------------  Field Item: COMP_COMP2_CSR_PWRMODE  -------------------------------
// SVD Line: 18981

//  <item> SFDITEM_FIELD__COMP_COMP2_CSR_PWRMODE
//    <name> PWRMODE </name>
//    <rw> 
//    <i> [Bits 19..18] RW (@ 0x40010204) Comparator 2 power mode  selector </i>
//    <edit> 
//      <loc> ( (unsigned char)((COMP_COMP2_CSR >> 18) & 0x3), ((COMP_COMP2_CSR = (COMP_COMP2_CSR & ~(0x3UL << 18 )) | ((unsigned long)(Gui_u8:GuiVal & 0x3) << 18 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ---------------------------  Field Item: COMP_COMP2_CSR_BLANKSEL  ------------------------------
// SVD Line: 18988

//  <item> SFDITEM_FIELD__COMP_COMP2_CSR_BLANKSEL
//    <name> BLANKSEL </name>
//    <rw> 
//    <i> [Bits 24..20] RW (@ 0x40010204) Comparator 2 blanking source  selector </i>
//    <edit> 
//      <loc> ( (unsigned char)((COMP_COMP2_CSR >> 20) & 0x1F), ((COMP_COMP2_CSR = (COMP_COMP2_CSR & ~(0x1FUL << 20 )) | ((unsigned long)(Gui_u8:GuiVal & 0x1F) << 20 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ----------------------------  Field Item: COMP_COMP2_CSR_VALUE  --------------------------------
// SVD Line: 18995

//  <item> SFDITEM_FIELD__COMP_COMP2_CSR_VALUE
//    <name> VALUE </name>
//    <rw> 
//    <i> [Bit 30] RW (@ 0x40010204) Comparator 2 output status </i>
//    <check> 
//      <loc> ( (unsigned int) COMP_COMP2_CSR ) </loc>
//      <o.30..30> VALUE
//    </check>
//  </item>
//  


// -----------------------------  Field Item: COMP_COMP2_CSR_LOCK  --------------------------------
// SVD Line: 19001

//  <item> SFDITEM_FIELD__COMP_COMP2_CSR_LOCK
//    <name> LOCK </name>
//    <rw> 
//    <i> [Bit 31] RW (@ 0x40010204) COMP2_CSR register lock </i>
//    <check> 
//      <loc> ( (unsigned int) COMP_COMP2_CSR ) </loc>
//      <o.31..31> LOCK
//    </check>
//  </item>
//  


// -----------------------------  Register RTree: COMP_COMP2_CSR  ---------------------------------
// SVD Line: 18923

//  <rtree> SFDITEM_REG__COMP_COMP2_CSR
//    <name> COMP2_CSR </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x40010204) Comparator 2 control and status  register </i>
//    <loc> ( (unsigned int)((COMP_COMP2_CSR >> 0) & 0xFFFFFFFF), ((COMP_COMP2_CSR = (COMP_COMP2_CSR & ~(0xC1FFCBF1UL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xC1FFCBF1) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__COMP_COMP2_CSR_EN </item>
//    <item> SFDITEM_FIELD__COMP_COMP2_CSR_INMSEL </item>
//    <item> SFDITEM_FIELD__COMP_COMP2_CSR_INPSEL </item>
//    <item> SFDITEM_FIELD__COMP_COMP2_CSR_WINMODE </item>
//    <item> SFDITEM_FIELD__COMP_COMP2_CSR_WINOUT </item>
//    <item> SFDITEM_FIELD__COMP_COMP2_CSR_POLARITY </item>
//    <item> SFDITEM_FIELD__COMP_COMP2_CSR_HYST </item>
//    <item> SFDITEM_FIELD__COMP_COMP2_CSR_PWRMODE </item>
//    <item> SFDITEM_FIELD__COMP_COMP2_CSR_BLANKSEL </item>
//    <item> SFDITEM_FIELD__COMP_COMP2_CSR_VALUE </item>
//    <item> SFDITEM_FIELD__COMP_COMP2_CSR_LOCK </item>
//  </rtree>
//  


// ----------------------------------  Peripheral View: COMP  -------------------------------------
// SVD Line: 18826

//  <view> COMP
//    <name> COMP </name>
//    <item> SFDITEM_REG__COMP_COMP1_CSR </item>
//    <item> SFDITEM_REG__COMP_COMP2_CSR </item>
//  </view>
//  


// --------------------  Register Item Address: SYSCFG_VREFBUF_VREFBUF_CSR  -----------------------
// SVD Line: 19022

unsigned int SYSCFG_VREFBUF_VREFBUF_CSR __AT (0x40010030);



// -----------------------  Field Item: SYSCFG_VREFBUF_VREFBUF_CSR_ENVR  --------------------------
// SVD Line: 19031

//  <item> SFDITEM_FIELD__SYSCFG_VREFBUF_VREFBUF_CSR_ENVR
//    <name> ENVR </name>
//    <rw> 
//    <i> [Bit 0] RW (@ 0x40010030) Voltage reference buffer mode enable  This bit is used to enable the voltage reference  buffer mode. </i>
//    <check> 
//      <loc> ( (unsigned int) SYSCFG_VREFBUF_VREFBUF_CSR ) </loc>
//      <o.0..0> ENVR
//    </check>
//  </item>
//  


// -----------------------  Field Item: SYSCFG_VREFBUF_VREFBUF_CSR_HIZ  ---------------------------
// SVD Line: 19040

//  <item> SFDITEM_FIELD__SYSCFG_VREFBUF_VREFBUF_CSR_HIZ
//    <name> HIZ </name>
//    <rw> 
//    <i> [Bit 1] RW (@ 0x40010030) High impedance mode This bit controls  the analog switch to connect or not the VREF+ pin.  Refer to Table196: VREF buffer modes for the mode  descriptions depending on ENVR bit  configuration. </i>
//    <check> 
//      <loc> ( (unsigned int) SYSCFG_VREFBUF_VREFBUF_CSR ) </loc>
//      <o.1..1> HIZ
//    </check>
//  </item>
//  


// -----------------------  Field Item: SYSCFG_VREFBUF_VREFBUF_CSR_VRR  ---------------------------
// SVD Line: 19051

//  <item> SFDITEM_FIELD__SYSCFG_VREFBUF_VREFBUF_CSR_VRR
//    <name> VRR </name>
//    <r> 
//    <i> [Bit 3] RO (@ 0x40010030) Voltage reference buffer  ready </i>
//    <check> 
//      <loc> ( (unsigned int) SYSCFG_VREFBUF_VREFBUF_CSR ) </loc>
//      <o.3..3> VRR
//    </check>
//  </item>
//  


// -----------------------  Field Item: SYSCFG_VREFBUF_VREFBUF_CSR_VRS  ---------------------------
// SVD Line: 19059

//  <item> SFDITEM_FIELD__SYSCFG_VREFBUF_VREFBUF_CSR_VRS
//    <name> VRS </name>
//    <rw> 
//    <i> [Bits 6..4] RW (@ 0x40010030) Voltage reference scale These bits  select the value generated by the voltage reference  buffer. Other: Reserved </i>
//    <edit> 
//      <loc> ( (unsigned char)((SYSCFG_VREFBUF_VREFBUF_CSR >> 4) & 0x7), ((SYSCFG_VREFBUF_VREFBUF_CSR = (SYSCFG_VREFBUF_VREFBUF_CSR & ~(0x7UL << 4 )) | ((unsigned long)(Gui_u8:GuiVal & 0x7) << 4 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -----------------------  Register RTree: SYSCFG_VREFBUF_VREFBUF_CSR  ---------------------------
// SVD Line: 19022

//  <rtree> SFDITEM_REG__SYSCFG_VREFBUF_VREFBUF_CSR
//    <name> VREFBUF_CSR </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x40010030) VREFBUF control and status  register </i>
//    <loc> ( (unsigned int)((SYSCFG_VREFBUF_VREFBUF_CSR >> 0) & 0xFFFFFFFF), ((SYSCFG_VREFBUF_VREFBUF_CSR = (SYSCFG_VREFBUF_VREFBUF_CSR & ~(0x73UL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0x73) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__SYSCFG_VREFBUF_VREFBUF_CSR_ENVR </item>
//    <item> SFDITEM_FIELD__SYSCFG_VREFBUF_VREFBUF_CSR_HIZ </item>
//    <item> SFDITEM_FIELD__SYSCFG_VREFBUF_VREFBUF_CSR_VRR </item>
//    <item> SFDITEM_FIELD__SYSCFG_VREFBUF_VREFBUF_CSR_VRS </item>
//  </rtree>
//  


// --------------------  Register Item Address: SYSCFG_VREFBUF_VREFBUF_CCR  -----------------------
// SVD Line: 19070

unsigned int SYSCFG_VREFBUF_VREFBUF_CCR __AT (0x40010034);



// -----------------------  Field Item: SYSCFG_VREFBUF_VREFBUF_CCR_TRIM  --------------------------
// SVD Line: 19080

//  <item> SFDITEM_FIELD__SYSCFG_VREFBUF_VREFBUF_CCR_TRIM
//    <name> TRIM </name>
//    <rw> 
//    <i> [Bits 5..0] RW (@ 0x40010034) Trimming code These bits are  automatically initialized after reset with the  trimming value stored in the Flash memory during the  production test. Writing into these bits allows to  tune the internal reference buffer  voltage. </i>
//    <edit> 
//      <loc> ( (unsigned char)((SYSCFG_VREFBUF_VREFBUF_CCR >> 0) & 0x3F), ((SYSCFG_VREFBUF_VREFBUF_CCR = (SYSCFG_VREFBUF_VREFBUF_CCR & ~(0x3FUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0x3F) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -----------------------  Register RTree: SYSCFG_VREFBUF_VREFBUF_CCR  ---------------------------
// SVD Line: 19070

//  <rtree> SFDITEM_REG__SYSCFG_VREFBUF_VREFBUF_CCR
//    <name> VREFBUF_CCR </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x40010034) VREFBUF calibration control  register </i>
//    <loc> ( (unsigned int)((SYSCFG_VREFBUF_VREFBUF_CCR >> 0) & 0xFFFFFFFF), ((SYSCFG_VREFBUF_VREFBUF_CCR = (SYSCFG_VREFBUF_VREFBUF_CCR & ~(0x3FUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0x3F) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__SYSCFG_VREFBUF_VREFBUF_CCR_TRIM </item>
//  </rtree>
//  


// -----------------------  Register Item Address: SYSCFG_VREFBUF_CFGR1  --------------------------
// SVD Line: 19093

unsigned int SYSCFG_VREFBUF_CFGR1 __AT (0x40010000);



// ----------------------  Field Item: SYSCFG_VREFBUF_CFGR1_I2C_PAx_FMP  --------------------------
// SVD Line: 19103

//  <item> SFDITEM_FIELD__SYSCFG_VREFBUF_CFGR1_I2C_PAx_FMP
//    <name> I2C_PAx_FMP </name>
//    <rw> 
//    <i> [Bits 23..22] RW (@ 0x40010000) Fast Mode Plus (FM+) driving capability  activation bits </i>
//    <edit> 
//      <loc> ( (unsigned char)((SYSCFG_VREFBUF_CFGR1 >> 22) & 0x3), ((SYSCFG_VREFBUF_CFGR1 = (SYSCFG_VREFBUF_CFGR1 & ~(0x3UL << 22 )) | ((unsigned long)(Gui_u8:GuiVal & 0x3) << 22 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ------------------------  Field Item: SYSCFG_VREFBUF_CFGR1_I2C2_FMP  ---------------------------
// SVD Line: 19110

//  <item> SFDITEM_FIELD__SYSCFG_VREFBUF_CFGR1_I2C2_FMP
//    <name> I2C2_FMP </name>
//    <rw> 
//    <i> [Bit 21] RW (@ 0x40010000) FM+ driving capability activation for  I2C2 </i>
//    <check> 
//      <loc> ( (unsigned int) SYSCFG_VREFBUF_CFGR1 ) </loc>
//      <o.21..21> I2C2_FMP
//    </check>
//  </item>
//  


// ------------------------  Field Item: SYSCFG_VREFBUF_CFGR1_I2C1_FMP  ---------------------------
// SVD Line: 19117

//  <item> SFDITEM_FIELD__SYSCFG_VREFBUF_CFGR1_I2C1_FMP
//    <name> I2C1_FMP </name>
//    <rw> 
//    <i> [Bit 20] RW (@ 0x40010000) FM+ driving capability activation for  I2C1 </i>
//    <check> 
//      <loc> ( (unsigned int) SYSCFG_VREFBUF_CFGR1 ) </loc>
//      <o.20..20> I2C1_FMP
//    </check>
//  </item>
//  


// ----------------------  Field Item: SYSCFG_VREFBUF_CFGR1_I2C_PBx_FMP  --------------------------
// SVD Line: 19124

//  <item> SFDITEM_FIELD__SYSCFG_VREFBUF_CFGR1_I2C_PBx_FMP
//    <name> I2C_PBx_FMP </name>
//    <rw> 
//    <i> [Bits 19..16] RW (@ 0x40010000) Fast Mode Plus (FM+) driving capability  activation bits </i>
//    <edit> 
//      <loc> ( (unsigned char)((SYSCFG_VREFBUF_CFGR1 >> 16) & 0xF), ((SYSCFG_VREFBUF_CFGR1 = (SYSCFG_VREFBUF_CFGR1 & ~(0xFUL << 16 )) | ((unsigned long)(Gui_u8:GuiVal & 0xF) << 16 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ----------------------  Field Item: SYSCFG_VREFBUF_CFGR1_UCPD2_STROBE  -------------------------
// SVD Line: 19131

//  <item> SFDITEM_FIELD__SYSCFG_VREFBUF_CFGR1_UCPD2_STROBE
//    <name> UCPD2_STROBE </name>
//    <rw> 
//    <i> [Bit 10] RW (@ 0x40010000) Strobe signal bit for  UCPD2 </i>
//    <check> 
//      <loc> ( (unsigned int) SYSCFG_VREFBUF_CFGR1 ) </loc>
//      <o.10..10> UCPD2_STROBE
//    </check>
//  </item>
//  


// ----------------------  Field Item: SYSCFG_VREFBUF_CFGR1_UCPD1_STROBE  -------------------------
// SVD Line: 19138

//  <item> SFDITEM_FIELD__SYSCFG_VREFBUF_CFGR1_UCPD1_STROBE
//    <name> UCPD1_STROBE </name>
//    <rw> 
//    <i> [Bit 9] RW (@ 0x40010000) Strobe signal bit for  UCPD1 </i>
//    <check> 
//      <loc> ( (unsigned int) SYSCFG_VREFBUF_CFGR1 ) </loc>
//      <o.9..9> UCPD1_STROBE
//    </check>
//  </item>
//  


// ------------------------  Field Item: SYSCFG_VREFBUF_CFGR1_BOOSTEN  ----------------------------
// SVD Line: 19145

//  <item> SFDITEM_FIELD__SYSCFG_VREFBUF_CFGR1_BOOSTEN
//    <name> BOOSTEN </name>
//    <rw> 
//    <i> [Bit 8] RW (@ 0x40010000) I/O analog switch voltage booster  enable </i>
//    <check> 
//      <loc> ( (unsigned int) SYSCFG_VREFBUF_CFGR1 ) </loc>
//      <o.8..8> BOOSTEN
//    </check>
//  </item>
//  


// -------------------------  Field Item: SYSCFG_VREFBUF_CFGR1_IR_MOD  ----------------------------
// SVD Line: 19152

//  <item> SFDITEM_FIELD__SYSCFG_VREFBUF_CFGR1_IR_MOD
//    <name> IR_MOD </name>
//    <rw> 
//    <i> [Bits 7..6] RW (@ 0x40010000) IR Modulation Envelope signal  selection. </i>
//    <edit> 
//      <loc> ( (unsigned char)((SYSCFG_VREFBUF_CFGR1 >> 6) & 0x3), ((SYSCFG_VREFBUF_CFGR1 = (SYSCFG_VREFBUF_CFGR1 & ~(0x3UL << 6 )) | ((unsigned long)(Gui_u8:GuiVal & 0x3) << 6 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -------------------------  Field Item: SYSCFG_VREFBUF_CFGR1_IR_POL  ----------------------------
// SVD Line: 19159

//  <item> SFDITEM_FIELD__SYSCFG_VREFBUF_CFGR1_IR_POL
//    <name> IR_POL </name>
//    <rw> 
//    <i> [Bit 5] RW (@ 0x40010000) IR output polarity  selection </i>
//    <check> 
//      <loc> ( (unsigned int) SYSCFG_VREFBUF_CFGR1 ) </loc>
//      <o.5..5> IR_POL
//    </check>
//  </item>
//  


// ---------------------  Field Item: SYSCFG_VREFBUF_CFGR1_PA11_PA12_RMP  -------------------------
// SVD Line: 19166

//  <item> SFDITEM_FIELD__SYSCFG_VREFBUF_CFGR1_PA11_PA12_RMP
//    <name> PA11_PA12_RMP </name>
//    <rw> 
//    <i> [Bit 4] RW (@ 0x40010000) PA11 and PA12 remapping  bit. </i>
//    <check> 
//      <loc> ( (unsigned int) SYSCFG_VREFBUF_CFGR1 ) </loc>
//      <o.4..4> PA11_PA12_RMP
//    </check>
//  </item>
//  


// ------------------------  Field Item: SYSCFG_VREFBUF_CFGR1_MEM_MODE  ---------------------------
// SVD Line: 19173

//  <item> SFDITEM_FIELD__SYSCFG_VREFBUF_CFGR1_MEM_MODE
//    <name> MEM_MODE </name>
//    <rw> 
//    <i> [Bits 1..0] RW (@ 0x40010000) Memory mapping selection  bits </i>
//    <edit> 
//      <loc> ( (unsigned char)((SYSCFG_VREFBUF_CFGR1 >> 0) & 0x3), ((SYSCFG_VREFBUF_CFGR1 = (SYSCFG_VREFBUF_CFGR1 & ~(0x3UL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0x3) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// --------------------------  Register RTree: SYSCFG_VREFBUF_CFGR1  ------------------------------
// SVD Line: 19093

//  <rtree> SFDITEM_REG__SYSCFG_VREFBUF_CFGR1
//    <name> CFGR1 </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x40010000) SYSCFG configuration register  1 </i>
//    <loc> ( (unsigned int)((SYSCFG_VREFBUF_CFGR1 >> 0) & 0xFFFFFFFF), ((SYSCFG_VREFBUF_CFGR1 = (SYSCFG_VREFBUF_CFGR1 & ~(0xFF07F3UL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFF07F3) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__SYSCFG_VREFBUF_CFGR1_I2C_PAx_FMP </item>
//    <item> SFDITEM_FIELD__SYSCFG_VREFBUF_CFGR1_I2C2_FMP </item>
//    <item> SFDITEM_FIELD__SYSCFG_VREFBUF_CFGR1_I2C1_FMP </item>
//    <item> SFDITEM_FIELD__SYSCFG_VREFBUF_CFGR1_I2C_PBx_FMP </item>
//    <item> SFDITEM_FIELD__SYSCFG_VREFBUF_CFGR1_UCPD2_STROBE </item>
//    <item> SFDITEM_FIELD__SYSCFG_VREFBUF_CFGR1_UCPD1_STROBE </item>
//    <item> SFDITEM_FIELD__SYSCFG_VREFBUF_CFGR1_BOOSTEN </item>
//    <item> SFDITEM_FIELD__SYSCFG_VREFBUF_CFGR1_IR_MOD </item>
//    <item> SFDITEM_FIELD__SYSCFG_VREFBUF_CFGR1_IR_POL </item>
//    <item> SFDITEM_FIELD__SYSCFG_VREFBUF_CFGR1_PA11_PA12_RMP </item>
//    <item> SFDITEM_FIELD__SYSCFG_VREFBUF_CFGR1_MEM_MODE </item>
//  </rtree>
//  


// -----------------------  Register Item Address: SYSCFG_VREFBUF_CFGR2  --------------------------
// SVD Line: 19182

unsigned int SYSCFG_VREFBUF_CFGR2 __AT (0x40010018);



// ----------------------  Field Item: SYSCFG_VREFBUF_CFGR2_LOCKUP_LOCK  --------------------------
// SVD Line: 19192

//  <item> SFDITEM_FIELD__SYSCFG_VREFBUF_CFGR2_LOCKUP_LOCK
//    <name> LOCKUP_LOCK </name>
//    <rw> 
//    <i> [Bit 0] RW (@ 0x40010018) Cortex-M0+ LOCKUP bit enable  bit </i>
//    <check> 
//      <loc> ( (unsigned int) SYSCFG_VREFBUF_CFGR2 ) </loc>
//      <o.0..0> LOCKUP_LOCK
//    </check>
//  </item>
//  


// --------------------  Field Item: SYSCFG_VREFBUF_CFGR2_SRAM_PARITY_LOCK  -----------------------
// SVD Line: 19199

//  <item> SFDITEM_FIELD__SYSCFG_VREFBUF_CFGR2_SRAM_PARITY_LOCK
//    <name> SRAM_PARITY_LOCK </name>
//    <rw> 
//    <i> [Bit 1] RW (@ 0x40010018) SRAM parity lock bit </i>
//    <check> 
//      <loc> ( (unsigned int) SYSCFG_VREFBUF_CFGR2 ) </loc>
//      <o.1..1> SRAM_PARITY_LOCK
//    </check>
//  </item>
//  


// ------------------------  Field Item: SYSCFG_VREFBUF_CFGR2_PVD_LOCK  ---------------------------
// SVD Line: 19205

//  <item> SFDITEM_FIELD__SYSCFG_VREFBUF_CFGR2_PVD_LOCK
//    <name> PVD_LOCK </name>
//    <rw> 
//    <i> [Bit 2] RW (@ 0x40010018) PVD lock enable bit </i>
//    <check> 
//      <loc> ( (unsigned int) SYSCFG_VREFBUF_CFGR2 ) </loc>
//      <o.2..2> PVD_LOCK
//    </check>
//  </item>
//  


// ------------------------  Field Item: SYSCFG_VREFBUF_CFGR2_ECC_LOCK  ---------------------------
// SVD Line: 19211

//  <item> SFDITEM_FIELD__SYSCFG_VREFBUF_CFGR2_ECC_LOCK
//    <name> ECC_LOCK </name>
//    <rw> 
//    <i> [Bit 3] RW (@ 0x40010018) ECC error lock bit </i>
//    <check> 
//      <loc> ( (unsigned int) SYSCFG_VREFBUF_CFGR2 ) </loc>
//      <o.3..3> ECC_LOCK
//    </check>
//  </item>
//  


// ------------------------  Field Item: SYSCFG_VREFBUF_CFGR2_SRAM_PEF  ---------------------------
// SVD Line: 19217

//  <item> SFDITEM_FIELD__SYSCFG_VREFBUF_CFGR2_SRAM_PEF
//    <name> SRAM_PEF </name>
//    <rw> 
//    <i> [Bit 8] RW (@ 0x40010018) SRAM parity error flag </i>
//    <check> 
//      <loc> ( (unsigned int) SYSCFG_VREFBUF_CFGR2 ) </loc>
//      <o.8..8> SRAM_PEF
//    </check>
//  </item>
//  


// --------------------------  Register RTree: SYSCFG_VREFBUF_CFGR2  ------------------------------
// SVD Line: 19182

//  <rtree> SFDITEM_REG__SYSCFG_VREFBUF_CFGR2
//    <name> CFGR2 </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x40010018) SYSCFG configuration register  1 </i>
//    <loc> ( (unsigned int)((SYSCFG_VREFBUF_CFGR2 >> 0) & 0xFFFFFFFF), ((SYSCFG_VREFBUF_CFGR2 = (SYSCFG_VREFBUF_CFGR2 & ~(0x10FUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0x10F) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__SYSCFG_VREFBUF_CFGR2_LOCKUP_LOCK </item>
//    <item> SFDITEM_FIELD__SYSCFG_VREFBUF_CFGR2_SRAM_PARITY_LOCK </item>
//    <item> SFDITEM_FIELD__SYSCFG_VREFBUF_CFGR2_PVD_LOCK </item>
//    <item> SFDITEM_FIELD__SYSCFG_VREFBUF_CFGR2_ECC_LOCK </item>
//    <item> SFDITEM_FIELD__SYSCFG_VREFBUF_CFGR2_SRAM_PEF </item>
//  </rtree>
//  


// ----------------------  Register Item Address: SYSCFG_VREFBUF_ITLINE0  -------------------------
// SVD Line: 19225

unsigned int SYSCFG_VREFBUF_ITLINE0 __AT (0x40010080);



// -------------------------  Field Item: SYSCFG_VREFBUF_ITLINE0_WWDG  ----------------------------
// SVD Line: 19235

//  <item> SFDITEM_FIELD__SYSCFG_VREFBUF_ITLINE0_WWDG
//    <name> WWDG </name>
//    <r> 
//    <i> [Bit 0] RO (@ 0x40010080) Window watchdog interrupt pending  flag </i>
//    <check> 
//      <loc> ( (unsigned int) SYSCFG_VREFBUF_ITLINE0 ) </loc>
//      <o.0..0> WWDG
//    </check>
//  </item>
//  


// -------------------------  Register RTree: SYSCFG_VREFBUF_ITLINE0  -----------------------------
// SVD Line: 19225

//  <rtree> SFDITEM_REG__SYSCFG_VREFBUF_ITLINE0
//    <name> ITLINE0 </name>
//    <r> 
//    <i> [Bits 31..0] RO (@ 0x40010080) interrupt line 0 status  register </i>
//    <loc> ( (unsigned int)((SYSCFG_VREFBUF_ITLINE0 >> 0) & 0xFFFFFFFF) ) </loc>
//    <item> SFDITEM_FIELD__SYSCFG_VREFBUF_ITLINE0_WWDG </item>
//  </rtree>
//  


// ----------------------  Register Item Address: SYSCFG_VREFBUF_ITLINE1  -------------------------
// SVD Line: 19244

unsigned int SYSCFG_VREFBUF_ITLINE1 __AT (0x40010084);



// ------------------------  Field Item: SYSCFG_VREFBUF_ITLINE1_PVDOUT  ---------------------------
// SVD Line: 19254

//  <item> SFDITEM_FIELD__SYSCFG_VREFBUF_ITLINE1_PVDOUT
//    <name> PVDOUT </name>
//    <r> 
//    <i> [Bit 0] RO (@ 0x40010084) PVD supply monitoring interrupt request  pending (EXTI line 16). </i>
//    <check> 
//      <loc> ( (unsigned int) SYSCFG_VREFBUF_ITLINE1 ) </loc>
//      <o.0..0> PVDOUT
//    </check>
//  </item>
//  


// -------------------------  Register RTree: SYSCFG_VREFBUF_ITLINE1  -----------------------------
// SVD Line: 19244

//  <rtree> SFDITEM_REG__SYSCFG_VREFBUF_ITLINE1
//    <name> ITLINE1 </name>
//    <r> 
//    <i> [Bits 31..0] RO (@ 0x40010084) interrupt line 1 status  register </i>
//    <loc> ( (unsigned int)((SYSCFG_VREFBUF_ITLINE1 >> 0) & 0xFFFFFFFF) ) </loc>
//    <item> SFDITEM_FIELD__SYSCFG_VREFBUF_ITLINE1_PVDOUT </item>
//  </rtree>
//  


// ----------------------  Register Item Address: SYSCFG_VREFBUF_ITLINE2  -------------------------
// SVD Line: 19263

unsigned int SYSCFG_VREFBUF_ITLINE2 __AT (0x40010088);



// -------------------------  Field Item: SYSCFG_VREFBUF_ITLINE2_TAMP  ----------------------------
// SVD Line: 19273

//  <item> SFDITEM_FIELD__SYSCFG_VREFBUF_ITLINE2_TAMP
//    <name> TAMP </name>
//    <r> 
//    <i> [Bit 0] RO (@ 0x40010088) TAMP </i>
//    <check> 
//      <loc> ( (unsigned int) SYSCFG_VREFBUF_ITLINE2 ) </loc>
//      <o.0..0> TAMP
//    </check>
//  </item>
//  


// -------------------------  Field Item: SYSCFG_VREFBUF_ITLINE2_RTC  -----------------------------
// SVD Line: 19279

//  <item> SFDITEM_FIELD__SYSCFG_VREFBUF_ITLINE2_RTC
//    <name> RTC </name>
//    <r> 
//    <i> [Bit 1] RO (@ 0x40010088) RTC </i>
//    <check> 
//      <loc> ( (unsigned int) SYSCFG_VREFBUF_ITLINE2 ) </loc>
//      <o.1..1> RTC
//    </check>
//  </item>
//  


// -------------------------  Register RTree: SYSCFG_VREFBUF_ITLINE2  -----------------------------
// SVD Line: 19263

//  <rtree> SFDITEM_REG__SYSCFG_VREFBUF_ITLINE2
//    <name> ITLINE2 </name>
//    <r> 
//    <i> [Bits 31..0] RO (@ 0x40010088) interrupt line 2 status  register </i>
//    <loc> ( (unsigned int)((SYSCFG_VREFBUF_ITLINE2 >> 0) & 0xFFFFFFFF) ) </loc>
//    <item> SFDITEM_FIELD__SYSCFG_VREFBUF_ITLINE2_TAMP </item>
//    <item> SFDITEM_FIELD__SYSCFG_VREFBUF_ITLINE2_RTC </item>
//  </rtree>
//  


// ----------------------  Register Item Address: SYSCFG_VREFBUF_ITLINE3  -------------------------
// SVD Line: 19287

unsigned int SYSCFG_VREFBUF_ITLINE3 __AT (0x4001008C);



// ----------------------  Field Item: SYSCFG_VREFBUF_ITLINE3_FLASH_ITF  --------------------------
// SVD Line: 19297

//  <item> SFDITEM_FIELD__SYSCFG_VREFBUF_ITLINE3_FLASH_ITF
//    <name> FLASH_ITF </name>
//    <r> 
//    <i> [Bit 0] RO (@ 0x4001008C) FLASH_ITF </i>
//    <check> 
//      <loc> ( (unsigned int) SYSCFG_VREFBUF_ITLINE3 ) </loc>
//      <o.0..0> FLASH_ITF
//    </check>
//  </item>
//  


// ----------------------  Field Item: SYSCFG_VREFBUF_ITLINE3_FLASH_ECC  --------------------------
// SVD Line: 19303

//  <item> SFDITEM_FIELD__SYSCFG_VREFBUF_ITLINE3_FLASH_ECC
//    <name> FLASH_ECC </name>
//    <r> 
//    <i> [Bit 1] RO (@ 0x4001008C) FLASH_ECC </i>
//    <check> 
//      <loc> ( (unsigned int) SYSCFG_VREFBUF_ITLINE3 ) </loc>
//      <o.1..1> FLASH_ECC
//    </check>
//  </item>
//  


// -------------------------  Register RTree: SYSCFG_VREFBUF_ITLINE3  -----------------------------
// SVD Line: 19287

//  <rtree> SFDITEM_REG__SYSCFG_VREFBUF_ITLINE3
//    <name> ITLINE3 </name>
//    <r> 
//    <i> [Bits 31..0] RO (@ 0x4001008C) interrupt line 3 status  register </i>
//    <loc> ( (unsigned int)((SYSCFG_VREFBUF_ITLINE3 >> 0) & 0xFFFFFFFF) ) </loc>
//    <item> SFDITEM_FIELD__SYSCFG_VREFBUF_ITLINE3_FLASH_ITF </item>
//    <item> SFDITEM_FIELD__SYSCFG_VREFBUF_ITLINE3_FLASH_ECC </item>
//  </rtree>
//  


// ----------------------  Register Item Address: SYSCFG_VREFBUF_ITLINE4  -------------------------
// SVD Line: 19311

unsigned int SYSCFG_VREFBUF_ITLINE4 __AT (0x40010090);



// -------------------------  Field Item: SYSCFG_VREFBUF_ITLINE4_RCC  -----------------------------
// SVD Line: 19321

//  <item> SFDITEM_FIELD__SYSCFG_VREFBUF_ITLINE4_RCC
//    <name> RCC </name>
//    <r> 
//    <i> [Bit 0] RO (@ 0x40010090) RCC </i>
//    <check> 
//      <loc> ( (unsigned int) SYSCFG_VREFBUF_ITLINE4 ) </loc>
//      <o.0..0> RCC
//    </check>
//  </item>
//  


// -------------------------  Register RTree: SYSCFG_VREFBUF_ITLINE4  -----------------------------
// SVD Line: 19311

//  <rtree> SFDITEM_REG__SYSCFG_VREFBUF_ITLINE4
//    <name> ITLINE4 </name>
//    <r> 
//    <i> [Bits 31..0] RO (@ 0x40010090) interrupt line 4 status  register </i>
//    <loc> ( (unsigned int)((SYSCFG_VREFBUF_ITLINE4 >> 0) & 0xFFFFFFFF) ) </loc>
//    <item> SFDITEM_FIELD__SYSCFG_VREFBUF_ITLINE4_RCC </item>
//  </rtree>
//  


// ----------------------  Register Item Address: SYSCFG_VREFBUF_ITLINE5  -------------------------
// SVD Line: 19329

unsigned int SYSCFG_VREFBUF_ITLINE5 __AT (0x40010094);



// ------------------------  Field Item: SYSCFG_VREFBUF_ITLINE5_EXTI0  ----------------------------
// SVD Line: 19339

//  <item> SFDITEM_FIELD__SYSCFG_VREFBUF_ITLINE5_EXTI0
//    <name> EXTI0 </name>
//    <r> 
//    <i> [Bit 0] RO (@ 0x40010094) EXTI0 </i>
//    <check> 
//      <loc> ( (unsigned int) SYSCFG_VREFBUF_ITLINE5 ) </loc>
//      <o.0..0> EXTI0
//    </check>
//  </item>
//  


// ------------------------  Field Item: SYSCFG_VREFBUF_ITLINE5_EXTI1  ----------------------------
// SVD Line: 19345

//  <item> SFDITEM_FIELD__SYSCFG_VREFBUF_ITLINE5_EXTI1
//    <name> EXTI1 </name>
//    <r> 
//    <i> [Bit 1] RO (@ 0x40010094) EXTI1 </i>
//    <check> 
//      <loc> ( (unsigned int) SYSCFG_VREFBUF_ITLINE5 ) </loc>
//      <o.1..1> EXTI1
//    </check>
//  </item>
//  


// -------------------------  Register RTree: SYSCFG_VREFBUF_ITLINE5  -----------------------------
// SVD Line: 19329

//  <rtree> SFDITEM_REG__SYSCFG_VREFBUF_ITLINE5
//    <name> ITLINE5 </name>
//    <r> 
//    <i> [Bits 31..0] RO (@ 0x40010094) interrupt line 5 status  register </i>
//    <loc> ( (unsigned int)((SYSCFG_VREFBUF_ITLINE5 >> 0) & 0xFFFFFFFF) ) </loc>
//    <item> SFDITEM_FIELD__SYSCFG_VREFBUF_ITLINE5_EXTI0 </item>
//    <item> SFDITEM_FIELD__SYSCFG_VREFBUF_ITLINE5_EXTI1 </item>
//  </rtree>
//  


// ----------------------  Register Item Address: SYSCFG_VREFBUF_ITLINE6  -------------------------
// SVD Line: 19353

unsigned int SYSCFG_VREFBUF_ITLINE6 __AT (0x40010098);



// ------------------------  Field Item: SYSCFG_VREFBUF_ITLINE6_EXTI2  ----------------------------
// SVD Line: 19363

//  <item> SFDITEM_FIELD__SYSCFG_VREFBUF_ITLINE6_EXTI2
//    <name> EXTI2 </name>
//    <r> 
//    <i> [Bit 0] RO (@ 0x40010098) EXTI2 </i>
//    <check> 
//      <loc> ( (unsigned int) SYSCFG_VREFBUF_ITLINE6 ) </loc>
//      <o.0..0> EXTI2
//    </check>
//  </item>
//  


// ------------------------  Field Item: SYSCFG_VREFBUF_ITLINE6_EXTI3  ----------------------------
// SVD Line: 19369

//  <item> SFDITEM_FIELD__SYSCFG_VREFBUF_ITLINE6_EXTI3
//    <name> EXTI3 </name>
//    <r> 
//    <i> [Bit 1] RO (@ 0x40010098) EXTI3 </i>
//    <check> 
//      <loc> ( (unsigned int) SYSCFG_VREFBUF_ITLINE6 ) </loc>
//      <o.1..1> EXTI3
//    </check>
//  </item>
//  


// -------------------------  Register RTree: SYSCFG_VREFBUF_ITLINE6  -----------------------------
// SVD Line: 19353

//  <rtree> SFDITEM_REG__SYSCFG_VREFBUF_ITLINE6
//    <name> ITLINE6 </name>
//    <r> 
//    <i> [Bits 31..0] RO (@ 0x40010098) interrupt line 6 status  register </i>
//    <loc> ( (unsigned int)((SYSCFG_VREFBUF_ITLINE6 >> 0) & 0xFFFFFFFF) ) </loc>
//    <item> SFDITEM_FIELD__SYSCFG_VREFBUF_ITLINE6_EXTI2 </item>
//    <item> SFDITEM_FIELD__SYSCFG_VREFBUF_ITLINE6_EXTI3 </item>
//  </rtree>
//  


// ----------------------  Register Item Address: SYSCFG_VREFBUF_ITLINE7  -------------------------
// SVD Line: 19377

unsigned int SYSCFG_VREFBUF_ITLINE7 __AT (0x4001009C);



// ------------------------  Field Item: SYSCFG_VREFBUF_ITLINE7_EXTI4  ----------------------------
// SVD Line: 19387

//  <item> SFDITEM_FIELD__SYSCFG_VREFBUF_ITLINE7_EXTI4
//    <name> EXTI4 </name>
//    <r> 
//    <i> [Bit 0] RO (@ 0x4001009C) EXTI4 </i>
//    <check> 
//      <loc> ( (unsigned int) SYSCFG_VREFBUF_ITLINE7 ) </loc>
//      <o.0..0> EXTI4
//    </check>
//  </item>
//  


// ------------------------  Field Item: SYSCFG_VREFBUF_ITLINE7_EXTI5  ----------------------------
// SVD Line: 19393

//  <item> SFDITEM_FIELD__SYSCFG_VREFBUF_ITLINE7_EXTI5
//    <name> EXTI5 </name>
//    <r> 
//    <i> [Bit 1] RO (@ 0x4001009C) EXTI5 </i>
//    <check> 
//      <loc> ( (unsigned int) SYSCFG_VREFBUF_ITLINE7 ) </loc>
//      <o.1..1> EXTI5
//    </check>
//  </item>
//  


// ------------------------  Field Item: SYSCFG_VREFBUF_ITLINE7_EXTI6  ----------------------------
// SVD Line: 19399

//  <item> SFDITEM_FIELD__SYSCFG_VREFBUF_ITLINE7_EXTI6
//    <name> EXTI6 </name>
//    <r> 
//    <i> [Bit 2] RO (@ 0x4001009C) EXTI6 </i>
//    <check> 
//      <loc> ( (unsigned int) SYSCFG_VREFBUF_ITLINE7 ) </loc>
//      <o.2..2> EXTI6
//    </check>
//  </item>
//  


// ------------------------  Field Item: SYSCFG_VREFBUF_ITLINE7_EXTI7  ----------------------------
// SVD Line: 19405

//  <item> SFDITEM_FIELD__SYSCFG_VREFBUF_ITLINE7_EXTI7
//    <name> EXTI7 </name>
//    <r> 
//    <i> [Bit 3] RO (@ 0x4001009C) EXTI7 </i>
//    <check> 
//      <loc> ( (unsigned int) SYSCFG_VREFBUF_ITLINE7 ) </loc>
//      <o.3..3> EXTI7
//    </check>
//  </item>
//  


// ------------------------  Field Item: SYSCFG_VREFBUF_ITLINE7_EXTI8  ----------------------------
// SVD Line: 19411

//  <item> SFDITEM_FIELD__SYSCFG_VREFBUF_ITLINE7_EXTI8
//    <name> EXTI8 </name>
//    <r> 
//    <i> [Bit 4] RO (@ 0x4001009C) EXTI8 </i>
//    <check> 
//      <loc> ( (unsigned int) SYSCFG_VREFBUF_ITLINE7 ) </loc>
//      <o.4..4> EXTI8
//    </check>
//  </item>
//  


// ------------------------  Field Item: SYSCFG_VREFBUF_ITLINE7_EXTI9  ----------------------------
// SVD Line: 19417

//  <item> SFDITEM_FIELD__SYSCFG_VREFBUF_ITLINE7_EXTI9
//    <name> EXTI9 </name>
//    <r> 
//    <i> [Bit 5] RO (@ 0x4001009C) EXTI9 </i>
//    <check> 
//      <loc> ( (unsigned int) SYSCFG_VREFBUF_ITLINE7 ) </loc>
//      <o.5..5> EXTI9
//    </check>
//  </item>
//  


// ------------------------  Field Item: SYSCFG_VREFBUF_ITLINE7_EXTI10  ---------------------------
// SVD Line: 19423

//  <item> SFDITEM_FIELD__SYSCFG_VREFBUF_ITLINE7_EXTI10
//    <name> EXTI10 </name>
//    <r> 
//    <i> [Bit 6] RO (@ 0x4001009C) EXTI10 </i>
//    <check> 
//      <loc> ( (unsigned int) SYSCFG_VREFBUF_ITLINE7 ) </loc>
//      <o.6..6> EXTI10
//    </check>
//  </item>
//  


// ------------------------  Field Item: SYSCFG_VREFBUF_ITLINE7_EXTI11  ---------------------------
// SVD Line: 19429

//  <item> SFDITEM_FIELD__SYSCFG_VREFBUF_ITLINE7_EXTI11
//    <name> EXTI11 </name>
//    <r> 
//    <i> [Bit 7] RO (@ 0x4001009C) EXTI11 </i>
//    <check> 
//      <loc> ( (unsigned int) SYSCFG_VREFBUF_ITLINE7 ) </loc>
//      <o.7..7> EXTI11
//    </check>
//  </item>
//  


// ------------------------  Field Item: SYSCFG_VREFBUF_ITLINE7_EXTI12  ---------------------------
// SVD Line: 19435

//  <item> SFDITEM_FIELD__SYSCFG_VREFBUF_ITLINE7_EXTI12
//    <name> EXTI12 </name>
//    <r> 
//    <i> [Bit 8] RO (@ 0x4001009C) EXTI12 </i>
//    <check> 
//      <loc> ( (unsigned int) SYSCFG_VREFBUF_ITLINE7 ) </loc>
//      <o.8..8> EXTI12
//    </check>
//  </item>
//  


// ------------------------  Field Item: SYSCFG_VREFBUF_ITLINE7_EXTI13  ---------------------------
// SVD Line: 19441

//  <item> SFDITEM_FIELD__SYSCFG_VREFBUF_ITLINE7_EXTI13
//    <name> EXTI13 </name>
//    <r> 
//    <i> [Bit 9] RO (@ 0x4001009C) EXTI13 </i>
//    <check> 
//      <loc> ( (unsigned int) SYSCFG_VREFBUF_ITLINE7 ) </loc>
//      <o.9..9> EXTI13
//    </check>
//  </item>
//  


// ------------------------  Field Item: SYSCFG_VREFBUF_ITLINE7_EXTI14  ---------------------------
// SVD Line: 19447

//  <item> SFDITEM_FIELD__SYSCFG_VREFBUF_ITLINE7_EXTI14
//    <name> EXTI14 </name>
//    <r> 
//    <i> [Bit 10] RO (@ 0x4001009C) EXTI14 </i>
//    <check> 
//      <loc> ( (unsigned int) SYSCFG_VREFBUF_ITLINE7 ) </loc>
//      <o.10..10> EXTI14
//    </check>
//  </item>
//  


// ------------------------  Field Item: SYSCFG_VREFBUF_ITLINE7_EXTI15  ---------------------------
// SVD Line: 19453

//  <item> SFDITEM_FIELD__SYSCFG_VREFBUF_ITLINE7_EXTI15
//    <name> EXTI15 </name>
//    <r> 
//    <i> [Bit 11] RO (@ 0x4001009C) EXTI15 </i>
//    <check> 
//      <loc> ( (unsigned int) SYSCFG_VREFBUF_ITLINE7 ) </loc>
//      <o.11..11> EXTI15
//    </check>
//  </item>
//  


// -------------------------  Register RTree: SYSCFG_VREFBUF_ITLINE7  -----------------------------
// SVD Line: 19377

//  <rtree> SFDITEM_REG__SYSCFG_VREFBUF_ITLINE7
//    <name> ITLINE7 </name>
//    <r> 
//    <i> [Bits 31..0] RO (@ 0x4001009C) interrupt line 7 status  register </i>
//    <loc> ( (unsigned int)((SYSCFG_VREFBUF_ITLINE7 >> 0) & 0xFFFFFFFF) ) </loc>
//    <item> SFDITEM_FIELD__SYSCFG_VREFBUF_ITLINE7_EXTI4 </item>
//    <item> SFDITEM_FIELD__SYSCFG_VREFBUF_ITLINE7_EXTI5 </item>
//    <item> SFDITEM_FIELD__SYSCFG_VREFBUF_ITLINE7_EXTI6 </item>
//    <item> SFDITEM_FIELD__SYSCFG_VREFBUF_ITLINE7_EXTI7 </item>
//    <item> SFDITEM_FIELD__SYSCFG_VREFBUF_ITLINE7_EXTI8 </item>
//    <item> SFDITEM_FIELD__SYSCFG_VREFBUF_ITLINE7_EXTI9 </item>
//    <item> SFDITEM_FIELD__SYSCFG_VREFBUF_ITLINE7_EXTI10 </item>
//    <item> SFDITEM_FIELD__SYSCFG_VREFBUF_ITLINE7_EXTI11 </item>
//    <item> SFDITEM_FIELD__SYSCFG_VREFBUF_ITLINE7_EXTI12 </item>
//    <item> SFDITEM_FIELD__SYSCFG_VREFBUF_ITLINE7_EXTI13 </item>
//    <item> SFDITEM_FIELD__SYSCFG_VREFBUF_ITLINE7_EXTI14 </item>
//    <item> SFDITEM_FIELD__SYSCFG_VREFBUF_ITLINE7_EXTI15 </item>
//  </rtree>
//  


// ----------------------  Register Item Address: SYSCFG_VREFBUF_ITLINE8  -------------------------
// SVD Line: 19461

unsigned int SYSCFG_VREFBUF_ITLINE8 __AT (0x400100A0);



// ------------------------  Field Item: SYSCFG_VREFBUF_ITLINE8_UCPD1  ----------------------------
// SVD Line: 19471

//  <item> SFDITEM_FIELD__SYSCFG_VREFBUF_ITLINE8_UCPD1
//    <name> UCPD1 </name>
//    <r> 
//    <i> [Bit 0] RO (@ 0x400100A0) UCPD1 </i>
//    <check> 
//      <loc> ( (unsigned int) SYSCFG_VREFBUF_ITLINE8 ) </loc>
//      <o.0..0> UCPD1
//    </check>
//  </item>
//  


// ------------------------  Field Item: SYSCFG_VREFBUF_ITLINE8_UCPD2  ----------------------------
// SVD Line: 19477

//  <item> SFDITEM_FIELD__SYSCFG_VREFBUF_ITLINE8_UCPD2
//    <name> UCPD2 </name>
//    <r> 
//    <i> [Bit 1] RO (@ 0x400100A0) UCPD2 </i>
//    <check> 
//      <loc> ( (unsigned int) SYSCFG_VREFBUF_ITLINE8 ) </loc>
//      <o.1..1> UCPD2
//    </check>
//  </item>
//  


// -------------------------  Register RTree: SYSCFG_VREFBUF_ITLINE8  -----------------------------
// SVD Line: 19461

//  <rtree> SFDITEM_REG__SYSCFG_VREFBUF_ITLINE8
//    <name> ITLINE8 </name>
//    <r> 
//    <i> [Bits 31..0] RO (@ 0x400100A0) interrupt line 8 status  register </i>
//    <loc> ( (unsigned int)((SYSCFG_VREFBUF_ITLINE8 >> 0) & 0xFFFFFFFF) ) </loc>
//    <item> SFDITEM_FIELD__SYSCFG_VREFBUF_ITLINE8_UCPD1 </item>
//    <item> SFDITEM_FIELD__SYSCFG_VREFBUF_ITLINE8_UCPD2 </item>
//  </rtree>
//  


// ----------------------  Register Item Address: SYSCFG_VREFBUF_ITLINE9  -------------------------
// SVD Line: 19485

unsigned int SYSCFG_VREFBUF_ITLINE9 __AT (0x400100A4);



// -----------------------  Field Item: SYSCFG_VREFBUF_ITLINE9_DMA1_CH1  --------------------------
// SVD Line: 19495

//  <item> SFDITEM_FIELD__SYSCFG_VREFBUF_ITLINE9_DMA1_CH1
//    <name> DMA1_CH1 </name>
//    <r> 
//    <i> [Bit 0] RO (@ 0x400100A4) DMA1_CH1 </i>
//    <check> 
//      <loc> ( (unsigned int) SYSCFG_VREFBUF_ITLINE9 ) </loc>
//      <o.0..0> DMA1_CH1
//    </check>
//  </item>
//  


// -------------------------  Register RTree: SYSCFG_VREFBUF_ITLINE9  -----------------------------
// SVD Line: 19485

//  <rtree> SFDITEM_REG__SYSCFG_VREFBUF_ITLINE9
//    <name> ITLINE9 </name>
//    <r> 
//    <i> [Bits 31..0] RO (@ 0x400100A4) interrupt line 9 status  register </i>
//    <loc> ( (unsigned int)((SYSCFG_VREFBUF_ITLINE9 >> 0) & 0xFFFFFFFF) ) </loc>
//    <item> SFDITEM_FIELD__SYSCFG_VREFBUF_ITLINE9_DMA1_CH1 </item>
//  </rtree>
//  


// ---------------------  Register Item Address: SYSCFG_VREFBUF_ITLINE10  -------------------------
// SVD Line: 19503

unsigned int SYSCFG_VREFBUF_ITLINE10 __AT (0x400100A8);



// ----------------------  Field Item: SYSCFG_VREFBUF_ITLINE10_DMA1_CH2  --------------------------
// SVD Line: 19513

//  <item> SFDITEM_FIELD__SYSCFG_VREFBUF_ITLINE10_DMA1_CH2
//    <name> DMA1_CH2 </name>
//    <r> 
//    <i> [Bit 0] RO (@ 0x400100A8) DMA1_CH1 </i>
//    <check> 
//      <loc> ( (unsigned int) SYSCFG_VREFBUF_ITLINE10 ) </loc>
//      <o.0..0> DMA1_CH2
//    </check>
//  </item>
//  


// ----------------------  Field Item: SYSCFG_VREFBUF_ITLINE10_DMA1_CH3  --------------------------
// SVD Line: 19519

//  <item> SFDITEM_FIELD__SYSCFG_VREFBUF_ITLINE10_DMA1_CH3
//    <name> DMA1_CH3 </name>
//    <r> 
//    <i> [Bit 1] RO (@ 0x400100A8) DMA1_CH3 </i>
//    <check> 
//      <loc> ( (unsigned int) SYSCFG_VREFBUF_ITLINE10 ) </loc>
//      <o.1..1> DMA1_CH3
//    </check>
//  </item>
//  


// -------------------------  Register RTree: SYSCFG_VREFBUF_ITLINE10  ----------------------------
// SVD Line: 19503

//  <rtree> SFDITEM_REG__SYSCFG_VREFBUF_ITLINE10
//    <name> ITLINE10 </name>
//    <r> 
//    <i> [Bits 31..0] RO (@ 0x400100A8) interrupt line 10 status  register </i>
//    <loc> ( (unsigned int)((SYSCFG_VREFBUF_ITLINE10 >> 0) & 0xFFFFFFFF) ) </loc>
//    <item> SFDITEM_FIELD__SYSCFG_VREFBUF_ITLINE10_DMA1_CH2 </item>
//    <item> SFDITEM_FIELD__SYSCFG_VREFBUF_ITLINE10_DMA1_CH3 </item>
//  </rtree>
//  


// ---------------------  Register Item Address: SYSCFG_VREFBUF_ITLINE11  -------------------------
// SVD Line: 19527

unsigned int SYSCFG_VREFBUF_ITLINE11 __AT (0x400100AC);



// -----------------------  Field Item: SYSCFG_VREFBUF_ITLINE11_DMAMUX  ---------------------------
// SVD Line: 19537

//  <item> SFDITEM_FIELD__SYSCFG_VREFBUF_ITLINE11_DMAMUX
//    <name> DMAMUX </name>
//    <r> 
//    <i> [Bit 0] RO (@ 0x400100AC) DMAMUX </i>
//    <check> 
//      <loc> ( (unsigned int) SYSCFG_VREFBUF_ITLINE11 ) </loc>
//      <o.0..0> DMAMUX
//    </check>
//  </item>
//  


// ----------------------  Field Item: SYSCFG_VREFBUF_ITLINE11_DMA1_CH4  --------------------------
// SVD Line: 19543

//  <item> SFDITEM_FIELD__SYSCFG_VREFBUF_ITLINE11_DMA1_CH4
//    <name> DMA1_CH4 </name>
//    <r> 
//    <i> [Bit 1] RO (@ 0x400100AC) DMA1_CH4 </i>
//    <check> 
//      <loc> ( (unsigned int) SYSCFG_VREFBUF_ITLINE11 ) </loc>
//      <o.1..1> DMA1_CH4
//    </check>
//  </item>
//  


// ----------------------  Field Item: SYSCFG_VREFBUF_ITLINE11_DMA1_CH5  --------------------------
// SVD Line: 19549

//  <item> SFDITEM_FIELD__SYSCFG_VREFBUF_ITLINE11_DMA1_CH5
//    <name> DMA1_CH5 </name>
//    <r> 
//    <i> [Bit 2] RO (@ 0x400100AC) DMA1_CH5 </i>
//    <check> 
//      <loc> ( (unsigned int) SYSCFG_VREFBUF_ITLINE11 ) </loc>
//      <o.2..2> DMA1_CH5
//    </check>
//  </item>
//  


// ----------------------  Field Item: SYSCFG_VREFBUF_ITLINE11_DMA1_CH6  --------------------------
// SVD Line: 19555

//  <item> SFDITEM_FIELD__SYSCFG_VREFBUF_ITLINE11_DMA1_CH6
//    <name> DMA1_CH6 </name>
//    <r> 
//    <i> [Bit 3] RO (@ 0x400100AC) DMA1_CH6 </i>
//    <check> 
//      <loc> ( (unsigned int) SYSCFG_VREFBUF_ITLINE11 ) </loc>
//      <o.3..3> DMA1_CH6
//    </check>
//  </item>
//  


// ----------------------  Field Item: SYSCFG_VREFBUF_ITLINE11_DMA1_CH7  --------------------------
// SVD Line: 19561

//  <item> SFDITEM_FIELD__SYSCFG_VREFBUF_ITLINE11_DMA1_CH7
//    <name> DMA1_CH7 </name>
//    <r> 
//    <i> [Bit 4] RO (@ 0x400100AC) DMA1_CH7 </i>
//    <check> 
//      <loc> ( (unsigned int) SYSCFG_VREFBUF_ITLINE11 ) </loc>
//      <o.4..4> DMA1_CH7
//    </check>
//  </item>
//  


// -------------------------  Register RTree: SYSCFG_VREFBUF_ITLINE11  ----------------------------
// SVD Line: 19527

//  <rtree> SFDITEM_REG__SYSCFG_VREFBUF_ITLINE11
//    <name> ITLINE11 </name>
//    <r> 
//    <i> [Bits 31..0] RO (@ 0x400100AC) interrupt line 11 status  register </i>
//    <loc> ( (unsigned int)((SYSCFG_VREFBUF_ITLINE11 >> 0) & 0xFFFFFFFF) ) </loc>
//    <item> SFDITEM_FIELD__SYSCFG_VREFBUF_ITLINE11_DMAMUX </item>
//    <item> SFDITEM_FIELD__SYSCFG_VREFBUF_ITLINE11_DMA1_CH4 </item>
//    <item> SFDITEM_FIELD__SYSCFG_VREFBUF_ITLINE11_DMA1_CH5 </item>
//    <item> SFDITEM_FIELD__SYSCFG_VREFBUF_ITLINE11_DMA1_CH6 </item>
//    <item> SFDITEM_FIELD__SYSCFG_VREFBUF_ITLINE11_DMA1_CH7 </item>
//  </rtree>
//  


// ---------------------  Register Item Address: SYSCFG_VREFBUF_ITLINE12  -------------------------
// SVD Line: 19569

unsigned int SYSCFG_VREFBUF_ITLINE12 __AT (0x400100B0);



// -------------------------  Field Item: SYSCFG_VREFBUF_ITLINE12_ADC  ----------------------------
// SVD Line: 19579

//  <item> SFDITEM_FIELD__SYSCFG_VREFBUF_ITLINE12_ADC
//    <name> ADC </name>
//    <r> 
//    <i> [Bit 0] RO (@ 0x400100B0) ADC </i>
//    <check> 
//      <loc> ( (unsigned int) SYSCFG_VREFBUF_ITLINE12 ) </loc>
//      <o.0..0> ADC
//    </check>
//  </item>
//  


// ------------------------  Field Item: SYSCFG_VREFBUF_ITLINE12_COMP1  ---------------------------
// SVD Line: 19585

//  <item> SFDITEM_FIELD__SYSCFG_VREFBUF_ITLINE12_COMP1
//    <name> COMP1 </name>
//    <r> 
//    <i> [Bit 1] RO (@ 0x400100B0) COMP1 </i>
//    <check> 
//      <loc> ( (unsigned int) SYSCFG_VREFBUF_ITLINE12 ) </loc>
//      <o.1..1> COMP1
//    </check>
//  </item>
//  


// ------------------------  Field Item: SYSCFG_VREFBUF_ITLINE12_COMP2  ---------------------------
// SVD Line: 19591

//  <item> SFDITEM_FIELD__SYSCFG_VREFBUF_ITLINE12_COMP2
//    <name> COMP2 </name>
//    <r> 
//    <i> [Bit 2] RO (@ 0x400100B0) COMP2 </i>
//    <check> 
//      <loc> ( (unsigned int) SYSCFG_VREFBUF_ITLINE12 ) </loc>
//      <o.2..2> COMP2
//    </check>
//  </item>
//  


// -------------------------  Register RTree: SYSCFG_VREFBUF_ITLINE12  ----------------------------
// SVD Line: 19569

//  <rtree> SFDITEM_REG__SYSCFG_VREFBUF_ITLINE12
//    <name> ITLINE12 </name>
//    <r> 
//    <i> [Bits 31..0] RO (@ 0x400100B0) interrupt line 12 status  register </i>
//    <loc> ( (unsigned int)((SYSCFG_VREFBUF_ITLINE12 >> 0) & 0xFFFFFFFF) ) </loc>
//    <item> SFDITEM_FIELD__SYSCFG_VREFBUF_ITLINE12_ADC </item>
//    <item> SFDITEM_FIELD__SYSCFG_VREFBUF_ITLINE12_COMP1 </item>
//    <item> SFDITEM_FIELD__SYSCFG_VREFBUF_ITLINE12_COMP2 </item>
//  </rtree>
//  


// ---------------------  Register Item Address: SYSCFG_VREFBUF_ITLINE13  -------------------------
// SVD Line: 19599

unsigned int SYSCFG_VREFBUF_ITLINE13 __AT (0x400100B4);



// ----------------------  Field Item: SYSCFG_VREFBUF_ITLINE13_TIM1_CCU  --------------------------
// SVD Line: 19609

//  <item> SFDITEM_FIELD__SYSCFG_VREFBUF_ITLINE13_TIM1_CCU
//    <name> TIM1_CCU </name>
//    <r> 
//    <i> [Bit 0] RO (@ 0x400100B4) TIM1_CCU </i>
//    <check> 
//      <loc> ( (unsigned int) SYSCFG_VREFBUF_ITLINE13 ) </loc>
//      <o.0..0> TIM1_CCU
//    </check>
//  </item>
//  


// ----------------------  Field Item: SYSCFG_VREFBUF_ITLINE13_TIM1_TRG  --------------------------
// SVD Line: 19615

//  <item> SFDITEM_FIELD__SYSCFG_VREFBUF_ITLINE13_TIM1_TRG
//    <name> TIM1_TRG </name>
//    <r> 
//    <i> [Bit 1] RO (@ 0x400100B4) TIM1_TRG </i>
//    <check> 
//      <loc> ( (unsigned int) SYSCFG_VREFBUF_ITLINE13 ) </loc>
//      <o.1..1> TIM1_TRG
//    </check>
//  </item>
//  


// ----------------------  Field Item: SYSCFG_VREFBUF_ITLINE13_TIM1_UPD  --------------------------
// SVD Line: 19621

//  <item> SFDITEM_FIELD__SYSCFG_VREFBUF_ITLINE13_TIM1_UPD
//    <name> TIM1_UPD </name>
//    <r> 
//    <i> [Bit 2] RO (@ 0x400100B4) TIM1_UPD </i>
//    <check> 
//      <loc> ( (unsigned int) SYSCFG_VREFBUF_ITLINE13 ) </loc>
//      <o.2..2> TIM1_UPD
//    </check>
//  </item>
//  


// ----------------------  Field Item: SYSCFG_VREFBUF_ITLINE13_TIM1_BRK  --------------------------
// SVD Line: 19627

//  <item> SFDITEM_FIELD__SYSCFG_VREFBUF_ITLINE13_TIM1_BRK
//    <name> TIM1_BRK </name>
//    <r> 
//    <i> [Bit 3] RO (@ 0x400100B4) TIM1_BRK </i>
//    <check> 
//      <loc> ( (unsigned int) SYSCFG_VREFBUF_ITLINE13 ) </loc>
//      <o.3..3> TIM1_BRK
//    </check>
//  </item>
//  


// -------------------------  Register RTree: SYSCFG_VREFBUF_ITLINE13  ----------------------------
// SVD Line: 19599

//  <rtree> SFDITEM_REG__SYSCFG_VREFBUF_ITLINE13
//    <name> ITLINE13 </name>
//    <r> 
//    <i> [Bits 31..0] RO (@ 0x400100B4) interrupt line 13 status  register </i>
//    <loc> ( (unsigned int)((SYSCFG_VREFBUF_ITLINE13 >> 0) & 0xFFFFFFFF) ) </loc>
//    <item> SFDITEM_FIELD__SYSCFG_VREFBUF_ITLINE13_TIM1_CCU </item>
//    <item> SFDITEM_FIELD__SYSCFG_VREFBUF_ITLINE13_TIM1_TRG </item>
//    <item> SFDITEM_FIELD__SYSCFG_VREFBUF_ITLINE13_TIM1_UPD </item>
//    <item> SFDITEM_FIELD__SYSCFG_VREFBUF_ITLINE13_TIM1_BRK </item>
//  </rtree>
//  


// ---------------------  Register Item Address: SYSCFG_VREFBUF_ITLINE14  -------------------------
// SVD Line: 19635

unsigned int SYSCFG_VREFBUF_ITLINE14 __AT (0x400100B8);



// -----------------------  Field Item: SYSCFG_VREFBUF_ITLINE14_TIM1_CC  --------------------------
// SVD Line: 19645

//  <item> SFDITEM_FIELD__SYSCFG_VREFBUF_ITLINE14_TIM1_CC
//    <name> TIM1_CC </name>
//    <r> 
//    <i> [Bit 0] RO (@ 0x400100B8) TIM1_CC </i>
//    <check> 
//      <loc> ( (unsigned int) SYSCFG_VREFBUF_ITLINE14 ) </loc>
//      <o.0..0> TIM1_CC
//    </check>
//  </item>
//  


// -------------------------  Register RTree: SYSCFG_VREFBUF_ITLINE14  ----------------------------
// SVD Line: 19635

//  <rtree> SFDITEM_REG__SYSCFG_VREFBUF_ITLINE14
//    <name> ITLINE14 </name>
//    <r> 
//    <i> [Bits 31..0] RO (@ 0x400100B8) interrupt line 14 status  register </i>
//    <loc> ( (unsigned int)((SYSCFG_VREFBUF_ITLINE14 >> 0) & 0xFFFFFFFF) ) </loc>
//    <item> SFDITEM_FIELD__SYSCFG_VREFBUF_ITLINE14_TIM1_CC </item>
//  </rtree>
//  


// ---------------------  Register Item Address: SYSCFG_VREFBUF_ITLINE15  -------------------------
// SVD Line: 19653

unsigned int SYSCFG_VREFBUF_ITLINE15 __AT (0x400100BC);



// ------------------------  Field Item: SYSCFG_VREFBUF_ITLINE15_TIM2  ----------------------------
// SVD Line: 19663

//  <item> SFDITEM_FIELD__SYSCFG_VREFBUF_ITLINE15_TIM2
//    <name> TIM2 </name>
//    <r> 
//    <i> [Bit 0] RO (@ 0x400100BC) TIM2 </i>
//    <check> 
//      <loc> ( (unsigned int) SYSCFG_VREFBUF_ITLINE15 ) </loc>
//      <o.0..0> TIM2
//    </check>
//  </item>
//  


// -------------------------  Register RTree: SYSCFG_VREFBUF_ITLINE15  ----------------------------
// SVD Line: 19653

//  <rtree> SFDITEM_REG__SYSCFG_VREFBUF_ITLINE15
//    <name> ITLINE15 </name>
//    <r> 
//    <i> [Bits 31..0] RO (@ 0x400100BC) interrupt line 15 status  register </i>
//    <loc> ( (unsigned int)((SYSCFG_VREFBUF_ITLINE15 >> 0) & 0xFFFFFFFF) ) </loc>
//    <item> SFDITEM_FIELD__SYSCFG_VREFBUF_ITLINE15_TIM2 </item>
//  </rtree>
//  


// ---------------------  Register Item Address: SYSCFG_VREFBUF_ITLINE16  -------------------------
// SVD Line: 19671

unsigned int SYSCFG_VREFBUF_ITLINE16 __AT (0x400100C0);



// ------------------------  Field Item: SYSCFG_VREFBUF_ITLINE16_TIM3  ----------------------------
// SVD Line: 19681

//  <item> SFDITEM_FIELD__SYSCFG_VREFBUF_ITLINE16_TIM3
//    <name> TIM3 </name>
//    <r> 
//    <i> [Bit 0] RO (@ 0x400100C0) TIM3 </i>
//    <check> 
//      <loc> ( (unsigned int) SYSCFG_VREFBUF_ITLINE16 ) </loc>
//      <o.0..0> TIM3
//    </check>
//  </item>
//  


// -------------------------  Register RTree: SYSCFG_VREFBUF_ITLINE16  ----------------------------
// SVD Line: 19671

//  <rtree> SFDITEM_REG__SYSCFG_VREFBUF_ITLINE16
//    <name> ITLINE16 </name>
//    <r> 
//    <i> [Bits 31..0] RO (@ 0x400100C0) interrupt line 16 status  register </i>
//    <loc> ( (unsigned int)((SYSCFG_VREFBUF_ITLINE16 >> 0) & 0xFFFFFFFF) ) </loc>
//    <item> SFDITEM_FIELD__SYSCFG_VREFBUF_ITLINE16_TIM3 </item>
//  </rtree>
//  


// ---------------------  Register Item Address: SYSCFG_VREFBUF_ITLINE17  -------------------------
// SVD Line: 19689

unsigned int SYSCFG_VREFBUF_ITLINE17 __AT (0x400100C4);



// ------------------------  Field Item: SYSCFG_VREFBUF_ITLINE17_TIM6  ----------------------------
// SVD Line: 19699

//  <item> SFDITEM_FIELD__SYSCFG_VREFBUF_ITLINE17_TIM6
//    <name> TIM6 </name>
//    <r> 
//    <i> [Bit 0] RO (@ 0x400100C4) TIM6 </i>
//    <check> 
//      <loc> ( (unsigned int) SYSCFG_VREFBUF_ITLINE17 ) </loc>
//      <o.0..0> TIM6
//    </check>
//  </item>
//  


// -------------------------  Field Item: SYSCFG_VREFBUF_ITLINE17_DAC  ----------------------------
// SVD Line: 19705

//  <item> SFDITEM_FIELD__SYSCFG_VREFBUF_ITLINE17_DAC
//    <name> DAC </name>
//    <r> 
//    <i> [Bit 1] RO (@ 0x400100C4) DAC </i>
//    <check> 
//      <loc> ( (unsigned int) SYSCFG_VREFBUF_ITLINE17 ) </loc>
//      <o.1..1> DAC
//    </check>
//  </item>
//  


// -----------------------  Field Item: SYSCFG_VREFBUF_ITLINE17_LPTIM1  ---------------------------
// SVD Line: 19711

//  <item> SFDITEM_FIELD__SYSCFG_VREFBUF_ITLINE17_LPTIM1
//    <name> LPTIM1 </name>
//    <r> 
//    <i> [Bit 2] RO (@ 0x400100C4) LPTIM1 </i>
//    <check> 
//      <loc> ( (unsigned int) SYSCFG_VREFBUF_ITLINE17 ) </loc>
//      <o.2..2> LPTIM1
//    </check>
//  </item>
//  


// -------------------------  Register RTree: SYSCFG_VREFBUF_ITLINE17  ----------------------------
// SVD Line: 19689

//  <rtree> SFDITEM_REG__SYSCFG_VREFBUF_ITLINE17
//    <name> ITLINE17 </name>
//    <r> 
//    <i> [Bits 31..0] RO (@ 0x400100C4) interrupt line 17 status  register </i>
//    <loc> ( (unsigned int)((SYSCFG_VREFBUF_ITLINE17 >> 0) & 0xFFFFFFFF) ) </loc>
//    <item> SFDITEM_FIELD__SYSCFG_VREFBUF_ITLINE17_TIM6 </item>
//    <item> SFDITEM_FIELD__SYSCFG_VREFBUF_ITLINE17_DAC </item>
//    <item> SFDITEM_FIELD__SYSCFG_VREFBUF_ITLINE17_LPTIM1 </item>
//  </rtree>
//  


// ---------------------  Register Item Address: SYSCFG_VREFBUF_ITLINE18  -------------------------
// SVD Line: 19719

unsigned int SYSCFG_VREFBUF_ITLINE18 __AT (0x400100C8);



// ------------------------  Field Item: SYSCFG_VREFBUF_ITLINE18_TIM7  ----------------------------
// SVD Line: 19729

//  <item> SFDITEM_FIELD__SYSCFG_VREFBUF_ITLINE18_TIM7
//    <name> TIM7 </name>
//    <r> 
//    <i> [Bit 0] RO (@ 0x400100C8) TIM7 </i>
//    <check> 
//      <loc> ( (unsigned int) SYSCFG_VREFBUF_ITLINE18 ) </loc>
//      <o.0..0> TIM7
//    </check>
//  </item>
//  


// -----------------------  Field Item: SYSCFG_VREFBUF_ITLINE18_LPTIM2  ---------------------------
// SVD Line: 19735

//  <item> SFDITEM_FIELD__SYSCFG_VREFBUF_ITLINE18_LPTIM2
//    <name> LPTIM2 </name>
//    <r> 
//    <i> [Bit 1] RO (@ 0x400100C8) LPTIM2 </i>
//    <check> 
//      <loc> ( (unsigned int) SYSCFG_VREFBUF_ITLINE18 ) </loc>
//      <o.1..1> LPTIM2
//    </check>
//  </item>
//  


// -------------------------  Register RTree: SYSCFG_VREFBUF_ITLINE18  ----------------------------
// SVD Line: 19719

//  <rtree> SFDITEM_REG__SYSCFG_VREFBUF_ITLINE18
//    <name> ITLINE18 </name>
//    <r> 
//    <i> [Bits 31..0] RO (@ 0x400100C8) interrupt line 18 status  register </i>
//    <loc> ( (unsigned int)((SYSCFG_VREFBUF_ITLINE18 >> 0) & 0xFFFFFFFF) ) </loc>
//    <item> SFDITEM_FIELD__SYSCFG_VREFBUF_ITLINE18_TIM7 </item>
//    <item> SFDITEM_FIELD__SYSCFG_VREFBUF_ITLINE18_LPTIM2 </item>
//  </rtree>
//  


// ---------------------  Register Item Address: SYSCFG_VREFBUF_ITLINE19  -------------------------
// SVD Line: 19743

unsigned int SYSCFG_VREFBUF_ITLINE19 __AT (0x400100CC);



// ------------------------  Field Item: SYSCFG_VREFBUF_ITLINE19_TIM14  ---------------------------
// SVD Line: 19753

//  <item> SFDITEM_FIELD__SYSCFG_VREFBUF_ITLINE19_TIM14
//    <name> TIM14 </name>
//    <r> 
//    <i> [Bit 0] RO (@ 0x400100CC) TIM14 </i>
//    <check> 
//      <loc> ( (unsigned int) SYSCFG_VREFBUF_ITLINE19 ) </loc>
//      <o.0..0> TIM14
//    </check>
//  </item>
//  


// -------------------------  Register RTree: SYSCFG_VREFBUF_ITLINE19  ----------------------------
// SVD Line: 19743

//  <rtree> SFDITEM_REG__SYSCFG_VREFBUF_ITLINE19
//    <name> ITLINE19 </name>
//    <r> 
//    <i> [Bits 31..0] RO (@ 0x400100CC) interrupt line 19 status  register </i>
//    <loc> ( (unsigned int)((SYSCFG_VREFBUF_ITLINE19 >> 0) & 0xFFFFFFFF) ) </loc>
//    <item> SFDITEM_FIELD__SYSCFG_VREFBUF_ITLINE19_TIM14 </item>
//  </rtree>
//  


// ---------------------  Register Item Address: SYSCFG_VREFBUF_ITLINE20  -------------------------
// SVD Line: 19761

unsigned int SYSCFG_VREFBUF_ITLINE20 __AT (0x400100D0);



// ------------------------  Field Item: SYSCFG_VREFBUF_ITLINE20_TIM15  ---------------------------
// SVD Line: 19771

//  <item> SFDITEM_FIELD__SYSCFG_VREFBUF_ITLINE20_TIM15
//    <name> TIM15 </name>
//    <r> 
//    <i> [Bit 0] RO (@ 0x400100D0) TIM15 </i>
//    <check> 
//      <loc> ( (unsigned int) SYSCFG_VREFBUF_ITLINE20 ) </loc>
//      <o.0..0> TIM15
//    </check>
//  </item>
//  


// -------------------------  Register RTree: SYSCFG_VREFBUF_ITLINE20  ----------------------------
// SVD Line: 19761

//  <rtree> SFDITEM_REG__SYSCFG_VREFBUF_ITLINE20
//    <name> ITLINE20 </name>
//    <r> 
//    <i> [Bits 31..0] RO (@ 0x400100D0) interrupt line 20 status  register </i>
//    <loc> ( (unsigned int)((SYSCFG_VREFBUF_ITLINE20 >> 0) & 0xFFFFFFFF) ) </loc>
//    <item> SFDITEM_FIELD__SYSCFG_VREFBUF_ITLINE20_TIM15 </item>
//  </rtree>
//  


// ---------------------  Register Item Address: SYSCFG_VREFBUF_ITLINE21  -------------------------
// SVD Line: 19779

unsigned int SYSCFG_VREFBUF_ITLINE21 __AT (0x400100D4);



// ------------------------  Field Item: SYSCFG_VREFBUF_ITLINE21_TIM16  ---------------------------
// SVD Line: 19789

//  <item> SFDITEM_FIELD__SYSCFG_VREFBUF_ITLINE21_TIM16
//    <name> TIM16 </name>
//    <r> 
//    <i> [Bit 0] RO (@ 0x400100D4) TIM16 </i>
//    <check> 
//      <loc> ( (unsigned int) SYSCFG_VREFBUF_ITLINE21 ) </loc>
//      <o.0..0> TIM16
//    </check>
//  </item>
//  


// -------------------------  Register RTree: SYSCFG_VREFBUF_ITLINE21  ----------------------------
// SVD Line: 19779

//  <rtree> SFDITEM_REG__SYSCFG_VREFBUF_ITLINE21
//    <name> ITLINE21 </name>
//    <r> 
//    <i> [Bits 31..0] RO (@ 0x400100D4) interrupt line 21 status  register </i>
//    <loc> ( (unsigned int)((SYSCFG_VREFBUF_ITLINE21 >> 0) & 0xFFFFFFFF) ) </loc>
//    <item> SFDITEM_FIELD__SYSCFG_VREFBUF_ITLINE21_TIM16 </item>
//  </rtree>
//  


// ---------------------  Register Item Address: SYSCFG_VREFBUF_ITLINE22  -------------------------
// SVD Line: 19797

unsigned int SYSCFG_VREFBUF_ITLINE22 __AT (0x400100D8);



// ------------------------  Field Item: SYSCFG_VREFBUF_ITLINE22_TIM17  ---------------------------
// SVD Line: 19807

//  <item> SFDITEM_FIELD__SYSCFG_VREFBUF_ITLINE22_TIM17
//    <name> TIM17 </name>
//    <r> 
//    <i> [Bit 0] RO (@ 0x400100D8) TIM17 </i>
//    <check> 
//      <loc> ( (unsigned int) SYSCFG_VREFBUF_ITLINE22 ) </loc>
//      <o.0..0> TIM17
//    </check>
//  </item>
//  


// -------------------------  Register RTree: SYSCFG_VREFBUF_ITLINE22  ----------------------------
// SVD Line: 19797

//  <rtree> SFDITEM_REG__SYSCFG_VREFBUF_ITLINE22
//    <name> ITLINE22 </name>
//    <r> 
//    <i> [Bits 31..0] RO (@ 0x400100D8) interrupt line 22 status  register </i>
//    <loc> ( (unsigned int)((SYSCFG_VREFBUF_ITLINE22 >> 0) & 0xFFFFFFFF) ) </loc>
//    <item> SFDITEM_FIELD__SYSCFG_VREFBUF_ITLINE22_TIM17 </item>
//  </rtree>
//  


// ---------------------  Register Item Address: SYSCFG_VREFBUF_ITLINE23  -------------------------
// SVD Line: 19815

unsigned int SYSCFG_VREFBUF_ITLINE23 __AT (0x400100DC);



// ------------------------  Field Item: SYSCFG_VREFBUF_ITLINE23_I2C1  ----------------------------
// SVD Line: 19825

//  <item> SFDITEM_FIELD__SYSCFG_VREFBUF_ITLINE23_I2C1
//    <name> I2C1 </name>
//    <r> 
//    <i> [Bit 0] RO (@ 0x400100DC) I2C1 </i>
//    <check> 
//      <loc> ( (unsigned int) SYSCFG_VREFBUF_ITLINE23 ) </loc>
//      <o.0..0> I2C1
//    </check>
//  </item>
//  


// -------------------------  Register RTree: SYSCFG_VREFBUF_ITLINE23  ----------------------------
// SVD Line: 19815

//  <rtree> SFDITEM_REG__SYSCFG_VREFBUF_ITLINE23
//    <name> ITLINE23 </name>
//    <r> 
//    <i> [Bits 31..0] RO (@ 0x400100DC) interrupt line 23 status  register </i>
//    <loc> ( (unsigned int)((SYSCFG_VREFBUF_ITLINE23 >> 0) & 0xFFFFFFFF) ) </loc>
//    <item> SFDITEM_FIELD__SYSCFG_VREFBUF_ITLINE23_I2C1 </item>
//  </rtree>
//  


// ---------------------  Register Item Address: SYSCFG_VREFBUF_ITLINE24  -------------------------
// SVD Line: 19833

unsigned int SYSCFG_VREFBUF_ITLINE24 __AT (0x400100E0);



// ------------------------  Field Item: SYSCFG_VREFBUF_ITLINE24_I2C2  ----------------------------
// SVD Line: 19843

//  <item> SFDITEM_FIELD__SYSCFG_VREFBUF_ITLINE24_I2C2
//    <name> I2C2 </name>
//    <r> 
//    <i> [Bit 0] RO (@ 0x400100E0) I2C2 </i>
//    <check> 
//      <loc> ( (unsigned int) SYSCFG_VREFBUF_ITLINE24 ) </loc>
//      <o.0..0> I2C2
//    </check>
//  </item>
//  


// -------------------------  Register RTree: SYSCFG_VREFBUF_ITLINE24  ----------------------------
// SVD Line: 19833

//  <rtree> SFDITEM_REG__SYSCFG_VREFBUF_ITLINE24
//    <name> ITLINE24 </name>
//    <r> 
//    <i> [Bits 31..0] RO (@ 0x400100E0) interrupt line 24 status  register </i>
//    <loc> ( (unsigned int)((SYSCFG_VREFBUF_ITLINE24 >> 0) & 0xFFFFFFFF) ) </loc>
//    <item> SFDITEM_FIELD__SYSCFG_VREFBUF_ITLINE24_I2C2 </item>
//  </rtree>
//  


// ---------------------  Register Item Address: SYSCFG_VREFBUF_ITLINE25  -------------------------
// SVD Line: 19851

unsigned int SYSCFG_VREFBUF_ITLINE25 __AT (0x400100E4);



// ------------------------  Field Item: SYSCFG_VREFBUF_ITLINE25_SPI1  ----------------------------
// SVD Line: 19861

//  <item> SFDITEM_FIELD__SYSCFG_VREFBUF_ITLINE25_SPI1
//    <name> SPI1 </name>
//    <r> 
//    <i> [Bit 0] RO (@ 0x400100E4) SPI1 </i>
//    <check> 
//      <loc> ( (unsigned int) SYSCFG_VREFBUF_ITLINE25 ) </loc>
//      <o.0..0> SPI1
//    </check>
//  </item>
//  


// -------------------------  Register RTree: SYSCFG_VREFBUF_ITLINE25  ----------------------------
// SVD Line: 19851

//  <rtree> SFDITEM_REG__SYSCFG_VREFBUF_ITLINE25
//    <name> ITLINE25 </name>
//    <r> 
//    <i> [Bits 31..0] RO (@ 0x400100E4) interrupt line 25 status  register </i>
//    <loc> ( (unsigned int)((SYSCFG_VREFBUF_ITLINE25 >> 0) & 0xFFFFFFFF) ) </loc>
//    <item> SFDITEM_FIELD__SYSCFG_VREFBUF_ITLINE25_SPI1 </item>
//  </rtree>
//  


// ---------------------  Register Item Address: SYSCFG_VREFBUF_ITLINE26  -------------------------
// SVD Line: 19869

unsigned int SYSCFG_VREFBUF_ITLINE26 __AT (0x400100E8);



// ------------------------  Field Item: SYSCFG_VREFBUF_ITLINE26_SPI2  ----------------------------
// SVD Line: 19879

//  <item> SFDITEM_FIELD__SYSCFG_VREFBUF_ITLINE26_SPI2
//    <name> SPI2 </name>
//    <r> 
//    <i> [Bit 0] RO (@ 0x400100E8) SPI2 </i>
//    <check> 
//      <loc> ( (unsigned int) SYSCFG_VREFBUF_ITLINE26 ) </loc>
//      <o.0..0> SPI2
//    </check>
//  </item>
//  


// -------------------------  Register RTree: SYSCFG_VREFBUF_ITLINE26  ----------------------------
// SVD Line: 19869

//  <rtree> SFDITEM_REG__SYSCFG_VREFBUF_ITLINE26
//    <name> ITLINE26 </name>
//    <r> 
//    <i> [Bits 31..0] RO (@ 0x400100E8) interrupt line 26 status  register </i>
//    <loc> ( (unsigned int)((SYSCFG_VREFBUF_ITLINE26 >> 0) & 0xFFFFFFFF) ) </loc>
//    <item> SFDITEM_FIELD__SYSCFG_VREFBUF_ITLINE26_SPI2 </item>
//  </rtree>
//  


// ---------------------  Register Item Address: SYSCFG_VREFBUF_ITLINE27  -------------------------
// SVD Line: 19887

unsigned int SYSCFG_VREFBUF_ITLINE27 __AT (0x400100EC);



// -----------------------  Field Item: SYSCFG_VREFBUF_ITLINE27_USART1  ---------------------------
// SVD Line: 19897

//  <item> SFDITEM_FIELD__SYSCFG_VREFBUF_ITLINE27_USART1
//    <name> USART1 </name>
//    <r> 
//    <i> [Bit 0] RO (@ 0x400100EC) USART1 </i>
//    <check> 
//      <loc> ( (unsigned int) SYSCFG_VREFBUF_ITLINE27 ) </loc>
//      <o.0..0> USART1
//    </check>
//  </item>
//  


// -------------------------  Register RTree: SYSCFG_VREFBUF_ITLINE27  ----------------------------
// SVD Line: 19887

//  <rtree> SFDITEM_REG__SYSCFG_VREFBUF_ITLINE27
//    <name> ITLINE27 </name>
//    <r> 
//    <i> [Bits 31..0] RO (@ 0x400100EC) interrupt line 27 status  register </i>
//    <loc> ( (unsigned int)((SYSCFG_VREFBUF_ITLINE27 >> 0) & 0xFFFFFFFF) ) </loc>
//    <item> SFDITEM_FIELD__SYSCFG_VREFBUF_ITLINE27_USART1 </item>
//  </rtree>
//  


// ---------------------  Register Item Address: SYSCFG_VREFBUF_ITLINE28  -------------------------
// SVD Line: 19905

unsigned int SYSCFG_VREFBUF_ITLINE28 __AT (0x400100F0);



// -----------------------  Field Item: SYSCFG_VREFBUF_ITLINE28_USART2  ---------------------------
// SVD Line: 19915

//  <item> SFDITEM_FIELD__SYSCFG_VREFBUF_ITLINE28_USART2
//    <name> USART2 </name>
//    <r> 
//    <i> [Bit 0] RO (@ 0x400100F0) USART2 </i>
//    <check> 
//      <loc> ( (unsigned int) SYSCFG_VREFBUF_ITLINE28 ) </loc>
//      <o.0..0> USART2
//    </check>
//  </item>
//  


// -------------------------  Register RTree: SYSCFG_VREFBUF_ITLINE28  ----------------------------
// SVD Line: 19905

//  <rtree> SFDITEM_REG__SYSCFG_VREFBUF_ITLINE28
//    <name> ITLINE28 </name>
//    <r> 
//    <i> [Bits 31..0] RO (@ 0x400100F0) interrupt line 28 status  register </i>
//    <loc> ( (unsigned int)((SYSCFG_VREFBUF_ITLINE28 >> 0) & 0xFFFFFFFF) ) </loc>
//    <item> SFDITEM_FIELD__SYSCFG_VREFBUF_ITLINE28_USART2 </item>
//  </rtree>
//  


// ---------------------  Register Item Address: SYSCFG_VREFBUF_ITLINE29  -------------------------
// SVD Line: 19923

unsigned int SYSCFG_VREFBUF_ITLINE29 __AT (0x400100F4);



// -----------------------  Field Item: SYSCFG_VREFBUF_ITLINE29_USART3  ---------------------------
// SVD Line: 19933

//  <item> SFDITEM_FIELD__SYSCFG_VREFBUF_ITLINE29_USART3
//    <name> USART3 </name>
//    <r> 
//    <i> [Bit 0] RO (@ 0x400100F4) USART3 </i>
//    <check> 
//      <loc> ( (unsigned int) SYSCFG_VREFBUF_ITLINE29 ) </loc>
//      <o.0..0> USART3
//    </check>
//  </item>
//  


// -----------------------  Field Item: SYSCFG_VREFBUF_ITLINE29_USART4  ---------------------------
// SVD Line: 19939

//  <item> SFDITEM_FIELD__SYSCFG_VREFBUF_ITLINE29_USART4
//    <name> USART4 </name>
//    <r> 
//    <i> [Bit 1] RO (@ 0x400100F4) USART4 </i>
//    <check> 
//      <loc> ( (unsigned int) SYSCFG_VREFBUF_ITLINE29 ) </loc>
//      <o.1..1> USART4
//    </check>
//  </item>
//  


// -----------------------  Field Item: SYSCFG_VREFBUF_ITLINE29_USART5  ---------------------------
// SVD Line: 19945

//  <item> SFDITEM_FIELD__SYSCFG_VREFBUF_ITLINE29_USART5
//    <name> USART5 </name>
//    <r> 
//    <i> [Bit 2] RO (@ 0x400100F4) USART5 </i>
//    <check> 
//      <loc> ( (unsigned int) SYSCFG_VREFBUF_ITLINE29 ) </loc>
//      <o.2..2> USART5
//    </check>
//  </item>
//  


// -------------------------  Register RTree: SYSCFG_VREFBUF_ITLINE29  ----------------------------
// SVD Line: 19923

//  <rtree> SFDITEM_REG__SYSCFG_VREFBUF_ITLINE29
//    <name> ITLINE29 </name>
//    <r> 
//    <i> [Bits 31..0] RO (@ 0x400100F4) interrupt line 29 status  register </i>
//    <loc> ( (unsigned int)((SYSCFG_VREFBUF_ITLINE29 >> 0) & 0xFFFFFFFF) ) </loc>
//    <item> SFDITEM_FIELD__SYSCFG_VREFBUF_ITLINE29_USART3 </item>
//    <item> SFDITEM_FIELD__SYSCFG_VREFBUF_ITLINE29_USART4 </item>
//    <item> SFDITEM_FIELD__SYSCFG_VREFBUF_ITLINE29_USART5 </item>
//  </rtree>
//  


// ---------------------  Register Item Address: SYSCFG_VREFBUF_ITLINE30  -------------------------
// SVD Line: 19953

unsigned int SYSCFG_VREFBUF_ITLINE30 __AT (0x400100F8);



// -----------------------  Field Item: SYSCFG_VREFBUF_ITLINE30_USART2  ---------------------------
// SVD Line: 19963

//  <item> SFDITEM_FIELD__SYSCFG_VREFBUF_ITLINE30_USART2
//    <name> USART2 </name>
//    <r> 
//    <i> [Bit 0] RO (@ 0x400100F8) CEC </i>
//    <check> 
//      <loc> ( (unsigned int) SYSCFG_VREFBUF_ITLINE30 ) </loc>
//      <o.0..0> USART2
//    </check>
//  </item>
//  


// -------------------------  Register RTree: SYSCFG_VREFBUF_ITLINE30  ----------------------------
// SVD Line: 19953

//  <rtree> SFDITEM_REG__SYSCFG_VREFBUF_ITLINE30
//    <name> ITLINE30 </name>
//    <r> 
//    <i> [Bits 31..0] RO (@ 0x400100F8) interrupt line 30 status  register </i>
//    <loc> ( (unsigned int)((SYSCFG_VREFBUF_ITLINE30 >> 0) & 0xFFFFFFFF) ) </loc>
//    <item> SFDITEM_FIELD__SYSCFG_VREFBUF_ITLINE30_USART2 </item>
//  </rtree>
//  


// ---------------------  Register Item Address: SYSCFG_VREFBUF_ITLINE31  -------------------------
// SVD Line: 19971

unsigned int SYSCFG_VREFBUF_ITLINE31 __AT (0x400100FC);



// -------------------------  Field Item: SYSCFG_VREFBUF_ITLINE31_RNG  ----------------------------
// SVD Line: 19981

//  <item> SFDITEM_FIELD__SYSCFG_VREFBUF_ITLINE31_RNG
//    <name> RNG </name>
//    <r> 
//    <i> [Bit 0] RO (@ 0x400100FC) RNG </i>
//    <check> 
//      <loc> ( (unsigned int) SYSCFG_VREFBUF_ITLINE31 ) </loc>
//      <o.0..0> RNG
//    </check>
//  </item>
//  


// -------------------------  Field Item: SYSCFG_VREFBUF_ITLINE31_AES  ----------------------------
// SVD Line: 19987

//  <item> SFDITEM_FIELD__SYSCFG_VREFBUF_ITLINE31_AES
//    <name> AES </name>
//    <r> 
//    <i> [Bit 1] RO (@ 0x400100FC) AES </i>
//    <check> 
//      <loc> ( (unsigned int) SYSCFG_VREFBUF_ITLINE31 ) </loc>
//      <o.1..1> AES
//    </check>
//  </item>
//  


// -------------------------  Register RTree: SYSCFG_VREFBUF_ITLINE31  ----------------------------
// SVD Line: 19971

//  <rtree> SFDITEM_REG__SYSCFG_VREFBUF_ITLINE31
//    <name> ITLINE31 </name>
//    <r> 
//    <i> [Bits 31..0] RO (@ 0x400100FC) interrupt line 31 status  register </i>
//    <loc> ( (unsigned int)((SYSCFG_VREFBUF_ITLINE31 >> 0) & 0xFFFFFFFF) ) </loc>
//    <item> SFDITEM_FIELD__SYSCFG_VREFBUF_ITLINE31_RNG </item>
//    <item> SFDITEM_FIELD__SYSCFG_VREFBUF_ITLINE31_AES </item>
//  </rtree>
//  


// -----------------------------  Peripheral View: SYSCFG_VREFBUF  --------------------------------
// SVD Line: 19011

//  <view> SYSCFG_VREFBUF
//    <name> SYSCFG_VREFBUF </name>
//    <item> SFDITEM_REG__SYSCFG_VREFBUF_VREFBUF_CSR </item>
//    <item> SFDITEM_REG__SYSCFG_VREFBUF_VREFBUF_CCR </item>
//    <item> SFDITEM_REG__SYSCFG_VREFBUF_CFGR1 </item>
//    <item> SFDITEM_REG__SYSCFG_VREFBUF_CFGR2 </item>
//    <item> SFDITEM_REG__SYSCFG_VREFBUF_ITLINE0 </item>
//    <item> SFDITEM_REG__SYSCFG_VREFBUF_ITLINE1 </item>
//    <item> SFDITEM_REG__SYSCFG_VREFBUF_ITLINE2 </item>
//    <item> SFDITEM_REG__SYSCFG_VREFBUF_ITLINE3 </item>
//    <item> SFDITEM_REG__SYSCFG_VREFBUF_ITLINE4 </item>
//    <item> SFDITEM_REG__SYSCFG_VREFBUF_ITLINE5 </item>
//    <item> SFDITEM_REG__SYSCFG_VREFBUF_ITLINE6 </item>
//    <item> SFDITEM_REG__SYSCFG_VREFBUF_ITLINE7 </item>
//    <item> SFDITEM_REG__SYSCFG_VREFBUF_ITLINE8 </item>
//    <item> SFDITEM_REG__SYSCFG_VREFBUF_ITLINE9 </item>
//    <item> SFDITEM_REG__SYSCFG_VREFBUF_ITLINE10 </item>
//    <item> SFDITEM_REG__SYSCFG_VREFBUF_ITLINE11 </item>
//    <item> SFDITEM_REG__SYSCFG_VREFBUF_ITLINE12 </item>
//    <item> SFDITEM_REG__SYSCFG_VREFBUF_ITLINE13 </item>
//    <item> SFDITEM_REG__SYSCFG_VREFBUF_ITLINE14 </item>
//    <item> SFDITEM_REG__SYSCFG_VREFBUF_ITLINE15 </item>
//    <item> SFDITEM_REG__SYSCFG_VREFBUF_ITLINE16 </item>
//    <item> SFDITEM_REG__SYSCFG_VREFBUF_ITLINE17 </item>
//    <item> SFDITEM_REG__SYSCFG_VREFBUF_ITLINE18 </item>
//    <item> SFDITEM_REG__SYSCFG_VREFBUF_ITLINE19 </item>
//    <item> SFDITEM_REG__SYSCFG_VREFBUF_ITLINE20 </item>
//    <item> SFDITEM_REG__SYSCFG_VREFBUF_ITLINE21 </item>
//    <item> SFDITEM_REG__SYSCFG_VREFBUF_ITLINE22 </item>
//    <item> SFDITEM_REG__SYSCFG_VREFBUF_ITLINE23 </item>
//    <item> SFDITEM_REG__SYSCFG_VREFBUF_ITLINE24 </item>
//    <item> SFDITEM_REG__SYSCFG_VREFBUF_ITLINE25 </item>
//    <item> SFDITEM_REG__SYSCFG_VREFBUF_ITLINE26 </item>
//    <item> SFDITEM_REG__SYSCFG_VREFBUF_ITLINE27 </item>
//    <item> SFDITEM_REG__SYSCFG_VREFBUF_ITLINE28 </item>
//    <item> SFDITEM_REG__SYSCFG_VREFBUF_ITLINE29 </item>
//    <item> SFDITEM_REG__SYSCFG_VREFBUF_ITLINE30 </item>
//    <item> SFDITEM_REG__SYSCFG_VREFBUF_ITLINE31 </item>
//  </view>
//  


// -----------------------------  Register Item Address: TAMP_CR1  --------------------------------
// SVD Line: 20008

unsigned int TAMP_CR1 __AT (0x4000B000);



// -------------------------------  Field Item: TAMP_CR1_TAMP1E  ----------------------------------
// SVD Line: 20017

//  <item> SFDITEM_FIELD__TAMP_CR1_TAMP1E
//    <name> TAMP1E </name>
//    <rw> 
//    <i> [Bit 0] RW (@ 0x4000B000) TAMP1E </i>
//    <check> 
//      <loc> ( (unsigned int) TAMP_CR1 ) </loc>
//      <o.0..0> TAMP1E
//    </check>
//  </item>
//  


// -------------------------------  Field Item: TAMP_CR1_TAMP2E  ----------------------------------
// SVD Line: 20023

//  <item> SFDITEM_FIELD__TAMP_CR1_TAMP2E
//    <name> TAMP2E </name>
//    <rw> 
//    <i> [Bit 1] RW (@ 0x4000B000) TAMP2E </i>
//    <check> 
//      <loc> ( (unsigned int) TAMP_CR1 ) </loc>
//      <o.1..1> TAMP2E
//    </check>
//  </item>
//  


// ------------------------------  Field Item: TAMP_CR1_ITAMP1E  ----------------------------------
// SVD Line: 20029

//  <item> SFDITEM_FIELD__TAMP_CR1_ITAMP1E
//    <name> ITAMP1E </name>
//    <rw> 
//    <i> [Bit 16] RW (@ 0x4000B000) ITAMP1E </i>
//    <check> 
//      <loc> ( (unsigned int) TAMP_CR1 ) </loc>
//      <o.16..16> ITAMP1E
//    </check>
//  </item>
//  


// ------------------------------  Field Item: TAMP_CR1_ITAMP3E  ----------------------------------
// SVD Line: 20035

//  <item> SFDITEM_FIELD__TAMP_CR1_ITAMP3E
//    <name> ITAMP3E </name>
//    <rw> 
//    <i> [Bit 18] RW (@ 0x4000B000) ITAMP3E </i>
//    <check> 
//      <loc> ( (unsigned int) TAMP_CR1 ) </loc>
//      <o.18..18> ITAMP3E
//    </check>
//  </item>
//  


// ------------------------------  Field Item: TAMP_CR1_ITAMP4E  ----------------------------------
// SVD Line: 20041

//  <item> SFDITEM_FIELD__TAMP_CR1_ITAMP4E
//    <name> ITAMP4E </name>
//    <rw> 
//    <i> [Bit 19] RW (@ 0x4000B000) ITAMP4E </i>
//    <check> 
//      <loc> ( (unsigned int) TAMP_CR1 ) </loc>
//      <o.19..19> ITAMP4E
//    </check>
//  </item>
//  


// ------------------------------  Field Item: TAMP_CR1_ITAMP5E  ----------------------------------
// SVD Line: 20047

//  <item> SFDITEM_FIELD__TAMP_CR1_ITAMP5E
//    <name> ITAMP5E </name>
//    <rw> 
//    <i> [Bit 20] RW (@ 0x4000B000) ITAMP5E </i>
//    <check> 
//      <loc> ( (unsigned int) TAMP_CR1 ) </loc>
//      <o.20..20> ITAMP5E
//    </check>
//  </item>
//  


// ------------------------------  Field Item: TAMP_CR1_ITAMP6E  ----------------------------------
// SVD Line: 20053

//  <item> SFDITEM_FIELD__TAMP_CR1_ITAMP6E
//    <name> ITAMP6E </name>
//    <rw> 
//    <i> [Bit 21] RW (@ 0x4000B000) ITAMP6E </i>
//    <check> 
//      <loc> ( (unsigned int) TAMP_CR1 ) </loc>
//      <o.21..21> ITAMP6E
//    </check>
//  </item>
//  


// --------------------------------  Register RTree: TAMP_CR1  ------------------------------------
// SVD Line: 20008

//  <rtree> SFDITEM_REG__TAMP_CR1
//    <name> CR1 </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x4000B000) control register 1 </i>
//    <loc> ( (unsigned int)((TAMP_CR1 >> 0) & 0xFFFFFFFF), ((TAMP_CR1 = (TAMP_CR1 & ~(0x3D0003UL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0x3D0003) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__TAMP_CR1_TAMP1E </item>
//    <item> SFDITEM_FIELD__TAMP_CR1_TAMP2E </item>
//    <item> SFDITEM_FIELD__TAMP_CR1_ITAMP1E </item>
//    <item> SFDITEM_FIELD__TAMP_CR1_ITAMP3E </item>
//    <item> SFDITEM_FIELD__TAMP_CR1_ITAMP4E </item>
//    <item> SFDITEM_FIELD__TAMP_CR1_ITAMP5E </item>
//    <item> SFDITEM_FIELD__TAMP_CR1_ITAMP6E </item>
//  </rtree>
//  


// -----------------------------  Register Item Address: TAMP_CR2  --------------------------------
// SVD Line: 20061

unsigned int TAMP_CR2 __AT (0x4000B004);



// -----------------------------  Field Item: TAMP_CR2_TAMP1NOER  ---------------------------------
// SVD Line: 20070

//  <item> SFDITEM_FIELD__TAMP_CR2_TAMP1NOER
//    <name> TAMP1NOER </name>
//    <rw> 
//    <i> [Bit 0] RW (@ 0x4000B004) TAMP1NOER </i>
//    <check> 
//      <loc> ( (unsigned int) TAMP_CR2 ) </loc>
//      <o.0..0> TAMP1NOER
//    </check>
//  </item>
//  


// -----------------------------  Field Item: TAMP_CR2_TAMP2NOER  ---------------------------------
// SVD Line: 20076

//  <item> SFDITEM_FIELD__TAMP_CR2_TAMP2NOER
//    <name> TAMP2NOER </name>
//    <rw> 
//    <i> [Bit 1] RW (@ 0x4000B004) TAMP2NOER </i>
//    <check> 
//      <loc> ( (unsigned int) TAMP_CR2 ) </loc>
//      <o.1..1> TAMP2NOER
//    </check>
//  </item>
//  


// ------------------------------  Field Item: TAMP_CR2_TAMP1MSK  ---------------------------------
// SVD Line: 20082

//  <item> SFDITEM_FIELD__TAMP_CR2_TAMP1MSK
//    <name> TAMP1MSK </name>
//    <rw> 
//    <i> [Bit 16] RW (@ 0x4000B004) TAMP1MSK </i>
//    <check> 
//      <loc> ( (unsigned int) TAMP_CR2 ) </loc>
//      <o.16..16> TAMP1MSK
//    </check>
//  </item>
//  


// ------------------------------  Field Item: TAMP_CR2_TAMP2MSK  ---------------------------------
// SVD Line: 20088

//  <item> SFDITEM_FIELD__TAMP_CR2_TAMP2MSK
//    <name> TAMP2MSK </name>
//    <rw> 
//    <i> [Bit 17] RW (@ 0x4000B004) TAMP2MSK </i>
//    <check> 
//      <loc> ( (unsigned int) TAMP_CR2 ) </loc>
//      <o.17..17> TAMP2MSK
//    </check>
//  </item>
//  


// ------------------------------  Field Item: TAMP_CR2_TAMP1TRG  ---------------------------------
// SVD Line: 20094

//  <item> SFDITEM_FIELD__TAMP_CR2_TAMP1TRG
//    <name> TAMP1TRG </name>
//    <rw> 
//    <i> [Bit 24] RW (@ 0x4000B004) TAMP1TRG </i>
//    <check> 
//      <loc> ( (unsigned int) TAMP_CR2 ) </loc>
//      <o.24..24> TAMP1TRG
//    </check>
//  </item>
//  


// ------------------------------  Field Item: TAMP_CR2_TAMP2TRG  ---------------------------------
// SVD Line: 20100

//  <item> SFDITEM_FIELD__TAMP_CR2_TAMP2TRG
//    <name> TAMP2TRG </name>
//    <rw> 
//    <i> [Bit 25] RW (@ 0x4000B004) TAMP2TRG </i>
//    <check> 
//      <loc> ( (unsigned int) TAMP_CR2 ) </loc>
//      <o.25..25> TAMP2TRG
//    </check>
//  </item>
//  


// --------------------------------  Register RTree: TAMP_CR2  ------------------------------------
// SVD Line: 20061

//  <rtree> SFDITEM_REG__TAMP_CR2
//    <name> CR2 </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x4000B004) control register 2 </i>
//    <loc> ( (unsigned int)((TAMP_CR2 >> 0) & 0xFFFFFFFF), ((TAMP_CR2 = (TAMP_CR2 & ~(0x3030003UL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0x3030003) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__TAMP_CR2_TAMP1NOER </item>
//    <item> SFDITEM_FIELD__TAMP_CR2_TAMP2NOER </item>
//    <item> SFDITEM_FIELD__TAMP_CR2_TAMP1MSK </item>
//    <item> SFDITEM_FIELD__TAMP_CR2_TAMP2MSK </item>
//    <item> SFDITEM_FIELD__TAMP_CR2_TAMP1TRG </item>
//    <item> SFDITEM_FIELD__TAMP_CR2_TAMP2TRG </item>
//  </rtree>
//  


// ----------------------------  Register Item Address: TAMP_FLTCR  -------------------------------
// SVD Line: 20108

unsigned int TAMP_FLTCR __AT (0x4000B00C);



// -----------------------------  Field Item: TAMP_FLTCR_TAMPFREQ  --------------------------------
// SVD Line: 20117

//  <item> SFDITEM_FIELD__TAMP_FLTCR_TAMPFREQ
//    <name> TAMPFREQ </name>
//    <rw> 
//    <i> [Bits 2..0] RW (@ 0x4000B00C) TAMPFREQ </i>
//    <edit> 
//      <loc> ( (unsigned char)((TAMP_FLTCR >> 0) & 0x7), ((TAMP_FLTCR = (TAMP_FLTCR & ~(0x7UL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0x7) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -----------------------------  Field Item: TAMP_FLTCR_TAMPFLT  ---------------------------------
// SVD Line: 20123

//  <item> SFDITEM_FIELD__TAMP_FLTCR_TAMPFLT
//    <name> TAMPFLT </name>
//    <rw> 
//    <i> [Bits 4..3] RW (@ 0x4000B00C) TAMPFLT </i>
//    <edit> 
//      <loc> ( (unsigned char)((TAMP_FLTCR >> 3) & 0x3), ((TAMP_FLTCR = (TAMP_FLTCR & ~(0x3UL << 3 )) | ((unsigned long)(Gui_u8:GuiVal & 0x3) << 3 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -----------------------------  Field Item: TAMP_FLTCR_TAMPPRCH  --------------------------------
// SVD Line: 20129

//  <item> SFDITEM_FIELD__TAMP_FLTCR_TAMPPRCH
//    <name> TAMPPRCH </name>
//    <rw> 
//    <i> [Bits 6..5] RW (@ 0x4000B00C) TAMPPRCH </i>
//    <edit> 
//      <loc> ( (unsigned char)((TAMP_FLTCR >> 5) & 0x3), ((TAMP_FLTCR = (TAMP_FLTCR & ~(0x3UL << 5 )) | ((unsigned long)(Gui_u8:GuiVal & 0x3) << 5 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ----------------------------  Field Item: TAMP_FLTCR_TAMPPUDIS  --------------------------------
// SVD Line: 20135

//  <item> SFDITEM_FIELD__TAMP_FLTCR_TAMPPUDIS
//    <name> TAMPPUDIS </name>
//    <rw> 
//    <i> [Bit 7] RW (@ 0x4000B00C) TAMPPUDIS </i>
//    <check> 
//      <loc> ( (unsigned int) TAMP_FLTCR ) </loc>
//      <o.7..7> TAMPPUDIS
//    </check>
//  </item>
//  


// -------------------------------  Register RTree: TAMP_FLTCR  -----------------------------------
// SVD Line: 20108

//  <rtree> SFDITEM_REG__TAMP_FLTCR
//    <name> FLTCR </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x4000B00C) TAMP filter control register </i>
//    <loc> ( (unsigned int)((TAMP_FLTCR >> 0) & 0xFFFFFFFF), ((TAMP_FLTCR = (TAMP_FLTCR & ~(0xFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__TAMP_FLTCR_TAMPFREQ </item>
//    <item> SFDITEM_FIELD__TAMP_FLTCR_TAMPFLT </item>
//    <item> SFDITEM_FIELD__TAMP_FLTCR_TAMPPRCH </item>
//    <item> SFDITEM_FIELD__TAMP_FLTCR_TAMPPUDIS </item>
//  </rtree>
//  


// -----------------------------  Register Item Address: TAMP_IER  --------------------------------
// SVD Line: 20143

unsigned int TAMP_IER __AT (0x4000B02C);



// ------------------------------  Field Item: TAMP_IER_TAMP1IE  ----------------------------------
// SVD Line: 20152

//  <item> SFDITEM_FIELD__TAMP_IER_TAMP1IE
//    <name> TAMP1IE </name>
//    <rw> 
//    <i> [Bit 0] RW (@ 0x4000B02C) TAMP1IE </i>
//    <check> 
//      <loc> ( (unsigned int) TAMP_IER ) </loc>
//      <o.0..0> TAMP1IE
//    </check>
//  </item>
//  


// ------------------------------  Field Item: TAMP_IER_TAMP2IE  ----------------------------------
// SVD Line: 20158

//  <item> SFDITEM_FIELD__TAMP_IER_TAMP2IE
//    <name> TAMP2IE </name>
//    <rw> 
//    <i> [Bit 1] RW (@ 0x4000B02C) TAMP2IE </i>
//    <check> 
//      <loc> ( (unsigned int) TAMP_IER ) </loc>
//      <o.1..1> TAMP2IE
//    </check>
//  </item>
//  


// ------------------------------  Field Item: TAMP_IER_ITAMP1IE  ---------------------------------
// SVD Line: 20164

//  <item> SFDITEM_FIELD__TAMP_IER_ITAMP1IE
//    <name> ITAMP1IE </name>
//    <rw> 
//    <i> [Bit 16] RW (@ 0x4000B02C) ITAMP1IE </i>
//    <check> 
//      <loc> ( (unsigned int) TAMP_IER ) </loc>
//      <o.16..16> ITAMP1IE
//    </check>
//  </item>
//  


// ------------------------------  Field Item: TAMP_IER_ITAMP3IE  ---------------------------------
// SVD Line: 20170

//  <item> SFDITEM_FIELD__TAMP_IER_ITAMP3IE
//    <name> ITAMP3IE </name>
//    <rw> 
//    <i> [Bit 18] RW (@ 0x4000B02C) ITAMP3IE </i>
//    <check> 
//      <loc> ( (unsigned int) TAMP_IER ) </loc>
//      <o.18..18> ITAMP3IE
//    </check>
//  </item>
//  


// ------------------------------  Field Item: TAMP_IER_ITAMP4IE  ---------------------------------
// SVD Line: 20176

//  <item> SFDITEM_FIELD__TAMP_IER_ITAMP4IE
//    <name> ITAMP4IE </name>
//    <rw> 
//    <i> [Bit 19] RW (@ 0x4000B02C) ITAMP4IE </i>
//    <check> 
//      <loc> ( (unsigned int) TAMP_IER ) </loc>
//      <o.19..19> ITAMP4IE
//    </check>
//  </item>
//  


// ------------------------------  Field Item: TAMP_IER_ITAMP5IE  ---------------------------------
// SVD Line: 20182

//  <item> SFDITEM_FIELD__TAMP_IER_ITAMP5IE
//    <name> ITAMP5IE </name>
//    <rw> 
//    <i> [Bit 20] RW (@ 0x4000B02C) ITAMP5IE </i>
//    <check> 
//      <loc> ( (unsigned int) TAMP_IER ) </loc>
//      <o.20..20> ITAMP5IE
//    </check>
//  </item>
//  


// ------------------------------  Field Item: TAMP_IER_ITAMP6IE  ---------------------------------
// SVD Line: 20188

//  <item> SFDITEM_FIELD__TAMP_IER_ITAMP6IE
//    <name> ITAMP6IE </name>
//    <rw> 
//    <i> [Bit 21] RW (@ 0x4000B02C) ITAMP6IE </i>
//    <check> 
//      <loc> ( (unsigned int) TAMP_IER ) </loc>
//      <o.21..21> ITAMP6IE
//    </check>
//  </item>
//  


// --------------------------------  Register RTree: TAMP_IER  ------------------------------------
// SVD Line: 20143

//  <rtree> SFDITEM_REG__TAMP_IER
//    <name> IER </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x4000B02C) TAMP interrupt enable register </i>
//    <loc> ( (unsigned int)((TAMP_IER >> 0) & 0xFFFFFFFF), ((TAMP_IER = (TAMP_IER & ~(0x3D0003UL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0x3D0003) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__TAMP_IER_TAMP1IE </item>
//    <item> SFDITEM_FIELD__TAMP_IER_TAMP2IE </item>
//    <item> SFDITEM_FIELD__TAMP_IER_ITAMP1IE </item>
//    <item> SFDITEM_FIELD__TAMP_IER_ITAMP3IE </item>
//    <item> SFDITEM_FIELD__TAMP_IER_ITAMP4IE </item>
//    <item> SFDITEM_FIELD__TAMP_IER_ITAMP5IE </item>
//    <item> SFDITEM_FIELD__TAMP_IER_ITAMP6IE </item>
//  </rtree>
//  


// -----------------------------  Register Item Address: TAMP_SR  ---------------------------------
// SVD Line: 20196

unsigned int TAMP_SR __AT (0x4000B030);



// -------------------------------  Field Item: TAMP_SR_TAMP1F  -----------------------------------
// SVD Line: 20205

//  <item> SFDITEM_FIELD__TAMP_SR_TAMP1F
//    <name> TAMP1F </name>
//    <r> 
//    <i> [Bit 0] RO (@ 0x4000B030) TAMP1F </i>
//    <check> 
//      <loc> ( (unsigned int) TAMP_SR ) </loc>
//      <o.0..0> TAMP1F
//    </check>
//  </item>
//  


// -------------------------------  Field Item: TAMP_SR_TAMP2F  -----------------------------------
// SVD Line: 20211

//  <item> SFDITEM_FIELD__TAMP_SR_TAMP2F
//    <name> TAMP2F </name>
//    <r> 
//    <i> [Bit 1] RO (@ 0x4000B030) TAMP2F </i>
//    <check> 
//      <loc> ( (unsigned int) TAMP_SR ) </loc>
//      <o.1..1> TAMP2F
//    </check>
//  </item>
//  


// -------------------------------  Field Item: TAMP_SR_ITAMP1F  ----------------------------------
// SVD Line: 20217

//  <item> SFDITEM_FIELD__TAMP_SR_ITAMP1F
//    <name> ITAMP1F </name>
//    <r> 
//    <i> [Bit 16] RO (@ 0x4000B030) ITAMP1F </i>
//    <check> 
//      <loc> ( (unsigned int) TAMP_SR ) </loc>
//      <o.16..16> ITAMP1F
//    </check>
//  </item>
//  


// -------------------------------  Field Item: TAMP_SR_ITAMP3F  ----------------------------------
// SVD Line: 20223

//  <item> SFDITEM_FIELD__TAMP_SR_ITAMP3F
//    <name> ITAMP3F </name>
//    <r> 
//    <i> [Bit 18] RO (@ 0x4000B030) ITAMP3F </i>
//    <check> 
//      <loc> ( (unsigned int) TAMP_SR ) </loc>
//      <o.18..18> ITAMP3F
//    </check>
//  </item>
//  


// -------------------------------  Field Item: TAMP_SR_ITAMP4F  ----------------------------------
// SVD Line: 20229

//  <item> SFDITEM_FIELD__TAMP_SR_ITAMP4F
//    <name> ITAMP4F </name>
//    <r> 
//    <i> [Bit 19] RO (@ 0x4000B030) ITAMP4F </i>
//    <check> 
//      <loc> ( (unsigned int) TAMP_SR ) </loc>
//      <o.19..19> ITAMP4F
//    </check>
//  </item>
//  


// -------------------------------  Field Item: TAMP_SR_ITAMP5F  ----------------------------------
// SVD Line: 20235

//  <item> SFDITEM_FIELD__TAMP_SR_ITAMP5F
//    <name> ITAMP5F </name>
//    <r> 
//    <i> [Bit 20] RO (@ 0x4000B030) ITAMP5F </i>
//    <check> 
//      <loc> ( (unsigned int) TAMP_SR ) </loc>
//      <o.20..20> ITAMP5F
//    </check>
//  </item>
//  


// -------------------------------  Field Item: TAMP_SR_ITAMP6F  ----------------------------------
// SVD Line: 20241

//  <item> SFDITEM_FIELD__TAMP_SR_ITAMP6F
//    <name> ITAMP6F </name>
//    <r> 
//    <i> [Bit 21] RO (@ 0x4000B030) ITAMP6F </i>
//    <check> 
//      <loc> ( (unsigned int) TAMP_SR ) </loc>
//      <o.21..21> ITAMP6F
//    </check>
//  </item>
//  


// -------------------------------  Field Item: TAMP_SR_ITAMP7F  ----------------------------------
// SVD Line: 20247

//  <item> SFDITEM_FIELD__TAMP_SR_ITAMP7F
//    <name> ITAMP7F </name>
//    <r> 
//    <i> [Bit 22] RO (@ 0x4000B030) ITAMP7F </i>
//    <check> 
//      <loc> ( (unsigned int) TAMP_SR ) </loc>
//      <o.22..22> ITAMP7F
//    </check>
//  </item>
//  


// ---------------------------------  Register RTree: TAMP_SR  ------------------------------------
// SVD Line: 20196

//  <rtree> SFDITEM_REG__TAMP_SR
//    <name> SR </name>
//    <r> 
//    <i> [Bits 31..0] RO (@ 0x4000B030) TAMP status register </i>
//    <loc> ( (unsigned int)((TAMP_SR >> 0) & 0xFFFFFFFF) ) </loc>
//    <item> SFDITEM_FIELD__TAMP_SR_TAMP1F </item>
//    <item> SFDITEM_FIELD__TAMP_SR_TAMP2F </item>
//    <item> SFDITEM_FIELD__TAMP_SR_ITAMP1F </item>
//    <item> SFDITEM_FIELD__TAMP_SR_ITAMP3F </item>
//    <item> SFDITEM_FIELD__TAMP_SR_ITAMP4F </item>
//    <item> SFDITEM_FIELD__TAMP_SR_ITAMP5F </item>
//    <item> SFDITEM_FIELD__TAMP_SR_ITAMP6F </item>
//    <item> SFDITEM_FIELD__TAMP_SR_ITAMP7F </item>
//  </rtree>
//  


// ----------------------------  Register Item Address: TAMP_MISR  --------------------------------
// SVD Line: 20255

unsigned int TAMP_MISR __AT (0x4000B034);



// ------------------------------  Field Item: TAMP_MISR_TAMP1MF  ---------------------------------
// SVD Line: 20265

//  <item> SFDITEM_FIELD__TAMP_MISR_TAMP1MF
//    <name> TAMP1MF </name>
//    <r> 
//    <i> [Bit 0] RO (@ 0x4000B034) TAMP1MF: </i>
//    <check> 
//      <loc> ( (unsigned int) TAMP_MISR ) </loc>
//      <o.0..0> TAMP1MF
//    </check>
//  </item>
//  


// ------------------------------  Field Item: TAMP_MISR_TAMP2MF  ---------------------------------
// SVD Line: 20271

//  <item> SFDITEM_FIELD__TAMP_MISR_TAMP2MF
//    <name> TAMP2MF </name>
//    <r> 
//    <i> [Bit 1] RO (@ 0x4000B034) TAMP2MF </i>
//    <check> 
//      <loc> ( (unsigned int) TAMP_MISR ) </loc>
//      <o.1..1> TAMP2MF
//    </check>
//  </item>
//  


// -----------------------------  Field Item: TAMP_MISR_ITAMP1MF  ---------------------------------
// SVD Line: 20277

//  <item> SFDITEM_FIELD__TAMP_MISR_ITAMP1MF
//    <name> ITAMP1MF </name>
//    <r> 
//    <i> [Bit 16] RO (@ 0x4000B034) ITAMP1MF </i>
//    <check> 
//      <loc> ( (unsigned int) TAMP_MISR ) </loc>
//      <o.16..16> ITAMP1MF
//    </check>
//  </item>
//  


// -----------------------------  Field Item: TAMP_MISR_ITAMP3MF  ---------------------------------
// SVD Line: 20283

//  <item> SFDITEM_FIELD__TAMP_MISR_ITAMP3MF
//    <name> ITAMP3MF </name>
//    <r> 
//    <i> [Bit 18] RO (@ 0x4000B034) ITAMP3MF </i>
//    <check> 
//      <loc> ( (unsigned int) TAMP_MISR ) </loc>
//      <o.18..18> ITAMP3MF
//    </check>
//  </item>
//  


// -----------------------------  Field Item: TAMP_MISR_ITAMP4MF  ---------------------------------
// SVD Line: 20289

//  <item> SFDITEM_FIELD__TAMP_MISR_ITAMP4MF
//    <name> ITAMP4MF </name>
//    <r> 
//    <i> [Bit 19] RO (@ 0x4000B034) ITAMP4MF </i>
//    <check> 
//      <loc> ( (unsigned int) TAMP_MISR ) </loc>
//      <o.19..19> ITAMP4MF
//    </check>
//  </item>
//  


// -----------------------------  Field Item: TAMP_MISR_ITAMP5MF  ---------------------------------
// SVD Line: 20295

//  <item> SFDITEM_FIELD__TAMP_MISR_ITAMP5MF
//    <name> ITAMP5MF </name>
//    <r> 
//    <i> [Bit 20] RO (@ 0x4000B034) ITAMP5MF </i>
//    <check> 
//      <loc> ( (unsigned int) TAMP_MISR ) </loc>
//      <o.20..20> ITAMP5MF
//    </check>
//  </item>
//  


// -----------------------------  Field Item: TAMP_MISR_ITAMP6MF  ---------------------------------
// SVD Line: 20301

//  <item> SFDITEM_FIELD__TAMP_MISR_ITAMP6MF
//    <name> ITAMP6MF </name>
//    <r> 
//    <i> [Bit 21] RO (@ 0x4000B034) ITAMP6MF </i>
//    <check> 
//      <loc> ( (unsigned int) TAMP_MISR ) </loc>
//      <o.21..21> ITAMP6MF
//    </check>
//  </item>
//  


// --------------------------------  Register RTree: TAMP_MISR  -----------------------------------
// SVD Line: 20255

//  <rtree> SFDITEM_REG__TAMP_MISR
//    <name> MISR </name>
//    <r> 
//    <i> [Bits 31..0] RO (@ 0x4000B034) TAMP masked interrupt status  register </i>
//    <loc> ( (unsigned int)((TAMP_MISR >> 0) & 0xFFFFFFFF) ) </loc>
//    <item> SFDITEM_FIELD__TAMP_MISR_TAMP1MF </item>
//    <item> SFDITEM_FIELD__TAMP_MISR_TAMP2MF </item>
//    <item> SFDITEM_FIELD__TAMP_MISR_ITAMP1MF </item>
//    <item> SFDITEM_FIELD__TAMP_MISR_ITAMP3MF </item>
//    <item> SFDITEM_FIELD__TAMP_MISR_ITAMP4MF </item>
//    <item> SFDITEM_FIELD__TAMP_MISR_ITAMP5MF </item>
//    <item> SFDITEM_FIELD__TAMP_MISR_ITAMP6MF </item>
//  </rtree>
//  


// -----------------------------  Register Item Address: TAMP_SCR  --------------------------------
// SVD Line: 20309

unsigned int TAMP_SCR __AT (0x4000B03C);



// ------------------------------  Field Item: TAMP_SCR_CTAMP1F  ----------------------------------
// SVD Line: 20318

//  <item> SFDITEM_FIELD__TAMP_SCR_CTAMP1F
//    <name> CTAMP1F </name>
//    <w> 
//    <i> [Bit 0] WO (@ 0x4000B03C) CTAMP1F </i>
//    <check> 
//      <loc> ( (unsigned int) TAMP_SCR ) </loc>
//      <o.0..0> CTAMP1F
//    </check>
//  </item>
//  


// ------------------------------  Field Item: TAMP_SCR_CTAMP2F  ----------------------------------
// SVD Line: 20324

//  <item> SFDITEM_FIELD__TAMP_SCR_CTAMP2F
//    <name> CTAMP2F </name>
//    <w> 
//    <i> [Bit 1] WO (@ 0x4000B03C) CTAMP2F </i>
//    <check> 
//      <loc> ( (unsigned int) TAMP_SCR ) </loc>
//      <o.1..1> CTAMP2F
//    </check>
//  </item>
//  


// ------------------------------  Field Item: TAMP_SCR_CITAMP1F  ---------------------------------
// SVD Line: 20330

//  <item> SFDITEM_FIELD__TAMP_SCR_CITAMP1F
//    <name> CITAMP1F </name>
//    <w> 
//    <i> [Bit 16] WO (@ 0x4000B03C) CITAMP1F </i>
//    <check> 
//      <loc> ( (unsigned int) TAMP_SCR ) </loc>
//      <o.16..16> CITAMP1F
//    </check>
//  </item>
//  


// ------------------------------  Field Item: TAMP_SCR_CITAMP3F  ---------------------------------
// SVD Line: 20336

//  <item> SFDITEM_FIELD__TAMP_SCR_CITAMP3F
//    <name> CITAMP3F </name>
//    <w> 
//    <i> [Bit 18] WO (@ 0x4000B03C) CITAMP3F </i>
//    <check> 
//      <loc> ( (unsigned int) TAMP_SCR ) </loc>
//      <o.18..18> CITAMP3F
//    </check>
//  </item>
//  


// ------------------------------  Field Item: TAMP_SCR_CITAMP4F  ---------------------------------
// SVD Line: 20342

//  <item> SFDITEM_FIELD__TAMP_SCR_CITAMP4F
//    <name> CITAMP4F </name>
//    <w> 
//    <i> [Bit 19] WO (@ 0x4000B03C) CITAMP4F </i>
//    <check> 
//      <loc> ( (unsigned int) TAMP_SCR ) </loc>
//      <o.19..19> CITAMP4F
//    </check>
//  </item>
//  


// ------------------------------  Field Item: TAMP_SCR_CITAMP5F  ---------------------------------
// SVD Line: 20348

//  <item> SFDITEM_FIELD__TAMP_SCR_CITAMP5F
//    <name> CITAMP5F </name>
//    <w> 
//    <i> [Bit 20] WO (@ 0x4000B03C) CITAMP5F </i>
//    <check> 
//      <loc> ( (unsigned int) TAMP_SCR ) </loc>
//      <o.20..20> CITAMP5F
//    </check>
//  </item>
//  


// ------------------------------  Field Item: TAMP_SCR_CITAMP6F  ---------------------------------
// SVD Line: 20354

//  <item> SFDITEM_FIELD__TAMP_SCR_CITAMP6F
//    <name> CITAMP6F </name>
//    <w> 
//    <i> [Bit 21] WO (@ 0x4000B03C) CITAMP6F </i>
//    <check> 
//      <loc> ( (unsigned int) TAMP_SCR ) </loc>
//      <o.21..21> CITAMP6F
//    </check>
//  </item>
//  


// ------------------------------  Field Item: TAMP_SCR_CITAMP7F  ---------------------------------
// SVD Line: 20360

//  <item> SFDITEM_FIELD__TAMP_SCR_CITAMP7F
//    <name> CITAMP7F </name>
//    <w> 
//    <i> [Bit 22] WO (@ 0x4000B03C) CITAMP7F </i>
//    <check> 
//      <loc> ( (unsigned int) TAMP_SCR ) </loc>
//      <o.22..22> CITAMP7F
//    </check>
//  </item>
//  


// --------------------------------  Register RTree: TAMP_SCR  ------------------------------------
// SVD Line: 20309

//  <rtree> SFDITEM_REG__TAMP_SCR
//    <name> SCR </name>
//    <w> 
//    <i> [Bits 31..0] WO (@ 0x4000B03C) TAMP status clear register </i>
//    <loc> ( (unsigned int)((TAMP_SCR >> 0) & 0xFFFFFFFF), ((TAMP_SCR = (TAMP_SCR & ~(0x7D0003UL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0x7D0003) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__TAMP_SCR_CTAMP1F </item>
//    <item> SFDITEM_FIELD__TAMP_SCR_CTAMP2F </item>
//    <item> SFDITEM_FIELD__TAMP_SCR_CITAMP1F </item>
//    <item> SFDITEM_FIELD__TAMP_SCR_CITAMP3F </item>
//    <item> SFDITEM_FIELD__TAMP_SCR_CITAMP4F </item>
//    <item> SFDITEM_FIELD__TAMP_SCR_CITAMP5F </item>
//    <item> SFDITEM_FIELD__TAMP_SCR_CITAMP6F </item>
//    <item> SFDITEM_FIELD__TAMP_SCR_CITAMP7F </item>
//  </rtree>
//  


// ----------------------------  Register Item Address: TAMP_BKP0R  -------------------------------
// SVD Line: 20368

unsigned int TAMP_BKP0R __AT (0x4000B100);



// -------------------------------  Field Item: TAMP_BKP0R_BKP  -----------------------------------
// SVD Line: 20377

//  <item> SFDITEM_FIELD__TAMP_BKP0R_BKP
//    <name> BKP </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x4000B100) BKP </i>
//    <edit> 
//      <loc> ( (unsigned int)((TAMP_BKP0R >> 0) & 0xFFFFFFFF), ((TAMP_BKP0R = (TAMP_BKP0R & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -------------------------------  Register RTree: TAMP_BKP0R  -----------------------------------
// SVD Line: 20368

//  <rtree> SFDITEM_REG__TAMP_BKP0R
//    <name> BKP0R </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x4000B100) TAMP backup register </i>
//    <loc> ( (unsigned int)((TAMP_BKP0R >> 0) & 0xFFFFFFFF), ((TAMP_BKP0R = (TAMP_BKP0R & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__TAMP_BKP0R_BKP </item>
//  </rtree>
//  


// ----------------------------  Register Item Address: TAMP_BKP1R  -------------------------------
// SVD Line: 20385

unsigned int TAMP_BKP1R __AT (0x4000B104);



// -------------------------------  Field Item: TAMP_BKP1R_BKP  -----------------------------------
// SVD Line: 20394

//  <item> SFDITEM_FIELD__TAMP_BKP1R_BKP
//    <name> BKP </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x4000B104) BKP </i>
//    <edit> 
//      <loc> ( (unsigned int)((TAMP_BKP1R >> 0) & 0xFFFFFFFF), ((TAMP_BKP1R = (TAMP_BKP1R & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -------------------------------  Register RTree: TAMP_BKP1R  -----------------------------------
// SVD Line: 20385

//  <rtree> SFDITEM_REG__TAMP_BKP1R
//    <name> BKP1R </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x4000B104) TAMP backup register </i>
//    <loc> ( (unsigned int)((TAMP_BKP1R >> 0) & 0xFFFFFFFF), ((TAMP_BKP1R = (TAMP_BKP1R & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__TAMP_BKP1R_BKP </item>
//  </rtree>
//  


// ----------------------------  Register Item Address: TAMP_BKP2R  -------------------------------
// SVD Line: 20402

unsigned int TAMP_BKP2R __AT (0x4000B108);



// -------------------------------  Field Item: TAMP_BKP2R_BKP  -----------------------------------
// SVD Line: 20411

//  <item> SFDITEM_FIELD__TAMP_BKP2R_BKP
//    <name> BKP </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x4000B108) BKP </i>
//    <edit> 
//      <loc> ( (unsigned int)((TAMP_BKP2R >> 0) & 0xFFFFFFFF), ((TAMP_BKP2R = (TAMP_BKP2R & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -------------------------------  Register RTree: TAMP_BKP2R  -----------------------------------
// SVD Line: 20402

//  <rtree> SFDITEM_REG__TAMP_BKP2R
//    <name> BKP2R </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x4000B108) TAMP backup register </i>
//    <loc> ( (unsigned int)((TAMP_BKP2R >> 0) & 0xFFFFFFFF), ((TAMP_BKP2R = (TAMP_BKP2R & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__TAMP_BKP2R_BKP </item>
//  </rtree>
//  


// ----------------------------  Register Item Address: TAMP_BKP3R  -------------------------------
// SVD Line: 20419

unsigned int TAMP_BKP3R __AT (0x4000B10C);



// -------------------------------  Field Item: TAMP_BKP3R_BKP  -----------------------------------
// SVD Line: 20428

//  <item> SFDITEM_FIELD__TAMP_BKP3R_BKP
//    <name> BKP </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x4000B10C) BKP </i>
//    <edit> 
//      <loc> ( (unsigned int)((TAMP_BKP3R >> 0) & 0xFFFFFFFF), ((TAMP_BKP3R = (TAMP_BKP3R & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -------------------------------  Register RTree: TAMP_BKP3R  -----------------------------------
// SVD Line: 20419

//  <rtree> SFDITEM_REG__TAMP_BKP3R
//    <name> BKP3R </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x4000B10C) TAMP backup register </i>
//    <loc> ( (unsigned int)((TAMP_BKP3R >> 0) & 0xFFFFFFFF), ((TAMP_BKP3R = (TAMP_BKP3R & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__TAMP_BKP3R_BKP </item>
//  </rtree>
//  


// ----------------------------  Register Item Address: TAMP_BKP4R  -------------------------------
// SVD Line: 20436

unsigned int TAMP_BKP4R __AT (0x4000B110);



// -------------------------------  Field Item: TAMP_BKP4R_BKP  -----------------------------------
// SVD Line: 20445

//  <item> SFDITEM_FIELD__TAMP_BKP4R_BKP
//    <name> BKP </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x4000B110) BKP </i>
//    <edit> 
//      <loc> ( (unsigned int)((TAMP_BKP4R >> 0) & 0xFFFFFFFF), ((TAMP_BKP4R = (TAMP_BKP4R & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -------------------------------  Register RTree: TAMP_BKP4R  -----------------------------------
// SVD Line: 20436

//  <rtree> SFDITEM_REG__TAMP_BKP4R
//    <name> BKP4R </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x4000B110) TAMP backup register </i>
//    <loc> ( (unsigned int)((TAMP_BKP4R >> 0) & 0xFFFFFFFF), ((TAMP_BKP4R = (TAMP_BKP4R & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__TAMP_BKP4R_BKP </item>
//  </rtree>
//  


// ---------------------------  Register Item Address: TAMP_HWCFGR2  ------------------------------
// SVD Line: 20453

unsigned int TAMP_HWCFGR2 __AT (0x4000B3EC);



// --------------------------  Field Item: TAMP_HWCFGR2_PTIONREG_OUT  -----------------------------
// SVD Line: 20463

//  <item> SFDITEM_FIELD__TAMP_HWCFGR2_PTIONREG_OUT
//    <name> PTIONREG_OUT </name>
//    <r> 
//    <i> [Bits 7..0] RO (@ 0x4000B3EC) PTIONREG_OUT </i>
//    <edit> 
//      <loc> ( (unsigned char)((TAMP_HWCFGR2 >> 0) & 0xFF) ) </loc>
//    </edit>
//  </item>
//  


// ---------------------------  Field Item: TAMP_HWCFGR2_TRUST_ZONE  ------------------------------
// SVD Line: 20469

//  <item> SFDITEM_FIELD__TAMP_HWCFGR2_TRUST_ZONE
//    <name> TRUST_ZONE </name>
//    <r> 
//    <i> [Bits 11..8] RO (@ 0x4000B3EC) TRUST_ZONE </i>
//    <edit> 
//      <loc> ( (unsigned char)((TAMP_HWCFGR2 >> 8) & 0xF) ) </loc>
//    </edit>
//  </item>
//  


// ------------------------------  Register RTree: TAMP_HWCFGR2  ----------------------------------
// SVD Line: 20453

//  <rtree> SFDITEM_REG__TAMP_HWCFGR2
//    <name> HWCFGR2 </name>
//    <r> 
//    <i> [Bits 31..0] RO (@ 0x4000B3EC) TAMP hardware configuration register  2 </i>
//    <loc> ( (unsigned int)((TAMP_HWCFGR2 >> 0) & 0xFFFFFFFF) ) </loc>
//    <item> SFDITEM_FIELD__TAMP_HWCFGR2_PTIONREG_OUT </item>
//    <item> SFDITEM_FIELD__TAMP_HWCFGR2_TRUST_ZONE </item>
//  </rtree>
//  


// ---------------------------  Register Item Address: TAMP_HWCFGR1  ------------------------------
// SVD Line: 20477

unsigned int TAMP_HWCFGR1 __AT (0x4000B3F0);



// --------------------------  Field Item: TAMP_HWCFGR1_BACKUP_REGS  ------------------------------
// SVD Line: 20487

//  <item> SFDITEM_FIELD__TAMP_HWCFGR1_BACKUP_REGS
//    <name> BACKUP_REGS </name>
//    <r> 
//    <i> [Bits 7..0] RO (@ 0x4000B3F0) BACKUP_REGS </i>
//    <edit> 
//      <loc> ( (unsigned char)((TAMP_HWCFGR1 >> 0) & 0xFF) ) </loc>
//    </edit>
//  </item>
//  


// -----------------------------  Field Item: TAMP_HWCFGR1_TAMPER  --------------------------------
// SVD Line: 20493

//  <item> SFDITEM_FIELD__TAMP_HWCFGR1_TAMPER
//    <name> TAMPER </name>
//    <r> 
//    <i> [Bits 11..8] RO (@ 0x4000B3F0) TAMPER </i>
//    <edit> 
//      <loc> ( (unsigned char)((TAMP_HWCFGR1 >> 8) & 0xF) ) </loc>
//    </edit>
//  </item>
//  


// -------------------------  Field Item: TAMP_HWCFGR1_ACTIVE_TAMPER  -----------------------------
// SVD Line: 20499

//  <item> SFDITEM_FIELD__TAMP_HWCFGR1_ACTIVE_TAMPER
//    <name> ACTIVE_TAMPER </name>
//    <r> 
//    <i> [Bits 15..12] RO (@ 0x4000B3F0) ACTIVE_TAMPER </i>
//    <edit> 
//      <loc> ( (unsigned char)((TAMP_HWCFGR1 >> 12) & 0xF) ) </loc>
//    </edit>
//  </item>
//  


// ---------------------------  Field Item: TAMP_HWCFGR1_INT_TAMPER  ------------------------------
// SVD Line: 20505

//  <item> SFDITEM_FIELD__TAMP_HWCFGR1_INT_TAMPER
//    <name> INT_TAMPER </name>
//    <r> 
//    <i> [Bits 31..16] RO (@ 0x4000B3F0) INT_TAMPER </i>
//    <edit> 
//      <loc> ( (unsigned short)((TAMP_HWCFGR1 >> 16) & 0xFFFF) ) </loc>
//    </edit>
//  </item>
//  


// ------------------------------  Register RTree: TAMP_HWCFGR1  ----------------------------------
// SVD Line: 20477

//  <rtree> SFDITEM_REG__TAMP_HWCFGR1
//    <name> HWCFGR1 </name>
//    <r> 
//    <i> [Bits 31..0] RO (@ 0x4000B3F0) TAMP hardware configuration register  1 </i>
//    <loc> ( (unsigned int)((TAMP_HWCFGR1 >> 0) & 0xFFFFFFFF) ) </loc>
//    <item> SFDITEM_FIELD__TAMP_HWCFGR1_BACKUP_REGS </item>
//    <item> SFDITEM_FIELD__TAMP_HWCFGR1_TAMPER </item>
//    <item> SFDITEM_FIELD__TAMP_HWCFGR1_ACTIVE_TAMPER </item>
//    <item> SFDITEM_FIELD__TAMP_HWCFGR1_INT_TAMPER </item>
//  </rtree>
//  


// ----------------------------  Register Item Address: TAMP_VERR  --------------------------------
// SVD Line: 20513

unsigned int TAMP_VERR __AT (0x4000B3F4);



// ------------------------------  Field Item: TAMP_VERR_MINREV  ----------------------------------
// SVD Line: 20522

//  <item> SFDITEM_FIELD__TAMP_VERR_MINREV
//    <name> MINREV </name>
//    <r> 
//    <i> [Bits 3..0] RO (@ 0x4000B3F4) Minor Revision number </i>
//    <edit> 
//      <loc> ( (unsigned char)((TAMP_VERR >> 0) & 0xF) ) </loc>
//    </edit>
//  </item>
//  


// ------------------------------  Field Item: TAMP_VERR_MAJREV  ----------------------------------
// SVD Line: 20528

//  <item> SFDITEM_FIELD__TAMP_VERR_MAJREV
//    <name> MAJREV </name>
//    <r> 
//    <i> [Bits 7..4] RO (@ 0x4000B3F4) Major Revision number </i>
//    <edit> 
//      <loc> ( (unsigned char)((TAMP_VERR >> 4) & 0xF) ) </loc>
//    </edit>
//  </item>
//  


// --------------------------------  Register RTree: TAMP_VERR  -----------------------------------
// SVD Line: 20513

//  <rtree> SFDITEM_REG__TAMP_VERR
//    <name> VERR </name>
//    <r> 
//    <i> [Bits 31..0] RO (@ 0x4000B3F4) EXTI IP Version register </i>
//    <loc> ( (unsigned int)((TAMP_VERR >> 0) & 0xFFFFFFFF) ) </loc>
//    <item> SFDITEM_FIELD__TAMP_VERR_MINREV </item>
//    <item> SFDITEM_FIELD__TAMP_VERR_MAJREV </item>
//  </rtree>
//  


// ----------------------------  Register Item Address: TAMP_IPIDR  -------------------------------
// SVD Line: 20536

unsigned int TAMP_IPIDR __AT (0x4000B3F8);



// -------------------------------  Field Item: TAMP_IPIDR_IPID  ----------------------------------
// SVD Line: 20545

//  <item> SFDITEM_FIELD__TAMP_IPIDR_IPID
//    <name> IPID </name>
//    <r> 
//    <i> [Bits 31..0] RO (@ 0x4000B3F8) IP Identification </i>
//    <edit> 
//      <loc> ( (unsigned int)((TAMP_IPIDR >> 0) & 0xFFFFFFFF) ) </loc>
//    </edit>
//  </item>
//  


// -------------------------------  Register RTree: TAMP_IPIDR  -----------------------------------
// SVD Line: 20536

//  <rtree> SFDITEM_REG__TAMP_IPIDR
//    <name> IPIDR </name>
//    <r> 
//    <i> [Bits 31..0] RO (@ 0x4000B3F8) EXTI Identification register </i>
//    <loc> ( (unsigned int)((TAMP_IPIDR >> 0) & 0xFFFFFFFF) ) </loc>
//    <item> SFDITEM_FIELD__TAMP_IPIDR_IPID </item>
//  </rtree>
//  


// ----------------------------  Register Item Address: TAMP_SIDR  --------------------------------
// SVD Line: 20553

unsigned int TAMP_SIDR __AT (0x4000B3FC);



// --------------------------------  Field Item: TAMP_SIDR_SID  -----------------------------------
// SVD Line: 20562

//  <item> SFDITEM_FIELD__TAMP_SIDR_SID
//    <name> SID </name>
//    <r> 
//    <i> [Bits 31..0] RO (@ 0x4000B3FC) Size Identification </i>
//    <edit> 
//      <loc> ( (unsigned int)((TAMP_SIDR >> 0) & 0xFFFFFFFF) ) </loc>
//    </edit>
//  </item>
//  


// --------------------------------  Register RTree: TAMP_SIDR  -----------------------------------
// SVD Line: 20553

//  <rtree> SFDITEM_REG__TAMP_SIDR
//    <name> SIDR </name>
//    <r> 
//    <i> [Bits 31..0] RO (@ 0x4000B3FC) EXTI Size ID register </i>
//    <loc> ( (unsigned int)((TAMP_SIDR >> 0) & 0xFFFFFFFF) ) </loc>
//    <item> SFDITEM_FIELD__TAMP_SIDR_SID </item>
//  </rtree>
//  


// ----------------------------------  Peripheral View: TAMP  -------------------------------------
// SVD Line: 19997

//  <view> TAMP
//    <name> TAMP </name>
//    <item> SFDITEM_REG__TAMP_CR1 </item>
//    <item> SFDITEM_REG__TAMP_CR2 </item>
//    <item> SFDITEM_REG__TAMP_FLTCR </item>
//    <item> SFDITEM_REG__TAMP_IER </item>
//    <item> SFDITEM_REG__TAMP_SR </item>
//    <item> SFDITEM_REG__TAMP_MISR </item>
//    <item> SFDITEM_REG__TAMP_SCR </item>
//    <item> SFDITEM_REG__TAMP_BKP0R </item>
//    <item> SFDITEM_REG__TAMP_BKP1R </item>
//    <item> SFDITEM_REG__TAMP_BKP2R </item>
//    <item> SFDITEM_REG__TAMP_BKP3R </item>
//    <item> SFDITEM_REG__TAMP_BKP4R </item>
//    <item> SFDITEM_REG__TAMP_HWCFGR2 </item>
//    <item> SFDITEM_REG__TAMP_HWCFGR1 </item>
//    <item> SFDITEM_REG__TAMP_VERR </item>
//    <item> SFDITEM_REG__TAMP_IPIDR </item>
//    <item> SFDITEM_REG__TAMP_SIDR </item>
//  </view>
//  


// ----------------------------  Register Item Address: UCPD1_CFG1  -------------------------------
// SVD Line: 20588

unsigned int UCPD1_CFG1 __AT (0x4000A000);



// ----------------------------  Field Item: UCPD1_CFG1_HBITCLKDIV  -------------------------------
// SVD Line: 20597

//  <item> SFDITEM_FIELD__UCPD1_CFG1_HBITCLKDIV
//    <name> HBITCLKDIV </name>
//    <rw> 
//    <i> [Bits 5..0] RW (@ 0x4000A000) HBITCLKDIV </i>
//    <edit> 
//      <loc> ( (unsigned char)((UCPD1_CFG1 >> 0) & 0x3F), ((UCPD1_CFG1 = (UCPD1_CFG1 & ~(0x3FUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0x3F) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ------------------------------  Field Item: UCPD1_CFG1_IFRGAP  ---------------------------------
// SVD Line: 20603

//  <item> SFDITEM_FIELD__UCPD1_CFG1_IFRGAP
//    <name> IFRGAP </name>
//    <rw> 
//    <i> [Bits 10..6] RW (@ 0x4000A000) IFRGAP </i>
//    <edit> 
//      <loc> ( (unsigned char)((UCPD1_CFG1 >> 6) & 0x1F), ((UCPD1_CFG1 = (UCPD1_CFG1 & ~(0x1FUL << 6 )) | ((unsigned long)(Gui_u8:GuiVal & 0x1F) << 6 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -----------------------------  Field Item: UCPD1_CFG1_TRANSWIN  --------------------------------
// SVD Line: 20609

//  <item> SFDITEM_FIELD__UCPD1_CFG1_TRANSWIN
//    <name> TRANSWIN </name>
//    <rw> 
//    <i> [Bits 15..11] RW (@ 0x4000A000) TRANSWIN </i>
//    <edit> 
//      <loc> ( (unsigned char)((UCPD1_CFG1 >> 11) & 0x1F), ((UCPD1_CFG1 = (UCPD1_CFG1 & ~(0x1FUL << 11 )) | ((unsigned long)(Gui_u8:GuiVal & 0x1F) << 11 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ---------------------------  Field Item: UCPD1_CFG1_PSC_USBPDCLK  ------------------------------
// SVD Line: 20615

//  <item> SFDITEM_FIELD__UCPD1_CFG1_PSC_USBPDCLK
//    <name> PSC_USBPDCLK </name>
//    <rw> 
//    <i> [Bits 19..17] RW (@ 0x4000A000) PSC_USBPDCLK </i>
//    <edit> 
//      <loc> ( (unsigned char)((UCPD1_CFG1 >> 17) & 0x7), ((UCPD1_CFG1 = (UCPD1_CFG1 & ~(0x7UL << 17 )) | ((unsigned long)(Gui_u8:GuiVal & 0x7) << 17 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ----------------------------  Field Item: UCPD1_CFG1_RXORDSETEN  -------------------------------
// SVD Line: 20621

//  <item> SFDITEM_FIELD__UCPD1_CFG1_RXORDSETEN
//    <name> RXORDSETEN </name>
//    <rw> 
//    <i> [Bits 28..20] RW (@ 0x4000A000) RXORDSETEN </i>
//    <edit> 
//      <loc> ( (unsigned short)((UCPD1_CFG1 >> 20) & 0x1FF), ((UCPD1_CFG1 = (UCPD1_CFG1 & ~(0x1FFUL << 20 )) | ((unsigned long)(Gui_u16:GuiVal & 0x1FF) << 20 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -----------------------------  Field Item: UCPD1_CFG1_TXDMAEN  ---------------------------------
// SVD Line: 20627

//  <item> SFDITEM_FIELD__UCPD1_CFG1_TXDMAEN
//    <name> TXDMAEN </name>
//    <rw> 
//    <i> [Bit 29] RW (@ 0x4000A000) TXDMAEN </i>
//    <check> 
//      <loc> ( (unsigned int) UCPD1_CFG1 ) </loc>
//      <o.29..29> TXDMAEN
//    </check>
//  </item>
//  


// -----------------------------  Field Item: UCPD1_CFG1_RXDMAEN  ---------------------------------
// SVD Line: 20633

//  <item> SFDITEM_FIELD__UCPD1_CFG1_RXDMAEN
//    <name> RXDMAEN </name>
//    <rw> 
//    <i> [Bit 30] RW (@ 0x4000A000) RXDMAEN: </i>
//    <check> 
//      <loc> ( (unsigned int) UCPD1_CFG1 ) </loc>
//      <o.30..30> RXDMAEN
//    </check>
//  </item>
//  


// ------------------------------  Field Item: UCPD1_CFG1_UCPDEN  ---------------------------------
// SVD Line: 20639

//  <item> SFDITEM_FIELD__UCPD1_CFG1_UCPDEN
//    <name> UCPDEN </name>
//    <rw> 
//    <i> [Bit 31] RW (@ 0x4000A000) UCPDEN </i>
//    <check> 
//      <loc> ( (unsigned int) UCPD1_CFG1 ) </loc>
//      <o.31..31> UCPDEN
//    </check>
//  </item>
//  


// -------------------------------  Register RTree: UCPD1_CFG1  -----------------------------------
// SVD Line: 20588

//  <rtree> SFDITEM_REG__UCPD1_CFG1
//    <name> CFG1 </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x4000A000) UCPD configuration register </i>
//    <loc> ( (unsigned int)((UCPD1_CFG1 >> 0) & 0xFFFFFFFF), ((UCPD1_CFG1 = (UCPD1_CFG1 & ~(0xFFFEFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFEFFFF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__UCPD1_CFG1_HBITCLKDIV </item>
//    <item> SFDITEM_FIELD__UCPD1_CFG1_IFRGAP </item>
//    <item> SFDITEM_FIELD__UCPD1_CFG1_TRANSWIN </item>
//    <item> SFDITEM_FIELD__UCPD1_CFG1_PSC_USBPDCLK </item>
//    <item> SFDITEM_FIELD__UCPD1_CFG1_RXORDSETEN </item>
//    <item> SFDITEM_FIELD__UCPD1_CFG1_TXDMAEN </item>
//    <item> SFDITEM_FIELD__UCPD1_CFG1_RXDMAEN </item>
//    <item> SFDITEM_FIELD__UCPD1_CFG1_UCPDEN </item>
//  </rtree>
//  


// ----------------------------  Register Item Address: UCPD1_CFG2  -------------------------------
// SVD Line: 20647

unsigned int UCPD1_CFG2 __AT (0x4000A004);



// ----------------------------  Field Item: UCPD1_CFG2_RXFILTDIS  --------------------------------
// SVD Line: 20656

//  <item> SFDITEM_FIELD__UCPD1_CFG2_RXFILTDIS
//    <name> RXFILTDIS </name>
//    <rw> 
//    <i> [Bit 0] RW (@ 0x4000A004) RXFILTDIS </i>
//    <check> 
//      <loc> ( (unsigned int) UCPD1_CFG2 ) </loc>
//      <o.0..0> RXFILTDIS
//    </check>
//  </item>
//  


// ----------------------------  Field Item: UCPD1_CFG2_RXFILT2N3  --------------------------------
// SVD Line: 20662

//  <item> SFDITEM_FIELD__UCPD1_CFG2_RXFILT2N3
//    <name> RXFILT2N3 </name>
//    <rw> 
//    <i> [Bit 1] RW (@ 0x4000A004) RXFILT2N3 </i>
//    <check> 
//      <loc> ( (unsigned int) UCPD1_CFG2 ) </loc>
//      <o.1..1> RXFILT2N3
//    </check>
//  </item>
//  


// -----------------------------  Field Item: UCPD1_CFG2_FORCECLK  --------------------------------
// SVD Line: 20668

//  <item> SFDITEM_FIELD__UCPD1_CFG2_FORCECLK
//    <name> FORCECLK </name>
//    <rw> 
//    <i> [Bit 2] RW (@ 0x4000A004) FORCECLK </i>
//    <check> 
//      <loc> ( (unsigned int) UCPD1_CFG2 ) </loc>
//      <o.2..2> FORCECLK
//    </check>
//  </item>
//  


// ------------------------------  Field Item: UCPD1_CFG2_WUPEN  ----------------------------------
// SVD Line: 20674

//  <item> SFDITEM_FIELD__UCPD1_CFG2_WUPEN
//    <name> WUPEN </name>
//    <rw> 
//    <i> [Bit 3] RW (@ 0x4000A004) WUPEN </i>
//    <check> 
//      <loc> ( (unsigned int) UCPD1_CFG2 ) </loc>
//      <o.3..3> WUPEN
//    </check>
//  </item>
//  


// -------------------------------  Register RTree: UCPD1_CFG2  -----------------------------------
// SVD Line: 20647

//  <rtree> SFDITEM_REG__UCPD1_CFG2
//    <name> CFG2 </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x4000A004) UCPD configuration register 2 </i>
//    <loc> ( (unsigned int)((UCPD1_CFG2 >> 0) & 0xFFFFFFFF), ((UCPD1_CFG2 = (UCPD1_CFG2 & ~(0xFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__UCPD1_CFG2_RXFILTDIS </item>
//    <item> SFDITEM_FIELD__UCPD1_CFG2_RXFILT2N3 </item>
//    <item> SFDITEM_FIELD__UCPD1_CFG2_FORCECLK </item>
//    <item> SFDITEM_FIELD__UCPD1_CFG2_WUPEN </item>
//  </rtree>
//  


// ----------------------------  Register Item Address: UCPD1_CFG3  -------------------------------
// SVD Line: 20682

unsigned int UCPD1_CFG3 __AT (0x4000A008);



// --------------------------  Field Item: UCPD1_CFG3_TRIM1_NG_CCRPD  -----------------------------
// SVD Line: 20691

//  <item> SFDITEM_FIELD__UCPD1_CFG3_TRIM1_NG_CCRPD
//    <name> TRIM1_NG_CCRPD </name>
//    <rw> 
//    <i> [Bits 3..0] RW (@ 0x4000A008) TRIM1_NG_CCRPD </i>
//    <edit> 
//      <loc> ( (unsigned char)((UCPD1_CFG3 >> 0) & 0xF), ((UCPD1_CFG3 = (UCPD1_CFG3 & ~(0xFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// --------------------------  Field Item: UCPD1_CFG3_TRIM1_NG_CC1A5  -----------------------------
// SVD Line: 20697

//  <item> SFDITEM_FIELD__UCPD1_CFG3_TRIM1_NG_CC1A5
//    <name> TRIM1_NG_CC1A5 </name>
//    <rw> 
//    <i> [Bits 8..4] RW (@ 0x4000A008) TRIM1_NG_CC1A5 </i>
//    <edit> 
//      <loc> ( (unsigned char)((UCPD1_CFG3 >> 4) & 0x1F), ((UCPD1_CFG3 = (UCPD1_CFG3 & ~(0x1FUL << 4 )) | ((unsigned long)(Gui_u8:GuiVal & 0x1F) << 4 ) ) )) </loc>
//    </edit>
//  </item>
//  


// --------------------------  Field Item: UCPD1_CFG3_TRIM1_NG_CC3A0  -----------------------------
// SVD Line: 20703

//  <item> SFDITEM_FIELD__UCPD1_CFG3_TRIM1_NG_CC3A0
//    <name> TRIM1_NG_CC3A0 </name>
//    <rw> 
//    <i> [Bits 12..9] RW (@ 0x4000A008) TRIM1_NG_CC3A0 </i>
//    <edit> 
//      <loc> ( (unsigned char)((UCPD1_CFG3 >> 9) & 0xF), ((UCPD1_CFG3 = (UCPD1_CFG3 & ~(0xFUL << 9 )) | ((unsigned long)(Gui_u8:GuiVal & 0xF) << 9 ) ) )) </loc>
//    </edit>
//  </item>
//  


// --------------------------  Field Item: UCPD1_CFG3_TRIM2_NG_CCRPD  -----------------------------
// SVD Line: 20709

//  <item> SFDITEM_FIELD__UCPD1_CFG3_TRIM2_NG_CCRPD
//    <name> TRIM2_NG_CCRPD </name>
//    <rw> 
//    <i> [Bits 19..16] RW (@ 0x4000A008) TRIM2_NG_CCRPD </i>
//    <edit> 
//      <loc> ( (unsigned char)((UCPD1_CFG3 >> 16) & 0xF), ((UCPD1_CFG3 = (UCPD1_CFG3 & ~(0xFUL << 16 )) | ((unsigned long)(Gui_u8:GuiVal & 0xF) << 16 ) ) )) </loc>
//    </edit>
//  </item>
//  


// --------------------------  Field Item: UCPD1_CFG3_TRIM2_NG_CC1A5  -----------------------------
// SVD Line: 20715

//  <item> SFDITEM_FIELD__UCPD1_CFG3_TRIM2_NG_CC1A5
//    <name> TRIM2_NG_CC1A5 </name>
//    <rw> 
//    <i> [Bits 24..20] RW (@ 0x4000A008) TRIM2_NG_CC1A5 </i>
//    <edit> 
//      <loc> ( (unsigned char)((UCPD1_CFG3 >> 20) & 0x1F), ((UCPD1_CFG3 = (UCPD1_CFG3 & ~(0x1FUL << 20 )) | ((unsigned long)(Gui_u8:GuiVal & 0x1F) << 20 ) ) )) </loc>
//    </edit>
//  </item>
//  


// --------------------------  Field Item: UCPD1_CFG3_TRIM2_NG_CC3A0  -----------------------------
// SVD Line: 20721

//  <item> SFDITEM_FIELD__UCPD1_CFG3_TRIM2_NG_CC3A0
//    <name> TRIM2_NG_CC3A0 </name>
//    <rw> 
//    <i> [Bits 28..25] RW (@ 0x4000A008) TRIM2_NG_CC3A0 </i>
//    <edit> 
//      <loc> ( (unsigned char)((UCPD1_CFG3 >> 25) & 0xF), ((UCPD1_CFG3 = (UCPD1_CFG3 & ~(0xFUL << 25 )) | ((unsigned long)(Gui_u8:GuiVal & 0xF) << 25 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -------------------------------  Register RTree: UCPD1_CFG3  -----------------------------------
// SVD Line: 20682

//  <rtree> SFDITEM_REG__UCPD1_CFG3
//    <name> CFG3 </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x4000A008) UCPD configuration register 3 </i>
//    <loc> ( (unsigned int)((UCPD1_CFG3 >> 0) & 0xFFFFFFFF), ((UCPD1_CFG3 = (UCPD1_CFG3 & ~(0x1FFF1FFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0x1FFF1FFF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__UCPD1_CFG3_TRIM1_NG_CCRPD </item>
//    <item> SFDITEM_FIELD__UCPD1_CFG3_TRIM1_NG_CC1A5 </item>
//    <item> SFDITEM_FIELD__UCPD1_CFG3_TRIM1_NG_CC3A0 </item>
//    <item> SFDITEM_FIELD__UCPD1_CFG3_TRIM2_NG_CCRPD </item>
//    <item> SFDITEM_FIELD__UCPD1_CFG3_TRIM2_NG_CC1A5 </item>
//    <item> SFDITEM_FIELD__UCPD1_CFG3_TRIM2_NG_CC3A0 </item>
//  </rtree>
//  


// -----------------------------  Register Item Address: UCPD1_CR  --------------------------------
// SVD Line: 20729

unsigned int UCPD1_CR __AT (0x4000A00C);



// -------------------------------  Field Item: UCPD1_CR_TXMODE  ----------------------------------
// SVD Line: 20738

//  <item> SFDITEM_FIELD__UCPD1_CR_TXMODE
//    <name> TXMODE </name>
//    <rw> 
//    <i> [Bits 1..0] RW (@ 0x4000A00C) TXMODE </i>
//    <edit> 
//      <loc> ( (unsigned char)((UCPD1_CR >> 0) & 0x3), ((UCPD1_CR = (UCPD1_CR & ~(0x3UL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0x3) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -------------------------------  Field Item: UCPD1_CR_TXSEND  ----------------------------------
// SVD Line: 20744

//  <item> SFDITEM_FIELD__UCPD1_CR_TXSEND
//    <name> TXSEND </name>
//    <rw> 
//    <i> [Bit 2] RW (@ 0x4000A00C) TXSEND </i>
//    <check> 
//      <loc> ( (unsigned int) UCPD1_CR ) </loc>
//      <o.2..2> TXSEND
//    </check>
//  </item>
//  


// -------------------------------  Field Item: UCPD1_CR_TXHRST  ----------------------------------
// SVD Line: 20750

//  <item> SFDITEM_FIELD__UCPD1_CR_TXHRST
//    <name> TXHRST </name>
//    <rw> 
//    <i> [Bit 3] RW (@ 0x4000A00C) TXHRST </i>
//    <check> 
//      <loc> ( (unsigned int) UCPD1_CR ) </loc>
//      <o.3..3> TXHRST
//    </check>
//  </item>
//  


// -------------------------------  Field Item: UCPD1_CR_RXMODE  ----------------------------------
// SVD Line: 20756

//  <item> SFDITEM_FIELD__UCPD1_CR_RXMODE
//    <name> RXMODE </name>
//    <rw> 
//    <i> [Bit 4] RW (@ 0x4000A00C) RXMODE </i>
//    <check> 
//      <loc> ( (unsigned int) UCPD1_CR ) </loc>
//      <o.4..4> RXMODE
//    </check>
//  </item>
//  


// ------------------------------  Field Item: UCPD1_CR_PHYRXEN  ----------------------------------
// SVD Line: 20762

//  <item> SFDITEM_FIELD__UCPD1_CR_PHYRXEN
//    <name> PHYRXEN </name>
//    <rw> 
//    <i> [Bit 5] RW (@ 0x4000A00C) PHYRXEN </i>
//    <check> 
//      <loc> ( (unsigned int) UCPD1_CR ) </loc>
//      <o.5..5> PHYRXEN
//    </check>
//  </item>
//  


// ------------------------------  Field Item: UCPD1_CR_PHYCCSEL  ---------------------------------
// SVD Line: 20768

//  <item> SFDITEM_FIELD__UCPD1_CR_PHYCCSEL
//    <name> PHYCCSEL </name>
//    <rw> 
//    <i> [Bit 6] RW (@ 0x4000A00C) PHYCCSEL </i>
//    <check> 
//      <loc> ( (unsigned int) UCPD1_CR ) </loc>
//      <o.6..6> PHYCCSEL
//    </check>
//  </item>
//  


// -----------------------------  Field Item: UCPD1_CR_ANASUBMODE  --------------------------------
// SVD Line: 20774

//  <item> SFDITEM_FIELD__UCPD1_CR_ANASUBMODE
//    <name> ANASUBMODE </name>
//    <rw> 
//    <i> [Bits 8..7] RW (@ 0x4000A00C) ANASUBMODE </i>
//    <edit> 
//      <loc> ( (unsigned char)((UCPD1_CR >> 7) & 0x3), ((UCPD1_CR = (UCPD1_CR & ~(0x3UL << 7 )) | ((unsigned long)(Gui_u8:GuiVal & 0x3) << 7 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ------------------------------  Field Item: UCPD1_CR_ANAMODE  ----------------------------------
// SVD Line: 20780

//  <item> SFDITEM_FIELD__UCPD1_CR_ANAMODE
//    <name> ANAMODE </name>
//    <rw> 
//    <i> [Bit 9] RW (@ 0x4000A00C) ANAMODE </i>
//    <check> 
//      <loc> ( (unsigned int) UCPD1_CR ) </loc>
//      <o.9..9> ANAMODE
//    </check>
//  </item>
//  


// ------------------------------  Field Item: UCPD1_CR_CCENABLE  ---------------------------------
// SVD Line: 20786

//  <item> SFDITEM_FIELD__UCPD1_CR_CCENABLE
//    <name> CCENABLE </name>
//    <rw> 
//    <i> [Bits 11..10] RW (@ 0x4000A00C) CCENABLE </i>
//    <edit> 
//      <loc> ( (unsigned char)((UCPD1_CR >> 10) & 0x3), ((UCPD1_CR = (UCPD1_CR & ~(0x3UL << 10 )) | ((unsigned long)(Gui_u8:GuiVal & 0x3) << 10 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ------------------------------  Field Item: UCPD1_CR_DBATTEN  ----------------------------------
// SVD Line: 20792

//  <item> SFDITEM_FIELD__UCPD1_CR_DBATTEN
//    <name> DBATTEN </name>
//    <rw> 
//    <i> [Bit 15] RW (@ 0x4000A00C) DBATTEN </i>
//    <check> 
//      <loc> ( (unsigned int) UCPD1_CR ) </loc>
//      <o.15..15> DBATTEN
//    </check>
//  </item>
//  


// ------------------------------  Field Item: UCPD1_CR_FRSRXEN  ----------------------------------
// SVD Line: 20798

//  <item> SFDITEM_FIELD__UCPD1_CR_FRSRXEN
//    <name> FRSRXEN </name>
//    <rw> 
//    <i> [Bit 16] RW (@ 0x4000A00C) FRSRXEN </i>
//    <check> 
//      <loc> ( (unsigned int) UCPD1_CR ) </loc>
//      <o.16..16> FRSRXEN
//    </check>
//  </item>
//  


// -------------------------------  Field Item: UCPD1_CR_FRSTX  -----------------------------------
// SVD Line: 20804

//  <item> SFDITEM_FIELD__UCPD1_CR_FRSTX
//    <name> FRSTX </name>
//    <rw> 
//    <i> [Bit 17] RW (@ 0x4000A00C) FRSTX </i>
//    <check> 
//      <loc> ( (unsigned int) UCPD1_CR ) </loc>
//      <o.17..17> FRSTX
//    </check>
//  </item>
//  


// --------------------------------  Field Item: UCPD1_CR_RDCH  -----------------------------------
// SVD Line: 20810

//  <item> SFDITEM_FIELD__UCPD1_CR_RDCH
//    <name> RDCH </name>
//    <rw> 
//    <i> [Bit 18] RW (@ 0x4000A00C) RDCH </i>
//    <check> 
//      <loc> ( (unsigned int) UCPD1_CR ) </loc>
//      <o.18..18> RDCH
//    </check>
//  </item>
//  


// ------------------------------  Field Item: UCPD1_CR_CC1TCDIS  ---------------------------------
// SVD Line: 20816

//  <item> SFDITEM_FIELD__UCPD1_CR_CC1TCDIS
//    <name> CC1TCDIS </name>
//    <rw> 
//    <i> [Bit 20] RW (@ 0x4000A00C) CC1TCDIS </i>
//    <check> 
//      <loc> ( (unsigned int) UCPD1_CR ) </loc>
//      <o.20..20> CC1TCDIS
//    </check>
//  </item>
//  


// ------------------------------  Field Item: UCPD1_CR_CC2TCDIS  ---------------------------------
// SVD Line: 20822

//  <item> SFDITEM_FIELD__UCPD1_CR_CC2TCDIS
//    <name> CC2TCDIS </name>
//    <rw> 
//    <i> [Bit 21] RW (@ 0x4000A00C) CC2TCDIS </i>
//    <check> 
//      <loc> ( (unsigned int) UCPD1_CR ) </loc>
//      <o.21..21> CC2TCDIS
//    </check>
//  </item>
//  


// --------------------------------  Register RTree: UCPD1_CR  ------------------------------------
// SVD Line: 20729

//  <rtree> SFDITEM_REG__UCPD1_CR
//    <name> CR </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x4000A00C) UCPD control register </i>
//    <loc> ( (unsigned int)((UCPD1_CR >> 0) & 0xFFFFFFFF), ((UCPD1_CR = (UCPD1_CR & ~(0x378FFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0x378FFF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__UCPD1_CR_TXMODE </item>
//    <item> SFDITEM_FIELD__UCPD1_CR_TXSEND </item>
//    <item> SFDITEM_FIELD__UCPD1_CR_TXHRST </item>
//    <item> SFDITEM_FIELD__UCPD1_CR_RXMODE </item>
//    <item> SFDITEM_FIELD__UCPD1_CR_PHYRXEN </item>
//    <item> SFDITEM_FIELD__UCPD1_CR_PHYCCSEL </item>
//    <item> SFDITEM_FIELD__UCPD1_CR_ANASUBMODE </item>
//    <item> SFDITEM_FIELD__UCPD1_CR_ANAMODE </item>
//    <item> SFDITEM_FIELD__UCPD1_CR_CCENABLE </item>
//    <item> SFDITEM_FIELD__UCPD1_CR_DBATTEN </item>
//    <item> SFDITEM_FIELD__UCPD1_CR_FRSRXEN </item>
//    <item> SFDITEM_FIELD__UCPD1_CR_FRSTX </item>
//    <item> SFDITEM_FIELD__UCPD1_CR_RDCH </item>
//    <item> SFDITEM_FIELD__UCPD1_CR_CC1TCDIS </item>
//    <item> SFDITEM_FIELD__UCPD1_CR_CC2TCDIS </item>
//  </rtree>
//  


// ----------------------------  Register Item Address: UCPD1_IMR  --------------------------------
// SVD Line: 20830

unsigned int UCPD1_IMR __AT (0x4000A010);



// ------------------------------  Field Item: UCPD1_IMR_TXISIE  ----------------------------------
// SVD Line: 20839

//  <item> SFDITEM_FIELD__UCPD1_IMR_TXISIE
//    <name> TXISIE </name>
//    <rw> 
//    <i> [Bit 0] RW (@ 0x4000A010) TXISIE </i>
//    <check> 
//      <loc> ( (unsigned int) UCPD1_IMR ) </loc>
//      <o.0..0> TXISIE
//    </check>
//  </item>
//  


// ----------------------------  Field Item: UCPD1_IMR_TXMSGDISCIE  -------------------------------
// SVD Line: 20845

//  <item> SFDITEM_FIELD__UCPD1_IMR_TXMSGDISCIE
//    <name> TXMSGDISCIE </name>
//    <rw> 
//    <i> [Bit 1] RW (@ 0x4000A010) TXMSGDISCIE </i>
//    <check> 
//      <loc> ( (unsigned int) UCPD1_IMR ) </loc>
//      <o.1..1> TXMSGDISCIE
//    </check>
//  </item>
//  


// ----------------------------  Field Item: UCPD1_IMR_TXMSGSENTIE  -------------------------------
// SVD Line: 20851

//  <item> SFDITEM_FIELD__UCPD1_IMR_TXMSGSENTIE
//    <name> TXMSGSENTIE </name>
//    <rw> 
//    <i> [Bit 2] RW (@ 0x4000A010) TXMSGSENTIE </i>
//    <check> 
//      <loc> ( (unsigned int) UCPD1_IMR ) </loc>
//      <o.2..2> TXMSGSENTIE
//    </check>
//  </item>
//  


// ----------------------------  Field Item: UCPD1_IMR_TXMSGABTIE  --------------------------------
// SVD Line: 20857

//  <item> SFDITEM_FIELD__UCPD1_IMR_TXMSGABTIE
//    <name> TXMSGABTIE </name>
//    <rw> 
//    <i> [Bit 3] RW (@ 0x4000A010) TXMSGABTIE </i>
//    <check> 
//      <loc> ( (unsigned int) UCPD1_IMR ) </loc>
//      <o.3..3> TXMSGABTIE
//    </check>
//  </item>
//  


// ----------------------------  Field Item: UCPD1_IMR_HRSTDISCIE  --------------------------------
// SVD Line: 20863

//  <item> SFDITEM_FIELD__UCPD1_IMR_HRSTDISCIE
//    <name> HRSTDISCIE </name>
//    <rw> 
//    <i> [Bit 4] RW (@ 0x4000A010) HRSTDISCIE </i>
//    <check> 
//      <loc> ( (unsigned int) UCPD1_IMR ) </loc>
//      <o.4..4> HRSTDISCIE
//    </check>
//  </item>
//  


// ----------------------------  Field Item: UCPD1_IMR_HRSTSENTIE  --------------------------------
// SVD Line: 20869

//  <item> SFDITEM_FIELD__UCPD1_IMR_HRSTSENTIE
//    <name> HRSTSENTIE </name>
//    <rw> 
//    <i> [Bit 5] RW (@ 0x4000A010) HRSTSENTIE </i>
//    <check> 
//      <loc> ( (unsigned int) UCPD1_IMR ) </loc>
//      <o.5..5> HRSTSENTIE
//    </check>
//  </item>
//  


// ------------------------------  Field Item: UCPD1_IMR_TXUNDIE  ---------------------------------
// SVD Line: 20875

//  <item> SFDITEM_FIELD__UCPD1_IMR_TXUNDIE
//    <name> TXUNDIE </name>
//    <rw> 
//    <i> [Bit 6] RW (@ 0x4000A010) TXUNDIE </i>
//    <check> 
//      <loc> ( (unsigned int) UCPD1_IMR ) </loc>
//      <o.6..6> TXUNDIE
//    </check>
//  </item>
//  


// ------------------------------  Field Item: UCPD1_IMR_RXNEIE  ----------------------------------
// SVD Line: 20881

//  <item> SFDITEM_FIELD__UCPD1_IMR_RXNEIE
//    <name> RXNEIE </name>
//    <rw> 
//    <i> [Bit 8] RW (@ 0x4000A010) RXNEIE </i>
//    <check> 
//      <loc> ( (unsigned int) UCPD1_IMR ) </loc>
//      <o.8..8> RXNEIE
//    </check>
//  </item>
//  


// ----------------------------  Field Item: UCPD1_IMR_RXORDDETIE  --------------------------------
// SVD Line: 20887

//  <item> SFDITEM_FIELD__UCPD1_IMR_RXORDDETIE
//    <name> RXORDDETIE </name>
//    <rw> 
//    <i> [Bit 9] RW (@ 0x4000A010) RXORDDETIE </i>
//    <check> 
//      <loc> ( (unsigned int) UCPD1_IMR ) </loc>
//      <o.9..9> RXORDDETIE
//    </check>
//  </item>
//  


// ----------------------------  Field Item: UCPD1_IMR_RXHRSTDETIE  -------------------------------
// SVD Line: 20893

//  <item> SFDITEM_FIELD__UCPD1_IMR_RXHRSTDETIE
//    <name> RXHRSTDETIE </name>
//    <rw> 
//    <i> [Bit 10] RW (@ 0x4000A010) RXHRSTDETIE </i>
//    <check> 
//      <loc> ( (unsigned int) UCPD1_IMR ) </loc>
//      <o.10..10> RXHRSTDETIE
//    </check>
//  </item>
//  


// ------------------------------  Field Item: UCPD1_IMR_RXOVRIE  ---------------------------------
// SVD Line: 20899

//  <item> SFDITEM_FIELD__UCPD1_IMR_RXOVRIE
//    <name> RXOVRIE </name>
//    <rw> 
//    <i> [Bit 11] RW (@ 0x4000A010) RXOVRIE </i>
//    <check> 
//      <loc> ( (unsigned int) UCPD1_IMR ) </loc>
//      <o.11..11> RXOVRIE
//    </check>
//  </item>
//  


// ----------------------------  Field Item: UCPD1_IMR_RXMSGENDIE  --------------------------------
// SVD Line: 20905

//  <item> SFDITEM_FIELD__UCPD1_IMR_RXMSGENDIE
//    <name> RXMSGENDIE </name>
//    <rw> 
//    <i> [Bit 12] RW (@ 0x4000A010) RXMSGENDIE </i>
//    <check> 
//      <loc> ( (unsigned int) UCPD1_IMR ) </loc>
//      <o.12..12> RXMSGENDIE
//    </check>
//  </item>
//  


// ----------------------------  Field Item: UCPD1_IMR_TYPECEVT1IE  -------------------------------
// SVD Line: 20911

//  <item> SFDITEM_FIELD__UCPD1_IMR_TYPECEVT1IE
//    <name> TYPECEVT1IE </name>
//    <rw> 
//    <i> [Bit 14] RW (@ 0x4000A010) TYPECEVT1IE </i>
//    <check> 
//      <loc> ( (unsigned int) UCPD1_IMR ) </loc>
//      <o.14..14> TYPECEVT1IE
//    </check>
//  </item>
//  


// ----------------------------  Field Item: UCPD1_IMR_TYPECEVT2IE  -------------------------------
// SVD Line: 20917

//  <item> SFDITEM_FIELD__UCPD1_IMR_TYPECEVT2IE
//    <name> TYPECEVT2IE </name>
//    <rw> 
//    <i> [Bit 15] RW (@ 0x4000A010) TYPECEVT2IE </i>
//    <check> 
//      <loc> ( (unsigned int) UCPD1_IMR ) </loc>
//      <o.15..15> TYPECEVT2IE
//    </check>
//  </item>
//  


// -----------------------------  Field Item: UCPD1_IMR_FRSEVTIE  ---------------------------------
// SVD Line: 20923

//  <item> SFDITEM_FIELD__UCPD1_IMR_FRSEVTIE
//    <name> FRSEVTIE </name>
//    <rw> 
//    <i> [Bit 20] RW (@ 0x4000A010) FRSEVTIE </i>
//    <check> 
//      <loc> ( (unsigned int) UCPD1_IMR ) </loc>
//      <o.20..20> FRSEVTIE
//    </check>
//  </item>
//  


// --------------------------------  Register RTree: UCPD1_IMR  -----------------------------------
// SVD Line: 20830

//  <rtree> SFDITEM_REG__UCPD1_IMR
//    <name> IMR </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x4000A010) UCPD Interrupt Mask Register </i>
//    <loc> ( (unsigned int)((UCPD1_IMR >> 0) & 0xFFFFFFFF), ((UCPD1_IMR = (UCPD1_IMR & ~(0x10DF7FUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0x10DF7F) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__UCPD1_IMR_TXISIE </item>
//    <item> SFDITEM_FIELD__UCPD1_IMR_TXMSGDISCIE </item>
//    <item> SFDITEM_FIELD__UCPD1_IMR_TXMSGSENTIE </item>
//    <item> SFDITEM_FIELD__UCPD1_IMR_TXMSGABTIE </item>
//    <item> SFDITEM_FIELD__UCPD1_IMR_HRSTDISCIE </item>
//    <item> SFDITEM_FIELD__UCPD1_IMR_HRSTSENTIE </item>
//    <item> SFDITEM_FIELD__UCPD1_IMR_TXUNDIE </item>
//    <item> SFDITEM_FIELD__UCPD1_IMR_RXNEIE </item>
//    <item> SFDITEM_FIELD__UCPD1_IMR_RXORDDETIE </item>
//    <item> SFDITEM_FIELD__UCPD1_IMR_RXHRSTDETIE </item>
//    <item> SFDITEM_FIELD__UCPD1_IMR_RXOVRIE </item>
//    <item> SFDITEM_FIELD__UCPD1_IMR_RXMSGENDIE </item>
//    <item> SFDITEM_FIELD__UCPD1_IMR_TYPECEVT1IE </item>
//    <item> SFDITEM_FIELD__UCPD1_IMR_TYPECEVT2IE </item>
//    <item> SFDITEM_FIELD__UCPD1_IMR_FRSEVTIE </item>
//  </rtree>
//  


// -----------------------------  Register Item Address: UCPD1_SR  --------------------------------
// SVD Line: 20931

unsigned int UCPD1_SR __AT (0x4000A014);



// --------------------------------  Field Item: UCPD1_SR_TXIS  -----------------------------------
// SVD Line: 20940

//  <item> SFDITEM_FIELD__UCPD1_SR_TXIS
//    <name> TXIS </name>
//    <r> 
//    <i> [Bit 0] RO (@ 0x4000A014) TXIS </i>
//    <check> 
//      <loc> ( (unsigned int) UCPD1_SR ) </loc>
//      <o.0..0> TXIS
//    </check>
//  </item>
//  


// -----------------------------  Field Item: UCPD1_SR_TXMSGDISC  ---------------------------------
// SVD Line: 20946

//  <item> SFDITEM_FIELD__UCPD1_SR_TXMSGDISC
//    <name> TXMSGDISC </name>
//    <r> 
//    <i> [Bit 1] RO (@ 0x4000A014) TXMSGDISC </i>
//    <check> 
//      <loc> ( (unsigned int) UCPD1_SR ) </loc>
//      <o.1..1> TXMSGDISC
//    </check>
//  </item>
//  


// -----------------------------  Field Item: UCPD1_SR_TXMSGSENT  ---------------------------------
// SVD Line: 20952

//  <item> SFDITEM_FIELD__UCPD1_SR_TXMSGSENT
//    <name> TXMSGSENT </name>
//    <r> 
//    <i> [Bit 2] RO (@ 0x4000A014) TXMSGSENT </i>
//    <check> 
//      <loc> ( (unsigned int) UCPD1_SR ) </loc>
//      <o.2..2> TXMSGSENT
//    </check>
//  </item>
//  


// ------------------------------  Field Item: UCPD1_SR_TXMSGABT  ---------------------------------
// SVD Line: 20958

//  <item> SFDITEM_FIELD__UCPD1_SR_TXMSGABT
//    <name> TXMSGABT </name>
//    <r> 
//    <i> [Bit 3] RO (@ 0x4000A014) TXMSGABT </i>
//    <check> 
//      <loc> ( (unsigned int) UCPD1_SR ) </loc>
//      <o.3..3> TXMSGABT
//    </check>
//  </item>
//  


// ------------------------------  Field Item: UCPD1_SR_HRSTDISC  ---------------------------------
// SVD Line: 20964

//  <item> SFDITEM_FIELD__UCPD1_SR_HRSTDISC
//    <name> HRSTDISC </name>
//    <r> 
//    <i> [Bit 4] RO (@ 0x4000A014) HRSTDISC </i>
//    <check> 
//      <loc> ( (unsigned int) UCPD1_SR ) </loc>
//      <o.4..4> HRSTDISC
//    </check>
//  </item>
//  


// ------------------------------  Field Item: UCPD1_SR_HRSTSENT  ---------------------------------
// SVD Line: 20970

//  <item> SFDITEM_FIELD__UCPD1_SR_HRSTSENT
//    <name> HRSTSENT </name>
//    <r> 
//    <i> [Bit 5] RO (@ 0x4000A014) HRSTSENT </i>
//    <check> 
//      <loc> ( (unsigned int) UCPD1_SR ) </loc>
//      <o.5..5> HRSTSENT
//    </check>
//  </item>
//  


// -------------------------------  Field Item: UCPD1_SR_TXUND  -----------------------------------
// SVD Line: 20976

//  <item> SFDITEM_FIELD__UCPD1_SR_TXUND
//    <name> TXUND </name>
//    <r> 
//    <i> [Bit 6] RO (@ 0x4000A014) TXUND </i>
//    <check> 
//      <loc> ( (unsigned int) UCPD1_SR ) </loc>
//      <o.6..6> TXUND
//    </check>
//  </item>
//  


// --------------------------------  Field Item: UCPD1_SR_RXNE  -----------------------------------
// SVD Line: 20982

//  <item> SFDITEM_FIELD__UCPD1_SR_RXNE
//    <name> RXNE </name>
//    <r> 
//    <i> [Bit 8] RO (@ 0x4000A014) RXNE </i>
//    <check> 
//      <loc> ( (unsigned int) UCPD1_SR ) </loc>
//      <o.8..8> RXNE
//    </check>
//  </item>
//  


// ------------------------------  Field Item: UCPD1_SR_RXORDDET  ---------------------------------
// SVD Line: 20988

//  <item> SFDITEM_FIELD__UCPD1_SR_RXORDDET
//    <name> RXORDDET </name>
//    <r> 
//    <i> [Bit 9] RO (@ 0x4000A014) RXORDDET </i>
//    <check> 
//      <loc> ( (unsigned int) UCPD1_SR ) </loc>
//      <o.9..9> RXORDDET
//    </check>
//  </item>
//  


// -----------------------------  Field Item: UCPD1_SR_RXHRSTDET  ---------------------------------
// SVD Line: 20994

//  <item> SFDITEM_FIELD__UCPD1_SR_RXHRSTDET
//    <name> RXHRSTDET </name>
//    <r> 
//    <i> [Bit 10] RO (@ 0x4000A014) RXHRSTDET </i>
//    <check> 
//      <loc> ( (unsigned int) UCPD1_SR ) </loc>
//      <o.10..10> RXHRSTDET
//    </check>
//  </item>
//  


// -------------------------------  Field Item: UCPD1_SR_RXOVR  -----------------------------------
// SVD Line: 21000

//  <item> SFDITEM_FIELD__UCPD1_SR_RXOVR
//    <name> RXOVR </name>
//    <r> 
//    <i> [Bit 11] RO (@ 0x4000A014) RXOVR </i>
//    <check> 
//      <loc> ( (unsigned int) UCPD1_SR ) </loc>
//      <o.11..11> RXOVR
//    </check>
//  </item>
//  


// ------------------------------  Field Item: UCPD1_SR_RXMSGEND  ---------------------------------
// SVD Line: 21006

//  <item> SFDITEM_FIELD__UCPD1_SR_RXMSGEND
//    <name> RXMSGEND </name>
//    <r> 
//    <i> [Bit 12] RO (@ 0x4000A014) RXMSGEND </i>
//    <check> 
//      <loc> ( (unsigned int) UCPD1_SR ) </loc>
//      <o.12..12> RXMSGEND
//    </check>
//  </item>
//  


// -------------------------------  Field Item: UCPD1_SR_RXERR  -----------------------------------
// SVD Line: 21012

//  <item> SFDITEM_FIELD__UCPD1_SR_RXERR
//    <name> RXERR </name>
//    <r> 
//    <i> [Bit 13] RO (@ 0x4000A014) RXERR </i>
//    <check> 
//      <loc> ( (unsigned int) UCPD1_SR ) </loc>
//      <o.13..13> RXERR
//    </check>
//  </item>
//  


// -----------------------------  Field Item: UCPD1_SR_TYPECEVT1  ---------------------------------
// SVD Line: 21018

//  <item> SFDITEM_FIELD__UCPD1_SR_TYPECEVT1
//    <name> TYPECEVT1 </name>
//    <r> 
//    <i> [Bit 14] RO (@ 0x4000A014) TYPECEVT1 </i>
//    <check> 
//      <loc> ( (unsigned int) UCPD1_SR ) </loc>
//      <o.14..14> TYPECEVT1
//    </check>
//  </item>
//  


// -----------------------------  Field Item: UCPD1_SR_TYPECEVT2  ---------------------------------
// SVD Line: 21024

//  <item> SFDITEM_FIELD__UCPD1_SR_TYPECEVT2
//    <name> TYPECEVT2 </name>
//    <r> 
//    <i> [Bit 15] RO (@ 0x4000A014) TYPECEVT2 </i>
//    <check> 
//      <loc> ( (unsigned int) UCPD1_SR ) </loc>
//      <o.15..15> TYPECEVT2
//    </check>
//  </item>
//  


// --------------------------  Field Item: UCPD1_SR_TYPEC_VSTATE_CC1  -----------------------------
// SVD Line: 21030

//  <item> SFDITEM_FIELD__UCPD1_SR_TYPEC_VSTATE_CC1
//    <name> TYPEC_VSTATE_CC1 </name>
//    <r> 
//    <i> [Bits 17..16] RO (@ 0x4000A014) TYPEC_VSTATE_CC1 </i>
//    <edit> 
//      <loc> ( (unsigned char)((UCPD1_SR >> 16) & 0x3) ) </loc>
//    </edit>
//  </item>
//  


// --------------------------  Field Item: UCPD1_SR_TYPEC_VSTATE_CC2  -----------------------------
// SVD Line: 21036

//  <item> SFDITEM_FIELD__UCPD1_SR_TYPEC_VSTATE_CC2
//    <name> TYPEC_VSTATE_CC2 </name>
//    <r> 
//    <i> [Bits 19..18] RO (@ 0x4000A014) TYPEC_VSTATE_CC2 </i>
//    <edit> 
//      <loc> ( (unsigned char)((UCPD1_SR >> 18) & 0x3) ) </loc>
//    </edit>
//  </item>
//  


// -------------------------------  Field Item: UCPD1_SR_FRSEVT  ----------------------------------
// SVD Line: 21042

//  <item> SFDITEM_FIELD__UCPD1_SR_FRSEVT
//    <name> FRSEVT </name>
//    <r> 
//    <i> [Bit 20] RO (@ 0x4000A014) FRSEVT </i>
//    <check> 
//      <loc> ( (unsigned int) UCPD1_SR ) </loc>
//      <o.20..20> FRSEVT
//    </check>
//  </item>
//  


// --------------------------------  Register RTree: UCPD1_SR  ------------------------------------
// SVD Line: 20931

//  <rtree> SFDITEM_REG__UCPD1_SR
//    <name> SR </name>
//    <r> 
//    <i> [Bits 31..0] RO (@ 0x4000A014) UCPD Status Register </i>
//    <loc> ( (unsigned int)((UCPD1_SR >> 0) & 0xFFFFFFFF) ) </loc>
//    <item> SFDITEM_FIELD__UCPD1_SR_TXIS </item>
//    <item> SFDITEM_FIELD__UCPD1_SR_TXMSGDISC </item>
//    <item> SFDITEM_FIELD__UCPD1_SR_TXMSGSENT </item>
//    <item> SFDITEM_FIELD__UCPD1_SR_TXMSGABT </item>
//    <item> SFDITEM_FIELD__UCPD1_SR_HRSTDISC </item>
//    <item> SFDITEM_FIELD__UCPD1_SR_HRSTSENT </item>
//    <item> SFDITEM_FIELD__UCPD1_SR_TXUND </item>
//    <item> SFDITEM_FIELD__UCPD1_SR_RXNE </item>
//    <item> SFDITEM_FIELD__UCPD1_SR_RXORDDET </item>
//    <item> SFDITEM_FIELD__UCPD1_SR_RXHRSTDET </item>
//    <item> SFDITEM_FIELD__UCPD1_SR_RXOVR </item>
//    <item> SFDITEM_FIELD__UCPD1_SR_RXMSGEND </item>
//    <item> SFDITEM_FIELD__UCPD1_SR_RXERR </item>
//    <item> SFDITEM_FIELD__UCPD1_SR_TYPECEVT1 </item>
//    <item> SFDITEM_FIELD__UCPD1_SR_TYPECEVT2 </item>
//    <item> SFDITEM_FIELD__UCPD1_SR_TYPEC_VSTATE_CC1 </item>
//    <item> SFDITEM_FIELD__UCPD1_SR_TYPEC_VSTATE_CC2 </item>
//    <item> SFDITEM_FIELD__UCPD1_SR_FRSEVT </item>
//  </rtree>
//  


// ----------------------------  Register Item Address: UCPD1_ICR  --------------------------------
// SVD Line: 21050

unsigned int UCPD1_ICR __AT (0x4000A018);



// ----------------------------  Field Item: UCPD1_ICR_TXMSGDISCCF  -------------------------------
// SVD Line: 21059

//  <item> SFDITEM_FIELD__UCPD1_ICR_TXMSGDISCCF
//    <name> TXMSGDISCCF </name>
//    <rw> 
//    <i> [Bit 1] RW (@ 0x4000A018) TXMSGDISCCF </i>
//    <check> 
//      <loc> ( (unsigned int) UCPD1_ICR ) </loc>
//      <o.1..1> TXMSGDISCCF
//    </check>
//  </item>
//  


// ----------------------------  Field Item: UCPD1_ICR_TXMSGSENTCF  -------------------------------
// SVD Line: 21065

//  <item> SFDITEM_FIELD__UCPD1_ICR_TXMSGSENTCF
//    <name> TXMSGSENTCF </name>
//    <rw> 
//    <i> [Bit 2] RW (@ 0x4000A018) TXMSGSENTCF </i>
//    <check> 
//      <loc> ( (unsigned int) UCPD1_ICR ) </loc>
//      <o.2..2> TXMSGSENTCF
//    </check>
//  </item>
//  


// ----------------------------  Field Item: UCPD1_ICR_TXMSGABTCF  --------------------------------
// SVD Line: 21071

//  <item> SFDITEM_FIELD__UCPD1_ICR_TXMSGABTCF
//    <name> TXMSGABTCF </name>
//    <rw> 
//    <i> [Bit 3] RW (@ 0x4000A018) TXMSGABTCF </i>
//    <check> 
//      <loc> ( (unsigned int) UCPD1_ICR ) </loc>
//      <o.3..3> TXMSGABTCF
//    </check>
//  </item>
//  


// ----------------------------  Field Item: UCPD1_ICR_HRSTDISCCF  --------------------------------
// SVD Line: 21077

//  <item> SFDITEM_FIELD__UCPD1_ICR_HRSTDISCCF
//    <name> HRSTDISCCF </name>
//    <rw> 
//    <i> [Bit 4] RW (@ 0x4000A018) HRSTDISCCF </i>
//    <check> 
//      <loc> ( (unsigned int) UCPD1_ICR ) </loc>
//      <o.4..4> HRSTDISCCF
//    </check>
//  </item>
//  


// ----------------------------  Field Item: UCPD1_ICR_HRSTSENTCF  --------------------------------
// SVD Line: 21083

//  <item> SFDITEM_FIELD__UCPD1_ICR_HRSTSENTCF
//    <name> HRSTSENTCF </name>
//    <rw> 
//    <i> [Bit 5] RW (@ 0x4000A018) HRSTSENTCF </i>
//    <check> 
//      <loc> ( (unsigned int) UCPD1_ICR ) </loc>
//      <o.5..5> HRSTSENTCF
//    </check>
//  </item>
//  


// ------------------------------  Field Item: UCPD1_ICR_TXUNDCF  ---------------------------------
// SVD Line: 21089

//  <item> SFDITEM_FIELD__UCPD1_ICR_TXUNDCF
//    <name> TXUNDCF </name>
//    <rw> 
//    <i> [Bit 6] RW (@ 0x4000A018) TXUNDCF </i>
//    <check> 
//      <loc> ( (unsigned int) UCPD1_ICR ) </loc>
//      <o.6..6> TXUNDCF
//    </check>
//  </item>
//  


// ----------------------------  Field Item: UCPD1_ICR_RXORDDETCF  --------------------------------
// SVD Line: 21095

//  <item> SFDITEM_FIELD__UCPD1_ICR_RXORDDETCF
//    <name> RXORDDETCF </name>
//    <rw> 
//    <i> [Bit 9] RW (@ 0x4000A018) RXORDDETCF </i>
//    <check> 
//      <loc> ( (unsigned int) UCPD1_ICR ) </loc>
//      <o.9..9> RXORDDETCF
//    </check>
//  </item>
//  


// ----------------------------  Field Item: UCPD1_ICR_RXHRSTDETCF  -------------------------------
// SVD Line: 21101

//  <item> SFDITEM_FIELD__UCPD1_ICR_RXHRSTDETCF
//    <name> RXHRSTDETCF </name>
//    <rw> 
//    <i> [Bit 10] RW (@ 0x4000A018) RXHRSTDETCF </i>
//    <check> 
//      <loc> ( (unsigned int) UCPD1_ICR ) </loc>
//      <o.10..10> RXHRSTDETCF
//    </check>
//  </item>
//  


// ------------------------------  Field Item: UCPD1_ICR_RXOVRCF  ---------------------------------
// SVD Line: 21107

//  <item> SFDITEM_FIELD__UCPD1_ICR_RXOVRCF
//    <name> RXOVRCF </name>
//    <rw> 
//    <i> [Bit 11] RW (@ 0x4000A018) RXOVRCF </i>
//    <check> 
//      <loc> ( (unsigned int) UCPD1_ICR ) </loc>
//      <o.11..11> RXOVRCF
//    </check>
//  </item>
//  


// ----------------------------  Field Item: UCPD1_ICR_RXMSGENDCF  --------------------------------
// SVD Line: 21113

//  <item> SFDITEM_FIELD__UCPD1_ICR_RXMSGENDCF
//    <name> RXMSGENDCF </name>
//    <rw> 
//    <i> [Bit 12] RW (@ 0x4000A018) RXMSGENDCF </i>
//    <check> 
//      <loc> ( (unsigned int) UCPD1_ICR ) </loc>
//      <o.12..12> RXMSGENDCF
//    </check>
//  </item>
//  


// ----------------------------  Field Item: UCPD1_ICR_TYPECEVT1CF  -------------------------------
// SVD Line: 21119

//  <item> SFDITEM_FIELD__UCPD1_ICR_TYPECEVT1CF
//    <name> TYPECEVT1CF </name>
//    <rw> 
//    <i> [Bit 14] RW (@ 0x4000A018) TYPECEVT1CF </i>
//    <check> 
//      <loc> ( (unsigned int) UCPD1_ICR ) </loc>
//      <o.14..14> TYPECEVT1CF
//    </check>
//  </item>
//  


// ----------------------------  Field Item: UCPD1_ICR_TYPECEVT2CF  -------------------------------
// SVD Line: 21125

//  <item> SFDITEM_FIELD__UCPD1_ICR_TYPECEVT2CF
//    <name> TYPECEVT2CF </name>
//    <rw> 
//    <i> [Bit 15] RW (@ 0x4000A018) TYPECEVT2CF </i>
//    <check> 
//      <loc> ( (unsigned int) UCPD1_ICR ) </loc>
//      <o.15..15> TYPECEVT2CF
//    </check>
//  </item>
//  


// -----------------------------  Field Item: UCPD1_ICR_FRSEVTCF  ---------------------------------
// SVD Line: 21131

//  <item> SFDITEM_FIELD__UCPD1_ICR_FRSEVTCF
//    <name> FRSEVTCF </name>
//    <rw> 
//    <i> [Bit 20] RW (@ 0x4000A018) FRSEVTCF </i>
//    <check> 
//      <loc> ( (unsigned int) UCPD1_ICR ) </loc>
//      <o.20..20> FRSEVTCF
//    </check>
//  </item>
//  


// --------------------------------  Register RTree: UCPD1_ICR  -----------------------------------
// SVD Line: 21050

//  <rtree> SFDITEM_REG__UCPD1_ICR
//    <name> ICR </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x4000A018) UCPD Interrupt Clear Register </i>
//    <loc> ( (unsigned int)((UCPD1_ICR >> 0) & 0xFFFFFFFF), ((UCPD1_ICR = (UCPD1_ICR & ~(0x10DE7EUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0x10DE7E) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__UCPD1_ICR_TXMSGDISCCF </item>
//    <item> SFDITEM_FIELD__UCPD1_ICR_TXMSGSENTCF </item>
//    <item> SFDITEM_FIELD__UCPD1_ICR_TXMSGABTCF </item>
//    <item> SFDITEM_FIELD__UCPD1_ICR_HRSTDISCCF </item>
//    <item> SFDITEM_FIELD__UCPD1_ICR_HRSTSENTCF </item>
//    <item> SFDITEM_FIELD__UCPD1_ICR_TXUNDCF </item>
//    <item> SFDITEM_FIELD__UCPD1_ICR_RXORDDETCF </item>
//    <item> SFDITEM_FIELD__UCPD1_ICR_RXHRSTDETCF </item>
//    <item> SFDITEM_FIELD__UCPD1_ICR_RXOVRCF </item>
//    <item> SFDITEM_FIELD__UCPD1_ICR_RXMSGENDCF </item>
//    <item> SFDITEM_FIELD__UCPD1_ICR_TYPECEVT1CF </item>
//    <item> SFDITEM_FIELD__UCPD1_ICR_TYPECEVT2CF </item>
//    <item> SFDITEM_FIELD__UCPD1_ICR_FRSEVTCF </item>
//  </rtree>
//  


// -------------------------  Register Item Address: UCPD1_TX_ORDSET  -----------------------------
// SVD Line: 21139

unsigned int UCPD1_TX_ORDSET __AT (0x4000A01C);



// --------------------------  Field Item: UCPD1_TX_ORDSET_TXORDSET  ------------------------------
// SVD Line: 21149

//  <item> SFDITEM_FIELD__UCPD1_TX_ORDSET_TXORDSET
//    <name> TXORDSET </name>
//    <rw> 
//    <i> [Bits 19..0] RW (@ 0x4000A01C) TXORDSET </i>
//    <edit> 
//      <loc> ( (unsigned int)((UCPD1_TX_ORDSET >> 0) & 0xFFFFF), ((UCPD1_TX_ORDSET = (UCPD1_TX_ORDSET & ~(0xFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -----------------------------  Register RTree: UCPD1_TX_ORDSET  --------------------------------
// SVD Line: 21139

//  <rtree> SFDITEM_REG__UCPD1_TX_ORDSET
//    <name> TX_ORDSET </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x4000A01C) UCPD Tx Ordered Set Type  Register </i>
//    <loc> ( (unsigned int)((UCPD1_TX_ORDSET >> 0) & 0xFFFFFFFF), ((UCPD1_TX_ORDSET = (UCPD1_TX_ORDSET & ~(0xFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__UCPD1_TX_ORDSET_TXORDSET </item>
//  </rtree>
//  


// --------------------------  Register Item Address: UCPD1_TX_PAYSZ  -----------------------------
// SVD Line: 21157

unsigned int UCPD1_TX_PAYSZ __AT (0x4000A020);



// ---------------------------  Field Item: UCPD1_TX_PAYSZ_TXPAYSZ  -------------------------------
// SVD Line: 21166

//  <item> SFDITEM_FIELD__UCPD1_TX_PAYSZ_TXPAYSZ
//    <name> TXPAYSZ </name>
//    <rw> 
//    <i> [Bits 9..0] RW (@ 0x4000A020) TXPAYSZ </i>
//    <edit> 
//      <loc> ( (unsigned short)((UCPD1_TX_PAYSZ >> 0) & 0x3FF), ((UCPD1_TX_PAYSZ = (UCPD1_TX_PAYSZ & ~(0x3FFUL << 0 )) | ((unsigned long)(Gui_u16:GuiVal & 0x3FF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -----------------------------  Register RTree: UCPD1_TX_PAYSZ  ---------------------------------
// SVD Line: 21157

//  <rtree> SFDITEM_REG__UCPD1_TX_PAYSZ
//    <name> TX_PAYSZ </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x4000A020) UCPD Tx Paysize Register </i>
//    <loc> ( (unsigned int)((UCPD1_TX_PAYSZ >> 0) & 0xFFFFFFFF), ((UCPD1_TX_PAYSZ = (UCPD1_TX_PAYSZ & ~(0x3FFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0x3FF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__UCPD1_TX_PAYSZ_TXPAYSZ </item>
//  </rtree>
//  


// ----------------------------  Register Item Address: UCPD1_TXDR  -------------------------------
// SVD Line: 21174

unsigned int UCPD1_TXDR __AT (0x4000A024);



// ------------------------------  Field Item: UCPD1_TXDR_TXDATA  ---------------------------------
// SVD Line: 21183

//  <item> SFDITEM_FIELD__UCPD1_TXDR_TXDATA
//    <name> TXDATA </name>
//    <rw> 
//    <i> [Bits 7..0] RW (@ 0x4000A024) TXDATA </i>
//    <edit> 
//      <loc> ( (unsigned char)((UCPD1_TXDR >> 0) & 0xFF), ((UCPD1_TXDR = (UCPD1_TXDR & ~(0xFFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -------------------------------  Register RTree: UCPD1_TXDR  -----------------------------------
// SVD Line: 21174

//  <rtree> SFDITEM_REG__UCPD1_TXDR
//    <name> TXDR </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x4000A024) UCPD Tx Data Register </i>
//    <loc> ( (unsigned int)((UCPD1_TXDR >> 0) & 0xFFFFFFFF), ((UCPD1_TXDR = (UCPD1_TXDR & ~(0xFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__UCPD1_TXDR_TXDATA </item>
//  </rtree>
//  


// -------------------------  Register Item Address: UCPD1_RX_ORDSET  -----------------------------
// SVD Line: 21191

unsigned int UCPD1_RX_ORDSET __AT (0x4000A028);



// --------------------------  Field Item: UCPD1_RX_ORDSET_RXORDSET  ------------------------------
// SVD Line: 21200

//  <item> SFDITEM_FIELD__UCPD1_RX_ORDSET_RXORDSET
//    <name> RXORDSET </name>
//    <r> 
//    <i> [Bits 2..0] RO (@ 0x4000A028) RXORDSET </i>
//    <edit> 
//      <loc> ( (unsigned char)((UCPD1_RX_ORDSET >> 0) & 0x7) ) </loc>
//    </edit>
//  </item>
//  


// --------------------------  Field Item: UCPD1_RX_ORDSET_RXSOP3OF4  -----------------------------
// SVD Line: 21206

//  <item> SFDITEM_FIELD__UCPD1_RX_ORDSET_RXSOP3OF4
//    <name> RXSOP3OF4 </name>
//    <r> 
//    <i> [Bit 3] RO (@ 0x4000A028) RXSOP3OF4 </i>
//    <check> 
//      <loc> ( (unsigned int) UCPD1_RX_ORDSET ) </loc>
//      <o.3..3> RXSOP3OF4
//    </check>
//  </item>
//  


// ------------------------  Field Item: UCPD1_RX_ORDSET_RXSOPKINVALID  ---------------------------
// SVD Line: 21212

//  <item> SFDITEM_FIELD__UCPD1_RX_ORDSET_RXSOPKINVALID
//    <name> RXSOPKINVALID </name>
//    <r> 
//    <i> [Bits 6..4] RO (@ 0x4000A028) RXSOPKINVALID </i>
//    <edit> 
//      <loc> ( (unsigned char)((UCPD1_RX_ORDSET >> 4) & 0x7) ) </loc>
//    </edit>
//  </item>
//  


// -----------------------------  Register RTree: UCPD1_RX_ORDSET  --------------------------------
// SVD Line: 21191

//  <rtree> SFDITEM_REG__UCPD1_RX_ORDSET
//    <name> RX_ORDSET </name>
//    <r> 
//    <i> [Bits 31..0] RO (@ 0x4000A028) UCPD Rx Ordered Set Register </i>
//    <loc> ( (unsigned int)((UCPD1_RX_ORDSET >> 0) & 0xFFFFFFFF) ) </loc>
//    <item> SFDITEM_FIELD__UCPD1_RX_ORDSET_RXORDSET </item>
//    <item> SFDITEM_FIELD__UCPD1_RX_ORDSET_RXSOP3OF4 </item>
//    <item> SFDITEM_FIELD__UCPD1_RX_ORDSET_RXSOPKINVALID </item>
//  </rtree>
//  


// --------------------------  Register Item Address: UCPD1_RX_PAYSZ  -----------------------------
// SVD Line: 21220

unsigned int UCPD1_RX_PAYSZ __AT (0x4000A02C);



// ---------------------------  Field Item: UCPD1_RX_PAYSZ_RXPAYSZ  -------------------------------
// SVD Line: 21229

//  <item> SFDITEM_FIELD__UCPD1_RX_PAYSZ_RXPAYSZ
//    <name> RXPAYSZ </name>
//    <rw> 
//    <i> [Bits 9..0] RW (@ 0x4000A02C) RXPAYSZ </i>
//    <edit> 
//      <loc> ( (unsigned short)((UCPD1_RX_PAYSZ >> 0) & 0x3FF), ((UCPD1_RX_PAYSZ = (UCPD1_RX_PAYSZ & ~(0x3FFUL << 0 )) | ((unsigned long)(Gui_u16:GuiVal & 0x3FF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -----------------------------  Register RTree: UCPD1_RX_PAYSZ  ---------------------------------
// SVD Line: 21220

//  <rtree> SFDITEM_REG__UCPD1_RX_PAYSZ
//    <name> RX_PAYSZ </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x4000A02C) UCPD Rx Paysize Register </i>
//    <loc> ( (unsigned int)((UCPD1_RX_PAYSZ >> 0) & 0xFFFFFFFF), ((UCPD1_RX_PAYSZ = (UCPD1_RX_PAYSZ & ~(0x3FFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0x3FF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__UCPD1_RX_PAYSZ_RXPAYSZ </item>
//  </rtree>
//  


// ----------------------------  Register Item Address: UCPD1_RXDR  -------------------------------
// SVD Line: 21237

unsigned int UCPD1_RXDR __AT (0x4000A030);



// ------------------------------  Field Item: UCPD1_RXDR_RXDATA  ---------------------------------
// SVD Line: 21246

//  <item> SFDITEM_FIELD__UCPD1_RXDR_RXDATA
//    <name> RXDATA </name>
//    <r> 
//    <i> [Bits 7..0] RO (@ 0x4000A030) RXDATA </i>
//    <edit> 
//      <loc> ( (unsigned char)((UCPD1_RXDR >> 0) & 0xFF) ) </loc>
//    </edit>
//  </item>
//  


// -------------------------------  Register RTree: UCPD1_RXDR  -----------------------------------
// SVD Line: 21237

//  <rtree> SFDITEM_REG__UCPD1_RXDR
//    <name> RXDR </name>
//    <r> 
//    <i> [Bits 31..0] RO (@ 0x4000A030) UCPD Receive Data Register </i>
//    <loc> ( (unsigned int)((UCPD1_RXDR >> 0) & 0xFFFFFFFF) ) </loc>
//    <item> SFDITEM_FIELD__UCPD1_RXDR_RXDATA </item>
//  </rtree>
//  


// -------------------------  Register Item Address: UCPD1_RX_ORDEXT1  ----------------------------
// SVD Line: 21254

unsigned int UCPD1_RX_ORDEXT1 __AT (0x4000A034);



// --------------------------  Field Item: UCPD1_RX_ORDEXT1_RXSOPX1  ------------------------------
// SVD Line: 21264

//  <item> SFDITEM_FIELD__UCPD1_RX_ORDEXT1_RXSOPX1
//    <name> RXSOPX1 </name>
//    <rw> 
//    <i> [Bits 19..0] RW (@ 0x4000A034) RXSOPX1 </i>
//    <edit> 
//      <loc> ( (unsigned int)((UCPD1_RX_ORDEXT1 >> 0) & 0xFFFFF), ((UCPD1_RX_ORDEXT1 = (UCPD1_RX_ORDEXT1 & ~(0xFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ----------------------------  Register RTree: UCPD1_RX_ORDEXT1  --------------------------------
// SVD Line: 21254

//  <rtree> SFDITEM_REG__UCPD1_RX_ORDEXT1
//    <name> RX_ORDEXT1 </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x4000A034) UCPD Rx Ordered Set Extension  Register </i>
//    <loc> ( (unsigned int)((UCPD1_RX_ORDEXT1 >> 0) & 0xFFFFFFFF), ((UCPD1_RX_ORDEXT1 = (UCPD1_RX_ORDEXT1 & ~(0xFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__UCPD1_RX_ORDEXT1_RXSOPX1 </item>
//  </rtree>
//  


// -------------------------  Register Item Address: UCPD1_RX_ORDEXT2  ----------------------------
// SVD Line: 21272

unsigned int UCPD1_RX_ORDEXT2 __AT (0x4000A038);



// --------------------------  Field Item: UCPD1_RX_ORDEXT2_RXSOPX2  ------------------------------
// SVD Line: 21282

//  <item> SFDITEM_FIELD__UCPD1_RX_ORDEXT2_RXSOPX2
//    <name> RXSOPX2 </name>
//    <rw> 
//    <i> [Bits 19..0] RW (@ 0x4000A038) RXSOPX2 </i>
//    <edit> 
//      <loc> ( (unsigned int)((UCPD1_RX_ORDEXT2 >> 0) & 0xFFFFF), ((UCPD1_RX_ORDEXT2 = (UCPD1_RX_ORDEXT2 & ~(0xFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ----------------------------  Register RTree: UCPD1_RX_ORDEXT2  --------------------------------
// SVD Line: 21272

//  <rtree> SFDITEM_REG__UCPD1_RX_ORDEXT2
//    <name> RX_ORDEXT2 </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x4000A038) UCPD Rx Ordered Set Extension  Register </i>
//    <loc> ( (unsigned int)((UCPD1_RX_ORDEXT2 >> 0) & 0xFFFFFFFF), ((UCPD1_RX_ORDEXT2 = (UCPD1_RX_ORDEXT2 & ~(0xFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__UCPD1_RX_ORDEXT2_RXSOPX2 </item>
//  </rtree>
//  


// ---------------------------  Register Item Address: UCPD1_IPVER  -------------------------------
// SVD Line: 21290

unsigned int UCPD1_IPVER __AT (0x4000A3F4);



// ------------------------------  Field Item: UCPD1_IPVER_IPVER  ---------------------------------
// SVD Line: 21299

//  <item> SFDITEM_FIELD__UCPD1_IPVER_IPVER
//    <name> IPVER </name>
//    <r> 
//    <i> [Bits 31..0] RO (@ 0x4000A3F4) IPVER </i>
//    <edit> 
//      <loc> ( (unsigned int)((UCPD1_IPVER >> 0) & 0xFFFFFFFF) ) </loc>
//    </edit>
//  </item>
//  


// -------------------------------  Register RTree: UCPD1_IPVER  ----------------------------------
// SVD Line: 21290

//  <rtree> SFDITEM_REG__UCPD1_IPVER
//    <name> IPVER </name>
//    <r> 
//    <i> [Bits 31..0] RO (@ 0x4000A3F4) UCPD IP ID register </i>
//    <loc> ( (unsigned int)((UCPD1_IPVER >> 0) & 0xFFFFFFFF) ) </loc>
//    <item> SFDITEM_FIELD__UCPD1_IPVER_IPVER </item>
//  </rtree>
//  


// ----------------------------  Register Item Address: UCPD1_IPID  -------------------------------
// SVD Line: 21307

unsigned int UCPD1_IPID __AT (0x4000A3F8);



// -------------------------------  Field Item: UCPD1_IPID_IPID  ----------------------------------
// SVD Line: 21316

//  <item> SFDITEM_FIELD__UCPD1_IPID_IPID
//    <name> IPID </name>
//    <r> 
//    <i> [Bits 31..0] RO (@ 0x4000A3F8) IPID </i>
//    <edit> 
//      <loc> ( (unsigned int)((UCPD1_IPID >> 0) & 0xFFFFFFFF) ) </loc>
//    </edit>
//  </item>
//  


// -------------------------------  Register RTree: UCPD1_IPID  -----------------------------------
// SVD Line: 21307

//  <rtree> SFDITEM_REG__UCPD1_IPID
//    <name> IPID </name>
//    <r> 
//    <i> [Bits 31..0] RO (@ 0x4000A3F8) UCPD IP ID register </i>
//    <loc> ( (unsigned int)((UCPD1_IPID >> 0) & 0xFFFFFFFF) ) </loc>
//    <item> SFDITEM_FIELD__UCPD1_IPID_IPID </item>
//  </rtree>
//  


// ----------------------------  Register Item Address: UCPD1_MID  --------------------------------
// SVD Line: 21324

unsigned int UCPD1_MID __AT (0x4000A3FC);



// -------------------------------  Field Item: UCPD1_MID_IPID  -----------------------------------
// SVD Line: 21333

//  <item> SFDITEM_FIELD__UCPD1_MID_IPID
//    <name> IPID </name>
//    <r> 
//    <i> [Bits 31..0] RO (@ 0x4000A3FC) IPID </i>
//    <edit> 
//      <loc> ( (unsigned int)((UCPD1_MID >> 0) & 0xFFFFFFFF) ) </loc>
//    </edit>
//  </item>
//  


// --------------------------------  Register RTree: UCPD1_MID  -----------------------------------
// SVD Line: 21324

//  <rtree> SFDITEM_REG__UCPD1_MID
//    <name> MID </name>
//    <r> 
//    <i> [Bits 31..0] RO (@ 0x4000A3FC) UCPD IP ID register </i>
//    <loc> ( (unsigned int)((UCPD1_MID >> 0) & 0xFFFFFFFF) ) </loc>
//    <item> SFDITEM_FIELD__UCPD1_MID_IPID </item>
//  </rtree>
//  


// ---------------------------------  Peripheral View: UCPD1  -------------------------------------
// SVD Line: 20572

//  <view> UCPD1
//    <name> UCPD1 </name>
//    <item> SFDITEM_REG__UCPD1_CFG1 </item>
//    <item> SFDITEM_REG__UCPD1_CFG2 </item>
//    <item> SFDITEM_REG__UCPD1_CFG3 </item>
//    <item> SFDITEM_REG__UCPD1_CR </item>
//    <item> SFDITEM_REG__UCPD1_IMR </item>
//    <item> SFDITEM_REG__UCPD1_SR </item>
//    <item> SFDITEM_REG__UCPD1_ICR </item>
//    <item> SFDITEM_REG__UCPD1_TX_ORDSET </item>
//    <item> SFDITEM_REG__UCPD1_TX_PAYSZ </item>
//    <item> SFDITEM_REG__UCPD1_TXDR </item>
//    <item> SFDITEM_REG__UCPD1_RX_ORDSET </item>
//    <item> SFDITEM_REG__UCPD1_RX_PAYSZ </item>
//    <item> SFDITEM_REG__UCPD1_RXDR </item>
//    <item> SFDITEM_REG__UCPD1_RX_ORDEXT1 </item>
//    <item> SFDITEM_REG__UCPD1_RX_ORDEXT2 </item>
//    <item> SFDITEM_REG__UCPD1_IPVER </item>
//    <item> SFDITEM_REG__UCPD1_IPID </item>
//    <item> SFDITEM_REG__UCPD1_MID </item>
//  </view>
//  


// ----------------------------  Register Item Address: UCPD2_CFG1  -------------------------------
// SVD Line: 20588

unsigned int UCPD2_CFG1 __AT (0x4000A400);



// ----------------------------  Field Item: UCPD2_CFG1_HBITCLKDIV  -------------------------------
// SVD Line: 20597

//  <item> SFDITEM_FIELD__UCPD2_CFG1_HBITCLKDIV
//    <name> HBITCLKDIV </name>
//    <rw> 
//    <i> [Bits 5..0] RW (@ 0x4000A400) HBITCLKDIV </i>
//    <edit> 
//      <loc> ( (unsigned char)((UCPD2_CFG1 >> 0) & 0x3F), ((UCPD2_CFG1 = (UCPD2_CFG1 & ~(0x3FUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0x3F) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ------------------------------  Field Item: UCPD2_CFG1_IFRGAP  ---------------------------------
// SVD Line: 20603

//  <item> SFDITEM_FIELD__UCPD2_CFG1_IFRGAP
//    <name> IFRGAP </name>
//    <rw> 
//    <i> [Bits 10..6] RW (@ 0x4000A400) IFRGAP </i>
//    <edit> 
//      <loc> ( (unsigned char)((UCPD2_CFG1 >> 6) & 0x1F), ((UCPD2_CFG1 = (UCPD2_CFG1 & ~(0x1FUL << 6 )) | ((unsigned long)(Gui_u8:GuiVal & 0x1F) << 6 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -----------------------------  Field Item: UCPD2_CFG1_TRANSWIN  --------------------------------
// SVD Line: 20609

//  <item> SFDITEM_FIELD__UCPD2_CFG1_TRANSWIN
//    <name> TRANSWIN </name>
//    <rw> 
//    <i> [Bits 15..11] RW (@ 0x4000A400) TRANSWIN </i>
//    <edit> 
//      <loc> ( (unsigned char)((UCPD2_CFG1 >> 11) & 0x1F), ((UCPD2_CFG1 = (UCPD2_CFG1 & ~(0x1FUL << 11 )) | ((unsigned long)(Gui_u8:GuiVal & 0x1F) << 11 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ---------------------------  Field Item: UCPD2_CFG1_PSC_USBPDCLK  ------------------------------
// SVD Line: 20615

//  <item> SFDITEM_FIELD__UCPD2_CFG1_PSC_USBPDCLK
//    <name> PSC_USBPDCLK </name>
//    <rw> 
//    <i> [Bits 19..17] RW (@ 0x4000A400) PSC_USBPDCLK </i>
//    <edit> 
//      <loc> ( (unsigned char)((UCPD2_CFG1 >> 17) & 0x7), ((UCPD2_CFG1 = (UCPD2_CFG1 & ~(0x7UL << 17 )) | ((unsigned long)(Gui_u8:GuiVal & 0x7) << 17 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ----------------------------  Field Item: UCPD2_CFG1_RXORDSETEN  -------------------------------
// SVD Line: 20621

//  <item> SFDITEM_FIELD__UCPD2_CFG1_RXORDSETEN
//    <name> RXORDSETEN </name>
//    <rw> 
//    <i> [Bits 28..20] RW (@ 0x4000A400) RXORDSETEN </i>
//    <edit> 
//      <loc> ( (unsigned short)((UCPD2_CFG1 >> 20) & 0x1FF), ((UCPD2_CFG1 = (UCPD2_CFG1 & ~(0x1FFUL << 20 )) | ((unsigned long)(Gui_u16:GuiVal & 0x1FF) << 20 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -----------------------------  Field Item: UCPD2_CFG1_TXDMAEN  ---------------------------------
// SVD Line: 20627

//  <item> SFDITEM_FIELD__UCPD2_CFG1_TXDMAEN
//    <name> TXDMAEN </name>
//    <rw> 
//    <i> [Bit 29] RW (@ 0x4000A400) TXDMAEN </i>
//    <check> 
//      <loc> ( (unsigned int) UCPD2_CFG1 ) </loc>
//      <o.29..29> TXDMAEN
//    </check>
//  </item>
//  


// -----------------------------  Field Item: UCPD2_CFG1_RXDMAEN  ---------------------------------
// SVD Line: 20633

//  <item> SFDITEM_FIELD__UCPD2_CFG1_RXDMAEN
//    <name> RXDMAEN </name>
//    <rw> 
//    <i> [Bit 30] RW (@ 0x4000A400) RXDMAEN: </i>
//    <check> 
//      <loc> ( (unsigned int) UCPD2_CFG1 ) </loc>
//      <o.30..30> RXDMAEN
//    </check>
//  </item>
//  


// ------------------------------  Field Item: UCPD2_CFG1_UCPDEN  ---------------------------------
// SVD Line: 20639

//  <item> SFDITEM_FIELD__UCPD2_CFG1_UCPDEN
//    <name> UCPDEN </name>
//    <rw> 
//    <i> [Bit 31] RW (@ 0x4000A400) UCPDEN </i>
//    <check> 
//      <loc> ( (unsigned int) UCPD2_CFG1 ) </loc>
//      <o.31..31> UCPDEN
//    </check>
//  </item>
//  


// -------------------------------  Register RTree: UCPD2_CFG1  -----------------------------------
// SVD Line: 20588

//  <rtree> SFDITEM_REG__UCPD2_CFG1
//    <name> CFG1 </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x4000A400) UCPD configuration register </i>
//    <loc> ( (unsigned int)((UCPD2_CFG1 >> 0) & 0xFFFFFFFF), ((UCPD2_CFG1 = (UCPD2_CFG1 & ~(0xFFFEFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFEFFFF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__UCPD2_CFG1_HBITCLKDIV </item>
//    <item> SFDITEM_FIELD__UCPD2_CFG1_IFRGAP </item>
//    <item> SFDITEM_FIELD__UCPD2_CFG1_TRANSWIN </item>
//    <item> SFDITEM_FIELD__UCPD2_CFG1_PSC_USBPDCLK </item>
//    <item> SFDITEM_FIELD__UCPD2_CFG1_RXORDSETEN </item>
//    <item> SFDITEM_FIELD__UCPD2_CFG1_TXDMAEN </item>
//    <item> SFDITEM_FIELD__UCPD2_CFG1_RXDMAEN </item>
//    <item> SFDITEM_FIELD__UCPD2_CFG1_UCPDEN </item>
//  </rtree>
//  


// ----------------------------  Register Item Address: UCPD2_CFG2  -------------------------------
// SVD Line: 20647

unsigned int UCPD2_CFG2 __AT (0x4000A404);



// ----------------------------  Field Item: UCPD2_CFG2_RXFILTDIS  --------------------------------
// SVD Line: 20656

//  <item> SFDITEM_FIELD__UCPD2_CFG2_RXFILTDIS
//    <name> RXFILTDIS </name>
//    <rw> 
//    <i> [Bit 0] RW (@ 0x4000A404) RXFILTDIS </i>
//    <check> 
//      <loc> ( (unsigned int) UCPD2_CFG2 ) </loc>
//      <o.0..0> RXFILTDIS
//    </check>
//  </item>
//  


// ----------------------------  Field Item: UCPD2_CFG2_RXFILT2N3  --------------------------------
// SVD Line: 20662

//  <item> SFDITEM_FIELD__UCPD2_CFG2_RXFILT2N3
//    <name> RXFILT2N3 </name>
//    <rw> 
//    <i> [Bit 1] RW (@ 0x4000A404) RXFILT2N3 </i>
//    <check> 
//      <loc> ( (unsigned int) UCPD2_CFG2 ) </loc>
//      <o.1..1> RXFILT2N3
//    </check>
//  </item>
//  


// -----------------------------  Field Item: UCPD2_CFG2_FORCECLK  --------------------------------
// SVD Line: 20668

//  <item> SFDITEM_FIELD__UCPD2_CFG2_FORCECLK
//    <name> FORCECLK </name>
//    <rw> 
//    <i> [Bit 2] RW (@ 0x4000A404) FORCECLK </i>
//    <check> 
//      <loc> ( (unsigned int) UCPD2_CFG2 ) </loc>
//      <o.2..2> FORCECLK
//    </check>
//  </item>
//  


// ------------------------------  Field Item: UCPD2_CFG2_WUPEN  ----------------------------------
// SVD Line: 20674

//  <item> SFDITEM_FIELD__UCPD2_CFG2_WUPEN
//    <name> WUPEN </name>
//    <rw> 
//    <i> [Bit 3] RW (@ 0x4000A404) WUPEN </i>
//    <check> 
//      <loc> ( (unsigned int) UCPD2_CFG2 ) </loc>
//      <o.3..3> WUPEN
//    </check>
//  </item>
//  


// -------------------------------  Register RTree: UCPD2_CFG2  -----------------------------------
// SVD Line: 20647

//  <rtree> SFDITEM_REG__UCPD2_CFG2
//    <name> CFG2 </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x4000A404) UCPD configuration register 2 </i>
//    <loc> ( (unsigned int)((UCPD2_CFG2 >> 0) & 0xFFFFFFFF), ((UCPD2_CFG2 = (UCPD2_CFG2 & ~(0xFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__UCPD2_CFG2_RXFILTDIS </item>
//    <item> SFDITEM_FIELD__UCPD2_CFG2_RXFILT2N3 </item>
//    <item> SFDITEM_FIELD__UCPD2_CFG2_FORCECLK </item>
//    <item> SFDITEM_FIELD__UCPD2_CFG2_WUPEN </item>
//  </rtree>
//  


// ----------------------------  Register Item Address: UCPD2_CFG3  -------------------------------
// SVD Line: 20682

unsigned int UCPD2_CFG3 __AT (0x4000A408);



// --------------------------  Field Item: UCPD2_CFG3_TRIM1_NG_CCRPD  -----------------------------
// SVD Line: 20691

//  <item> SFDITEM_FIELD__UCPD2_CFG3_TRIM1_NG_CCRPD
//    <name> TRIM1_NG_CCRPD </name>
//    <rw> 
//    <i> [Bits 3..0] RW (@ 0x4000A408) TRIM1_NG_CCRPD </i>
//    <edit> 
//      <loc> ( (unsigned char)((UCPD2_CFG3 >> 0) & 0xF), ((UCPD2_CFG3 = (UCPD2_CFG3 & ~(0xFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// --------------------------  Field Item: UCPD2_CFG3_TRIM1_NG_CC1A5  -----------------------------
// SVD Line: 20697

//  <item> SFDITEM_FIELD__UCPD2_CFG3_TRIM1_NG_CC1A5
//    <name> TRIM1_NG_CC1A5 </name>
//    <rw> 
//    <i> [Bits 8..4] RW (@ 0x4000A408) TRIM1_NG_CC1A5 </i>
//    <edit> 
//      <loc> ( (unsigned char)((UCPD2_CFG3 >> 4) & 0x1F), ((UCPD2_CFG3 = (UCPD2_CFG3 & ~(0x1FUL << 4 )) | ((unsigned long)(Gui_u8:GuiVal & 0x1F) << 4 ) ) )) </loc>
//    </edit>
//  </item>
//  


// --------------------------  Field Item: UCPD2_CFG3_TRIM1_NG_CC3A0  -----------------------------
// SVD Line: 20703

//  <item> SFDITEM_FIELD__UCPD2_CFG3_TRIM1_NG_CC3A0
//    <name> TRIM1_NG_CC3A0 </name>
//    <rw> 
//    <i> [Bits 12..9] RW (@ 0x4000A408) TRIM1_NG_CC3A0 </i>
//    <edit> 
//      <loc> ( (unsigned char)((UCPD2_CFG3 >> 9) & 0xF), ((UCPD2_CFG3 = (UCPD2_CFG3 & ~(0xFUL << 9 )) | ((unsigned long)(Gui_u8:GuiVal & 0xF) << 9 ) ) )) </loc>
//    </edit>
//  </item>
//  


// --------------------------  Field Item: UCPD2_CFG3_TRIM2_NG_CCRPD  -----------------------------
// SVD Line: 20709

//  <item> SFDITEM_FIELD__UCPD2_CFG3_TRIM2_NG_CCRPD
//    <name> TRIM2_NG_CCRPD </name>
//    <rw> 
//    <i> [Bits 19..16] RW (@ 0x4000A408) TRIM2_NG_CCRPD </i>
//    <edit> 
//      <loc> ( (unsigned char)((UCPD2_CFG3 >> 16) & 0xF), ((UCPD2_CFG3 = (UCPD2_CFG3 & ~(0xFUL << 16 )) | ((unsigned long)(Gui_u8:GuiVal & 0xF) << 16 ) ) )) </loc>
//    </edit>
//  </item>
//  


// --------------------------  Field Item: UCPD2_CFG3_TRIM2_NG_CC1A5  -----------------------------
// SVD Line: 20715

//  <item> SFDITEM_FIELD__UCPD2_CFG3_TRIM2_NG_CC1A5
//    <name> TRIM2_NG_CC1A5 </name>
//    <rw> 
//    <i> [Bits 24..20] RW (@ 0x4000A408) TRIM2_NG_CC1A5 </i>
//    <edit> 
//      <loc> ( (unsigned char)((UCPD2_CFG3 >> 20) & 0x1F), ((UCPD2_CFG3 = (UCPD2_CFG3 & ~(0x1FUL << 20 )) | ((unsigned long)(Gui_u8:GuiVal & 0x1F) << 20 ) ) )) </loc>
//    </edit>
//  </item>
//  


// --------------------------  Field Item: UCPD2_CFG3_TRIM2_NG_CC3A0  -----------------------------
// SVD Line: 20721

//  <item> SFDITEM_FIELD__UCPD2_CFG3_TRIM2_NG_CC3A0
//    <name> TRIM2_NG_CC3A0 </name>
//    <rw> 
//    <i> [Bits 28..25] RW (@ 0x4000A408) TRIM2_NG_CC3A0 </i>
//    <edit> 
//      <loc> ( (unsigned char)((UCPD2_CFG3 >> 25) & 0xF), ((UCPD2_CFG3 = (UCPD2_CFG3 & ~(0xFUL << 25 )) | ((unsigned long)(Gui_u8:GuiVal & 0xF) << 25 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -------------------------------  Register RTree: UCPD2_CFG3  -----------------------------------
// SVD Line: 20682

//  <rtree> SFDITEM_REG__UCPD2_CFG3
//    <name> CFG3 </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x4000A408) UCPD configuration register 3 </i>
//    <loc> ( (unsigned int)((UCPD2_CFG3 >> 0) & 0xFFFFFFFF), ((UCPD2_CFG3 = (UCPD2_CFG3 & ~(0x1FFF1FFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0x1FFF1FFF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__UCPD2_CFG3_TRIM1_NG_CCRPD </item>
//    <item> SFDITEM_FIELD__UCPD2_CFG3_TRIM1_NG_CC1A5 </item>
//    <item> SFDITEM_FIELD__UCPD2_CFG3_TRIM1_NG_CC3A0 </item>
//    <item> SFDITEM_FIELD__UCPD2_CFG3_TRIM2_NG_CCRPD </item>
//    <item> SFDITEM_FIELD__UCPD2_CFG3_TRIM2_NG_CC1A5 </item>
//    <item> SFDITEM_FIELD__UCPD2_CFG3_TRIM2_NG_CC3A0 </item>
//  </rtree>
//  


// -----------------------------  Register Item Address: UCPD2_CR  --------------------------------
// SVD Line: 20729

unsigned int UCPD2_CR __AT (0x4000A40C);



// -------------------------------  Field Item: UCPD2_CR_TXMODE  ----------------------------------
// SVD Line: 20738

//  <item> SFDITEM_FIELD__UCPD2_CR_TXMODE
//    <name> TXMODE </name>
//    <rw> 
//    <i> [Bits 1..0] RW (@ 0x4000A40C) TXMODE </i>
//    <edit> 
//      <loc> ( (unsigned char)((UCPD2_CR >> 0) & 0x3), ((UCPD2_CR = (UCPD2_CR & ~(0x3UL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0x3) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -------------------------------  Field Item: UCPD2_CR_TXSEND  ----------------------------------
// SVD Line: 20744

//  <item> SFDITEM_FIELD__UCPD2_CR_TXSEND
//    <name> TXSEND </name>
//    <rw> 
//    <i> [Bit 2] RW (@ 0x4000A40C) TXSEND </i>
//    <check> 
//      <loc> ( (unsigned int) UCPD2_CR ) </loc>
//      <o.2..2> TXSEND
//    </check>
//  </item>
//  


// -------------------------------  Field Item: UCPD2_CR_TXHRST  ----------------------------------
// SVD Line: 20750

//  <item> SFDITEM_FIELD__UCPD2_CR_TXHRST
//    <name> TXHRST </name>
//    <rw> 
//    <i> [Bit 3] RW (@ 0x4000A40C) TXHRST </i>
//    <check> 
//      <loc> ( (unsigned int) UCPD2_CR ) </loc>
//      <o.3..3> TXHRST
//    </check>
//  </item>
//  


// -------------------------------  Field Item: UCPD2_CR_RXMODE  ----------------------------------
// SVD Line: 20756

//  <item> SFDITEM_FIELD__UCPD2_CR_RXMODE
//    <name> RXMODE </name>
//    <rw> 
//    <i> [Bit 4] RW (@ 0x4000A40C) RXMODE </i>
//    <check> 
//      <loc> ( (unsigned int) UCPD2_CR ) </loc>
//      <o.4..4> RXMODE
//    </check>
//  </item>
//  


// ------------------------------  Field Item: UCPD2_CR_PHYRXEN  ----------------------------------
// SVD Line: 20762

//  <item> SFDITEM_FIELD__UCPD2_CR_PHYRXEN
//    <name> PHYRXEN </name>
//    <rw> 
//    <i> [Bit 5] RW (@ 0x4000A40C) PHYRXEN </i>
//    <check> 
//      <loc> ( (unsigned int) UCPD2_CR ) </loc>
//      <o.5..5> PHYRXEN
//    </check>
//  </item>
//  


// ------------------------------  Field Item: UCPD2_CR_PHYCCSEL  ---------------------------------
// SVD Line: 20768

//  <item> SFDITEM_FIELD__UCPD2_CR_PHYCCSEL
//    <name> PHYCCSEL </name>
//    <rw> 
//    <i> [Bit 6] RW (@ 0x4000A40C) PHYCCSEL </i>
//    <check> 
//      <loc> ( (unsigned int) UCPD2_CR ) </loc>
//      <o.6..6> PHYCCSEL
//    </check>
//  </item>
//  


// -----------------------------  Field Item: UCPD2_CR_ANASUBMODE  --------------------------------
// SVD Line: 20774

//  <item> SFDITEM_FIELD__UCPD2_CR_ANASUBMODE
//    <name> ANASUBMODE </name>
//    <rw> 
//    <i> [Bits 8..7] RW (@ 0x4000A40C) ANASUBMODE </i>
//    <edit> 
//      <loc> ( (unsigned char)((UCPD2_CR >> 7) & 0x3), ((UCPD2_CR = (UCPD2_CR & ~(0x3UL << 7 )) | ((unsigned long)(Gui_u8:GuiVal & 0x3) << 7 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ------------------------------  Field Item: UCPD2_CR_ANAMODE  ----------------------------------
// SVD Line: 20780

//  <item> SFDITEM_FIELD__UCPD2_CR_ANAMODE
//    <name> ANAMODE </name>
//    <rw> 
//    <i> [Bit 9] RW (@ 0x4000A40C) ANAMODE </i>
//    <check> 
//      <loc> ( (unsigned int) UCPD2_CR ) </loc>
//      <o.9..9> ANAMODE
//    </check>
//  </item>
//  


// ------------------------------  Field Item: UCPD2_CR_CCENABLE  ---------------------------------
// SVD Line: 20786

//  <item> SFDITEM_FIELD__UCPD2_CR_CCENABLE
//    <name> CCENABLE </name>
//    <rw> 
//    <i> [Bits 11..10] RW (@ 0x4000A40C) CCENABLE </i>
//    <edit> 
//      <loc> ( (unsigned char)((UCPD2_CR >> 10) & 0x3), ((UCPD2_CR = (UCPD2_CR & ~(0x3UL << 10 )) | ((unsigned long)(Gui_u8:GuiVal & 0x3) << 10 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ------------------------------  Field Item: UCPD2_CR_DBATTEN  ----------------------------------
// SVD Line: 20792

//  <item> SFDITEM_FIELD__UCPD2_CR_DBATTEN
//    <name> DBATTEN </name>
//    <rw> 
//    <i> [Bit 15] RW (@ 0x4000A40C) DBATTEN </i>
//    <check> 
//      <loc> ( (unsigned int) UCPD2_CR ) </loc>
//      <o.15..15> DBATTEN
//    </check>
//  </item>
//  


// ------------------------------  Field Item: UCPD2_CR_FRSRXEN  ----------------------------------
// SVD Line: 20798

//  <item> SFDITEM_FIELD__UCPD2_CR_FRSRXEN
//    <name> FRSRXEN </name>
//    <rw> 
//    <i> [Bit 16] RW (@ 0x4000A40C) FRSRXEN </i>
//    <check> 
//      <loc> ( (unsigned int) UCPD2_CR ) </loc>
//      <o.16..16> FRSRXEN
//    </check>
//  </item>
//  


// -------------------------------  Field Item: UCPD2_CR_FRSTX  -----------------------------------
// SVD Line: 20804

//  <item> SFDITEM_FIELD__UCPD2_CR_FRSTX
//    <name> FRSTX </name>
//    <rw> 
//    <i> [Bit 17] RW (@ 0x4000A40C) FRSTX </i>
//    <check> 
//      <loc> ( (unsigned int) UCPD2_CR ) </loc>
//      <o.17..17> FRSTX
//    </check>
//  </item>
//  


// --------------------------------  Field Item: UCPD2_CR_RDCH  -----------------------------------
// SVD Line: 20810

//  <item> SFDITEM_FIELD__UCPD2_CR_RDCH
//    <name> RDCH </name>
//    <rw> 
//    <i> [Bit 18] RW (@ 0x4000A40C) RDCH </i>
//    <check> 
//      <loc> ( (unsigned int) UCPD2_CR ) </loc>
//      <o.18..18> RDCH
//    </check>
//  </item>
//  


// ------------------------------  Field Item: UCPD2_CR_CC1TCDIS  ---------------------------------
// SVD Line: 20816

//  <item> SFDITEM_FIELD__UCPD2_CR_CC1TCDIS
//    <name> CC1TCDIS </name>
//    <rw> 
//    <i> [Bit 20] RW (@ 0x4000A40C) CC1TCDIS </i>
//    <check> 
//      <loc> ( (unsigned int) UCPD2_CR ) </loc>
//      <o.20..20> CC1TCDIS
//    </check>
//  </item>
//  


// ------------------------------  Field Item: UCPD2_CR_CC2TCDIS  ---------------------------------
// SVD Line: 20822

//  <item> SFDITEM_FIELD__UCPD2_CR_CC2TCDIS
//    <name> CC2TCDIS </name>
//    <rw> 
//    <i> [Bit 21] RW (@ 0x4000A40C) CC2TCDIS </i>
//    <check> 
//      <loc> ( (unsigned int) UCPD2_CR ) </loc>
//      <o.21..21> CC2TCDIS
//    </check>
//  </item>
//  


// --------------------------------  Register RTree: UCPD2_CR  ------------------------------------
// SVD Line: 20729

//  <rtree> SFDITEM_REG__UCPD2_CR
//    <name> CR </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x4000A40C) UCPD control register </i>
//    <loc> ( (unsigned int)((UCPD2_CR >> 0) & 0xFFFFFFFF), ((UCPD2_CR = (UCPD2_CR & ~(0x378FFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0x378FFF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__UCPD2_CR_TXMODE </item>
//    <item> SFDITEM_FIELD__UCPD2_CR_TXSEND </item>
//    <item> SFDITEM_FIELD__UCPD2_CR_TXHRST </item>
//    <item> SFDITEM_FIELD__UCPD2_CR_RXMODE </item>
//    <item> SFDITEM_FIELD__UCPD2_CR_PHYRXEN </item>
//    <item> SFDITEM_FIELD__UCPD2_CR_PHYCCSEL </item>
//    <item> SFDITEM_FIELD__UCPD2_CR_ANASUBMODE </item>
//    <item> SFDITEM_FIELD__UCPD2_CR_ANAMODE </item>
//    <item> SFDITEM_FIELD__UCPD2_CR_CCENABLE </item>
//    <item> SFDITEM_FIELD__UCPD2_CR_DBATTEN </item>
//    <item> SFDITEM_FIELD__UCPD2_CR_FRSRXEN </item>
//    <item> SFDITEM_FIELD__UCPD2_CR_FRSTX </item>
//    <item> SFDITEM_FIELD__UCPD2_CR_RDCH </item>
//    <item> SFDITEM_FIELD__UCPD2_CR_CC1TCDIS </item>
//    <item> SFDITEM_FIELD__UCPD2_CR_CC2TCDIS </item>
//  </rtree>
//  


// ----------------------------  Register Item Address: UCPD2_IMR  --------------------------------
// SVD Line: 20830

unsigned int UCPD2_IMR __AT (0x4000A410);



// ------------------------------  Field Item: UCPD2_IMR_TXISIE  ----------------------------------
// SVD Line: 20839

//  <item> SFDITEM_FIELD__UCPD2_IMR_TXISIE
//    <name> TXISIE </name>
//    <rw> 
//    <i> [Bit 0] RW (@ 0x4000A410) TXISIE </i>
//    <check> 
//      <loc> ( (unsigned int) UCPD2_IMR ) </loc>
//      <o.0..0> TXISIE
//    </check>
//  </item>
//  


// ----------------------------  Field Item: UCPD2_IMR_TXMSGDISCIE  -------------------------------
// SVD Line: 20845

//  <item> SFDITEM_FIELD__UCPD2_IMR_TXMSGDISCIE
//    <name> TXMSGDISCIE </name>
//    <rw> 
//    <i> [Bit 1] RW (@ 0x4000A410) TXMSGDISCIE </i>
//    <check> 
//      <loc> ( (unsigned int) UCPD2_IMR ) </loc>
//      <o.1..1> TXMSGDISCIE
//    </check>
//  </item>
//  


// ----------------------------  Field Item: UCPD2_IMR_TXMSGSENTIE  -------------------------------
// SVD Line: 20851

//  <item> SFDITEM_FIELD__UCPD2_IMR_TXMSGSENTIE
//    <name> TXMSGSENTIE </name>
//    <rw> 
//    <i> [Bit 2] RW (@ 0x4000A410) TXMSGSENTIE </i>
//    <check> 
//      <loc> ( (unsigned int) UCPD2_IMR ) </loc>
//      <o.2..2> TXMSGSENTIE
//    </check>
//  </item>
//  


// ----------------------------  Field Item: UCPD2_IMR_TXMSGABTIE  --------------------------------
// SVD Line: 20857

//  <item> SFDITEM_FIELD__UCPD2_IMR_TXMSGABTIE
//    <name> TXMSGABTIE </name>
//    <rw> 
//    <i> [Bit 3] RW (@ 0x4000A410) TXMSGABTIE </i>
//    <check> 
//      <loc> ( (unsigned int) UCPD2_IMR ) </loc>
//      <o.3..3> TXMSGABTIE
//    </check>
//  </item>
//  


// ----------------------------  Field Item: UCPD2_IMR_HRSTDISCIE  --------------------------------
// SVD Line: 20863

//  <item> SFDITEM_FIELD__UCPD2_IMR_HRSTDISCIE
//    <name> HRSTDISCIE </name>
//    <rw> 
//    <i> [Bit 4] RW (@ 0x4000A410) HRSTDISCIE </i>
//    <check> 
//      <loc> ( (unsigned int) UCPD2_IMR ) </loc>
//      <o.4..4> HRSTDISCIE
//    </check>
//  </item>
//  


// ----------------------------  Field Item: UCPD2_IMR_HRSTSENTIE  --------------------------------
// SVD Line: 20869

//  <item> SFDITEM_FIELD__UCPD2_IMR_HRSTSENTIE
//    <name> HRSTSENTIE </name>
//    <rw> 
//    <i> [Bit 5] RW (@ 0x4000A410) HRSTSENTIE </i>
//    <check> 
//      <loc> ( (unsigned int) UCPD2_IMR ) </loc>
//      <o.5..5> HRSTSENTIE
//    </check>
//  </item>
//  


// ------------------------------  Field Item: UCPD2_IMR_TXUNDIE  ---------------------------------
// SVD Line: 20875

//  <item> SFDITEM_FIELD__UCPD2_IMR_TXUNDIE
//    <name> TXUNDIE </name>
//    <rw> 
//    <i> [Bit 6] RW (@ 0x4000A410) TXUNDIE </i>
//    <check> 
//      <loc> ( (unsigned int) UCPD2_IMR ) </loc>
//      <o.6..6> TXUNDIE
//    </check>
//  </item>
//  


// ------------------------------  Field Item: UCPD2_IMR_RXNEIE  ----------------------------------
// SVD Line: 20881

//  <item> SFDITEM_FIELD__UCPD2_IMR_RXNEIE
//    <name> RXNEIE </name>
//    <rw> 
//    <i> [Bit 8] RW (@ 0x4000A410) RXNEIE </i>
//    <check> 
//      <loc> ( (unsigned int) UCPD2_IMR ) </loc>
//      <o.8..8> RXNEIE
//    </check>
//  </item>
//  


// ----------------------------  Field Item: UCPD2_IMR_RXORDDETIE  --------------------------------
// SVD Line: 20887

//  <item> SFDITEM_FIELD__UCPD2_IMR_RXORDDETIE
//    <name> RXORDDETIE </name>
//    <rw> 
//    <i> [Bit 9] RW (@ 0x4000A410) RXORDDETIE </i>
//    <check> 
//      <loc> ( (unsigned int) UCPD2_IMR ) </loc>
//      <o.9..9> RXORDDETIE
//    </check>
//  </item>
//  


// ----------------------------  Field Item: UCPD2_IMR_RXHRSTDETIE  -------------------------------
// SVD Line: 20893

//  <item> SFDITEM_FIELD__UCPD2_IMR_RXHRSTDETIE
//    <name> RXHRSTDETIE </name>
//    <rw> 
//    <i> [Bit 10] RW (@ 0x4000A410) RXHRSTDETIE </i>
//    <check> 
//      <loc> ( (unsigned int) UCPD2_IMR ) </loc>
//      <o.10..10> RXHRSTDETIE
//    </check>
//  </item>
//  


// ------------------------------  Field Item: UCPD2_IMR_RXOVRIE  ---------------------------------
// SVD Line: 20899

//  <item> SFDITEM_FIELD__UCPD2_IMR_RXOVRIE
//    <name> RXOVRIE </name>
//    <rw> 
//    <i> [Bit 11] RW (@ 0x4000A410) RXOVRIE </i>
//    <check> 
//      <loc> ( (unsigned int) UCPD2_IMR ) </loc>
//      <o.11..11> RXOVRIE
//    </check>
//  </item>
//  


// ----------------------------  Field Item: UCPD2_IMR_RXMSGENDIE  --------------------------------
// SVD Line: 20905

//  <item> SFDITEM_FIELD__UCPD2_IMR_RXMSGENDIE
//    <name> RXMSGENDIE </name>
//    <rw> 
//    <i> [Bit 12] RW (@ 0x4000A410) RXMSGENDIE </i>
//    <check> 
//      <loc> ( (unsigned int) UCPD2_IMR ) </loc>
//      <o.12..12> RXMSGENDIE
//    </check>
//  </item>
//  


// ----------------------------  Field Item: UCPD2_IMR_TYPECEVT1IE  -------------------------------
// SVD Line: 20911

//  <item> SFDITEM_FIELD__UCPD2_IMR_TYPECEVT1IE
//    <name> TYPECEVT1IE </name>
//    <rw> 
//    <i> [Bit 14] RW (@ 0x4000A410) TYPECEVT1IE </i>
//    <check> 
//      <loc> ( (unsigned int) UCPD2_IMR ) </loc>
//      <o.14..14> TYPECEVT1IE
//    </check>
//  </item>
//  


// ----------------------------  Field Item: UCPD2_IMR_TYPECEVT2IE  -------------------------------
// SVD Line: 20917

//  <item> SFDITEM_FIELD__UCPD2_IMR_TYPECEVT2IE
//    <name> TYPECEVT2IE </name>
//    <rw> 
//    <i> [Bit 15] RW (@ 0x4000A410) TYPECEVT2IE </i>
//    <check> 
//      <loc> ( (unsigned int) UCPD2_IMR ) </loc>
//      <o.15..15> TYPECEVT2IE
//    </check>
//  </item>
//  


// -----------------------------  Field Item: UCPD2_IMR_FRSEVTIE  ---------------------------------
// SVD Line: 20923

//  <item> SFDITEM_FIELD__UCPD2_IMR_FRSEVTIE
//    <name> FRSEVTIE </name>
//    <rw> 
//    <i> [Bit 20] RW (@ 0x4000A410) FRSEVTIE </i>
//    <check> 
//      <loc> ( (unsigned int) UCPD2_IMR ) </loc>
//      <o.20..20> FRSEVTIE
//    </check>
//  </item>
//  


// --------------------------------  Register RTree: UCPD2_IMR  -----------------------------------
// SVD Line: 20830

//  <rtree> SFDITEM_REG__UCPD2_IMR
//    <name> IMR </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x4000A410) UCPD Interrupt Mask Register </i>
//    <loc> ( (unsigned int)((UCPD2_IMR >> 0) & 0xFFFFFFFF), ((UCPD2_IMR = (UCPD2_IMR & ~(0x10DF7FUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0x10DF7F) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__UCPD2_IMR_TXISIE </item>
//    <item> SFDITEM_FIELD__UCPD2_IMR_TXMSGDISCIE </item>
//    <item> SFDITEM_FIELD__UCPD2_IMR_TXMSGSENTIE </item>
//    <item> SFDITEM_FIELD__UCPD2_IMR_TXMSGABTIE </item>
//    <item> SFDITEM_FIELD__UCPD2_IMR_HRSTDISCIE </item>
//    <item> SFDITEM_FIELD__UCPD2_IMR_HRSTSENTIE </item>
//    <item> SFDITEM_FIELD__UCPD2_IMR_TXUNDIE </item>
//    <item> SFDITEM_FIELD__UCPD2_IMR_RXNEIE </item>
//    <item> SFDITEM_FIELD__UCPD2_IMR_RXORDDETIE </item>
//    <item> SFDITEM_FIELD__UCPD2_IMR_RXHRSTDETIE </item>
//    <item> SFDITEM_FIELD__UCPD2_IMR_RXOVRIE </item>
//    <item> SFDITEM_FIELD__UCPD2_IMR_RXMSGENDIE </item>
//    <item> SFDITEM_FIELD__UCPD2_IMR_TYPECEVT1IE </item>
//    <item> SFDITEM_FIELD__UCPD2_IMR_TYPECEVT2IE </item>
//    <item> SFDITEM_FIELD__UCPD2_IMR_FRSEVTIE </item>
//  </rtree>
//  


// -----------------------------  Register Item Address: UCPD2_SR  --------------------------------
// SVD Line: 20931

unsigned int UCPD2_SR __AT (0x4000A414);



// --------------------------------  Field Item: UCPD2_SR_TXIS  -----------------------------------
// SVD Line: 20940

//  <item> SFDITEM_FIELD__UCPD2_SR_TXIS
//    <name> TXIS </name>
//    <r> 
//    <i> [Bit 0] RO (@ 0x4000A414) TXIS </i>
//    <check> 
//      <loc> ( (unsigned int) UCPD2_SR ) </loc>
//      <o.0..0> TXIS
//    </check>
//  </item>
//  


// -----------------------------  Field Item: UCPD2_SR_TXMSGDISC  ---------------------------------
// SVD Line: 20946

//  <item> SFDITEM_FIELD__UCPD2_SR_TXMSGDISC
//    <name> TXMSGDISC </name>
//    <r> 
//    <i> [Bit 1] RO (@ 0x4000A414) TXMSGDISC </i>
//    <check> 
//      <loc> ( (unsigned int) UCPD2_SR ) </loc>
//      <o.1..1> TXMSGDISC
//    </check>
//  </item>
//  


// -----------------------------  Field Item: UCPD2_SR_TXMSGSENT  ---------------------------------
// SVD Line: 20952

//  <item> SFDITEM_FIELD__UCPD2_SR_TXMSGSENT
//    <name> TXMSGSENT </name>
//    <r> 
//    <i> [Bit 2] RO (@ 0x4000A414) TXMSGSENT </i>
//    <check> 
//      <loc> ( (unsigned int) UCPD2_SR ) </loc>
//      <o.2..2> TXMSGSENT
//    </check>
//  </item>
//  


// ------------------------------  Field Item: UCPD2_SR_TXMSGABT  ---------------------------------
// SVD Line: 20958

//  <item> SFDITEM_FIELD__UCPD2_SR_TXMSGABT
//    <name> TXMSGABT </name>
//    <r> 
//    <i> [Bit 3] RO (@ 0x4000A414) TXMSGABT </i>
//    <check> 
//      <loc> ( (unsigned int) UCPD2_SR ) </loc>
//      <o.3..3> TXMSGABT
//    </check>
//  </item>
//  


// ------------------------------  Field Item: UCPD2_SR_HRSTDISC  ---------------------------------
// SVD Line: 20964

//  <item> SFDITEM_FIELD__UCPD2_SR_HRSTDISC
//    <name> HRSTDISC </name>
//    <r> 
//    <i> [Bit 4] RO (@ 0x4000A414) HRSTDISC </i>
//    <check> 
//      <loc> ( (unsigned int) UCPD2_SR ) </loc>
//      <o.4..4> HRSTDISC
//    </check>
//  </item>
//  


// ------------------------------  Field Item: UCPD2_SR_HRSTSENT  ---------------------------------
// SVD Line: 20970

//  <item> SFDITEM_FIELD__UCPD2_SR_HRSTSENT
//    <name> HRSTSENT </name>
//    <r> 
//    <i> [Bit 5] RO (@ 0x4000A414) HRSTSENT </i>
//    <check> 
//      <loc> ( (unsigned int) UCPD2_SR ) </loc>
//      <o.5..5> HRSTSENT
//    </check>
//  </item>
//  


// -------------------------------  Field Item: UCPD2_SR_TXUND  -----------------------------------
// SVD Line: 20976

//  <item> SFDITEM_FIELD__UCPD2_SR_TXUND
//    <name> TXUND </name>
//    <r> 
//    <i> [Bit 6] RO (@ 0x4000A414) TXUND </i>
//    <check> 
//      <loc> ( (unsigned int) UCPD2_SR ) </loc>
//      <o.6..6> TXUND
//    </check>
//  </item>
//  


// --------------------------------  Field Item: UCPD2_SR_RXNE  -----------------------------------
// SVD Line: 20982

//  <item> SFDITEM_FIELD__UCPD2_SR_RXNE
//    <name> RXNE </name>
//    <r> 
//    <i> [Bit 8] RO (@ 0x4000A414) RXNE </i>
//    <check> 
//      <loc> ( (unsigned int) UCPD2_SR ) </loc>
//      <o.8..8> RXNE
//    </check>
//  </item>
//  


// ------------------------------  Field Item: UCPD2_SR_RXORDDET  ---------------------------------
// SVD Line: 20988

//  <item> SFDITEM_FIELD__UCPD2_SR_RXORDDET
//    <name> RXORDDET </name>
//    <r> 
//    <i> [Bit 9] RO (@ 0x4000A414) RXORDDET </i>
//    <check> 
//      <loc> ( (unsigned int) UCPD2_SR ) </loc>
//      <o.9..9> RXORDDET
//    </check>
//  </item>
//  


// -----------------------------  Field Item: UCPD2_SR_RXHRSTDET  ---------------------------------
// SVD Line: 20994

//  <item> SFDITEM_FIELD__UCPD2_SR_RXHRSTDET
//    <name> RXHRSTDET </name>
//    <r> 
//    <i> [Bit 10] RO (@ 0x4000A414) RXHRSTDET </i>
//    <check> 
//      <loc> ( (unsigned int) UCPD2_SR ) </loc>
//      <o.10..10> RXHRSTDET
//    </check>
//  </item>
//  


// -------------------------------  Field Item: UCPD2_SR_RXOVR  -----------------------------------
// SVD Line: 21000

//  <item> SFDITEM_FIELD__UCPD2_SR_RXOVR
//    <name> RXOVR </name>
//    <r> 
//    <i> [Bit 11] RO (@ 0x4000A414) RXOVR </i>
//    <check> 
//      <loc> ( (unsigned int) UCPD2_SR ) </loc>
//      <o.11..11> RXOVR
//    </check>
//  </item>
//  


// ------------------------------  Field Item: UCPD2_SR_RXMSGEND  ---------------------------------
// SVD Line: 21006

//  <item> SFDITEM_FIELD__UCPD2_SR_RXMSGEND
//    <name> RXMSGEND </name>
//    <r> 
//    <i> [Bit 12] RO (@ 0x4000A414) RXMSGEND </i>
//    <check> 
//      <loc> ( (unsigned int) UCPD2_SR ) </loc>
//      <o.12..12> RXMSGEND
//    </check>
//  </item>
//  


// -------------------------------  Field Item: UCPD2_SR_RXERR  -----------------------------------
// SVD Line: 21012

//  <item> SFDITEM_FIELD__UCPD2_SR_RXERR
//    <name> RXERR </name>
//    <r> 
//    <i> [Bit 13] RO (@ 0x4000A414) RXERR </i>
//    <check> 
//      <loc> ( (unsigned int) UCPD2_SR ) </loc>
//      <o.13..13> RXERR
//    </check>
//  </item>
//  


// -----------------------------  Field Item: UCPD2_SR_TYPECEVT1  ---------------------------------
// SVD Line: 21018

//  <item> SFDITEM_FIELD__UCPD2_SR_TYPECEVT1
//    <name> TYPECEVT1 </name>
//    <r> 
//    <i> [Bit 14] RO (@ 0x4000A414) TYPECEVT1 </i>
//    <check> 
//      <loc> ( (unsigned int) UCPD2_SR ) </loc>
//      <o.14..14> TYPECEVT1
//    </check>
//  </item>
//  


// -----------------------------  Field Item: UCPD2_SR_TYPECEVT2  ---------------------------------
// SVD Line: 21024

//  <item> SFDITEM_FIELD__UCPD2_SR_TYPECEVT2
//    <name> TYPECEVT2 </name>
//    <r> 
//    <i> [Bit 15] RO (@ 0x4000A414) TYPECEVT2 </i>
//    <check> 
//      <loc> ( (unsigned int) UCPD2_SR ) </loc>
//      <o.15..15> TYPECEVT2
//    </check>
//  </item>
//  


// --------------------------  Field Item: UCPD2_SR_TYPEC_VSTATE_CC1  -----------------------------
// SVD Line: 21030

//  <item> SFDITEM_FIELD__UCPD2_SR_TYPEC_VSTATE_CC1
//    <name> TYPEC_VSTATE_CC1 </name>
//    <r> 
//    <i> [Bits 17..16] RO (@ 0x4000A414) TYPEC_VSTATE_CC1 </i>
//    <edit> 
//      <loc> ( (unsigned char)((UCPD2_SR >> 16) & 0x3) ) </loc>
//    </edit>
//  </item>
//  


// --------------------------  Field Item: UCPD2_SR_TYPEC_VSTATE_CC2  -----------------------------
// SVD Line: 21036

//  <item> SFDITEM_FIELD__UCPD2_SR_TYPEC_VSTATE_CC2
//    <name> TYPEC_VSTATE_CC2 </name>
//    <r> 
//    <i> [Bits 19..18] RO (@ 0x4000A414) TYPEC_VSTATE_CC2 </i>
//    <edit> 
//      <loc> ( (unsigned char)((UCPD2_SR >> 18) & 0x3) ) </loc>
//    </edit>
//  </item>
//  


// -------------------------------  Field Item: UCPD2_SR_FRSEVT  ----------------------------------
// SVD Line: 21042

//  <item> SFDITEM_FIELD__UCPD2_SR_FRSEVT
//    <name> FRSEVT </name>
//    <r> 
//    <i> [Bit 20] RO (@ 0x4000A414) FRSEVT </i>
//    <check> 
//      <loc> ( (unsigned int) UCPD2_SR ) </loc>
//      <o.20..20> FRSEVT
//    </check>
//  </item>
//  


// --------------------------------  Register RTree: UCPD2_SR  ------------------------------------
// SVD Line: 20931

//  <rtree> SFDITEM_REG__UCPD2_SR
//    <name> SR </name>
//    <r> 
//    <i> [Bits 31..0] RO (@ 0x4000A414) UCPD Status Register </i>
//    <loc> ( (unsigned int)((UCPD2_SR >> 0) & 0xFFFFFFFF) ) </loc>
//    <item> SFDITEM_FIELD__UCPD2_SR_TXIS </item>
//    <item> SFDITEM_FIELD__UCPD2_SR_TXMSGDISC </item>
//    <item> SFDITEM_FIELD__UCPD2_SR_TXMSGSENT </item>
//    <item> SFDITEM_FIELD__UCPD2_SR_TXMSGABT </item>
//    <item> SFDITEM_FIELD__UCPD2_SR_HRSTDISC </item>
//    <item> SFDITEM_FIELD__UCPD2_SR_HRSTSENT </item>
//    <item> SFDITEM_FIELD__UCPD2_SR_TXUND </item>
//    <item> SFDITEM_FIELD__UCPD2_SR_RXNE </item>
//    <item> SFDITEM_FIELD__UCPD2_SR_RXORDDET </item>
//    <item> SFDITEM_FIELD__UCPD2_SR_RXHRSTDET </item>
//    <item> SFDITEM_FIELD__UCPD2_SR_RXOVR </item>
//    <item> SFDITEM_FIELD__UCPD2_SR_RXMSGEND </item>
//    <item> SFDITEM_FIELD__UCPD2_SR_RXERR </item>
//    <item> SFDITEM_FIELD__UCPD2_SR_TYPECEVT1 </item>
//    <item> SFDITEM_FIELD__UCPD2_SR_TYPECEVT2 </item>
//    <item> SFDITEM_FIELD__UCPD2_SR_TYPEC_VSTATE_CC1 </item>
//    <item> SFDITEM_FIELD__UCPD2_SR_TYPEC_VSTATE_CC2 </item>
//    <item> SFDITEM_FIELD__UCPD2_SR_FRSEVT </item>
//  </rtree>
//  


// ----------------------------  Register Item Address: UCPD2_ICR  --------------------------------
// SVD Line: 21050

unsigned int UCPD2_ICR __AT (0x4000A418);



// ----------------------------  Field Item: UCPD2_ICR_TXMSGDISCCF  -------------------------------
// SVD Line: 21059

//  <item> SFDITEM_FIELD__UCPD2_ICR_TXMSGDISCCF
//    <name> TXMSGDISCCF </name>
//    <rw> 
//    <i> [Bit 1] RW (@ 0x4000A418) TXMSGDISCCF </i>
//    <check> 
//      <loc> ( (unsigned int) UCPD2_ICR ) </loc>
//      <o.1..1> TXMSGDISCCF
//    </check>
//  </item>
//  


// ----------------------------  Field Item: UCPD2_ICR_TXMSGSENTCF  -------------------------------
// SVD Line: 21065

//  <item> SFDITEM_FIELD__UCPD2_ICR_TXMSGSENTCF
//    <name> TXMSGSENTCF </name>
//    <rw> 
//    <i> [Bit 2] RW (@ 0x4000A418) TXMSGSENTCF </i>
//    <check> 
//      <loc> ( (unsigned int) UCPD2_ICR ) </loc>
//      <o.2..2> TXMSGSENTCF
//    </check>
//  </item>
//  


// ----------------------------  Field Item: UCPD2_ICR_TXMSGABTCF  --------------------------------
// SVD Line: 21071

//  <item> SFDITEM_FIELD__UCPD2_ICR_TXMSGABTCF
//    <name> TXMSGABTCF </name>
//    <rw> 
//    <i> [Bit 3] RW (@ 0x4000A418) TXMSGABTCF </i>
//    <check> 
//      <loc> ( (unsigned int) UCPD2_ICR ) </loc>
//      <o.3..3> TXMSGABTCF
//    </check>
//  </item>
//  


// ----------------------------  Field Item: UCPD2_ICR_HRSTDISCCF  --------------------------------
// SVD Line: 21077

//  <item> SFDITEM_FIELD__UCPD2_ICR_HRSTDISCCF
//    <name> HRSTDISCCF </name>
//    <rw> 
//    <i> [Bit 4] RW (@ 0x4000A418) HRSTDISCCF </i>
//    <check> 
//      <loc> ( (unsigned int) UCPD2_ICR ) </loc>
//      <o.4..4> HRSTDISCCF
//    </check>
//  </item>
//  


// ----------------------------  Field Item: UCPD2_ICR_HRSTSENTCF  --------------------------------
// SVD Line: 21083

//  <item> SFDITEM_FIELD__UCPD2_ICR_HRSTSENTCF
//    <name> HRSTSENTCF </name>
//    <rw> 
//    <i> [Bit 5] RW (@ 0x4000A418) HRSTSENTCF </i>
//    <check> 
//      <loc> ( (unsigned int) UCPD2_ICR ) </loc>
//      <o.5..5> HRSTSENTCF
//    </check>
//  </item>
//  


// ------------------------------  Field Item: UCPD2_ICR_TXUNDCF  ---------------------------------
// SVD Line: 21089

//  <item> SFDITEM_FIELD__UCPD2_ICR_TXUNDCF
//    <name> TXUNDCF </name>
//    <rw> 
//    <i> [Bit 6] RW (@ 0x4000A418) TXUNDCF </i>
//    <check> 
//      <loc> ( (unsigned int) UCPD2_ICR ) </loc>
//      <o.6..6> TXUNDCF
//    </check>
//  </item>
//  


// ----------------------------  Field Item: UCPD2_ICR_RXORDDETCF  --------------------------------
// SVD Line: 21095

//  <item> SFDITEM_FIELD__UCPD2_ICR_RXORDDETCF
//    <name> RXORDDETCF </name>
//    <rw> 
//    <i> [Bit 9] RW (@ 0x4000A418) RXORDDETCF </i>
//    <check> 
//      <loc> ( (unsigned int) UCPD2_ICR ) </loc>
//      <o.9..9> RXORDDETCF
//    </check>
//  </item>
//  


// ----------------------------  Field Item: UCPD2_ICR_RXHRSTDETCF  -------------------------------
// SVD Line: 21101

//  <item> SFDITEM_FIELD__UCPD2_ICR_RXHRSTDETCF
//    <name> RXHRSTDETCF </name>
//    <rw> 
//    <i> [Bit 10] RW (@ 0x4000A418) RXHRSTDETCF </i>
//    <check> 
//      <loc> ( (unsigned int) UCPD2_ICR ) </loc>
//      <o.10..10> RXHRSTDETCF
//    </check>
//  </item>
//  


// ------------------------------  Field Item: UCPD2_ICR_RXOVRCF  ---------------------------------
// SVD Line: 21107

//  <item> SFDITEM_FIELD__UCPD2_ICR_RXOVRCF
//    <name> RXOVRCF </name>
//    <rw> 
//    <i> [Bit 11] RW (@ 0x4000A418) RXOVRCF </i>
//    <check> 
//      <loc> ( (unsigned int) UCPD2_ICR ) </loc>
//      <o.11..11> RXOVRCF
//    </check>
//  </item>
//  


// ----------------------------  Field Item: UCPD2_ICR_RXMSGENDCF  --------------------------------
// SVD Line: 21113

//  <item> SFDITEM_FIELD__UCPD2_ICR_RXMSGENDCF
//    <name> RXMSGENDCF </name>
//    <rw> 
//    <i> [Bit 12] RW (@ 0x4000A418) RXMSGENDCF </i>
//    <check> 
//      <loc> ( (unsigned int) UCPD2_ICR ) </loc>
//      <o.12..12> RXMSGENDCF
//    </check>
//  </item>
//  


// ----------------------------  Field Item: UCPD2_ICR_TYPECEVT1CF  -------------------------------
// SVD Line: 21119

//  <item> SFDITEM_FIELD__UCPD2_ICR_TYPECEVT1CF
//    <name> TYPECEVT1CF </name>
//    <rw> 
//    <i> [Bit 14] RW (@ 0x4000A418) TYPECEVT1CF </i>
//    <check> 
//      <loc> ( (unsigned int) UCPD2_ICR ) </loc>
//      <o.14..14> TYPECEVT1CF
//    </check>
//  </item>
//  


// ----------------------------  Field Item: UCPD2_ICR_TYPECEVT2CF  -------------------------------
// SVD Line: 21125

//  <item> SFDITEM_FIELD__UCPD2_ICR_TYPECEVT2CF
//    <name> TYPECEVT2CF </name>
//    <rw> 
//    <i> [Bit 15] RW (@ 0x4000A418) TYPECEVT2CF </i>
//    <check> 
//      <loc> ( (unsigned int) UCPD2_ICR ) </loc>
//      <o.15..15> TYPECEVT2CF
//    </check>
//  </item>
//  


// -----------------------------  Field Item: UCPD2_ICR_FRSEVTCF  ---------------------------------
// SVD Line: 21131

//  <item> SFDITEM_FIELD__UCPD2_ICR_FRSEVTCF
//    <name> FRSEVTCF </name>
//    <rw> 
//    <i> [Bit 20] RW (@ 0x4000A418) FRSEVTCF </i>
//    <check> 
//      <loc> ( (unsigned int) UCPD2_ICR ) </loc>
//      <o.20..20> FRSEVTCF
//    </check>
//  </item>
//  


// --------------------------------  Register RTree: UCPD2_ICR  -----------------------------------
// SVD Line: 21050

//  <rtree> SFDITEM_REG__UCPD2_ICR
//    <name> ICR </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x4000A418) UCPD Interrupt Clear Register </i>
//    <loc> ( (unsigned int)((UCPD2_ICR >> 0) & 0xFFFFFFFF), ((UCPD2_ICR = (UCPD2_ICR & ~(0x10DE7EUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0x10DE7E) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__UCPD2_ICR_TXMSGDISCCF </item>
//    <item> SFDITEM_FIELD__UCPD2_ICR_TXMSGSENTCF </item>
//    <item> SFDITEM_FIELD__UCPD2_ICR_TXMSGABTCF </item>
//    <item> SFDITEM_FIELD__UCPD2_ICR_HRSTDISCCF </item>
//    <item> SFDITEM_FIELD__UCPD2_ICR_HRSTSENTCF </item>
//    <item> SFDITEM_FIELD__UCPD2_ICR_TXUNDCF </item>
//    <item> SFDITEM_FIELD__UCPD2_ICR_RXORDDETCF </item>
//    <item> SFDITEM_FIELD__UCPD2_ICR_RXHRSTDETCF </item>
//    <item> SFDITEM_FIELD__UCPD2_ICR_RXOVRCF </item>
//    <item> SFDITEM_FIELD__UCPD2_ICR_RXMSGENDCF </item>
//    <item> SFDITEM_FIELD__UCPD2_ICR_TYPECEVT1CF </item>
//    <item> SFDITEM_FIELD__UCPD2_ICR_TYPECEVT2CF </item>
//    <item> SFDITEM_FIELD__UCPD2_ICR_FRSEVTCF </item>
//  </rtree>
//  


// -------------------------  Register Item Address: UCPD2_TX_ORDSET  -----------------------------
// SVD Line: 21139

unsigned int UCPD2_TX_ORDSET __AT (0x4000A41C);



// --------------------------  Field Item: UCPD2_TX_ORDSET_TXORDSET  ------------------------------
// SVD Line: 21149

//  <item> SFDITEM_FIELD__UCPD2_TX_ORDSET_TXORDSET
//    <name> TXORDSET </name>
//    <rw> 
//    <i> [Bits 19..0] RW (@ 0x4000A41C) TXORDSET </i>
//    <edit> 
//      <loc> ( (unsigned int)((UCPD2_TX_ORDSET >> 0) & 0xFFFFF), ((UCPD2_TX_ORDSET = (UCPD2_TX_ORDSET & ~(0xFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -----------------------------  Register RTree: UCPD2_TX_ORDSET  --------------------------------
// SVD Line: 21139

//  <rtree> SFDITEM_REG__UCPD2_TX_ORDSET
//    <name> TX_ORDSET </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x4000A41C) UCPD Tx Ordered Set Type  Register </i>
//    <loc> ( (unsigned int)((UCPD2_TX_ORDSET >> 0) & 0xFFFFFFFF), ((UCPD2_TX_ORDSET = (UCPD2_TX_ORDSET & ~(0xFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__UCPD2_TX_ORDSET_TXORDSET </item>
//  </rtree>
//  


// --------------------------  Register Item Address: UCPD2_TX_PAYSZ  -----------------------------
// SVD Line: 21157

unsigned int UCPD2_TX_PAYSZ __AT (0x4000A420);



// ---------------------------  Field Item: UCPD2_TX_PAYSZ_TXPAYSZ  -------------------------------
// SVD Line: 21166

//  <item> SFDITEM_FIELD__UCPD2_TX_PAYSZ_TXPAYSZ
//    <name> TXPAYSZ </name>
//    <rw> 
//    <i> [Bits 9..0] RW (@ 0x4000A420) TXPAYSZ </i>
//    <edit> 
//      <loc> ( (unsigned short)((UCPD2_TX_PAYSZ >> 0) & 0x3FF), ((UCPD2_TX_PAYSZ = (UCPD2_TX_PAYSZ & ~(0x3FFUL << 0 )) | ((unsigned long)(Gui_u16:GuiVal & 0x3FF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -----------------------------  Register RTree: UCPD2_TX_PAYSZ  ---------------------------------
// SVD Line: 21157

//  <rtree> SFDITEM_REG__UCPD2_TX_PAYSZ
//    <name> TX_PAYSZ </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x4000A420) UCPD Tx Paysize Register </i>
//    <loc> ( (unsigned int)((UCPD2_TX_PAYSZ >> 0) & 0xFFFFFFFF), ((UCPD2_TX_PAYSZ = (UCPD2_TX_PAYSZ & ~(0x3FFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0x3FF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__UCPD2_TX_PAYSZ_TXPAYSZ </item>
//  </rtree>
//  


// ----------------------------  Register Item Address: UCPD2_TXDR  -------------------------------
// SVD Line: 21174

unsigned int UCPD2_TXDR __AT (0x4000A424);



// ------------------------------  Field Item: UCPD2_TXDR_TXDATA  ---------------------------------
// SVD Line: 21183

//  <item> SFDITEM_FIELD__UCPD2_TXDR_TXDATA
//    <name> TXDATA </name>
//    <rw> 
//    <i> [Bits 7..0] RW (@ 0x4000A424) TXDATA </i>
//    <edit> 
//      <loc> ( (unsigned char)((UCPD2_TXDR >> 0) & 0xFF), ((UCPD2_TXDR = (UCPD2_TXDR & ~(0xFFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -------------------------------  Register RTree: UCPD2_TXDR  -----------------------------------
// SVD Line: 21174

//  <rtree> SFDITEM_REG__UCPD2_TXDR
//    <name> TXDR </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x4000A424) UCPD Tx Data Register </i>
//    <loc> ( (unsigned int)((UCPD2_TXDR >> 0) & 0xFFFFFFFF), ((UCPD2_TXDR = (UCPD2_TXDR & ~(0xFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__UCPD2_TXDR_TXDATA </item>
//  </rtree>
//  


// -------------------------  Register Item Address: UCPD2_RX_ORDSET  -----------------------------
// SVD Line: 21191

unsigned int UCPD2_RX_ORDSET __AT (0x4000A428);



// --------------------------  Field Item: UCPD2_RX_ORDSET_RXORDSET  ------------------------------
// SVD Line: 21200

//  <item> SFDITEM_FIELD__UCPD2_RX_ORDSET_RXORDSET
//    <name> RXORDSET </name>
//    <r> 
//    <i> [Bits 2..0] RO (@ 0x4000A428) RXORDSET </i>
//    <edit> 
//      <loc> ( (unsigned char)((UCPD2_RX_ORDSET >> 0) & 0x7) ) </loc>
//    </edit>
//  </item>
//  


// --------------------------  Field Item: UCPD2_RX_ORDSET_RXSOP3OF4  -----------------------------
// SVD Line: 21206

//  <item> SFDITEM_FIELD__UCPD2_RX_ORDSET_RXSOP3OF4
//    <name> RXSOP3OF4 </name>
//    <r> 
//    <i> [Bit 3] RO (@ 0x4000A428) RXSOP3OF4 </i>
//    <check> 
//      <loc> ( (unsigned int) UCPD2_RX_ORDSET ) </loc>
//      <o.3..3> RXSOP3OF4
//    </check>
//  </item>
//  


// ------------------------  Field Item: UCPD2_RX_ORDSET_RXSOPKINVALID  ---------------------------
// SVD Line: 21212

//  <item> SFDITEM_FIELD__UCPD2_RX_ORDSET_RXSOPKINVALID
//    <name> RXSOPKINVALID </name>
//    <r> 
//    <i> [Bits 6..4] RO (@ 0x4000A428) RXSOPKINVALID </i>
//    <edit> 
//      <loc> ( (unsigned char)((UCPD2_RX_ORDSET >> 4) & 0x7) ) </loc>
//    </edit>
//  </item>
//  


// -----------------------------  Register RTree: UCPD2_RX_ORDSET  --------------------------------
// SVD Line: 21191

//  <rtree> SFDITEM_REG__UCPD2_RX_ORDSET
//    <name> RX_ORDSET </name>
//    <r> 
//    <i> [Bits 31..0] RO (@ 0x4000A428) UCPD Rx Ordered Set Register </i>
//    <loc> ( (unsigned int)((UCPD2_RX_ORDSET >> 0) & 0xFFFFFFFF) ) </loc>
//    <item> SFDITEM_FIELD__UCPD2_RX_ORDSET_RXORDSET </item>
//    <item> SFDITEM_FIELD__UCPD2_RX_ORDSET_RXSOP3OF4 </item>
//    <item> SFDITEM_FIELD__UCPD2_RX_ORDSET_RXSOPKINVALID </item>
//  </rtree>
//  


// --------------------------  Register Item Address: UCPD2_RX_PAYSZ  -----------------------------
// SVD Line: 21220

unsigned int UCPD2_RX_PAYSZ __AT (0x4000A42C);



// ---------------------------  Field Item: UCPD2_RX_PAYSZ_RXPAYSZ  -------------------------------
// SVD Line: 21229

//  <item> SFDITEM_FIELD__UCPD2_RX_PAYSZ_RXPAYSZ
//    <name> RXPAYSZ </name>
//    <rw> 
//    <i> [Bits 9..0] RW (@ 0x4000A42C) RXPAYSZ </i>
//    <edit> 
//      <loc> ( (unsigned short)((UCPD2_RX_PAYSZ >> 0) & 0x3FF), ((UCPD2_RX_PAYSZ = (UCPD2_RX_PAYSZ & ~(0x3FFUL << 0 )) | ((unsigned long)(Gui_u16:GuiVal & 0x3FF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -----------------------------  Register RTree: UCPD2_RX_PAYSZ  ---------------------------------
// SVD Line: 21220

//  <rtree> SFDITEM_REG__UCPD2_RX_PAYSZ
//    <name> RX_PAYSZ </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x4000A42C) UCPD Rx Paysize Register </i>
//    <loc> ( (unsigned int)((UCPD2_RX_PAYSZ >> 0) & 0xFFFFFFFF), ((UCPD2_RX_PAYSZ = (UCPD2_RX_PAYSZ & ~(0x3FFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0x3FF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__UCPD2_RX_PAYSZ_RXPAYSZ </item>
//  </rtree>
//  


// ----------------------------  Register Item Address: UCPD2_RXDR  -------------------------------
// SVD Line: 21237

unsigned int UCPD2_RXDR __AT (0x4000A430);



// ------------------------------  Field Item: UCPD2_RXDR_RXDATA  ---------------------------------
// SVD Line: 21246

//  <item> SFDITEM_FIELD__UCPD2_RXDR_RXDATA
//    <name> RXDATA </name>
//    <r> 
//    <i> [Bits 7..0] RO (@ 0x4000A430) RXDATA </i>
//    <edit> 
//      <loc> ( (unsigned char)((UCPD2_RXDR >> 0) & 0xFF) ) </loc>
//    </edit>
//  </item>
//  


// -------------------------------  Register RTree: UCPD2_RXDR  -----------------------------------
// SVD Line: 21237

//  <rtree> SFDITEM_REG__UCPD2_RXDR
//    <name> RXDR </name>
//    <r> 
//    <i> [Bits 31..0] RO (@ 0x4000A430) UCPD Receive Data Register </i>
//    <loc> ( (unsigned int)((UCPD2_RXDR >> 0) & 0xFFFFFFFF) ) </loc>
//    <item> SFDITEM_FIELD__UCPD2_RXDR_RXDATA </item>
//  </rtree>
//  


// -------------------------  Register Item Address: UCPD2_RX_ORDEXT1  ----------------------------
// SVD Line: 21254

unsigned int UCPD2_RX_ORDEXT1 __AT (0x4000A434);



// --------------------------  Field Item: UCPD2_RX_ORDEXT1_RXSOPX1  ------------------------------
// SVD Line: 21264

//  <item> SFDITEM_FIELD__UCPD2_RX_ORDEXT1_RXSOPX1
//    <name> RXSOPX1 </name>
//    <rw> 
//    <i> [Bits 19..0] RW (@ 0x4000A434) RXSOPX1 </i>
//    <edit> 
//      <loc> ( (unsigned int)((UCPD2_RX_ORDEXT1 >> 0) & 0xFFFFF), ((UCPD2_RX_ORDEXT1 = (UCPD2_RX_ORDEXT1 & ~(0xFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ----------------------------  Register RTree: UCPD2_RX_ORDEXT1  --------------------------------
// SVD Line: 21254

//  <rtree> SFDITEM_REG__UCPD2_RX_ORDEXT1
//    <name> RX_ORDEXT1 </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x4000A434) UCPD Rx Ordered Set Extension  Register </i>
//    <loc> ( (unsigned int)((UCPD2_RX_ORDEXT1 >> 0) & 0xFFFFFFFF), ((UCPD2_RX_ORDEXT1 = (UCPD2_RX_ORDEXT1 & ~(0xFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__UCPD2_RX_ORDEXT1_RXSOPX1 </item>
//  </rtree>
//  


// -------------------------  Register Item Address: UCPD2_RX_ORDEXT2  ----------------------------
// SVD Line: 21272

unsigned int UCPD2_RX_ORDEXT2 __AT (0x4000A438);



// --------------------------  Field Item: UCPD2_RX_ORDEXT2_RXSOPX2  ------------------------------
// SVD Line: 21282

//  <item> SFDITEM_FIELD__UCPD2_RX_ORDEXT2_RXSOPX2
//    <name> RXSOPX2 </name>
//    <rw> 
//    <i> [Bits 19..0] RW (@ 0x4000A438) RXSOPX2 </i>
//    <edit> 
//      <loc> ( (unsigned int)((UCPD2_RX_ORDEXT2 >> 0) & 0xFFFFF), ((UCPD2_RX_ORDEXT2 = (UCPD2_RX_ORDEXT2 & ~(0xFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ----------------------------  Register RTree: UCPD2_RX_ORDEXT2  --------------------------------
// SVD Line: 21272

//  <rtree> SFDITEM_REG__UCPD2_RX_ORDEXT2
//    <name> RX_ORDEXT2 </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x4000A438) UCPD Rx Ordered Set Extension  Register </i>
//    <loc> ( (unsigned int)((UCPD2_RX_ORDEXT2 >> 0) & 0xFFFFFFFF), ((UCPD2_RX_ORDEXT2 = (UCPD2_RX_ORDEXT2 & ~(0xFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__UCPD2_RX_ORDEXT2_RXSOPX2 </item>
//  </rtree>
//  


// ---------------------------  Register Item Address: UCPD2_IPVER  -------------------------------
// SVD Line: 21290

unsigned int UCPD2_IPVER __AT (0x4000A7F4);



// ------------------------------  Field Item: UCPD2_IPVER_IPVER  ---------------------------------
// SVD Line: 21299

//  <item> SFDITEM_FIELD__UCPD2_IPVER_IPVER
//    <name> IPVER </name>
//    <r> 
//    <i> [Bits 31..0] RO (@ 0x4000A7F4) IPVER </i>
//    <edit> 
//      <loc> ( (unsigned int)((UCPD2_IPVER >> 0) & 0xFFFFFFFF) ) </loc>
//    </edit>
//  </item>
//  


// -------------------------------  Register RTree: UCPD2_IPVER  ----------------------------------
// SVD Line: 21290

//  <rtree> SFDITEM_REG__UCPD2_IPVER
//    <name> IPVER </name>
//    <r> 
//    <i> [Bits 31..0] RO (@ 0x4000A7F4) UCPD IP ID register </i>
//    <loc> ( (unsigned int)((UCPD2_IPVER >> 0) & 0xFFFFFFFF) ) </loc>
//    <item> SFDITEM_FIELD__UCPD2_IPVER_IPVER </item>
//  </rtree>
//  


// ----------------------------  Register Item Address: UCPD2_IPID  -------------------------------
// SVD Line: 21307

unsigned int UCPD2_IPID __AT (0x4000A7F8);



// -------------------------------  Field Item: UCPD2_IPID_IPID  ----------------------------------
// SVD Line: 21316

//  <item> SFDITEM_FIELD__UCPD2_IPID_IPID
//    <name> IPID </name>
//    <r> 
//    <i> [Bits 31..0] RO (@ 0x4000A7F8) IPID </i>
//    <edit> 
//      <loc> ( (unsigned int)((UCPD2_IPID >> 0) & 0xFFFFFFFF) ) </loc>
//    </edit>
//  </item>
//  


// -------------------------------  Register RTree: UCPD2_IPID  -----------------------------------
// SVD Line: 21307

//  <rtree> SFDITEM_REG__UCPD2_IPID
//    <name> IPID </name>
//    <r> 
//    <i> [Bits 31..0] RO (@ 0x4000A7F8) UCPD IP ID register </i>
//    <loc> ( (unsigned int)((UCPD2_IPID >> 0) & 0xFFFFFFFF) ) </loc>
//    <item> SFDITEM_FIELD__UCPD2_IPID_IPID </item>
//  </rtree>
//  


// ----------------------------  Register Item Address: UCPD2_MID  --------------------------------
// SVD Line: 21324

unsigned int UCPD2_MID __AT (0x4000A7FC);



// -------------------------------  Field Item: UCPD2_MID_IPID  -----------------------------------
// SVD Line: 21333

//  <item> SFDITEM_FIELD__UCPD2_MID_IPID
//    <name> IPID </name>
//    <r> 
//    <i> [Bits 31..0] RO (@ 0x4000A7FC) IPID </i>
//    <edit> 
//      <loc> ( (unsigned int)((UCPD2_MID >> 0) & 0xFFFFFFFF) ) </loc>
//    </edit>
//  </item>
//  


// --------------------------------  Register RTree: UCPD2_MID  -----------------------------------
// SVD Line: 21324

//  <rtree> SFDITEM_REG__UCPD2_MID
//    <name> MID </name>
//    <r> 
//    <i> [Bits 31..0] RO (@ 0x4000A7FC) UCPD IP ID register </i>
//    <loc> ( (unsigned int)((UCPD2_MID >> 0) & 0xFFFFFFFF) ) </loc>
//    <item> SFDITEM_FIELD__UCPD2_MID_IPID </item>
//  </rtree>
//  


// ---------------------------------  Peripheral View: UCPD2  -------------------------------------
// SVD Line: 21343

//  <view> UCPD2
//    <name> UCPD2 </name>
//    <item> SFDITEM_REG__UCPD2_CFG1 </item>
//    <item> SFDITEM_REG__UCPD2_CFG2 </item>
//    <item> SFDITEM_REG__UCPD2_CFG3 </item>
//    <item> SFDITEM_REG__UCPD2_CR </item>
//    <item> SFDITEM_REG__UCPD2_IMR </item>
//    <item> SFDITEM_REG__UCPD2_SR </item>
//    <item> SFDITEM_REG__UCPD2_ICR </item>
//    <item> SFDITEM_REG__UCPD2_TX_ORDSET </item>
//    <item> SFDITEM_REG__UCPD2_TX_PAYSZ </item>
//    <item> SFDITEM_REG__UCPD2_TXDR </item>
//    <item> SFDITEM_REG__UCPD2_RX_ORDSET </item>
//    <item> SFDITEM_REG__UCPD2_RX_PAYSZ </item>
//    <item> SFDITEM_REG__UCPD2_RXDR </item>
//    <item> SFDITEM_REG__UCPD2_RX_ORDEXT1 </item>
//    <item> SFDITEM_REG__UCPD2_RX_ORDEXT2 </item>
//    <item> SFDITEM_REG__UCPD2_IPVER </item>
//    <item> SFDITEM_REG__UCPD2_IPID </item>
//    <item> SFDITEM_REG__UCPD2_MID </item>
//  </view>
//  


// ----------------------------  Register Item Address: LPTIM1_ISR  -------------------------------
// SVD Line: 21358

unsigned int LPTIM1_ISR __AT (0x40007C00);



// -------------------------------  Field Item: LPTIM1_ISR_DOWN  ----------------------------------
// SVD Line: 21367

//  <item> SFDITEM_FIELD__LPTIM1_ISR_DOWN
//    <name> DOWN </name>
//    <r> 
//    <i> [Bit 6] RO (@ 0x40007C00) Counter direction change up to  down </i>
//    <check> 
//      <loc> ( (unsigned int) LPTIM1_ISR ) </loc>
//      <o.6..6> DOWN
//    </check>
//  </item>
//  


// --------------------------------  Field Item: LPTIM1_ISR_UP  -----------------------------------
// SVD Line: 21374

//  <item> SFDITEM_FIELD__LPTIM1_ISR_UP
//    <name> UP </name>
//    <r> 
//    <i> [Bit 5] RO (@ 0x40007C00) Counter direction change down to  up </i>
//    <check> 
//      <loc> ( (unsigned int) LPTIM1_ISR ) </loc>
//      <o.5..5> UP
//    </check>
//  </item>
//  


// ------------------------------  Field Item: LPTIM1_ISR_ARROK  ----------------------------------
// SVD Line: 21381

//  <item> SFDITEM_FIELD__LPTIM1_ISR_ARROK
//    <name> ARROK </name>
//    <r> 
//    <i> [Bit 4] RO (@ 0x40007C00) Autoreload register update  OK </i>
//    <check> 
//      <loc> ( (unsigned int) LPTIM1_ISR ) </loc>
//      <o.4..4> ARROK
//    </check>
//  </item>
//  


// ------------------------------  Field Item: LPTIM1_ISR_CMPOK  ----------------------------------
// SVD Line: 21388

//  <item> SFDITEM_FIELD__LPTIM1_ISR_CMPOK
//    <name> CMPOK </name>
//    <r> 
//    <i> [Bit 3] RO (@ 0x40007C00) Compare register update OK </i>
//    <check> 
//      <loc> ( (unsigned int) LPTIM1_ISR ) </loc>
//      <o.3..3> CMPOK
//    </check>
//  </item>
//  


// -----------------------------  Field Item: LPTIM1_ISR_EXTTRIG  ---------------------------------
// SVD Line: 21394

//  <item> SFDITEM_FIELD__LPTIM1_ISR_EXTTRIG
//    <name> EXTTRIG </name>
//    <r> 
//    <i> [Bit 2] RO (@ 0x40007C00) External trigger edge  event </i>
//    <check> 
//      <loc> ( (unsigned int) LPTIM1_ISR ) </loc>
//      <o.2..2> EXTTRIG
//    </check>
//  </item>
//  


// -------------------------------  Field Item: LPTIM1_ISR_ARRM  ----------------------------------
// SVD Line: 21401

//  <item> SFDITEM_FIELD__LPTIM1_ISR_ARRM
//    <name> ARRM </name>
//    <r> 
//    <i> [Bit 1] RO (@ 0x40007C00) Autoreload match </i>
//    <check> 
//      <loc> ( (unsigned int) LPTIM1_ISR ) </loc>
//      <o.1..1> ARRM
//    </check>
//  </item>
//  


// -------------------------------  Field Item: LPTIM1_ISR_CMPM  ----------------------------------
// SVD Line: 21407

//  <item> SFDITEM_FIELD__LPTIM1_ISR_CMPM
//    <name> CMPM </name>
//    <r> 
//    <i> [Bit 0] RO (@ 0x40007C00) Compare match </i>
//    <check> 
//      <loc> ( (unsigned int) LPTIM1_ISR ) </loc>
//      <o.0..0> CMPM
//    </check>
//  </item>
//  


// -------------------------------  Register RTree: LPTIM1_ISR  -----------------------------------
// SVD Line: 21358

//  <rtree> SFDITEM_REG__LPTIM1_ISR
//    <name> ISR </name>
//    <r> 
//    <i> [Bits 31..0] RO (@ 0x40007C00) Interrupt and Status Register </i>
//    <loc> ( (unsigned int)((LPTIM1_ISR >> 0) & 0xFFFFFFFF) ) </loc>
//    <item> SFDITEM_FIELD__LPTIM1_ISR_DOWN </item>
//    <item> SFDITEM_FIELD__LPTIM1_ISR_UP </item>
//    <item> SFDITEM_FIELD__LPTIM1_ISR_ARROK </item>
//    <item> SFDITEM_FIELD__LPTIM1_ISR_CMPOK </item>
//    <item> SFDITEM_FIELD__LPTIM1_ISR_EXTTRIG </item>
//    <item> SFDITEM_FIELD__LPTIM1_ISR_ARRM </item>
//    <item> SFDITEM_FIELD__LPTIM1_ISR_CMPM </item>
//  </rtree>
//  


// ----------------------------  Register Item Address: LPTIM1_ICR  -------------------------------
// SVD Line: 21415

unsigned int LPTIM1_ICR __AT (0x40007C04);



// ------------------------------  Field Item: LPTIM1_ICR_DOWNCF  ---------------------------------
// SVD Line: 21424

//  <item> SFDITEM_FIELD__LPTIM1_ICR_DOWNCF
//    <name> DOWNCF </name>
//    <w> 
//    <i> [Bit 6] WO (@ 0x40007C04) Direction change to down Clear  Flag </i>
//    <check> 
//      <loc> ( (unsigned int) LPTIM1_ICR ) </loc>
//      <o.6..6> DOWNCF
//    </check>
//  </item>
//  


// -------------------------------  Field Item: LPTIM1_ICR_UPCF  ----------------------------------
// SVD Line: 21431

//  <item> SFDITEM_FIELD__LPTIM1_ICR_UPCF
//    <name> UPCF </name>
//    <w> 
//    <i> [Bit 5] WO (@ 0x40007C04) Direction change to UP Clear  Flag </i>
//    <check> 
//      <loc> ( (unsigned int) LPTIM1_ICR ) </loc>
//      <o.5..5> UPCF
//    </check>
//  </item>
//  


// -----------------------------  Field Item: LPTIM1_ICR_ARROKCF  ---------------------------------
// SVD Line: 21438

//  <item> SFDITEM_FIELD__LPTIM1_ICR_ARROKCF
//    <name> ARROKCF </name>
//    <w> 
//    <i> [Bit 4] WO (@ 0x40007C04) Autoreload register update OK Clear  Flag </i>
//    <check> 
//      <loc> ( (unsigned int) LPTIM1_ICR ) </loc>
//      <o.4..4> ARROKCF
//    </check>
//  </item>
//  


// -----------------------------  Field Item: LPTIM1_ICR_CMPOKCF  ---------------------------------
// SVD Line: 21445

//  <item> SFDITEM_FIELD__LPTIM1_ICR_CMPOKCF
//    <name> CMPOKCF </name>
//    <w> 
//    <i> [Bit 3] WO (@ 0x40007C04) Compare register update OK Clear  Flag </i>
//    <check> 
//      <loc> ( (unsigned int) LPTIM1_ICR ) </loc>
//      <o.3..3> CMPOKCF
//    </check>
//  </item>
//  


// ----------------------------  Field Item: LPTIM1_ICR_EXTTRIGCF  --------------------------------
// SVD Line: 21452

//  <item> SFDITEM_FIELD__LPTIM1_ICR_EXTTRIGCF
//    <name> EXTTRIGCF </name>
//    <w> 
//    <i> [Bit 2] WO (@ 0x40007C04) External trigger valid edge Clear  Flag </i>
//    <check> 
//      <loc> ( (unsigned int) LPTIM1_ICR ) </loc>
//      <o.2..2> EXTTRIGCF
//    </check>
//  </item>
//  


// ------------------------------  Field Item: LPTIM1_ICR_ARRMCF  ---------------------------------
// SVD Line: 21459

//  <item> SFDITEM_FIELD__LPTIM1_ICR_ARRMCF
//    <name> ARRMCF </name>
//    <w> 
//    <i> [Bit 1] WO (@ 0x40007C04) Autoreload match Clear  Flag </i>
//    <check> 
//      <loc> ( (unsigned int) LPTIM1_ICR ) </loc>
//      <o.1..1> ARRMCF
//    </check>
//  </item>
//  


// ------------------------------  Field Item: LPTIM1_ICR_CMPMCF  ---------------------------------
// SVD Line: 21466

//  <item> SFDITEM_FIELD__LPTIM1_ICR_CMPMCF
//    <name> CMPMCF </name>
//    <w> 
//    <i> [Bit 0] WO (@ 0x40007C04) compare match Clear Flag </i>
//    <check> 
//      <loc> ( (unsigned int) LPTIM1_ICR ) </loc>
//      <o.0..0> CMPMCF
//    </check>
//  </item>
//  


// -------------------------------  Register RTree: LPTIM1_ICR  -----------------------------------
// SVD Line: 21415

//  <rtree> SFDITEM_REG__LPTIM1_ICR
//    <name> ICR </name>
//    <w> 
//    <i> [Bits 31..0] WO (@ 0x40007C04) Interrupt Clear Register </i>
//    <loc> ( (unsigned int)((LPTIM1_ICR >> 0) & 0xFFFFFFFF), ((LPTIM1_ICR = (LPTIM1_ICR & ~(0x7FUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0x7F) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__LPTIM1_ICR_DOWNCF </item>
//    <item> SFDITEM_FIELD__LPTIM1_ICR_UPCF </item>
//    <item> SFDITEM_FIELD__LPTIM1_ICR_ARROKCF </item>
//    <item> SFDITEM_FIELD__LPTIM1_ICR_CMPOKCF </item>
//    <item> SFDITEM_FIELD__LPTIM1_ICR_EXTTRIGCF </item>
//    <item> SFDITEM_FIELD__LPTIM1_ICR_ARRMCF </item>
//    <item> SFDITEM_FIELD__LPTIM1_ICR_CMPMCF </item>
//  </rtree>
//  


// ----------------------------  Register Item Address: LPTIM1_IER  -------------------------------
// SVD Line: 21474

unsigned int LPTIM1_IER __AT (0x40007C08);



// ------------------------------  Field Item: LPTIM1_IER_DOWNIE  ---------------------------------
// SVD Line: 21483

//  <item> SFDITEM_FIELD__LPTIM1_IER_DOWNIE
//    <name> DOWNIE </name>
//    <rw> 
//    <i> [Bit 6] RW (@ 0x40007C08) Direction change to down Interrupt  Enable </i>
//    <check> 
//      <loc> ( (unsigned int) LPTIM1_IER ) </loc>
//      <o.6..6> DOWNIE
//    </check>
//  </item>
//  


// -------------------------------  Field Item: LPTIM1_IER_UPIE  ----------------------------------
// SVD Line: 21490

//  <item> SFDITEM_FIELD__LPTIM1_IER_UPIE
//    <name> UPIE </name>
//    <rw> 
//    <i> [Bit 5] RW (@ 0x40007C08) Direction change to UP Interrupt  Enable </i>
//    <check> 
//      <loc> ( (unsigned int) LPTIM1_IER ) </loc>
//      <o.5..5> UPIE
//    </check>
//  </item>
//  


// -----------------------------  Field Item: LPTIM1_IER_ARROKIE  ---------------------------------
// SVD Line: 21497

//  <item> SFDITEM_FIELD__LPTIM1_IER_ARROKIE
//    <name> ARROKIE </name>
//    <rw> 
//    <i> [Bit 4] RW (@ 0x40007C08) Autoreload register update OK Interrupt  Enable </i>
//    <check> 
//      <loc> ( (unsigned int) LPTIM1_IER ) </loc>
//      <o.4..4> ARROKIE
//    </check>
//  </item>
//  


// -----------------------------  Field Item: LPTIM1_IER_CMPOKIE  ---------------------------------
// SVD Line: 21504

//  <item> SFDITEM_FIELD__LPTIM1_IER_CMPOKIE
//    <name> CMPOKIE </name>
//    <rw> 
//    <i> [Bit 3] RW (@ 0x40007C08) Compare register update OK Interrupt  Enable </i>
//    <check> 
//      <loc> ( (unsigned int) LPTIM1_IER ) </loc>
//      <o.3..3> CMPOKIE
//    </check>
//  </item>
//  


// ----------------------------  Field Item: LPTIM1_IER_EXTTRIGIE  --------------------------------
// SVD Line: 21511

//  <item> SFDITEM_FIELD__LPTIM1_IER_EXTTRIGIE
//    <name> EXTTRIGIE </name>
//    <rw> 
//    <i> [Bit 2] RW (@ 0x40007C08) External trigger valid edge Interrupt  Enable </i>
//    <check> 
//      <loc> ( (unsigned int) LPTIM1_IER ) </loc>
//      <o.2..2> EXTTRIGIE
//    </check>
//  </item>
//  


// ------------------------------  Field Item: LPTIM1_IER_ARRMIE  ---------------------------------
// SVD Line: 21518

//  <item> SFDITEM_FIELD__LPTIM1_IER_ARRMIE
//    <name> ARRMIE </name>
//    <rw> 
//    <i> [Bit 1] RW (@ 0x40007C08) Autoreload match Interrupt  Enable </i>
//    <check> 
//      <loc> ( (unsigned int) LPTIM1_IER ) </loc>
//      <o.1..1> ARRMIE
//    </check>
//  </item>
//  


// ------------------------------  Field Item: LPTIM1_IER_CMPMIE  ---------------------------------
// SVD Line: 21525

//  <item> SFDITEM_FIELD__LPTIM1_IER_CMPMIE
//    <name> CMPMIE </name>
//    <rw> 
//    <i> [Bit 0] RW (@ 0x40007C08) Compare match Interrupt  Enable </i>
//    <check> 
//      <loc> ( (unsigned int) LPTIM1_IER ) </loc>
//      <o.0..0> CMPMIE
//    </check>
//  </item>
//  


// -------------------------------  Register RTree: LPTIM1_IER  -----------------------------------
// SVD Line: 21474

//  <rtree> SFDITEM_REG__LPTIM1_IER
//    <name> IER </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x40007C08) Interrupt Enable Register </i>
//    <loc> ( (unsigned int)((LPTIM1_IER >> 0) & 0xFFFFFFFF), ((LPTIM1_IER = (LPTIM1_IER & ~(0x7FUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0x7F) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__LPTIM1_IER_DOWNIE </item>
//    <item> SFDITEM_FIELD__LPTIM1_IER_UPIE </item>
//    <item> SFDITEM_FIELD__LPTIM1_IER_ARROKIE </item>
//    <item> SFDITEM_FIELD__LPTIM1_IER_CMPOKIE </item>
//    <item> SFDITEM_FIELD__LPTIM1_IER_EXTTRIGIE </item>
//    <item> SFDITEM_FIELD__LPTIM1_IER_ARRMIE </item>
//    <item> SFDITEM_FIELD__LPTIM1_IER_CMPMIE </item>
//  </rtree>
//  


// ---------------------------  Register Item Address: LPTIM1_CFGR  -------------------------------
// SVD Line: 21534

unsigned int LPTIM1_CFGR __AT (0x40007C0C);



// -------------------------------  Field Item: LPTIM1_CFGR_ENC  ----------------------------------
// SVD Line: 21543

//  <item> SFDITEM_FIELD__LPTIM1_CFGR_ENC
//    <name> ENC </name>
//    <rw> 
//    <i> [Bit 24] RW (@ 0x40007C0C) Encoder mode enable </i>
//    <check> 
//      <loc> ( (unsigned int) LPTIM1_CFGR ) </loc>
//      <o.24..24> ENC
//    </check>
//  </item>
//  


// ----------------------------  Field Item: LPTIM1_CFGR_COUNTMODE  -------------------------------
// SVD Line: 21549

//  <item> SFDITEM_FIELD__LPTIM1_CFGR_COUNTMODE
//    <name> COUNTMODE </name>
//    <rw> 
//    <i> [Bit 23] RW (@ 0x40007C0C) counter mode enabled </i>
//    <check> 
//      <loc> ( (unsigned int) LPTIM1_CFGR ) </loc>
//      <o.23..23> COUNTMODE
//    </check>
//  </item>
//  


// -----------------------------  Field Item: LPTIM1_CFGR_PRELOAD  --------------------------------
// SVD Line: 21555

//  <item> SFDITEM_FIELD__LPTIM1_CFGR_PRELOAD
//    <name> PRELOAD </name>
//    <rw> 
//    <i> [Bit 22] RW (@ 0x40007C0C) Registers update mode </i>
//    <check> 
//      <loc> ( (unsigned int) LPTIM1_CFGR ) </loc>
//      <o.22..22> PRELOAD
//    </check>
//  </item>
//  


// -----------------------------  Field Item: LPTIM1_CFGR_WAVPOL  ---------------------------------
// SVD Line: 21561

//  <item> SFDITEM_FIELD__LPTIM1_CFGR_WAVPOL
//    <name> WAVPOL </name>
//    <rw> 
//    <i> [Bit 21] RW (@ 0x40007C0C) Waveform shape polarity </i>
//    <check> 
//      <loc> ( (unsigned int) LPTIM1_CFGR ) </loc>
//      <o.21..21> WAVPOL
//    </check>
//  </item>
//  


// ------------------------------  Field Item: LPTIM1_CFGR_WAVE  ----------------------------------
// SVD Line: 21567

//  <item> SFDITEM_FIELD__LPTIM1_CFGR_WAVE
//    <name> WAVE </name>
//    <rw> 
//    <i> [Bit 20] RW (@ 0x40007C0C) Waveform shape </i>
//    <check> 
//      <loc> ( (unsigned int) LPTIM1_CFGR ) </loc>
//      <o.20..20> WAVE
//    </check>
//  </item>
//  


// -----------------------------  Field Item: LPTIM1_CFGR_TIMOUT  ---------------------------------
// SVD Line: 21573

//  <item> SFDITEM_FIELD__LPTIM1_CFGR_TIMOUT
//    <name> TIMOUT </name>
//    <rw> 
//    <i> [Bit 19] RW (@ 0x40007C0C) Timeout enable </i>
//    <check> 
//      <loc> ( (unsigned int) LPTIM1_CFGR ) </loc>
//      <o.19..19> TIMOUT
//    </check>
//  </item>
//  


// -----------------------------  Field Item: LPTIM1_CFGR_TRIGEN  ---------------------------------
// SVD Line: 21579

//  <item> SFDITEM_FIELD__LPTIM1_CFGR_TRIGEN
//    <name> TRIGEN </name>
//    <rw> 
//    <i> [Bits 18..17] RW (@ 0x40007C0C) Trigger enable and  polarity </i>
//    <edit> 
//      <loc> ( (unsigned char)((LPTIM1_CFGR >> 17) & 0x3), ((LPTIM1_CFGR = (LPTIM1_CFGR & ~(0x3UL << 17 )) | ((unsigned long)(Gui_u8:GuiVal & 0x3) << 17 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -----------------------------  Field Item: LPTIM1_CFGR_TRIGSEL  --------------------------------
// SVD Line: 21586

//  <item> SFDITEM_FIELD__LPTIM1_CFGR_TRIGSEL
//    <name> TRIGSEL </name>
//    <rw> 
//    <i> [Bits 15..13] RW (@ 0x40007C0C) Trigger selector </i>
//    <edit> 
//      <loc> ( (unsigned char)((LPTIM1_CFGR >> 13) & 0x7), ((LPTIM1_CFGR = (LPTIM1_CFGR & ~(0x7UL << 13 )) | ((unsigned long)(Gui_u8:GuiVal & 0x7) << 13 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ------------------------------  Field Item: LPTIM1_CFGR_PRESC  ---------------------------------
// SVD Line: 21592

//  <item> SFDITEM_FIELD__LPTIM1_CFGR_PRESC
//    <name> PRESC </name>
//    <rw> 
//    <i> [Bits 11..9] RW (@ 0x40007C0C) Clock prescaler </i>
//    <edit> 
//      <loc> ( (unsigned char)((LPTIM1_CFGR >> 9) & 0x7), ((LPTIM1_CFGR = (LPTIM1_CFGR & ~(0x7UL << 9 )) | ((unsigned long)(Gui_u8:GuiVal & 0x7) << 9 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -----------------------------  Field Item: LPTIM1_CFGR_TRGFLT  ---------------------------------
// SVD Line: 21598

//  <item> SFDITEM_FIELD__LPTIM1_CFGR_TRGFLT
//    <name> TRGFLT </name>
//    <rw> 
//    <i> [Bits 7..6] RW (@ 0x40007C0C) Configurable digital filter for  trigger </i>
//    <edit> 
//      <loc> ( (unsigned char)((LPTIM1_CFGR >> 6) & 0x3), ((LPTIM1_CFGR = (LPTIM1_CFGR & ~(0x3UL << 6 )) | ((unsigned long)(Gui_u8:GuiVal & 0x3) << 6 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ------------------------------  Field Item: LPTIM1_CFGR_CKFLT  ---------------------------------
// SVD Line: 21605

//  <item> SFDITEM_FIELD__LPTIM1_CFGR_CKFLT
//    <name> CKFLT </name>
//    <rw> 
//    <i> [Bits 4..3] RW (@ 0x40007C0C) Configurable digital filter for external  clock </i>
//    <edit> 
//      <loc> ( (unsigned char)((LPTIM1_CFGR >> 3) & 0x3), ((LPTIM1_CFGR = (LPTIM1_CFGR & ~(0x3UL << 3 )) | ((unsigned long)(Gui_u8:GuiVal & 0x3) << 3 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ------------------------------  Field Item: LPTIM1_CFGR_CKPOL  ---------------------------------
// SVD Line: 21612

//  <item> SFDITEM_FIELD__LPTIM1_CFGR_CKPOL
//    <name> CKPOL </name>
//    <rw> 
//    <i> [Bits 2..1] RW (@ 0x40007C0C) Clock Polarity </i>
//    <edit> 
//      <loc> ( (unsigned char)((LPTIM1_CFGR >> 1) & 0x3), ((LPTIM1_CFGR = (LPTIM1_CFGR & ~(0x3UL << 1 )) | ((unsigned long)(Gui_u8:GuiVal & 0x3) << 1 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ------------------------------  Field Item: LPTIM1_CFGR_CKSEL  ---------------------------------
// SVD Line: 21618

//  <item> SFDITEM_FIELD__LPTIM1_CFGR_CKSEL
//    <name> CKSEL </name>
//    <rw> 
//    <i> [Bit 0] RW (@ 0x40007C0C) Clock selector </i>
//    <check> 
//      <loc> ( (unsigned int) LPTIM1_CFGR ) </loc>
//      <o.0..0> CKSEL
//    </check>
//  </item>
//  


// -------------------------------  Register RTree: LPTIM1_CFGR  ----------------------------------
// SVD Line: 21534

//  <rtree> SFDITEM_REG__LPTIM1_CFGR
//    <name> CFGR </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x40007C0C) Configuration Register </i>
//    <loc> ( (unsigned int)((LPTIM1_CFGR >> 0) & 0xFFFFFFFF), ((LPTIM1_CFGR = (LPTIM1_CFGR & ~(0x1FEEEDFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0x1FEEEDF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__LPTIM1_CFGR_ENC </item>
//    <item> SFDITEM_FIELD__LPTIM1_CFGR_COUNTMODE </item>
//    <item> SFDITEM_FIELD__LPTIM1_CFGR_PRELOAD </item>
//    <item> SFDITEM_FIELD__LPTIM1_CFGR_WAVPOL </item>
//    <item> SFDITEM_FIELD__LPTIM1_CFGR_WAVE </item>
//    <item> SFDITEM_FIELD__LPTIM1_CFGR_TIMOUT </item>
//    <item> SFDITEM_FIELD__LPTIM1_CFGR_TRIGEN </item>
//    <item> SFDITEM_FIELD__LPTIM1_CFGR_TRIGSEL </item>
//    <item> SFDITEM_FIELD__LPTIM1_CFGR_PRESC </item>
//    <item> SFDITEM_FIELD__LPTIM1_CFGR_TRGFLT </item>
//    <item> SFDITEM_FIELD__LPTIM1_CFGR_CKFLT </item>
//    <item> SFDITEM_FIELD__LPTIM1_CFGR_CKPOL </item>
//    <item> SFDITEM_FIELD__LPTIM1_CFGR_CKSEL </item>
//  </rtree>
//  


// ----------------------------  Register Item Address: LPTIM1_CR  --------------------------------
// SVD Line: 21626

unsigned int LPTIM1_CR __AT (0x40007C10);



// ------------------------------  Field Item: LPTIM1_CR_RSTARE  ----------------------------------
// SVD Line: 21635

//  <item> SFDITEM_FIELD__LPTIM1_CR_RSTARE
//    <name> RSTARE </name>
//    <rw> 
//    <i> [Bit 4] RW (@ 0x40007C10) Reset after read enable </i>
//    <check> 
//      <loc> ( (unsigned int) LPTIM1_CR ) </loc>
//      <o.4..4> RSTARE
//    </check>
//  </item>
//  


// -----------------------------  Field Item: LPTIM1_CR_COUNTRST  ---------------------------------
// SVD Line: 21641

//  <item> SFDITEM_FIELD__LPTIM1_CR_COUNTRST
//    <name> COUNTRST </name>
//    <rw> 
//    <i> [Bit 3] RW (@ 0x40007C10) Counter reset </i>
//    <check> 
//      <loc> ( (unsigned int) LPTIM1_CR ) </loc>
//      <o.3..3> COUNTRST
//    </check>
//  </item>
//  


// ------------------------------  Field Item: LPTIM1_CR_CNTSTRT  ---------------------------------
// SVD Line: 21647

//  <item> SFDITEM_FIELD__LPTIM1_CR_CNTSTRT
//    <name> CNTSTRT </name>
//    <rw> 
//    <i> [Bit 2] RW (@ 0x40007C10) Timer start in continuous  mode </i>
//    <check> 
//      <loc> ( (unsigned int) LPTIM1_CR ) </loc>
//      <o.2..2> CNTSTRT
//    </check>
//  </item>
//  


// ------------------------------  Field Item: LPTIM1_CR_SNGSTRT  ---------------------------------
// SVD Line: 21654

//  <item> SFDITEM_FIELD__LPTIM1_CR_SNGSTRT
//    <name> SNGSTRT </name>
//    <rw> 
//    <i> [Bit 1] RW (@ 0x40007C10) LPTIM start in single mode </i>
//    <check> 
//      <loc> ( (unsigned int) LPTIM1_CR ) </loc>
//      <o.1..1> SNGSTRT
//    </check>
//  </item>
//  


// ------------------------------  Field Item: LPTIM1_CR_ENABLE  ----------------------------------
// SVD Line: 21660

//  <item> SFDITEM_FIELD__LPTIM1_CR_ENABLE
//    <name> ENABLE </name>
//    <rw> 
//    <i> [Bit 0] RW (@ 0x40007C10) LPTIM Enable </i>
//    <check> 
//      <loc> ( (unsigned int) LPTIM1_CR ) </loc>
//      <o.0..0> ENABLE
//    </check>
//  </item>
//  


// --------------------------------  Register RTree: LPTIM1_CR  -----------------------------------
// SVD Line: 21626

//  <rtree> SFDITEM_REG__LPTIM1_CR
//    <name> CR </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x40007C10) Control Register </i>
//    <loc> ( (unsigned int)((LPTIM1_CR >> 0) & 0xFFFFFFFF), ((LPTIM1_CR = (LPTIM1_CR & ~(0x1FUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0x1F) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__LPTIM1_CR_RSTARE </item>
//    <item> SFDITEM_FIELD__LPTIM1_CR_COUNTRST </item>
//    <item> SFDITEM_FIELD__LPTIM1_CR_CNTSTRT </item>
//    <item> SFDITEM_FIELD__LPTIM1_CR_SNGSTRT </item>
//    <item> SFDITEM_FIELD__LPTIM1_CR_ENABLE </item>
//  </rtree>
//  


// ----------------------------  Register Item Address: LPTIM1_CMP  -------------------------------
// SVD Line: 21668

unsigned int LPTIM1_CMP __AT (0x40007C14);



// -------------------------------  Field Item: LPTIM1_CMP_CMP  -----------------------------------
// SVD Line: 21677

//  <item> SFDITEM_FIELD__LPTIM1_CMP_CMP
//    <name> CMP </name>
//    <rw> 
//    <i> [Bits 15..0] RW (@ 0x40007C14) Compare value </i>
//    <edit> 
//      <loc> ( (unsigned short)((LPTIM1_CMP >> 0) & 0xFFFF), ((LPTIM1_CMP = (LPTIM1_CMP & ~(0xFFFFUL << 0 )) | ((unsigned long)(Gui_u16:GuiVal & 0xFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -------------------------------  Register RTree: LPTIM1_CMP  -----------------------------------
// SVD Line: 21668

//  <rtree> SFDITEM_REG__LPTIM1_CMP
//    <name> CMP </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x40007C14) Compare Register </i>
//    <loc> ( (unsigned int)((LPTIM1_CMP >> 0) & 0xFFFFFFFF), ((LPTIM1_CMP = (LPTIM1_CMP & ~(0xFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__LPTIM1_CMP_CMP </item>
//  </rtree>
//  


// ----------------------------  Register Item Address: LPTIM1_ARR  -------------------------------
// SVD Line: 21685

unsigned int LPTIM1_ARR __AT (0x40007C18);



// -------------------------------  Field Item: LPTIM1_ARR_ARR  -----------------------------------
// SVD Line: 21694

//  <item> SFDITEM_FIELD__LPTIM1_ARR_ARR
//    <name> ARR </name>
//    <rw> 
//    <i> [Bits 15..0] RW (@ 0x40007C18) Auto reload value </i>
//    <edit> 
//      <loc> ( (unsigned short)((LPTIM1_ARR >> 0) & 0xFFFF), ((LPTIM1_ARR = (LPTIM1_ARR & ~(0xFFFFUL << 0 )) | ((unsigned long)(Gui_u16:GuiVal & 0xFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -------------------------------  Register RTree: LPTIM1_ARR  -----------------------------------
// SVD Line: 21685

//  <rtree> SFDITEM_REG__LPTIM1_ARR
//    <name> ARR </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x40007C18) Autoreload Register </i>
//    <loc> ( (unsigned int)((LPTIM1_ARR >> 0) & 0xFFFFFFFF), ((LPTIM1_ARR = (LPTIM1_ARR & ~(0xFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__LPTIM1_ARR_ARR </item>
//  </rtree>
//  


// ----------------------------  Register Item Address: LPTIM1_CNT  -------------------------------
// SVD Line: 21702

unsigned int LPTIM1_CNT __AT (0x40007C1C);



// -------------------------------  Field Item: LPTIM1_CNT_CNT  -----------------------------------
// SVD Line: 21711

//  <item> SFDITEM_FIELD__LPTIM1_CNT_CNT
//    <name> CNT </name>
//    <r> 
//    <i> [Bits 15..0] RO (@ 0x40007C1C) Counter value </i>
//    <edit> 
//      <loc> ( (unsigned short)((LPTIM1_CNT >> 0) & 0xFFFF) ) </loc>
//    </edit>
//  </item>
//  


// -------------------------------  Register RTree: LPTIM1_CNT  -----------------------------------
// SVD Line: 21702

//  <rtree> SFDITEM_REG__LPTIM1_CNT
//    <name> CNT </name>
//    <r> 
//    <i> [Bits 31..0] RO (@ 0x40007C1C) Counter Register </i>
//    <loc> ( (unsigned int)((LPTIM1_CNT >> 0) & 0xFFFFFFFF) ) </loc>
//    <item> SFDITEM_FIELD__LPTIM1_CNT_CNT </item>
//  </rtree>
//  


// ---------------------------  Register Item Address: LPTIM1_CFGR2  ------------------------------
// SVD Line: 21719

unsigned int LPTIM1_CFGR2 __AT (0x40007C24);



// -----------------------------  Field Item: LPTIM1_CFGR2_IN2SEL  --------------------------------
// SVD Line: 21728

//  <item> SFDITEM_FIELD__LPTIM1_CFGR2_IN2SEL
//    <name> IN2SEL </name>
//    <rw> 
//    <i> [Bits 5..4] RW (@ 0x40007C24) LPTIM1 Input 2 selection </i>
//    <edit> 
//      <loc> ( (unsigned char)((LPTIM1_CFGR2 >> 4) & 0x3), ((LPTIM1_CFGR2 = (LPTIM1_CFGR2 & ~(0x3UL << 4 )) | ((unsigned long)(Gui_u8:GuiVal & 0x3) << 4 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -----------------------------  Field Item: LPTIM1_CFGR2_IN1SEL  --------------------------------
// SVD Line: 21734

//  <item> SFDITEM_FIELD__LPTIM1_CFGR2_IN1SEL
//    <name> IN1SEL </name>
//    <rw> 
//    <i> [Bits 1..0] RW (@ 0x40007C24) LPTIMx Input 1 selection </i>
//    <edit> 
//      <loc> ( (unsigned char)((LPTIM1_CFGR2 >> 0) & 0x3), ((LPTIM1_CFGR2 = (LPTIM1_CFGR2 & ~(0x3UL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0x3) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ------------------------------  Register RTree: LPTIM1_CFGR2  ----------------------------------
// SVD Line: 21719

//  <rtree> SFDITEM_REG__LPTIM1_CFGR2
//    <name> CFGR2 </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x40007C24) LPTIM configuration register 2 </i>
//    <loc> ( (unsigned int)((LPTIM1_CFGR2 >> 0) & 0xFFFFFFFF), ((LPTIM1_CFGR2 = (LPTIM1_CFGR2 & ~(0x33UL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0x33) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__LPTIM1_CFGR2_IN2SEL </item>
//    <item> SFDITEM_FIELD__LPTIM1_CFGR2_IN1SEL </item>
//  </rtree>
//  


// ---------------------------------  Peripheral View: LPTIM1  ------------------------------------
// SVD Line: 21347

//  <view> LPTIM1
//    <name> LPTIM1 </name>
//    <item> SFDITEM_REG__LPTIM1_ISR </item>
//    <item> SFDITEM_REG__LPTIM1_ICR </item>
//    <item> SFDITEM_REG__LPTIM1_IER </item>
//    <item> SFDITEM_REG__LPTIM1_CFGR </item>
//    <item> SFDITEM_REG__LPTIM1_CR </item>
//    <item> SFDITEM_REG__LPTIM1_CMP </item>
//    <item> SFDITEM_REG__LPTIM1_ARR </item>
//    <item> SFDITEM_REG__LPTIM1_CNT </item>
//    <item> SFDITEM_REG__LPTIM1_CFGR2 </item>
//  </view>
//  


// ----------------------------  Register Item Address: LPTIM2_ISR  -------------------------------
// SVD Line: 21358

unsigned int LPTIM2_ISR __AT (0x40009400);



// -------------------------------  Field Item: LPTIM2_ISR_DOWN  ----------------------------------
// SVD Line: 21367

//  <item> SFDITEM_FIELD__LPTIM2_ISR_DOWN
//    <name> DOWN </name>
//    <r> 
//    <i> [Bit 6] RO (@ 0x40009400) Counter direction change up to  down </i>
//    <check> 
//      <loc> ( (unsigned int) LPTIM2_ISR ) </loc>
//      <o.6..6> DOWN
//    </check>
//  </item>
//  


// --------------------------------  Field Item: LPTIM2_ISR_UP  -----------------------------------
// SVD Line: 21374

//  <item> SFDITEM_FIELD__LPTIM2_ISR_UP
//    <name> UP </name>
//    <r> 
//    <i> [Bit 5] RO (@ 0x40009400) Counter direction change down to  up </i>
//    <check> 
//      <loc> ( (unsigned int) LPTIM2_ISR ) </loc>
//      <o.5..5> UP
//    </check>
//  </item>
//  


// ------------------------------  Field Item: LPTIM2_ISR_ARROK  ----------------------------------
// SVD Line: 21381

//  <item> SFDITEM_FIELD__LPTIM2_ISR_ARROK
//    <name> ARROK </name>
//    <r> 
//    <i> [Bit 4] RO (@ 0x40009400) Autoreload register update  OK </i>
//    <check> 
//      <loc> ( (unsigned int) LPTIM2_ISR ) </loc>
//      <o.4..4> ARROK
//    </check>
//  </item>
//  


// ------------------------------  Field Item: LPTIM2_ISR_CMPOK  ----------------------------------
// SVD Line: 21388

//  <item> SFDITEM_FIELD__LPTIM2_ISR_CMPOK
//    <name> CMPOK </name>
//    <r> 
//    <i> [Bit 3] RO (@ 0x40009400) Compare register update OK </i>
//    <check> 
//      <loc> ( (unsigned int) LPTIM2_ISR ) </loc>
//      <o.3..3> CMPOK
//    </check>
//  </item>
//  


// -----------------------------  Field Item: LPTIM2_ISR_EXTTRIG  ---------------------------------
// SVD Line: 21394

//  <item> SFDITEM_FIELD__LPTIM2_ISR_EXTTRIG
//    <name> EXTTRIG </name>
//    <r> 
//    <i> [Bit 2] RO (@ 0x40009400) External trigger edge  event </i>
//    <check> 
//      <loc> ( (unsigned int) LPTIM2_ISR ) </loc>
//      <o.2..2> EXTTRIG
//    </check>
//  </item>
//  


// -------------------------------  Field Item: LPTIM2_ISR_ARRM  ----------------------------------
// SVD Line: 21401

//  <item> SFDITEM_FIELD__LPTIM2_ISR_ARRM
//    <name> ARRM </name>
//    <r> 
//    <i> [Bit 1] RO (@ 0x40009400) Autoreload match </i>
//    <check> 
//      <loc> ( (unsigned int) LPTIM2_ISR ) </loc>
//      <o.1..1> ARRM
//    </check>
//  </item>
//  


// -------------------------------  Field Item: LPTIM2_ISR_CMPM  ----------------------------------
// SVD Line: 21407

//  <item> SFDITEM_FIELD__LPTIM2_ISR_CMPM
//    <name> CMPM </name>
//    <r> 
//    <i> [Bit 0] RO (@ 0x40009400) Compare match </i>
//    <check> 
//      <loc> ( (unsigned int) LPTIM2_ISR ) </loc>
//      <o.0..0> CMPM
//    </check>
//  </item>
//  


// -------------------------------  Register RTree: LPTIM2_ISR  -----------------------------------
// SVD Line: 21358

//  <rtree> SFDITEM_REG__LPTIM2_ISR
//    <name> ISR </name>
//    <r> 
//    <i> [Bits 31..0] RO (@ 0x40009400) Interrupt and Status Register </i>
//    <loc> ( (unsigned int)((LPTIM2_ISR >> 0) & 0xFFFFFFFF) ) </loc>
//    <item> SFDITEM_FIELD__LPTIM2_ISR_DOWN </item>
//    <item> SFDITEM_FIELD__LPTIM2_ISR_UP </item>
//    <item> SFDITEM_FIELD__LPTIM2_ISR_ARROK </item>
//    <item> SFDITEM_FIELD__LPTIM2_ISR_CMPOK </item>
//    <item> SFDITEM_FIELD__LPTIM2_ISR_EXTTRIG </item>
//    <item> SFDITEM_FIELD__LPTIM2_ISR_ARRM </item>
//    <item> SFDITEM_FIELD__LPTIM2_ISR_CMPM </item>
//  </rtree>
//  


// ----------------------------  Register Item Address: LPTIM2_ICR  -------------------------------
// SVD Line: 21415

unsigned int LPTIM2_ICR __AT (0x40009404);



// ------------------------------  Field Item: LPTIM2_ICR_DOWNCF  ---------------------------------
// SVD Line: 21424

//  <item> SFDITEM_FIELD__LPTIM2_ICR_DOWNCF
//    <name> DOWNCF </name>
//    <w> 
//    <i> [Bit 6] WO (@ 0x40009404) Direction change to down Clear  Flag </i>
//    <check> 
//      <loc> ( (unsigned int) LPTIM2_ICR ) </loc>
//      <o.6..6> DOWNCF
//    </check>
//  </item>
//  


// -------------------------------  Field Item: LPTIM2_ICR_UPCF  ----------------------------------
// SVD Line: 21431

//  <item> SFDITEM_FIELD__LPTIM2_ICR_UPCF
//    <name> UPCF </name>
//    <w> 
//    <i> [Bit 5] WO (@ 0x40009404) Direction change to UP Clear  Flag </i>
//    <check> 
//      <loc> ( (unsigned int) LPTIM2_ICR ) </loc>
//      <o.5..5> UPCF
//    </check>
//  </item>
//  


// -----------------------------  Field Item: LPTIM2_ICR_ARROKCF  ---------------------------------
// SVD Line: 21438

//  <item> SFDITEM_FIELD__LPTIM2_ICR_ARROKCF
//    <name> ARROKCF </name>
//    <w> 
//    <i> [Bit 4] WO (@ 0x40009404) Autoreload register update OK Clear  Flag </i>
//    <check> 
//      <loc> ( (unsigned int) LPTIM2_ICR ) </loc>
//      <o.4..4> ARROKCF
//    </check>
//  </item>
//  


// -----------------------------  Field Item: LPTIM2_ICR_CMPOKCF  ---------------------------------
// SVD Line: 21445

//  <item> SFDITEM_FIELD__LPTIM2_ICR_CMPOKCF
//    <name> CMPOKCF </name>
//    <w> 
//    <i> [Bit 3] WO (@ 0x40009404) Compare register update OK Clear  Flag </i>
//    <check> 
//      <loc> ( (unsigned int) LPTIM2_ICR ) </loc>
//      <o.3..3> CMPOKCF
//    </check>
//  </item>
//  


// ----------------------------  Field Item: LPTIM2_ICR_EXTTRIGCF  --------------------------------
// SVD Line: 21452

//  <item> SFDITEM_FIELD__LPTIM2_ICR_EXTTRIGCF
//    <name> EXTTRIGCF </name>
//    <w> 
//    <i> [Bit 2] WO (@ 0x40009404) External trigger valid edge Clear  Flag </i>
//    <check> 
//      <loc> ( (unsigned int) LPTIM2_ICR ) </loc>
//      <o.2..2> EXTTRIGCF
//    </check>
//  </item>
//  


// ------------------------------  Field Item: LPTIM2_ICR_ARRMCF  ---------------------------------
// SVD Line: 21459

//  <item> SFDITEM_FIELD__LPTIM2_ICR_ARRMCF
//    <name> ARRMCF </name>
//    <w> 
//    <i> [Bit 1] WO (@ 0x40009404) Autoreload match Clear  Flag </i>
//    <check> 
//      <loc> ( (unsigned int) LPTIM2_ICR ) </loc>
//      <o.1..1> ARRMCF
//    </check>
//  </item>
//  


// ------------------------------  Field Item: LPTIM2_ICR_CMPMCF  ---------------------------------
// SVD Line: 21466

//  <item> SFDITEM_FIELD__LPTIM2_ICR_CMPMCF
//    <name> CMPMCF </name>
//    <w> 
//    <i> [Bit 0] WO (@ 0x40009404) compare match Clear Flag </i>
//    <check> 
//      <loc> ( (unsigned int) LPTIM2_ICR ) </loc>
//      <o.0..0> CMPMCF
//    </check>
//  </item>
//  


// -------------------------------  Register RTree: LPTIM2_ICR  -----------------------------------
// SVD Line: 21415

//  <rtree> SFDITEM_REG__LPTIM2_ICR
//    <name> ICR </name>
//    <w> 
//    <i> [Bits 31..0] WO (@ 0x40009404) Interrupt Clear Register </i>
//    <loc> ( (unsigned int)((LPTIM2_ICR >> 0) & 0xFFFFFFFF), ((LPTIM2_ICR = (LPTIM2_ICR & ~(0x7FUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0x7F) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__LPTIM2_ICR_DOWNCF </item>
//    <item> SFDITEM_FIELD__LPTIM2_ICR_UPCF </item>
//    <item> SFDITEM_FIELD__LPTIM2_ICR_ARROKCF </item>
//    <item> SFDITEM_FIELD__LPTIM2_ICR_CMPOKCF </item>
//    <item> SFDITEM_FIELD__LPTIM2_ICR_EXTTRIGCF </item>
//    <item> SFDITEM_FIELD__LPTIM2_ICR_ARRMCF </item>
//    <item> SFDITEM_FIELD__LPTIM2_ICR_CMPMCF </item>
//  </rtree>
//  


// ----------------------------  Register Item Address: LPTIM2_IER  -------------------------------
// SVD Line: 21474

unsigned int LPTIM2_IER __AT (0x40009408);



// ------------------------------  Field Item: LPTIM2_IER_DOWNIE  ---------------------------------
// SVD Line: 21483

//  <item> SFDITEM_FIELD__LPTIM2_IER_DOWNIE
//    <name> DOWNIE </name>
//    <rw> 
//    <i> [Bit 6] RW (@ 0x40009408) Direction change to down Interrupt  Enable </i>
//    <check> 
//      <loc> ( (unsigned int) LPTIM2_IER ) </loc>
//      <o.6..6> DOWNIE
//    </check>
//  </item>
//  


// -------------------------------  Field Item: LPTIM2_IER_UPIE  ----------------------------------
// SVD Line: 21490

//  <item> SFDITEM_FIELD__LPTIM2_IER_UPIE
//    <name> UPIE </name>
//    <rw> 
//    <i> [Bit 5] RW (@ 0x40009408) Direction change to UP Interrupt  Enable </i>
//    <check> 
//      <loc> ( (unsigned int) LPTIM2_IER ) </loc>
//      <o.5..5> UPIE
//    </check>
//  </item>
//  


// -----------------------------  Field Item: LPTIM2_IER_ARROKIE  ---------------------------------
// SVD Line: 21497

//  <item> SFDITEM_FIELD__LPTIM2_IER_ARROKIE
//    <name> ARROKIE </name>
//    <rw> 
//    <i> [Bit 4] RW (@ 0x40009408) Autoreload register update OK Interrupt  Enable </i>
//    <check> 
//      <loc> ( (unsigned int) LPTIM2_IER ) </loc>
//      <o.4..4> ARROKIE
//    </check>
//  </item>
//  


// -----------------------------  Field Item: LPTIM2_IER_CMPOKIE  ---------------------------------
// SVD Line: 21504

//  <item> SFDITEM_FIELD__LPTIM2_IER_CMPOKIE
//    <name> CMPOKIE </name>
//    <rw> 
//    <i> [Bit 3] RW (@ 0x40009408) Compare register update OK Interrupt  Enable </i>
//    <check> 
//      <loc> ( (unsigned int) LPTIM2_IER ) </loc>
//      <o.3..3> CMPOKIE
//    </check>
//  </item>
//  


// ----------------------------  Field Item: LPTIM2_IER_EXTTRIGIE  --------------------------------
// SVD Line: 21511

//  <item> SFDITEM_FIELD__LPTIM2_IER_EXTTRIGIE
//    <name> EXTTRIGIE </name>
//    <rw> 
//    <i> [Bit 2] RW (@ 0x40009408) External trigger valid edge Interrupt  Enable </i>
//    <check> 
//      <loc> ( (unsigned int) LPTIM2_IER ) </loc>
//      <o.2..2> EXTTRIGIE
//    </check>
//  </item>
//  


// ------------------------------  Field Item: LPTIM2_IER_ARRMIE  ---------------------------------
// SVD Line: 21518

//  <item> SFDITEM_FIELD__LPTIM2_IER_ARRMIE
//    <name> ARRMIE </name>
//    <rw> 
//    <i> [Bit 1] RW (@ 0x40009408) Autoreload match Interrupt  Enable </i>
//    <check> 
//      <loc> ( (unsigned int) LPTIM2_IER ) </loc>
//      <o.1..1> ARRMIE
//    </check>
//  </item>
//  


// ------------------------------  Field Item: LPTIM2_IER_CMPMIE  ---------------------------------
// SVD Line: 21525

//  <item> SFDITEM_FIELD__LPTIM2_IER_CMPMIE
//    <name> CMPMIE </name>
//    <rw> 
//    <i> [Bit 0] RW (@ 0x40009408) Compare match Interrupt  Enable </i>
//    <check> 
//      <loc> ( (unsigned int) LPTIM2_IER ) </loc>
//      <o.0..0> CMPMIE
//    </check>
//  </item>
//  


// -------------------------------  Register RTree: LPTIM2_IER  -----------------------------------
// SVD Line: 21474

//  <rtree> SFDITEM_REG__LPTIM2_IER
//    <name> IER </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x40009408) Interrupt Enable Register </i>
//    <loc> ( (unsigned int)((LPTIM2_IER >> 0) & 0xFFFFFFFF), ((LPTIM2_IER = (LPTIM2_IER & ~(0x7FUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0x7F) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__LPTIM2_IER_DOWNIE </item>
//    <item> SFDITEM_FIELD__LPTIM2_IER_UPIE </item>
//    <item> SFDITEM_FIELD__LPTIM2_IER_ARROKIE </item>
//    <item> SFDITEM_FIELD__LPTIM2_IER_CMPOKIE </item>
//    <item> SFDITEM_FIELD__LPTIM2_IER_EXTTRIGIE </item>
//    <item> SFDITEM_FIELD__LPTIM2_IER_ARRMIE </item>
//    <item> SFDITEM_FIELD__LPTIM2_IER_CMPMIE </item>
//  </rtree>
//  


// ---------------------------  Register Item Address: LPTIM2_CFGR  -------------------------------
// SVD Line: 21534

unsigned int LPTIM2_CFGR __AT (0x4000940C);



// -------------------------------  Field Item: LPTIM2_CFGR_ENC  ----------------------------------
// SVD Line: 21543

//  <item> SFDITEM_FIELD__LPTIM2_CFGR_ENC
//    <name> ENC </name>
//    <rw> 
//    <i> [Bit 24] RW (@ 0x4000940C) Encoder mode enable </i>
//    <check> 
//      <loc> ( (unsigned int) LPTIM2_CFGR ) </loc>
//      <o.24..24> ENC
//    </check>
//  </item>
//  


// ----------------------------  Field Item: LPTIM2_CFGR_COUNTMODE  -------------------------------
// SVD Line: 21549

//  <item> SFDITEM_FIELD__LPTIM2_CFGR_COUNTMODE
//    <name> COUNTMODE </name>
//    <rw> 
//    <i> [Bit 23] RW (@ 0x4000940C) counter mode enabled </i>
//    <check> 
//      <loc> ( (unsigned int) LPTIM2_CFGR ) </loc>
//      <o.23..23> COUNTMODE
//    </check>
//  </item>
//  


// -----------------------------  Field Item: LPTIM2_CFGR_PRELOAD  --------------------------------
// SVD Line: 21555

//  <item> SFDITEM_FIELD__LPTIM2_CFGR_PRELOAD
//    <name> PRELOAD </name>
//    <rw> 
//    <i> [Bit 22] RW (@ 0x4000940C) Registers update mode </i>
//    <check> 
//      <loc> ( (unsigned int) LPTIM2_CFGR ) </loc>
//      <o.22..22> PRELOAD
//    </check>
//  </item>
//  


// -----------------------------  Field Item: LPTIM2_CFGR_WAVPOL  ---------------------------------
// SVD Line: 21561

//  <item> SFDITEM_FIELD__LPTIM2_CFGR_WAVPOL
//    <name> WAVPOL </name>
//    <rw> 
//    <i> [Bit 21] RW (@ 0x4000940C) Waveform shape polarity </i>
//    <check> 
//      <loc> ( (unsigned int) LPTIM2_CFGR ) </loc>
//      <o.21..21> WAVPOL
//    </check>
//  </item>
//  


// ------------------------------  Field Item: LPTIM2_CFGR_WAVE  ----------------------------------
// SVD Line: 21567

//  <item> SFDITEM_FIELD__LPTIM2_CFGR_WAVE
//    <name> WAVE </name>
//    <rw> 
//    <i> [Bit 20] RW (@ 0x4000940C) Waveform shape </i>
//    <check> 
//      <loc> ( (unsigned int) LPTIM2_CFGR ) </loc>
//      <o.20..20> WAVE
//    </check>
//  </item>
//  


// -----------------------------  Field Item: LPTIM2_CFGR_TIMOUT  ---------------------------------
// SVD Line: 21573

//  <item> SFDITEM_FIELD__LPTIM2_CFGR_TIMOUT
//    <name> TIMOUT </name>
//    <rw> 
//    <i> [Bit 19] RW (@ 0x4000940C) Timeout enable </i>
//    <check> 
//      <loc> ( (unsigned int) LPTIM2_CFGR ) </loc>
//      <o.19..19> TIMOUT
//    </check>
//  </item>
//  


// -----------------------------  Field Item: LPTIM2_CFGR_TRIGEN  ---------------------------------
// SVD Line: 21579

//  <item> SFDITEM_FIELD__LPTIM2_CFGR_TRIGEN
//    <name> TRIGEN </name>
//    <rw> 
//    <i> [Bits 18..17] RW (@ 0x4000940C) Trigger enable and  polarity </i>
//    <edit> 
//      <loc> ( (unsigned char)((LPTIM2_CFGR >> 17) & 0x3), ((LPTIM2_CFGR = (LPTIM2_CFGR & ~(0x3UL << 17 )) | ((unsigned long)(Gui_u8:GuiVal & 0x3) << 17 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -----------------------------  Field Item: LPTIM2_CFGR_TRIGSEL  --------------------------------
// SVD Line: 21586

//  <item> SFDITEM_FIELD__LPTIM2_CFGR_TRIGSEL
//    <name> TRIGSEL </name>
//    <rw> 
//    <i> [Bits 15..13] RW (@ 0x4000940C) Trigger selector </i>
//    <edit> 
//      <loc> ( (unsigned char)((LPTIM2_CFGR >> 13) & 0x7), ((LPTIM2_CFGR = (LPTIM2_CFGR & ~(0x7UL << 13 )) | ((unsigned long)(Gui_u8:GuiVal & 0x7) << 13 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ------------------------------  Field Item: LPTIM2_CFGR_PRESC  ---------------------------------
// SVD Line: 21592

//  <item> SFDITEM_FIELD__LPTIM2_CFGR_PRESC
//    <name> PRESC </name>
//    <rw> 
//    <i> [Bits 11..9] RW (@ 0x4000940C) Clock prescaler </i>
//    <edit> 
//      <loc> ( (unsigned char)((LPTIM2_CFGR >> 9) & 0x7), ((LPTIM2_CFGR = (LPTIM2_CFGR & ~(0x7UL << 9 )) | ((unsigned long)(Gui_u8:GuiVal & 0x7) << 9 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -----------------------------  Field Item: LPTIM2_CFGR_TRGFLT  ---------------------------------
// SVD Line: 21598

//  <item> SFDITEM_FIELD__LPTIM2_CFGR_TRGFLT
//    <name> TRGFLT </name>
//    <rw> 
//    <i> [Bits 7..6] RW (@ 0x4000940C) Configurable digital filter for  trigger </i>
//    <edit> 
//      <loc> ( (unsigned char)((LPTIM2_CFGR >> 6) & 0x3), ((LPTIM2_CFGR = (LPTIM2_CFGR & ~(0x3UL << 6 )) | ((unsigned long)(Gui_u8:GuiVal & 0x3) << 6 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ------------------------------  Field Item: LPTIM2_CFGR_CKFLT  ---------------------------------
// SVD Line: 21605

//  <item> SFDITEM_FIELD__LPTIM2_CFGR_CKFLT
//    <name> CKFLT </name>
//    <rw> 
//    <i> [Bits 4..3] RW (@ 0x4000940C) Configurable digital filter for external  clock </i>
//    <edit> 
//      <loc> ( (unsigned char)((LPTIM2_CFGR >> 3) & 0x3), ((LPTIM2_CFGR = (LPTIM2_CFGR & ~(0x3UL << 3 )) | ((unsigned long)(Gui_u8:GuiVal & 0x3) << 3 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ------------------------------  Field Item: LPTIM2_CFGR_CKPOL  ---------------------------------
// SVD Line: 21612

//  <item> SFDITEM_FIELD__LPTIM2_CFGR_CKPOL
//    <name> CKPOL </name>
//    <rw> 
//    <i> [Bits 2..1] RW (@ 0x4000940C) Clock Polarity </i>
//    <edit> 
//      <loc> ( (unsigned char)((LPTIM2_CFGR >> 1) & 0x3), ((LPTIM2_CFGR = (LPTIM2_CFGR & ~(0x3UL << 1 )) | ((unsigned long)(Gui_u8:GuiVal & 0x3) << 1 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ------------------------------  Field Item: LPTIM2_CFGR_CKSEL  ---------------------------------
// SVD Line: 21618

//  <item> SFDITEM_FIELD__LPTIM2_CFGR_CKSEL
//    <name> CKSEL </name>
//    <rw> 
//    <i> [Bit 0] RW (@ 0x4000940C) Clock selector </i>
//    <check> 
//      <loc> ( (unsigned int) LPTIM2_CFGR ) </loc>
//      <o.0..0> CKSEL
//    </check>
//  </item>
//  


// -------------------------------  Register RTree: LPTIM2_CFGR  ----------------------------------
// SVD Line: 21534

//  <rtree> SFDITEM_REG__LPTIM2_CFGR
//    <name> CFGR </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x4000940C) Configuration Register </i>
//    <loc> ( (unsigned int)((LPTIM2_CFGR >> 0) & 0xFFFFFFFF), ((LPTIM2_CFGR = (LPTIM2_CFGR & ~(0x1FEEEDFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0x1FEEEDF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__LPTIM2_CFGR_ENC </item>
//    <item> SFDITEM_FIELD__LPTIM2_CFGR_COUNTMODE </item>
//    <item> SFDITEM_FIELD__LPTIM2_CFGR_PRELOAD </item>
//    <item> SFDITEM_FIELD__LPTIM2_CFGR_WAVPOL </item>
//    <item> SFDITEM_FIELD__LPTIM2_CFGR_WAVE </item>
//    <item> SFDITEM_FIELD__LPTIM2_CFGR_TIMOUT </item>
//    <item> SFDITEM_FIELD__LPTIM2_CFGR_TRIGEN </item>
//    <item> SFDITEM_FIELD__LPTIM2_CFGR_TRIGSEL </item>
//    <item> SFDITEM_FIELD__LPTIM2_CFGR_PRESC </item>
//    <item> SFDITEM_FIELD__LPTIM2_CFGR_TRGFLT </item>
//    <item> SFDITEM_FIELD__LPTIM2_CFGR_CKFLT </item>
//    <item> SFDITEM_FIELD__LPTIM2_CFGR_CKPOL </item>
//    <item> SFDITEM_FIELD__LPTIM2_CFGR_CKSEL </item>
//  </rtree>
//  


// ----------------------------  Register Item Address: LPTIM2_CR  --------------------------------
// SVD Line: 21626

unsigned int LPTIM2_CR __AT (0x40009410);



// ------------------------------  Field Item: LPTIM2_CR_RSTARE  ----------------------------------
// SVD Line: 21635

//  <item> SFDITEM_FIELD__LPTIM2_CR_RSTARE
//    <name> RSTARE </name>
//    <rw> 
//    <i> [Bit 4] RW (@ 0x40009410) Reset after read enable </i>
//    <check> 
//      <loc> ( (unsigned int) LPTIM2_CR ) </loc>
//      <o.4..4> RSTARE
//    </check>
//  </item>
//  


// -----------------------------  Field Item: LPTIM2_CR_COUNTRST  ---------------------------------
// SVD Line: 21641

//  <item> SFDITEM_FIELD__LPTIM2_CR_COUNTRST
//    <name> COUNTRST </name>
//    <rw> 
//    <i> [Bit 3] RW (@ 0x40009410) Counter reset </i>
//    <check> 
//      <loc> ( (unsigned int) LPTIM2_CR ) </loc>
//      <o.3..3> COUNTRST
//    </check>
//  </item>
//  


// ------------------------------  Field Item: LPTIM2_CR_CNTSTRT  ---------------------------------
// SVD Line: 21647

//  <item> SFDITEM_FIELD__LPTIM2_CR_CNTSTRT
//    <name> CNTSTRT </name>
//    <rw> 
//    <i> [Bit 2] RW (@ 0x40009410) Timer start in continuous  mode </i>
//    <check> 
//      <loc> ( (unsigned int) LPTIM2_CR ) </loc>
//      <o.2..2> CNTSTRT
//    </check>
//  </item>
//  


// ------------------------------  Field Item: LPTIM2_CR_SNGSTRT  ---------------------------------
// SVD Line: 21654

//  <item> SFDITEM_FIELD__LPTIM2_CR_SNGSTRT
//    <name> SNGSTRT </name>
//    <rw> 
//    <i> [Bit 1] RW (@ 0x40009410) LPTIM start in single mode </i>
//    <check> 
//      <loc> ( (unsigned int) LPTIM2_CR ) </loc>
//      <o.1..1> SNGSTRT
//    </check>
//  </item>
//  


// ------------------------------  Field Item: LPTIM2_CR_ENABLE  ----------------------------------
// SVD Line: 21660

//  <item> SFDITEM_FIELD__LPTIM2_CR_ENABLE
//    <name> ENABLE </name>
//    <rw> 
//    <i> [Bit 0] RW (@ 0x40009410) LPTIM Enable </i>
//    <check> 
//      <loc> ( (unsigned int) LPTIM2_CR ) </loc>
//      <o.0..0> ENABLE
//    </check>
//  </item>
//  


// --------------------------------  Register RTree: LPTIM2_CR  -----------------------------------
// SVD Line: 21626

//  <rtree> SFDITEM_REG__LPTIM2_CR
//    <name> CR </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x40009410) Control Register </i>
//    <loc> ( (unsigned int)((LPTIM2_CR >> 0) & 0xFFFFFFFF), ((LPTIM2_CR = (LPTIM2_CR & ~(0x1FUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0x1F) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__LPTIM2_CR_RSTARE </item>
//    <item> SFDITEM_FIELD__LPTIM2_CR_COUNTRST </item>
//    <item> SFDITEM_FIELD__LPTIM2_CR_CNTSTRT </item>
//    <item> SFDITEM_FIELD__LPTIM2_CR_SNGSTRT </item>
//    <item> SFDITEM_FIELD__LPTIM2_CR_ENABLE </item>
//  </rtree>
//  


// ----------------------------  Register Item Address: LPTIM2_CMP  -------------------------------
// SVD Line: 21668

unsigned int LPTIM2_CMP __AT (0x40009414);



// -------------------------------  Field Item: LPTIM2_CMP_CMP  -----------------------------------
// SVD Line: 21677

//  <item> SFDITEM_FIELD__LPTIM2_CMP_CMP
//    <name> CMP </name>
//    <rw> 
//    <i> [Bits 15..0] RW (@ 0x40009414) Compare value </i>
//    <edit> 
//      <loc> ( (unsigned short)((LPTIM2_CMP >> 0) & 0xFFFF), ((LPTIM2_CMP = (LPTIM2_CMP & ~(0xFFFFUL << 0 )) | ((unsigned long)(Gui_u16:GuiVal & 0xFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -------------------------------  Register RTree: LPTIM2_CMP  -----------------------------------
// SVD Line: 21668

//  <rtree> SFDITEM_REG__LPTIM2_CMP
//    <name> CMP </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x40009414) Compare Register </i>
//    <loc> ( (unsigned int)((LPTIM2_CMP >> 0) & 0xFFFFFFFF), ((LPTIM2_CMP = (LPTIM2_CMP & ~(0xFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__LPTIM2_CMP_CMP </item>
//  </rtree>
//  


// ----------------------------  Register Item Address: LPTIM2_ARR  -------------------------------
// SVD Line: 21685

unsigned int LPTIM2_ARR __AT (0x40009418);



// -------------------------------  Field Item: LPTIM2_ARR_ARR  -----------------------------------
// SVD Line: 21694

//  <item> SFDITEM_FIELD__LPTIM2_ARR_ARR
//    <name> ARR </name>
//    <rw> 
//    <i> [Bits 15..0] RW (@ 0x40009418) Auto reload value </i>
//    <edit> 
//      <loc> ( (unsigned short)((LPTIM2_ARR >> 0) & 0xFFFF), ((LPTIM2_ARR = (LPTIM2_ARR & ~(0xFFFFUL << 0 )) | ((unsigned long)(Gui_u16:GuiVal & 0xFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -------------------------------  Register RTree: LPTIM2_ARR  -----------------------------------
// SVD Line: 21685

//  <rtree> SFDITEM_REG__LPTIM2_ARR
//    <name> ARR </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x40009418) Autoreload Register </i>
//    <loc> ( (unsigned int)((LPTIM2_ARR >> 0) & 0xFFFFFFFF), ((LPTIM2_ARR = (LPTIM2_ARR & ~(0xFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__LPTIM2_ARR_ARR </item>
//  </rtree>
//  


// ----------------------------  Register Item Address: LPTIM2_CNT  -------------------------------
// SVD Line: 21702

unsigned int LPTIM2_CNT __AT (0x4000941C);



// -------------------------------  Field Item: LPTIM2_CNT_CNT  -----------------------------------
// SVD Line: 21711

//  <item> SFDITEM_FIELD__LPTIM2_CNT_CNT
//    <name> CNT </name>
//    <r> 
//    <i> [Bits 15..0] RO (@ 0x4000941C) Counter value </i>
//    <edit> 
//      <loc> ( (unsigned short)((LPTIM2_CNT >> 0) & 0xFFFF) ) </loc>
//    </edit>
//  </item>
//  


// -------------------------------  Register RTree: LPTIM2_CNT  -----------------------------------
// SVD Line: 21702

//  <rtree> SFDITEM_REG__LPTIM2_CNT
//    <name> CNT </name>
//    <r> 
//    <i> [Bits 31..0] RO (@ 0x4000941C) Counter Register </i>
//    <loc> ( (unsigned int)((LPTIM2_CNT >> 0) & 0xFFFFFFFF) ) </loc>
//    <item> SFDITEM_FIELD__LPTIM2_CNT_CNT </item>
//  </rtree>
//  


// ---------------------------  Register Item Address: LPTIM2_CFGR2  ------------------------------
// SVD Line: 21719

unsigned int LPTIM2_CFGR2 __AT (0x40009424);



// -----------------------------  Field Item: LPTIM2_CFGR2_IN2SEL  --------------------------------
// SVD Line: 21728

//  <item> SFDITEM_FIELD__LPTIM2_CFGR2_IN2SEL
//    <name> IN2SEL </name>
//    <rw> 
//    <i> [Bits 5..4] RW (@ 0x40009424) LPTIM1 Input 2 selection </i>
//    <edit> 
//      <loc> ( (unsigned char)((LPTIM2_CFGR2 >> 4) & 0x3), ((LPTIM2_CFGR2 = (LPTIM2_CFGR2 & ~(0x3UL << 4 )) | ((unsigned long)(Gui_u8:GuiVal & 0x3) << 4 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -----------------------------  Field Item: LPTIM2_CFGR2_IN1SEL  --------------------------------
// SVD Line: 21734

//  <item> SFDITEM_FIELD__LPTIM2_CFGR2_IN1SEL
//    <name> IN1SEL </name>
//    <rw> 
//    <i> [Bits 1..0] RW (@ 0x40009424) LPTIMx Input 1 selection </i>
//    <edit> 
//      <loc> ( (unsigned char)((LPTIM2_CFGR2 >> 0) & 0x3), ((LPTIM2_CFGR2 = (LPTIM2_CFGR2 & ~(0x3UL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0x3) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ------------------------------  Register RTree: LPTIM2_CFGR2  ----------------------------------
// SVD Line: 21719

//  <rtree> SFDITEM_REG__LPTIM2_CFGR2
//    <name> CFGR2 </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x40009424) LPTIM configuration register 2 </i>
//    <loc> ( (unsigned int)((LPTIM2_CFGR2 >> 0) & 0xFFFFFFFF), ((LPTIM2_CFGR2 = (LPTIM2_CFGR2 & ~(0x33UL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0x33) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__LPTIM2_CFGR2_IN2SEL </item>
//    <item> SFDITEM_FIELD__LPTIM2_CFGR2_IN1SEL </item>
//  </rtree>
//  


// ---------------------------------  Peripheral View: LPTIM2  ------------------------------------
// SVD Line: 21744

//  <view> LPTIM2
//    <name> LPTIM2 </name>
//    <item> SFDITEM_REG__LPTIM2_ISR </item>
//    <item> SFDITEM_REG__LPTIM2_ICR </item>
//    <item> SFDITEM_REG__LPTIM2_IER </item>
//    <item> SFDITEM_REG__LPTIM2_CFGR </item>
//    <item> SFDITEM_REG__LPTIM2_CR </item>
//    <item> SFDITEM_REG__LPTIM2_CMP </item>
//    <item> SFDITEM_REG__LPTIM2_ARR </item>
//    <item> SFDITEM_REG__LPTIM2_CNT </item>
//    <item> SFDITEM_REG__LPTIM2_CFGR2 </item>
//  </view>
//  


// ----------------------------  Register Item Address: LPUART_CR1  -------------------------------
// SVD Line: 21760

unsigned int LPUART_CR1 __AT (0x40008000);



// ------------------------------  Field Item: LPUART_CR1_RXFFIE  ---------------------------------
// SVD Line: 21769

//  <item> SFDITEM_FIELD__LPUART_CR1_RXFFIE
//    <name> RXFFIE </name>
//    <rw> 
//    <i> [Bit 31] RW (@ 0x40008000) RXFIFO Full interrupt  enable </i>
//    <check> 
//      <loc> ( (unsigned int) LPUART_CR1 ) </loc>
//      <o.31..31> RXFFIE
//    </check>
//  </item>
//  


// ------------------------------  Field Item: LPUART_CR1_TXFEIE  ---------------------------------
// SVD Line: 21776

//  <item> SFDITEM_FIELD__LPUART_CR1_TXFEIE
//    <name> TXFEIE </name>
//    <rw> 
//    <i> [Bit 30] RW (@ 0x40008000) TXFIFO empty interrupt  enable </i>
//    <check> 
//      <loc> ( (unsigned int) LPUART_CR1 ) </loc>
//      <o.30..30> TXFEIE
//    </check>
//  </item>
//  


// ------------------------------  Field Item: LPUART_CR1_FIFOEN  ---------------------------------
// SVD Line: 21783

//  <item> SFDITEM_FIELD__LPUART_CR1_FIFOEN
//    <name> FIFOEN </name>
//    <rw> 
//    <i> [Bit 29] RW (@ 0x40008000) FIFO mode enable </i>
//    <check> 
//      <loc> ( (unsigned int) LPUART_CR1 ) </loc>
//      <o.29..29> FIFOEN
//    </check>
//  </item>
//  


// --------------------------------  Field Item: LPUART_CR1_M1  -----------------------------------
// SVD Line: 21789

//  <item> SFDITEM_FIELD__LPUART_CR1_M1
//    <name> M1 </name>
//    <rw> 
//    <i> [Bit 28] RW (@ 0x40008000) Word length </i>
//    <check> 
//      <loc> ( (unsigned int) LPUART_CR1 ) </loc>
//      <o.28..28> M1
//    </check>
//  </item>
//  


// -------------------------------  Field Item: LPUART_CR1_DEAT  ----------------------------------
// SVD Line: 21795

//  <item> SFDITEM_FIELD__LPUART_CR1_DEAT
//    <name> DEAT </name>
//    <rw> 
//    <i> [Bits 25..21] RW (@ 0x40008000) DEAT0 </i>
//    <edit> 
//      <loc> ( (unsigned char)((LPUART_CR1 >> 21) & 0x1F), ((LPUART_CR1 = (LPUART_CR1 & ~(0x1FUL << 21 )) | ((unsigned long)(Gui_u8:GuiVal & 0x1F) << 21 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ------------------------------  Field Item: LPUART_CR1_DEDT0  ----------------------------------
// SVD Line: 21801

//  <item> SFDITEM_FIELD__LPUART_CR1_DEDT0
//    <name> DEDT0 </name>
//    <rw> 
//    <i> [Bits 20..16] RW (@ 0x40008000) DEDT0 </i>
//    <edit> 
//      <loc> ( (unsigned char)((LPUART_CR1 >> 16) & 0x1F), ((LPUART_CR1 = (LPUART_CR1 & ~(0x1FUL << 16 )) | ((unsigned long)(Gui_u8:GuiVal & 0x1F) << 16 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -------------------------------  Field Item: LPUART_CR1_CMIE  ----------------------------------
// SVD Line: 21807

//  <item> SFDITEM_FIELD__LPUART_CR1_CMIE
//    <name> CMIE </name>
//    <rw> 
//    <i> [Bit 14] RW (@ 0x40008000) Character match interrupt  enable </i>
//    <check> 
//      <loc> ( (unsigned int) LPUART_CR1 ) </loc>
//      <o.14..14> CMIE
//    </check>
//  </item>
//  


// -------------------------------  Field Item: LPUART_CR1_MME  -----------------------------------
// SVD Line: 21814

//  <item> SFDITEM_FIELD__LPUART_CR1_MME
//    <name> MME </name>
//    <rw> 
//    <i> [Bit 13] RW (@ 0x40008000) Mute mode enable </i>
//    <check> 
//      <loc> ( (unsigned int) LPUART_CR1 ) </loc>
//      <o.13..13> MME
//    </check>
//  </item>
//  


// --------------------------------  Field Item: LPUART_CR1_M0  -----------------------------------
// SVD Line: 21820

//  <item> SFDITEM_FIELD__LPUART_CR1_M0
//    <name> M0 </name>
//    <rw> 
//    <i> [Bit 12] RW (@ 0x40008000) Word length </i>
//    <check> 
//      <loc> ( (unsigned int) LPUART_CR1 ) </loc>
//      <o.12..12> M0
//    </check>
//  </item>
//  


// -------------------------------  Field Item: LPUART_CR1_WAKE  ----------------------------------
// SVD Line: 21826

//  <item> SFDITEM_FIELD__LPUART_CR1_WAKE
//    <name> WAKE </name>
//    <rw> 
//    <i> [Bit 11] RW (@ 0x40008000) Receiver wakeup method </i>
//    <check> 
//      <loc> ( (unsigned int) LPUART_CR1 ) </loc>
//      <o.11..11> WAKE
//    </check>
//  </item>
//  


// -------------------------------  Field Item: LPUART_CR1_PCE  -----------------------------------
// SVD Line: 21832

//  <item> SFDITEM_FIELD__LPUART_CR1_PCE
//    <name> PCE </name>
//    <rw> 
//    <i> [Bit 10] RW (@ 0x40008000) Parity control enable </i>
//    <check> 
//      <loc> ( (unsigned int) LPUART_CR1 ) </loc>
//      <o.10..10> PCE
//    </check>
//  </item>
//  


// --------------------------------  Field Item: LPUART_CR1_PS  -----------------------------------
// SVD Line: 21838

//  <item> SFDITEM_FIELD__LPUART_CR1_PS
//    <name> PS </name>
//    <rw> 
//    <i> [Bit 9] RW (@ 0x40008000) Parity selection </i>
//    <check> 
//      <loc> ( (unsigned int) LPUART_CR1 ) </loc>
//      <o.9..9> PS
//    </check>
//  </item>
//  


// -------------------------------  Field Item: LPUART_CR1_PEIE  ----------------------------------
// SVD Line: 21844

//  <item> SFDITEM_FIELD__LPUART_CR1_PEIE
//    <name> PEIE </name>
//    <rw> 
//    <i> [Bit 8] RW (@ 0x40008000) PE interrupt enable </i>
//    <check> 
//      <loc> ( (unsigned int) LPUART_CR1 ) </loc>
//      <o.8..8> PEIE
//    </check>
//  </item>
//  


// ------------------------------  Field Item: LPUART_CR1_TXEIE  ----------------------------------
// SVD Line: 21850

//  <item> SFDITEM_FIELD__LPUART_CR1_TXEIE
//    <name> TXEIE </name>
//    <rw> 
//    <i> [Bit 7] RW (@ 0x40008000) interrupt enable </i>
//    <check> 
//      <loc> ( (unsigned int) LPUART_CR1 ) </loc>
//      <o.7..7> TXEIE
//    </check>
//  </item>
//  


// -------------------------------  Field Item: LPUART_CR1_TCIE  ----------------------------------
// SVD Line: 21856

//  <item> SFDITEM_FIELD__LPUART_CR1_TCIE
//    <name> TCIE </name>
//    <rw> 
//    <i> [Bit 6] RW (@ 0x40008000) Transmission complete interrupt  enable </i>
//    <check> 
//      <loc> ( (unsigned int) LPUART_CR1 ) </loc>
//      <o.6..6> TCIE
//    </check>
//  </item>
//  


// ------------------------------  Field Item: LPUART_CR1_RXNEIE  ---------------------------------
// SVD Line: 21863

//  <item> SFDITEM_FIELD__LPUART_CR1_RXNEIE
//    <name> RXNEIE </name>
//    <rw> 
//    <i> [Bit 5] RW (@ 0x40008000) RXNE interrupt enable </i>
//    <check> 
//      <loc> ( (unsigned int) LPUART_CR1 ) </loc>
//      <o.5..5> RXNEIE
//    </check>
//  </item>
//  


// ------------------------------  Field Item: LPUART_CR1_IDLEIE  ---------------------------------
// SVD Line: 21869

//  <item> SFDITEM_FIELD__LPUART_CR1_IDLEIE
//    <name> IDLEIE </name>
//    <rw> 
//    <i> [Bit 4] RW (@ 0x40008000) IDLE interrupt enable </i>
//    <check> 
//      <loc> ( (unsigned int) LPUART_CR1 ) </loc>
//      <o.4..4> IDLEIE
//    </check>
//  </item>
//  


// --------------------------------  Field Item: LPUART_CR1_TE  -----------------------------------
// SVD Line: 21875

//  <item> SFDITEM_FIELD__LPUART_CR1_TE
//    <name> TE </name>
//    <rw> 
//    <i> [Bit 3] RW (@ 0x40008000) Transmitter enable </i>
//    <check> 
//      <loc> ( (unsigned int) LPUART_CR1 ) </loc>
//      <o.3..3> TE
//    </check>
//  </item>
//  


// --------------------------------  Field Item: LPUART_CR1_RE  -----------------------------------
// SVD Line: 21881

//  <item> SFDITEM_FIELD__LPUART_CR1_RE
//    <name> RE </name>
//    <rw> 
//    <i> [Bit 2] RW (@ 0x40008000) Receiver enable </i>
//    <check> 
//      <loc> ( (unsigned int) LPUART_CR1 ) </loc>
//      <o.2..2> RE
//    </check>
//  </item>
//  


// -------------------------------  Field Item: LPUART_CR1_UESM  ----------------------------------
// SVD Line: 21887

//  <item> SFDITEM_FIELD__LPUART_CR1_UESM
//    <name> UESM </name>
//    <rw> 
//    <i> [Bit 1] RW (@ 0x40008000) USART enable in Stop mode </i>
//    <check> 
//      <loc> ( (unsigned int) LPUART_CR1 ) </loc>
//      <o.1..1> UESM
//    </check>
//  </item>
//  


// --------------------------------  Field Item: LPUART_CR1_UE  -----------------------------------
// SVD Line: 21893

//  <item> SFDITEM_FIELD__LPUART_CR1_UE
//    <name> UE </name>
//    <rw> 
//    <i> [Bit 0] RW (@ 0x40008000) USART enable </i>
//    <check> 
//      <loc> ( (unsigned int) LPUART_CR1 ) </loc>
//      <o.0..0> UE
//    </check>
//  </item>
//  


// -------------------------------  Register RTree: LPUART_CR1  -----------------------------------
// SVD Line: 21760

//  <rtree> SFDITEM_REG__LPUART_CR1
//    <name> CR1 </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x40008000) Control register 1 </i>
//    <loc> ( (unsigned int)((LPUART_CR1 >> 0) & 0xFFFFFFFF), ((LPUART_CR1 = (LPUART_CR1 & ~(0xF3FF7FFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xF3FF7FFF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__LPUART_CR1_RXFFIE </item>
//    <item> SFDITEM_FIELD__LPUART_CR1_TXFEIE </item>
//    <item> SFDITEM_FIELD__LPUART_CR1_FIFOEN </item>
//    <item> SFDITEM_FIELD__LPUART_CR1_M1 </item>
//    <item> SFDITEM_FIELD__LPUART_CR1_DEAT </item>
//    <item> SFDITEM_FIELD__LPUART_CR1_DEDT0 </item>
//    <item> SFDITEM_FIELD__LPUART_CR1_CMIE </item>
//    <item> SFDITEM_FIELD__LPUART_CR1_MME </item>
//    <item> SFDITEM_FIELD__LPUART_CR1_M0 </item>
//    <item> SFDITEM_FIELD__LPUART_CR1_WAKE </item>
//    <item> SFDITEM_FIELD__LPUART_CR1_PCE </item>
//    <item> SFDITEM_FIELD__LPUART_CR1_PS </item>
//    <item> SFDITEM_FIELD__LPUART_CR1_PEIE </item>
//    <item> SFDITEM_FIELD__LPUART_CR1_TXEIE </item>
//    <item> SFDITEM_FIELD__LPUART_CR1_TCIE </item>
//    <item> SFDITEM_FIELD__LPUART_CR1_RXNEIE </item>
//    <item> SFDITEM_FIELD__LPUART_CR1_IDLEIE </item>
//    <item> SFDITEM_FIELD__LPUART_CR1_TE </item>
//    <item> SFDITEM_FIELD__LPUART_CR1_RE </item>
//    <item> SFDITEM_FIELD__LPUART_CR1_UESM </item>
//    <item> SFDITEM_FIELD__LPUART_CR1_UE </item>
//  </rtree>
//  


// ----------------------------  Register Item Address: LPUART_CR2  -------------------------------
// SVD Line: 21901

unsigned int LPUART_CR2 __AT (0x40008004);



// ------------------------------  Field Item: LPUART_CR2_ADD4_7  ---------------------------------
// SVD Line: 21910

//  <item> SFDITEM_FIELD__LPUART_CR2_ADD4_7
//    <name> ADD4_7 </name>
//    <rw> 
//    <i> [Bits 31..28] RW (@ 0x40008004) Address of the USART node </i>
//    <edit> 
//      <loc> ( (unsigned char)((LPUART_CR2 >> 28) & 0xF), ((LPUART_CR2 = (LPUART_CR2 & ~(0xFUL << 28 )) | ((unsigned long)(Gui_u8:GuiVal & 0xF) << 28 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ------------------------------  Field Item: LPUART_CR2_ADD0_3  ---------------------------------
// SVD Line: 21916

//  <item> SFDITEM_FIELD__LPUART_CR2_ADD0_3
//    <name> ADD0_3 </name>
//    <rw> 
//    <i> [Bits 27..24] RW (@ 0x40008004) Address of the USART node </i>
//    <edit> 
//      <loc> ( (unsigned char)((LPUART_CR2 >> 24) & 0xF), ((LPUART_CR2 = (LPUART_CR2 & ~(0xFUL << 24 )) | ((unsigned long)(Gui_u8:GuiVal & 0xF) << 24 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -----------------------------  Field Item: LPUART_CR2_MSBFIRST  --------------------------------
// SVD Line: 21922

//  <item> SFDITEM_FIELD__LPUART_CR2_MSBFIRST
//    <name> MSBFIRST </name>
//    <rw> 
//    <i> [Bit 19] RW (@ 0x40008004) Most significant bit first </i>
//    <check> 
//      <loc> ( (unsigned int) LPUART_CR2 ) </loc>
//      <o.19..19> MSBFIRST
//    </check>
//  </item>
//  


// ------------------------------  Field Item: LPUART_CR2_TAINV  ----------------------------------
// SVD Line: 21928

//  <item> SFDITEM_FIELD__LPUART_CR2_TAINV
//    <name> TAINV </name>
//    <rw> 
//    <i> [Bit 18] RW (@ 0x40008004) Binary data inversion </i>
//    <check> 
//      <loc> ( (unsigned int) LPUART_CR2 ) </loc>
//      <o.18..18> TAINV
//    </check>
//  </item>
//  


// ------------------------------  Field Item: LPUART_CR2_TXINV  ----------------------------------
// SVD Line: 21934

//  <item> SFDITEM_FIELD__LPUART_CR2_TXINV
//    <name> TXINV </name>
//    <rw> 
//    <i> [Bit 17] RW (@ 0x40008004) TX pin active level  inversion </i>
//    <check> 
//      <loc> ( (unsigned int) LPUART_CR2 ) </loc>
//      <o.17..17> TXINV
//    </check>
//  </item>
//  


// ------------------------------  Field Item: LPUART_CR2_RXINV  ----------------------------------
// SVD Line: 21941

//  <item> SFDITEM_FIELD__LPUART_CR2_RXINV
//    <name> RXINV </name>
//    <rw> 
//    <i> [Bit 16] RW (@ 0x40008004) RX pin active level  inversion </i>
//    <check> 
//      <loc> ( (unsigned int) LPUART_CR2 ) </loc>
//      <o.16..16> RXINV
//    </check>
//  </item>
//  


// -------------------------------  Field Item: LPUART_CR2_SWAP  ----------------------------------
// SVD Line: 21948

//  <item> SFDITEM_FIELD__LPUART_CR2_SWAP
//    <name> SWAP </name>
//    <rw> 
//    <i> [Bit 15] RW (@ 0x40008004) Swap TX/RX pins </i>
//    <check> 
//      <loc> ( (unsigned int) LPUART_CR2 ) </loc>
//      <o.15..15> SWAP
//    </check>
//  </item>
//  


// -------------------------------  Field Item: LPUART_CR2_STOP  ----------------------------------
// SVD Line: 21954

//  <item> SFDITEM_FIELD__LPUART_CR2_STOP
//    <name> STOP </name>
//    <rw> 
//    <i> [Bits 13..12] RW (@ 0x40008004) STOP bits </i>
//    <edit> 
//      <loc> ( (unsigned char)((LPUART_CR2 >> 12) & 0x3), ((LPUART_CR2 = (LPUART_CR2 & ~(0x3UL << 12 )) | ((unsigned long)(Gui_u8:GuiVal & 0x3) << 12 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ------------------------------  Field Item: LPUART_CR2_ADDM7  ----------------------------------
// SVD Line: 21960

//  <item> SFDITEM_FIELD__LPUART_CR2_ADDM7
//    <name> ADDM7 </name>
//    <rw> 
//    <i> [Bit 4] RW (@ 0x40008004) 7-bit Address Detection/4-bit Address  Detection </i>
//    <check> 
//      <loc> ( (unsigned int) LPUART_CR2 ) </loc>
//      <o.4..4> ADDM7
//    </check>
//  </item>
//  


// -------------------------------  Register RTree: LPUART_CR2  -----------------------------------
// SVD Line: 21901

//  <rtree> SFDITEM_REG__LPUART_CR2
//    <name> CR2 </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x40008004) Control register 2 </i>
//    <loc> ( (unsigned int)((LPUART_CR2 >> 0) & 0xFFFFFFFF), ((LPUART_CR2 = (LPUART_CR2 & ~(0xFF0FB010UL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFF0FB010) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__LPUART_CR2_ADD4_7 </item>
//    <item> SFDITEM_FIELD__LPUART_CR2_ADD0_3 </item>
//    <item> SFDITEM_FIELD__LPUART_CR2_MSBFIRST </item>
//    <item> SFDITEM_FIELD__LPUART_CR2_TAINV </item>
//    <item> SFDITEM_FIELD__LPUART_CR2_TXINV </item>
//    <item> SFDITEM_FIELD__LPUART_CR2_RXINV </item>
//    <item> SFDITEM_FIELD__LPUART_CR2_SWAP </item>
//    <item> SFDITEM_FIELD__LPUART_CR2_STOP </item>
//    <item> SFDITEM_FIELD__LPUART_CR2_ADDM7 </item>
//  </rtree>
//  


// ----------------------------  Register Item Address: LPUART_CR3  -------------------------------
// SVD Line: 21969

unsigned int LPUART_CR3 __AT (0x40008008);



// -----------------------------  Field Item: LPUART_CR3_TXFTCFG  ---------------------------------
// SVD Line: 21978

//  <item> SFDITEM_FIELD__LPUART_CR3_TXFTCFG
//    <name> TXFTCFG </name>
//    <rw> 
//    <i> [Bits 31..29] RW (@ 0x40008008) TXFIFO threshold  configuration </i>
//    <edit> 
//      <loc> ( (unsigned char)((LPUART_CR3 >> 29) & 0x7), ((LPUART_CR3 = (LPUART_CR3 & ~(0x7UL << 29 )) | ((unsigned long)(Gui_u8:GuiVal & 0x7) << 29 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ------------------------------  Field Item: LPUART_CR3_RXFTIE  ---------------------------------
// SVD Line: 21985

//  <item> SFDITEM_FIELD__LPUART_CR3_RXFTIE
//    <name> RXFTIE </name>
//    <rw> 
//    <i> [Bit 28] RW (@ 0x40008008) RXFIFO threshold interrupt  enable </i>
//    <check> 
//      <loc> ( (unsigned int) LPUART_CR3 ) </loc>
//      <o.28..28> RXFTIE
//    </check>
//  </item>
//  


// -----------------------------  Field Item: LPUART_CR3_RXFTCFG  ---------------------------------
// SVD Line: 21992

//  <item> SFDITEM_FIELD__LPUART_CR3_RXFTCFG
//    <name> RXFTCFG </name>
//    <rw> 
//    <i> [Bits 27..25] RW (@ 0x40008008) Receive FIFO threshold  configuration </i>
//    <edit> 
//      <loc> ( (unsigned char)((LPUART_CR3 >> 25) & 0x7), ((LPUART_CR3 = (LPUART_CR3 & ~(0x7UL << 25 )) | ((unsigned long)(Gui_u8:GuiVal & 0x7) << 25 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ------------------------------  Field Item: LPUART_CR3_TXFTIE  ---------------------------------
// SVD Line: 21999

//  <item> SFDITEM_FIELD__LPUART_CR3_TXFTIE
//    <name> TXFTIE </name>
//    <rw> 
//    <i> [Bit 23] RW (@ 0x40008008) threshold interrupt enable </i>
//    <check> 
//      <loc> ( (unsigned int) LPUART_CR3 ) </loc>
//      <o.23..23> TXFTIE
//    </check>
//  </item>
//  


// ------------------------------  Field Item: LPUART_CR3_WUFIE  ----------------------------------
// SVD Line: 22005

//  <item> SFDITEM_FIELD__LPUART_CR3_WUFIE
//    <name> WUFIE </name>
//    <rw> 
//    <i> [Bit 22] RW (@ 0x40008008) Wakeup from Stop mode interrupt  enable </i>
//    <check> 
//      <loc> ( (unsigned int) LPUART_CR3 ) </loc>
//      <o.22..22> WUFIE
//    </check>
//  </item>
//  


// -------------------------------  Field Item: LPUART_CR3_WUS  -----------------------------------
// SVD Line: 22012

//  <item> SFDITEM_FIELD__LPUART_CR3_WUS
//    <name> WUS </name>
//    <rw> 
//    <i> [Bits 21..20] RW (@ 0x40008008) Wakeup from Stop mode interrupt flag  selection </i>
//    <edit> 
//      <loc> ( (unsigned char)((LPUART_CR3 >> 20) & 0x3), ((LPUART_CR3 = (LPUART_CR3 & ~(0x3UL << 20 )) | ((unsigned long)(Gui_u8:GuiVal & 0x3) << 20 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -------------------------------  Field Item: LPUART_CR3_DEP  -----------------------------------
// SVD Line: 22019

//  <item> SFDITEM_FIELD__LPUART_CR3_DEP
//    <name> DEP </name>
//    <rw> 
//    <i> [Bit 15] RW (@ 0x40008008) Driver enable polarity  selection </i>
//    <check> 
//      <loc> ( (unsigned int) LPUART_CR3 ) </loc>
//      <o.15..15> DEP
//    </check>
//  </item>
//  


// -------------------------------  Field Item: LPUART_CR3_DEM  -----------------------------------
// SVD Line: 22026

//  <item> SFDITEM_FIELD__LPUART_CR3_DEM
//    <name> DEM </name>
//    <rw> 
//    <i> [Bit 14] RW (@ 0x40008008) Driver enable mode </i>
//    <check> 
//      <loc> ( (unsigned int) LPUART_CR3 ) </loc>
//      <o.14..14> DEM
//    </check>
//  </item>
//  


// -------------------------------  Field Item: LPUART_CR3_DDRE  ----------------------------------
// SVD Line: 22032

//  <item> SFDITEM_FIELD__LPUART_CR3_DDRE
//    <name> DDRE </name>
//    <rw> 
//    <i> [Bit 13] RW (@ 0x40008008) DMA Disable on Reception  Error </i>
//    <check> 
//      <loc> ( (unsigned int) LPUART_CR3 ) </loc>
//      <o.13..13> DDRE
//    </check>
//  </item>
//  


// ------------------------------  Field Item: LPUART_CR3_OVRDIS  ---------------------------------
// SVD Line: 22039

//  <item> SFDITEM_FIELD__LPUART_CR3_OVRDIS
//    <name> OVRDIS </name>
//    <rw> 
//    <i> [Bit 12] RW (@ 0x40008008) Overrun Disable </i>
//    <check> 
//      <loc> ( (unsigned int) LPUART_CR3 ) </loc>
//      <o.12..12> OVRDIS
//    </check>
//  </item>
//  


// ------------------------------  Field Item: LPUART_CR3_CTSIE  ----------------------------------
// SVD Line: 22045

//  <item> SFDITEM_FIELD__LPUART_CR3_CTSIE
//    <name> CTSIE </name>
//    <rw> 
//    <i> [Bit 10] RW (@ 0x40008008) CTS interrupt enable </i>
//    <check> 
//      <loc> ( (unsigned int) LPUART_CR3 ) </loc>
//      <o.10..10> CTSIE
//    </check>
//  </item>
//  


// -------------------------------  Field Item: LPUART_CR3_CTSE  ----------------------------------
// SVD Line: 22051

//  <item> SFDITEM_FIELD__LPUART_CR3_CTSE
//    <name> CTSE </name>
//    <rw> 
//    <i> [Bit 9] RW (@ 0x40008008) CTS enable </i>
//    <check> 
//      <loc> ( (unsigned int) LPUART_CR3 ) </loc>
//      <o.9..9> CTSE
//    </check>
//  </item>
//  


// -------------------------------  Field Item: LPUART_CR3_RTSE  ----------------------------------
// SVD Line: 22057

//  <item> SFDITEM_FIELD__LPUART_CR3_RTSE
//    <name> RTSE </name>
//    <rw> 
//    <i> [Bit 8] RW (@ 0x40008008) RTS enable </i>
//    <check> 
//      <loc> ( (unsigned int) LPUART_CR3 ) </loc>
//      <o.8..8> RTSE
//    </check>
//  </item>
//  


// -------------------------------  Field Item: LPUART_CR3_DMAT  ----------------------------------
// SVD Line: 22063

//  <item> SFDITEM_FIELD__LPUART_CR3_DMAT
//    <name> DMAT </name>
//    <rw> 
//    <i> [Bit 7] RW (@ 0x40008008) DMA enable transmitter </i>
//    <check> 
//      <loc> ( (unsigned int) LPUART_CR3 ) </loc>
//      <o.7..7> DMAT
//    </check>
//  </item>
//  


// -------------------------------  Field Item: LPUART_CR3_DMAR  ----------------------------------
// SVD Line: 22069

//  <item> SFDITEM_FIELD__LPUART_CR3_DMAR
//    <name> DMAR </name>
//    <rw> 
//    <i> [Bit 6] RW (@ 0x40008008) DMA enable receiver </i>
//    <check> 
//      <loc> ( (unsigned int) LPUART_CR3 ) </loc>
//      <o.6..6> DMAR
//    </check>
//  </item>
//  


// ------------------------------  Field Item: LPUART_CR3_HDSEL  ----------------------------------
// SVD Line: 22075

//  <item> SFDITEM_FIELD__LPUART_CR3_HDSEL
//    <name> HDSEL </name>
//    <rw> 
//    <i> [Bit 3] RW (@ 0x40008008) Half-duplex selection </i>
//    <check> 
//      <loc> ( (unsigned int) LPUART_CR3 ) </loc>
//      <o.3..3> HDSEL
//    </check>
//  </item>
//  


// -------------------------------  Field Item: LPUART_CR3_EIE  -----------------------------------
// SVD Line: 22081

//  <item> SFDITEM_FIELD__LPUART_CR3_EIE
//    <name> EIE </name>
//    <rw> 
//    <i> [Bit 0] RW (@ 0x40008008) Error interrupt enable </i>
//    <check> 
//      <loc> ( (unsigned int) LPUART_CR3 ) </loc>
//      <o.0..0> EIE
//    </check>
//  </item>
//  


// -------------------------------  Register RTree: LPUART_CR3  -----------------------------------
// SVD Line: 21969

//  <rtree> SFDITEM_REG__LPUART_CR3
//    <name> CR3 </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x40008008) Control register 3 </i>
//    <loc> ( (unsigned int)((LPUART_CR3 >> 0) & 0xFFFFFFFF), ((LPUART_CR3 = (LPUART_CR3 & ~(0xFEF0F7C9UL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFEF0F7C9) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__LPUART_CR3_TXFTCFG </item>
//    <item> SFDITEM_FIELD__LPUART_CR3_RXFTIE </item>
//    <item> SFDITEM_FIELD__LPUART_CR3_RXFTCFG </item>
//    <item> SFDITEM_FIELD__LPUART_CR3_TXFTIE </item>
//    <item> SFDITEM_FIELD__LPUART_CR3_WUFIE </item>
//    <item> SFDITEM_FIELD__LPUART_CR3_WUS </item>
//    <item> SFDITEM_FIELD__LPUART_CR3_DEP </item>
//    <item> SFDITEM_FIELD__LPUART_CR3_DEM </item>
//    <item> SFDITEM_FIELD__LPUART_CR3_DDRE </item>
//    <item> SFDITEM_FIELD__LPUART_CR3_OVRDIS </item>
//    <item> SFDITEM_FIELD__LPUART_CR3_CTSIE </item>
//    <item> SFDITEM_FIELD__LPUART_CR3_CTSE </item>
//    <item> SFDITEM_FIELD__LPUART_CR3_RTSE </item>
//    <item> SFDITEM_FIELD__LPUART_CR3_DMAT </item>
//    <item> SFDITEM_FIELD__LPUART_CR3_DMAR </item>
//    <item> SFDITEM_FIELD__LPUART_CR3_HDSEL </item>
//    <item> SFDITEM_FIELD__LPUART_CR3_EIE </item>
//  </rtree>
//  


// ----------------------------  Register Item Address: LPUART_BRR  -------------------------------
// SVD Line: 22089

unsigned int LPUART_BRR __AT (0x4000800C);



// -------------------------------  Field Item: LPUART_BRR_BRR  -----------------------------------
// SVD Line: 22098

//  <item> SFDITEM_FIELD__LPUART_BRR_BRR
//    <name> BRR </name>
//    <rw> 
//    <i> [Bits 19..0] RW (@ 0x4000800C) BRR </i>
//    <edit> 
//      <loc> ( (unsigned int)((LPUART_BRR >> 0) & 0xFFFFF), ((LPUART_BRR = (LPUART_BRR & ~(0xFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -------------------------------  Register RTree: LPUART_BRR  -----------------------------------
// SVD Line: 22089

//  <rtree> SFDITEM_REG__LPUART_BRR
//    <name> BRR </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x4000800C) Baud rate register </i>
//    <loc> ( (unsigned int)((LPUART_BRR >> 0) & 0xFFFFFFFF), ((LPUART_BRR = (LPUART_BRR & ~(0xFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__LPUART_BRR_BRR </item>
//  </rtree>
//  


// ----------------------------  Register Item Address: LPUART_RQR  -------------------------------
// SVD Line: 22106

unsigned int LPUART_RQR __AT (0x40008018);



// ------------------------------  Field Item: LPUART_RQR_TXFRQ  ----------------------------------
// SVD Line: 22115

//  <item> SFDITEM_FIELD__LPUART_RQR_TXFRQ
//    <name> TXFRQ </name>
//    <w> 
//    <i> [Bit 4] WO (@ 0x40008018) Transmit data flush  request </i>
//    <check> 
//      <loc> ( (unsigned int) LPUART_RQR ) </loc>
//      <o.4..4> TXFRQ
//    </check>
//  </item>
//  


// ------------------------------  Field Item: LPUART_RQR_RXFRQ  ----------------------------------
// SVD Line: 22122

//  <item> SFDITEM_FIELD__LPUART_RQR_RXFRQ
//    <name> RXFRQ </name>
//    <w> 
//    <i> [Bit 3] WO (@ 0x40008018) Receive data flush request </i>
//    <check> 
//      <loc> ( (unsigned int) LPUART_RQR ) </loc>
//      <o.3..3> RXFRQ
//    </check>
//  </item>
//  


// -------------------------------  Field Item: LPUART_RQR_MMRQ  ----------------------------------
// SVD Line: 22128

//  <item> SFDITEM_FIELD__LPUART_RQR_MMRQ
//    <name> MMRQ </name>
//    <w> 
//    <i> [Bit 2] WO (@ 0x40008018) Mute mode request </i>
//    <check> 
//      <loc> ( (unsigned int) LPUART_RQR ) </loc>
//      <o.2..2> MMRQ
//    </check>
//  </item>
//  


// ------------------------------  Field Item: LPUART_RQR_SBKRQ  ----------------------------------
// SVD Line: 22134

//  <item> SFDITEM_FIELD__LPUART_RQR_SBKRQ
//    <name> SBKRQ </name>
//    <w> 
//    <i> [Bit 1] WO (@ 0x40008018) Send break request </i>
//    <check> 
//      <loc> ( (unsigned int) LPUART_RQR ) </loc>
//      <o.1..1> SBKRQ
//    </check>
//  </item>
//  


// ------------------------------  Field Item: LPUART_RQR_ABRRQ  ----------------------------------
// SVD Line: 22140

//  <item> SFDITEM_FIELD__LPUART_RQR_ABRRQ
//    <name> ABRRQ </name>
//    <w> 
//    <i> [Bit 0] WO (@ 0x40008018) Auto baud rate request </i>
//    <check> 
//      <loc> ( (unsigned int) LPUART_RQR ) </loc>
//      <o.0..0> ABRRQ
//    </check>
//  </item>
//  


// -------------------------------  Register RTree: LPUART_RQR  -----------------------------------
// SVD Line: 22106

//  <rtree> SFDITEM_REG__LPUART_RQR
//    <name> RQR </name>
//    <w> 
//    <i> [Bits 31..0] WO (@ 0x40008018) Request register </i>
//    <loc> ( (unsigned int)((LPUART_RQR >> 0) & 0xFFFFFFFF), ((LPUART_RQR = (LPUART_RQR & ~(0x1FUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0x1F) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__LPUART_RQR_TXFRQ </item>
//    <item> SFDITEM_FIELD__LPUART_RQR_RXFRQ </item>
//    <item> SFDITEM_FIELD__LPUART_RQR_MMRQ </item>
//    <item> SFDITEM_FIELD__LPUART_RQR_SBKRQ </item>
//    <item> SFDITEM_FIELD__LPUART_RQR_ABRRQ </item>
//  </rtree>
//  


// ----------------------------  Register Item Address: LPUART_ISR  -------------------------------
// SVD Line: 22148

unsigned int LPUART_ISR __AT (0x4000801C);



// -------------------------------  Field Item: LPUART_ISR_TXFT  ----------------------------------
// SVD Line: 22158

//  <item> SFDITEM_FIELD__LPUART_ISR_TXFT
//    <name> TXFT </name>
//    <r> 
//    <i> [Bit 27] RO (@ 0x4000801C) TXFIFO threshold flag </i>
//    <check> 
//      <loc> ( (unsigned int) LPUART_ISR ) </loc>
//      <o.27..27> TXFT
//    </check>
//  </item>
//  


// -------------------------------  Field Item: LPUART_ISR_RXFT  ----------------------------------
// SVD Line: 22164

//  <item> SFDITEM_FIELD__LPUART_ISR_RXFT
//    <name> RXFT </name>
//    <r> 
//    <i> [Bit 26] RO (@ 0x4000801C) RXFIFO threshold flag </i>
//    <check> 
//      <loc> ( (unsigned int) LPUART_ISR ) </loc>
//      <o.26..26> RXFT
//    </check>
//  </item>
//  


// -------------------------------  Field Item: LPUART_ISR_RXFF  ----------------------------------
// SVD Line: 22170

//  <item> SFDITEM_FIELD__LPUART_ISR_RXFF
//    <name> RXFF </name>
//    <r> 
//    <i> [Bit 24] RO (@ 0x4000801C) RXFIFO Full </i>
//    <check> 
//      <loc> ( (unsigned int) LPUART_ISR ) </loc>
//      <o.24..24> RXFF
//    </check>
//  </item>
//  


// -------------------------------  Field Item: LPUART_ISR_TXFE  ----------------------------------
// SVD Line: 22176

//  <item> SFDITEM_FIELD__LPUART_ISR_TXFE
//    <name> TXFE </name>
//    <r> 
//    <i> [Bit 23] RO (@ 0x4000801C) TXFIFO Empty </i>
//    <check> 
//      <loc> ( (unsigned int) LPUART_ISR ) </loc>
//      <o.23..23> TXFE
//    </check>
//  </item>
//  


// ------------------------------  Field Item: LPUART_ISR_REACK  ----------------------------------
// SVD Line: 22182

//  <item> SFDITEM_FIELD__LPUART_ISR_REACK
//    <name> REACK </name>
//    <r> 
//    <i> [Bit 22] RO (@ 0x4000801C) REACK </i>
//    <check> 
//      <loc> ( (unsigned int) LPUART_ISR ) </loc>
//      <o.22..22> REACK
//    </check>
//  </item>
//  


// ------------------------------  Field Item: LPUART_ISR_TEACK  ----------------------------------
// SVD Line: 22188

//  <item> SFDITEM_FIELD__LPUART_ISR_TEACK
//    <name> TEACK </name>
//    <r> 
//    <i> [Bit 21] RO (@ 0x4000801C) TEACK </i>
//    <check> 
//      <loc> ( (unsigned int) LPUART_ISR ) </loc>
//      <o.21..21> TEACK
//    </check>
//  </item>
//  


// -------------------------------  Field Item: LPUART_ISR_WUF  -----------------------------------
// SVD Line: 22194

//  <item> SFDITEM_FIELD__LPUART_ISR_WUF
//    <name> WUF </name>
//    <r> 
//    <i> [Bit 20] RO (@ 0x4000801C) WUF </i>
//    <check> 
//      <loc> ( (unsigned int) LPUART_ISR ) </loc>
//      <o.20..20> WUF
//    </check>
//  </item>
//  


// -------------------------------  Field Item: LPUART_ISR_RWU  -----------------------------------
// SVD Line: 22200

//  <item> SFDITEM_FIELD__LPUART_ISR_RWU
//    <name> RWU </name>
//    <r> 
//    <i> [Bit 19] RO (@ 0x4000801C) RWU </i>
//    <check> 
//      <loc> ( (unsigned int) LPUART_ISR ) </loc>
//      <o.19..19> RWU
//    </check>
//  </item>
//  


// -------------------------------  Field Item: LPUART_ISR_SBKF  ----------------------------------
// SVD Line: 22206

//  <item> SFDITEM_FIELD__LPUART_ISR_SBKF
//    <name> SBKF </name>
//    <r> 
//    <i> [Bit 18] RO (@ 0x4000801C) SBKF </i>
//    <check> 
//      <loc> ( (unsigned int) LPUART_ISR ) </loc>
//      <o.18..18> SBKF
//    </check>
//  </item>
//  


// -------------------------------  Field Item: LPUART_ISR_CMF  -----------------------------------
// SVD Line: 22212

//  <item> SFDITEM_FIELD__LPUART_ISR_CMF
//    <name> CMF </name>
//    <r> 
//    <i> [Bit 17] RO (@ 0x4000801C) CMF </i>
//    <check> 
//      <loc> ( (unsigned int) LPUART_ISR ) </loc>
//      <o.17..17> CMF
//    </check>
//  </item>
//  


// -------------------------------  Field Item: LPUART_ISR_BUSY  ----------------------------------
// SVD Line: 22218

//  <item> SFDITEM_FIELD__LPUART_ISR_BUSY
//    <name> BUSY </name>
//    <r> 
//    <i> [Bit 16] RO (@ 0x4000801C) BUSY </i>
//    <check> 
//      <loc> ( (unsigned int) LPUART_ISR ) </loc>
//      <o.16..16> BUSY
//    </check>
//  </item>
//  


// -------------------------------  Field Item: LPUART_ISR_CTS  -----------------------------------
// SVD Line: 22224

//  <item> SFDITEM_FIELD__LPUART_ISR_CTS
//    <name> CTS </name>
//    <r> 
//    <i> [Bit 10] RO (@ 0x4000801C) CTS </i>
//    <check> 
//      <loc> ( (unsigned int) LPUART_ISR ) </loc>
//      <o.10..10> CTS
//    </check>
//  </item>
//  


// ------------------------------  Field Item: LPUART_ISR_CTSIF  ----------------------------------
// SVD Line: 22230

//  <item> SFDITEM_FIELD__LPUART_ISR_CTSIF
//    <name> CTSIF </name>
//    <r> 
//    <i> [Bit 9] RO (@ 0x4000801C) CTSIF </i>
//    <check> 
//      <loc> ( (unsigned int) LPUART_ISR ) </loc>
//      <o.9..9> CTSIF
//    </check>
//  </item>
//  


// -------------------------------  Field Item: LPUART_ISR_TXE  -----------------------------------
// SVD Line: 22236

//  <item> SFDITEM_FIELD__LPUART_ISR_TXE
//    <name> TXE </name>
//    <r> 
//    <i> [Bit 7] RO (@ 0x4000801C) TXE </i>
//    <check> 
//      <loc> ( (unsigned int) LPUART_ISR ) </loc>
//      <o.7..7> TXE
//    </check>
//  </item>
//  


// --------------------------------  Field Item: LPUART_ISR_TC  -----------------------------------
// SVD Line: 22242

//  <item> SFDITEM_FIELD__LPUART_ISR_TC
//    <name> TC </name>
//    <r> 
//    <i> [Bit 6] RO (@ 0x4000801C) TC </i>
//    <check> 
//      <loc> ( (unsigned int) LPUART_ISR ) </loc>
//      <o.6..6> TC
//    </check>
//  </item>
//  


// -------------------------------  Field Item: LPUART_ISR_RXNE  ----------------------------------
// SVD Line: 22248

//  <item> SFDITEM_FIELD__LPUART_ISR_RXNE
//    <name> RXNE </name>
//    <r> 
//    <i> [Bit 5] RO (@ 0x4000801C) RXNE </i>
//    <check> 
//      <loc> ( (unsigned int) LPUART_ISR ) </loc>
//      <o.5..5> RXNE
//    </check>
//  </item>
//  


// -------------------------------  Field Item: LPUART_ISR_IDLE  ----------------------------------
// SVD Line: 22254

//  <item> SFDITEM_FIELD__LPUART_ISR_IDLE
//    <name> IDLE </name>
//    <r> 
//    <i> [Bit 4] RO (@ 0x4000801C) IDLE </i>
//    <check> 
//      <loc> ( (unsigned int) LPUART_ISR ) </loc>
//      <o.4..4> IDLE
//    </check>
//  </item>
//  


// -------------------------------  Field Item: LPUART_ISR_ORE  -----------------------------------
// SVD Line: 22260

//  <item> SFDITEM_FIELD__LPUART_ISR_ORE
//    <name> ORE </name>
//    <r> 
//    <i> [Bit 3] RO (@ 0x4000801C) ORE </i>
//    <check> 
//      <loc> ( (unsigned int) LPUART_ISR ) </loc>
//      <o.3..3> ORE
//    </check>
//  </item>
//  


// --------------------------------  Field Item: LPUART_ISR_NF  -----------------------------------
// SVD Line: 22266

//  <item> SFDITEM_FIELD__LPUART_ISR_NF
//    <name> NF </name>
//    <r> 
//    <i> [Bit 2] RO (@ 0x4000801C) NF </i>
//    <check> 
//      <loc> ( (unsigned int) LPUART_ISR ) </loc>
//      <o.2..2> NF
//    </check>
//  </item>
//  


// --------------------------------  Field Item: LPUART_ISR_FE  -----------------------------------
// SVD Line: 22272

//  <item> SFDITEM_FIELD__LPUART_ISR_FE
//    <name> FE </name>
//    <r> 
//    <i> [Bit 1] RO (@ 0x4000801C) FE </i>
//    <check> 
//      <loc> ( (unsigned int) LPUART_ISR ) </loc>
//      <o.1..1> FE
//    </check>
//  </item>
//  


// --------------------------------  Field Item: LPUART_ISR_PE  -----------------------------------
// SVD Line: 22278

//  <item> SFDITEM_FIELD__LPUART_ISR_PE
//    <name> PE </name>
//    <r> 
//    <i> [Bit 0] RO (@ 0x4000801C) PE </i>
//    <check> 
//      <loc> ( (unsigned int) LPUART_ISR ) </loc>
//      <o.0..0> PE
//    </check>
//  </item>
//  


// -------------------------------  Register RTree: LPUART_ISR  -----------------------------------
// SVD Line: 22148

//  <rtree> SFDITEM_REG__LPUART_ISR
//    <name> ISR </name>
//    <r> 
//    <i> [Bits 31..0] RO (@ 0x4000801C) Interrupt & status  register </i>
//    <loc> ( (unsigned int)((LPUART_ISR >> 0) & 0xFFFFFFFF) ) </loc>
//    <item> SFDITEM_FIELD__LPUART_ISR_TXFT </item>
//    <item> SFDITEM_FIELD__LPUART_ISR_RXFT </item>
//    <item> SFDITEM_FIELD__LPUART_ISR_RXFF </item>
//    <item> SFDITEM_FIELD__LPUART_ISR_TXFE </item>
//    <item> SFDITEM_FIELD__LPUART_ISR_REACK </item>
//    <item> SFDITEM_FIELD__LPUART_ISR_TEACK </item>
//    <item> SFDITEM_FIELD__LPUART_ISR_WUF </item>
//    <item> SFDITEM_FIELD__LPUART_ISR_RWU </item>
//    <item> SFDITEM_FIELD__LPUART_ISR_SBKF </item>
//    <item> SFDITEM_FIELD__LPUART_ISR_CMF </item>
//    <item> SFDITEM_FIELD__LPUART_ISR_BUSY </item>
//    <item> SFDITEM_FIELD__LPUART_ISR_CTS </item>
//    <item> SFDITEM_FIELD__LPUART_ISR_CTSIF </item>
//    <item> SFDITEM_FIELD__LPUART_ISR_TXE </item>
//    <item> SFDITEM_FIELD__LPUART_ISR_TC </item>
//    <item> SFDITEM_FIELD__LPUART_ISR_RXNE </item>
//    <item> SFDITEM_FIELD__LPUART_ISR_IDLE </item>
//    <item> SFDITEM_FIELD__LPUART_ISR_ORE </item>
//    <item> SFDITEM_FIELD__LPUART_ISR_NF </item>
//    <item> SFDITEM_FIELD__LPUART_ISR_FE </item>
//    <item> SFDITEM_FIELD__LPUART_ISR_PE </item>
//  </rtree>
//  


// ----------------------------  Register Item Address: LPUART_ICR  -------------------------------
// SVD Line: 22286

unsigned int LPUART_ICR __AT (0x40008020);



// -------------------------------  Field Item: LPUART_ICR_WUCF  ----------------------------------
// SVD Line: 22295

//  <item> SFDITEM_FIELD__LPUART_ICR_WUCF
//    <name> WUCF </name>
//    <w> 
//    <i> [Bit 20] WO (@ 0x40008020) Wakeup from Stop mode clear  flag </i>
//    <check> 
//      <loc> ( (unsigned int) LPUART_ICR ) </loc>
//      <o.20..20> WUCF
//    </check>
//  </item>
//  


// -------------------------------  Field Item: LPUART_ICR_CMCF  ----------------------------------
// SVD Line: 22302

//  <item> SFDITEM_FIELD__LPUART_ICR_CMCF
//    <name> CMCF </name>
//    <w> 
//    <i> [Bit 17] WO (@ 0x40008020) Character match clear flag </i>
//    <check> 
//      <loc> ( (unsigned int) LPUART_ICR ) </loc>
//      <o.17..17> CMCF
//    </check>
//  </item>
//  


// ------------------------------  Field Item: LPUART_ICR_CTSCF  ----------------------------------
// SVD Line: 22308

//  <item> SFDITEM_FIELD__LPUART_ICR_CTSCF
//    <name> CTSCF </name>
//    <w> 
//    <i> [Bit 9] WO (@ 0x40008020) CTS clear flag </i>
//    <check> 
//      <loc> ( (unsigned int) LPUART_ICR ) </loc>
//      <o.9..9> CTSCF
//    </check>
//  </item>
//  


// -------------------------------  Field Item: LPUART_ICR_TCCF  ----------------------------------
// SVD Line: 22314

//  <item> SFDITEM_FIELD__LPUART_ICR_TCCF
//    <name> TCCF </name>
//    <w> 
//    <i> [Bit 6] WO (@ 0x40008020) Transmission complete clear  flag </i>
//    <check> 
//      <loc> ( (unsigned int) LPUART_ICR ) </loc>
//      <o.6..6> TCCF
//    </check>
//  </item>
//  


// ------------------------------  Field Item: LPUART_ICR_IDLECF  ---------------------------------
// SVD Line: 22321

//  <item> SFDITEM_FIELD__LPUART_ICR_IDLECF
//    <name> IDLECF </name>
//    <w> 
//    <i> [Bit 4] WO (@ 0x40008020) Idle line detected clear  flag </i>
//    <check> 
//      <loc> ( (unsigned int) LPUART_ICR ) </loc>
//      <o.4..4> IDLECF
//    </check>
//  </item>
//  


// ------------------------------  Field Item: LPUART_ICR_ORECF  ----------------------------------
// SVD Line: 22328

//  <item> SFDITEM_FIELD__LPUART_ICR_ORECF
//    <name> ORECF </name>
//    <w> 
//    <i> [Bit 3] WO (@ 0x40008020) Overrun error clear flag </i>
//    <check> 
//      <loc> ( (unsigned int) LPUART_ICR ) </loc>
//      <o.3..3> ORECF
//    </check>
//  </item>
//  


// -------------------------------  Field Item: LPUART_ICR_NCF  -----------------------------------
// SVD Line: 22334

//  <item> SFDITEM_FIELD__LPUART_ICR_NCF
//    <name> NCF </name>
//    <w> 
//    <i> [Bit 2] WO (@ 0x40008020) Noise detected clear flag </i>
//    <check> 
//      <loc> ( (unsigned int) LPUART_ICR ) </loc>
//      <o.2..2> NCF
//    </check>
//  </item>
//  


// -------------------------------  Field Item: LPUART_ICR_FECF  ----------------------------------
// SVD Line: 22340

//  <item> SFDITEM_FIELD__LPUART_ICR_FECF
//    <name> FECF </name>
//    <w> 
//    <i> [Bit 1] WO (@ 0x40008020) Framing error clear flag </i>
//    <check> 
//      <loc> ( (unsigned int) LPUART_ICR ) </loc>
//      <o.1..1> FECF
//    </check>
//  </item>
//  


// -------------------------------  Field Item: LPUART_ICR_PECF  ----------------------------------
// SVD Line: 22346

//  <item> SFDITEM_FIELD__LPUART_ICR_PECF
//    <name> PECF </name>
//    <w> 
//    <i> [Bit 0] WO (@ 0x40008020) Parity error clear flag </i>
//    <check> 
//      <loc> ( (unsigned int) LPUART_ICR ) </loc>
//      <o.0..0> PECF
//    </check>
//  </item>
//  


// -------------------------------  Register RTree: LPUART_ICR  -----------------------------------
// SVD Line: 22286

//  <rtree> SFDITEM_REG__LPUART_ICR
//    <name> ICR </name>
//    <w> 
//    <i> [Bits 31..0] WO (@ 0x40008020) Interrupt flag clear register </i>
//    <loc> ( (unsigned int)((LPUART_ICR >> 0) & 0xFFFFFFFF), ((LPUART_ICR = (LPUART_ICR & ~(0x12025FUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0x12025F) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__LPUART_ICR_WUCF </item>
//    <item> SFDITEM_FIELD__LPUART_ICR_CMCF </item>
//    <item> SFDITEM_FIELD__LPUART_ICR_CTSCF </item>
//    <item> SFDITEM_FIELD__LPUART_ICR_TCCF </item>
//    <item> SFDITEM_FIELD__LPUART_ICR_IDLECF </item>
//    <item> SFDITEM_FIELD__LPUART_ICR_ORECF </item>
//    <item> SFDITEM_FIELD__LPUART_ICR_NCF </item>
//    <item> SFDITEM_FIELD__LPUART_ICR_FECF </item>
//    <item> SFDITEM_FIELD__LPUART_ICR_PECF </item>
//  </rtree>
//  


// ----------------------------  Register Item Address: LPUART_RDR  -------------------------------
// SVD Line: 22354

unsigned int LPUART_RDR __AT (0x40008024);



// -------------------------------  Field Item: LPUART_RDR_RDR  -----------------------------------
// SVD Line: 22363

//  <item> SFDITEM_FIELD__LPUART_RDR_RDR
//    <name> RDR </name>
//    <r> 
//    <i> [Bits 8..0] RO (@ 0x40008024) Receive data value </i>
//    <edit> 
//      <loc> ( (unsigned short)((LPUART_RDR >> 0) & 0x1FF) ) </loc>
//    </edit>
//  </item>
//  


// -------------------------------  Register RTree: LPUART_RDR  -----------------------------------
// SVD Line: 22354

//  <rtree> SFDITEM_REG__LPUART_RDR
//    <name> RDR </name>
//    <r> 
//    <i> [Bits 31..0] RO (@ 0x40008024) Receive data register </i>
//    <loc> ( (unsigned int)((LPUART_RDR >> 0) & 0xFFFFFFFF) ) </loc>
//    <item> SFDITEM_FIELD__LPUART_RDR_RDR </item>
//  </rtree>
//  


// ----------------------------  Register Item Address: LPUART_TDR  -------------------------------
// SVD Line: 22371

unsigned int LPUART_TDR __AT (0x40008028);



// -------------------------------  Field Item: LPUART_TDR_TDR  -----------------------------------
// SVD Line: 22380

//  <item> SFDITEM_FIELD__LPUART_TDR_TDR
//    <name> TDR </name>
//    <rw> 
//    <i> [Bits 8..0] RW (@ 0x40008028) Transmit data value </i>
//    <edit> 
//      <loc> ( (unsigned short)((LPUART_TDR >> 0) & 0x1FF), ((LPUART_TDR = (LPUART_TDR & ~(0x1FFUL << 0 )) | ((unsigned long)(Gui_u16:GuiVal & 0x1FF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -------------------------------  Register RTree: LPUART_TDR  -----------------------------------
// SVD Line: 22371

//  <rtree> SFDITEM_REG__LPUART_TDR
//    <name> TDR </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x40008028) Transmit data register </i>
//    <loc> ( (unsigned int)((LPUART_TDR >> 0) & 0xFFFFFFFF), ((LPUART_TDR = (LPUART_TDR & ~(0x1FFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0x1FF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__LPUART_TDR_TDR </item>
//  </rtree>
//  


// ---------------------------  Register Item Address: LPUART_PRESC  ------------------------------
// SVD Line: 22388

unsigned int LPUART_PRESC __AT (0x4000802C);



// ---------------------------  Field Item: LPUART_PRESC_PRESCALER  -------------------------------
// SVD Line: 22397

//  <item> SFDITEM_FIELD__LPUART_PRESC_PRESCALER
//    <name> PRESCALER </name>
//    <rw> 
//    <i> [Bits 3..0] RW (@ 0x4000802C) Clock prescaler </i>
//    <edit> 
//      <loc> ( (unsigned char)((LPUART_PRESC >> 0) & 0xF), ((LPUART_PRESC = (LPUART_PRESC & ~(0xFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ------------------------------  Register RTree: LPUART_PRESC  ----------------------------------
// SVD Line: 22388

//  <rtree> SFDITEM_REG__LPUART_PRESC
//    <name> PRESC </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x4000802C) Prescaler register </i>
//    <loc> ( (unsigned int)((LPUART_PRESC >> 0) & 0xFFFFFFFF), ((LPUART_PRESC = (LPUART_PRESC & ~(0xFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__LPUART_PRESC_PRESCALER </item>
//  </rtree>
//  


// --------------------------  Register Item Address: LPUART_HWCFGR2  -----------------------------
// SVD Line: 22405

unsigned int LPUART_HWCFGR2 __AT (0x400083EC);



// -----------------------------  Field Item: LPUART_HWCFGR2_CFG1  --------------------------------
// SVD Line: 22415

//  <item> SFDITEM_FIELD__LPUART_HWCFGR2_CFG1
//    <name> CFG1 </name>
//    <rw> 
//    <i> [Bits 3..0] RW (@ 0x400083EC) LUART hardware configuration  1 </i>
//    <edit> 
//      <loc> ( (unsigned char)((LPUART_HWCFGR2 >> 0) & 0xF), ((LPUART_HWCFGR2 = (LPUART_HWCFGR2 & ~(0xFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -----------------------------  Field Item: LPUART_HWCFGR2_CFG2  --------------------------------
// SVD Line: 22422

//  <item> SFDITEM_FIELD__LPUART_HWCFGR2_CFG2
//    <name> CFG2 </name>
//    <rw> 
//    <i> [Bits 7..4] RW (@ 0x400083EC) LUART hardware configuration  2 </i>
//    <edit> 
//      <loc> ( (unsigned char)((LPUART_HWCFGR2 >> 4) & 0xF), ((LPUART_HWCFGR2 = (LPUART_HWCFGR2 & ~(0xFUL << 4 )) | ((unsigned long)(Gui_u8:GuiVal & 0xF) << 4 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -----------------------------  Register RTree: LPUART_HWCFGR2  ---------------------------------
// SVD Line: 22405

//  <rtree> SFDITEM_REG__LPUART_HWCFGR2
//    <name> HWCFGR2 </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x400083EC) LPUART Hardware Configuration register  2 </i>
//    <loc> ( (unsigned int)((LPUART_HWCFGR2 >> 0) & 0xFFFFFFFF), ((LPUART_HWCFGR2 = (LPUART_HWCFGR2 & ~(0xFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__LPUART_HWCFGR2_CFG1 </item>
//    <item> SFDITEM_FIELD__LPUART_HWCFGR2_CFG2 </item>
//  </rtree>
//  


// --------------------------  Register Item Address: LPUART_HWCFGR1  -----------------------------
// SVD Line: 22431

unsigned int LPUART_HWCFGR1 __AT (0x400083F0);



// -----------------------------  Field Item: LPUART_HWCFGR1_CFG1  --------------------------------
// SVD Line: 22441

//  <item> SFDITEM_FIELD__LPUART_HWCFGR1_CFG1
//    <name> CFG1 </name>
//    <rw> 
//    <i> [Bits 3..0] RW (@ 0x400083F0) LUART hardware configuration  1 </i>
//    <edit> 
//      <loc> ( (unsigned char)((LPUART_HWCFGR1 >> 0) & 0xF), ((LPUART_HWCFGR1 = (LPUART_HWCFGR1 & ~(0xFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -----------------------------  Field Item: LPUART_HWCFGR1_CFG2  --------------------------------
// SVD Line: 22448

//  <item> SFDITEM_FIELD__LPUART_HWCFGR1_CFG2
//    <name> CFG2 </name>
//    <rw> 
//    <i> [Bits 7..4] RW (@ 0x400083F0) LUART hardware configuration  2 </i>
//    <edit> 
//      <loc> ( (unsigned char)((LPUART_HWCFGR1 >> 4) & 0xF), ((LPUART_HWCFGR1 = (LPUART_HWCFGR1 & ~(0xFUL << 4 )) | ((unsigned long)(Gui_u8:GuiVal & 0xF) << 4 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -----------------------------  Field Item: LPUART_HWCFGR1_CFG3  --------------------------------
// SVD Line: 22455

//  <item> SFDITEM_FIELD__LPUART_HWCFGR1_CFG3
//    <name> CFG3 </name>
//    <rw> 
//    <i> [Bits 11..8] RW (@ 0x400083F0) LUART hardware configuration  1 </i>
//    <edit> 
//      <loc> ( (unsigned char)((LPUART_HWCFGR1 >> 8) & 0xF), ((LPUART_HWCFGR1 = (LPUART_HWCFGR1 & ~(0xFUL << 8 )) | ((unsigned long)(Gui_u8:GuiVal & 0xF) << 8 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -----------------------------  Field Item: LPUART_HWCFGR1_CFG4  --------------------------------
// SVD Line: 22462

//  <item> SFDITEM_FIELD__LPUART_HWCFGR1_CFG4
//    <name> CFG4 </name>
//    <rw> 
//    <i> [Bits 15..12] RW (@ 0x400083F0) LUART hardware configuration  2 </i>
//    <edit> 
//      <loc> ( (unsigned char)((LPUART_HWCFGR1 >> 12) & 0xF), ((LPUART_HWCFGR1 = (LPUART_HWCFGR1 & ~(0xFUL << 12 )) | ((unsigned long)(Gui_u8:GuiVal & 0xF) << 12 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -----------------------------  Field Item: LPUART_HWCFGR1_CFG5  --------------------------------
// SVD Line: 22469

//  <item> SFDITEM_FIELD__LPUART_HWCFGR1_CFG5
//    <name> CFG5 </name>
//    <rw> 
//    <i> [Bits 19..16] RW (@ 0x400083F0) LUART hardware configuration  2 </i>
//    <edit> 
//      <loc> ( (unsigned char)((LPUART_HWCFGR1 >> 16) & 0xF), ((LPUART_HWCFGR1 = (LPUART_HWCFGR1 & ~(0xFUL << 16 )) | ((unsigned long)(Gui_u8:GuiVal & 0xF) << 16 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -----------------------------  Field Item: LPUART_HWCFGR1_CFG6  --------------------------------
// SVD Line: 22476

//  <item> SFDITEM_FIELD__LPUART_HWCFGR1_CFG6
//    <name> CFG6 </name>
//    <rw> 
//    <i> [Bits 23..20] RW (@ 0x400083F0) LUART hardware configuration  2 </i>
//    <edit> 
//      <loc> ( (unsigned char)((LPUART_HWCFGR1 >> 20) & 0xF), ((LPUART_HWCFGR1 = (LPUART_HWCFGR1 & ~(0xFUL << 20 )) | ((unsigned long)(Gui_u8:GuiVal & 0xF) << 20 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -----------------------------  Field Item: LPUART_HWCFGR1_CFG7  --------------------------------
// SVD Line: 22483

//  <item> SFDITEM_FIELD__LPUART_HWCFGR1_CFG7
//    <name> CFG7 </name>
//    <rw> 
//    <i> [Bits 27..24] RW (@ 0x400083F0) LUART hardware configuration  2 </i>
//    <edit> 
//      <loc> ( (unsigned char)((LPUART_HWCFGR1 >> 24) & 0xF), ((LPUART_HWCFGR1 = (LPUART_HWCFGR1 & ~(0xFUL << 24 )) | ((unsigned long)(Gui_u8:GuiVal & 0xF) << 24 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -----------------------------  Field Item: LPUART_HWCFGR1_CFG8  --------------------------------
// SVD Line: 22490

//  <item> SFDITEM_FIELD__LPUART_HWCFGR1_CFG8
//    <name> CFG8 </name>
//    <rw> 
//    <i> [Bits 31..28] RW (@ 0x400083F0) LUART hardware configuration  2 </i>
//    <edit> 
//      <loc> ( (unsigned char)((LPUART_HWCFGR1 >> 28) & 0xF), ((LPUART_HWCFGR1 = (LPUART_HWCFGR1 & ~(0xFUL << 28 )) | ((unsigned long)(Gui_u8:GuiVal & 0xF) << 28 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -----------------------------  Register RTree: LPUART_HWCFGR1  ---------------------------------
// SVD Line: 22431

//  <rtree> SFDITEM_REG__LPUART_HWCFGR1
//    <name> HWCFGR1 </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x400083F0) LPUART Hardware Configuration register  1 </i>
//    <loc> ( (unsigned int)((LPUART_HWCFGR1 >> 0) & 0xFFFFFFFF), ((LPUART_HWCFGR1 = (LPUART_HWCFGR1 & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__LPUART_HWCFGR1_CFG1 </item>
//    <item> SFDITEM_FIELD__LPUART_HWCFGR1_CFG2 </item>
//    <item> SFDITEM_FIELD__LPUART_HWCFGR1_CFG3 </item>
//    <item> SFDITEM_FIELD__LPUART_HWCFGR1_CFG4 </item>
//    <item> SFDITEM_FIELD__LPUART_HWCFGR1_CFG5 </item>
//    <item> SFDITEM_FIELD__LPUART_HWCFGR1_CFG6 </item>
//    <item> SFDITEM_FIELD__LPUART_HWCFGR1_CFG7 </item>
//    <item> SFDITEM_FIELD__LPUART_HWCFGR1_CFG8 </item>
//  </rtree>
//  


// ---------------------------  Register Item Address: LPUART_VERR  -------------------------------
// SVD Line: 22499

unsigned int LPUART_VERR __AT (0x400083F4);



// -----------------------------  Field Item: LPUART_VERR_MINREV  ---------------------------------
// SVD Line: 22508

//  <item> SFDITEM_FIELD__LPUART_VERR_MINREV
//    <name> MINREV </name>
//    <r> 
//    <i> [Bits 3..0] RO (@ 0x400083F4) Minor Revision number </i>
//    <edit> 
//      <loc> ( (unsigned char)((LPUART_VERR >> 0) & 0xF) ) </loc>
//    </edit>
//  </item>
//  


// -----------------------------  Field Item: LPUART_VERR_MAJREV  ---------------------------------
// SVD Line: 22514

//  <item> SFDITEM_FIELD__LPUART_VERR_MAJREV
//    <name> MAJREV </name>
//    <r> 
//    <i> [Bits 7..4] RO (@ 0x400083F4) Major Revision number </i>
//    <edit> 
//      <loc> ( (unsigned char)((LPUART_VERR >> 4) & 0xF) ) </loc>
//    </edit>
//  </item>
//  


// -------------------------------  Register RTree: LPUART_VERR  ----------------------------------
// SVD Line: 22499

//  <rtree> SFDITEM_REG__LPUART_VERR
//    <name> VERR </name>
//    <r> 
//    <i> [Bits 31..0] RO (@ 0x400083F4) EXTI IP Version register </i>
//    <loc> ( (unsigned int)((LPUART_VERR >> 0) & 0xFFFFFFFF) ) </loc>
//    <item> SFDITEM_FIELD__LPUART_VERR_MINREV </item>
//    <item> SFDITEM_FIELD__LPUART_VERR_MAJREV </item>
//  </rtree>
//  


// ---------------------------  Register Item Address: LPUART_IPIDR  ------------------------------
// SVD Line: 22522

unsigned int LPUART_IPIDR __AT (0x400083F8);



// ------------------------------  Field Item: LPUART_IPIDR_IPID  ---------------------------------
// SVD Line: 22531

//  <item> SFDITEM_FIELD__LPUART_IPIDR_IPID
//    <name> IPID </name>
//    <r> 
//    <i> [Bits 31..0] RO (@ 0x400083F8) IP Identification </i>
//    <edit> 
//      <loc> ( (unsigned int)((LPUART_IPIDR >> 0) & 0xFFFFFFFF) ) </loc>
//    </edit>
//  </item>
//  


// ------------------------------  Register RTree: LPUART_IPIDR  ----------------------------------
// SVD Line: 22522

//  <rtree> SFDITEM_REG__LPUART_IPIDR
//    <name> IPIDR </name>
//    <r> 
//    <i> [Bits 31..0] RO (@ 0x400083F8) EXTI Identification register </i>
//    <loc> ( (unsigned int)((LPUART_IPIDR >> 0) & 0xFFFFFFFF) ) </loc>
//    <item> SFDITEM_FIELD__LPUART_IPIDR_IPID </item>
//  </rtree>
//  


// ---------------------------  Register Item Address: LPUART_SIDR  -------------------------------
// SVD Line: 22539

unsigned int LPUART_SIDR __AT (0x400083FC);



// -------------------------------  Field Item: LPUART_SIDR_SID  ----------------------------------
// SVD Line: 22548

//  <item> SFDITEM_FIELD__LPUART_SIDR_SID
//    <name> SID </name>
//    <r> 
//    <i> [Bits 31..0] RO (@ 0x400083FC) Size Identification </i>
//    <edit> 
//      <loc> ( (unsigned int)((LPUART_SIDR >> 0) & 0xFFFFFFFF) ) </loc>
//    </edit>
//  </item>
//  


// -------------------------------  Register RTree: LPUART_SIDR  ----------------------------------
// SVD Line: 22539

//  <rtree> SFDITEM_REG__LPUART_SIDR
//    <name> SIDR </name>
//    <r> 
//    <i> [Bits 31..0] RO (@ 0x400083FC) EXTI Size ID register </i>
//    <loc> ( (unsigned int)((LPUART_SIDR >> 0) & 0xFFFFFFFF) ) </loc>
//    <item> SFDITEM_FIELD__LPUART_SIDR_SID </item>
//  </rtree>
//  


// ---------------------------------  Peripheral View: LPUART  ------------------------------------
// SVD Line: 21748

//  <view> LPUART
//    <name> LPUART </name>
//    <item> SFDITEM_REG__LPUART_CR1 </item>
//    <item> SFDITEM_REG__LPUART_CR2 </item>
//    <item> SFDITEM_REG__LPUART_CR3 </item>
//    <item> SFDITEM_REG__LPUART_BRR </item>
//    <item> SFDITEM_REG__LPUART_RQR </item>
//    <item> SFDITEM_REG__LPUART_ISR </item>
//    <item> SFDITEM_REG__LPUART_ICR </item>
//    <item> SFDITEM_REG__LPUART_RDR </item>
//    <item> SFDITEM_REG__LPUART_TDR </item>
//    <item> SFDITEM_REG__LPUART_PRESC </item>
//    <item> SFDITEM_REG__LPUART_HWCFGR2 </item>
//    <item> SFDITEM_REG__LPUART_HWCFGR1 </item>
//    <item> SFDITEM_REG__LPUART_VERR </item>
//    <item> SFDITEM_REG__LPUART_IPIDR </item>
//    <item> SFDITEM_REG__LPUART_SIDR </item>
//  </view>
//  


// -------------------------  Register Item Address: HDMI_CEC_CEC_CR  -----------------------------
// SVD Line: 22569

unsigned int HDMI_CEC_CEC_CR __AT (0x40007800);



// ----------------------------  Field Item: HDMI_CEC_CEC_CR_CECEN  -------------------------------
// SVD Line: 22578

//  <item> SFDITEM_FIELD__HDMI_CEC_CEC_CR_CECEN
//    <name> CECEN </name>
//    <rw> 
//    <i> [Bit 0] RW (@ 0x40007800) CEC Enable The CECEN bit is set and  cleared by software. CECEN=1 starts message reception  and enables the TXSOM control. CECEN=0 disables the  CEC peripheral, clears all bits of CEC_CR register  and aborts any on-going reception or  transmission. </i>
//    <check> 
//      <loc> ( (unsigned int) HDMI_CEC_CEC_CR ) </loc>
//      <o.0..0> CECEN
//    </check>
//  </item>
//  


// ----------------------------  Field Item: HDMI_CEC_CEC_CR_TXSOM  -------------------------------
// SVD Line: 22589

//  <item> SFDITEM_FIELD__HDMI_CEC_CEC_CR_TXSOM
//    <name> TXSOM </name>
//    <rw> 
//    <i> [Bit 1] RW (@ 0x40007800) Tx Start Of Message TXSOM is set by  software to command transmission of the first byte of  a CEC message. If the CEC message consists of only  one byte, TXEOM must be set before of TXSOM.  Start-Bit is effectively started on the CEC line  after SFT is counted. If TXSOM is set while a message  reception is ongoing, transmission will start after  the end of reception. TXSOM is cleared by hardware  after the last byte of the message is sent with a  positive acknowledge (TXEND=1), in case of  transmission underrun (TXUDR=1), negative acknowledge  (TXACKE=1), and transmission error (TXERR=1). It is  also cleared by CECEN=0. It is not cleared and  transmission is automatically retried in case of  arbitration lost (ARBLST=1). TXSOM can be also used  as a status bit informing application whether any  transmission request is pending or under execution.  The application can abort a transmission request at  any time by clearing the CECEN bit. Note: TXSOM must  be set when CECEN=1 TXSOM must be set when  transmission data is available into TXDR HEADERs  first four bits containing own peripheral address are  taken from TXDR[7:4], not from CEC_CFGR.OAR which is  used only for reception </i>
//    <check> 
//      <loc> ( (unsigned int) HDMI_CEC_CEC_CR ) </loc>
//      <o.1..1> TXSOM
//    </check>
//  </item>
//  


// ----------------------------  Field Item: HDMI_CEC_CEC_CR_TXEOM  -------------------------------
// SVD Line: 22618

//  <item> SFDITEM_FIELD__HDMI_CEC_CEC_CR_TXEOM
//    <name> TXEOM </name>
//    <rw> 
//    <i> [Bit 2] RW (@ 0x40007800) Tx End Of Message The TXEOM bit is set  by software to command transmission of the last byte  of a CEC message. TXEOM is cleared by hardware at the  same time and under the same conditions as for TXSOM.  Note: TXEOM must be set when CECEN=1 TXEOM must be  set before writing transmission data to TXDR If TXEOM  is set when TXSOM=0, transmitted message will consist  of 1 byte (HEADER) only (PING message) </i>
//    <check> 
//      <loc> ( (unsigned int) HDMI_CEC_CEC_CR ) </loc>
//      <o.2..2> TXEOM
//    </check>
//  </item>
//  


// -----------------------------  Register RTree: HDMI_CEC_CEC_CR  --------------------------------
// SVD Line: 22569

//  <rtree> SFDITEM_REG__HDMI_CEC_CEC_CR
//    <name> CEC_CR </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x40007800) CEC control register </i>
//    <loc> ( (unsigned int)((HDMI_CEC_CEC_CR >> 0) & 0xFFFFFFFF), ((HDMI_CEC_CEC_CR = (HDMI_CEC_CEC_CR & ~(0x7UL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0x7) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__HDMI_CEC_CEC_CR_CECEN </item>
//    <item> SFDITEM_FIELD__HDMI_CEC_CEC_CR_TXSOM </item>
//    <item> SFDITEM_FIELD__HDMI_CEC_CEC_CR_TXEOM </item>
//  </rtree>
//  


// ------------------------  Register Item Address: HDMI_CEC_CEC_CFGR  ----------------------------
// SVD Line: 22633

unsigned int HDMI_CEC_CEC_CFGR __AT (0x40007804);



// ----------------------------  Field Item: HDMI_CEC_CEC_CFGR_SFT  -------------------------------
// SVD Line: 22644

//  <item> SFDITEM_FIELD__HDMI_CEC_CEC_CFGR_SFT
//    <name> SFT </name>
//    <rw> 
//    <i> [Bits 2..0] RW (@ 0x40007804) Signal Free Time SFT bits are set by  software. In the SFT=0x0 configuration the number of  nominal data bit periods waited before transmission  is ruled by hardware according to the transmission  history. In all the other configurations the SFT  number is determined by software. * 0x0 ** 2.5  Data-Bit periods if CEC is the last bus initiator  with unsuccessful transmission (ARBLST=1, TXERR=1,  TXUDR=1 or TXACKE= 1) ** 4 Data-Bit periods if CEC is  the new bus initiator ** 6 Data-Bit periods if CEC is  the last bus initiator with successful transmission  (TXEOM=1) * 0x1: 0.5 nominal data bit periods * 0x2:  1.5 nominal data bit periods * 0x3: 2.5 nominal data  bit periods * 0x4: 3.5 nominal data bit periods *  0x5: 4.5 nominal data bit periods * 0x6: 5.5 nominal  data bit periods * 0x7: 6.5 nominal data bit  periods </i>
//    <edit> 
//      <loc> ( (unsigned char)((HDMI_CEC_CEC_CFGR >> 0) & 0x7), ((HDMI_CEC_CEC_CFGR = (HDMI_CEC_CEC_CFGR & ~(0x7UL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0x7) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ---------------------------  Field Item: HDMI_CEC_CEC_CFGR_RXTOL  ------------------------------
// SVD Line: 22666

//  <item> SFDITEM_FIELD__HDMI_CEC_CEC_CFGR_RXTOL
//    <name> RXTOL </name>
//    <rw> 
//    <i> [Bit 3] RW (@ 0x40007804) Rx-Tolerance The RXTOL bit is set and  cleared by software. ** Start-Bit, +/- 200 s rise,  +/- 200 s fall. ** Data-Bit: +/- 200 s rise. +/- 350  s fall. ** Start-Bit: +/- 400 s rise, +/- 400 s fall  ** Data-Bit: +/-300 s rise, +/- 500 s  fall </i>
//    <check> 
//      <loc> ( (unsigned int) HDMI_CEC_CEC_CFGR ) </loc>
//      <o.3..3> RXTOL
//    </check>
//  </item>
//  


// --------------------------  Field Item: HDMI_CEC_CEC_CFGR_BRESTP  ------------------------------
// SVD Line: 22677

//  <item> SFDITEM_FIELD__HDMI_CEC_CEC_CFGR_BRESTP
//    <name> BRESTP </name>
//    <rw> 
//    <i> [Bit 4] RW (@ 0x40007804) Rx-Stop on Bit Rising Error The BRESTP  bit is set and cleared by software. </i>
//    <check> 
//      <loc> ( (unsigned int) HDMI_CEC_CEC_CFGR ) </loc>
//      <o.4..4> BRESTP
//    </check>
//  </item>
//  


// --------------------------  Field Item: HDMI_CEC_CEC_CFGR_BREGEN  ------------------------------
// SVD Line: 22684

//  <item> SFDITEM_FIELD__HDMI_CEC_CEC_CFGR_BREGEN
//    <name> BREGEN </name>
//    <rw> 
//    <i> [Bit 5] RW (@ 0x40007804) Generate Error-Bit on Bit Rising Error  The BREGEN bit is set and cleared by software. Note:  If BRDNOGEN=0, an Error-bit is generated upon BRE  detection with BRESTP=1 in broadcast even if  BREGEN=0 </i>
//    <check> 
//      <loc> ( (unsigned int) HDMI_CEC_CEC_CFGR ) </loc>
//      <o.5..5> BREGEN
//    </check>
//  </item>
//  


// --------------------------  Field Item: HDMI_CEC_CEC_CFGR_LBPEGEN  -----------------------------
// SVD Line: 22694

//  <item> SFDITEM_FIELD__HDMI_CEC_CEC_CFGR_LBPEGEN
//    <name> LBPEGEN </name>
//    <rw> 
//    <i> [Bit 6] RW (@ 0x40007804) Generate Error-Bit on Long Bit Period  Error The LBPEGEN bit is set and cleared by software.  Note: If BRDNOGEN=0, an Error-bit is generated upon  LBPE detection in broadcast even if  LBPEGEN=0 </i>
//    <check> 
//      <loc> ( (unsigned int) HDMI_CEC_CEC_CFGR ) </loc>
//      <o.6..6> LBPEGEN
//    </check>
//  </item>
//  


// -------------------------  Field Item: HDMI_CEC_CEC_CFGR_BRDNOGEN  -----------------------------
// SVD Line: 22704

//  <item> SFDITEM_FIELD__HDMI_CEC_CEC_CFGR_BRDNOGEN
//    <name> BRDNOGEN </name>
//    <rw> 
//    <i> [Bit 7] RW (@ 0x40007804) Avoid Error-Bit Generation in Broadcast  The BRDNOGEN bit is set and cleared by  software. </i>
//    <check> 
//      <loc> ( (unsigned int) HDMI_CEC_CEC_CFGR ) </loc>
//      <o.7..7> BRDNOGEN
//    </check>
//  </item>
//  


// --------------------------  Field Item: HDMI_CEC_CEC_CFGR_SFTOPT  ------------------------------
// SVD Line: 22712

//  <item> SFDITEM_FIELD__HDMI_CEC_CEC_CFGR_SFTOPT
//    <name> SFTOPT </name>
//    <rw> 
//    <i> [Bit 8] RW (@ 0x40007804) SFT Option Bit The SFTOPT bit is set and  cleared by software. </i>
//    <check> 
//      <loc> ( (unsigned int) HDMI_CEC_CEC_CFGR ) </loc>
//      <o.8..8> SFTOPT
//    </check>
//  </item>
//  


// ----------------------------  Field Item: HDMI_CEC_CEC_CFGR_OAR  -------------------------------
// SVD Line: 22719

//  <item> SFDITEM_FIELD__HDMI_CEC_CEC_CFGR_OAR
//    <name> OAR </name>
//    <rw> 
//    <i> [Bits 30..16] RW (@ 0x40007804) Own addresses configuration The OAR bits  are set by software to select which destination  logical addresses has to be considered in receive  mode. Each bit, when set, enables the CEC logical  address identified by the given bit position. At the  end of HEADER reception, the received destination  address is compared with the enabled addresses. In  case of matching address, the incoming message is  acknowledged and received. In case of non-matching  address, the incoming message is received only in  listen mode (LSTN=1), but without acknowledge sent.  Broadcast messages are always received. Example: OAR  = 0b000 0000 0010 0001 means that CEC acknowledges  addresses 0x0 and 0x5. Consequently, each message  directed to one of these addresses is  received. </i>
//    <edit> 
//      <loc> ( (unsigned short)((HDMI_CEC_CEC_CFGR >> 16) & 0x7FFF), ((HDMI_CEC_CEC_CFGR = (HDMI_CEC_CEC_CFGR & ~(0x7FFFUL << 16 )) | ((unsigned long)(Gui_u16:GuiVal & 0x7FFF) << 16 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ---------------------------  Field Item: HDMI_CEC_CEC_CFGR_LSTN  -------------------------------
// SVD Line: 22740

//  <item> SFDITEM_FIELD__HDMI_CEC_CEC_CFGR_LSTN
//    <name> LSTN </name>
//    <rw> 
//    <i> [Bit 31] RW (@ 0x40007804) Listen mode LSTN bit is set and cleared  by software. </i>
//    <check> 
//      <loc> ( (unsigned int) HDMI_CEC_CEC_CFGR ) </loc>
//      <o.31..31> LSTN
//    </check>
//  </item>
//  


// ----------------------------  Register RTree: HDMI_CEC_CEC_CFGR  -------------------------------
// SVD Line: 22633

//  <rtree> SFDITEM_REG__HDMI_CEC_CEC_CFGR
//    <name> CEC_CFGR </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x40007804) This register is used to configure the  HDMI-CEC controller. It is mandatory to write CEC_CFGR  only when CECEN=0. </i>
//    <loc> ( (unsigned int)((HDMI_CEC_CEC_CFGR >> 0) & 0xFFFFFFFF), ((HDMI_CEC_CEC_CFGR = (HDMI_CEC_CEC_CFGR & ~(0xFFFF01FFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFF01FF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__HDMI_CEC_CEC_CFGR_SFT </item>
//    <item> SFDITEM_FIELD__HDMI_CEC_CEC_CFGR_RXTOL </item>
//    <item> SFDITEM_FIELD__HDMI_CEC_CEC_CFGR_BRESTP </item>
//    <item> SFDITEM_FIELD__HDMI_CEC_CEC_CFGR_BREGEN </item>
//    <item> SFDITEM_FIELD__HDMI_CEC_CEC_CFGR_LBPEGEN </item>
//    <item> SFDITEM_FIELD__HDMI_CEC_CEC_CFGR_BRDNOGEN </item>
//    <item> SFDITEM_FIELD__HDMI_CEC_CEC_CFGR_SFTOPT </item>
//    <item> SFDITEM_FIELD__HDMI_CEC_CEC_CFGR_OAR </item>
//    <item> SFDITEM_FIELD__HDMI_CEC_CEC_CFGR_LSTN </item>
//  </rtree>
//  


// ------------------------  Register Item Address: HDMI_CEC_CEC_TXDR  ----------------------------
// SVD Line: 22749

unsigned int HDMI_CEC_CEC_TXDR __AT (0x40007808);



// ----------------------------  Field Item: HDMI_CEC_CEC_TXDR_TXD  -------------------------------
// SVD Line: 22758

//  <item> SFDITEM_FIELD__HDMI_CEC_CEC_TXDR_TXD
//    <name> TXD </name>
//    <w> 
//    <i> [Bits 7..0] WO (@ 0x40007808) Tx Data register. TXD is a write-only  register containing the data byte to be transmitted.  Note: TXD must be written when  TXSTART=1 </i>
//    <edit> 
//      <loc> ( (unsigned char)((HDMI_CEC_CEC_TXDR >> 0) & 0x0), ((HDMI_CEC_CEC_TXDR = (HDMI_CEC_CEC_TXDR & ~(0xFFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ----------------------------  Register RTree: HDMI_CEC_CEC_TXDR  -------------------------------
// SVD Line: 22749

//  <rtree> SFDITEM_REG__HDMI_CEC_CEC_TXDR
//    <name> CEC_TXDR </name>
//    <w> 
//    <i> [Bits 31..0] WO (@ 0x40007808) CEC Tx data register </i>
//    <loc> ( (unsigned int)((HDMI_CEC_CEC_TXDR >> 0) & 0xFFFFFFFF), ((HDMI_CEC_CEC_TXDR = (HDMI_CEC_CEC_TXDR & ~(0xFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__HDMI_CEC_CEC_TXDR_TXD </item>
//  </rtree>
//  


// ------------------------  Register Item Address: HDMI_CEC_CEC_RXDR  ----------------------------
// SVD Line: 22769

unsigned int HDMI_CEC_CEC_RXDR __AT (0x4000780C);



// ----------------------------  Field Item: HDMI_CEC_CEC_RXDR_RXD  -------------------------------
// SVD Line: 22778

//  <item> SFDITEM_FIELD__HDMI_CEC_CEC_RXDR_RXD
//    <name> RXD </name>
//    <r> 
//    <i> [Bits 7..0] RO (@ 0x4000780C) Rx Data register. RXD is read-only and  contains the last data byte which has been received  from the CEC line. </i>
//    <edit> 
//      <loc> ( (unsigned char)((HDMI_CEC_CEC_RXDR >> 0) & 0xFF) ) </loc>
//    </edit>
//  </item>
//  


// ----------------------------  Register RTree: HDMI_CEC_CEC_RXDR  -------------------------------
// SVD Line: 22769

//  <rtree> SFDITEM_REG__HDMI_CEC_CEC_RXDR
//    <name> CEC_RXDR </name>
//    <r> 
//    <i> [Bits 31..0] RO (@ 0x4000780C) CEC Rx Data Register </i>
//    <loc> ( (unsigned int)((HDMI_CEC_CEC_RXDR >> 0) & 0xFFFFFFFF) ) </loc>
//    <item> SFDITEM_FIELD__HDMI_CEC_CEC_RXDR_RXD </item>
//  </rtree>
//  


// -------------------------  Register Item Address: HDMI_CEC_CEC_ISR  ----------------------------
// SVD Line: 22788

unsigned int HDMI_CEC_CEC_ISR __AT (0x40007810);



// ----------------------------  Field Item: HDMI_CEC_CEC_ISR_RXBR  -------------------------------
// SVD Line: 22798

//  <item> SFDITEM_FIELD__HDMI_CEC_CEC_ISR_RXBR
//    <name> RXBR </name>
//    <rw> 
//    <i> [Bit 0] RW (@ 0x40007810) Rx-Byte Received The RXBR bit is set by  hardware to inform application that a new byte has  been received from the CEC line and stored into the  RXD buffer. RXBR is cleared by software write at  1. </i>
//    <check> 
//      <loc> ( (unsigned int) HDMI_CEC_CEC_ISR ) </loc>
//      <o.0..0> RXBR
//    </check>
//  </item>
//  


// ---------------------------  Field Item: HDMI_CEC_CEC_ISR_RXEND  -------------------------------
// SVD Line: 22808

//  <item> SFDITEM_FIELD__HDMI_CEC_CEC_ISR_RXEND
//    <name> RXEND </name>
//    <rw> 
//    <i> [Bit 1] RW (@ 0x40007810) End Of Reception RXEND is set by  hardware to inform application that the last byte of  a CEC message is received from the CEC line and  stored into the RXD buffer. RXEND is set at the same  time of RXBR. RXEND is cleared by software write at  1. </i>
//    <check> 
//      <loc> ( (unsigned int) HDMI_CEC_CEC_ISR ) </loc>
//      <o.1..1> RXEND
//    </check>
//  </item>
//  


// ---------------------------  Field Item: HDMI_CEC_CEC_ISR_RXOVR  -------------------------------
// SVD Line: 22819

//  <item> SFDITEM_FIELD__HDMI_CEC_CEC_ISR_RXOVR
//    <name> RXOVR </name>
//    <rw> 
//    <i> [Bit 2] RW (@ 0x40007810) Rx-Overrun RXOVR is set by hardware if  RXBR is not yet cleared at the time a new byte is  received on the CEC line and stored into RXD. RXOVR  assertion stops message reception so that no  acknowledge is sent. In case of broadcast, a negative  acknowledge is sent. RXOVR is cleared by software  write at 1. </i>
//    <check> 
//      <loc> ( (unsigned int) HDMI_CEC_CEC_ISR ) </loc>
//      <o.2..2> RXOVR
//    </check>
//  </item>
//  


// ----------------------------  Field Item: HDMI_CEC_CEC_ISR_BRE  --------------------------------
// SVD Line: 22831

//  <item> SFDITEM_FIELD__HDMI_CEC_CEC_ISR_BRE
//    <name> BRE </name>
//    <rw> 
//    <i> [Bit 3] RW (@ 0x40007810) Rx-Bit Rising Error BRE is set by  hardware in case a Data-Bit waveform is detected with  Bit Rising Error. BRE is set either at the time the  misplaced rising edge occurs, or at the end of the  maximum BRE tolerance allowed by RXTOL, in case  rising edge is still longing. BRE stops message  reception if BRESTP=1. BRE generates an Error-Bit on  the CEC line if BREGEN=1. BRE is cleared by software  write at 1. </i>
//    <check> 
//      <loc> ( (unsigned int) HDMI_CEC_CEC_ISR ) </loc>
//      <o.3..3> BRE
//    </check>
//  </item>
//  


// ----------------------------  Field Item: HDMI_CEC_CEC_ISR_SBPE  -------------------------------
// SVD Line: 22845

//  <item> SFDITEM_FIELD__HDMI_CEC_CEC_ISR_SBPE
//    <name> SBPE </name>
//    <rw> 
//    <i> [Bit 4] RW (@ 0x40007810) Rx-Short Bit Period Error SBPE is set by  hardware in case a Data-Bit waveform is detected with  Short Bit Period Error. SBPE is set at the time the  anticipated falling edge occurs. SBPE generates an  Error-Bit on the CEC line. SBPE is cleared by  software write at 1. </i>
//    <check> 
//      <loc> ( (unsigned int) HDMI_CEC_CEC_ISR ) </loc>
//      <o.4..4> SBPE
//    </check>
//  </item>
//  


// ----------------------------  Field Item: HDMI_CEC_CEC_ISR_LBPE  -------------------------------
// SVD Line: 22856

//  <item> SFDITEM_FIELD__HDMI_CEC_CEC_ISR_LBPE
//    <name> LBPE </name>
//    <rw> 
//    <i> [Bit 5] RW (@ 0x40007810) Rx-Long Bit Period Error LBPE is set by  hardware in case a Data-Bit waveform is detected with  Long Bit Period Error. LBPE is set at the end of the  maximum bit-extension tolerance allowed by RXTOL, in  case falling edge is still longing. LBPE always stops  reception of the CEC message. LBPE generates an  Error-Bit on the CEC line if LBPEGEN=1. In case of  broadcast, Error-Bit is generated even in case of  LBPEGEN=0. LBPE is cleared by software write at  1. </i>
//    <check> 
//      <loc> ( (unsigned int) HDMI_CEC_CEC_ISR ) </loc>
//      <o.5..5> LBPE
//    </check>
//  </item>
//  


// ---------------------------  Field Item: HDMI_CEC_CEC_ISR_RXACKE  ------------------------------
// SVD Line: 22871

//  <item> SFDITEM_FIELD__HDMI_CEC_CEC_ISR_RXACKE
//    <name> RXACKE </name>
//    <rw> 
//    <i> [Bit 6] RW (@ 0x40007810) Rx-Missing Acknowledge In receive mode,  RXACKE is set by hardware to inform application that  no acknowledge was seen on the CEC line. RXACKE  applies only for broadcast messages and in listen  mode also for not directly addressed messages  (destination address not enabled in OAR). RXACKE  aborts message reception. RXACKE is cleared by  software write at 1. </i>
//    <check> 
//      <loc> ( (unsigned int) HDMI_CEC_CEC_ISR ) </loc>
//      <o.6..6> RXACKE
//    </check>
//  </item>
//  


// ---------------------------  Field Item: HDMI_CEC_CEC_ISR_ARBLST  ------------------------------
// SVD Line: 22884

//  <item> SFDITEM_FIELD__HDMI_CEC_CEC_ISR_ARBLST
//    <name> ARBLST </name>
//    <rw> 
//    <i> [Bit 7] RW (@ 0x40007810) Arbitration Lost ARBLST is set by  hardware to inform application that CEC device is  switching to reception due to arbitration lost event  following the TXSOM command. ARBLST can be due either  to a contending CEC device starting earlier or  starting at the same time but with higher HEADER  priority. After ARBLST assertion TXSOM bit keeps  pending for next transmission attempt. ARBLST is  cleared by software write at 1. </i>
//    <check> 
//      <loc> ( (unsigned int) HDMI_CEC_CEC_ISR ) </loc>
//      <o.7..7> ARBLST
//    </check>
//  </item>
//  


// ----------------------------  Field Item: HDMI_CEC_CEC_ISR_TXBR  -------------------------------
// SVD Line: 22898

//  <item> SFDITEM_FIELD__HDMI_CEC_CEC_ISR_TXBR
//    <name> TXBR </name>
//    <rw> 
//    <i> [Bit 8] RW (@ 0x40007810) Tx-Byte Request TXBR is set by hardware  to inform application that the next transmission data  has to be written to TXDR. TXBR is set when the 4th  bit of currently transmitted byte is sent.  Application must write the next byte to TXDR within 6  nominal data-bit periods before transmission underrun  error occurs (TXUDR). TXBR is cleared by software  write at 1. </i>
//    <check> 
//      <loc> ( (unsigned int) HDMI_CEC_CEC_ISR ) </loc>
//      <o.8..8> TXBR
//    </check>
//  </item>
//  


// ---------------------------  Field Item: HDMI_CEC_CEC_ISR_TXEND  -------------------------------
// SVD Line: 22911

//  <item> SFDITEM_FIELD__HDMI_CEC_CEC_ISR_TXEND
//    <name> TXEND </name>
//    <rw> 
//    <i> [Bit 9] RW (@ 0x40007810) End of Transmission TXEND is set by  hardware to inform application that the last byte of  the CEC message has been successfully transmitted.  TXEND clears the TXSOM and TXEOM control bits. TXEND  is cleared by software write at 1. </i>
//    <check> 
//      <loc> ( (unsigned int) HDMI_CEC_CEC_ISR ) </loc>
//      <o.9..9> TXEND
//    </check>
//  </item>
//  


// ---------------------------  Field Item: HDMI_CEC_CEC_ISR_TXUDR  -------------------------------
// SVD Line: 22921

//  <item> SFDITEM_FIELD__HDMI_CEC_CEC_ISR_TXUDR
//    <name> TXUDR </name>
//    <rw> 
//    <i> [Bit 10] RW (@ 0x40007810) Tx-Buffer Underrun In transmission mode,  TXUDR is set by hardware if application was not in  time to load TXDR before of next byte transmission.  TXUDR aborts message transmission and clears TXSOM  and TXEOM control bits. TXUDR is cleared by software  write at 1 </i>
//    <check> 
//      <loc> ( (unsigned int) HDMI_CEC_CEC_ISR ) </loc>
//      <o.10..10> TXUDR
//    </check>
//  </item>
//  


// ---------------------------  Field Item: HDMI_CEC_CEC_ISR_TXERR  -------------------------------
// SVD Line: 22932

//  <item> SFDITEM_FIELD__HDMI_CEC_CEC_ISR_TXERR
//    <name> TXERR </name>
//    <rw> 
//    <i> [Bit 11] RW (@ 0x40007810) Tx-Error In transmission mode, TXERR is  set by hardware if the CEC initiator detects low  impedance on the CEC line while it is released. TXERR  aborts message transmission and clears TXSOM and  TXEOM controls. TXERR is cleared by software write at  1. </i>
//    <check> 
//      <loc> ( (unsigned int) HDMI_CEC_CEC_ISR ) </loc>
//      <o.11..11> TXERR
//    </check>
//  </item>
//  


// ---------------------------  Field Item: HDMI_CEC_CEC_ISR_TXACKE  ------------------------------
// SVD Line: 22943

//  <item> SFDITEM_FIELD__HDMI_CEC_CEC_ISR_TXACKE
//    <name> TXACKE </name>
//    <rw> 
//    <i> [Bit 12] RW (@ 0x40007810) Tx-Missing Acknowledge Error In  transmission mode, TXACKE is set by hardware to  inform application that no acknowledge was received.  In case of broadcast transmission, TXACKE informs  application that a negative acknowledge was received.  TXACKE aborts message transmission and clears TXSOM  and TXEOM controls. TXACKE is cleared by software  write at 1. </i>
//    <check> 
//      <loc> ( (unsigned int) HDMI_CEC_CEC_ISR ) </loc>
//      <o.12..12> TXACKE
//    </check>
//  </item>
//  


// ----------------------------  Register RTree: HDMI_CEC_CEC_ISR  --------------------------------
// SVD Line: 22788

//  <rtree> SFDITEM_REG__HDMI_CEC_CEC_ISR
//    <name> CEC_ISR </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x40007810) CEC Interrupt and Status  Register </i>
//    <loc> ( (unsigned int)((HDMI_CEC_CEC_ISR >> 0) & 0xFFFFFFFF), ((HDMI_CEC_CEC_ISR = (HDMI_CEC_CEC_ISR & ~(0x1FFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0x1FFF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__HDMI_CEC_CEC_ISR_RXBR </item>
//    <item> SFDITEM_FIELD__HDMI_CEC_CEC_ISR_RXEND </item>
//    <item> SFDITEM_FIELD__HDMI_CEC_CEC_ISR_RXOVR </item>
//    <item> SFDITEM_FIELD__HDMI_CEC_CEC_ISR_BRE </item>
//    <item> SFDITEM_FIELD__HDMI_CEC_CEC_ISR_SBPE </item>
//    <item> SFDITEM_FIELD__HDMI_CEC_CEC_ISR_LBPE </item>
//    <item> SFDITEM_FIELD__HDMI_CEC_CEC_ISR_RXACKE </item>
//    <item> SFDITEM_FIELD__HDMI_CEC_CEC_ISR_ARBLST </item>
//    <item> SFDITEM_FIELD__HDMI_CEC_CEC_ISR_TXBR </item>
//    <item> SFDITEM_FIELD__HDMI_CEC_CEC_ISR_TXEND </item>
//    <item> SFDITEM_FIELD__HDMI_CEC_CEC_ISR_TXUDR </item>
//    <item> SFDITEM_FIELD__HDMI_CEC_CEC_ISR_TXERR </item>
//    <item> SFDITEM_FIELD__HDMI_CEC_CEC_ISR_TXACKE </item>
//  </rtree>
//  


// -------------------------  Register Item Address: HDMI_CEC_CEC_IER  ----------------------------
// SVD Line: 22958

unsigned int HDMI_CEC_CEC_IER __AT (0x40007814);



// ---------------------------  Field Item: HDMI_CEC_CEC_IER_RXBRIE  ------------------------------
// SVD Line: 22967

//  <item> SFDITEM_FIELD__HDMI_CEC_CEC_IER_RXBRIE
//    <name> RXBRIE </name>
//    <rw> 
//    <i> [Bit 0] RW (@ 0x40007814) Rx-Byte Received Interrupt Enable The  RXBRIE bit is set and cleared by  software. </i>
//    <check> 
//      <loc> ( (unsigned int) HDMI_CEC_CEC_IER ) </loc>
//      <o.0..0> RXBRIE
//    </check>
//  </item>
//  


// --------------------------  Field Item: HDMI_CEC_CEC_IER_RXENDIE  ------------------------------
// SVD Line: 22975

//  <item> SFDITEM_FIELD__HDMI_CEC_CEC_IER_RXENDIE
//    <name> RXENDIE </name>
//    <rw> 
//    <i> [Bit 1] RW (@ 0x40007814) End Of Reception Interrupt Enable The  RXENDIE bit is set and cleared by  software. </i>
//    <check> 
//      <loc> ( (unsigned int) HDMI_CEC_CEC_IER ) </loc>
//      <o.1..1> RXENDIE
//    </check>
//  </item>
//  


// --------------------------  Field Item: HDMI_CEC_CEC_IER_RXOVRIE  ------------------------------
// SVD Line: 22983

//  <item> SFDITEM_FIELD__HDMI_CEC_CEC_IER_RXOVRIE
//    <name> RXOVRIE </name>
//    <rw> 
//    <i> [Bit 2] RW (@ 0x40007814) Rx-Buffer Overrun Interrupt Enable The  RXOVRIE bit is set and cleared by  software. </i>
//    <check> 
//      <loc> ( (unsigned int) HDMI_CEC_CEC_IER ) </loc>
//      <o.2..2> RXOVRIE
//    </check>
//  </item>
//  


// ---------------------------  Field Item: HDMI_CEC_CEC_IER_BREIE  -------------------------------
// SVD Line: 22991

//  <item> SFDITEM_FIELD__HDMI_CEC_CEC_IER_BREIE
//    <name> BREIE </name>
//    <rw> 
//    <i> [Bit 3] RW (@ 0x40007814) Bit Rising Error Interrupt Enable The  BREIE bit is set and cleared by  software. </i>
//    <check> 
//      <loc> ( (unsigned int) HDMI_CEC_CEC_IER ) </loc>
//      <o.3..3> BREIE
//    </check>
//  </item>
//  


// ---------------------------  Field Item: HDMI_CEC_CEC_IER_SBPEIE  ------------------------------
// SVD Line: 22999

//  <item> SFDITEM_FIELD__HDMI_CEC_CEC_IER_SBPEIE
//    <name> SBPEIE </name>
//    <rw> 
//    <i> [Bit 4] RW (@ 0x40007814) Short Bit Period Error Interrupt Enable  The SBPEIE bit is set and cleared by  software. </i>
//    <check> 
//      <loc> ( (unsigned int) HDMI_CEC_CEC_IER ) </loc>
//      <o.4..4> SBPEIE
//    </check>
//  </item>
//  


// ---------------------------  Field Item: HDMI_CEC_CEC_IER_LBPEIE  ------------------------------
// SVD Line: 23007

//  <item> SFDITEM_FIELD__HDMI_CEC_CEC_IER_LBPEIE
//    <name> LBPEIE </name>
//    <rw> 
//    <i> [Bit 5] RW (@ 0x40007814) Long Bit Period Error Interrupt Enable  The LBPEIE bit is set and cleared by  software. </i>
//    <check> 
//      <loc> ( (unsigned int) HDMI_CEC_CEC_IER ) </loc>
//      <o.5..5> LBPEIE
//    </check>
//  </item>
//  


// --------------------------  Field Item: HDMI_CEC_CEC_IER_RXACKIE  ------------------------------
// SVD Line: 23015

//  <item> SFDITEM_FIELD__HDMI_CEC_CEC_IER_RXACKIE
//    <name> RXACKIE </name>
//    <rw> 
//    <i> [Bit 6] RW (@ 0x40007814) Rx-Missing Acknowledge Error Interrupt  Enable The RXACKIE bit is set and cleared by  software. </i>
//    <check> 
//      <loc> ( (unsigned int) HDMI_CEC_CEC_IER ) </loc>
//      <o.6..6> RXACKIE
//    </check>
//  </item>
//  


// --------------------------  Field Item: HDMI_CEC_CEC_IER_ARBLSTIE  -----------------------------
// SVD Line: 23023

//  <item> SFDITEM_FIELD__HDMI_CEC_CEC_IER_ARBLSTIE
//    <name> ARBLSTIE </name>
//    <rw> 
//    <i> [Bit 7] RW (@ 0x40007814) Arbitration Lost Interrupt Enable The  ARBLSTIE bit is set and cleared by  software. </i>
//    <check> 
//      <loc> ( (unsigned int) HDMI_CEC_CEC_IER ) </loc>
//      <o.7..7> ARBLSTIE
//    </check>
//  </item>
//  


// ---------------------------  Field Item: HDMI_CEC_CEC_IER_TXBRIE  ------------------------------
// SVD Line: 23031

//  <item> SFDITEM_FIELD__HDMI_CEC_CEC_IER_TXBRIE
//    <name> TXBRIE </name>
//    <rw> 
//    <i> [Bit 8] RW (@ 0x40007814) Tx-Byte Request Interrupt Enable The  TXBRIE bit is set and cleared by  software. </i>
//    <check> 
//      <loc> ( (unsigned int) HDMI_CEC_CEC_IER ) </loc>
//      <o.8..8> TXBRIE
//    </check>
//  </item>
//  


// --------------------------  Field Item: HDMI_CEC_CEC_IER_TXENDIE  ------------------------------
// SVD Line: 23039

//  <item> SFDITEM_FIELD__HDMI_CEC_CEC_IER_TXENDIE
//    <name> TXENDIE </name>
//    <rw> 
//    <i> [Bit 9] RW (@ 0x40007814) Tx-End Of Message Interrupt Enable The  TXENDIE bit is set and cleared by  software. </i>
//    <check> 
//      <loc> ( (unsigned int) HDMI_CEC_CEC_IER ) </loc>
//      <o.9..9> TXENDIE
//    </check>
//  </item>
//  


// --------------------------  Field Item: HDMI_CEC_CEC_IER_TXUDRIE  ------------------------------
// SVD Line: 23047

//  <item> SFDITEM_FIELD__HDMI_CEC_CEC_IER_TXUDRIE
//    <name> TXUDRIE </name>
//    <rw> 
//    <i> [Bit 10] RW (@ 0x40007814) Tx-Underrun Interrupt Enable The TXUDRIE  bit is set and cleared by software. </i>
//    <check> 
//      <loc> ( (unsigned int) HDMI_CEC_CEC_IER ) </loc>
//      <o.10..10> TXUDRIE
//    </check>
//  </item>
//  


// --------------------------  Field Item: HDMI_CEC_CEC_IER_TXERRIE  ------------------------------
// SVD Line: 23054

//  <item> SFDITEM_FIELD__HDMI_CEC_CEC_IER_TXERRIE
//    <name> TXERRIE </name>
//    <rw> 
//    <i> [Bit 11] RW (@ 0x40007814) Tx-Error Interrupt Enable The TXERRIE  bit is set and cleared by software. </i>
//    <check> 
//      <loc> ( (unsigned int) HDMI_CEC_CEC_IER ) </loc>
//      <o.11..11> TXERRIE
//    </check>
//  </item>
//  


// --------------------------  Field Item: HDMI_CEC_CEC_IER_TXACKIE  ------------------------------
// SVD Line: 23061

//  <item> SFDITEM_FIELD__HDMI_CEC_CEC_IER_TXACKIE
//    <name> TXACKIE </name>
//    <rw> 
//    <i> [Bit 12] RW (@ 0x40007814) Tx-Missing Acknowledge Error Interrupt  Enable The TXACKEIE bit is set and cleared by  software. </i>
//    <check> 
//      <loc> ( (unsigned int) HDMI_CEC_CEC_IER ) </loc>
//      <o.12..12> TXACKIE
//    </check>
//  </item>
//  


// ----------------------------  Register RTree: HDMI_CEC_CEC_IER  --------------------------------
// SVD Line: 22958

//  <rtree> SFDITEM_REG__HDMI_CEC_CEC_IER
//    <name> CEC_IER </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x40007814) CEC interrupt enable register </i>
//    <loc> ( (unsigned int)((HDMI_CEC_CEC_IER >> 0) & 0xFFFFFFFF), ((HDMI_CEC_CEC_IER = (HDMI_CEC_CEC_IER & ~(0x1FFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0x1FFF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__HDMI_CEC_CEC_IER_RXBRIE </item>
//    <item> SFDITEM_FIELD__HDMI_CEC_CEC_IER_RXENDIE </item>
//    <item> SFDITEM_FIELD__HDMI_CEC_CEC_IER_RXOVRIE </item>
//    <item> SFDITEM_FIELD__HDMI_CEC_CEC_IER_BREIE </item>
//    <item> SFDITEM_FIELD__HDMI_CEC_CEC_IER_SBPEIE </item>
//    <item> SFDITEM_FIELD__HDMI_CEC_CEC_IER_LBPEIE </item>
//    <item> SFDITEM_FIELD__HDMI_CEC_CEC_IER_RXACKIE </item>
//    <item> SFDITEM_FIELD__HDMI_CEC_CEC_IER_ARBLSTIE </item>
//    <item> SFDITEM_FIELD__HDMI_CEC_CEC_IER_TXBRIE </item>
//    <item> SFDITEM_FIELD__HDMI_CEC_CEC_IER_TXENDIE </item>
//    <item> SFDITEM_FIELD__HDMI_CEC_CEC_IER_TXUDRIE </item>
//    <item> SFDITEM_FIELD__HDMI_CEC_CEC_IER_TXERRIE </item>
//    <item> SFDITEM_FIELD__HDMI_CEC_CEC_IER_TXACKIE </item>
//  </rtree>
//  


// --------------------------------  Peripheral View: HDMI_CEC  -----------------------------------
// SVD Line: 22558

//  <view> HDMI_CEC
//    <name> HDMI_CEC </name>
//    <item> SFDITEM_REG__HDMI_CEC_CEC_CR </item>
//    <item> SFDITEM_REG__HDMI_CEC_CEC_CFGR </item>
//    <item> SFDITEM_REG__HDMI_CEC_CEC_TXDR </item>
//    <item> SFDITEM_REG__HDMI_CEC_CEC_RXDR </item>
//    <item> SFDITEM_REG__HDMI_CEC_CEC_ISR </item>
//    <item> SFDITEM_REG__HDMI_CEC_CEC_IER </item>
//  </view>
//  


// ----------------------------  Register Item Address: DAC_DAC_CR  -------------------------------
// SVD Line: 23084

unsigned int DAC_DAC_CR __AT (0x40007400);



// -------------------------------  Field Item: DAC_DAC_CR_EN1  -----------------------------------
// SVD Line: 23093

//  <item> SFDITEM_FIELD__DAC_DAC_CR_EN1
//    <name> EN1 </name>
//    <rw> 
//    <i> [Bit 0] RW (@ 0x40007400) DAC channel1 enable This bit is set and  cleared by software to enable/disable DAC  channel1. </i>
//    <check> 
//      <loc> ( (unsigned int) DAC_DAC_CR ) </loc>
//      <o.0..0> EN1
//    </check>
//  </item>
//  


// -------------------------------  Field Item: DAC_DAC_CR_TEN1  ----------------------------------
// SVD Line: 23101

//  <item> SFDITEM_FIELD__DAC_DAC_CR_TEN1
//    <name> TEN1 </name>
//    <rw> 
//    <i> [Bit 1] RW (@ 0x40007400) DAC channel1 trigger  enable </i>
//    <check> 
//      <loc> ( (unsigned int) DAC_DAC_CR ) </loc>
//      <o.1..1> TEN1
//    </check>
//  </item>
//  


// ------------------------------  Field Item: DAC_DAC_CR_TSEL1  ----------------------------------
// SVD Line: 23108

//  <item> SFDITEM_FIELD__DAC_DAC_CR_TSEL1
//    <name> TSEL1 </name>
//    <rw> 
//    <i> [Bits 5..2] RW (@ 0x40007400) DAC channel1 trigger selection These  bits select the external event used to trigger DAC  channel1. Note: Only used if bit TEN1 = 1 (DAC  channel1 trigger enabled). </i>
//    <edit> 
//      <loc> ( (unsigned char)((DAC_DAC_CR >> 2) & 0xF), ((DAC_DAC_CR = (DAC_DAC_CR & ~(0xFUL << 2 )) | ((unsigned long)(Gui_u8:GuiVal & 0xF) << 2 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ------------------------------  Field Item: DAC_DAC_CR_WAVE1  ----------------------------------
// SVD Line: 23117

//  <item> SFDITEM_FIELD__DAC_DAC_CR_WAVE1
//    <name> WAVE1 </name>
//    <rw> 
//    <i> [Bits 7..6] RW (@ 0x40007400) DAC channel1 noise/triangle wave  generation enable These bits are set and cleared by  software. Note: Only used if bit TEN1 = 1 (DAC  channel1 trigger enabled). </i>
//    <edit> 
//      <loc> ( (unsigned char)((DAC_DAC_CR >> 6) & 0x3), ((DAC_DAC_CR = (DAC_DAC_CR & ~(0x3UL << 6 )) | ((unsigned long)(Gui_u8:GuiVal & 0x3) << 6 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ------------------------------  Field Item: DAC_DAC_CR_MAMP1  ----------------------------------
// SVD Line: 23126

//  <item> SFDITEM_FIELD__DAC_DAC_CR_MAMP1
//    <name> MAMP1 </name>
//    <rw> 
//    <i> [Bits 11..8] RW (@ 0x40007400) DAC channel1 mask/amplitude selector  These bits are written by software to select mask in  wave generation mode or amplitude in triangle  generation mode. = 1011: Unmask bits[11:0] of LFSR/  triangle amplitude equal to 4095 </i>
//    <edit> 
//      <loc> ( (unsigned char)((DAC_DAC_CR >> 8) & 0xF), ((DAC_DAC_CR = (DAC_DAC_CR & ~(0xFUL << 8 )) | ((unsigned long)(Gui_u8:GuiVal & 0xF) << 8 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ------------------------------  Field Item: DAC_DAC_CR_DMAEN1  ---------------------------------
// SVD Line: 23136

//  <item> SFDITEM_FIELD__DAC_DAC_CR_DMAEN1
//    <name> DMAEN1 </name>
//    <rw> 
//    <i> [Bit 12] RW (@ 0x40007400) DAC channel1 DMA enable This bit is set  and cleared by software. </i>
//    <check> 
//      <loc> ( (unsigned int) DAC_DAC_CR ) </loc>
//      <o.12..12> DMAEN1
//    </check>
//  </item>
//  


// ----------------------------  Field Item: DAC_DAC_CR_DMAUDRIE1  --------------------------------
// SVD Line: 23143

//  <item> SFDITEM_FIELD__DAC_DAC_CR_DMAUDRIE1
//    <name> DMAUDRIE1 </name>
//    <rw> 
//    <i> [Bit 13] RW (@ 0x40007400) DAC channel1 DMA Underrun Interrupt  enable This bit is set and cleared by  software. </i>
//    <check> 
//      <loc> ( (unsigned int) DAC_DAC_CR ) </loc>
//      <o.13..13> DMAUDRIE1
//    </check>
//  </item>
//  


// -------------------------------  Field Item: DAC_DAC_CR_CEN1  ----------------------------------
// SVD Line: 23151

//  <item> SFDITEM_FIELD__DAC_DAC_CR_CEN1
//    <name> CEN1 </name>
//    <rw> 
//    <i> [Bit 14] RW (@ 0x40007400) DAC Channel 1 calibration enable This  bit is set and cleared by software to enable/disable  DAC channel 1 calibration, it can be written only if  bit EN1=0 into DAC_CR (the calibration mode can be  entered/exit only when the DAC channel is disabled)  Otherwise, the write operation is  ignored. </i>
//    <check> 
//      <loc> ( (unsigned int) DAC_DAC_CR ) </loc>
//      <o.14..14> CEN1
//    </check>
//  </item>
//  


// -------------------------------  Field Item: DAC_DAC_CR_EN2  -----------------------------------
// SVD Line: 23163

//  <item> SFDITEM_FIELD__DAC_DAC_CR_EN2
//    <name> EN2 </name>
//    <rw> 
//    <i> [Bit 16] RW (@ 0x40007400) DAC channel2 enable This bit is set and  cleared by software to enable/disable DAC  channel2. </i>
//    <check> 
//      <loc> ( (unsigned int) DAC_DAC_CR ) </loc>
//      <o.16..16> EN2
//    </check>
//  </item>
//  


// -------------------------------  Field Item: DAC_DAC_CR_TEN2  ----------------------------------
// SVD Line: 23171

//  <item> SFDITEM_FIELD__DAC_DAC_CR_TEN2
//    <name> TEN2 </name>
//    <rw> 
//    <i> [Bit 17] RW (@ 0x40007400) DAC channel2 trigger  enable </i>
//    <check> 
//      <loc> ( (unsigned int) DAC_DAC_CR ) </loc>
//      <o.17..17> TEN2
//    </check>
//  </item>
//  


// ------------------------------  Field Item: DAC_DAC_CR_TSEL2  ----------------------------------
// SVD Line: 23178

//  <item> SFDITEM_FIELD__DAC_DAC_CR_TSEL2
//    <name> TSEL2 </name>
//    <rw> 
//    <i> [Bits 21..18] RW (@ 0x40007400) DAC channel2 trigger selection These  bits select the external event used to trigger DAC  channel2 Note: Only used if bit TEN2 = 1 (DAC  channel2 trigger enabled). </i>
//    <edit> 
//      <loc> ( (unsigned char)((DAC_DAC_CR >> 18) & 0xF), ((DAC_DAC_CR = (DAC_DAC_CR & ~(0xFUL << 18 )) | ((unsigned long)(Gui_u8:GuiVal & 0xF) << 18 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ------------------------------  Field Item: DAC_DAC_CR_WAVE2  ----------------------------------
// SVD Line: 23187

//  <item> SFDITEM_FIELD__DAC_DAC_CR_WAVE2
//    <name> WAVE2 </name>
//    <rw> 
//    <i> [Bits 23..22] RW (@ 0x40007400) DAC channel2 noise/triangle wave  generation enable These bits are set/reset by  software. 1x: Triangle wave generation enabled Note:  Only used if bit TEN2 = 1 (DAC channel2 trigger  enabled) </i>
//    <edit> 
//      <loc> ( (unsigned char)((DAC_DAC_CR >> 22) & 0x3), ((DAC_DAC_CR = (DAC_DAC_CR & ~(0x3UL << 22 )) | ((unsigned long)(Gui_u8:GuiVal & 0x3) << 22 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ------------------------------  Field Item: DAC_DAC_CR_MAMP2  ----------------------------------
// SVD Line: 23197

//  <item> SFDITEM_FIELD__DAC_DAC_CR_MAMP2
//    <name> MAMP2 </name>
//    <rw> 
//    <i> [Bits 27..24] RW (@ 0x40007400) DAC channel2 mask/amplitude selector  These bits are written by software to select mask in  wave generation mode or amplitude in triangle  generation mode. = 1011: Unmask bits[11:0] of LFSR/  triangle amplitude equal to 4095 </i>
//    <edit> 
//      <loc> ( (unsigned char)((DAC_DAC_CR >> 24) & 0xF), ((DAC_DAC_CR = (DAC_DAC_CR & ~(0xFUL << 24 )) | ((unsigned long)(Gui_u8:GuiVal & 0xF) << 24 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ------------------------------  Field Item: DAC_DAC_CR_DMAEN2  ---------------------------------
// SVD Line: 23207

//  <item> SFDITEM_FIELD__DAC_DAC_CR_DMAEN2
//    <name> DMAEN2 </name>
//    <rw> 
//    <i> [Bit 28] RW (@ 0x40007400) DAC channel2 DMA enable This bit is set  and cleared by software. </i>
//    <check> 
//      <loc> ( (unsigned int) DAC_DAC_CR ) </loc>
//      <o.28..28> DMAEN2
//    </check>
//  </item>
//  


// ----------------------------  Field Item: DAC_DAC_CR_DMAUDRIE2  --------------------------------
// SVD Line: 23214

//  <item> SFDITEM_FIELD__DAC_DAC_CR_DMAUDRIE2
//    <name> DMAUDRIE2 </name>
//    <rw> 
//    <i> [Bit 29] RW (@ 0x40007400) DAC channel2 DMA underrun interrupt  enable This bit is set and cleared by  software. </i>
//    <check> 
//      <loc> ( (unsigned int) DAC_DAC_CR ) </loc>
//      <o.29..29> DMAUDRIE2
//    </check>
//  </item>
//  


// -------------------------------  Field Item: DAC_DAC_CR_CEN2  ----------------------------------
// SVD Line: 23222

//  <item> SFDITEM_FIELD__DAC_DAC_CR_CEN2
//    <name> CEN2 </name>
//    <rw> 
//    <i> [Bit 30] RW (@ 0x40007400) DAC Channel 2 calibration enable This  bit is set and cleared by software to enable/disable  DAC channel 2 calibration, it can be written only if  bit EN2=0 into DAC_CR (the calibration mode can be  entered/exit only when the DAC channel is disabled)  Otherwise, the write operation is  ignored. </i>
//    <check> 
//      <loc> ( (unsigned int) DAC_DAC_CR ) </loc>
//      <o.30..30> CEN2
//    </check>
//  </item>
//  


// -------------------------------  Register RTree: DAC_DAC_CR  -----------------------------------
// SVD Line: 23084

//  <rtree> SFDITEM_REG__DAC_DAC_CR
//    <name> DAC_CR </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x40007400) DAC control register </i>
//    <loc> ( (unsigned int)((DAC_DAC_CR >> 0) & 0xFFFFFFFF), ((DAC_DAC_CR = (DAC_DAC_CR & ~(0x7FFF7FFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0x7FFF7FFF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__DAC_DAC_CR_EN1 </item>
//    <item> SFDITEM_FIELD__DAC_DAC_CR_TEN1 </item>
//    <item> SFDITEM_FIELD__DAC_DAC_CR_TSEL1 </item>
//    <item> SFDITEM_FIELD__DAC_DAC_CR_WAVE1 </item>
//    <item> SFDITEM_FIELD__DAC_DAC_CR_MAMP1 </item>
//    <item> SFDITEM_FIELD__DAC_DAC_CR_DMAEN1 </item>
//    <item> SFDITEM_FIELD__DAC_DAC_CR_DMAUDRIE1 </item>
//    <item> SFDITEM_FIELD__DAC_DAC_CR_CEN1 </item>
//    <item> SFDITEM_FIELD__DAC_DAC_CR_EN2 </item>
//    <item> SFDITEM_FIELD__DAC_DAC_CR_TEN2 </item>
//    <item> SFDITEM_FIELD__DAC_DAC_CR_TSEL2 </item>
//    <item> SFDITEM_FIELD__DAC_DAC_CR_WAVE2 </item>
//    <item> SFDITEM_FIELD__DAC_DAC_CR_MAMP2 </item>
//    <item> SFDITEM_FIELD__DAC_DAC_CR_DMAEN2 </item>
//    <item> SFDITEM_FIELD__DAC_DAC_CR_DMAUDRIE2 </item>
//    <item> SFDITEM_FIELD__DAC_DAC_CR_CEN2 </item>
//  </rtree>
//  


// --------------------------  Register Item Address: DAC_DAC_SWTRGR  -----------------------------
// SVD Line: 23236

unsigned int DAC_DAC_SWTRGR __AT (0x40007404);



// ---------------------------  Field Item: DAC_DAC_SWTRGR_SWTRIG1  -------------------------------
// SVD Line: 23245

//  <item> SFDITEM_FIELD__DAC_DAC_SWTRGR_SWTRIG1
//    <name> SWTRIG1 </name>
//    <w> 
//    <i> [Bit 0] WO (@ 0x40007404) DAC channel1 software trigger This bit  is set by software to trigger the DAC in software  trigger mode. Note: This bit is cleared by hardware  (one APB1 clock cycle later) once the DAC_DHR1  register value has been loaded into the DAC_DOR1  register. </i>
//    <check> 
//      <loc> ( (unsigned int) DAC_DAC_SWTRGR ) </loc>
//      <o.0..0> SWTRIG1
//    </check>
//  </item>
//  


// ---------------------------  Field Item: DAC_DAC_SWTRGR_SWTRIG2  -------------------------------
// SVD Line: 23256

//  <item> SFDITEM_FIELD__DAC_DAC_SWTRGR_SWTRIG2
//    <name> SWTRIG2 </name>
//    <w> 
//    <i> [Bit 1] WO (@ 0x40007404) DAC channel2 software trigger This bit  is set by software to trigger the DAC in software  trigger mode. Note: This bit is cleared by hardware  (one APB1 clock cycle later) once the DAC_DHR2  register value has been loaded into the DAC_DOR2  register. </i>
//    <check> 
//      <loc> ( (unsigned int) DAC_DAC_SWTRGR ) </loc>
//      <o.1..1> SWTRIG2
//    </check>
//  </item>
//  


// -----------------------------  Register RTree: DAC_DAC_SWTRGR  ---------------------------------
// SVD Line: 23236

//  <rtree> SFDITEM_REG__DAC_DAC_SWTRGR
//    <name> DAC_SWTRGR </name>
//    <w> 
//    <i> [Bits 31..0] WO (@ 0x40007404) DAC software trigger register </i>
//    <loc> ( (unsigned int)((DAC_DAC_SWTRGR >> 0) & 0xFFFFFFFF), ((DAC_DAC_SWTRGR = (DAC_DAC_SWTRGR & ~(0x3UL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0x3) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__DAC_DAC_SWTRGR_SWTRIG1 </item>
//    <item> SFDITEM_FIELD__DAC_DAC_SWTRGR_SWTRIG2 </item>
//  </rtree>
//  


// -------------------------  Register Item Address: DAC_DAC_DHR12R1  -----------------------------
// SVD Line: 23269

unsigned int DAC_DAC_DHR12R1 __AT (0x40007408);



// --------------------------  Field Item: DAC_DAC_DHR12R1_DACC1DHR  ------------------------------
// SVD Line: 23279

//  <item> SFDITEM_FIELD__DAC_DAC_DHR12R1_DACC1DHR
//    <name> DACC1DHR </name>
//    <rw> 
//    <i> [Bits 11..0] RW (@ 0x40007408) DAC channel1 12-bit right-aligned data  These bits are written by software which specifies  12-bit data for DAC channel1. </i>
//    <edit> 
//      <loc> ( (unsigned short)((DAC_DAC_DHR12R1 >> 0) & 0xFFF), ((DAC_DAC_DHR12R1 = (DAC_DAC_DHR12R1 & ~(0xFFFUL << 0 )) | ((unsigned long)(Gui_u16:GuiVal & 0xFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -----------------------------  Register RTree: DAC_DAC_DHR12R1  --------------------------------
// SVD Line: 23269

//  <rtree> SFDITEM_REG__DAC_DAC_DHR12R1
//    <name> DAC_DHR12R1 </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x40007408) DAC channel1 12-bit right-aligned data  holding register </i>
//    <loc> ( (unsigned int)((DAC_DAC_DHR12R1 >> 0) & 0xFFFFFFFF), ((DAC_DAC_DHR12R1 = (DAC_DAC_DHR12R1 & ~(0xFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__DAC_DAC_DHR12R1_DACC1DHR </item>
//  </rtree>
//  


// -------------------------  Register Item Address: DAC_DAC_DHR12L1  -----------------------------
// SVD Line: 23289

unsigned int DAC_DAC_DHR12L1 __AT (0x4000740C);



// --------------------------  Field Item: DAC_DAC_DHR12L1_DACC1DHR  ------------------------------
// SVD Line: 23299

//  <item> SFDITEM_FIELD__DAC_DAC_DHR12L1_DACC1DHR
//    <name> DACC1DHR </name>
//    <rw> 
//    <i> [Bits 15..4] RW (@ 0x4000740C) DAC channel1 12-bit left-aligned data  These bits are written by software which specifies  12-bit data for DAC channel1. </i>
//    <edit> 
//      <loc> ( (unsigned short)((DAC_DAC_DHR12L1 >> 4) & 0xFFF), ((DAC_DAC_DHR12L1 = (DAC_DAC_DHR12L1 & ~(0xFFFUL << 4 )) | ((unsigned long)(Gui_u16:GuiVal & 0xFFF) << 4 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -----------------------------  Register RTree: DAC_DAC_DHR12L1  --------------------------------
// SVD Line: 23289

//  <rtree> SFDITEM_REG__DAC_DAC_DHR12L1
//    <name> DAC_DHR12L1 </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x4000740C) DAC channel1 12-bit left aligned data  holding register </i>
//    <loc> ( (unsigned int)((DAC_DAC_DHR12L1 >> 0) & 0xFFFFFFFF), ((DAC_DAC_DHR12L1 = (DAC_DAC_DHR12L1 & ~(0xFFF0UL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFF0) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__DAC_DAC_DHR12L1_DACC1DHR </item>
//  </rtree>
//  


// --------------------------  Register Item Address: DAC_DAC_DHR8R1  -----------------------------
// SVD Line: 23309

unsigned int DAC_DAC_DHR8R1 __AT (0x40007410);



// ---------------------------  Field Item: DAC_DAC_DHR8R1_DACC1DHR  ------------------------------
// SVD Line: 23319

//  <item> SFDITEM_FIELD__DAC_DAC_DHR8R1_DACC1DHR
//    <name> DACC1DHR </name>
//    <rw> 
//    <i> [Bits 7..0] RW (@ 0x40007410) DAC channel1 8-bit right-aligned data  These bits are written by software which specifies  8-bit data for DAC channel1. </i>
//    <edit> 
//      <loc> ( (unsigned char)((DAC_DAC_DHR8R1 >> 0) & 0xFF), ((DAC_DAC_DHR8R1 = (DAC_DAC_DHR8R1 & ~(0xFFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -----------------------------  Register RTree: DAC_DAC_DHR8R1  ---------------------------------
// SVD Line: 23309

//  <rtree> SFDITEM_REG__DAC_DAC_DHR8R1
//    <name> DAC_DHR8R1 </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x40007410) DAC channel1 8-bit right aligned data  holding register </i>
//    <loc> ( (unsigned int)((DAC_DAC_DHR8R1 >> 0) & 0xFFFFFFFF), ((DAC_DAC_DHR8R1 = (DAC_DAC_DHR8R1 & ~(0xFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__DAC_DAC_DHR8R1_DACC1DHR </item>
//  </rtree>
//  


// -------------------------  Register Item Address: DAC_DAC_DHR12R2  -----------------------------
// SVD Line: 23329

unsigned int DAC_DAC_DHR12R2 __AT (0x40007414);



// --------------------------  Field Item: DAC_DAC_DHR12R2_DACC2DHR  ------------------------------
// SVD Line: 23339

//  <item> SFDITEM_FIELD__DAC_DAC_DHR12R2_DACC2DHR
//    <name> DACC2DHR </name>
//    <rw> 
//    <i> [Bits 11..0] RW (@ 0x40007414) DAC channel2 12-bit right-aligned data  These bits are written by software which specifies  12-bit data for DAC channel2. </i>
//    <edit> 
//      <loc> ( (unsigned short)((DAC_DAC_DHR12R2 >> 0) & 0xFFF), ((DAC_DAC_DHR12R2 = (DAC_DAC_DHR12R2 & ~(0xFFFUL << 0 )) | ((unsigned long)(Gui_u16:GuiVal & 0xFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -----------------------------  Register RTree: DAC_DAC_DHR12R2  --------------------------------
// SVD Line: 23329

//  <rtree> SFDITEM_REG__DAC_DAC_DHR12R2
//    <name> DAC_DHR12R2 </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x40007414) DAC channel2 12-bit right aligned data  holding register </i>
//    <loc> ( (unsigned int)((DAC_DAC_DHR12R2 >> 0) & 0xFFFFFFFF), ((DAC_DAC_DHR12R2 = (DAC_DAC_DHR12R2 & ~(0xFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__DAC_DAC_DHR12R2_DACC2DHR </item>
//  </rtree>
//  


// -------------------------  Register Item Address: DAC_DAC_DHR12L2  -----------------------------
// SVD Line: 23349

unsigned int DAC_DAC_DHR12L2 __AT (0x40007418);



// --------------------------  Field Item: DAC_DAC_DHR12L2_DACC2DHR  ------------------------------
// SVD Line: 23359

//  <item> SFDITEM_FIELD__DAC_DAC_DHR12L2_DACC2DHR
//    <name> DACC2DHR </name>
//    <rw> 
//    <i> [Bits 15..4] RW (@ 0x40007418) DAC channel2 12-bit left-aligned data  These bits are written by software which specify  12-bit data for DAC channel2. </i>
//    <edit> 
//      <loc> ( (unsigned short)((DAC_DAC_DHR12L2 >> 4) & 0xFFF), ((DAC_DAC_DHR12L2 = (DAC_DAC_DHR12L2 & ~(0xFFFUL << 4 )) | ((unsigned long)(Gui_u16:GuiVal & 0xFFF) << 4 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -----------------------------  Register RTree: DAC_DAC_DHR12L2  --------------------------------
// SVD Line: 23349

//  <rtree> SFDITEM_REG__DAC_DAC_DHR12L2
//    <name> DAC_DHR12L2 </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x40007418) DAC channel2 12-bit left aligned data  holding register </i>
//    <loc> ( (unsigned int)((DAC_DAC_DHR12L2 >> 0) & 0xFFFFFFFF), ((DAC_DAC_DHR12L2 = (DAC_DAC_DHR12L2 & ~(0xFFF0UL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFF0) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__DAC_DAC_DHR12L2_DACC2DHR </item>
//  </rtree>
//  


// --------------------------  Register Item Address: DAC_DAC_DHR8R2  -----------------------------
// SVD Line: 23369

unsigned int DAC_DAC_DHR8R2 __AT (0x4000741C);



// ---------------------------  Field Item: DAC_DAC_DHR8R2_DACC2DHR  ------------------------------
// SVD Line: 23379

//  <item> SFDITEM_FIELD__DAC_DAC_DHR8R2_DACC2DHR
//    <name> DACC2DHR </name>
//    <rw> 
//    <i> [Bits 7..0] RW (@ 0x4000741C) DAC channel2 8-bit right-aligned data  These bits are written by software which specifies  8-bit data for DAC channel2. </i>
//    <edit> 
//      <loc> ( (unsigned char)((DAC_DAC_DHR8R2 >> 0) & 0xFF), ((DAC_DAC_DHR8R2 = (DAC_DAC_DHR8R2 & ~(0xFFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -----------------------------  Register RTree: DAC_DAC_DHR8R2  ---------------------------------
// SVD Line: 23369

//  <rtree> SFDITEM_REG__DAC_DAC_DHR8R2
//    <name> DAC_DHR8R2 </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x4000741C) DAC channel2 8-bit right-aligned data  holding register </i>
//    <loc> ( (unsigned int)((DAC_DAC_DHR8R2 >> 0) & 0xFFFFFFFF), ((DAC_DAC_DHR8R2 = (DAC_DAC_DHR8R2 & ~(0xFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__DAC_DAC_DHR8R2_DACC2DHR </item>
//  </rtree>
//  


// -------------------------  Register Item Address: DAC_DAC_DHR12RD  -----------------------------
// SVD Line: 23389

unsigned int DAC_DAC_DHR12RD __AT (0x40007420);



// --------------------------  Field Item: DAC_DAC_DHR12RD_DACC1DHR  ------------------------------
// SVD Line: 23399

//  <item> SFDITEM_FIELD__DAC_DAC_DHR12RD_DACC1DHR
//    <name> DACC1DHR </name>
//    <rw> 
//    <i> [Bits 11..0] RW (@ 0x40007420) DAC channel1 12-bit right-aligned data  These bits are written by software which specifies  12-bit data for DAC channel1. </i>
//    <edit> 
//      <loc> ( (unsigned short)((DAC_DAC_DHR12RD >> 0) & 0xFFF), ((DAC_DAC_DHR12RD = (DAC_DAC_DHR12RD & ~(0xFFFUL << 0 )) | ((unsigned long)(Gui_u16:GuiVal & 0xFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// --------------------------  Field Item: DAC_DAC_DHR12RD_DACC2DHR  ------------------------------
// SVD Line: 23407

//  <item> SFDITEM_FIELD__DAC_DAC_DHR12RD_DACC2DHR
//    <name> DACC2DHR </name>
//    <rw> 
//    <i> [Bits 27..16] RW (@ 0x40007420) DAC channel2 12-bit right-aligned data  These bits are written by software which specifies  12-bit data for DAC channel2. </i>
//    <edit> 
//      <loc> ( (unsigned short)((DAC_DAC_DHR12RD >> 16) & 0xFFF), ((DAC_DAC_DHR12RD = (DAC_DAC_DHR12RD & ~(0xFFFUL << 16 )) | ((unsigned long)(Gui_u16:GuiVal & 0xFFF) << 16 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -----------------------------  Register RTree: DAC_DAC_DHR12RD  --------------------------------
// SVD Line: 23389

//  <rtree> SFDITEM_REG__DAC_DAC_DHR12RD
//    <name> DAC_DHR12RD </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x40007420) Dual DAC 12-bit right-aligned data holding  register </i>
//    <loc> ( (unsigned int)((DAC_DAC_DHR12RD >> 0) & 0xFFFFFFFF), ((DAC_DAC_DHR12RD = (DAC_DAC_DHR12RD & ~(0xFFF0FFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFF0FFF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__DAC_DAC_DHR12RD_DACC1DHR </item>
//    <item> SFDITEM_FIELD__DAC_DAC_DHR12RD_DACC2DHR </item>
//  </rtree>
//  


// -------------------------  Register Item Address: DAC_DAC_DHR12LD  -----------------------------
// SVD Line: 23417

unsigned int DAC_DAC_DHR12LD __AT (0x40007424);



// --------------------------  Field Item: DAC_DAC_DHR12LD_DACC1DHR  ------------------------------
// SVD Line: 23427

//  <item> SFDITEM_FIELD__DAC_DAC_DHR12LD_DACC1DHR
//    <name> DACC1DHR </name>
//    <rw> 
//    <i> [Bits 15..4] RW (@ 0x40007424) DAC channel1 12-bit left-aligned data  These bits are written by software which specifies  12-bit data for DAC channel1. </i>
//    <edit> 
//      <loc> ( (unsigned short)((DAC_DAC_DHR12LD >> 4) & 0xFFF), ((DAC_DAC_DHR12LD = (DAC_DAC_DHR12LD & ~(0xFFFUL << 4 )) | ((unsigned long)(Gui_u16:GuiVal & 0xFFF) << 4 ) ) )) </loc>
//    </edit>
//  </item>
//  


// --------------------------  Field Item: DAC_DAC_DHR12LD_DACC2DHR  ------------------------------
// SVD Line: 23435

//  <item> SFDITEM_FIELD__DAC_DAC_DHR12LD_DACC2DHR
//    <name> DACC2DHR </name>
//    <rw> 
//    <i> [Bits 31..20] RW (@ 0x40007424) DAC channel2 12-bit left-aligned data  These bits are written by software which specifies  12-bit data for DAC channel2. </i>
//    <edit> 
//      <loc> ( (unsigned short)((DAC_DAC_DHR12LD >> 20) & 0xFFF), ((DAC_DAC_DHR12LD = (DAC_DAC_DHR12LD & ~(0xFFFUL << 20 )) | ((unsigned long)(Gui_u16:GuiVal & 0xFFF) << 20 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -----------------------------  Register RTree: DAC_DAC_DHR12LD  --------------------------------
// SVD Line: 23417

//  <rtree> SFDITEM_REG__DAC_DAC_DHR12LD
//    <name> DAC_DHR12LD </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x40007424) DUAL DAC 12-bit left aligned data holding  register </i>
//    <loc> ( (unsigned int)((DAC_DAC_DHR12LD >> 0) & 0xFFFFFFFF), ((DAC_DAC_DHR12LD = (DAC_DAC_DHR12LD & ~(0xFFF0FFF0UL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFF0FFF0) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__DAC_DAC_DHR12LD_DACC1DHR </item>
//    <item> SFDITEM_FIELD__DAC_DAC_DHR12LD_DACC2DHR </item>
//  </rtree>
//  


// --------------------------  Register Item Address: DAC_DAC_DHR8RD  -----------------------------
// SVD Line: 23445

unsigned int DAC_DAC_DHR8RD __AT (0x40007428);



// ---------------------------  Field Item: DAC_DAC_DHR8RD_DACC1DHR  ------------------------------
// SVD Line: 23455

//  <item> SFDITEM_FIELD__DAC_DAC_DHR8RD_DACC1DHR
//    <name> DACC1DHR </name>
//    <rw> 
//    <i> [Bits 7..0] RW (@ 0x40007428) DAC channel1 8-bit right-aligned data  These bits are written by software which specifies  8-bit data for DAC channel1. </i>
//    <edit> 
//      <loc> ( (unsigned char)((DAC_DAC_DHR8RD >> 0) & 0xFF), ((DAC_DAC_DHR8RD = (DAC_DAC_DHR8RD & ~(0xFFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ---------------------------  Field Item: DAC_DAC_DHR8RD_DACC2DHR  ------------------------------
// SVD Line: 23463

//  <item> SFDITEM_FIELD__DAC_DAC_DHR8RD_DACC2DHR
//    <name> DACC2DHR </name>
//    <rw> 
//    <i> [Bits 15..8] RW (@ 0x40007428) DAC channel2 8-bit right-aligned data  These bits are written by software which specifies  8-bit data for DAC channel2. </i>
//    <edit> 
//      <loc> ( (unsigned char)((DAC_DAC_DHR8RD >> 8) & 0xFF), ((DAC_DAC_DHR8RD = (DAC_DAC_DHR8RD & ~(0xFFUL << 8 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFF) << 8 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -----------------------------  Register RTree: DAC_DAC_DHR8RD  ---------------------------------
// SVD Line: 23445

//  <rtree> SFDITEM_REG__DAC_DAC_DHR8RD
//    <name> DAC_DHR8RD </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x40007428) DUAL DAC 8-bit right aligned data holding  register </i>
//    <loc> ( (unsigned int)((DAC_DAC_DHR8RD >> 0) & 0xFFFFFFFF), ((DAC_DAC_DHR8RD = (DAC_DAC_DHR8RD & ~(0xFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__DAC_DAC_DHR8RD_DACC1DHR </item>
//    <item> SFDITEM_FIELD__DAC_DAC_DHR8RD_DACC2DHR </item>
//  </rtree>
//  


// ---------------------------  Register Item Address: DAC_DAC_DOR1  ------------------------------
// SVD Line: 23473

unsigned int DAC_DAC_DOR1 __AT (0x4000742C);



// ----------------------------  Field Item: DAC_DAC_DOR1_DACC1DOR  -------------------------------
// SVD Line: 23483

//  <item> SFDITEM_FIELD__DAC_DAC_DOR1_DACC1DOR
//    <name> DACC1DOR </name>
//    <r> 
//    <i> [Bits 11..0] RO (@ 0x4000742C) DAC channel1 data output These bits are  read-only, they contain data output for DAC  channel1. </i>
//    <edit> 
//      <loc> ( (unsigned short)((DAC_DAC_DOR1 >> 0) & 0xFFF) ) </loc>
//    </edit>
//  </item>
//  


// ------------------------------  Register RTree: DAC_DAC_DOR1  ----------------------------------
// SVD Line: 23473

//  <rtree> SFDITEM_REG__DAC_DAC_DOR1
//    <name> DAC_DOR1 </name>
//    <r> 
//    <i> [Bits 31..0] RO (@ 0x4000742C) DAC channel1 data output  register </i>
//    <loc> ( (unsigned int)((DAC_DAC_DOR1 >> 0) & 0xFFFFFFFF) ) </loc>
//    <item> SFDITEM_FIELD__DAC_DAC_DOR1_DACC1DOR </item>
//  </rtree>
//  


// ---------------------------  Register Item Address: DAC_DAC_DOR2  ------------------------------
// SVD Line: 23493

unsigned int DAC_DAC_DOR2 __AT (0x40007430);



// ----------------------------  Field Item: DAC_DAC_DOR2_DACC2DOR  -------------------------------
// SVD Line: 23503

//  <item> SFDITEM_FIELD__DAC_DAC_DOR2_DACC2DOR
//    <name> DACC2DOR </name>
//    <r> 
//    <i> [Bits 11..0] RO (@ 0x40007430) DAC channel2 data output These bits are  read-only, they contain data output for DAC  channel2. </i>
//    <edit> 
//      <loc> ( (unsigned short)((DAC_DAC_DOR2 >> 0) & 0xFFF) ) </loc>
//    </edit>
//  </item>
//  


// ------------------------------  Register RTree: DAC_DAC_DOR2  ----------------------------------
// SVD Line: 23493

//  <rtree> SFDITEM_REG__DAC_DAC_DOR2
//    <name> DAC_DOR2 </name>
//    <r> 
//    <i> [Bits 31..0] RO (@ 0x40007430) DAC channel2 data output  register </i>
//    <loc> ( (unsigned int)((DAC_DAC_DOR2 >> 0) & 0xFFFFFFFF) ) </loc>
//    <item> SFDITEM_FIELD__DAC_DAC_DOR2_DACC2DOR </item>
//  </rtree>
//  


// ----------------------------  Register Item Address: DAC_DAC_SR  -------------------------------
// SVD Line: 23513

unsigned int DAC_DAC_SR __AT (0x40007434);



// -----------------------------  Field Item: DAC_DAC_SR_DMAUDR1  ---------------------------------
// SVD Line: 23521

//  <item> SFDITEM_FIELD__DAC_DAC_SR_DMAUDR1
//    <name> DMAUDR1 </name>
//    <rw> 
//    <i> [Bit 13] RW (@ 0x40007434) DAC channel1 DMA underrun flag This bit  is set by hardware and cleared by software (by  writing it to 1). </i>
//    <check> 
//      <loc> ( (unsigned int) DAC_DAC_SR ) </loc>
//      <o.13..13> DMAUDR1
//    </check>
//  </item>
//  


// ----------------------------  Field Item: DAC_DAC_SR_CAL_FLAG1  --------------------------------
// SVD Line: 23530

//  <item> SFDITEM_FIELD__DAC_DAC_SR_CAL_FLAG1
//    <name> CAL_FLAG1 </name>
//    <r> 
//    <i> [Bit 14] RO (@ 0x40007434) DAC Channel 1 calibration offset status  This bit is set and cleared by hardware </i>
//    <check> 
//      <loc> ( (unsigned int) DAC_DAC_SR ) </loc>
//      <o.14..14> CAL_FLAG1
//    </check>
//  </item>
//  


// ------------------------------  Field Item: DAC_DAC_SR_BWST1  ----------------------------------
// SVD Line: 23538

//  <item> SFDITEM_FIELD__DAC_DAC_SR_BWST1
//    <name> BWST1 </name>
//    <r> 
//    <i> [Bit 15] RO (@ 0x40007434) DAC Channel 1 busy writing sample time  flag This bit is systematically set just after Sample  & Hold mode enable and is set each time the  software writes the register DAC_SHSR1, It is cleared  by hardware when the write operation of DAC_SHSR1 is  complete. (It takes about 3LSI periods of  synchronization). </i>
//    <check> 
//      <loc> ( (unsigned int) DAC_DAC_SR ) </loc>
//      <o.15..15> BWST1
//    </check>
//  </item>
//  


// -----------------------------  Field Item: DAC_DAC_SR_DMAUDR2  ---------------------------------
// SVD Line: 23551

//  <item> SFDITEM_FIELD__DAC_DAC_SR_DMAUDR2
//    <name> DMAUDR2 </name>
//    <rw> 
//    <i> [Bit 29] RW (@ 0x40007434) DAC channel2 DMA underrun flag This bit  is set by hardware and cleared by software (by  writing it to 1). </i>
//    <check> 
//      <loc> ( (unsigned int) DAC_DAC_SR ) </loc>
//      <o.29..29> DMAUDR2
//    </check>
//  </item>
//  


// ----------------------------  Field Item: DAC_DAC_SR_CAL_FLAG2  --------------------------------
// SVD Line: 23560

//  <item> SFDITEM_FIELD__DAC_DAC_SR_CAL_FLAG2
//    <name> CAL_FLAG2 </name>
//    <r> 
//    <i> [Bit 30] RO (@ 0x40007434) DAC Channel 2 calibration offset status  This bit is set and cleared by hardware </i>
//    <check> 
//      <loc> ( (unsigned int) DAC_DAC_SR ) </loc>
//      <o.30..30> CAL_FLAG2
//    </check>
//  </item>
//  


// ------------------------------  Field Item: DAC_DAC_SR_BWST2  ----------------------------------
// SVD Line: 23568

//  <item> SFDITEM_FIELD__DAC_DAC_SR_BWST2
//    <name> BWST2 </name>
//    <r> 
//    <i> [Bit 31] RO (@ 0x40007434) DAC Channel 2 busy writing sample time  flag This bit is systematically set just after Sample  & Hold mode enable and is set each time the  software writes the register DAC_SHSR2, It is cleared  by hardware when the write operation of DAC_SHSR2 is  complete. (It takes about 3 LSI periods of  synchronization). </i>
//    <check> 
//      <loc> ( (unsigned int) DAC_DAC_SR ) </loc>
//      <o.31..31> BWST2
//    </check>
//  </item>
//  


// -------------------------------  Register RTree: DAC_DAC_SR  -----------------------------------
// SVD Line: 23513

//  <rtree> SFDITEM_REG__DAC_DAC_SR
//    <name> DAC_SR </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x40007434) DAC status register </i>
//    <loc> ( (unsigned int)((DAC_DAC_SR >> 0) & 0xFFFFFFFF), ((DAC_DAC_SR = (DAC_DAC_SR & ~(0x20002000UL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0x20002000) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__DAC_DAC_SR_DMAUDR1 </item>
//    <item> SFDITEM_FIELD__DAC_DAC_SR_CAL_FLAG1 </item>
//    <item> SFDITEM_FIELD__DAC_DAC_SR_BWST1 </item>
//    <item> SFDITEM_FIELD__DAC_DAC_SR_DMAUDR2 </item>
//    <item> SFDITEM_FIELD__DAC_DAC_SR_CAL_FLAG2 </item>
//    <item> SFDITEM_FIELD__DAC_DAC_SR_BWST2 </item>
//  </rtree>
//  


// ---------------------------  Register Item Address: DAC_DAC_CCR  -------------------------------
// SVD Line: 23583

unsigned int DAC_DAC_CCR __AT (0x40007438);



// -----------------------------  Field Item: DAC_DAC_CCR_OTRIM1  ---------------------------------
// SVD Line: 23593

//  <item> SFDITEM_FIELD__DAC_DAC_CCR_OTRIM1
//    <name> OTRIM1 </name>
//    <rw> 
//    <i> [Bits 4..0] RW (@ 0x40007438) DAC Channel 1 offset trimming  value </i>
//    <edit> 
//      <loc> ( (unsigned char)((DAC_DAC_CCR >> 0) & 0x1F), ((DAC_DAC_CCR = (DAC_DAC_CCR & ~(0x1FUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0x1F) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -----------------------------  Field Item: DAC_DAC_CCR_OTRIM2  ---------------------------------
// SVD Line: 23600

//  <item> SFDITEM_FIELD__DAC_DAC_CCR_OTRIM2
//    <name> OTRIM2 </name>
//    <rw> 
//    <i> [Bits 20..16] RW (@ 0x40007438) DAC Channel 2 offset trimming  value </i>
//    <edit> 
//      <loc> ( (unsigned char)((DAC_DAC_CCR >> 16) & 0x1F), ((DAC_DAC_CCR = (DAC_DAC_CCR & ~(0x1FUL << 16 )) | ((unsigned long)(Gui_u8:GuiVal & 0x1F) << 16 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -------------------------------  Register RTree: DAC_DAC_CCR  ----------------------------------
// SVD Line: 23583

//  <rtree> SFDITEM_REG__DAC_DAC_CCR
//    <name> DAC_CCR </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x40007438) DAC calibration control  register </i>
//    <loc> ( (unsigned int)((DAC_DAC_CCR >> 0) & 0xFFFFFFFF), ((DAC_DAC_CCR = (DAC_DAC_CCR & ~(0x1F001FUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0x1F001F) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__DAC_DAC_CCR_OTRIM1 </item>
//    <item> SFDITEM_FIELD__DAC_DAC_CCR_OTRIM2 </item>
//  </rtree>
//  


// ---------------------------  Register Item Address: DAC_DAC_MCR  -------------------------------
// SVD Line: 23609

unsigned int DAC_DAC_MCR __AT (0x4000743C);



// ------------------------------  Field Item: DAC_DAC_MCR_MODE1  ---------------------------------
// SVD Line: 23618

//  <item> SFDITEM_FIELD__DAC_DAC_MCR_MODE1
//    <name> MODE1 </name>
//    <rw> 
//    <i> [Bits 2..0] RW (@ 0x4000743C) DAC Channel 1 mode These bits can be  written only when the DAC is disabled and not in the  calibration mode (when bit EN1=0 and bit CEN1 =0 in  the DAC_CR register). If EN1=1 or CEN1 =1 the write  operation is ignored. They can be set and cleared by  software to select the DAC Channel 1 mode: DAC  Channel 1 in normal Mode DAC Channel 1 in sample  &amp; hold mode </i>
//    <edit> 
//      <loc> ( (unsigned char)((DAC_DAC_MCR >> 0) & 0x7), ((DAC_DAC_MCR = (DAC_DAC_MCR & ~(0x7UL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0x7) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ------------------------------  Field Item: DAC_DAC_MCR_MODE2  ---------------------------------
// SVD Line: 23631

//  <item> SFDITEM_FIELD__DAC_DAC_MCR_MODE2
//    <name> MODE2 </name>
//    <rw> 
//    <i> [Bits 18..16] RW (@ 0x4000743C) DAC Channel 2 mode These bits can be  written only when the DAC is disabled and not in the  calibration mode (when bit EN2=0 and bit CEN2 =0 in  the DAC_CR register). If EN2=1 or CEN2 =1 the write  operation is ignored. They can be set and cleared by  software to select the DAC Channel 2 mode: DAC  Channel 2 in normal Mode DAC Channel 2 in sample  &amp; hold mode </i>
//    <edit> 
//      <loc> ( (unsigned char)((DAC_DAC_MCR >> 16) & 0x7), ((DAC_DAC_MCR = (DAC_DAC_MCR & ~(0x7UL << 16 )) | ((unsigned long)(Gui_u8:GuiVal & 0x7) << 16 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -------------------------------  Register RTree: DAC_DAC_MCR  ----------------------------------
// SVD Line: 23609

//  <rtree> SFDITEM_REG__DAC_DAC_MCR
//    <name> DAC_MCR </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x4000743C) DAC mode control register </i>
//    <loc> ( (unsigned int)((DAC_DAC_MCR >> 0) & 0xFFFFFFFF), ((DAC_DAC_MCR = (DAC_DAC_MCR & ~(0x70007UL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0x70007) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__DAC_DAC_MCR_MODE1 </item>
//    <item> SFDITEM_FIELD__DAC_DAC_MCR_MODE2 </item>
//  </rtree>
//  


// --------------------------  Register Item Address: DAC_DAC_SHSR1  ------------------------------
// SVD Line: 23646

unsigned int DAC_DAC_SHSR1 __AT (0x40007440);



// ---------------------------  Field Item: DAC_DAC_SHSR1_TSAMPLE1  -------------------------------
// SVD Line: 23656

//  <item> SFDITEM_FIELD__DAC_DAC_SHSR1_TSAMPLE1
//    <name> TSAMPLE1 </name>
//    <rw> 
//    <i> [Bits 9..0] RW (@ 0x40007440) DAC Channel 1 sample Time (only valid in  sample &amp; hold mode) These bits can be written  when the DAC channel1 is disabled or also during  normal operation. in the latter case, the write can  be done only when BWSTx of DAC_SR register is low, If  BWSTx=1, the write operation is  ignored. </i>
//    <edit> 
//      <loc> ( (unsigned short)((DAC_DAC_SHSR1 >> 0) & 0x3FF), ((DAC_DAC_SHSR1 = (DAC_DAC_SHSR1 & ~(0x3FFUL << 0 )) | ((unsigned long)(Gui_u16:GuiVal & 0x3FF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ------------------------------  Register RTree: DAC_DAC_SHSR1  ---------------------------------
// SVD Line: 23646

//  <rtree> SFDITEM_REG__DAC_DAC_SHSR1
//    <name> DAC_SHSR1 </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x40007440) DAC Sample and Hold sample time register  1 </i>
//    <loc> ( (unsigned int)((DAC_DAC_SHSR1 >> 0) & 0xFFFFFFFF), ((DAC_DAC_SHSR1 = (DAC_DAC_SHSR1 & ~(0x3FFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0x3FF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__DAC_DAC_SHSR1_TSAMPLE1 </item>
//  </rtree>
//  


// --------------------------  Register Item Address: DAC_DAC_SHSR2  ------------------------------
// SVD Line: 23670

unsigned int DAC_DAC_SHSR2 __AT (0x40007444);



// ---------------------------  Field Item: DAC_DAC_SHSR2_TSAMPLE2  -------------------------------
// SVD Line: 23680

//  <item> SFDITEM_FIELD__DAC_DAC_SHSR2_TSAMPLE2
//    <name> TSAMPLE2 </name>
//    <rw> 
//    <i> [Bits 9..0] RW (@ 0x40007444) DAC Channel 2 sample Time (only valid in  sample &amp; hold mode) These bits can be written  when the DAC channel2 is disabled or also during  normal operation. in the latter case, the write can  be done only when BWSTx of DAC_SR register is low, if  BWSTx=1, the write operation is  ignored. </i>
//    <edit> 
//      <loc> ( (unsigned short)((DAC_DAC_SHSR2 >> 0) & 0x3FF), ((DAC_DAC_SHSR2 = (DAC_DAC_SHSR2 & ~(0x3FFUL << 0 )) | ((unsigned long)(Gui_u16:GuiVal & 0x3FF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ------------------------------  Register RTree: DAC_DAC_SHSR2  ---------------------------------
// SVD Line: 23670

//  <rtree> SFDITEM_REG__DAC_DAC_SHSR2
//    <name> DAC_SHSR2 </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x40007444) DAC Sample and Hold sample time register  2 </i>
//    <loc> ( (unsigned int)((DAC_DAC_SHSR2 >> 0) & 0xFFFFFFFF), ((DAC_DAC_SHSR2 = (DAC_DAC_SHSR2 & ~(0x3FFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0x3FF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__DAC_DAC_SHSR2_TSAMPLE2 </item>
//  </rtree>
//  


// ---------------------------  Register Item Address: DAC_DAC_SHHR  ------------------------------
// SVD Line: 23694

unsigned int DAC_DAC_SHHR __AT (0x40007448);



// -----------------------------  Field Item: DAC_DAC_SHHR_THOLD1  --------------------------------
// SVD Line: 23704

//  <item> SFDITEM_FIELD__DAC_DAC_SHHR_THOLD1
//    <name> THOLD1 </name>
//    <rw> 
//    <i> [Bits 9..0] RW (@ 0x40007448) DAC Channel 1 hold Time (only valid in  sample &amp; hold mode) Hold time= (THOLD[9:0]) x  T LSI </i>
//    <edit> 
//      <loc> ( (unsigned short)((DAC_DAC_SHHR >> 0) & 0x3FF), ((DAC_DAC_SHHR = (DAC_DAC_SHHR & ~(0x3FFUL << 0 )) | ((unsigned long)(Gui_u16:GuiVal & 0x3FF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -----------------------------  Field Item: DAC_DAC_SHHR_THOLD2  --------------------------------
// SVD Line: 23712

//  <item> SFDITEM_FIELD__DAC_DAC_SHHR_THOLD2
//    <name> THOLD2 </name>
//    <rw> 
//    <i> [Bits 25..16] RW (@ 0x40007448) DAC Channel 2 hold time (only valid in  sample &amp; hold mode). Hold time= (THOLD[9:0])  x T LSI </i>
//    <edit> 
//      <loc> ( (unsigned short)((DAC_DAC_SHHR >> 16) & 0x3FF), ((DAC_DAC_SHHR = (DAC_DAC_SHHR & ~(0x3FFUL << 16 )) | ((unsigned long)(Gui_u16:GuiVal & 0x3FF) << 16 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ------------------------------  Register RTree: DAC_DAC_SHHR  ----------------------------------
// SVD Line: 23694

//  <rtree> SFDITEM_REG__DAC_DAC_SHHR
//    <name> DAC_SHHR </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x40007448) DAC Sample and Hold hold time  register </i>
//    <loc> ( (unsigned int)((DAC_DAC_SHHR >> 0) & 0xFFFFFFFF), ((DAC_DAC_SHHR = (DAC_DAC_SHHR & ~(0x3FF03FFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0x3FF03FF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__DAC_DAC_SHHR_THOLD1 </item>
//    <item> SFDITEM_FIELD__DAC_DAC_SHHR_THOLD2 </item>
//  </rtree>
//  


// ---------------------------  Register Item Address: DAC_DAC_SHRR  ------------------------------
// SVD Line: 23722

unsigned int DAC_DAC_SHRR __AT (0x4000744C);



// ---------------------------  Field Item: DAC_DAC_SHRR_TREFRESH1  -------------------------------
// SVD Line: 23732

//  <item> SFDITEM_FIELD__DAC_DAC_SHRR_TREFRESH1
//    <name> TREFRESH1 </name>
//    <rw> 
//    <i> [Bits 7..0] RW (@ 0x4000744C) DAC Channel 1 refresh Time (only valid  in sample &amp; hold mode) Refresh time=  (TREFRESH[7:0]) x T LSI </i>
//    <edit> 
//      <loc> ( (unsigned char)((DAC_DAC_SHRR >> 0) & 0xFF), ((DAC_DAC_SHRR = (DAC_DAC_SHRR & ~(0xFFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ---------------------------  Field Item: DAC_DAC_SHRR_TREFRESH2  -------------------------------
// SVD Line: 23740

//  <item> SFDITEM_FIELD__DAC_DAC_SHRR_TREFRESH2
//    <name> TREFRESH2 </name>
//    <rw> 
//    <i> [Bits 23..16] RW (@ 0x4000744C) DAC Channel 2 refresh Time (only valid  in sample &amp; hold mode) Refresh time=  (TREFRESH[7:0]) x T LSI </i>
//    <edit> 
//      <loc> ( (unsigned char)((DAC_DAC_SHRR >> 16) & 0xFF), ((DAC_DAC_SHRR = (DAC_DAC_SHRR & ~(0xFFUL << 16 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFF) << 16 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ------------------------------  Register RTree: DAC_DAC_SHRR  ----------------------------------
// SVD Line: 23722

//  <rtree> SFDITEM_REG__DAC_DAC_SHRR
//    <name> DAC_SHRR </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x4000744C) DAC Sample and Hold refresh time  register </i>
//    <loc> ( (unsigned int)((DAC_DAC_SHRR >> 0) & 0xFFFFFFFF), ((DAC_DAC_SHRR = (DAC_DAC_SHRR & ~(0xFF00FFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFF00FF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__DAC_DAC_SHRR_TREFRESH1 </item>
//    <item> SFDITEM_FIELD__DAC_DAC_SHRR_TREFRESH2 </item>
//  </rtree>
//  


// --------------------------  Register Item Address: DAC_IP_HWCFGR0  -----------------------------
// SVD Line: 23750

unsigned int DAC_IP_HWCFGR0 __AT (0x400077F0);



// -----------------------------  Field Item: DAC_IP_HWCFGR0_DUAL  --------------------------------
// SVD Line: 23760

//  <item> SFDITEM_FIELD__DAC_IP_HWCFGR0_DUAL
//    <name> DUAL </name>
//    <rw> 
//    <i> [Bits 3..0] RW (@ 0x400077F0) Dual DAC capability </i>
//    <edit> 
//      <loc> ( (unsigned char)((DAC_IP_HWCFGR0 >> 0) & 0xF), ((DAC_IP_HWCFGR0 = (DAC_IP_HWCFGR0 & ~(0xFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -----------------------------  Field Item: DAC_IP_HWCFGR0_LFSR  --------------------------------
// SVD Line: 23766

//  <item> SFDITEM_FIELD__DAC_IP_HWCFGR0_LFSR
//    <name> LFSR </name>
//    <rw> 
//    <i> [Bits 7..4] RW (@ 0x400077F0) Pseudonoise wave generation  capability </i>
//    <edit> 
//      <loc> ( (unsigned char)((DAC_IP_HWCFGR0 >> 4) & 0xF), ((DAC_IP_HWCFGR0 = (DAC_IP_HWCFGR0 & ~(0xFUL << 4 )) | ((unsigned long)(Gui_u8:GuiVal & 0xF) << 4 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ---------------------------  Field Item: DAC_IP_HWCFGR0_TRIANGLE  ------------------------------
// SVD Line: 23773

//  <item> SFDITEM_FIELD__DAC_IP_HWCFGR0_TRIANGLE
//    <name> TRIANGLE </name>
//    <rw> 
//    <i> [Bits 11..8] RW (@ 0x400077F0) Triangle wave generation  capability </i>
//    <edit> 
//      <loc> ( (unsigned char)((DAC_IP_HWCFGR0 >> 8) & 0xF), ((DAC_IP_HWCFGR0 = (DAC_IP_HWCFGR0 & ~(0xFUL << 8 )) | ((unsigned long)(Gui_u8:GuiVal & 0xF) << 8 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ----------------------------  Field Item: DAC_IP_HWCFGR0_SAMPLE  -------------------------------
// SVD Line: 23780

//  <item> SFDITEM_FIELD__DAC_IP_HWCFGR0_SAMPLE
//    <name> SAMPLE </name>
//    <rw> 
//    <i> [Bits 15..12] RW (@ 0x400077F0) Sample and hold mode  capability </i>
//    <edit> 
//      <loc> ( (unsigned char)((DAC_IP_HWCFGR0 >> 12) & 0xF), ((DAC_IP_HWCFGR0 = (DAC_IP_HWCFGR0 & ~(0xFUL << 12 )) | ((unsigned long)(Gui_u8:GuiVal & 0xF) << 12 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ----------------------------  Field Item: DAC_IP_HWCFGR0_OR_CFG  -------------------------------
// SVD Line: 23787

//  <item> SFDITEM_FIELD__DAC_IP_HWCFGR0_OR_CFG
//    <name> OR_CFG </name>
//    <rw> 
//    <i> [Bits 23..16] RW (@ 0x400077F0) option register bit width </i>
//    <edit> 
//      <loc> ( (unsigned char)((DAC_IP_HWCFGR0 >> 16) & 0xFF), ((DAC_IP_HWCFGR0 = (DAC_IP_HWCFGR0 & ~(0xFFUL << 16 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFF) << 16 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -----------------------------  Register RTree: DAC_IP_HWCFGR0  ---------------------------------
// SVD Line: 23750

//  <rtree> SFDITEM_REG__DAC_IP_HWCFGR0
//    <name> IP_HWCFGR0 </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x400077F0) DAC IP Hardware Configuration  Register </i>
//    <loc> ( (unsigned int)((DAC_IP_HWCFGR0 >> 0) & 0xFFFFFFFF), ((DAC_IP_HWCFGR0 = (DAC_IP_HWCFGR0 & ~(0xFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__DAC_IP_HWCFGR0_DUAL </item>
//    <item> SFDITEM_FIELD__DAC_IP_HWCFGR0_LFSR </item>
//    <item> SFDITEM_FIELD__DAC_IP_HWCFGR0_TRIANGLE </item>
//    <item> SFDITEM_FIELD__DAC_IP_HWCFGR0_SAMPLE </item>
//    <item> SFDITEM_FIELD__DAC_IP_HWCFGR0_OR_CFG </item>
//  </rtree>
//  


// -----------------------------  Register Item Address: DAC_VERR  --------------------------------
// SVD Line: 23795

unsigned int DAC_VERR __AT (0x400077F4);



// -------------------------------  Field Item: DAC_VERR_MINREV  ----------------------------------
// SVD Line: 23804

//  <item> SFDITEM_FIELD__DAC_VERR_MINREV
//    <name> MINREV </name>
//    <r> 
//    <i> [Bits 3..0] RO (@ 0x400077F4) Minor Revision number </i>
//    <edit> 
//      <loc> ( (unsigned char)((DAC_VERR >> 0) & 0xF) ) </loc>
//    </edit>
//  </item>
//  


// -------------------------------  Field Item: DAC_VERR_MAJREV  ----------------------------------
// SVD Line: 23810

//  <item> SFDITEM_FIELD__DAC_VERR_MAJREV
//    <name> MAJREV </name>
//    <r> 
//    <i> [Bits 7..4] RO (@ 0x400077F4) Major Revision number </i>
//    <edit> 
//      <loc> ( (unsigned char)((DAC_VERR >> 4) & 0xF) ) </loc>
//    </edit>
//  </item>
//  


// --------------------------------  Register RTree: DAC_VERR  ------------------------------------
// SVD Line: 23795

//  <rtree> SFDITEM_REG__DAC_VERR
//    <name> VERR </name>
//    <r> 
//    <i> [Bits 31..0] RO (@ 0x400077F4) EXTI IP Version register </i>
//    <loc> ( (unsigned int)((DAC_VERR >> 0) & 0xFFFFFFFF) ) </loc>
//    <item> SFDITEM_FIELD__DAC_VERR_MINREV </item>
//    <item> SFDITEM_FIELD__DAC_VERR_MAJREV </item>
//  </rtree>
//  


// ----------------------------  Register Item Address: DAC_IPIDR  --------------------------------
// SVD Line: 23818

unsigned int DAC_IPIDR __AT (0x400077F8);



// -------------------------------  Field Item: DAC_IPIDR_IPID  -----------------------------------
// SVD Line: 23827

//  <item> SFDITEM_FIELD__DAC_IPIDR_IPID
//    <name> IPID </name>
//    <r> 
//    <i> [Bits 31..0] RO (@ 0x400077F8) IP Identification </i>
//    <edit> 
//      <loc> ( (unsigned int)((DAC_IPIDR >> 0) & 0xFFFFFFFF) ) </loc>
//    </edit>
//  </item>
//  


// --------------------------------  Register RTree: DAC_IPIDR  -----------------------------------
// SVD Line: 23818

//  <rtree> SFDITEM_REG__DAC_IPIDR
//    <name> IPIDR </name>
//    <r> 
//    <i> [Bits 31..0] RO (@ 0x400077F8) EXTI Identification register </i>
//    <loc> ( (unsigned int)((DAC_IPIDR >> 0) & 0xFFFFFFFF) ) </loc>
//    <item> SFDITEM_FIELD__DAC_IPIDR_IPID </item>
//  </rtree>
//  


// -----------------------------  Register Item Address: DAC_SIDR  --------------------------------
// SVD Line: 23835

unsigned int DAC_SIDR __AT (0x400077FC);



// --------------------------------  Field Item: DAC_SIDR_SID  ------------------------------------
// SVD Line: 23844

//  <item> SFDITEM_FIELD__DAC_SIDR_SID
//    <name> SID </name>
//    <r> 
//    <i> [Bits 31..0] RO (@ 0x400077FC) Size Identification </i>
//    <edit> 
//      <loc> ( (unsigned int)((DAC_SIDR >> 0) & 0xFFFFFFFF) ) </loc>
//    </edit>
//  </item>
//  


// --------------------------------  Register RTree: DAC_SIDR  ------------------------------------
// SVD Line: 23835

//  <rtree> SFDITEM_REG__DAC_SIDR
//    <name> SIDR </name>
//    <r> 
//    <i> [Bits 31..0] RO (@ 0x400077FC) EXTI Size ID register </i>
//    <loc> ( (unsigned int)((DAC_SIDR >> 0) & 0xFFFFFFFF) ) </loc>
//    <item> SFDITEM_FIELD__DAC_SIDR_SID </item>
//  </rtree>
//  


// ----------------------------------  Peripheral View: DAC  --------------------------------------
// SVD Line: 23073

//  <view> DAC
//    <name> DAC </name>
//    <item> SFDITEM_REG__DAC_DAC_CR </item>
//    <item> SFDITEM_REG__DAC_DAC_SWTRGR </item>
//    <item> SFDITEM_REG__DAC_DAC_DHR12R1 </item>
//    <item> SFDITEM_REG__DAC_DAC_DHR12L1 </item>
//    <item> SFDITEM_REG__DAC_DAC_DHR8R1 </item>
//    <item> SFDITEM_REG__DAC_DAC_DHR12R2 </item>
//    <item> SFDITEM_REG__DAC_DAC_DHR12L2 </item>
//    <item> SFDITEM_REG__DAC_DAC_DHR8R2 </item>
//    <item> SFDITEM_REG__DAC_DAC_DHR12RD </item>
//    <item> SFDITEM_REG__DAC_DAC_DHR12LD </item>
//    <item> SFDITEM_REG__DAC_DAC_DHR8RD </item>
//    <item> SFDITEM_REG__DAC_DAC_DOR1 </item>
//    <item> SFDITEM_REG__DAC_DAC_DOR2 </item>
//    <item> SFDITEM_REG__DAC_DAC_SR </item>
//    <item> SFDITEM_REG__DAC_DAC_CCR </item>
//    <item> SFDITEM_REG__DAC_DAC_MCR </item>
//    <item> SFDITEM_REG__DAC_DAC_SHSR1 </item>
//    <item> SFDITEM_REG__DAC_DAC_SHSR2 </item>
//    <item> SFDITEM_REG__DAC_DAC_SHHR </item>
//    <item> SFDITEM_REG__DAC_DAC_SHRR </item>
//    <item> SFDITEM_REG__DAC_IP_HWCFGR0 </item>
//    <item> SFDITEM_REG__DAC_VERR </item>
//    <item> SFDITEM_REG__DAC_IPIDR </item>
//    <item> SFDITEM_REG__DAC_SIDR </item>
//  </view>
//  


// -----------------------------  Register Item Address: I2C1_CR1  --------------------------------
// SVD Line: 23870

unsigned int I2C1_CR1 __AT (0x40005400);



// ---------------------------------  Field Item: I2C1_CR1_PE  ------------------------------------
// SVD Line: 23879

//  <item> SFDITEM_FIELD__I2C1_CR1_PE
//    <name> PE </name>
//    <rw> 
//    <i> [Bit 0] RW (@ 0x40005400) Peripheral enable </i>
//    <check> 
//      <loc> ( (unsigned int) I2C1_CR1 ) </loc>
//      <o.0..0> PE
//    </check>
//  </item>
//  


// --------------------------------  Field Item: I2C1_CR1_TXIE  -----------------------------------
// SVD Line: 23885

//  <item> SFDITEM_FIELD__I2C1_CR1_TXIE
//    <name> TXIE </name>
//    <rw> 
//    <i> [Bit 1] RW (@ 0x40005400) TX Interrupt enable </i>
//    <check> 
//      <loc> ( (unsigned int) I2C1_CR1 ) </loc>
//      <o.1..1> TXIE
//    </check>
//  </item>
//  


// --------------------------------  Field Item: I2C1_CR1_RXIE  -----------------------------------
// SVD Line: 23891

//  <item> SFDITEM_FIELD__I2C1_CR1_RXIE
//    <name> RXIE </name>
//    <rw> 
//    <i> [Bit 2] RW (@ 0x40005400) RX Interrupt enable </i>
//    <check> 
//      <loc> ( (unsigned int) I2C1_CR1 ) </loc>
//      <o.2..2> RXIE
//    </check>
//  </item>
//  


// -------------------------------  Field Item: I2C1_CR1_ADDRIE  ----------------------------------
// SVD Line: 23897

//  <item> SFDITEM_FIELD__I2C1_CR1_ADDRIE
//    <name> ADDRIE </name>
//    <rw> 
//    <i> [Bit 3] RW (@ 0x40005400) Address match interrupt enable (slave  only) </i>
//    <check> 
//      <loc> ( (unsigned int) I2C1_CR1 ) </loc>
//      <o.3..3> ADDRIE
//    </check>
//  </item>
//  


// -------------------------------  Field Item: I2C1_CR1_NACKIE  ----------------------------------
// SVD Line: 23904

//  <item> SFDITEM_FIELD__I2C1_CR1_NACKIE
//    <name> NACKIE </name>
//    <rw> 
//    <i> [Bit 4] RW (@ 0x40005400) Not acknowledge received interrupt  enable </i>
//    <check> 
//      <loc> ( (unsigned int) I2C1_CR1 ) </loc>
//      <o.4..4> NACKIE
//    </check>
//  </item>
//  


// -------------------------------  Field Item: I2C1_CR1_STOPIE  ----------------------------------
// SVD Line: 23911

//  <item> SFDITEM_FIELD__I2C1_CR1_STOPIE
//    <name> STOPIE </name>
//    <rw> 
//    <i> [Bit 5] RW (@ 0x40005400) STOP detection Interrupt  enable </i>
//    <check> 
//      <loc> ( (unsigned int) I2C1_CR1 ) </loc>
//      <o.5..5> STOPIE
//    </check>
//  </item>
//  


// --------------------------------  Field Item: I2C1_CR1_TCIE  -----------------------------------
// SVD Line: 23918

//  <item> SFDITEM_FIELD__I2C1_CR1_TCIE
//    <name> TCIE </name>
//    <rw> 
//    <i> [Bit 6] RW (@ 0x40005400) Transfer Complete interrupt  enable </i>
//    <check> 
//      <loc> ( (unsigned int) I2C1_CR1 ) </loc>
//      <o.6..6> TCIE
//    </check>
//  </item>
//  


// -------------------------------  Field Item: I2C1_CR1_ERRIE  -----------------------------------
// SVD Line: 23925

//  <item> SFDITEM_FIELD__I2C1_CR1_ERRIE
//    <name> ERRIE </name>
//    <rw> 
//    <i> [Bit 7] RW (@ 0x40005400) Error interrupts enable </i>
//    <check> 
//      <loc> ( (unsigned int) I2C1_CR1 ) </loc>
//      <o.7..7> ERRIE
//    </check>
//  </item>
//  


// --------------------------------  Field Item: I2C1_CR1_DNF  ------------------------------------
// SVD Line: 23931

//  <item> SFDITEM_FIELD__I2C1_CR1_DNF
//    <name> DNF </name>
//    <rw> 
//    <i> [Bits 11..8] RW (@ 0x40005400) Digital noise filter </i>
//    <edit> 
//      <loc> ( (unsigned char)((I2C1_CR1 >> 8) & 0xF), ((I2C1_CR1 = (I2C1_CR1 & ~(0xFUL << 8 )) | ((unsigned long)(Gui_u8:GuiVal & 0xF) << 8 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -------------------------------  Field Item: I2C1_CR1_ANFOFF  ----------------------------------
// SVD Line: 23937

//  <item> SFDITEM_FIELD__I2C1_CR1_ANFOFF
//    <name> ANFOFF </name>
//    <rw> 
//    <i> [Bit 12] RW (@ 0x40005400) Analog noise filter OFF </i>
//    <check> 
//      <loc> ( (unsigned int) I2C1_CR1 ) </loc>
//      <o.12..12> ANFOFF
//    </check>
//  </item>
//  


// ------------------------------  Field Item: I2C1_CR1_TXDMAEN  ----------------------------------
// SVD Line: 23943

//  <item> SFDITEM_FIELD__I2C1_CR1_TXDMAEN
//    <name> TXDMAEN </name>
//    <rw> 
//    <i> [Bit 14] RW (@ 0x40005400) DMA transmission requests  enable </i>
//    <check> 
//      <loc> ( (unsigned int) I2C1_CR1 ) </loc>
//      <o.14..14> TXDMAEN
//    </check>
//  </item>
//  


// ------------------------------  Field Item: I2C1_CR1_RXDMAEN  ----------------------------------
// SVD Line: 23950

//  <item> SFDITEM_FIELD__I2C1_CR1_RXDMAEN
//    <name> RXDMAEN </name>
//    <rw> 
//    <i> [Bit 15] RW (@ 0x40005400) DMA reception requests  enable </i>
//    <check> 
//      <loc> ( (unsigned int) I2C1_CR1 ) </loc>
//      <o.15..15> RXDMAEN
//    </check>
//  </item>
//  


// --------------------------------  Field Item: I2C1_CR1_SBC  ------------------------------------
// SVD Line: 23957

//  <item> SFDITEM_FIELD__I2C1_CR1_SBC
//    <name> SBC </name>
//    <rw> 
//    <i> [Bit 16] RW (@ 0x40005400) Slave byte control </i>
//    <check> 
//      <loc> ( (unsigned int) I2C1_CR1 ) </loc>
//      <o.16..16> SBC
//    </check>
//  </item>
//  


// -----------------------------  Field Item: I2C1_CR1_NOSTRETCH  ---------------------------------
// SVD Line: 23963

//  <item> SFDITEM_FIELD__I2C1_CR1_NOSTRETCH
//    <name> NOSTRETCH </name>
//    <rw> 
//    <i> [Bit 17] RW (@ 0x40005400) Clock stretching disable </i>
//    <check> 
//      <loc> ( (unsigned int) I2C1_CR1 ) </loc>
//      <o.17..17> NOSTRETCH
//    </check>
//  </item>
//  


// -------------------------------  Field Item: I2C1_CR1_WUPEN  -----------------------------------
// SVD Line: 23969

//  <item> SFDITEM_FIELD__I2C1_CR1_WUPEN
//    <name> WUPEN </name>
//    <rw> 
//    <i> [Bit 18] RW (@ 0x40005400) Wakeup from STOP enable </i>
//    <check> 
//      <loc> ( (unsigned int) I2C1_CR1 ) </loc>
//      <o.18..18> WUPEN
//    </check>
//  </item>
//  


// --------------------------------  Field Item: I2C1_CR1_GCEN  -----------------------------------
// SVD Line: 23975

//  <item> SFDITEM_FIELD__I2C1_CR1_GCEN
//    <name> GCEN </name>
//    <rw> 
//    <i> [Bit 19] RW (@ 0x40005400) General call enable </i>
//    <check> 
//      <loc> ( (unsigned int) I2C1_CR1 ) </loc>
//      <o.19..19> GCEN
//    </check>
//  </item>
//  


// -------------------------------  Field Item: I2C1_CR1_SMBHEN  ----------------------------------
// SVD Line: 23981

//  <item> SFDITEM_FIELD__I2C1_CR1_SMBHEN
//    <name> SMBHEN </name>
//    <rw> 
//    <i> [Bit 20] RW (@ 0x40005400) SMBus Host address enable </i>
//    <check> 
//      <loc> ( (unsigned int) I2C1_CR1 ) </loc>
//      <o.20..20> SMBHEN
//    </check>
//  </item>
//  


// -------------------------------  Field Item: I2C1_CR1_SMBDEN  ----------------------------------
// SVD Line: 23987

//  <item> SFDITEM_FIELD__I2C1_CR1_SMBDEN
//    <name> SMBDEN </name>
//    <rw> 
//    <i> [Bit 21] RW (@ 0x40005400) SMBus Device Default address  enable </i>
//    <check> 
//      <loc> ( (unsigned int) I2C1_CR1 ) </loc>
//      <o.21..21> SMBDEN
//    </check>
//  </item>
//  


// ------------------------------  Field Item: I2C1_CR1_ALERTEN  ----------------------------------
// SVD Line: 23994

//  <item> SFDITEM_FIELD__I2C1_CR1_ALERTEN
//    <name> ALERTEN </name>
//    <rw> 
//    <i> [Bit 22] RW (@ 0x40005400) SMBUS alert enable </i>
//    <check> 
//      <loc> ( (unsigned int) I2C1_CR1 ) </loc>
//      <o.22..22> ALERTEN
//    </check>
//  </item>
//  


// -------------------------------  Field Item: I2C1_CR1_PECEN  -----------------------------------
// SVD Line: 24000

//  <item> SFDITEM_FIELD__I2C1_CR1_PECEN
//    <name> PECEN </name>
//    <rw> 
//    <i> [Bit 23] RW (@ 0x40005400) PEC enable </i>
//    <check> 
//      <loc> ( (unsigned int) I2C1_CR1 ) </loc>
//      <o.23..23> PECEN
//    </check>
//  </item>
//  


// --------------------------------  Register RTree: I2C1_CR1  ------------------------------------
// SVD Line: 23870

//  <rtree> SFDITEM_REG__I2C1_CR1
//    <name> CR1 </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x40005400) Control register 1 </i>
//    <loc> ( (unsigned int)((I2C1_CR1 >> 0) & 0xFFFFFFFF), ((I2C1_CR1 = (I2C1_CR1 & ~(0xFFDFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFDFFF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__I2C1_CR1_PE </item>
//    <item> SFDITEM_FIELD__I2C1_CR1_TXIE </item>
//    <item> SFDITEM_FIELD__I2C1_CR1_RXIE </item>
//    <item> SFDITEM_FIELD__I2C1_CR1_ADDRIE </item>
//    <item> SFDITEM_FIELD__I2C1_CR1_NACKIE </item>
//    <item> SFDITEM_FIELD__I2C1_CR1_STOPIE </item>
//    <item> SFDITEM_FIELD__I2C1_CR1_TCIE </item>
//    <item> SFDITEM_FIELD__I2C1_CR1_ERRIE </item>
//    <item> SFDITEM_FIELD__I2C1_CR1_DNF </item>
//    <item> SFDITEM_FIELD__I2C1_CR1_ANFOFF </item>
//    <item> SFDITEM_FIELD__I2C1_CR1_TXDMAEN </item>
//    <item> SFDITEM_FIELD__I2C1_CR1_RXDMAEN </item>
//    <item> SFDITEM_FIELD__I2C1_CR1_SBC </item>
//    <item> SFDITEM_FIELD__I2C1_CR1_NOSTRETCH </item>
//    <item> SFDITEM_FIELD__I2C1_CR1_WUPEN </item>
//    <item> SFDITEM_FIELD__I2C1_CR1_GCEN </item>
//    <item> SFDITEM_FIELD__I2C1_CR1_SMBHEN </item>
//    <item> SFDITEM_FIELD__I2C1_CR1_SMBDEN </item>
//    <item> SFDITEM_FIELD__I2C1_CR1_ALERTEN </item>
//    <item> SFDITEM_FIELD__I2C1_CR1_PECEN </item>
//  </rtree>
//  


// -----------------------------  Register Item Address: I2C1_CR2  --------------------------------
// SVD Line: 24008

unsigned int I2C1_CR2 __AT (0x40005404);



// ------------------------------  Field Item: I2C1_CR2_PECBYTE  ----------------------------------
// SVD Line: 24017

//  <item> SFDITEM_FIELD__I2C1_CR2_PECBYTE
//    <name> PECBYTE </name>
//    <rw> 
//    <i> [Bit 26] RW (@ 0x40005404) Packet error checking byte </i>
//    <check> 
//      <loc> ( (unsigned int) I2C1_CR2 ) </loc>
//      <o.26..26> PECBYTE
//    </check>
//  </item>
//  


// ------------------------------  Field Item: I2C1_CR2_AUTOEND  ----------------------------------
// SVD Line: 24023

//  <item> SFDITEM_FIELD__I2C1_CR2_AUTOEND
//    <name> AUTOEND </name>
//    <rw> 
//    <i> [Bit 25] RW (@ 0x40005404) Automatic end mode (master  mode) </i>
//    <check> 
//      <loc> ( (unsigned int) I2C1_CR2 ) </loc>
//      <o.25..25> AUTOEND
//    </check>
//  </item>
//  


// -------------------------------  Field Item: I2C1_CR2_RELOAD  ----------------------------------
// SVD Line: 24030

//  <item> SFDITEM_FIELD__I2C1_CR2_RELOAD
//    <name> RELOAD </name>
//    <rw> 
//    <i> [Bit 24] RW (@ 0x40005404) NBYTES reload mode </i>
//    <check> 
//      <loc> ( (unsigned int) I2C1_CR2 ) </loc>
//      <o.24..24> RELOAD
//    </check>
//  </item>
//  


// -------------------------------  Field Item: I2C1_CR2_NBYTES  ----------------------------------
// SVD Line: 24036

//  <item> SFDITEM_FIELD__I2C1_CR2_NBYTES
//    <name> NBYTES </name>
//    <rw> 
//    <i> [Bits 23..16] RW (@ 0x40005404) Number of bytes </i>
//    <edit> 
//      <loc> ( (unsigned char)((I2C1_CR2 >> 16) & 0xFF), ((I2C1_CR2 = (I2C1_CR2 & ~(0xFFUL << 16 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFF) << 16 ) ) )) </loc>
//    </edit>
//  </item>
//  


// --------------------------------  Field Item: I2C1_CR2_NACK  -----------------------------------
// SVD Line: 24042

//  <item> SFDITEM_FIELD__I2C1_CR2_NACK
//    <name> NACK </name>
//    <rw> 
//    <i> [Bit 15] RW (@ 0x40005404) NACK generation (slave  mode) </i>
//    <check> 
//      <loc> ( (unsigned int) I2C1_CR2 ) </loc>
//      <o.15..15> NACK
//    </check>
//  </item>
//  


// --------------------------------  Field Item: I2C1_CR2_STOP  -----------------------------------
// SVD Line: 24049

//  <item> SFDITEM_FIELD__I2C1_CR2_STOP
//    <name> STOP </name>
//    <rw> 
//    <i> [Bit 14] RW (@ 0x40005404) Stop generation (master  mode) </i>
//    <check> 
//      <loc> ( (unsigned int) I2C1_CR2 ) </loc>
//      <o.14..14> STOP
//    </check>
//  </item>
//  


// -------------------------------  Field Item: I2C1_CR2_START  -----------------------------------
// SVD Line: 24056

//  <item> SFDITEM_FIELD__I2C1_CR2_START
//    <name> START </name>
//    <rw> 
//    <i> [Bit 13] RW (@ 0x40005404) Start generation </i>
//    <check> 
//      <loc> ( (unsigned int) I2C1_CR2 ) </loc>
//      <o.13..13> START
//    </check>
//  </item>
//  


// ------------------------------  Field Item: I2C1_CR2_HEAD10R  ----------------------------------
// SVD Line: 24062

//  <item> SFDITEM_FIELD__I2C1_CR2_HEAD10R
//    <name> HEAD10R </name>
//    <rw> 
//    <i> [Bit 12] RW (@ 0x40005404) 10-bit address header only read  direction (master receiver mode) </i>
//    <check> 
//      <loc> ( (unsigned int) I2C1_CR2 ) </loc>
//      <o.12..12> HEAD10R
//    </check>
//  </item>
//  


// -------------------------------  Field Item: I2C1_CR2_ADD10  -----------------------------------
// SVD Line: 24069

//  <item> SFDITEM_FIELD__I2C1_CR2_ADD10
//    <name> ADD10 </name>
//    <rw> 
//    <i> [Bit 11] RW (@ 0x40005404) 10-bit addressing mode (master  mode) </i>
//    <check> 
//      <loc> ( (unsigned int) I2C1_CR2 ) </loc>
//      <o.11..11> ADD10
//    </check>
//  </item>
//  


// -------------------------------  Field Item: I2C1_CR2_RD_WRN  ----------------------------------
// SVD Line: 24076

//  <item> SFDITEM_FIELD__I2C1_CR2_RD_WRN
//    <name> RD_WRN </name>
//    <rw> 
//    <i> [Bit 10] RW (@ 0x40005404) Transfer direction (master  mode) </i>
//    <check> 
//      <loc> ( (unsigned int) I2C1_CR2 ) </loc>
//      <o.10..10> RD_WRN
//    </check>
//  </item>
//  


// --------------------------------  Field Item: I2C1_CR2_SADD  -----------------------------------
// SVD Line: 24083

//  <item> SFDITEM_FIELD__I2C1_CR2_SADD
//    <name> SADD </name>
//    <rw> 
//    <i> [Bits 9..0] RW (@ 0x40005404) Slave address bit (master  mode) </i>
//    <edit> 
//      <loc> ( (unsigned short)((I2C1_CR2 >> 0) & 0x3FF), ((I2C1_CR2 = (I2C1_CR2 & ~(0x3FFUL << 0 )) | ((unsigned long)(Gui_u16:GuiVal & 0x3FF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// --------------------------------  Register RTree: I2C1_CR2  ------------------------------------
// SVD Line: 24008

//  <rtree> SFDITEM_REG__I2C1_CR2
//    <name> CR2 </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x40005404) Control register 2 </i>
//    <loc> ( (unsigned int)((I2C1_CR2 >> 0) & 0xFFFFFFFF), ((I2C1_CR2 = (I2C1_CR2 & ~(0x7FFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0x7FFFFFF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__I2C1_CR2_PECBYTE </item>
//    <item> SFDITEM_FIELD__I2C1_CR2_AUTOEND </item>
//    <item> SFDITEM_FIELD__I2C1_CR2_RELOAD </item>
//    <item> SFDITEM_FIELD__I2C1_CR2_NBYTES </item>
//    <item> SFDITEM_FIELD__I2C1_CR2_NACK </item>
//    <item> SFDITEM_FIELD__I2C1_CR2_STOP </item>
//    <item> SFDITEM_FIELD__I2C1_CR2_START </item>
//    <item> SFDITEM_FIELD__I2C1_CR2_HEAD10R </item>
//    <item> SFDITEM_FIELD__I2C1_CR2_ADD10 </item>
//    <item> SFDITEM_FIELD__I2C1_CR2_RD_WRN </item>
//    <item> SFDITEM_FIELD__I2C1_CR2_SADD </item>
//  </rtree>
//  


// ----------------------------  Register Item Address: I2C1_OAR1  --------------------------------
// SVD Line: 24092

unsigned int I2C1_OAR1 __AT (0x40005408);



// -------------------------------  Field Item: I2C1_OAR1_OA1_0  ----------------------------------
// SVD Line: 24101

//  <item> SFDITEM_FIELD__I2C1_OAR1_OA1_0
//    <name> OA1_0 </name>
//    <rw> 
//    <i> [Bit 0] RW (@ 0x40005408) Interface address </i>
//    <check> 
//      <loc> ( (unsigned int) I2C1_OAR1 ) </loc>
//      <o.0..0> OA1_0
//    </check>
//  </item>
//  


// ------------------------------  Field Item: I2C1_OAR1_OA1_7_1  ---------------------------------
// SVD Line: 24107

//  <item> SFDITEM_FIELD__I2C1_OAR1_OA1_7_1
//    <name> OA1_7_1 </name>
//    <rw> 
//    <i> [Bits 7..1] RW (@ 0x40005408) Interface address </i>
//    <edit> 
//      <loc> ( (unsigned char)((I2C1_OAR1 >> 1) & 0x7F), ((I2C1_OAR1 = (I2C1_OAR1 & ~(0x7FUL << 1 )) | ((unsigned long)(Gui_u8:GuiVal & 0x7F) << 1 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ------------------------------  Field Item: I2C1_OAR1_OA1_8_9  ---------------------------------
// SVD Line: 24113

//  <item> SFDITEM_FIELD__I2C1_OAR1_OA1_8_9
//    <name> OA1_8_9 </name>
//    <rw> 
//    <i> [Bits 9..8] RW (@ 0x40005408) Interface address </i>
//    <edit> 
//      <loc> ( (unsigned char)((I2C1_OAR1 >> 8) & 0x3), ((I2C1_OAR1 = (I2C1_OAR1 & ~(0x3UL << 8 )) | ((unsigned long)(Gui_u8:GuiVal & 0x3) << 8 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ------------------------------  Field Item: I2C1_OAR1_OA1MODE  ---------------------------------
// SVD Line: 24119

//  <item> SFDITEM_FIELD__I2C1_OAR1_OA1MODE
//    <name> OA1MODE </name>
//    <rw> 
//    <i> [Bit 10] RW (@ 0x40005408) Own Address 1 10-bit mode </i>
//    <check> 
//      <loc> ( (unsigned int) I2C1_OAR1 ) </loc>
//      <o.10..10> OA1MODE
//    </check>
//  </item>
//  


// -------------------------------  Field Item: I2C1_OAR1_OA1EN  ----------------------------------
// SVD Line: 24125

//  <item> SFDITEM_FIELD__I2C1_OAR1_OA1EN
//    <name> OA1EN </name>
//    <rw> 
//    <i> [Bit 15] RW (@ 0x40005408) Own Address 1 enable </i>
//    <check> 
//      <loc> ( (unsigned int) I2C1_OAR1 ) </loc>
//      <o.15..15> OA1EN
//    </check>
//  </item>
//  


// --------------------------------  Register RTree: I2C1_OAR1  -----------------------------------
// SVD Line: 24092

//  <rtree> SFDITEM_REG__I2C1_OAR1
//    <name> OAR1 </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x40005408) Own address register 1 </i>
//    <loc> ( (unsigned int)((I2C1_OAR1 >> 0) & 0xFFFFFFFF), ((I2C1_OAR1 = (I2C1_OAR1 & ~(0x87FFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0x87FF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__I2C1_OAR1_OA1_0 </item>
//    <item> SFDITEM_FIELD__I2C1_OAR1_OA1_7_1 </item>
//    <item> SFDITEM_FIELD__I2C1_OAR1_OA1_8_9 </item>
//    <item> SFDITEM_FIELD__I2C1_OAR1_OA1MODE </item>
//    <item> SFDITEM_FIELD__I2C1_OAR1_OA1EN </item>
//  </rtree>
//  


// ----------------------------  Register Item Address: I2C1_OAR2  --------------------------------
// SVD Line: 24133

unsigned int I2C1_OAR2 __AT (0x4000540C);



// --------------------------------  Field Item: I2C1_OAR2_OA2  -----------------------------------
// SVD Line: 24142

//  <item> SFDITEM_FIELD__I2C1_OAR2_OA2
//    <name> OA2 </name>
//    <rw> 
//    <i> [Bits 7..1] RW (@ 0x4000540C) Interface address </i>
//    <edit> 
//      <loc> ( (unsigned char)((I2C1_OAR2 >> 1) & 0x7F), ((I2C1_OAR2 = (I2C1_OAR2 & ~(0x7FUL << 1 )) | ((unsigned long)(Gui_u8:GuiVal & 0x7F) << 1 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ------------------------------  Field Item: I2C1_OAR2_OA2MSK  ----------------------------------
// SVD Line: 24148

//  <item> SFDITEM_FIELD__I2C1_OAR2_OA2MSK
//    <name> OA2MSK </name>
//    <rw> 
//    <i> [Bits 10..8] RW (@ 0x4000540C) Own Address 2 masks </i>
//    <edit> 
//      <loc> ( (unsigned char)((I2C1_OAR2 >> 8) & 0x7), ((I2C1_OAR2 = (I2C1_OAR2 & ~(0x7UL << 8 )) | ((unsigned long)(Gui_u8:GuiVal & 0x7) << 8 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -------------------------------  Field Item: I2C1_OAR2_OA2EN  ----------------------------------
// SVD Line: 24154

//  <item> SFDITEM_FIELD__I2C1_OAR2_OA2EN
//    <name> OA2EN </name>
//    <rw> 
//    <i> [Bit 15] RW (@ 0x4000540C) Own Address 2 enable </i>
//    <check> 
//      <loc> ( (unsigned int) I2C1_OAR2 ) </loc>
//      <o.15..15> OA2EN
//    </check>
//  </item>
//  


// --------------------------------  Register RTree: I2C1_OAR2  -----------------------------------
// SVD Line: 24133

//  <rtree> SFDITEM_REG__I2C1_OAR2
//    <name> OAR2 </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x4000540C) Own address register 2 </i>
//    <loc> ( (unsigned int)((I2C1_OAR2 >> 0) & 0xFFFFFFFF), ((I2C1_OAR2 = (I2C1_OAR2 & ~(0x87FEUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0x87FE) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__I2C1_OAR2_OA2 </item>
//    <item> SFDITEM_FIELD__I2C1_OAR2_OA2MSK </item>
//    <item> SFDITEM_FIELD__I2C1_OAR2_OA2EN </item>
//  </rtree>
//  


// ---------------------------  Register Item Address: I2C1_TIMINGR  ------------------------------
// SVD Line: 24162

unsigned int I2C1_TIMINGR __AT (0x40005410);



// ------------------------------  Field Item: I2C1_TIMINGR_SCLL  ---------------------------------
// SVD Line: 24171

//  <item> SFDITEM_FIELD__I2C1_TIMINGR_SCLL
//    <name> SCLL </name>
//    <rw> 
//    <i> [Bits 7..0] RW (@ 0x40005410) SCL low period (master  mode) </i>
//    <edit> 
//      <loc> ( (unsigned char)((I2C1_TIMINGR >> 0) & 0xFF), ((I2C1_TIMINGR = (I2C1_TIMINGR & ~(0xFFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ------------------------------  Field Item: I2C1_TIMINGR_SCLH  ---------------------------------
// SVD Line: 24178

//  <item> SFDITEM_FIELD__I2C1_TIMINGR_SCLH
//    <name> SCLH </name>
//    <rw> 
//    <i> [Bits 15..8] RW (@ 0x40005410) SCL high period (master  mode) </i>
//    <edit> 
//      <loc> ( (unsigned char)((I2C1_TIMINGR >> 8) & 0xFF), ((I2C1_TIMINGR = (I2C1_TIMINGR & ~(0xFFUL << 8 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFF) << 8 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -----------------------------  Field Item: I2C1_TIMINGR_SDADEL  --------------------------------
// SVD Line: 24185

//  <item> SFDITEM_FIELD__I2C1_TIMINGR_SDADEL
//    <name> SDADEL </name>
//    <rw> 
//    <i> [Bits 19..16] RW (@ 0x40005410) Data hold time </i>
//    <edit> 
//      <loc> ( (unsigned char)((I2C1_TIMINGR >> 16) & 0xF), ((I2C1_TIMINGR = (I2C1_TIMINGR & ~(0xFUL << 16 )) | ((unsigned long)(Gui_u8:GuiVal & 0xF) << 16 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -----------------------------  Field Item: I2C1_TIMINGR_SCLDEL  --------------------------------
// SVD Line: 24191

//  <item> SFDITEM_FIELD__I2C1_TIMINGR_SCLDEL
//    <name> SCLDEL </name>
//    <rw> 
//    <i> [Bits 23..20] RW (@ 0x40005410) Data setup time </i>
//    <edit> 
//      <loc> ( (unsigned char)((I2C1_TIMINGR >> 20) & 0xF), ((I2C1_TIMINGR = (I2C1_TIMINGR & ~(0xFUL << 20 )) | ((unsigned long)(Gui_u8:GuiVal & 0xF) << 20 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -----------------------------  Field Item: I2C1_TIMINGR_PRESC  ---------------------------------
// SVD Line: 24197

//  <item> SFDITEM_FIELD__I2C1_TIMINGR_PRESC
//    <name> PRESC </name>
//    <rw> 
//    <i> [Bits 31..28] RW (@ 0x40005410) Timing prescaler </i>
//    <edit> 
//      <loc> ( (unsigned char)((I2C1_TIMINGR >> 28) & 0xF), ((I2C1_TIMINGR = (I2C1_TIMINGR & ~(0xFUL << 28 )) | ((unsigned long)(Gui_u8:GuiVal & 0xF) << 28 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ------------------------------  Register RTree: I2C1_TIMINGR  ----------------------------------
// SVD Line: 24162

//  <rtree> SFDITEM_REG__I2C1_TIMINGR
//    <name> TIMINGR </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x40005410) Timing register </i>
//    <loc> ( (unsigned int)((I2C1_TIMINGR >> 0) & 0xFFFFFFFF), ((I2C1_TIMINGR = (I2C1_TIMINGR & ~(0xF0FFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xF0FFFFFF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__I2C1_TIMINGR_SCLL </item>
//    <item> SFDITEM_FIELD__I2C1_TIMINGR_SCLH </item>
//    <item> SFDITEM_FIELD__I2C1_TIMINGR_SDADEL </item>
//    <item> SFDITEM_FIELD__I2C1_TIMINGR_SCLDEL </item>
//    <item> SFDITEM_FIELD__I2C1_TIMINGR_PRESC </item>
//  </rtree>
//  


// --------------------------  Register Item Address: I2C1_TIMEOUTR  ------------------------------
// SVD Line: 24205

unsigned int I2C1_TIMEOUTR __AT (0x40005414);



// ---------------------------  Field Item: I2C1_TIMEOUTR_TIMEOUTA  -------------------------------
// SVD Line: 24214

//  <item> SFDITEM_FIELD__I2C1_TIMEOUTR_TIMEOUTA
//    <name> TIMEOUTA </name>
//    <rw> 
//    <i> [Bits 11..0] RW (@ 0x40005414) Bus timeout A </i>
//    <edit> 
//      <loc> ( (unsigned short)((I2C1_TIMEOUTR >> 0) & 0xFFF), ((I2C1_TIMEOUTR = (I2C1_TIMEOUTR & ~(0xFFFUL << 0 )) | ((unsigned long)(Gui_u16:GuiVal & 0xFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -----------------------------  Field Item: I2C1_TIMEOUTR_TIDLE  --------------------------------
// SVD Line: 24220

//  <item> SFDITEM_FIELD__I2C1_TIMEOUTR_TIDLE
//    <name> TIDLE </name>
//    <rw> 
//    <i> [Bit 12] RW (@ 0x40005414) Idle clock timeout  detection </i>
//    <check> 
//      <loc> ( (unsigned int) I2C1_TIMEOUTR ) </loc>
//      <o.12..12> TIDLE
//    </check>
//  </item>
//  


// ---------------------------  Field Item: I2C1_TIMEOUTR_TIMOUTEN  -------------------------------
// SVD Line: 24227

//  <item> SFDITEM_FIELD__I2C1_TIMEOUTR_TIMOUTEN
//    <name> TIMOUTEN </name>
//    <rw> 
//    <i> [Bit 15] RW (@ 0x40005414) Clock timeout enable </i>
//    <check> 
//      <loc> ( (unsigned int) I2C1_TIMEOUTR ) </loc>
//      <o.15..15> TIMOUTEN
//    </check>
//  </item>
//  


// ---------------------------  Field Item: I2C1_TIMEOUTR_TIMEOUTB  -------------------------------
// SVD Line: 24233

//  <item> SFDITEM_FIELD__I2C1_TIMEOUTR_TIMEOUTB
//    <name> TIMEOUTB </name>
//    <rw> 
//    <i> [Bits 27..16] RW (@ 0x40005414) Bus timeout B </i>
//    <edit> 
//      <loc> ( (unsigned short)((I2C1_TIMEOUTR >> 16) & 0xFFF), ((I2C1_TIMEOUTR = (I2C1_TIMEOUTR & ~(0xFFFUL << 16 )) | ((unsigned long)(Gui_u16:GuiVal & 0xFFF) << 16 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ----------------------------  Field Item: I2C1_TIMEOUTR_TEXTEN  --------------------------------
// SVD Line: 24239

//  <item> SFDITEM_FIELD__I2C1_TIMEOUTR_TEXTEN
//    <name> TEXTEN </name>
//    <rw> 
//    <i> [Bit 31] RW (@ 0x40005414) Extended clock timeout  enable </i>
//    <check> 
//      <loc> ( (unsigned int) I2C1_TIMEOUTR ) </loc>
//      <o.31..31> TEXTEN
//    </check>
//  </item>
//  


// ------------------------------  Register RTree: I2C1_TIMEOUTR  ---------------------------------
// SVD Line: 24205

//  <rtree> SFDITEM_REG__I2C1_TIMEOUTR
//    <name> TIMEOUTR </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x40005414) Status register 1 </i>
//    <loc> ( (unsigned int)((I2C1_TIMEOUTR >> 0) & 0xFFFFFFFF), ((I2C1_TIMEOUTR = (I2C1_TIMEOUTR & ~(0x8FFF9FFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0x8FFF9FFF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__I2C1_TIMEOUTR_TIMEOUTA </item>
//    <item> SFDITEM_FIELD__I2C1_TIMEOUTR_TIDLE </item>
//    <item> SFDITEM_FIELD__I2C1_TIMEOUTR_TIMOUTEN </item>
//    <item> SFDITEM_FIELD__I2C1_TIMEOUTR_TIMEOUTB </item>
//    <item> SFDITEM_FIELD__I2C1_TIMEOUTR_TEXTEN </item>
//  </rtree>
//  


// -----------------------------  Register Item Address: I2C1_ISR  --------------------------------
// SVD Line: 24248

unsigned int I2C1_ISR __AT (0x40005418);



// ------------------------------  Field Item: I2C1_ISR_ADDCODE  ----------------------------------
// SVD Line: 24256

//  <item> SFDITEM_FIELD__I2C1_ISR_ADDCODE
//    <name> ADDCODE </name>
//    <r> 
//    <i> [Bits 23..17] RO (@ 0x40005418) Address match code (Slave  mode) </i>
//    <edit> 
//      <loc> ( (unsigned char)((I2C1_ISR >> 17) & 0x7F) ) </loc>
//    </edit>
//  </item>
//  


// --------------------------------  Field Item: I2C1_ISR_DIR  ------------------------------------
// SVD Line: 24264

//  <item> SFDITEM_FIELD__I2C1_ISR_DIR
//    <name> DIR </name>
//    <r> 
//    <i> [Bit 16] RO (@ 0x40005418) Transfer direction (Slave  mode) </i>
//    <check> 
//      <loc> ( (unsigned int) I2C1_ISR ) </loc>
//      <o.16..16> DIR
//    </check>
//  </item>
//  


// --------------------------------  Field Item: I2C1_ISR_BUSY  -----------------------------------
// SVD Line: 24272

//  <item> SFDITEM_FIELD__I2C1_ISR_BUSY
//    <name> BUSY </name>
//    <r> 
//    <i> [Bit 15] RO (@ 0x40005418) Bus busy </i>
//    <check> 
//      <loc> ( (unsigned int) I2C1_ISR ) </loc>
//      <o.15..15> BUSY
//    </check>
//  </item>
//  


// -------------------------------  Field Item: I2C1_ISR_ALERT  -----------------------------------
// SVD Line: 24279

//  <item> SFDITEM_FIELD__I2C1_ISR_ALERT
//    <name> ALERT </name>
//    <r> 
//    <i> [Bit 13] RO (@ 0x40005418) SMBus alert </i>
//    <check> 
//      <loc> ( (unsigned int) I2C1_ISR ) </loc>
//      <o.13..13> ALERT
//    </check>
//  </item>
//  


// ------------------------------  Field Item: I2C1_ISR_TIMEOUT  ----------------------------------
// SVD Line: 24286

//  <item> SFDITEM_FIELD__I2C1_ISR_TIMEOUT
//    <name> TIMEOUT </name>
//    <r> 
//    <i> [Bit 12] RO (@ 0x40005418) Timeout or t_low detection  flag </i>
//    <check> 
//      <loc> ( (unsigned int) I2C1_ISR ) </loc>
//      <o.12..12> TIMEOUT
//    </check>
//  </item>
//  


// -------------------------------  Field Item: I2C1_ISR_PECERR  ----------------------------------
// SVD Line: 24294

//  <item> SFDITEM_FIELD__I2C1_ISR_PECERR
//    <name> PECERR </name>
//    <r> 
//    <i> [Bit 11] RO (@ 0x40005418) PEC Error in reception </i>
//    <check> 
//      <loc> ( (unsigned int) I2C1_ISR ) </loc>
//      <o.11..11> PECERR
//    </check>
//  </item>
//  


// --------------------------------  Field Item: I2C1_ISR_OVR  ------------------------------------
// SVD Line: 24301

//  <item> SFDITEM_FIELD__I2C1_ISR_OVR
//    <name> OVR </name>
//    <r> 
//    <i> [Bit 10] RO (@ 0x40005418) Overrun/Underrun (slave  mode) </i>
//    <check> 
//      <loc> ( (unsigned int) I2C1_ISR ) </loc>
//      <o.10..10> OVR
//    </check>
//  </item>
//  


// --------------------------------  Field Item: I2C1_ISR_ARLO  -----------------------------------
// SVD Line: 24309

//  <item> SFDITEM_FIELD__I2C1_ISR_ARLO
//    <name> ARLO </name>
//    <r> 
//    <i> [Bit 9] RO (@ 0x40005418) Arbitration lost </i>
//    <check> 
//      <loc> ( (unsigned int) I2C1_ISR ) </loc>
//      <o.9..9> ARLO
//    </check>
//  </item>
//  


// --------------------------------  Field Item: I2C1_ISR_BERR  -----------------------------------
// SVD Line: 24316

//  <item> SFDITEM_FIELD__I2C1_ISR_BERR
//    <name> BERR </name>
//    <r> 
//    <i> [Bit 8] RO (@ 0x40005418) Bus error </i>
//    <check> 
//      <loc> ( (unsigned int) I2C1_ISR ) </loc>
//      <o.8..8> BERR
//    </check>
//  </item>
//  


// --------------------------------  Field Item: I2C1_ISR_TCR  ------------------------------------
// SVD Line: 24323

//  <item> SFDITEM_FIELD__I2C1_ISR_TCR
//    <name> TCR </name>
//    <r> 
//    <i> [Bit 7] RO (@ 0x40005418) Transfer Complete Reload </i>
//    <check> 
//      <loc> ( (unsigned int) I2C1_ISR ) </loc>
//      <o.7..7> TCR
//    </check>
//  </item>
//  


// ---------------------------------  Field Item: I2C1_ISR_TC  ------------------------------------
// SVD Line: 24330

//  <item> SFDITEM_FIELD__I2C1_ISR_TC
//    <name> TC </name>
//    <r> 
//    <i> [Bit 6] RO (@ 0x40005418) Transfer Complete (master  mode) </i>
//    <check> 
//      <loc> ( (unsigned int) I2C1_ISR ) </loc>
//      <o.6..6> TC
//    </check>
//  </item>
//  


// -------------------------------  Field Item: I2C1_ISR_STOPF  -----------------------------------
// SVD Line: 24338

//  <item> SFDITEM_FIELD__I2C1_ISR_STOPF
//    <name> STOPF </name>
//    <r> 
//    <i> [Bit 5] RO (@ 0x40005418) Stop detection flag </i>
//    <check> 
//      <loc> ( (unsigned int) I2C1_ISR ) </loc>
//      <o.5..5> STOPF
//    </check>
//  </item>
//  


// -------------------------------  Field Item: I2C1_ISR_NACKF  -----------------------------------
// SVD Line: 24345

//  <item> SFDITEM_FIELD__I2C1_ISR_NACKF
//    <name> NACKF </name>
//    <r> 
//    <i> [Bit 4] RO (@ 0x40005418) Not acknowledge received  flag </i>
//    <check> 
//      <loc> ( (unsigned int) I2C1_ISR ) </loc>
//      <o.4..4> NACKF
//    </check>
//  </item>
//  


// --------------------------------  Field Item: I2C1_ISR_ADDR  -----------------------------------
// SVD Line: 24353

//  <item> SFDITEM_FIELD__I2C1_ISR_ADDR
//    <name> ADDR </name>
//    <r> 
//    <i> [Bit 3] RO (@ 0x40005418) Address matched (slave  mode) </i>
//    <check> 
//      <loc> ( (unsigned int) I2C1_ISR ) </loc>
//      <o.3..3> ADDR
//    </check>
//  </item>
//  


// --------------------------------  Field Item: I2C1_ISR_RXNE  -----------------------------------
// SVD Line: 24361

//  <item> SFDITEM_FIELD__I2C1_ISR_RXNE
//    <name> RXNE </name>
//    <r> 
//    <i> [Bit 2] RO (@ 0x40005418) Receive data register not empty  (receivers) </i>
//    <check> 
//      <loc> ( (unsigned int) I2C1_ISR ) </loc>
//      <o.2..2> RXNE
//    </check>
//  </item>
//  


// --------------------------------  Field Item: I2C1_ISR_TXIS  -----------------------------------
// SVD Line: 24369

//  <item> SFDITEM_FIELD__I2C1_ISR_TXIS
//    <name> TXIS </name>
//    <rw> 
//    <i> [Bit 1] RW (@ 0x40005418) Transmit interrupt status  (transmitters) </i>
//    <check> 
//      <loc> ( (unsigned int) I2C1_ISR ) </loc>
//      <o.1..1> TXIS
//    </check>
//  </item>
//  


// --------------------------------  Field Item: I2C1_ISR_TXE  ------------------------------------
// SVD Line: 24377

//  <item> SFDITEM_FIELD__I2C1_ISR_TXE
//    <name> TXE </name>
//    <rw> 
//    <i> [Bit 0] RW (@ 0x40005418) Transmit data register empty  (transmitters) </i>
//    <check> 
//      <loc> ( (unsigned int) I2C1_ISR ) </loc>
//      <o.0..0> TXE
//    </check>
//  </item>
//  


// --------------------------------  Register RTree: I2C1_ISR  ------------------------------------
// SVD Line: 24248

//  <rtree> SFDITEM_REG__I2C1_ISR
//    <name> ISR </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x40005418) Interrupt and Status register </i>
//    <loc> ( (unsigned int)((I2C1_ISR >> 0) & 0xFFFFFFFF), ((I2C1_ISR = (I2C1_ISR & ~(0x3UL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0x3) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__I2C1_ISR_ADDCODE </item>
//    <item> SFDITEM_FIELD__I2C1_ISR_DIR </item>
//    <item> SFDITEM_FIELD__I2C1_ISR_BUSY </item>
//    <item> SFDITEM_FIELD__I2C1_ISR_ALERT </item>
//    <item> SFDITEM_FIELD__I2C1_ISR_TIMEOUT </item>
//    <item> SFDITEM_FIELD__I2C1_ISR_PECERR </item>
//    <item> SFDITEM_FIELD__I2C1_ISR_OVR </item>
//    <item> SFDITEM_FIELD__I2C1_ISR_ARLO </item>
//    <item> SFDITEM_FIELD__I2C1_ISR_BERR </item>
//    <item> SFDITEM_FIELD__I2C1_ISR_TCR </item>
//    <item> SFDITEM_FIELD__I2C1_ISR_TC </item>
//    <item> SFDITEM_FIELD__I2C1_ISR_STOPF </item>
//    <item> SFDITEM_FIELD__I2C1_ISR_NACKF </item>
//    <item> SFDITEM_FIELD__I2C1_ISR_ADDR </item>
//    <item> SFDITEM_FIELD__I2C1_ISR_RXNE </item>
//    <item> SFDITEM_FIELD__I2C1_ISR_TXIS </item>
//    <item> SFDITEM_FIELD__I2C1_ISR_TXE </item>
//  </rtree>
//  


// -----------------------------  Register Item Address: I2C1_ICR  --------------------------------
// SVD Line: 24387

unsigned int I2C1_ICR __AT (0x4000541C);



// ------------------------------  Field Item: I2C1_ICR_ALERTCF  ----------------------------------
// SVD Line: 24396

//  <item> SFDITEM_FIELD__I2C1_ICR_ALERTCF
//    <name> ALERTCF </name>
//    <w> 
//    <i> [Bit 13] WO (@ 0x4000541C) Alert flag clear </i>
//    <check> 
//      <loc> ( (unsigned int) I2C1_ICR ) </loc>
//      <o.13..13> ALERTCF
//    </check>
//  </item>
//  


// ------------------------------  Field Item: I2C1_ICR_TIMOUTCF  ---------------------------------
// SVD Line: 24402

//  <item> SFDITEM_FIELD__I2C1_ICR_TIMOUTCF
//    <name> TIMOUTCF </name>
//    <w> 
//    <i> [Bit 12] WO (@ 0x4000541C) Timeout detection flag  clear </i>
//    <check> 
//      <loc> ( (unsigned int) I2C1_ICR ) </loc>
//      <o.12..12> TIMOUTCF
//    </check>
//  </item>
//  


// -------------------------------  Field Item: I2C1_ICR_PECCF  -----------------------------------
// SVD Line: 24409

//  <item> SFDITEM_FIELD__I2C1_ICR_PECCF
//    <name> PECCF </name>
//    <w> 
//    <i> [Bit 11] WO (@ 0x4000541C) PEC Error flag clear </i>
//    <check> 
//      <loc> ( (unsigned int) I2C1_ICR ) </loc>
//      <o.11..11> PECCF
//    </check>
//  </item>
//  


// -------------------------------  Field Item: I2C1_ICR_OVRCF  -----------------------------------
// SVD Line: 24415

//  <item> SFDITEM_FIELD__I2C1_ICR_OVRCF
//    <name> OVRCF </name>
//    <w> 
//    <i> [Bit 10] WO (@ 0x4000541C) Overrun/Underrun flag  clear </i>
//    <check> 
//      <loc> ( (unsigned int) I2C1_ICR ) </loc>
//      <o.10..10> OVRCF
//    </check>
//  </item>
//  


// -------------------------------  Field Item: I2C1_ICR_ARLOCF  ----------------------------------
// SVD Line: 24422

//  <item> SFDITEM_FIELD__I2C1_ICR_ARLOCF
//    <name> ARLOCF </name>
//    <w> 
//    <i> [Bit 9] WO (@ 0x4000541C) Arbitration lost flag  clear </i>
//    <check> 
//      <loc> ( (unsigned int) I2C1_ICR ) </loc>
//      <o.9..9> ARLOCF
//    </check>
//  </item>
//  


// -------------------------------  Field Item: I2C1_ICR_BERRCF  ----------------------------------
// SVD Line: 24429

//  <item> SFDITEM_FIELD__I2C1_ICR_BERRCF
//    <name> BERRCF </name>
//    <w> 
//    <i> [Bit 8] WO (@ 0x4000541C) Bus error flag clear </i>
//    <check> 
//      <loc> ( (unsigned int) I2C1_ICR ) </loc>
//      <o.8..8> BERRCF
//    </check>
//  </item>
//  


// -------------------------------  Field Item: I2C1_ICR_STOPCF  ----------------------------------
// SVD Line: 24435

//  <item> SFDITEM_FIELD__I2C1_ICR_STOPCF
//    <name> STOPCF </name>
//    <w> 
//    <i> [Bit 5] WO (@ 0x4000541C) Stop detection flag clear </i>
//    <check> 
//      <loc> ( (unsigned int) I2C1_ICR ) </loc>
//      <o.5..5> STOPCF
//    </check>
//  </item>
//  


// -------------------------------  Field Item: I2C1_ICR_NACKCF  ----------------------------------
// SVD Line: 24441

//  <item> SFDITEM_FIELD__I2C1_ICR_NACKCF
//    <name> NACKCF </name>
//    <w> 
//    <i> [Bit 4] WO (@ 0x4000541C) Not Acknowledge flag clear </i>
//    <check> 
//      <loc> ( (unsigned int) I2C1_ICR ) </loc>
//      <o.4..4> NACKCF
//    </check>
//  </item>
//  


// -------------------------------  Field Item: I2C1_ICR_ADDRCF  ----------------------------------
// SVD Line: 24447

//  <item> SFDITEM_FIELD__I2C1_ICR_ADDRCF
//    <name> ADDRCF </name>
//    <w> 
//    <i> [Bit 3] WO (@ 0x4000541C) Address Matched flag clear </i>
//    <check> 
//      <loc> ( (unsigned int) I2C1_ICR ) </loc>
//      <o.3..3> ADDRCF
//    </check>
//  </item>
//  


// --------------------------------  Register RTree: I2C1_ICR  ------------------------------------
// SVD Line: 24387

//  <rtree> SFDITEM_REG__I2C1_ICR
//    <name> ICR </name>
//    <w> 
//    <i> [Bits 31..0] WO (@ 0x4000541C) Interrupt clear register </i>
//    <loc> ( (unsigned int)((I2C1_ICR >> 0) & 0xFFFFFFFF), ((I2C1_ICR = (I2C1_ICR & ~(0x3F38UL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0x3F38) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__I2C1_ICR_ALERTCF </item>
//    <item> SFDITEM_FIELD__I2C1_ICR_TIMOUTCF </item>
//    <item> SFDITEM_FIELD__I2C1_ICR_PECCF </item>
//    <item> SFDITEM_FIELD__I2C1_ICR_OVRCF </item>
//    <item> SFDITEM_FIELD__I2C1_ICR_ARLOCF </item>
//    <item> SFDITEM_FIELD__I2C1_ICR_BERRCF </item>
//    <item> SFDITEM_FIELD__I2C1_ICR_STOPCF </item>
//    <item> SFDITEM_FIELD__I2C1_ICR_NACKCF </item>
//    <item> SFDITEM_FIELD__I2C1_ICR_ADDRCF </item>
//  </rtree>
//  


// ----------------------------  Register Item Address: I2C1_PECR  --------------------------------
// SVD Line: 24455

unsigned int I2C1_PECR __AT (0x40005420);



// --------------------------------  Field Item: I2C1_PECR_PEC  -----------------------------------
// SVD Line: 24464

//  <item> SFDITEM_FIELD__I2C1_PECR_PEC
//    <name> PEC </name>
//    <r> 
//    <i> [Bits 7..0] RO (@ 0x40005420) Packet error checking  register </i>
//    <edit> 
//      <loc> ( (unsigned char)((I2C1_PECR >> 0) & 0xFF) ) </loc>
//    </edit>
//  </item>
//  


// --------------------------------  Register RTree: I2C1_PECR  -----------------------------------
// SVD Line: 24455

//  <rtree> SFDITEM_REG__I2C1_PECR
//    <name> PECR </name>
//    <r> 
//    <i> [Bits 31..0] RO (@ 0x40005420) PEC register </i>
//    <loc> ( (unsigned int)((I2C1_PECR >> 0) & 0xFFFFFFFF) ) </loc>
//    <item> SFDITEM_FIELD__I2C1_PECR_PEC </item>
//  </rtree>
//  


// ----------------------------  Register Item Address: I2C1_RXDR  --------------------------------
// SVD Line: 24473

unsigned int I2C1_RXDR __AT (0x40005424);



// ------------------------------  Field Item: I2C1_RXDR_RXDATA  ----------------------------------
// SVD Line: 24482

//  <item> SFDITEM_FIELD__I2C1_RXDR_RXDATA
//    <name> RXDATA </name>
//    <r> 
//    <i> [Bits 7..0] RO (@ 0x40005424) 8-bit receive data </i>
//    <edit> 
//      <loc> ( (unsigned char)((I2C1_RXDR >> 0) & 0xFF) ) </loc>
//    </edit>
//  </item>
//  


// --------------------------------  Register RTree: I2C1_RXDR  -----------------------------------
// SVD Line: 24473

//  <rtree> SFDITEM_REG__I2C1_RXDR
//    <name> RXDR </name>
//    <r> 
//    <i> [Bits 31..0] RO (@ 0x40005424) Receive data register </i>
//    <loc> ( (unsigned int)((I2C1_RXDR >> 0) & 0xFFFFFFFF) ) </loc>
//    <item> SFDITEM_FIELD__I2C1_RXDR_RXDATA </item>
//  </rtree>
//  


// ----------------------------  Register Item Address: I2C1_TXDR  --------------------------------
// SVD Line: 24490

unsigned int I2C1_TXDR __AT (0x40005428);



// ------------------------------  Field Item: I2C1_TXDR_TXDATA  ----------------------------------
// SVD Line: 24499

//  <item> SFDITEM_FIELD__I2C1_TXDR_TXDATA
//    <name> TXDATA </name>
//    <rw> 
//    <i> [Bits 7..0] RW (@ 0x40005428) 8-bit transmit data </i>
//    <edit> 
//      <loc> ( (unsigned char)((I2C1_TXDR >> 0) & 0xFF), ((I2C1_TXDR = (I2C1_TXDR & ~(0xFFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// --------------------------------  Register RTree: I2C1_TXDR  -----------------------------------
// SVD Line: 24490

//  <rtree> SFDITEM_REG__I2C1_TXDR
//    <name> TXDR </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x40005428) Transmit data register </i>
//    <loc> ( (unsigned int)((I2C1_TXDR >> 0) & 0xFFFFFFFF), ((I2C1_TXDR = (I2C1_TXDR & ~(0xFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__I2C1_TXDR_TXDATA </item>
//  </rtree>
//  


// ----------------------------------  Peripheral View: I2C1  -------------------------------------
// SVD Line: 23854

//  <view> I2C1
//    <name> I2C1 </name>
//    <item> SFDITEM_REG__I2C1_CR1 </item>
//    <item> SFDITEM_REG__I2C1_CR2 </item>
//    <item> SFDITEM_REG__I2C1_OAR1 </item>
//    <item> SFDITEM_REG__I2C1_OAR2 </item>
//    <item> SFDITEM_REG__I2C1_TIMINGR </item>
//    <item> SFDITEM_REG__I2C1_TIMEOUTR </item>
//    <item> SFDITEM_REG__I2C1_ISR </item>
//    <item> SFDITEM_REG__I2C1_ICR </item>
//    <item> SFDITEM_REG__I2C1_PECR </item>
//    <item> SFDITEM_REG__I2C1_RXDR </item>
//    <item> SFDITEM_REG__I2C1_TXDR </item>
//  </view>
//  


// -----------------------------  Register Item Address: I2C2_CR1  --------------------------------
// SVD Line: 23870

unsigned int I2C2_CR1 __AT (0x40005800);



// ---------------------------------  Field Item: I2C2_CR1_PE  ------------------------------------
// SVD Line: 23879

//  <item> SFDITEM_FIELD__I2C2_CR1_PE
//    <name> PE </name>
//    <rw> 
//    <i> [Bit 0] RW (@ 0x40005800) Peripheral enable </i>
//    <check> 
//      <loc> ( (unsigned int) I2C2_CR1 ) </loc>
//      <o.0..0> PE
//    </check>
//  </item>
//  


// --------------------------------  Field Item: I2C2_CR1_TXIE  -----------------------------------
// SVD Line: 23885

//  <item> SFDITEM_FIELD__I2C2_CR1_TXIE
//    <name> TXIE </name>
//    <rw> 
//    <i> [Bit 1] RW (@ 0x40005800) TX Interrupt enable </i>
//    <check> 
//      <loc> ( (unsigned int) I2C2_CR1 ) </loc>
//      <o.1..1> TXIE
//    </check>
//  </item>
//  


// --------------------------------  Field Item: I2C2_CR1_RXIE  -----------------------------------
// SVD Line: 23891

//  <item> SFDITEM_FIELD__I2C2_CR1_RXIE
//    <name> RXIE </name>
//    <rw> 
//    <i> [Bit 2] RW (@ 0x40005800) RX Interrupt enable </i>
//    <check> 
//      <loc> ( (unsigned int) I2C2_CR1 ) </loc>
//      <o.2..2> RXIE
//    </check>
//  </item>
//  


// -------------------------------  Field Item: I2C2_CR1_ADDRIE  ----------------------------------
// SVD Line: 23897

//  <item> SFDITEM_FIELD__I2C2_CR1_ADDRIE
//    <name> ADDRIE </name>
//    <rw> 
//    <i> [Bit 3] RW (@ 0x40005800) Address match interrupt enable (slave  only) </i>
//    <check> 
//      <loc> ( (unsigned int) I2C2_CR1 ) </loc>
//      <o.3..3> ADDRIE
//    </check>
//  </item>
//  


// -------------------------------  Field Item: I2C2_CR1_NACKIE  ----------------------------------
// SVD Line: 23904

//  <item> SFDITEM_FIELD__I2C2_CR1_NACKIE
//    <name> NACKIE </name>
//    <rw> 
//    <i> [Bit 4] RW (@ 0x40005800) Not acknowledge received interrupt  enable </i>
//    <check> 
//      <loc> ( (unsigned int) I2C2_CR1 ) </loc>
//      <o.4..4> NACKIE
//    </check>
//  </item>
//  


// -------------------------------  Field Item: I2C2_CR1_STOPIE  ----------------------------------
// SVD Line: 23911

//  <item> SFDITEM_FIELD__I2C2_CR1_STOPIE
//    <name> STOPIE </name>
//    <rw> 
//    <i> [Bit 5] RW (@ 0x40005800) STOP detection Interrupt  enable </i>
//    <check> 
//      <loc> ( (unsigned int) I2C2_CR1 ) </loc>
//      <o.5..5> STOPIE
//    </check>
//  </item>
//  


// --------------------------------  Field Item: I2C2_CR1_TCIE  -----------------------------------
// SVD Line: 23918

//  <item> SFDITEM_FIELD__I2C2_CR1_TCIE
//    <name> TCIE </name>
//    <rw> 
//    <i> [Bit 6] RW (@ 0x40005800) Transfer Complete interrupt  enable </i>
//    <check> 
//      <loc> ( (unsigned int) I2C2_CR1 ) </loc>
//      <o.6..6> TCIE
//    </check>
//  </item>
//  


// -------------------------------  Field Item: I2C2_CR1_ERRIE  -----------------------------------
// SVD Line: 23925

//  <item> SFDITEM_FIELD__I2C2_CR1_ERRIE
//    <name> ERRIE </name>
//    <rw> 
//    <i> [Bit 7] RW (@ 0x40005800) Error interrupts enable </i>
//    <check> 
//      <loc> ( (unsigned int) I2C2_CR1 ) </loc>
//      <o.7..7> ERRIE
//    </check>
//  </item>
//  


// --------------------------------  Field Item: I2C2_CR1_DNF  ------------------------------------
// SVD Line: 23931

//  <item> SFDITEM_FIELD__I2C2_CR1_DNF
//    <name> DNF </name>
//    <rw> 
//    <i> [Bits 11..8] RW (@ 0x40005800) Digital noise filter </i>
//    <edit> 
//      <loc> ( (unsigned char)((I2C2_CR1 >> 8) & 0xF), ((I2C2_CR1 = (I2C2_CR1 & ~(0xFUL << 8 )) | ((unsigned long)(Gui_u8:GuiVal & 0xF) << 8 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -------------------------------  Field Item: I2C2_CR1_ANFOFF  ----------------------------------
// SVD Line: 23937

//  <item> SFDITEM_FIELD__I2C2_CR1_ANFOFF
//    <name> ANFOFF </name>
//    <rw> 
//    <i> [Bit 12] RW (@ 0x40005800) Analog noise filter OFF </i>
//    <check> 
//      <loc> ( (unsigned int) I2C2_CR1 ) </loc>
//      <o.12..12> ANFOFF
//    </check>
//  </item>
//  


// ------------------------------  Field Item: I2C2_CR1_TXDMAEN  ----------------------------------
// SVD Line: 23943

//  <item> SFDITEM_FIELD__I2C2_CR1_TXDMAEN
//    <name> TXDMAEN </name>
//    <rw> 
//    <i> [Bit 14] RW (@ 0x40005800) DMA transmission requests  enable </i>
//    <check> 
//      <loc> ( (unsigned int) I2C2_CR1 ) </loc>
//      <o.14..14> TXDMAEN
//    </check>
//  </item>
//  


// ------------------------------  Field Item: I2C2_CR1_RXDMAEN  ----------------------------------
// SVD Line: 23950

//  <item> SFDITEM_FIELD__I2C2_CR1_RXDMAEN
//    <name> RXDMAEN </name>
//    <rw> 
//    <i> [Bit 15] RW (@ 0x40005800) DMA reception requests  enable </i>
//    <check> 
//      <loc> ( (unsigned int) I2C2_CR1 ) </loc>
//      <o.15..15> RXDMAEN
//    </check>
//  </item>
//  


// --------------------------------  Field Item: I2C2_CR1_SBC  ------------------------------------
// SVD Line: 23957

//  <item> SFDITEM_FIELD__I2C2_CR1_SBC
//    <name> SBC </name>
//    <rw> 
//    <i> [Bit 16] RW (@ 0x40005800) Slave byte control </i>
//    <check> 
//      <loc> ( (unsigned int) I2C2_CR1 ) </loc>
//      <o.16..16> SBC
//    </check>
//  </item>
//  


// -----------------------------  Field Item: I2C2_CR1_NOSTRETCH  ---------------------------------
// SVD Line: 23963

//  <item> SFDITEM_FIELD__I2C2_CR1_NOSTRETCH
//    <name> NOSTRETCH </name>
//    <rw> 
//    <i> [Bit 17] RW (@ 0x40005800) Clock stretching disable </i>
//    <check> 
//      <loc> ( (unsigned int) I2C2_CR1 ) </loc>
//      <o.17..17> NOSTRETCH
//    </check>
//  </item>
//  


// -------------------------------  Field Item: I2C2_CR1_WUPEN  -----------------------------------
// SVD Line: 23969

//  <item> SFDITEM_FIELD__I2C2_CR1_WUPEN
//    <name> WUPEN </name>
//    <rw> 
//    <i> [Bit 18] RW (@ 0x40005800) Wakeup from STOP enable </i>
//    <check> 
//      <loc> ( (unsigned int) I2C2_CR1 ) </loc>
//      <o.18..18> WUPEN
//    </check>
//  </item>
//  


// --------------------------------  Field Item: I2C2_CR1_GCEN  -----------------------------------
// SVD Line: 23975

//  <item> SFDITEM_FIELD__I2C2_CR1_GCEN
//    <name> GCEN </name>
//    <rw> 
//    <i> [Bit 19] RW (@ 0x40005800) General call enable </i>
//    <check> 
//      <loc> ( (unsigned int) I2C2_CR1 ) </loc>
//      <o.19..19> GCEN
//    </check>
//  </item>
//  


// -------------------------------  Field Item: I2C2_CR1_SMBHEN  ----------------------------------
// SVD Line: 23981

//  <item> SFDITEM_FIELD__I2C2_CR1_SMBHEN
//    <name> SMBHEN </name>
//    <rw> 
//    <i> [Bit 20] RW (@ 0x40005800) SMBus Host address enable </i>
//    <check> 
//      <loc> ( (unsigned int) I2C2_CR1 ) </loc>
//      <o.20..20> SMBHEN
//    </check>
//  </item>
//  


// -------------------------------  Field Item: I2C2_CR1_SMBDEN  ----------------------------------
// SVD Line: 23987

//  <item> SFDITEM_FIELD__I2C2_CR1_SMBDEN
//    <name> SMBDEN </name>
//    <rw> 
//    <i> [Bit 21] RW (@ 0x40005800) SMBus Device Default address  enable </i>
//    <check> 
//      <loc> ( (unsigned int) I2C2_CR1 ) </loc>
//      <o.21..21> SMBDEN
//    </check>
//  </item>
//  


// ------------------------------  Field Item: I2C2_CR1_ALERTEN  ----------------------------------
// SVD Line: 23994

//  <item> SFDITEM_FIELD__I2C2_CR1_ALERTEN
//    <name> ALERTEN </name>
//    <rw> 
//    <i> [Bit 22] RW (@ 0x40005800) SMBUS alert enable </i>
//    <check> 
//      <loc> ( (unsigned int) I2C2_CR1 ) </loc>
//      <o.22..22> ALERTEN
//    </check>
//  </item>
//  


// -------------------------------  Field Item: I2C2_CR1_PECEN  -----------------------------------
// SVD Line: 24000

//  <item> SFDITEM_FIELD__I2C2_CR1_PECEN
//    <name> PECEN </name>
//    <rw> 
//    <i> [Bit 23] RW (@ 0x40005800) PEC enable </i>
//    <check> 
//      <loc> ( (unsigned int) I2C2_CR1 ) </loc>
//      <o.23..23> PECEN
//    </check>
//  </item>
//  


// --------------------------------  Register RTree: I2C2_CR1  ------------------------------------
// SVD Line: 23870

//  <rtree> SFDITEM_REG__I2C2_CR1
//    <name> CR1 </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x40005800) Control register 1 </i>
//    <loc> ( (unsigned int)((I2C2_CR1 >> 0) & 0xFFFFFFFF), ((I2C2_CR1 = (I2C2_CR1 & ~(0xFFDFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFDFFF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__I2C2_CR1_PE </item>
//    <item> SFDITEM_FIELD__I2C2_CR1_TXIE </item>
//    <item> SFDITEM_FIELD__I2C2_CR1_RXIE </item>
//    <item> SFDITEM_FIELD__I2C2_CR1_ADDRIE </item>
//    <item> SFDITEM_FIELD__I2C2_CR1_NACKIE </item>
//    <item> SFDITEM_FIELD__I2C2_CR1_STOPIE </item>
//    <item> SFDITEM_FIELD__I2C2_CR1_TCIE </item>
//    <item> SFDITEM_FIELD__I2C2_CR1_ERRIE </item>
//    <item> SFDITEM_FIELD__I2C2_CR1_DNF </item>
//    <item> SFDITEM_FIELD__I2C2_CR1_ANFOFF </item>
//    <item> SFDITEM_FIELD__I2C2_CR1_TXDMAEN </item>
//    <item> SFDITEM_FIELD__I2C2_CR1_RXDMAEN </item>
//    <item> SFDITEM_FIELD__I2C2_CR1_SBC </item>
//    <item> SFDITEM_FIELD__I2C2_CR1_NOSTRETCH </item>
//    <item> SFDITEM_FIELD__I2C2_CR1_WUPEN </item>
//    <item> SFDITEM_FIELD__I2C2_CR1_GCEN </item>
//    <item> SFDITEM_FIELD__I2C2_CR1_SMBHEN </item>
//    <item> SFDITEM_FIELD__I2C2_CR1_SMBDEN </item>
//    <item> SFDITEM_FIELD__I2C2_CR1_ALERTEN </item>
//    <item> SFDITEM_FIELD__I2C2_CR1_PECEN </item>
//  </rtree>
//  


// -----------------------------  Register Item Address: I2C2_CR2  --------------------------------
// SVD Line: 24008

unsigned int I2C2_CR2 __AT (0x40005804);



// ------------------------------  Field Item: I2C2_CR2_PECBYTE  ----------------------------------
// SVD Line: 24017

//  <item> SFDITEM_FIELD__I2C2_CR2_PECBYTE
//    <name> PECBYTE </name>
//    <rw> 
//    <i> [Bit 26] RW (@ 0x40005804) Packet error checking byte </i>
//    <check> 
//      <loc> ( (unsigned int) I2C2_CR2 ) </loc>
//      <o.26..26> PECBYTE
//    </check>
//  </item>
//  


// ------------------------------  Field Item: I2C2_CR2_AUTOEND  ----------------------------------
// SVD Line: 24023

//  <item> SFDITEM_FIELD__I2C2_CR2_AUTOEND
//    <name> AUTOEND </name>
//    <rw> 
//    <i> [Bit 25] RW (@ 0x40005804) Automatic end mode (master  mode) </i>
//    <check> 
//      <loc> ( (unsigned int) I2C2_CR2 ) </loc>
//      <o.25..25> AUTOEND
//    </check>
//  </item>
//  


// -------------------------------  Field Item: I2C2_CR2_RELOAD  ----------------------------------
// SVD Line: 24030

//  <item> SFDITEM_FIELD__I2C2_CR2_RELOAD
//    <name> RELOAD </name>
//    <rw> 
//    <i> [Bit 24] RW (@ 0x40005804) NBYTES reload mode </i>
//    <check> 
//      <loc> ( (unsigned int) I2C2_CR2 ) </loc>
//      <o.24..24> RELOAD
//    </check>
//  </item>
//  


// -------------------------------  Field Item: I2C2_CR2_NBYTES  ----------------------------------
// SVD Line: 24036

//  <item> SFDITEM_FIELD__I2C2_CR2_NBYTES
//    <name> NBYTES </name>
//    <rw> 
//    <i> [Bits 23..16] RW (@ 0x40005804) Number of bytes </i>
//    <edit> 
//      <loc> ( (unsigned char)((I2C2_CR2 >> 16) & 0xFF), ((I2C2_CR2 = (I2C2_CR2 & ~(0xFFUL << 16 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFF) << 16 ) ) )) </loc>
//    </edit>
//  </item>
//  


// --------------------------------  Field Item: I2C2_CR2_NACK  -----------------------------------
// SVD Line: 24042

//  <item> SFDITEM_FIELD__I2C2_CR2_NACK
//    <name> NACK </name>
//    <rw> 
//    <i> [Bit 15] RW (@ 0x40005804) NACK generation (slave  mode) </i>
//    <check> 
//      <loc> ( (unsigned int) I2C2_CR2 ) </loc>
//      <o.15..15> NACK
//    </check>
//  </item>
//  


// --------------------------------  Field Item: I2C2_CR2_STOP  -----------------------------------
// SVD Line: 24049

//  <item> SFDITEM_FIELD__I2C2_CR2_STOP
//    <name> STOP </name>
//    <rw> 
//    <i> [Bit 14] RW (@ 0x40005804) Stop generation (master  mode) </i>
//    <check> 
//      <loc> ( (unsigned int) I2C2_CR2 ) </loc>
//      <o.14..14> STOP
//    </check>
//  </item>
//  


// -------------------------------  Field Item: I2C2_CR2_START  -----------------------------------
// SVD Line: 24056

//  <item> SFDITEM_FIELD__I2C2_CR2_START
//    <name> START </name>
//    <rw> 
//    <i> [Bit 13] RW (@ 0x40005804) Start generation </i>
//    <check> 
//      <loc> ( (unsigned int) I2C2_CR2 ) </loc>
//      <o.13..13> START
//    </check>
//  </item>
//  


// ------------------------------  Field Item: I2C2_CR2_HEAD10R  ----------------------------------
// SVD Line: 24062

//  <item> SFDITEM_FIELD__I2C2_CR2_HEAD10R
//    <name> HEAD10R </name>
//    <rw> 
//    <i> [Bit 12] RW (@ 0x40005804) 10-bit address header only read  direction (master receiver mode) </i>
//    <check> 
//      <loc> ( (unsigned int) I2C2_CR2 ) </loc>
//      <o.12..12> HEAD10R
//    </check>
//  </item>
//  


// -------------------------------  Field Item: I2C2_CR2_ADD10  -----------------------------------
// SVD Line: 24069

//  <item> SFDITEM_FIELD__I2C2_CR2_ADD10
//    <name> ADD10 </name>
//    <rw> 
//    <i> [Bit 11] RW (@ 0x40005804) 10-bit addressing mode (master  mode) </i>
//    <check> 
//      <loc> ( (unsigned int) I2C2_CR2 ) </loc>
//      <o.11..11> ADD10
//    </check>
//  </item>
//  


// -------------------------------  Field Item: I2C2_CR2_RD_WRN  ----------------------------------
// SVD Line: 24076

//  <item> SFDITEM_FIELD__I2C2_CR2_RD_WRN
//    <name> RD_WRN </name>
//    <rw> 
//    <i> [Bit 10] RW (@ 0x40005804) Transfer direction (master  mode) </i>
//    <check> 
//      <loc> ( (unsigned int) I2C2_CR2 ) </loc>
//      <o.10..10> RD_WRN
//    </check>
//  </item>
//  


// --------------------------------  Field Item: I2C2_CR2_SADD  -----------------------------------
// SVD Line: 24083

//  <item> SFDITEM_FIELD__I2C2_CR2_SADD
//    <name> SADD </name>
//    <rw> 
//    <i> [Bits 9..0] RW (@ 0x40005804) Slave address bit (master  mode) </i>
//    <edit> 
//      <loc> ( (unsigned short)((I2C2_CR2 >> 0) & 0x3FF), ((I2C2_CR2 = (I2C2_CR2 & ~(0x3FFUL << 0 )) | ((unsigned long)(Gui_u16:GuiVal & 0x3FF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// --------------------------------  Register RTree: I2C2_CR2  ------------------------------------
// SVD Line: 24008

//  <rtree> SFDITEM_REG__I2C2_CR2
//    <name> CR2 </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x40005804) Control register 2 </i>
//    <loc> ( (unsigned int)((I2C2_CR2 >> 0) & 0xFFFFFFFF), ((I2C2_CR2 = (I2C2_CR2 & ~(0x7FFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0x7FFFFFF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__I2C2_CR2_PECBYTE </item>
//    <item> SFDITEM_FIELD__I2C2_CR2_AUTOEND </item>
//    <item> SFDITEM_FIELD__I2C2_CR2_RELOAD </item>
//    <item> SFDITEM_FIELD__I2C2_CR2_NBYTES </item>
//    <item> SFDITEM_FIELD__I2C2_CR2_NACK </item>
//    <item> SFDITEM_FIELD__I2C2_CR2_STOP </item>
//    <item> SFDITEM_FIELD__I2C2_CR2_START </item>
//    <item> SFDITEM_FIELD__I2C2_CR2_HEAD10R </item>
//    <item> SFDITEM_FIELD__I2C2_CR2_ADD10 </item>
//    <item> SFDITEM_FIELD__I2C2_CR2_RD_WRN </item>
//    <item> SFDITEM_FIELD__I2C2_CR2_SADD </item>
//  </rtree>
//  


// ----------------------------  Register Item Address: I2C2_OAR1  --------------------------------
// SVD Line: 24092

unsigned int I2C2_OAR1 __AT (0x40005808);



// -------------------------------  Field Item: I2C2_OAR1_OA1_0  ----------------------------------
// SVD Line: 24101

//  <item> SFDITEM_FIELD__I2C2_OAR1_OA1_0
//    <name> OA1_0 </name>
//    <rw> 
//    <i> [Bit 0] RW (@ 0x40005808) Interface address </i>
//    <check> 
//      <loc> ( (unsigned int) I2C2_OAR1 ) </loc>
//      <o.0..0> OA1_0
//    </check>
//  </item>
//  


// ------------------------------  Field Item: I2C2_OAR1_OA1_7_1  ---------------------------------
// SVD Line: 24107

//  <item> SFDITEM_FIELD__I2C2_OAR1_OA1_7_1
//    <name> OA1_7_1 </name>
//    <rw> 
//    <i> [Bits 7..1] RW (@ 0x40005808) Interface address </i>
//    <edit> 
//      <loc> ( (unsigned char)((I2C2_OAR1 >> 1) & 0x7F), ((I2C2_OAR1 = (I2C2_OAR1 & ~(0x7FUL << 1 )) | ((unsigned long)(Gui_u8:GuiVal & 0x7F) << 1 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ------------------------------  Field Item: I2C2_OAR1_OA1_8_9  ---------------------------------
// SVD Line: 24113

//  <item> SFDITEM_FIELD__I2C2_OAR1_OA1_8_9
//    <name> OA1_8_9 </name>
//    <rw> 
//    <i> [Bits 9..8] RW (@ 0x40005808) Interface address </i>
//    <edit> 
//      <loc> ( (unsigned char)((I2C2_OAR1 >> 8) & 0x3), ((I2C2_OAR1 = (I2C2_OAR1 & ~(0x3UL << 8 )) | ((unsigned long)(Gui_u8:GuiVal & 0x3) << 8 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ------------------------------  Field Item: I2C2_OAR1_OA1MODE  ---------------------------------
// SVD Line: 24119

//  <item> SFDITEM_FIELD__I2C2_OAR1_OA1MODE
//    <name> OA1MODE </name>
//    <rw> 
//    <i> [Bit 10] RW (@ 0x40005808) Own Address 1 10-bit mode </i>
//    <check> 
//      <loc> ( (unsigned int) I2C2_OAR1 ) </loc>
//      <o.10..10> OA1MODE
//    </check>
//  </item>
//  


// -------------------------------  Field Item: I2C2_OAR1_OA1EN  ----------------------------------
// SVD Line: 24125

//  <item> SFDITEM_FIELD__I2C2_OAR1_OA1EN
//    <name> OA1EN </name>
//    <rw> 
//    <i> [Bit 15] RW (@ 0x40005808) Own Address 1 enable </i>
//    <check> 
//      <loc> ( (unsigned int) I2C2_OAR1 ) </loc>
//      <o.15..15> OA1EN
//    </check>
//  </item>
//  


// --------------------------------  Register RTree: I2C2_OAR1  -----------------------------------
// SVD Line: 24092

//  <rtree> SFDITEM_REG__I2C2_OAR1
//    <name> OAR1 </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x40005808) Own address register 1 </i>
//    <loc> ( (unsigned int)((I2C2_OAR1 >> 0) & 0xFFFFFFFF), ((I2C2_OAR1 = (I2C2_OAR1 & ~(0x87FFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0x87FF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__I2C2_OAR1_OA1_0 </item>
//    <item> SFDITEM_FIELD__I2C2_OAR1_OA1_7_1 </item>
//    <item> SFDITEM_FIELD__I2C2_OAR1_OA1_8_9 </item>
//    <item> SFDITEM_FIELD__I2C2_OAR1_OA1MODE </item>
//    <item> SFDITEM_FIELD__I2C2_OAR1_OA1EN </item>
//  </rtree>
//  


// ----------------------------  Register Item Address: I2C2_OAR2  --------------------------------
// SVD Line: 24133

unsigned int I2C2_OAR2 __AT (0x4000580C);



// --------------------------------  Field Item: I2C2_OAR2_OA2  -----------------------------------
// SVD Line: 24142

//  <item> SFDITEM_FIELD__I2C2_OAR2_OA2
//    <name> OA2 </name>
//    <rw> 
//    <i> [Bits 7..1] RW (@ 0x4000580C) Interface address </i>
//    <edit> 
//      <loc> ( (unsigned char)((I2C2_OAR2 >> 1) & 0x7F), ((I2C2_OAR2 = (I2C2_OAR2 & ~(0x7FUL << 1 )) | ((unsigned long)(Gui_u8:GuiVal & 0x7F) << 1 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ------------------------------  Field Item: I2C2_OAR2_OA2MSK  ----------------------------------
// SVD Line: 24148

//  <item> SFDITEM_FIELD__I2C2_OAR2_OA2MSK
//    <name> OA2MSK </name>
//    <rw> 
//    <i> [Bits 10..8] RW (@ 0x4000580C) Own Address 2 masks </i>
//    <edit> 
//      <loc> ( (unsigned char)((I2C2_OAR2 >> 8) & 0x7), ((I2C2_OAR2 = (I2C2_OAR2 & ~(0x7UL << 8 )) | ((unsigned long)(Gui_u8:GuiVal & 0x7) << 8 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -------------------------------  Field Item: I2C2_OAR2_OA2EN  ----------------------------------
// SVD Line: 24154

//  <item> SFDITEM_FIELD__I2C2_OAR2_OA2EN
//    <name> OA2EN </name>
//    <rw> 
//    <i> [Bit 15] RW (@ 0x4000580C) Own Address 2 enable </i>
//    <check> 
//      <loc> ( (unsigned int) I2C2_OAR2 ) </loc>
//      <o.15..15> OA2EN
//    </check>
//  </item>
//  


// --------------------------------  Register RTree: I2C2_OAR2  -----------------------------------
// SVD Line: 24133

//  <rtree> SFDITEM_REG__I2C2_OAR2
//    <name> OAR2 </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x4000580C) Own address register 2 </i>
//    <loc> ( (unsigned int)((I2C2_OAR2 >> 0) & 0xFFFFFFFF), ((I2C2_OAR2 = (I2C2_OAR2 & ~(0x87FEUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0x87FE) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__I2C2_OAR2_OA2 </item>
//    <item> SFDITEM_FIELD__I2C2_OAR2_OA2MSK </item>
//    <item> SFDITEM_FIELD__I2C2_OAR2_OA2EN </item>
//  </rtree>
//  


// ---------------------------  Register Item Address: I2C2_TIMINGR  ------------------------------
// SVD Line: 24162

unsigned int I2C2_TIMINGR __AT (0x40005810);



// ------------------------------  Field Item: I2C2_TIMINGR_SCLL  ---------------------------------
// SVD Line: 24171

//  <item> SFDITEM_FIELD__I2C2_TIMINGR_SCLL
//    <name> SCLL </name>
//    <rw> 
//    <i> [Bits 7..0] RW (@ 0x40005810) SCL low period (master  mode) </i>
//    <edit> 
//      <loc> ( (unsigned char)((I2C2_TIMINGR >> 0) & 0xFF), ((I2C2_TIMINGR = (I2C2_TIMINGR & ~(0xFFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ------------------------------  Field Item: I2C2_TIMINGR_SCLH  ---------------------------------
// SVD Line: 24178

//  <item> SFDITEM_FIELD__I2C2_TIMINGR_SCLH
//    <name> SCLH </name>
//    <rw> 
//    <i> [Bits 15..8] RW (@ 0x40005810) SCL high period (master  mode) </i>
//    <edit> 
//      <loc> ( (unsigned char)((I2C2_TIMINGR >> 8) & 0xFF), ((I2C2_TIMINGR = (I2C2_TIMINGR & ~(0xFFUL << 8 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFF) << 8 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -----------------------------  Field Item: I2C2_TIMINGR_SDADEL  --------------------------------
// SVD Line: 24185

//  <item> SFDITEM_FIELD__I2C2_TIMINGR_SDADEL
//    <name> SDADEL </name>
//    <rw> 
//    <i> [Bits 19..16] RW (@ 0x40005810) Data hold time </i>
//    <edit> 
//      <loc> ( (unsigned char)((I2C2_TIMINGR >> 16) & 0xF), ((I2C2_TIMINGR = (I2C2_TIMINGR & ~(0xFUL << 16 )) | ((unsigned long)(Gui_u8:GuiVal & 0xF) << 16 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -----------------------------  Field Item: I2C2_TIMINGR_SCLDEL  --------------------------------
// SVD Line: 24191

//  <item> SFDITEM_FIELD__I2C2_TIMINGR_SCLDEL
//    <name> SCLDEL </name>
//    <rw> 
//    <i> [Bits 23..20] RW (@ 0x40005810) Data setup time </i>
//    <edit> 
//      <loc> ( (unsigned char)((I2C2_TIMINGR >> 20) & 0xF), ((I2C2_TIMINGR = (I2C2_TIMINGR & ~(0xFUL << 20 )) | ((unsigned long)(Gui_u8:GuiVal & 0xF) << 20 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -----------------------------  Field Item: I2C2_TIMINGR_PRESC  ---------------------------------
// SVD Line: 24197

//  <item> SFDITEM_FIELD__I2C2_TIMINGR_PRESC
//    <name> PRESC </name>
//    <rw> 
//    <i> [Bits 31..28] RW (@ 0x40005810) Timing prescaler </i>
//    <edit> 
//      <loc> ( (unsigned char)((I2C2_TIMINGR >> 28) & 0xF), ((I2C2_TIMINGR = (I2C2_TIMINGR & ~(0xFUL << 28 )) | ((unsigned long)(Gui_u8:GuiVal & 0xF) << 28 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ------------------------------  Register RTree: I2C2_TIMINGR  ----------------------------------
// SVD Line: 24162

//  <rtree> SFDITEM_REG__I2C2_TIMINGR
//    <name> TIMINGR </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x40005810) Timing register </i>
//    <loc> ( (unsigned int)((I2C2_TIMINGR >> 0) & 0xFFFFFFFF), ((I2C2_TIMINGR = (I2C2_TIMINGR & ~(0xF0FFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xF0FFFFFF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__I2C2_TIMINGR_SCLL </item>
//    <item> SFDITEM_FIELD__I2C2_TIMINGR_SCLH </item>
//    <item> SFDITEM_FIELD__I2C2_TIMINGR_SDADEL </item>
//    <item> SFDITEM_FIELD__I2C2_TIMINGR_SCLDEL </item>
//    <item> SFDITEM_FIELD__I2C2_TIMINGR_PRESC </item>
//  </rtree>
//  


// --------------------------  Register Item Address: I2C2_TIMEOUTR  ------------------------------
// SVD Line: 24205

unsigned int I2C2_TIMEOUTR __AT (0x40005814);



// ---------------------------  Field Item: I2C2_TIMEOUTR_TIMEOUTA  -------------------------------
// SVD Line: 24214

//  <item> SFDITEM_FIELD__I2C2_TIMEOUTR_TIMEOUTA
//    <name> TIMEOUTA </name>
//    <rw> 
//    <i> [Bits 11..0] RW (@ 0x40005814) Bus timeout A </i>
//    <edit> 
//      <loc> ( (unsigned short)((I2C2_TIMEOUTR >> 0) & 0xFFF), ((I2C2_TIMEOUTR = (I2C2_TIMEOUTR & ~(0xFFFUL << 0 )) | ((unsigned long)(Gui_u16:GuiVal & 0xFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -----------------------------  Field Item: I2C2_TIMEOUTR_TIDLE  --------------------------------
// SVD Line: 24220

//  <item> SFDITEM_FIELD__I2C2_TIMEOUTR_TIDLE
//    <name> TIDLE </name>
//    <rw> 
//    <i> [Bit 12] RW (@ 0x40005814) Idle clock timeout  detection </i>
//    <check> 
//      <loc> ( (unsigned int) I2C2_TIMEOUTR ) </loc>
//      <o.12..12> TIDLE
//    </check>
//  </item>
//  


// ---------------------------  Field Item: I2C2_TIMEOUTR_TIMOUTEN  -------------------------------
// SVD Line: 24227

//  <item> SFDITEM_FIELD__I2C2_TIMEOUTR_TIMOUTEN
//    <name> TIMOUTEN </name>
//    <rw> 
//    <i> [Bit 15] RW (@ 0x40005814) Clock timeout enable </i>
//    <check> 
//      <loc> ( (unsigned int) I2C2_TIMEOUTR ) </loc>
//      <o.15..15> TIMOUTEN
//    </check>
//  </item>
//  


// ---------------------------  Field Item: I2C2_TIMEOUTR_TIMEOUTB  -------------------------------
// SVD Line: 24233

//  <item> SFDITEM_FIELD__I2C2_TIMEOUTR_TIMEOUTB
//    <name> TIMEOUTB </name>
//    <rw> 
//    <i> [Bits 27..16] RW (@ 0x40005814) Bus timeout B </i>
//    <edit> 
//      <loc> ( (unsigned short)((I2C2_TIMEOUTR >> 16) & 0xFFF), ((I2C2_TIMEOUTR = (I2C2_TIMEOUTR & ~(0xFFFUL << 16 )) | ((unsigned long)(Gui_u16:GuiVal & 0xFFF) << 16 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ----------------------------  Field Item: I2C2_TIMEOUTR_TEXTEN  --------------------------------
// SVD Line: 24239

//  <item> SFDITEM_FIELD__I2C2_TIMEOUTR_TEXTEN
//    <name> TEXTEN </name>
//    <rw> 
//    <i> [Bit 31] RW (@ 0x40005814) Extended clock timeout  enable </i>
//    <check> 
//      <loc> ( (unsigned int) I2C2_TIMEOUTR ) </loc>
//      <o.31..31> TEXTEN
//    </check>
//  </item>
//  


// ------------------------------  Register RTree: I2C2_TIMEOUTR  ---------------------------------
// SVD Line: 24205

//  <rtree> SFDITEM_REG__I2C2_TIMEOUTR
//    <name> TIMEOUTR </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x40005814) Status register 1 </i>
//    <loc> ( (unsigned int)((I2C2_TIMEOUTR >> 0) & 0xFFFFFFFF), ((I2C2_TIMEOUTR = (I2C2_TIMEOUTR & ~(0x8FFF9FFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0x8FFF9FFF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__I2C2_TIMEOUTR_TIMEOUTA </item>
//    <item> SFDITEM_FIELD__I2C2_TIMEOUTR_TIDLE </item>
//    <item> SFDITEM_FIELD__I2C2_TIMEOUTR_TIMOUTEN </item>
//    <item> SFDITEM_FIELD__I2C2_TIMEOUTR_TIMEOUTB </item>
//    <item> SFDITEM_FIELD__I2C2_TIMEOUTR_TEXTEN </item>
//  </rtree>
//  


// -----------------------------  Register Item Address: I2C2_ISR  --------------------------------
// SVD Line: 24248

unsigned int I2C2_ISR __AT (0x40005818);



// ------------------------------  Field Item: I2C2_ISR_ADDCODE  ----------------------------------
// SVD Line: 24256

//  <item> SFDITEM_FIELD__I2C2_ISR_ADDCODE
//    <name> ADDCODE </name>
//    <r> 
//    <i> [Bits 23..17] RO (@ 0x40005818) Address match code (Slave  mode) </i>
//    <edit> 
//      <loc> ( (unsigned char)((I2C2_ISR >> 17) & 0x7F) ) </loc>
//    </edit>
//  </item>
//  


// --------------------------------  Field Item: I2C2_ISR_DIR  ------------------------------------
// SVD Line: 24264

//  <item> SFDITEM_FIELD__I2C2_ISR_DIR
//    <name> DIR </name>
//    <r> 
//    <i> [Bit 16] RO (@ 0x40005818) Transfer direction (Slave  mode) </i>
//    <check> 
//      <loc> ( (unsigned int) I2C2_ISR ) </loc>
//      <o.16..16> DIR
//    </check>
//  </item>
//  


// --------------------------------  Field Item: I2C2_ISR_BUSY  -----------------------------------
// SVD Line: 24272

//  <item> SFDITEM_FIELD__I2C2_ISR_BUSY
//    <name> BUSY </name>
//    <r> 
//    <i> [Bit 15] RO (@ 0x40005818) Bus busy </i>
//    <check> 
//      <loc> ( (unsigned int) I2C2_ISR ) </loc>
//      <o.15..15> BUSY
//    </check>
//  </item>
//  


// -------------------------------  Field Item: I2C2_ISR_ALERT  -----------------------------------
// SVD Line: 24279

//  <item> SFDITEM_FIELD__I2C2_ISR_ALERT
//    <name> ALERT </name>
//    <r> 
//    <i> [Bit 13] RO (@ 0x40005818) SMBus alert </i>
//    <check> 
//      <loc> ( (unsigned int) I2C2_ISR ) </loc>
//      <o.13..13> ALERT
//    </check>
//  </item>
//  


// ------------------------------  Field Item: I2C2_ISR_TIMEOUT  ----------------------------------
// SVD Line: 24286

//  <item> SFDITEM_FIELD__I2C2_ISR_TIMEOUT
//    <name> TIMEOUT </name>
//    <r> 
//    <i> [Bit 12] RO (@ 0x40005818) Timeout or t_low detection  flag </i>
//    <check> 
//      <loc> ( (unsigned int) I2C2_ISR ) </loc>
//      <o.12..12> TIMEOUT
//    </check>
//  </item>
//  


// -------------------------------  Field Item: I2C2_ISR_PECERR  ----------------------------------
// SVD Line: 24294

//  <item> SFDITEM_FIELD__I2C2_ISR_PECERR
//    <name> PECERR </name>
//    <r> 
//    <i> [Bit 11] RO (@ 0x40005818) PEC Error in reception </i>
//    <check> 
//      <loc> ( (unsigned int) I2C2_ISR ) </loc>
//      <o.11..11> PECERR
//    </check>
//  </item>
//  


// --------------------------------  Field Item: I2C2_ISR_OVR  ------------------------------------
// SVD Line: 24301

//  <item> SFDITEM_FIELD__I2C2_ISR_OVR
//    <name> OVR </name>
//    <r> 
//    <i> [Bit 10] RO (@ 0x40005818) Overrun/Underrun (slave  mode) </i>
//    <check> 
//      <loc> ( (unsigned int) I2C2_ISR ) </loc>
//      <o.10..10> OVR
//    </check>
//  </item>
//  


// --------------------------------  Field Item: I2C2_ISR_ARLO  -----------------------------------
// SVD Line: 24309

//  <item> SFDITEM_FIELD__I2C2_ISR_ARLO
//    <name> ARLO </name>
//    <r> 
//    <i> [Bit 9] RO (@ 0x40005818) Arbitration lost </i>
//    <check> 
//      <loc> ( (unsigned int) I2C2_ISR ) </loc>
//      <o.9..9> ARLO
//    </check>
//  </item>
//  


// --------------------------------  Field Item: I2C2_ISR_BERR  -----------------------------------
// SVD Line: 24316

//  <item> SFDITEM_FIELD__I2C2_ISR_BERR
//    <name> BERR </name>
//    <r> 
//    <i> [Bit 8] RO (@ 0x40005818) Bus error </i>
//    <check> 
//      <loc> ( (unsigned int) I2C2_ISR ) </loc>
//      <o.8..8> BERR
//    </check>
//  </item>
//  


// --------------------------------  Field Item: I2C2_ISR_TCR  ------------------------------------
// SVD Line: 24323

//  <item> SFDITEM_FIELD__I2C2_ISR_TCR
//    <name> TCR </name>
//    <r> 
//    <i> [Bit 7] RO (@ 0x40005818) Transfer Complete Reload </i>
//    <check> 
//      <loc> ( (unsigned int) I2C2_ISR ) </loc>
//      <o.7..7> TCR
//    </check>
//  </item>
//  


// ---------------------------------  Field Item: I2C2_ISR_TC  ------------------------------------
// SVD Line: 24330

//  <item> SFDITEM_FIELD__I2C2_ISR_TC
//    <name> TC </name>
//    <r> 
//    <i> [Bit 6] RO (@ 0x40005818) Transfer Complete (master  mode) </i>
//    <check> 
//      <loc> ( (unsigned int) I2C2_ISR ) </loc>
//      <o.6..6> TC
//    </check>
//  </item>
//  


// -------------------------------  Field Item: I2C2_ISR_STOPF  -----------------------------------
// SVD Line: 24338

//  <item> SFDITEM_FIELD__I2C2_ISR_STOPF
//    <name> STOPF </name>
//    <r> 
//    <i> [Bit 5] RO (@ 0x40005818) Stop detection flag </i>
//    <check> 
//      <loc> ( (unsigned int) I2C2_ISR ) </loc>
//      <o.5..5> STOPF
//    </check>
//  </item>
//  


// -------------------------------  Field Item: I2C2_ISR_NACKF  -----------------------------------
// SVD Line: 24345

//  <item> SFDITEM_FIELD__I2C2_ISR_NACKF
//    <name> NACKF </name>
//    <r> 
//    <i> [Bit 4] RO (@ 0x40005818) Not acknowledge received  flag </i>
//    <check> 
//      <loc> ( (unsigned int) I2C2_ISR ) </loc>
//      <o.4..4> NACKF
//    </check>
//  </item>
//  


// --------------------------------  Field Item: I2C2_ISR_ADDR  -----------------------------------
// SVD Line: 24353

//  <item> SFDITEM_FIELD__I2C2_ISR_ADDR
//    <name> ADDR </name>
//    <r> 
//    <i> [Bit 3] RO (@ 0x40005818) Address matched (slave  mode) </i>
//    <check> 
//      <loc> ( (unsigned int) I2C2_ISR ) </loc>
//      <o.3..3> ADDR
//    </check>
//  </item>
//  


// --------------------------------  Field Item: I2C2_ISR_RXNE  -----------------------------------
// SVD Line: 24361

//  <item> SFDITEM_FIELD__I2C2_ISR_RXNE
//    <name> RXNE </name>
//    <r> 
//    <i> [Bit 2] RO (@ 0x40005818) Receive data register not empty  (receivers) </i>
//    <check> 
//      <loc> ( (unsigned int) I2C2_ISR ) </loc>
//      <o.2..2> RXNE
//    </check>
//  </item>
//  


// --------------------------------  Field Item: I2C2_ISR_TXIS  -----------------------------------
// SVD Line: 24369

//  <item> SFDITEM_FIELD__I2C2_ISR_TXIS
//    <name> TXIS </name>
//    <rw> 
//    <i> [Bit 1] RW (@ 0x40005818) Transmit interrupt status  (transmitters) </i>
//    <check> 
//      <loc> ( (unsigned int) I2C2_ISR ) </loc>
//      <o.1..1> TXIS
//    </check>
//  </item>
//  


// --------------------------------  Field Item: I2C2_ISR_TXE  ------------------------------------
// SVD Line: 24377

//  <item> SFDITEM_FIELD__I2C2_ISR_TXE
//    <name> TXE </name>
//    <rw> 
//    <i> [Bit 0] RW (@ 0x40005818) Transmit data register empty  (transmitters) </i>
//    <check> 
//      <loc> ( (unsigned int) I2C2_ISR ) </loc>
//      <o.0..0> TXE
//    </check>
//  </item>
//  


// --------------------------------  Register RTree: I2C2_ISR  ------------------------------------
// SVD Line: 24248

//  <rtree> SFDITEM_REG__I2C2_ISR
//    <name> ISR </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x40005818) Interrupt and Status register </i>
//    <loc> ( (unsigned int)((I2C2_ISR >> 0) & 0xFFFFFFFF), ((I2C2_ISR = (I2C2_ISR & ~(0x3UL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0x3) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__I2C2_ISR_ADDCODE </item>
//    <item> SFDITEM_FIELD__I2C2_ISR_DIR </item>
//    <item> SFDITEM_FIELD__I2C2_ISR_BUSY </item>
//    <item> SFDITEM_FIELD__I2C2_ISR_ALERT </item>
//    <item> SFDITEM_FIELD__I2C2_ISR_TIMEOUT </item>
//    <item> SFDITEM_FIELD__I2C2_ISR_PECERR </item>
//    <item> SFDITEM_FIELD__I2C2_ISR_OVR </item>
//    <item> SFDITEM_FIELD__I2C2_ISR_ARLO </item>
//    <item> SFDITEM_FIELD__I2C2_ISR_BERR </item>
//    <item> SFDITEM_FIELD__I2C2_ISR_TCR </item>
//    <item> SFDITEM_FIELD__I2C2_ISR_TC </item>
//    <item> SFDITEM_FIELD__I2C2_ISR_STOPF </item>
//    <item> SFDITEM_FIELD__I2C2_ISR_NACKF </item>
//    <item> SFDITEM_FIELD__I2C2_ISR_ADDR </item>
//    <item> SFDITEM_FIELD__I2C2_ISR_RXNE </item>
//    <item> SFDITEM_FIELD__I2C2_ISR_TXIS </item>
//    <item> SFDITEM_FIELD__I2C2_ISR_TXE </item>
//  </rtree>
//  


// -----------------------------  Register Item Address: I2C2_ICR  --------------------------------
// SVD Line: 24387

unsigned int I2C2_ICR __AT (0x4000581C);



// ------------------------------  Field Item: I2C2_ICR_ALERTCF  ----------------------------------
// SVD Line: 24396

//  <item> SFDITEM_FIELD__I2C2_ICR_ALERTCF
//    <name> ALERTCF </name>
//    <w> 
//    <i> [Bit 13] WO (@ 0x4000581C) Alert flag clear </i>
//    <check> 
//      <loc> ( (unsigned int) I2C2_ICR ) </loc>
//      <o.13..13> ALERTCF
//    </check>
//  </item>
//  


// ------------------------------  Field Item: I2C2_ICR_TIMOUTCF  ---------------------------------
// SVD Line: 24402

//  <item> SFDITEM_FIELD__I2C2_ICR_TIMOUTCF
//    <name> TIMOUTCF </name>
//    <w> 
//    <i> [Bit 12] WO (@ 0x4000581C) Timeout detection flag  clear </i>
//    <check> 
//      <loc> ( (unsigned int) I2C2_ICR ) </loc>
//      <o.12..12> TIMOUTCF
//    </check>
//  </item>
//  


// -------------------------------  Field Item: I2C2_ICR_PECCF  -----------------------------------
// SVD Line: 24409

//  <item> SFDITEM_FIELD__I2C2_ICR_PECCF
//    <name> PECCF </name>
//    <w> 
//    <i> [Bit 11] WO (@ 0x4000581C) PEC Error flag clear </i>
//    <check> 
//      <loc> ( (unsigned int) I2C2_ICR ) </loc>
//      <o.11..11> PECCF
//    </check>
//  </item>
//  


// -------------------------------  Field Item: I2C2_ICR_OVRCF  -----------------------------------
// SVD Line: 24415

//  <item> SFDITEM_FIELD__I2C2_ICR_OVRCF
//    <name> OVRCF </name>
//    <w> 
//    <i> [Bit 10] WO (@ 0x4000581C) Overrun/Underrun flag  clear </i>
//    <check> 
//      <loc> ( (unsigned int) I2C2_ICR ) </loc>
//      <o.10..10> OVRCF
//    </check>
//  </item>
//  


// -------------------------------  Field Item: I2C2_ICR_ARLOCF  ----------------------------------
// SVD Line: 24422

//  <item> SFDITEM_FIELD__I2C2_ICR_ARLOCF
//    <name> ARLOCF </name>
//    <w> 
//    <i> [Bit 9] WO (@ 0x4000581C) Arbitration lost flag  clear </i>
//    <check> 
//      <loc> ( (unsigned int) I2C2_ICR ) </loc>
//      <o.9..9> ARLOCF
//    </check>
//  </item>
//  


// -------------------------------  Field Item: I2C2_ICR_BERRCF  ----------------------------------
// SVD Line: 24429

//  <item> SFDITEM_FIELD__I2C2_ICR_BERRCF
//    <name> BERRCF </name>
//    <w> 
//    <i> [Bit 8] WO (@ 0x4000581C) Bus error flag clear </i>
//    <check> 
//      <loc> ( (unsigned int) I2C2_ICR ) </loc>
//      <o.8..8> BERRCF
//    </check>
//  </item>
//  


// -------------------------------  Field Item: I2C2_ICR_STOPCF  ----------------------------------
// SVD Line: 24435

//  <item> SFDITEM_FIELD__I2C2_ICR_STOPCF
//    <name> STOPCF </name>
//    <w> 
//    <i> [Bit 5] WO (@ 0x4000581C) Stop detection flag clear </i>
//    <check> 
//      <loc> ( (unsigned int) I2C2_ICR ) </loc>
//      <o.5..5> STOPCF
//    </check>
//  </item>
//  


// -------------------------------  Field Item: I2C2_ICR_NACKCF  ----------------------------------
// SVD Line: 24441

//  <item> SFDITEM_FIELD__I2C2_ICR_NACKCF
//    <name> NACKCF </name>
//    <w> 
//    <i> [Bit 4] WO (@ 0x4000581C) Not Acknowledge flag clear </i>
//    <check> 
//      <loc> ( (unsigned int) I2C2_ICR ) </loc>
//      <o.4..4> NACKCF
//    </check>
//  </item>
//  


// -------------------------------  Field Item: I2C2_ICR_ADDRCF  ----------------------------------
// SVD Line: 24447

//  <item> SFDITEM_FIELD__I2C2_ICR_ADDRCF
//    <name> ADDRCF </name>
//    <w> 
//    <i> [Bit 3] WO (@ 0x4000581C) Address Matched flag clear </i>
//    <check> 
//      <loc> ( (unsigned int) I2C2_ICR ) </loc>
//      <o.3..3> ADDRCF
//    </check>
//  </item>
//  


// --------------------------------  Register RTree: I2C2_ICR  ------------------------------------
// SVD Line: 24387

//  <rtree> SFDITEM_REG__I2C2_ICR
//    <name> ICR </name>
//    <w> 
//    <i> [Bits 31..0] WO (@ 0x4000581C) Interrupt clear register </i>
//    <loc> ( (unsigned int)((I2C2_ICR >> 0) & 0xFFFFFFFF), ((I2C2_ICR = (I2C2_ICR & ~(0x3F38UL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0x3F38) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__I2C2_ICR_ALERTCF </item>
//    <item> SFDITEM_FIELD__I2C2_ICR_TIMOUTCF </item>
//    <item> SFDITEM_FIELD__I2C2_ICR_PECCF </item>
//    <item> SFDITEM_FIELD__I2C2_ICR_OVRCF </item>
//    <item> SFDITEM_FIELD__I2C2_ICR_ARLOCF </item>
//    <item> SFDITEM_FIELD__I2C2_ICR_BERRCF </item>
//    <item> SFDITEM_FIELD__I2C2_ICR_STOPCF </item>
//    <item> SFDITEM_FIELD__I2C2_ICR_NACKCF </item>
//    <item> SFDITEM_FIELD__I2C2_ICR_ADDRCF </item>
//  </rtree>
//  


// ----------------------------  Register Item Address: I2C2_PECR  --------------------------------
// SVD Line: 24455

unsigned int I2C2_PECR __AT (0x40005820);



// --------------------------------  Field Item: I2C2_PECR_PEC  -----------------------------------
// SVD Line: 24464

//  <item> SFDITEM_FIELD__I2C2_PECR_PEC
//    <name> PEC </name>
//    <r> 
//    <i> [Bits 7..0] RO (@ 0x40005820) Packet error checking  register </i>
//    <edit> 
//      <loc> ( (unsigned char)((I2C2_PECR >> 0) & 0xFF) ) </loc>
//    </edit>
//  </item>
//  


// --------------------------------  Register RTree: I2C2_PECR  -----------------------------------
// SVD Line: 24455

//  <rtree> SFDITEM_REG__I2C2_PECR
//    <name> PECR </name>
//    <r> 
//    <i> [Bits 31..0] RO (@ 0x40005820) PEC register </i>
//    <loc> ( (unsigned int)((I2C2_PECR >> 0) & 0xFFFFFFFF) ) </loc>
//    <item> SFDITEM_FIELD__I2C2_PECR_PEC </item>
//  </rtree>
//  


// ----------------------------  Register Item Address: I2C2_RXDR  --------------------------------
// SVD Line: 24473

unsigned int I2C2_RXDR __AT (0x40005824);



// ------------------------------  Field Item: I2C2_RXDR_RXDATA  ----------------------------------
// SVD Line: 24482

//  <item> SFDITEM_FIELD__I2C2_RXDR_RXDATA
//    <name> RXDATA </name>
//    <r> 
//    <i> [Bits 7..0] RO (@ 0x40005824) 8-bit receive data </i>
//    <edit> 
//      <loc> ( (unsigned char)((I2C2_RXDR >> 0) & 0xFF) ) </loc>
//    </edit>
//  </item>
//  


// --------------------------------  Register RTree: I2C2_RXDR  -----------------------------------
// SVD Line: 24473

//  <rtree> SFDITEM_REG__I2C2_RXDR
//    <name> RXDR </name>
//    <r> 
//    <i> [Bits 31..0] RO (@ 0x40005824) Receive data register </i>
//    <loc> ( (unsigned int)((I2C2_RXDR >> 0) & 0xFFFFFFFF) ) </loc>
//    <item> SFDITEM_FIELD__I2C2_RXDR_RXDATA </item>
//  </rtree>
//  


// ----------------------------  Register Item Address: I2C2_TXDR  --------------------------------
// SVD Line: 24490

unsigned int I2C2_TXDR __AT (0x40005828);



// ------------------------------  Field Item: I2C2_TXDR_TXDATA  ----------------------------------
// SVD Line: 24499

//  <item> SFDITEM_FIELD__I2C2_TXDR_TXDATA
//    <name> TXDATA </name>
//    <rw> 
//    <i> [Bits 7..0] RW (@ 0x40005828) 8-bit transmit data </i>
//    <edit> 
//      <loc> ( (unsigned char)((I2C2_TXDR >> 0) & 0xFF), ((I2C2_TXDR = (I2C2_TXDR & ~(0xFFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// --------------------------------  Register RTree: I2C2_TXDR  -----------------------------------
// SVD Line: 24490

//  <rtree> SFDITEM_REG__I2C2_TXDR
//    <name> TXDR </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x40005828) Transmit data register </i>
//    <loc> ( (unsigned int)((I2C2_TXDR >> 0) & 0xFFFFFFFF), ((I2C2_TXDR = (I2C2_TXDR & ~(0xFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__I2C2_TXDR_TXDATA </item>
//  </rtree>
//  


// ----------------------------------  Peripheral View: I2C2  -------------------------------------
// SVD Line: 24509

//  <view> I2C2
//    <name> I2C2 </name>
//    <item> SFDITEM_REG__I2C2_CR1 </item>
//    <item> SFDITEM_REG__I2C2_CR2 </item>
//    <item> SFDITEM_REG__I2C2_OAR1 </item>
//    <item> SFDITEM_REG__I2C2_OAR2 </item>
//    <item> SFDITEM_REG__I2C2_TIMINGR </item>
//    <item> SFDITEM_REG__I2C2_TIMEOUTR </item>
//    <item> SFDITEM_REG__I2C2_ISR </item>
//    <item> SFDITEM_REG__I2C2_ICR </item>
//    <item> SFDITEM_REG__I2C2_PECR </item>
//    <item> SFDITEM_REG__I2C2_RXDR </item>
//    <item> SFDITEM_REG__I2C2_TXDR </item>
//  </view>
//  


// ------------------------------  Register Item Address: RTC_TR  ---------------------------------
// SVD Line: 24534

unsigned int RTC_TR __AT (0x40002800);



// ----------------------------------  Field Item: RTC_TR_PM  -------------------------------------
// SVD Line: 24543

//  <item> SFDITEM_FIELD__RTC_TR_PM
//    <name> PM </name>
//    <rw> 
//    <i> [Bit 22] RW (@ 0x40002800) AM/PM notation </i>
//    <check> 
//      <loc> ( (unsigned int) RTC_TR ) </loc>
//      <o.22..22> PM
//    </check>
//  </item>
//  


// ----------------------------------  Field Item: RTC_TR_HT  -------------------------------------
// SVD Line: 24549

//  <item> SFDITEM_FIELD__RTC_TR_HT
//    <name> HT </name>
//    <rw> 
//    <i> [Bits 21..20] RW (@ 0x40002800) Hour tens in BCD format </i>
//    <edit> 
//      <loc> ( (unsigned char)((RTC_TR >> 20) & 0x3), ((RTC_TR = (RTC_TR & ~(0x3UL << 20 )) | ((unsigned long)(Gui_u8:GuiVal & 0x3) << 20 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ----------------------------------  Field Item: RTC_TR_HU  -------------------------------------
// SVD Line: 24555

//  <item> SFDITEM_FIELD__RTC_TR_HU
//    <name> HU </name>
//    <rw> 
//    <i> [Bits 19..16] RW (@ 0x40002800) Hour units in BCD format </i>
//    <edit> 
//      <loc> ( (unsigned char)((RTC_TR >> 16) & 0xF), ((RTC_TR = (RTC_TR & ~(0xFUL << 16 )) | ((unsigned long)(Gui_u8:GuiVal & 0xF) << 16 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ---------------------------------  Field Item: RTC_TR_MNT  -------------------------------------
// SVD Line: 24561

//  <item> SFDITEM_FIELD__RTC_TR_MNT
//    <name> MNT </name>
//    <rw> 
//    <i> [Bits 14..12] RW (@ 0x40002800) Minute tens in BCD format </i>
//    <edit> 
//      <loc> ( (unsigned char)((RTC_TR >> 12) & 0x7), ((RTC_TR = (RTC_TR & ~(0x7UL << 12 )) | ((unsigned long)(Gui_u8:GuiVal & 0x7) << 12 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ---------------------------------  Field Item: RTC_TR_MNU  -------------------------------------
// SVD Line: 24567

//  <item> SFDITEM_FIELD__RTC_TR_MNU
//    <name> MNU </name>
//    <rw> 
//    <i> [Bits 11..8] RW (@ 0x40002800) Minute units in BCD format </i>
//    <edit> 
//      <loc> ( (unsigned char)((RTC_TR >> 8) & 0xF), ((RTC_TR = (RTC_TR & ~(0xFUL << 8 )) | ((unsigned long)(Gui_u8:GuiVal & 0xF) << 8 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ----------------------------------  Field Item: RTC_TR_ST  -------------------------------------
// SVD Line: 24573

//  <item> SFDITEM_FIELD__RTC_TR_ST
//    <name> ST </name>
//    <rw> 
//    <i> [Bits 6..4] RW (@ 0x40002800) Second tens in BCD format </i>
//    <edit> 
//      <loc> ( (unsigned char)((RTC_TR >> 4) & 0x7), ((RTC_TR = (RTC_TR & ~(0x7UL << 4 )) | ((unsigned long)(Gui_u8:GuiVal & 0x7) << 4 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ----------------------------------  Field Item: RTC_TR_SU  -------------------------------------
// SVD Line: 24579

//  <item> SFDITEM_FIELD__RTC_TR_SU
//    <name> SU </name>
//    <rw> 
//    <i> [Bits 3..0] RW (@ 0x40002800) Second units in BCD format </i>
//    <edit> 
//      <loc> ( (unsigned char)((RTC_TR >> 0) & 0xF), ((RTC_TR = (RTC_TR & ~(0xFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ---------------------------------  Register RTree: RTC_TR  -------------------------------------
// SVD Line: 24534

//  <rtree> SFDITEM_REG__RTC_TR
//    <name> TR </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x40002800) time register </i>
//    <loc> ( (unsigned int)((RTC_TR >> 0) & 0xFFFFFFFF), ((RTC_TR = (RTC_TR & ~(0x7F7F7FUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0x7F7F7F) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__RTC_TR_PM </item>
//    <item> SFDITEM_FIELD__RTC_TR_HT </item>
//    <item> SFDITEM_FIELD__RTC_TR_HU </item>
//    <item> SFDITEM_FIELD__RTC_TR_MNT </item>
//    <item> SFDITEM_FIELD__RTC_TR_MNU </item>
//    <item> SFDITEM_FIELD__RTC_TR_ST </item>
//    <item> SFDITEM_FIELD__RTC_TR_SU </item>
//  </rtree>
//  


// ------------------------------  Register Item Address: RTC_DR  ---------------------------------
// SVD Line: 24587

unsigned int RTC_DR __AT (0x40002804);



// ----------------------------------  Field Item: RTC_DR_YT  -------------------------------------
// SVD Line: 24596

//  <item> SFDITEM_FIELD__RTC_DR_YT
//    <name> YT </name>
//    <rw> 
//    <i> [Bits 23..20] RW (@ 0x40002804) Year tens in BCD format </i>
//    <edit> 
//      <loc> ( (unsigned char)((RTC_DR >> 20) & 0xF), ((RTC_DR = (RTC_DR & ~(0xFUL << 20 )) | ((unsigned long)(Gui_u8:GuiVal & 0xF) << 20 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ----------------------------------  Field Item: RTC_DR_YU  -------------------------------------
// SVD Line: 24602

//  <item> SFDITEM_FIELD__RTC_DR_YU
//    <name> YU </name>
//    <rw> 
//    <i> [Bits 19..16] RW (@ 0x40002804) Year units in BCD format </i>
//    <edit> 
//      <loc> ( (unsigned char)((RTC_DR >> 16) & 0xF), ((RTC_DR = (RTC_DR & ~(0xFUL << 16 )) | ((unsigned long)(Gui_u8:GuiVal & 0xF) << 16 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ---------------------------------  Field Item: RTC_DR_WDU  -------------------------------------
// SVD Line: 24608

//  <item> SFDITEM_FIELD__RTC_DR_WDU
//    <name> WDU </name>
//    <rw> 
//    <i> [Bits 15..13] RW (@ 0x40002804) Week day units </i>
//    <edit> 
//      <loc> ( (unsigned char)((RTC_DR >> 13) & 0x7), ((RTC_DR = (RTC_DR & ~(0x7UL << 13 )) | ((unsigned long)(Gui_u8:GuiVal & 0x7) << 13 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ----------------------------------  Field Item: RTC_DR_MT  -------------------------------------
// SVD Line: 24614

//  <item> SFDITEM_FIELD__RTC_DR_MT
//    <name> MT </name>
//    <rw> 
//    <i> [Bit 12] RW (@ 0x40002804) Month tens in BCD format </i>
//    <check> 
//      <loc> ( (unsigned int) RTC_DR ) </loc>
//      <o.12..12> MT
//    </check>
//  </item>
//  


// ----------------------------------  Field Item: RTC_DR_MU  -------------------------------------
// SVD Line: 24620

//  <item> SFDITEM_FIELD__RTC_DR_MU
//    <name> MU </name>
//    <rw> 
//    <i> [Bits 11..8] RW (@ 0x40002804) Month units in BCD format </i>
//    <edit> 
//      <loc> ( (unsigned char)((RTC_DR >> 8) & 0xF), ((RTC_DR = (RTC_DR & ~(0xFUL << 8 )) | ((unsigned long)(Gui_u8:GuiVal & 0xF) << 8 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ----------------------------------  Field Item: RTC_DR_DT  -------------------------------------
// SVD Line: 24626

//  <item> SFDITEM_FIELD__RTC_DR_DT
//    <name> DT </name>
//    <rw> 
//    <i> [Bits 5..4] RW (@ 0x40002804) Date tens in BCD format </i>
//    <edit> 
//      <loc> ( (unsigned char)((RTC_DR >> 4) & 0x3), ((RTC_DR = (RTC_DR & ~(0x3UL << 4 )) | ((unsigned long)(Gui_u8:GuiVal & 0x3) << 4 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ----------------------------------  Field Item: RTC_DR_DU  -------------------------------------
// SVD Line: 24632

//  <item> SFDITEM_FIELD__RTC_DR_DU
//    <name> DU </name>
//    <rw> 
//    <i> [Bits 3..0] RW (@ 0x40002804) Date units in BCD format </i>
//    <edit> 
//      <loc> ( (unsigned char)((RTC_DR >> 0) & 0xF), ((RTC_DR = (RTC_DR & ~(0xFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ---------------------------------  Register RTree: RTC_DR  -------------------------------------
// SVD Line: 24587

//  <rtree> SFDITEM_REG__RTC_DR
//    <name> DR </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x40002804) date register </i>
//    <loc> ( (unsigned int)((RTC_DR >> 0) & 0xFFFFFFFF), ((RTC_DR = (RTC_DR & ~(0xFFFF3FUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFF3F) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__RTC_DR_YT </item>
//    <item> SFDITEM_FIELD__RTC_DR_YU </item>
//    <item> SFDITEM_FIELD__RTC_DR_WDU </item>
//    <item> SFDITEM_FIELD__RTC_DR_MT </item>
//    <item> SFDITEM_FIELD__RTC_DR_MU </item>
//    <item> SFDITEM_FIELD__RTC_DR_DT </item>
//    <item> SFDITEM_FIELD__RTC_DR_DU </item>
//  </rtree>
//  


// -----------------------------  Register Item Address: RTC_SSR  ---------------------------------
// SVD Line: 24640

unsigned int RTC_SSR __AT (0x40002808);



// ---------------------------------  Field Item: RTC_SSR_SS  -------------------------------------
// SVD Line: 24649

//  <item> SFDITEM_FIELD__RTC_SSR_SS
//    <name> SS </name>
//    <r> 
//    <i> [Bits 15..0] RO (@ 0x40002808) Sub second value </i>
//    <edit> 
//      <loc> ( (unsigned short)((RTC_SSR >> 0) & 0xFFFF) ) </loc>
//    </edit>
//  </item>
//  


// ---------------------------------  Register RTree: RTC_SSR  ------------------------------------
// SVD Line: 24640

//  <rtree> SFDITEM_REG__RTC_SSR
//    <name> SSR </name>
//    <r> 
//    <i> [Bits 31..0] RO (@ 0x40002808) sub second register </i>
//    <loc> ( (unsigned int)((RTC_SSR >> 0) & 0xFFFFFFFF) ) </loc>
//    <item> SFDITEM_FIELD__RTC_SSR_SS </item>
//  </rtree>
//  


// -----------------------------  Register Item Address: RTC_ICSR  --------------------------------
// SVD Line: 24657

unsigned int RTC_ICSR __AT (0x4000280C);



// -------------------------------  Field Item: RTC_ICSR_ALRAWF  ----------------------------------
// SVD Line: 24666

//  <item> SFDITEM_FIELD__RTC_ICSR_ALRAWF
//    <name> ALRAWF </name>
//    <r> 
//    <i> [Bit 0] RO (@ 0x4000280C) Alarm A write flag </i>
//    <check> 
//      <loc> ( (unsigned int) RTC_ICSR ) </loc>
//      <o.0..0> ALRAWF
//    </check>
//  </item>
//  


// -------------------------------  Field Item: RTC_ICSR_ALRBWF  ----------------------------------
// SVD Line: 24673

//  <item> SFDITEM_FIELD__RTC_ICSR_ALRBWF
//    <name> ALRBWF </name>
//    <r> 
//    <i> [Bit 1] RO (@ 0x4000280C) Alarm B write flag </i>
//    <check> 
//      <loc> ( (unsigned int) RTC_ICSR ) </loc>
//      <o.1..1> ALRBWF
//    </check>
//  </item>
//  


// -------------------------------  Field Item: RTC_ICSR_WUTWF  -----------------------------------
// SVD Line: 24680

//  <item> SFDITEM_FIELD__RTC_ICSR_WUTWF
//    <name> WUTWF </name>
//    <r> 
//    <i> [Bit 2] RO (@ 0x4000280C) Wakeup timer write flag </i>
//    <check> 
//      <loc> ( (unsigned int) RTC_ICSR ) </loc>
//      <o.2..2> WUTWF
//    </check>
//  </item>
//  


// --------------------------------  Field Item: RTC_ICSR_SHPF  -----------------------------------
// SVD Line: 24687

//  <item> SFDITEM_FIELD__RTC_ICSR_SHPF
//    <name> SHPF </name>
//    <rw> 
//    <i> [Bit 3] RW (@ 0x4000280C) Shift operation pending </i>
//    <check> 
//      <loc> ( (unsigned int) RTC_ICSR ) </loc>
//      <o.3..3> SHPF
//    </check>
//  </item>
//  


// -------------------------------  Field Item: RTC_ICSR_INITS  -----------------------------------
// SVD Line: 24694

//  <item> SFDITEM_FIELD__RTC_ICSR_INITS
//    <name> INITS </name>
//    <r> 
//    <i> [Bit 4] RO (@ 0x4000280C) Initialization status flag </i>
//    <check> 
//      <loc> ( (unsigned int) RTC_ICSR ) </loc>
//      <o.4..4> INITS
//    </check>
//  </item>
//  


// --------------------------------  Field Item: RTC_ICSR_RSF  ------------------------------------
// SVD Line: 24701

//  <item> SFDITEM_FIELD__RTC_ICSR_RSF
//    <name> RSF </name>
//    <rw> 
//    <i> [Bit 5] RW (@ 0x4000280C) Registers synchronization  flag </i>
//    <check> 
//      <loc> ( (unsigned int) RTC_ICSR ) </loc>
//      <o.5..5> RSF
//    </check>
//  </item>
//  


// -------------------------------  Field Item: RTC_ICSR_INITF  -----------------------------------
// SVD Line: 24709

//  <item> SFDITEM_FIELD__RTC_ICSR_INITF
//    <name> INITF </name>
//    <r> 
//    <i> [Bit 6] RO (@ 0x4000280C) Initialization flag </i>
//    <check> 
//      <loc> ( (unsigned int) RTC_ICSR ) </loc>
//      <o.6..6> INITF
//    </check>
//  </item>
//  


// --------------------------------  Field Item: RTC_ICSR_INIT  -----------------------------------
// SVD Line: 24716

//  <item> SFDITEM_FIELD__RTC_ICSR_INIT
//    <name> INIT </name>
//    <rw> 
//    <i> [Bit 7] RW (@ 0x4000280C) Initialization mode </i>
//    <check> 
//      <loc> ( (unsigned int) RTC_ICSR ) </loc>
//      <o.7..7> INIT
//    </check>
//  </item>
//  


// ------------------------------  Field Item: RTC_ICSR_RECALPF  ----------------------------------
// SVD Line: 24723

//  <item> SFDITEM_FIELD__RTC_ICSR_RECALPF
//    <name> RECALPF </name>
//    <r> 
//    <i> [Bit 16] RO (@ 0x4000280C) Recalibration pending Flag </i>
//    <check> 
//      <loc> ( (unsigned int) RTC_ICSR ) </loc>
//      <o.16..16> RECALPF
//    </check>
//  </item>
//  


// --------------------------------  Register RTree: RTC_ICSR  ------------------------------------
// SVD Line: 24657

//  <rtree> SFDITEM_REG__RTC_ICSR
//    <name> ICSR </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x4000280C) initialization and status  register </i>
//    <loc> ( (unsigned int)((RTC_ICSR >> 0) & 0xFFFFFFFF), ((RTC_ICSR = (RTC_ICSR & ~(0xA8UL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xA8) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__RTC_ICSR_ALRAWF </item>
//    <item> SFDITEM_FIELD__RTC_ICSR_ALRBWF </item>
//    <item> SFDITEM_FIELD__RTC_ICSR_WUTWF </item>
//    <item> SFDITEM_FIELD__RTC_ICSR_SHPF </item>
//    <item> SFDITEM_FIELD__RTC_ICSR_INITS </item>
//    <item> SFDITEM_FIELD__RTC_ICSR_RSF </item>
//    <item> SFDITEM_FIELD__RTC_ICSR_INITF </item>
//    <item> SFDITEM_FIELD__RTC_ICSR_INIT </item>
//    <item> SFDITEM_FIELD__RTC_ICSR_RECALPF </item>
//  </rtree>
//  


// -----------------------------  Register Item Address: RTC_PRER  --------------------------------
// SVD Line: 24732

unsigned int RTC_PRER __AT (0x40002810);



// ------------------------------  Field Item: RTC_PRER_PREDIV_A  ---------------------------------
// SVD Line: 24741

//  <item> SFDITEM_FIELD__RTC_PRER_PREDIV_A
//    <name> PREDIV_A </name>
//    <rw> 
//    <i> [Bits 22..16] RW (@ 0x40002810) Asynchronous prescaler  factor </i>
//    <edit> 
//      <loc> ( (unsigned char)((RTC_PRER >> 16) & 0x7F), ((RTC_PRER = (RTC_PRER & ~(0x7FUL << 16 )) | ((unsigned long)(Gui_u8:GuiVal & 0x7F) << 16 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ------------------------------  Field Item: RTC_PRER_PREDIV_S  ---------------------------------
// SVD Line: 24748

//  <item> SFDITEM_FIELD__RTC_PRER_PREDIV_S
//    <name> PREDIV_S </name>
//    <rw> 
//    <i> [Bits 14..0] RW (@ 0x40002810) Synchronous prescaler  factor </i>
//    <edit> 
//      <loc> ( (unsigned short)((RTC_PRER >> 0) & 0x7FFF), ((RTC_PRER = (RTC_PRER & ~(0x7FFFUL << 0 )) | ((unsigned long)(Gui_u16:GuiVal & 0x7FFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// --------------------------------  Register RTree: RTC_PRER  ------------------------------------
// SVD Line: 24732

//  <rtree> SFDITEM_REG__RTC_PRER
//    <name> PRER </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x40002810) prescaler register </i>
//    <loc> ( (unsigned int)((RTC_PRER >> 0) & 0xFFFFFFFF), ((RTC_PRER = (RTC_PRER & ~(0x7F7FFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0x7F7FFF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__RTC_PRER_PREDIV_A </item>
//    <item> SFDITEM_FIELD__RTC_PRER_PREDIV_S </item>
//  </rtree>
//  


// -----------------------------  Register Item Address: RTC_WUTR  --------------------------------
// SVD Line: 24757

unsigned int RTC_WUTR __AT (0x40002814);



// --------------------------------  Field Item: RTC_WUTR_WUT  ------------------------------------
// SVD Line: 24766

//  <item> SFDITEM_FIELD__RTC_WUTR_WUT
//    <name> WUT </name>
//    <rw> 
//    <i> [Bits 15..0] RW (@ 0x40002814) Wakeup auto-reload value  bits </i>
//    <edit> 
//      <loc> ( (unsigned short)((RTC_WUTR >> 0) & 0xFFFF), ((RTC_WUTR = (RTC_WUTR & ~(0xFFFFUL << 0 )) | ((unsigned long)(Gui_u16:GuiVal & 0xFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// --------------------------------  Register RTree: RTC_WUTR  ------------------------------------
// SVD Line: 24757

//  <rtree> SFDITEM_REG__RTC_WUTR
//    <name> WUTR </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x40002814) wakeup timer register </i>
//    <loc> ( (unsigned int)((RTC_WUTR >> 0) & 0xFFFFFFFF), ((RTC_WUTR = (RTC_WUTR & ~(0xFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__RTC_WUTR_WUT </item>
//  </rtree>
//  


// ------------------------------  Register Item Address: RTC_CR  ---------------------------------
// SVD Line: 24775

unsigned int RTC_CR __AT (0x40002818);



// -------------------------------  Field Item: RTC_CR_WUCKSEL  -----------------------------------
// SVD Line: 24784

//  <item> SFDITEM_FIELD__RTC_CR_WUCKSEL
//    <name> WUCKSEL </name>
//    <rw> 
//    <i> [Bits 2..0] RW (@ 0x40002818) WUCKSEL </i>
//    <edit> 
//      <loc> ( (unsigned char)((RTC_CR >> 0) & 0x7), ((RTC_CR = (RTC_CR & ~(0x7UL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0x7) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// --------------------------------  Field Item: RTC_CR_TSEDGE  -----------------------------------
// SVD Line: 24790

//  <item> SFDITEM_FIELD__RTC_CR_TSEDGE
//    <name> TSEDGE </name>
//    <rw> 
//    <i> [Bit 3] RW (@ 0x40002818) TSEDGE </i>
//    <check> 
//      <loc> ( (unsigned int) RTC_CR ) </loc>
//      <o.3..3> TSEDGE
//    </check>
//  </item>
//  


// -------------------------------  Field Item: RTC_CR_REFCKON  -----------------------------------
// SVD Line: 24796

//  <item> SFDITEM_FIELD__RTC_CR_REFCKON
//    <name> REFCKON </name>
//    <rw> 
//    <i> [Bit 4] RW (@ 0x40002818) REFCKON </i>
//    <check> 
//      <loc> ( (unsigned int) RTC_CR ) </loc>
//      <o.4..4> REFCKON
//    </check>
//  </item>
//  


// -------------------------------  Field Item: RTC_CR_BYPSHAD  -----------------------------------
// SVD Line: 24802

//  <item> SFDITEM_FIELD__RTC_CR_BYPSHAD
//    <name> BYPSHAD </name>
//    <rw> 
//    <i> [Bit 5] RW (@ 0x40002818) BYPSHAD </i>
//    <check> 
//      <loc> ( (unsigned int) RTC_CR ) </loc>
//      <o.5..5> BYPSHAD
//    </check>
//  </item>
//  


// ---------------------------------  Field Item: RTC_CR_FMT  -------------------------------------
// SVD Line: 24808

//  <item> SFDITEM_FIELD__RTC_CR_FMT
//    <name> FMT </name>
//    <rw> 
//    <i> [Bit 6] RW (@ 0x40002818) FMT </i>
//    <check> 
//      <loc> ( (unsigned int) RTC_CR ) </loc>
//      <o.6..6> FMT
//    </check>
//  </item>
//  


// --------------------------------  Field Item: RTC_CR_ALRAE  ------------------------------------
// SVD Line: 24814

//  <item> SFDITEM_FIELD__RTC_CR_ALRAE
//    <name> ALRAE </name>
//    <rw> 
//    <i> [Bit 8] RW (@ 0x40002818) ALRAE </i>
//    <check> 
//      <loc> ( (unsigned int) RTC_CR ) </loc>
//      <o.8..8> ALRAE
//    </check>
//  </item>
//  


// --------------------------------  Field Item: RTC_CR_ALRBE  ------------------------------------
// SVD Line: 24820

//  <item> SFDITEM_FIELD__RTC_CR_ALRBE
//    <name> ALRBE </name>
//    <rw> 
//    <i> [Bit 9] RW (@ 0x40002818) ALRBE </i>
//    <check> 
//      <loc> ( (unsigned int) RTC_CR ) </loc>
//      <o.9..9> ALRBE
//    </check>
//  </item>
//  


// ---------------------------------  Field Item: RTC_CR_WUTE  ------------------------------------
// SVD Line: 24826

//  <item> SFDITEM_FIELD__RTC_CR_WUTE
//    <name> WUTE </name>
//    <rw> 
//    <i> [Bit 10] RW (@ 0x40002818) WUTE </i>
//    <check> 
//      <loc> ( (unsigned int) RTC_CR ) </loc>
//      <o.10..10> WUTE
//    </check>
//  </item>
//  


// ---------------------------------  Field Item: RTC_CR_TSE  -------------------------------------
// SVD Line: 24832

//  <item> SFDITEM_FIELD__RTC_CR_TSE
//    <name> TSE </name>
//    <rw> 
//    <i> [Bit 11] RW (@ 0x40002818) TSE </i>
//    <check> 
//      <loc> ( (unsigned int) RTC_CR ) </loc>
//      <o.11..11> TSE
//    </check>
//  </item>
//  


// --------------------------------  Field Item: RTC_CR_ALRAIE  -----------------------------------
// SVD Line: 24838

//  <item> SFDITEM_FIELD__RTC_CR_ALRAIE
//    <name> ALRAIE </name>
//    <rw> 
//    <i> [Bit 12] RW (@ 0x40002818) ALRAIE </i>
//    <check> 
//      <loc> ( (unsigned int) RTC_CR ) </loc>
//      <o.12..12> ALRAIE
//    </check>
//  </item>
//  


// --------------------------------  Field Item: RTC_CR_ALRBIE  -----------------------------------
// SVD Line: 24844

//  <item> SFDITEM_FIELD__RTC_CR_ALRBIE
//    <name> ALRBIE </name>
//    <rw> 
//    <i> [Bit 13] RW (@ 0x40002818) ALRBIE </i>
//    <check> 
//      <loc> ( (unsigned int) RTC_CR ) </loc>
//      <o.13..13> ALRBIE
//    </check>
//  </item>
//  


// --------------------------------  Field Item: RTC_CR_WUTIE  ------------------------------------
// SVD Line: 24850

//  <item> SFDITEM_FIELD__RTC_CR_WUTIE
//    <name> WUTIE </name>
//    <rw> 
//    <i> [Bit 14] RW (@ 0x40002818) WUTIE </i>
//    <check> 
//      <loc> ( (unsigned int) RTC_CR ) </loc>
//      <o.14..14> WUTIE
//    </check>
//  </item>
//  


// ---------------------------------  Field Item: RTC_CR_TSIE  ------------------------------------
// SVD Line: 24856

//  <item> SFDITEM_FIELD__RTC_CR_TSIE
//    <name> TSIE </name>
//    <rw> 
//    <i> [Bit 15] RW (@ 0x40002818) TSIE </i>
//    <check> 
//      <loc> ( (unsigned int) RTC_CR ) </loc>
//      <o.15..15> TSIE
//    </check>
//  </item>
//  


// --------------------------------  Field Item: RTC_CR_ADD1H  ------------------------------------
// SVD Line: 24862

//  <item> SFDITEM_FIELD__RTC_CR_ADD1H
//    <name> ADD1H </name>
//    <rw> 
//    <i> [Bit 16] RW (@ 0x40002818) ADD1H </i>
//    <check> 
//      <loc> ( (unsigned int) RTC_CR ) </loc>
//      <o.16..16> ADD1H
//    </check>
//  </item>
//  


// --------------------------------  Field Item: RTC_CR_SUB1H  ------------------------------------
// SVD Line: 24868

//  <item> SFDITEM_FIELD__RTC_CR_SUB1H
//    <name> SUB1H </name>
//    <rw> 
//    <i> [Bit 17] RW (@ 0x40002818) SUB1H </i>
//    <check> 
//      <loc> ( (unsigned int) RTC_CR ) </loc>
//      <o.17..17> SUB1H
//    </check>
//  </item>
//  


// ---------------------------------  Field Item: RTC_CR_BKP  -------------------------------------
// SVD Line: 24874

//  <item> SFDITEM_FIELD__RTC_CR_BKP
//    <name> BKP </name>
//    <rw> 
//    <i> [Bit 18] RW (@ 0x40002818) BKP </i>
//    <check> 
//      <loc> ( (unsigned int) RTC_CR ) </loc>
//      <o.18..18> BKP
//    </check>
//  </item>
//  


// --------------------------------  Field Item: RTC_CR_COSEL  ------------------------------------
// SVD Line: 24880

//  <item> SFDITEM_FIELD__RTC_CR_COSEL
//    <name> COSEL </name>
//    <rw> 
//    <i> [Bit 19] RW (@ 0x40002818) COSEL </i>
//    <check> 
//      <loc> ( (unsigned int) RTC_CR ) </loc>
//      <o.19..19> COSEL
//    </check>
//  </item>
//  


// ---------------------------------  Field Item: RTC_CR_POL  -------------------------------------
// SVD Line: 24886

//  <item> SFDITEM_FIELD__RTC_CR_POL
//    <name> POL </name>
//    <rw> 
//    <i> [Bit 20] RW (@ 0x40002818) POL </i>
//    <check> 
//      <loc> ( (unsigned int) RTC_CR ) </loc>
//      <o.20..20> POL
//    </check>
//  </item>
//  


// ---------------------------------  Field Item: RTC_CR_OSEL  ------------------------------------
// SVD Line: 24892

//  <item> SFDITEM_FIELD__RTC_CR_OSEL
//    <name> OSEL </name>
//    <rw> 
//    <i> [Bits 22..21] RW (@ 0x40002818) OSEL </i>
//    <edit> 
//      <loc> ( (unsigned char)((RTC_CR >> 21) & 0x3), ((RTC_CR = (RTC_CR & ~(0x3UL << 21 )) | ((unsigned long)(Gui_u8:GuiVal & 0x3) << 21 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ---------------------------------  Field Item: RTC_CR_COE  -------------------------------------
// SVD Line: 24898

//  <item> SFDITEM_FIELD__RTC_CR_COE
//    <name> COE </name>
//    <rw> 
//    <i> [Bit 23] RW (@ 0x40002818) COE </i>
//    <check> 
//      <loc> ( (unsigned int) RTC_CR ) </loc>
//      <o.23..23> COE
//    </check>
//  </item>
//  


// ---------------------------------  Field Item: RTC_CR_ITSE  ------------------------------------
// SVD Line: 24904

//  <item> SFDITEM_FIELD__RTC_CR_ITSE
//    <name> ITSE </name>
//    <rw> 
//    <i> [Bit 24] RW (@ 0x40002818) ITSE </i>
//    <check> 
//      <loc> ( (unsigned int) RTC_CR ) </loc>
//      <o.24..24> ITSE
//    </check>
//  </item>
//  


// --------------------------------  Field Item: RTC_CR_TAMPTS  -----------------------------------
// SVD Line: 24910

//  <item> SFDITEM_FIELD__RTC_CR_TAMPTS
//    <name> TAMPTS </name>
//    <rw> 
//    <i> [Bit 25] RW (@ 0x40002818) TAMPTS </i>
//    <check> 
//      <loc> ( (unsigned int) RTC_CR ) </loc>
//      <o.25..25> TAMPTS
//    </check>
//  </item>
//  


// --------------------------------  Field Item: RTC_CR_TAMPOE  -----------------------------------
// SVD Line: 24916

//  <item> SFDITEM_FIELD__RTC_CR_TAMPOE
//    <name> TAMPOE </name>
//    <rw> 
//    <i> [Bit 26] RW (@ 0x40002818) TAMPOE </i>
//    <check> 
//      <loc> ( (unsigned int) RTC_CR ) </loc>
//      <o.26..26> TAMPOE
//    </check>
//  </item>
//  


// -----------------------------  Field Item: RTC_CR_TAMPALRM_PU  ---------------------------------
// SVD Line: 24922

//  <item> SFDITEM_FIELD__RTC_CR_TAMPALRM_PU
//    <name> TAMPALRM_PU </name>
//    <rw> 
//    <i> [Bit 29] RW (@ 0x40002818) TAMPALRM_PU </i>
//    <check> 
//      <loc> ( (unsigned int) RTC_CR ) </loc>
//      <o.29..29> TAMPALRM_PU
//    </check>
//  </item>
//  


// ----------------------------  Field Item: RTC_CR_TAMPALRM_TYPE  --------------------------------
// SVD Line: 24928

//  <item> SFDITEM_FIELD__RTC_CR_TAMPALRM_TYPE
//    <name> TAMPALRM_TYPE </name>
//    <rw> 
//    <i> [Bit 30] RW (@ 0x40002818) TAMPALRM_TYPE </i>
//    <check> 
//      <loc> ( (unsigned int) RTC_CR ) </loc>
//      <o.30..30> TAMPALRM_TYPE
//    </check>
//  </item>
//  


// --------------------------------  Field Item: RTC_CR_OUT2EN  -----------------------------------
// SVD Line: 24934

//  <item> SFDITEM_FIELD__RTC_CR_OUT2EN
//    <name> OUT2EN </name>
//    <rw> 
//    <i> [Bit 31] RW (@ 0x40002818) OUT2EN </i>
//    <check> 
//      <loc> ( (unsigned int) RTC_CR ) </loc>
//      <o.31..31> OUT2EN
//    </check>
//  </item>
//  


// ---------------------------------  Register RTree: RTC_CR  -------------------------------------
// SVD Line: 24775

//  <rtree> SFDITEM_REG__RTC_CR
//    <name> CR </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x40002818) control register </i>
//    <loc> ( (unsigned int)((RTC_CR >> 0) & 0xFFFFFFFF), ((RTC_CR = (RTC_CR & ~(0xE7FFFF7FUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xE7FFFF7F) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__RTC_CR_WUCKSEL </item>
//    <item> SFDITEM_FIELD__RTC_CR_TSEDGE </item>
//    <item> SFDITEM_FIELD__RTC_CR_REFCKON </item>
//    <item> SFDITEM_FIELD__RTC_CR_BYPSHAD </item>
//    <item> SFDITEM_FIELD__RTC_CR_FMT </item>
//    <item> SFDITEM_FIELD__RTC_CR_ALRAE </item>
//    <item> SFDITEM_FIELD__RTC_CR_ALRBE </item>
//    <item> SFDITEM_FIELD__RTC_CR_WUTE </item>
//    <item> SFDITEM_FIELD__RTC_CR_TSE </item>
//    <item> SFDITEM_FIELD__RTC_CR_ALRAIE </item>
//    <item> SFDITEM_FIELD__RTC_CR_ALRBIE </item>
//    <item> SFDITEM_FIELD__RTC_CR_WUTIE </item>
//    <item> SFDITEM_FIELD__RTC_CR_TSIE </item>
//    <item> SFDITEM_FIELD__RTC_CR_ADD1H </item>
//    <item> SFDITEM_FIELD__RTC_CR_SUB1H </item>
//    <item> SFDITEM_FIELD__RTC_CR_BKP </item>
//    <item> SFDITEM_FIELD__RTC_CR_COSEL </item>
//    <item> SFDITEM_FIELD__RTC_CR_POL </item>
//    <item> SFDITEM_FIELD__RTC_CR_OSEL </item>
//    <item> SFDITEM_FIELD__RTC_CR_COE </item>
//    <item> SFDITEM_FIELD__RTC_CR_ITSE </item>
//    <item> SFDITEM_FIELD__RTC_CR_TAMPTS </item>
//    <item> SFDITEM_FIELD__RTC_CR_TAMPOE </item>
//    <item> SFDITEM_FIELD__RTC_CR_TAMPALRM_PU </item>
//    <item> SFDITEM_FIELD__RTC_CR_TAMPALRM_TYPE </item>
//    <item> SFDITEM_FIELD__RTC_CR_OUT2EN </item>
//  </rtree>
//  


// -----------------------------  Register Item Address: RTC_WPR  ---------------------------------
// SVD Line: 24942

unsigned int RTC_WPR __AT (0x40002824);



// ---------------------------------  Field Item: RTC_WPR_KEY  ------------------------------------
// SVD Line: 24951

//  <item> SFDITEM_FIELD__RTC_WPR_KEY
//    <name> KEY </name>
//    <w> 
//    <i> [Bits 7..0] WO (@ 0x40002824) Write protection key </i>
//    <edit> 
//      <loc> ( (unsigned char)((RTC_WPR >> 0) & 0x0), ((RTC_WPR = (RTC_WPR & ~(0xFFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ---------------------------------  Register RTree: RTC_WPR  ------------------------------------
// SVD Line: 24942

//  <rtree> SFDITEM_REG__RTC_WPR
//    <name> WPR </name>
//    <w> 
//    <i> [Bits 31..0] WO (@ 0x40002824) write protection register </i>
//    <loc> ( (unsigned int)((RTC_WPR >> 0) & 0xFFFFFFFF), ((RTC_WPR = (RTC_WPR & ~(0xFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__RTC_WPR_KEY </item>
//  </rtree>
//  


// -----------------------------  Register Item Address: RTC_CALR  --------------------------------
// SVD Line: 24959

unsigned int RTC_CALR __AT (0x40002828);



// --------------------------------  Field Item: RTC_CALR_CALP  -----------------------------------
// SVD Line: 24968

//  <item> SFDITEM_FIELD__RTC_CALR_CALP
//    <name> CALP </name>
//    <rw> 
//    <i> [Bit 15] RW (@ 0x40002828) Increase frequency of RTC by 488.5  ppm </i>
//    <check> 
//      <loc> ( (unsigned int) RTC_CALR ) </loc>
//      <o.15..15> CALP
//    </check>
//  </item>
//  


// -------------------------------  Field Item: RTC_CALR_CALW8  -----------------------------------
// SVD Line: 24975

//  <item> SFDITEM_FIELD__RTC_CALR_CALW8
//    <name> CALW8 </name>
//    <rw> 
//    <i> [Bit 14] RW (@ 0x40002828) Use an 8-second calibration cycle  period </i>
//    <check> 
//      <loc> ( (unsigned int) RTC_CALR ) </loc>
//      <o.14..14> CALW8
//    </check>
//  </item>
//  


// -------------------------------  Field Item: RTC_CALR_CALW16  ----------------------------------
// SVD Line: 24982

//  <item> SFDITEM_FIELD__RTC_CALR_CALW16
//    <name> CALW16 </name>
//    <rw> 
//    <i> [Bit 13] RW (@ 0x40002828) Use a 16-second calibration cycle  period </i>
//    <check> 
//      <loc> ( (unsigned int) RTC_CALR ) </loc>
//      <o.13..13> CALW16
//    </check>
//  </item>
//  


// --------------------------------  Field Item: RTC_CALR_CALM  -----------------------------------
// SVD Line: 24989

//  <item> SFDITEM_FIELD__RTC_CALR_CALM
//    <name> CALM </name>
//    <rw> 
//    <i> [Bits 8..0] RW (@ 0x40002828) Calibration minus </i>
//    <edit> 
//      <loc> ( (unsigned short)((RTC_CALR >> 0) & 0x1FF), ((RTC_CALR = (RTC_CALR & ~(0x1FFUL << 0 )) | ((unsigned long)(Gui_u16:GuiVal & 0x1FF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// --------------------------------  Register RTree: RTC_CALR  ------------------------------------
// SVD Line: 24959

//  <rtree> SFDITEM_REG__RTC_CALR
//    <name> CALR </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x40002828) calibration register </i>
//    <loc> ( (unsigned int)((RTC_CALR >> 0) & 0xFFFFFFFF), ((RTC_CALR = (RTC_CALR & ~(0xE1FFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xE1FF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__RTC_CALR_CALP </item>
//    <item> SFDITEM_FIELD__RTC_CALR_CALW8 </item>
//    <item> SFDITEM_FIELD__RTC_CALR_CALW16 </item>
//    <item> SFDITEM_FIELD__RTC_CALR_CALM </item>
//  </rtree>
//  


// ----------------------------  Register Item Address: RTC_SHIFTR  -------------------------------
// SVD Line: 24997

unsigned int RTC_SHIFTR __AT (0x4000282C);



// ------------------------------  Field Item: RTC_SHIFTR_ADD1S  ----------------------------------
// SVD Line: 25006

//  <item> SFDITEM_FIELD__RTC_SHIFTR_ADD1S
//    <name> ADD1S </name>
//    <w> 
//    <i> [Bit 31] WO (@ 0x4000282C) Add one second </i>
//    <check> 
//      <loc> ( (unsigned int) RTC_SHIFTR ) </loc>
//      <o.31..31> ADD1S
//    </check>
//  </item>
//  


// ------------------------------  Field Item: RTC_SHIFTR_SUBFS  ----------------------------------
// SVD Line: 25012

//  <item> SFDITEM_FIELD__RTC_SHIFTR_SUBFS
//    <name> SUBFS </name>
//    <w> 
//    <i> [Bits 14..0] WO (@ 0x4000282C) Subtract a fraction of a  second </i>
//    <edit> 
//      <loc> ( (unsigned short)((RTC_SHIFTR >> 0) & 0x0), ((RTC_SHIFTR = (RTC_SHIFTR & ~(0x7FFFUL << 0 )) | ((unsigned long)(Gui_u16:GuiVal & 0x7FFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -------------------------------  Register RTree: RTC_SHIFTR  -----------------------------------
// SVD Line: 24997

//  <rtree> SFDITEM_REG__RTC_SHIFTR
//    <name> SHIFTR </name>
//    <w> 
//    <i> [Bits 31..0] WO (@ 0x4000282C) shift control register </i>
//    <loc> ( (unsigned int)((RTC_SHIFTR >> 0) & 0xFFFFFFFF), ((RTC_SHIFTR = (RTC_SHIFTR & ~(0x80007FFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0x80007FFF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__RTC_SHIFTR_ADD1S </item>
//    <item> SFDITEM_FIELD__RTC_SHIFTR_SUBFS </item>
//  </rtree>
//  


// -----------------------------  Register Item Address: RTC_TSTR  --------------------------------
// SVD Line: 25021

unsigned int RTC_TSTR __AT (0x40002830);



// ---------------------------------  Field Item: RTC_TSTR_SU  ------------------------------------
// SVD Line: 25030

//  <item> SFDITEM_FIELD__RTC_TSTR_SU
//    <name> SU </name>
//    <r> 
//    <i> [Bits 3..0] RO (@ 0x40002830) Second units in BCD format </i>
//    <edit> 
//      <loc> ( (unsigned char)((RTC_TSTR >> 0) & 0xF) ) </loc>
//    </edit>
//  </item>
//  


// ---------------------------------  Field Item: RTC_TSTR_ST  ------------------------------------
// SVD Line: 25036

//  <item> SFDITEM_FIELD__RTC_TSTR_ST
//    <name> ST </name>
//    <r> 
//    <i> [Bits 6..4] RO (@ 0x40002830) Second tens in BCD format </i>
//    <edit> 
//      <loc> ( (unsigned char)((RTC_TSTR >> 4) & 0x7) ) </loc>
//    </edit>
//  </item>
//  


// --------------------------------  Field Item: RTC_TSTR_MNU  ------------------------------------
// SVD Line: 25042

//  <item> SFDITEM_FIELD__RTC_TSTR_MNU
//    <name> MNU </name>
//    <r> 
//    <i> [Bits 11..8] RO (@ 0x40002830) Minute units in BCD format </i>
//    <edit> 
//      <loc> ( (unsigned char)((RTC_TSTR >> 8) & 0xF) ) </loc>
//    </edit>
//  </item>
//  


// --------------------------------  Field Item: RTC_TSTR_MNT  ------------------------------------
// SVD Line: 25048

//  <item> SFDITEM_FIELD__RTC_TSTR_MNT
//    <name> MNT </name>
//    <r> 
//    <i> [Bits 14..12] RO (@ 0x40002830) Minute tens in BCD format </i>
//    <edit> 
//      <loc> ( (unsigned char)((RTC_TSTR >> 12) & 0x7) ) </loc>
//    </edit>
//  </item>
//  


// ---------------------------------  Field Item: RTC_TSTR_HU  ------------------------------------
// SVD Line: 25054

//  <item> SFDITEM_FIELD__RTC_TSTR_HU
//    <name> HU </name>
//    <r> 
//    <i> [Bits 19..16] RO (@ 0x40002830) Hour units in BCD format </i>
//    <edit> 
//      <loc> ( (unsigned char)((RTC_TSTR >> 16) & 0xF) ) </loc>
//    </edit>
//  </item>
//  


// ---------------------------------  Field Item: RTC_TSTR_HT  ------------------------------------
// SVD Line: 25060

//  <item> SFDITEM_FIELD__RTC_TSTR_HT
//    <name> HT </name>
//    <r> 
//    <i> [Bits 21..20] RO (@ 0x40002830) Hour tens in BCD format </i>
//    <edit> 
//      <loc> ( (unsigned char)((RTC_TSTR >> 20) & 0x3) ) </loc>
//    </edit>
//  </item>
//  


// ---------------------------------  Field Item: RTC_TSTR_PM  ------------------------------------
// SVD Line: 25066

//  <item> SFDITEM_FIELD__RTC_TSTR_PM
//    <name> PM </name>
//    <r> 
//    <i> [Bit 22] RO (@ 0x40002830) AM/PM notation </i>
//    <check> 
//      <loc> ( (unsigned int) RTC_TSTR ) </loc>
//      <o.22..22> PM
//    </check>
//  </item>
//  


// --------------------------------  Register RTree: RTC_TSTR  ------------------------------------
// SVD Line: 25021

//  <rtree> SFDITEM_REG__RTC_TSTR
//    <name> TSTR </name>
//    <r> 
//    <i> [Bits 31..0] RO (@ 0x40002830) time stamp time register </i>
//    <loc> ( (unsigned int)((RTC_TSTR >> 0) & 0xFFFFFFFF) ) </loc>
//    <item> SFDITEM_FIELD__RTC_TSTR_SU </item>
//    <item> SFDITEM_FIELD__RTC_TSTR_ST </item>
//    <item> SFDITEM_FIELD__RTC_TSTR_MNU </item>
//    <item> SFDITEM_FIELD__RTC_TSTR_MNT </item>
//    <item> SFDITEM_FIELD__RTC_TSTR_HU </item>
//    <item> SFDITEM_FIELD__RTC_TSTR_HT </item>
//    <item> SFDITEM_FIELD__RTC_TSTR_PM </item>
//  </rtree>
//  


// -----------------------------  Register Item Address: RTC_TSDR  --------------------------------
// SVD Line: 25074

unsigned int RTC_TSDR __AT (0x40002834);



// --------------------------------  Field Item: RTC_TSDR_WDU  ------------------------------------
// SVD Line: 25083

//  <item> SFDITEM_FIELD__RTC_TSDR_WDU
//    <name> WDU </name>
//    <r> 
//    <i> [Bits 15..13] RO (@ 0x40002834) Week day units </i>
//    <edit> 
//      <loc> ( (unsigned char)((RTC_TSDR >> 13) & 0x7) ) </loc>
//    </edit>
//  </item>
//  


// ---------------------------------  Field Item: RTC_TSDR_MT  ------------------------------------
// SVD Line: 25089

//  <item> SFDITEM_FIELD__RTC_TSDR_MT
//    <name> MT </name>
//    <r> 
//    <i> [Bit 12] RO (@ 0x40002834) Month tens in BCD format </i>
//    <check> 
//      <loc> ( (unsigned int) RTC_TSDR ) </loc>
//      <o.12..12> MT
//    </check>
//  </item>
//  


// ---------------------------------  Field Item: RTC_TSDR_MU  ------------------------------------
// SVD Line: 25095

//  <item> SFDITEM_FIELD__RTC_TSDR_MU
//    <name> MU </name>
//    <r> 
//    <i> [Bits 11..8] RO (@ 0x40002834) Month units in BCD format </i>
//    <edit> 
//      <loc> ( (unsigned char)((RTC_TSDR >> 8) & 0xF) ) </loc>
//    </edit>
//  </item>
//  


// ---------------------------------  Field Item: RTC_TSDR_DT  ------------------------------------
// SVD Line: 25101

//  <item> SFDITEM_FIELD__RTC_TSDR_DT
//    <name> DT </name>
//    <r> 
//    <i> [Bits 5..4] RO (@ 0x40002834) Date tens in BCD format </i>
//    <edit> 
//      <loc> ( (unsigned char)((RTC_TSDR >> 4) & 0x3) ) </loc>
//    </edit>
//  </item>
//  


// ---------------------------------  Field Item: RTC_TSDR_DU  ------------------------------------
// SVD Line: 25107

//  <item> SFDITEM_FIELD__RTC_TSDR_DU
//    <name> DU </name>
//    <r> 
//    <i> [Bits 3..0] RO (@ 0x40002834) Date units in BCD format </i>
//    <edit> 
//      <loc> ( (unsigned char)((RTC_TSDR >> 0) & 0xF) ) </loc>
//    </edit>
//  </item>
//  


// --------------------------------  Register RTree: RTC_TSDR  ------------------------------------
// SVD Line: 25074

//  <rtree> SFDITEM_REG__RTC_TSDR
//    <name> TSDR </name>
//    <r> 
//    <i> [Bits 31..0] RO (@ 0x40002834) time stamp date register </i>
//    <loc> ( (unsigned int)((RTC_TSDR >> 0) & 0xFFFFFFFF) ) </loc>
//    <item> SFDITEM_FIELD__RTC_TSDR_WDU </item>
//    <item> SFDITEM_FIELD__RTC_TSDR_MT </item>
//    <item> SFDITEM_FIELD__RTC_TSDR_MU </item>
//    <item> SFDITEM_FIELD__RTC_TSDR_DT </item>
//    <item> SFDITEM_FIELD__RTC_TSDR_DU </item>
//  </rtree>
//  


// ----------------------------  Register Item Address: RTC_TSSSR  --------------------------------
// SVD Line: 25115

unsigned int RTC_TSSSR __AT (0x40002838);



// --------------------------------  Field Item: RTC_TSSSR_SS  ------------------------------------
// SVD Line: 25124

//  <item> SFDITEM_FIELD__RTC_TSSSR_SS
//    <name> SS </name>
//    <r> 
//    <i> [Bits 15..0] RO (@ 0x40002838) Sub second value </i>
//    <edit> 
//      <loc> ( (unsigned short)((RTC_TSSSR >> 0) & 0xFFFF) ) </loc>
//    </edit>
//  </item>
//  


// --------------------------------  Register RTree: RTC_TSSSR  -----------------------------------
// SVD Line: 25115

//  <rtree> SFDITEM_REG__RTC_TSSSR
//    <name> TSSSR </name>
//    <r> 
//    <i> [Bits 31..0] RO (@ 0x40002838) timestamp sub second register </i>
//    <loc> ( (unsigned int)((RTC_TSSSR >> 0) & 0xFFFFFFFF) ) </loc>
//    <item> SFDITEM_FIELD__RTC_TSSSR_SS </item>
//  </rtree>
//  


// ----------------------------  Register Item Address: RTC_ALRMAR  -------------------------------
// SVD Line: 25132

unsigned int RTC_ALRMAR __AT (0x40002840);



// -------------------------------  Field Item: RTC_ALRMAR_MSK4  ----------------------------------
// SVD Line: 25141

//  <item> SFDITEM_FIELD__RTC_ALRMAR_MSK4
//    <name> MSK4 </name>
//    <rw> 
//    <i> [Bit 31] RW (@ 0x40002840) Alarm A date mask </i>
//    <check> 
//      <loc> ( (unsigned int) RTC_ALRMAR ) </loc>
//      <o.31..31> MSK4
//    </check>
//  </item>
//  


// ------------------------------  Field Item: RTC_ALRMAR_WDSEL  ----------------------------------
// SVD Line: 25147

//  <item> SFDITEM_FIELD__RTC_ALRMAR_WDSEL
//    <name> WDSEL </name>
//    <rw> 
//    <i> [Bit 30] RW (@ 0x40002840) Week day selection </i>
//    <check> 
//      <loc> ( (unsigned int) RTC_ALRMAR ) </loc>
//      <o.30..30> WDSEL
//    </check>
//  </item>
//  


// --------------------------------  Field Item: RTC_ALRMAR_DT  -----------------------------------
// SVD Line: 25153

//  <item> SFDITEM_FIELD__RTC_ALRMAR_DT
//    <name> DT </name>
//    <rw> 
//    <i> [Bits 29..28] RW (@ 0x40002840) Date tens in BCD format </i>
//    <edit> 
//      <loc> ( (unsigned char)((RTC_ALRMAR >> 28) & 0x3), ((RTC_ALRMAR = (RTC_ALRMAR & ~(0x3UL << 28 )) | ((unsigned long)(Gui_u8:GuiVal & 0x3) << 28 ) ) )) </loc>
//    </edit>
//  </item>
//  


// --------------------------------  Field Item: RTC_ALRMAR_DU  -----------------------------------
// SVD Line: 25159

//  <item> SFDITEM_FIELD__RTC_ALRMAR_DU
//    <name> DU </name>
//    <rw> 
//    <i> [Bits 27..24] RW (@ 0x40002840) Date units or day in BCD  format </i>
//    <edit> 
//      <loc> ( (unsigned char)((RTC_ALRMAR >> 24) & 0xF), ((RTC_ALRMAR = (RTC_ALRMAR & ~(0xFUL << 24 )) | ((unsigned long)(Gui_u8:GuiVal & 0xF) << 24 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -------------------------------  Field Item: RTC_ALRMAR_MSK3  ----------------------------------
// SVD Line: 25166

//  <item> SFDITEM_FIELD__RTC_ALRMAR_MSK3
//    <name> MSK3 </name>
//    <rw> 
//    <i> [Bit 23] RW (@ 0x40002840) Alarm A hours mask </i>
//    <check> 
//      <loc> ( (unsigned int) RTC_ALRMAR ) </loc>
//      <o.23..23> MSK3
//    </check>
//  </item>
//  


// --------------------------------  Field Item: RTC_ALRMAR_PM  -----------------------------------
// SVD Line: 25172

//  <item> SFDITEM_FIELD__RTC_ALRMAR_PM
//    <name> PM </name>
//    <rw> 
//    <i> [Bit 22] RW (@ 0x40002840) AM/PM notation </i>
//    <check> 
//      <loc> ( (unsigned int) RTC_ALRMAR ) </loc>
//      <o.22..22> PM
//    </check>
//  </item>
//  


// --------------------------------  Field Item: RTC_ALRMAR_HT  -----------------------------------
// SVD Line: 25178

//  <item> SFDITEM_FIELD__RTC_ALRMAR_HT
//    <name> HT </name>
//    <rw> 
//    <i> [Bits 21..20] RW (@ 0x40002840) Hour tens in BCD format </i>
//    <edit> 
//      <loc> ( (unsigned char)((RTC_ALRMAR >> 20) & 0x3), ((RTC_ALRMAR = (RTC_ALRMAR & ~(0x3UL << 20 )) | ((unsigned long)(Gui_u8:GuiVal & 0x3) << 20 ) ) )) </loc>
//    </edit>
//  </item>
//  


// --------------------------------  Field Item: RTC_ALRMAR_HU  -----------------------------------
// SVD Line: 25184

//  <item> SFDITEM_FIELD__RTC_ALRMAR_HU
//    <name> HU </name>
//    <rw> 
//    <i> [Bits 19..16] RW (@ 0x40002840) Hour units in BCD format </i>
//    <edit> 
//      <loc> ( (unsigned char)((RTC_ALRMAR >> 16) & 0xF), ((RTC_ALRMAR = (RTC_ALRMAR & ~(0xFUL << 16 )) | ((unsigned long)(Gui_u8:GuiVal & 0xF) << 16 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -------------------------------  Field Item: RTC_ALRMAR_MSK2  ----------------------------------
// SVD Line: 25190

//  <item> SFDITEM_FIELD__RTC_ALRMAR_MSK2
//    <name> MSK2 </name>
//    <rw> 
//    <i> [Bit 15] RW (@ 0x40002840) Alarm A minutes mask </i>
//    <check> 
//      <loc> ( (unsigned int) RTC_ALRMAR ) </loc>
//      <o.15..15> MSK2
//    </check>
//  </item>
//  


// -------------------------------  Field Item: RTC_ALRMAR_MNT  -----------------------------------
// SVD Line: 25196

//  <item> SFDITEM_FIELD__RTC_ALRMAR_MNT
//    <name> MNT </name>
//    <rw> 
//    <i> [Bits 14..12] RW (@ 0x40002840) Minute tens in BCD format </i>
//    <edit> 
//      <loc> ( (unsigned char)((RTC_ALRMAR >> 12) & 0x7), ((RTC_ALRMAR = (RTC_ALRMAR & ~(0x7UL << 12 )) | ((unsigned long)(Gui_u8:GuiVal & 0x7) << 12 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -------------------------------  Field Item: RTC_ALRMAR_MNU  -----------------------------------
// SVD Line: 25202

//  <item> SFDITEM_FIELD__RTC_ALRMAR_MNU
//    <name> MNU </name>
//    <rw> 
//    <i> [Bits 11..8] RW (@ 0x40002840) Minute units in BCD format </i>
//    <edit> 
//      <loc> ( (unsigned char)((RTC_ALRMAR >> 8) & 0xF), ((RTC_ALRMAR = (RTC_ALRMAR & ~(0xFUL << 8 )) | ((unsigned long)(Gui_u8:GuiVal & 0xF) << 8 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -------------------------------  Field Item: RTC_ALRMAR_MSK1  ----------------------------------
// SVD Line: 25208

//  <item> SFDITEM_FIELD__RTC_ALRMAR_MSK1
//    <name> MSK1 </name>
//    <rw> 
//    <i> [Bit 7] RW (@ 0x40002840) Alarm A seconds mask </i>
//    <check> 
//      <loc> ( (unsigned int) RTC_ALRMAR ) </loc>
//      <o.7..7> MSK1
//    </check>
//  </item>
//  


// --------------------------------  Field Item: RTC_ALRMAR_ST  -----------------------------------
// SVD Line: 25214

//  <item> SFDITEM_FIELD__RTC_ALRMAR_ST
//    <name> ST </name>
//    <rw> 
//    <i> [Bits 6..4] RW (@ 0x40002840) Second tens in BCD format </i>
//    <edit> 
//      <loc> ( (unsigned char)((RTC_ALRMAR >> 4) & 0x7), ((RTC_ALRMAR = (RTC_ALRMAR & ~(0x7UL << 4 )) | ((unsigned long)(Gui_u8:GuiVal & 0x7) << 4 ) ) )) </loc>
//    </edit>
//  </item>
//  


// --------------------------------  Field Item: RTC_ALRMAR_SU  -----------------------------------
// SVD Line: 25220

//  <item> SFDITEM_FIELD__RTC_ALRMAR_SU
//    <name> SU </name>
//    <rw> 
//    <i> [Bits 3..0] RW (@ 0x40002840) Second units in BCD format </i>
//    <edit> 
//      <loc> ( (unsigned char)((RTC_ALRMAR >> 0) & 0xF), ((RTC_ALRMAR = (RTC_ALRMAR & ~(0xFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -------------------------------  Register RTree: RTC_ALRMAR  -----------------------------------
// SVD Line: 25132

//  <rtree> SFDITEM_REG__RTC_ALRMAR
//    <name> ALRMAR </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x40002840) alarm A register </i>
//    <loc> ( (unsigned int)((RTC_ALRMAR >> 0) & 0xFFFFFFFF), ((RTC_ALRMAR = (RTC_ALRMAR & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__RTC_ALRMAR_MSK4 </item>
//    <item> SFDITEM_FIELD__RTC_ALRMAR_WDSEL </item>
//    <item> SFDITEM_FIELD__RTC_ALRMAR_DT </item>
//    <item> SFDITEM_FIELD__RTC_ALRMAR_DU </item>
//    <item> SFDITEM_FIELD__RTC_ALRMAR_MSK3 </item>
//    <item> SFDITEM_FIELD__RTC_ALRMAR_PM </item>
//    <item> SFDITEM_FIELD__RTC_ALRMAR_HT </item>
//    <item> SFDITEM_FIELD__RTC_ALRMAR_HU </item>
//    <item> SFDITEM_FIELD__RTC_ALRMAR_MSK2 </item>
//    <item> SFDITEM_FIELD__RTC_ALRMAR_MNT </item>
//    <item> SFDITEM_FIELD__RTC_ALRMAR_MNU </item>
//    <item> SFDITEM_FIELD__RTC_ALRMAR_MSK1 </item>
//    <item> SFDITEM_FIELD__RTC_ALRMAR_ST </item>
//    <item> SFDITEM_FIELD__RTC_ALRMAR_SU </item>
//  </rtree>
//  


// ---------------------------  Register Item Address: RTC_ALRMASSR  ------------------------------
// SVD Line: 25228

unsigned int RTC_ALRMASSR __AT (0x40002844);



// -----------------------------  Field Item: RTC_ALRMASSR_MASKSS  --------------------------------
// SVD Line: 25237

//  <item> SFDITEM_FIELD__RTC_ALRMASSR_MASKSS
//    <name> MASKSS </name>
//    <rw> 
//    <i> [Bits 27..24] RW (@ 0x40002844) Mask the most-significant bits starting  at this bit </i>
//    <edit> 
//      <loc> ( (unsigned char)((RTC_ALRMASSR >> 24) & 0xF), ((RTC_ALRMASSR = (RTC_ALRMASSR & ~(0xFUL << 24 )) | ((unsigned long)(Gui_u8:GuiVal & 0xF) << 24 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -------------------------------  Field Item: RTC_ALRMASSR_SS  ----------------------------------
// SVD Line: 25244

//  <item> SFDITEM_FIELD__RTC_ALRMASSR_SS
//    <name> SS </name>
//    <rw> 
//    <i> [Bits 14..0] RW (@ 0x40002844) Sub seconds value </i>
//    <edit> 
//      <loc> ( (unsigned short)((RTC_ALRMASSR >> 0) & 0x7FFF), ((RTC_ALRMASSR = (RTC_ALRMASSR & ~(0x7FFFUL << 0 )) | ((unsigned long)(Gui_u16:GuiVal & 0x7FFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ------------------------------  Register RTree: RTC_ALRMASSR  ----------------------------------
// SVD Line: 25228

//  <rtree> SFDITEM_REG__RTC_ALRMASSR
//    <name> ALRMASSR </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x40002844) alarm A sub second register </i>
//    <loc> ( (unsigned int)((RTC_ALRMASSR >> 0) & 0xFFFFFFFF), ((RTC_ALRMASSR = (RTC_ALRMASSR & ~(0xF007FFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xF007FFF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__RTC_ALRMASSR_MASKSS </item>
//    <item> SFDITEM_FIELD__RTC_ALRMASSR_SS </item>
//  </rtree>
//  


// ----------------------------  Register Item Address: RTC_ALRMBR  -------------------------------
// SVD Line: 25252

unsigned int RTC_ALRMBR __AT (0x40002848);



// -------------------------------  Field Item: RTC_ALRMBR_MSK4  ----------------------------------
// SVD Line: 25261

//  <item> SFDITEM_FIELD__RTC_ALRMBR_MSK4
//    <name> MSK4 </name>
//    <rw> 
//    <i> [Bit 31] RW (@ 0x40002848) Alarm B date mask </i>
//    <check> 
//      <loc> ( (unsigned int) RTC_ALRMBR ) </loc>
//      <o.31..31> MSK4
//    </check>
//  </item>
//  


// ------------------------------  Field Item: RTC_ALRMBR_WDSEL  ----------------------------------
// SVD Line: 25267

//  <item> SFDITEM_FIELD__RTC_ALRMBR_WDSEL
//    <name> WDSEL </name>
//    <rw> 
//    <i> [Bit 30] RW (@ 0x40002848) Week day selection </i>
//    <check> 
//      <loc> ( (unsigned int) RTC_ALRMBR ) </loc>
//      <o.30..30> WDSEL
//    </check>
//  </item>
//  


// --------------------------------  Field Item: RTC_ALRMBR_DT  -----------------------------------
// SVD Line: 25273

//  <item> SFDITEM_FIELD__RTC_ALRMBR_DT
//    <name> DT </name>
//    <rw> 
//    <i> [Bits 29..28] RW (@ 0x40002848) Date tens in BCD format </i>
//    <edit> 
//      <loc> ( (unsigned char)((RTC_ALRMBR >> 28) & 0x3), ((RTC_ALRMBR = (RTC_ALRMBR & ~(0x3UL << 28 )) | ((unsigned long)(Gui_u8:GuiVal & 0x3) << 28 ) ) )) </loc>
//    </edit>
//  </item>
//  


// --------------------------------  Field Item: RTC_ALRMBR_DU  -----------------------------------
// SVD Line: 25279

//  <item> SFDITEM_FIELD__RTC_ALRMBR_DU
//    <name> DU </name>
//    <rw> 
//    <i> [Bits 27..24] RW (@ 0x40002848) Date units or day in BCD  format </i>
//    <edit> 
//      <loc> ( (unsigned char)((RTC_ALRMBR >> 24) & 0xF), ((RTC_ALRMBR = (RTC_ALRMBR & ~(0xFUL << 24 )) | ((unsigned long)(Gui_u8:GuiVal & 0xF) << 24 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -------------------------------  Field Item: RTC_ALRMBR_MSK3  ----------------------------------
// SVD Line: 25286

//  <item> SFDITEM_FIELD__RTC_ALRMBR_MSK3
//    <name> MSK3 </name>
//    <rw> 
//    <i> [Bit 23] RW (@ 0x40002848) Alarm B hours mask </i>
//    <check> 
//      <loc> ( (unsigned int) RTC_ALRMBR ) </loc>
//      <o.23..23> MSK3
//    </check>
//  </item>
//  


// --------------------------------  Field Item: RTC_ALRMBR_PM  -----------------------------------
// SVD Line: 25292

//  <item> SFDITEM_FIELD__RTC_ALRMBR_PM
//    <name> PM </name>
//    <rw> 
//    <i> [Bit 22] RW (@ 0x40002848) AM/PM notation </i>
//    <check> 
//      <loc> ( (unsigned int) RTC_ALRMBR ) </loc>
//      <o.22..22> PM
//    </check>
//  </item>
//  


// --------------------------------  Field Item: RTC_ALRMBR_HT  -----------------------------------
// SVD Line: 25298

//  <item> SFDITEM_FIELD__RTC_ALRMBR_HT
//    <name> HT </name>
//    <rw> 
//    <i> [Bits 21..20] RW (@ 0x40002848) Hour tens in BCD format </i>
//    <edit> 
//      <loc> ( (unsigned char)((RTC_ALRMBR >> 20) & 0x3), ((RTC_ALRMBR = (RTC_ALRMBR & ~(0x3UL << 20 )) | ((unsigned long)(Gui_u8:GuiVal & 0x3) << 20 ) ) )) </loc>
//    </edit>
//  </item>
//  


// --------------------------------  Field Item: RTC_ALRMBR_HU  -----------------------------------
// SVD Line: 25304

//  <item> SFDITEM_FIELD__RTC_ALRMBR_HU
//    <name> HU </name>
//    <rw> 
//    <i> [Bits 19..16] RW (@ 0x40002848) Hour units in BCD format </i>
//    <edit> 
//      <loc> ( (unsigned char)((RTC_ALRMBR >> 16) & 0xF), ((RTC_ALRMBR = (RTC_ALRMBR & ~(0xFUL << 16 )) | ((unsigned long)(Gui_u8:GuiVal & 0xF) << 16 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -------------------------------  Field Item: RTC_ALRMBR_MSK2  ----------------------------------
// SVD Line: 25310

//  <item> SFDITEM_FIELD__RTC_ALRMBR_MSK2
//    <name> MSK2 </name>
//    <rw> 
//    <i> [Bit 15] RW (@ 0x40002848) Alarm B minutes mask </i>
//    <check> 
//      <loc> ( (unsigned int) RTC_ALRMBR ) </loc>
//      <o.15..15> MSK2
//    </check>
//  </item>
//  


// -------------------------------  Field Item: RTC_ALRMBR_MNT  -----------------------------------
// SVD Line: 25316

//  <item> SFDITEM_FIELD__RTC_ALRMBR_MNT
//    <name> MNT </name>
//    <rw> 
//    <i> [Bits 14..12] RW (@ 0x40002848) Minute tens in BCD format </i>
//    <edit> 
//      <loc> ( (unsigned char)((RTC_ALRMBR >> 12) & 0x7), ((RTC_ALRMBR = (RTC_ALRMBR & ~(0x7UL << 12 )) | ((unsigned long)(Gui_u8:GuiVal & 0x7) << 12 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -------------------------------  Field Item: RTC_ALRMBR_MNU  -----------------------------------
// SVD Line: 25322

//  <item> SFDITEM_FIELD__RTC_ALRMBR_MNU
//    <name> MNU </name>
//    <rw> 
//    <i> [Bits 11..8] RW (@ 0x40002848) Minute units in BCD format </i>
//    <edit> 
//      <loc> ( (unsigned char)((RTC_ALRMBR >> 8) & 0xF), ((RTC_ALRMBR = (RTC_ALRMBR & ~(0xFUL << 8 )) | ((unsigned long)(Gui_u8:GuiVal & 0xF) << 8 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -------------------------------  Field Item: RTC_ALRMBR_MSK1  ----------------------------------
// SVD Line: 25328

//  <item> SFDITEM_FIELD__RTC_ALRMBR_MSK1
//    <name> MSK1 </name>
//    <rw> 
//    <i> [Bit 7] RW (@ 0x40002848) Alarm B seconds mask </i>
//    <check> 
//      <loc> ( (unsigned int) RTC_ALRMBR ) </loc>
//      <o.7..7> MSK1
//    </check>
//  </item>
//  


// --------------------------------  Field Item: RTC_ALRMBR_ST  -----------------------------------
// SVD Line: 25334

//  <item> SFDITEM_FIELD__RTC_ALRMBR_ST
//    <name> ST </name>
//    <rw> 
//    <i> [Bits 6..4] RW (@ 0x40002848) Second tens in BCD format </i>
//    <edit> 
//      <loc> ( (unsigned char)((RTC_ALRMBR >> 4) & 0x7), ((RTC_ALRMBR = (RTC_ALRMBR & ~(0x7UL << 4 )) | ((unsigned long)(Gui_u8:GuiVal & 0x7) << 4 ) ) )) </loc>
//    </edit>
//  </item>
//  


// --------------------------------  Field Item: RTC_ALRMBR_SU  -----------------------------------
// SVD Line: 25340

//  <item> SFDITEM_FIELD__RTC_ALRMBR_SU
//    <name> SU </name>
//    <rw> 
//    <i> [Bits 3..0] RW (@ 0x40002848) Second units in BCD format </i>
//    <edit> 
//      <loc> ( (unsigned char)((RTC_ALRMBR >> 0) & 0xF), ((RTC_ALRMBR = (RTC_ALRMBR & ~(0xFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -------------------------------  Register RTree: RTC_ALRMBR  -----------------------------------
// SVD Line: 25252

//  <rtree> SFDITEM_REG__RTC_ALRMBR
//    <name> ALRMBR </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x40002848) alarm B register </i>
//    <loc> ( (unsigned int)((RTC_ALRMBR >> 0) & 0xFFFFFFFF), ((RTC_ALRMBR = (RTC_ALRMBR & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__RTC_ALRMBR_MSK4 </item>
//    <item> SFDITEM_FIELD__RTC_ALRMBR_WDSEL </item>
//    <item> SFDITEM_FIELD__RTC_ALRMBR_DT </item>
//    <item> SFDITEM_FIELD__RTC_ALRMBR_DU </item>
//    <item> SFDITEM_FIELD__RTC_ALRMBR_MSK3 </item>
//    <item> SFDITEM_FIELD__RTC_ALRMBR_PM </item>
//    <item> SFDITEM_FIELD__RTC_ALRMBR_HT </item>
//    <item> SFDITEM_FIELD__RTC_ALRMBR_HU </item>
//    <item> SFDITEM_FIELD__RTC_ALRMBR_MSK2 </item>
//    <item> SFDITEM_FIELD__RTC_ALRMBR_MNT </item>
//    <item> SFDITEM_FIELD__RTC_ALRMBR_MNU </item>
//    <item> SFDITEM_FIELD__RTC_ALRMBR_MSK1 </item>
//    <item> SFDITEM_FIELD__RTC_ALRMBR_ST </item>
//    <item> SFDITEM_FIELD__RTC_ALRMBR_SU </item>
//  </rtree>
//  


// ---------------------------  Register Item Address: RTC_ALRMBSSR  ------------------------------
// SVD Line: 25348

unsigned int RTC_ALRMBSSR __AT (0x4000284C);



// -----------------------------  Field Item: RTC_ALRMBSSR_MASKSS  --------------------------------
// SVD Line: 25357

//  <item> SFDITEM_FIELD__RTC_ALRMBSSR_MASKSS
//    <name> MASKSS </name>
//    <rw> 
//    <i> [Bits 27..24] RW (@ 0x4000284C) Mask the most-significant bits starting  at this bit </i>
//    <edit> 
//      <loc> ( (unsigned char)((RTC_ALRMBSSR >> 24) & 0xF), ((RTC_ALRMBSSR = (RTC_ALRMBSSR & ~(0xFUL << 24 )) | ((unsigned long)(Gui_u8:GuiVal & 0xF) << 24 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -------------------------------  Field Item: RTC_ALRMBSSR_SS  ----------------------------------
// SVD Line: 25364

//  <item> SFDITEM_FIELD__RTC_ALRMBSSR_SS
//    <name> SS </name>
//    <rw> 
//    <i> [Bits 14..0] RW (@ 0x4000284C) Sub seconds value </i>
//    <edit> 
//      <loc> ( (unsigned short)((RTC_ALRMBSSR >> 0) & 0x7FFF), ((RTC_ALRMBSSR = (RTC_ALRMBSSR & ~(0x7FFFUL << 0 )) | ((unsigned long)(Gui_u16:GuiVal & 0x7FFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ------------------------------  Register RTree: RTC_ALRMBSSR  ----------------------------------
// SVD Line: 25348

//  <rtree> SFDITEM_REG__RTC_ALRMBSSR
//    <name> ALRMBSSR </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x4000284C) alarm B sub second register </i>
//    <loc> ( (unsigned int)((RTC_ALRMBSSR >> 0) & 0xFFFFFFFF), ((RTC_ALRMBSSR = (RTC_ALRMBSSR & ~(0xF007FFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xF007FFF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__RTC_ALRMBSSR_MASKSS </item>
//    <item> SFDITEM_FIELD__RTC_ALRMBSSR_SS </item>
//  </rtree>
//  


// ------------------------------  Register Item Address: RTC_SR  ---------------------------------
// SVD Line: 25372

unsigned int RTC_SR __AT (0x40002850);



// --------------------------------  Field Item: RTC_SR_ALRAF  ------------------------------------
// SVD Line: 25381

//  <item> SFDITEM_FIELD__RTC_SR_ALRAF
//    <name> ALRAF </name>
//    <r> 
//    <i> [Bit 0] RO (@ 0x40002850) ALRAF </i>
//    <check> 
//      <loc> ( (unsigned int) RTC_SR ) </loc>
//      <o.0..0> ALRAF
//    </check>
//  </item>
//  


// --------------------------------  Field Item: RTC_SR_ALRBF  ------------------------------------
// SVD Line: 25387

//  <item> SFDITEM_FIELD__RTC_SR_ALRBF
//    <name> ALRBF </name>
//    <r> 
//    <i> [Bit 1] RO (@ 0x40002850) ALRBF </i>
//    <check> 
//      <loc> ( (unsigned int) RTC_SR ) </loc>
//      <o.1..1> ALRBF
//    </check>
//  </item>
//  


// ---------------------------------  Field Item: RTC_SR_WUTF  ------------------------------------
// SVD Line: 25393

//  <item> SFDITEM_FIELD__RTC_SR_WUTF
//    <name> WUTF </name>
//    <r> 
//    <i> [Bit 2] RO (@ 0x40002850) WUTF </i>
//    <check> 
//      <loc> ( (unsigned int) RTC_SR ) </loc>
//      <o.2..2> WUTF
//    </check>
//  </item>
//  


// ---------------------------------  Field Item: RTC_SR_TSF  -------------------------------------
// SVD Line: 25399

//  <item> SFDITEM_FIELD__RTC_SR_TSF
//    <name> TSF </name>
//    <r> 
//    <i> [Bit 3] RO (@ 0x40002850) TSF </i>
//    <check> 
//      <loc> ( (unsigned int) RTC_SR ) </loc>
//      <o.3..3> TSF
//    </check>
//  </item>
//  


// --------------------------------  Field Item: RTC_SR_TSOVF  ------------------------------------
// SVD Line: 25405

//  <item> SFDITEM_FIELD__RTC_SR_TSOVF
//    <name> TSOVF </name>
//    <r> 
//    <i> [Bit 4] RO (@ 0x40002850) TSOVF </i>
//    <check> 
//      <loc> ( (unsigned int) RTC_SR ) </loc>
//      <o.4..4> TSOVF
//    </check>
//  </item>
//  


// ---------------------------------  Field Item: RTC_SR_ITSF  ------------------------------------
// SVD Line: 25411

//  <item> SFDITEM_FIELD__RTC_SR_ITSF
//    <name> ITSF </name>
//    <r> 
//    <i> [Bit 5] RO (@ 0x40002850) ITSF </i>
//    <check> 
//      <loc> ( (unsigned int) RTC_SR ) </loc>
//      <o.5..5> ITSF
//    </check>
//  </item>
//  


// ---------------------------------  Register RTree: RTC_SR  -------------------------------------
// SVD Line: 25372

//  <rtree> SFDITEM_REG__RTC_SR
//    <name> SR </name>
//    <r> 
//    <i> [Bits 31..0] RO (@ 0x40002850) status register </i>
//    <loc> ( (unsigned int)((RTC_SR >> 0) & 0xFFFFFFFF) ) </loc>
//    <item> SFDITEM_FIELD__RTC_SR_ALRAF </item>
//    <item> SFDITEM_FIELD__RTC_SR_ALRBF </item>
//    <item> SFDITEM_FIELD__RTC_SR_WUTF </item>
//    <item> SFDITEM_FIELD__RTC_SR_TSF </item>
//    <item> SFDITEM_FIELD__RTC_SR_TSOVF </item>
//    <item> SFDITEM_FIELD__RTC_SR_ITSF </item>
//  </rtree>
//  


// -----------------------------  Register Item Address: RTC_MISR  --------------------------------
// SVD Line: 25419

unsigned int RTC_MISR __AT (0x40002854);



// -------------------------------  Field Item: RTC_MISR_ALRAMF  ----------------------------------
// SVD Line: 25429

//  <item> SFDITEM_FIELD__RTC_MISR_ALRAMF
//    <name> ALRAMF </name>
//    <r> 
//    <i> [Bit 0] RO (@ 0x40002854) ALRAMF </i>
//    <check> 
//      <loc> ( (unsigned int) RTC_MISR ) </loc>
//      <o.0..0> ALRAMF
//    </check>
//  </item>
//  


// -------------------------------  Field Item: RTC_MISR_ALRBMF  ----------------------------------
// SVD Line: 25435

//  <item> SFDITEM_FIELD__RTC_MISR_ALRBMF
//    <name> ALRBMF </name>
//    <r> 
//    <i> [Bit 1] RO (@ 0x40002854) ALRBMF </i>
//    <check> 
//      <loc> ( (unsigned int) RTC_MISR ) </loc>
//      <o.1..1> ALRBMF
//    </check>
//  </item>
//  


// -------------------------------  Field Item: RTC_MISR_WUTMF  -----------------------------------
// SVD Line: 25441

//  <item> SFDITEM_FIELD__RTC_MISR_WUTMF
//    <name> WUTMF </name>
//    <r> 
//    <i> [Bit 2] RO (@ 0x40002854) WUTMF </i>
//    <check> 
//      <loc> ( (unsigned int) RTC_MISR ) </loc>
//      <o.2..2> WUTMF
//    </check>
//  </item>
//  


// --------------------------------  Field Item: RTC_MISR_TSMF  -----------------------------------
// SVD Line: 25447

//  <item> SFDITEM_FIELD__RTC_MISR_TSMF
//    <name> TSMF </name>
//    <r> 
//    <i> [Bit 3] RO (@ 0x40002854) TSMF </i>
//    <check> 
//      <loc> ( (unsigned int) RTC_MISR ) </loc>
//      <o.3..3> TSMF
//    </check>
//  </item>
//  


// -------------------------------  Field Item: RTC_MISR_TSOVMF  ----------------------------------
// SVD Line: 25453

//  <item> SFDITEM_FIELD__RTC_MISR_TSOVMF
//    <name> TSOVMF </name>
//    <r> 
//    <i> [Bit 4] RO (@ 0x40002854) TSOVMF </i>
//    <check> 
//      <loc> ( (unsigned int) RTC_MISR ) </loc>
//      <o.4..4> TSOVMF
//    </check>
//  </item>
//  


// -------------------------------  Field Item: RTC_MISR_ITSMF  -----------------------------------
// SVD Line: 25459

//  <item> SFDITEM_FIELD__RTC_MISR_ITSMF
//    <name> ITSMF </name>
//    <r> 
//    <i> [Bit 5] RO (@ 0x40002854) ITSMF </i>
//    <check> 
//      <loc> ( (unsigned int) RTC_MISR ) </loc>
//      <o.5..5> ITSMF
//    </check>
//  </item>
//  


// --------------------------------  Register RTree: RTC_MISR  ------------------------------------
// SVD Line: 25419

//  <rtree> SFDITEM_REG__RTC_MISR
//    <name> MISR </name>
//    <r> 
//    <i> [Bits 31..0] RO (@ 0x40002854) masked interrupt status  register </i>
//    <loc> ( (unsigned int)((RTC_MISR >> 0) & 0xFFFFFFFF) ) </loc>
//    <item> SFDITEM_FIELD__RTC_MISR_ALRAMF </item>
//    <item> SFDITEM_FIELD__RTC_MISR_ALRBMF </item>
//    <item> SFDITEM_FIELD__RTC_MISR_WUTMF </item>
//    <item> SFDITEM_FIELD__RTC_MISR_TSMF </item>
//    <item> SFDITEM_FIELD__RTC_MISR_TSOVMF </item>
//    <item> SFDITEM_FIELD__RTC_MISR_ITSMF </item>
//  </rtree>
//  


// -----------------------------  Register Item Address: RTC_SCR  ---------------------------------
// SVD Line: 25467

unsigned int RTC_SCR __AT (0x4000285C);



// -------------------------------  Field Item: RTC_SCR_CALRAF  -----------------------------------
// SVD Line: 25476

//  <item> SFDITEM_FIELD__RTC_SCR_CALRAF
//    <name> CALRAF </name>
//    <rw> 
//    <i> [Bit 0] RW (@ 0x4000285C) CALRAF </i>
//    <check> 
//      <loc> ( (unsigned int) RTC_SCR ) </loc>
//      <o.0..0> CALRAF
//    </check>
//  </item>
//  


// -------------------------------  Field Item: RTC_SCR_CALRBF  -----------------------------------
// SVD Line: 25482

//  <item> SFDITEM_FIELD__RTC_SCR_CALRBF
//    <name> CALRBF </name>
//    <rw> 
//    <i> [Bit 1] RW (@ 0x4000285C) CALRBF </i>
//    <check> 
//      <loc> ( (unsigned int) RTC_SCR ) </loc>
//      <o.1..1> CALRBF
//    </check>
//  </item>
//  


// --------------------------------  Field Item: RTC_SCR_CWUTF  -----------------------------------
// SVD Line: 25488

//  <item> SFDITEM_FIELD__RTC_SCR_CWUTF
//    <name> CWUTF </name>
//    <rw> 
//    <i> [Bit 2] RW (@ 0x4000285C) CWUTF </i>
//    <check> 
//      <loc> ( (unsigned int) RTC_SCR ) </loc>
//      <o.2..2> CWUTF
//    </check>
//  </item>
//  


// --------------------------------  Field Item: RTC_SCR_CTSF  ------------------------------------
// SVD Line: 25494

//  <item> SFDITEM_FIELD__RTC_SCR_CTSF
//    <name> CTSF </name>
//    <rw> 
//    <i> [Bit 3] RW (@ 0x4000285C) CTSF </i>
//    <check> 
//      <loc> ( (unsigned int) RTC_SCR ) </loc>
//      <o.3..3> CTSF
//    </check>
//  </item>
//  


// -------------------------------  Field Item: RTC_SCR_CTSOVF  -----------------------------------
// SVD Line: 25500

//  <item> SFDITEM_FIELD__RTC_SCR_CTSOVF
//    <name> CTSOVF </name>
//    <rw> 
//    <i> [Bit 4] RW (@ 0x4000285C) CTSOVF </i>
//    <check> 
//      <loc> ( (unsigned int) RTC_SCR ) </loc>
//      <o.4..4> CTSOVF
//    </check>
//  </item>
//  


// --------------------------------  Field Item: RTC_SCR_CITSF  -----------------------------------
// SVD Line: 25506

//  <item> SFDITEM_FIELD__RTC_SCR_CITSF
//    <name> CITSF </name>
//    <rw> 
//    <i> [Bit 5] RW (@ 0x4000285C) CITSF </i>
//    <check> 
//      <loc> ( (unsigned int) RTC_SCR ) </loc>
//      <o.5..5> CITSF
//    </check>
//  </item>
//  


// ---------------------------------  Register RTree: RTC_SCR  ------------------------------------
// SVD Line: 25467

//  <rtree> SFDITEM_REG__RTC_SCR
//    <name> SCR </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x4000285C) status clear register </i>
//    <loc> ( (unsigned int)((RTC_SCR >> 0) & 0xFFFFFFFF), ((RTC_SCR = (RTC_SCR & ~(0x3FUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0x3F) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__RTC_SCR_CALRAF </item>
//    <item> SFDITEM_FIELD__RTC_SCR_CALRBF </item>
//    <item> SFDITEM_FIELD__RTC_SCR_CWUTF </item>
//    <item> SFDITEM_FIELD__RTC_SCR_CTSF </item>
//    <item> SFDITEM_FIELD__RTC_SCR_CTSOVF </item>
//    <item> SFDITEM_FIELD__RTC_SCR_CITSF </item>
//  </rtree>
//  


// ----------------------------  Register Item Address: RTC_HWCFGR  -------------------------------
// SVD Line: 25514

unsigned int RTC_HWCFGR __AT (0x40002BF0);



// ------------------------------  Field Item: RTC_HWCFGR_ALARMB  ---------------------------------
// SVD Line: 25524

//  <item> SFDITEM_FIELD__RTC_HWCFGR_ALARMB
//    <name> ALARMB </name>
//    <rw> 
//    <i> [Bits 3..0] RW (@ 0x40002BF0) ALARMB </i>
//    <edit> 
//      <loc> ( (unsigned char)((RTC_HWCFGR >> 0) & 0xF), ((RTC_HWCFGR = (RTC_HWCFGR & ~(0xFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ------------------------------  Field Item: RTC_HWCFGR_WAKEUP  ---------------------------------
// SVD Line: 25530

//  <item> SFDITEM_FIELD__RTC_HWCFGR_WAKEUP
//    <name> WAKEUP </name>
//    <rw> 
//    <i> [Bits 7..4] RW (@ 0x40002BF0) WAKEUP </i>
//    <edit> 
//      <loc> ( (unsigned char)((RTC_HWCFGR >> 4) & 0xF), ((RTC_HWCFGR = (RTC_HWCFGR & ~(0xFUL << 4 )) | ((unsigned long)(Gui_u8:GuiVal & 0xF) << 4 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ---------------------------  Field Item: RTC_HWCFGR_SMOOTH_CALIB  ------------------------------
// SVD Line: 25536

//  <item> SFDITEM_FIELD__RTC_HWCFGR_SMOOTH_CALIB
//    <name> SMOOTH_CALIB </name>
//    <rw> 
//    <i> [Bits 11..8] RW (@ 0x40002BF0) SMOOTH_CALIB </i>
//    <edit> 
//      <loc> ( (unsigned char)((RTC_HWCFGR >> 8) & 0xF), ((RTC_HWCFGR = (RTC_HWCFGR & ~(0xFUL << 8 )) | ((unsigned long)(Gui_u8:GuiVal & 0xF) << 8 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ----------------------------  Field Item: RTC_HWCFGR_TIMESTAMP  --------------------------------
// SVD Line: 25542

//  <item> SFDITEM_FIELD__RTC_HWCFGR_TIMESTAMP
//    <name> TIMESTAMP </name>
//    <rw> 
//    <i> [Bits 15..12] RW (@ 0x40002BF0) TIMESTAMP </i>
//    <edit> 
//      <loc> ( (unsigned char)((RTC_HWCFGR >> 12) & 0xF), ((RTC_HWCFGR = (RTC_HWCFGR & ~(0xFUL << 12 )) | ((unsigned long)(Gui_u8:GuiVal & 0xF) << 12 ) ) )) </loc>
//    </edit>
//  </item>
//  


// --------------------------  Field Item: RTC_HWCFGR_OPTIONREG_OUT  ------------------------------
// SVD Line: 25548

//  <item> SFDITEM_FIELD__RTC_HWCFGR_OPTIONREG_OUT
//    <name> OPTIONREG_OUT </name>
//    <rw> 
//    <i> [Bits 23..16] RW (@ 0x40002BF0) OPTIONREG_OUT </i>
//    <edit> 
//      <loc> ( (unsigned char)((RTC_HWCFGR >> 16) & 0xFF), ((RTC_HWCFGR = (RTC_HWCFGR & ~(0xFFUL << 16 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFF) << 16 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ----------------------------  Field Item: RTC_HWCFGR_TRUST_ZONE  -------------------------------
// SVD Line: 25554

//  <item> SFDITEM_FIELD__RTC_HWCFGR_TRUST_ZONE
//    <name> TRUST_ZONE </name>
//    <rw> 
//    <i> [Bits 27..24] RW (@ 0x40002BF0) TRUST_ZONE </i>
//    <edit> 
//      <loc> ( (unsigned char)((RTC_HWCFGR >> 24) & 0xF), ((RTC_HWCFGR = (RTC_HWCFGR & ~(0xFUL << 24 )) | ((unsigned long)(Gui_u8:GuiVal & 0xF) << 24 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -------------------------------  Register RTree: RTC_HWCFGR  -----------------------------------
// SVD Line: 25514

//  <rtree> SFDITEM_REG__RTC_HWCFGR
//    <name> HWCFGR </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x40002BF0) hardware configuration  register </i>
//    <loc> ( (unsigned int)((RTC_HWCFGR >> 0) & 0xFFFFFFFF), ((RTC_HWCFGR = (RTC_HWCFGR & ~(0xFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__RTC_HWCFGR_ALARMB </item>
//    <item> SFDITEM_FIELD__RTC_HWCFGR_WAKEUP </item>
//    <item> SFDITEM_FIELD__RTC_HWCFGR_SMOOTH_CALIB </item>
//    <item> SFDITEM_FIELD__RTC_HWCFGR_TIMESTAMP </item>
//    <item> SFDITEM_FIELD__RTC_HWCFGR_OPTIONREG_OUT </item>
//    <item> SFDITEM_FIELD__RTC_HWCFGR_TRUST_ZONE </item>
//  </rtree>
//  


// -----------------------------  Register Item Address: RTC_VERR  --------------------------------
// SVD Line: 25562

unsigned int RTC_VERR __AT (0x40002BF4);



// -------------------------------  Field Item: RTC_VERR_MINREV  ----------------------------------
// SVD Line: 25571

//  <item> SFDITEM_FIELD__RTC_VERR_MINREV
//    <name> MINREV </name>
//    <r> 
//    <i> [Bits 3..0] RO (@ 0x40002BF4) Minor Revision number </i>
//    <edit> 
//      <loc> ( (unsigned char)((RTC_VERR >> 0) & 0xF) ) </loc>
//    </edit>
//  </item>
//  


// -------------------------------  Field Item: RTC_VERR_MAJREV  ----------------------------------
// SVD Line: 25577

//  <item> SFDITEM_FIELD__RTC_VERR_MAJREV
//    <name> MAJREV </name>
//    <r> 
//    <i> [Bits 7..4] RO (@ 0x40002BF4) Major Revision number </i>
//    <edit> 
//      <loc> ( (unsigned char)((RTC_VERR >> 4) & 0xF) ) </loc>
//    </edit>
//  </item>
//  


// --------------------------------  Register RTree: RTC_VERR  ------------------------------------
// SVD Line: 25562

//  <rtree> SFDITEM_REG__RTC_VERR
//    <name> VERR </name>
//    <r> 
//    <i> [Bits 31..0] RO (@ 0x40002BF4) EXTI IP Version register </i>
//    <loc> ( (unsigned int)((RTC_VERR >> 0) & 0xFFFFFFFF) ) </loc>
//    <item> SFDITEM_FIELD__RTC_VERR_MINREV </item>
//    <item> SFDITEM_FIELD__RTC_VERR_MAJREV </item>
//  </rtree>
//  


// ----------------------------  Register Item Address: RTC_IPIDR  --------------------------------
// SVD Line: 25585

unsigned int RTC_IPIDR __AT (0x40002BF8);



// -------------------------------  Field Item: RTC_IPIDR_IPID  -----------------------------------
// SVD Line: 25594

//  <item> SFDITEM_FIELD__RTC_IPIDR_IPID
//    <name> IPID </name>
//    <r> 
//    <i> [Bits 31..0] RO (@ 0x40002BF8) IP Identification </i>
//    <edit> 
//      <loc> ( (unsigned int)((RTC_IPIDR >> 0) & 0xFFFFFFFF) ) </loc>
//    </edit>
//  </item>
//  


// --------------------------------  Register RTree: RTC_IPIDR  -----------------------------------
// SVD Line: 25585

//  <rtree> SFDITEM_REG__RTC_IPIDR
//    <name> IPIDR </name>
//    <r> 
//    <i> [Bits 31..0] RO (@ 0x40002BF8) EXTI Identification register </i>
//    <loc> ( (unsigned int)((RTC_IPIDR >> 0) & 0xFFFFFFFF) ) </loc>
//    <item> SFDITEM_FIELD__RTC_IPIDR_IPID </item>
//  </rtree>
//  


// -----------------------------  Register Item Address: RTC_SIDR  --------------------------------
// SVD Line: 25602

unsigned int RTC_SIDR __AT (0x40002BFC);



// --------------------------------  Field Item: RTC_SIDR_SID  ------------------------------------
// SVD Line: 25611

//  <item> SFDITEM_FIELD__RTC_SIDR_SID
//    <name> SID </name>
//    <r> 
//    <i> [Bits 31..0] RO (@ 0x40002BFC) Size Identification </i>
//    <edit> 
//      <loc> ( (unsigned int)((RTC_SIDR >> 0) & 0xFFFFFFFF) ) </loc>
//    </edit>
//  </item>
//  


// --------------------------------  Register RTree: RTC_SIDR  ------------------------------------
// SVD Line: 25602

//  <rtree> SFDITEM_REG__RTC_SIDR
//    <name> SIDR </name>
//    <r> 
//    <i> [Bits 31..0] RO (@ 0x40002BFC) EXTI Size ID register </i>
//    <loc> ( (unsigned int)((RTC_SIDR >> 0) & 0xFFFFFFFF) ) </loc>
//    <item> SFDITEM_FIELD__RTC_SIDR_SID </item>
//  </rtree>
//  


// ----------------------------------  Peripheral View: RTC  --------------------------------------
// SVD Line: 24518

//  <view> RTC
//    <name> RTC </name>
//    <item> SFDITEM_REG__RTC_TR </item>
//    <item> SFDITEM_REG__RTC_DR </item>
//    <item> SFDITEM_REG__RTC_SSR </item>
//    <item> SFDITEM_REG__RTC_ICSR </item>
//    <item> SFDITEM_REG__RTC_PRER </item>
//    <item> SFDITEM_REG__RTC_WUTR </item>
//    <item> SFDITEM_REG__RTC_CR </item>
//    <item> SFDITEM_REG__RTC_WPR </item>
//    <item> SFDITEM_REG__RTC_CALR </item>
//    <item> SFDITEM_REG__RTC_SHIFTR </item>
//    <item> SFDITEM_REG__RTC_TSTR </item>
//    <item> SFDITEM_REG__RTC_TSDR </item>
//    <item> SFDITEM_REG__RTC_TSSSR </item>
//    <item> SFDITEM_REG__RTC_ALRMAR </item>
//    <item> SFDITEM_REG__RTC_ALRMASSR </item>
//    <item> SFDITEM_REG__RTC_ALRMBR </item>
//    <item> SFDITEM_REG__RTC_ALRMBSSR </item>
//    <item> SFDITEM_REG__RTC_SR </item>
//    <item> SFDITEM_REG__RTC_MISR </item>
//    <item> SFDITEM_REG__RTC_SCR </item>
//    <item> SFDITEM_REG__RTC_HWCFGR </item>
//    <item> SFDITEM_REG__RTC_VERR </item>
//    <item> SFDITEM_REG__RTC_IPIDR </item>
//    <item> SFDITEM_REG__RTC_SIDR </item>
//  </view>
//  


// ----------------------------  Register Item Address: TIM14_CR1  --------------------------------
// SVD Line: 25637

unsigned int TIM14_CR1 __AT (0x40002000);



// -----------------------------  Field Item: TIM14_CR1_UIFREMAP  ---------------------------------
// SVD Line: 25646

//  <item> SFDITEM_FIELD__TIM14_CR1_UIFREMAP
//    <name> UIFREMAP </name>
//    <rw> 
//    <i> [Bit 11] RW (@ 0x40002000) UIF status bit remapping </i>
//    <check> 
//      <loc> ( (unsigned int) TIM14_CR1 ) </loc>
//      <o.11..11> UIFREMAP
//    </check>
//  </item>
//  


// --------------------------------  Field Item: TIM14_CR1_CKD  -----------------------------------
// SVD Line: 25652

//  <item> SFDITEM_FIELD__TIM14_CR1_CKD
//    <name> CKD </name>
//    <rw> 
//    <i> [Bits 9..8] RW (@ 0x40002000) Clock division </i>
//    <edit> 
//      <loc> ( (unsigned char)((TIM14_CR1 >> 8) & 0x3), ((TIM14_CR1 = (TIM14_CR1 & ~(0x3UL << 8 )) | ((unsigned long)(Gui_u8:GuiVal & 0x3) << 8 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -------------------------------  Field Item: TIM14_CR1_ARPE  -----------------------------------
// SVD Line: 25658

//  <item> SFDITEM_FIELD__TIM14_CR1_ARPE
//    <name> ARPE </name>
//    <rw> 
//    <i> [Bit 7] RW (@ 0x40002000) Auto-reload preload enable </i>
//    <check> 
//      <loc> ( (unsigned int) TIM14_CR1 ) </loc>
//      <o.7..7> ARPE
//    </check>
//  </item>
//  


// --------------------------------  Field Item: TIM14_CR1_OPM  -----------------------------------
// SVD Line: 25664

//  <item> SFDITEM_FIELD__TIM14_CR1_OPM
//    <name> OPM </name>
//    <rw> 
//    <i> [Bit 3] RW (@ 0x40002000) One-pulse mode </i>
//    <check> 
//      <loc> ( (unsigned int) TIM14_CR1 ) </loc>
//      <o.3..3> OPM
//    </check>
//  </item>
//  


// --------------------------------  Field Item: TIM14_CR1_URS  -----------------------------------
// SVD Line: 25670

//  <item> SFDITEM_FIELD__TIM14_CR1_URS
//    <name> URS </name>
//    <rw> 
//    <i> [Bit 2] RW (@ 0x40002000) Update request source </i>
//    <check> 
//      <loc> ( (unsigned int) TIM14_CR1 ) </loc>
//      <o.2..2> URS
//    </check>
//  </item>
//  


// -------------------------------  Field Item: TIM14_CR1_UDIS  -----------------------------------
// SVD Line: 25676

//  <item> SFDITEM_FIELD__TIM14_CR1_UDIS
//    <name> UDIS </name>
//    <rw> 
//    <i> [Bit 1] RW (@ 0x40002000) Update disable </i>
//    <check> 
//      <loc> ( (unsigned int) TIM14_CR1 ) </loc>
//      <o.1..1> UDIS
//    </check>
//  </item>
//  


// --------------------------------  Field Item: TIM14_CR1_CEN  -----------------------------------
// SVD Line: 25682

//  <item> SFDITEM_FIELD__TIM14_CR1_CEN
//    <name> CEN </name>
//    <rw> 
//    <i> [Bit 0] RW (@ 0x40002000) Counter enable </i>
//    <check> 
//      <loc> ( (unsigned int) TIM14_CR1 ) </loc>
//      <o.0..0> CEN
//    </check>
//  </item>
//  


// --------------------------------  Register RTree: TIM14_CR1  -----------------------------------
// SVD Line: 25637

//  <rtree> SFDITEM_REG__TIM14_CR1
//    <name> CR1 </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x40002000) control register 1 </i>
//    <loc> ( (unsigned int)((TIM14_CR1 >> 0) & 0xFFFFFFFF), ((TIM14_CR1 = (TIM14_CR1 & ~(0xB8FUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xB8F) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__TIM14_CR1_UIFREMAP </item>
//    <item> SFDITEM_FIELD__TIM14_CR1_CKD </item>
//    <item> SFDITEM_FIELD__TIM14_CR1_ARPE </item>
//    <item> SFDITEM_FIELD__TIM14_CR1_OPM </item>
//    <item> SFDITEM_FIELD__TIM14_CR1_URS </item>
//    <item> SFDITEM_FIELD__TIM14_CR1_UDIS </item>
//    <item> SFDITEM_FIELD__TIM14_CR1_CEN </item>
//  </rtree>
//  


// ----------------------------  Register Item Address: TIM14_DIER  -------------------------------
// SVD Line: 25690

unsigned int TIM14_DIER __AT (0x4000200C);



// ------------------------------  Field Item: TIM14_DIER_CC1IE  ----------------------------------
// SVD Line: 25699

//  <item> SFDITEM_FIELD__TIM14_DIER_CC1IE
//    <name> CC1IE </name>
//    <rw> 
//    <i> [Bit 1] RW (@ 0x4000200C) Capture/Compare 1 interrupt  enable </i>
//    <check> 
//      <loc> ( (unsigned int) TIM14_DIER ) </loc>
//      <o.1..1> CC1IE
//    </check>
//  </item>
//  


// -------------------------------  Field Item: TIM14_DIER_UIE  -----------------------------------
// SVD Line: 25706

//  <item> SFDITEM_FIELD__TIM14_DIER_UIE
//    <name> UIE </name>
//    <rw> 
//    <i> [Bit 0] RW (@ 0x4000200C) Update interrupt enable </i>
//    <check> 
//      <loc> ( (unsigned int) TIM14_DIER ) </loc>
//      <o.0..0> UIE
//    </check>
//  </item>
//  


// -------------------------------  Register RTree: TIM14_DIER  -----------------------------------
// SVD Line: 25690

//  <rtree> SFDITEM_REG__TIM14_DIER
//    <name> DIER </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x4000200C) DMA/Interrupt enable register </i>
//    <loc> ( (unsigned int)((TIM14_DIER >> 0) & 0xFFFFFFFF), ((TIM14_DIER = (TIM14_DIER & ~(0x3UL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0x3) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__TIM14_DIER_CC1IE </item>
//    <item> SFDITEM_FIELD__TIM14_DIER_UIE </item>
//  </rtree>
//  


// -----------------------------  Register Item Address: TIM14_SR  --------------------------------
// SVD Line: 25714

unsigned int TIM14_SR __AT (0x40002010);



// -------------------------------  Field Item: TIM14_SR_CC1OF  -----------------------------------
// SVD Line: 25723

//  <item> SFDITEM_FIELD__TIM14_SR_CC1OF
//    <name> CC1OF </name>
//    <rw> 
//    <i> [Bit 9] RW (@ 0x40002010) Capture/Compare 1 overcapture  flag </i>
//    <check> 
//      <loc> ( (unsigned int) TIM14_SR ) </loc>
//      <o.9..9> CC1OF
//    </check>
//  </item>
//  


// -------------------------------  Field Item: TIM14_SR_CC1IF  -----------------------------------
// SVD Line: 25730

//  <item> SFDITEM_FIELD__TIM14_SR_CC1IF
//    <name> CC1IF </name>
//    <rw> 
//    <i> [Bit 1] RW (@ 0x40002010) Capture/compare 1 interrupt  flag </i>
//    <check> 
//      <loc> ( (unsigned int) TIM14_SR ) </loc>
//      <o.1..1> CC1IF
//    </check>
//  </item>
//  


// --------------------------------  Field Item: TIM14_SR_UIF  ------------------------------------
// SVD Line: 25737

//  <item> SFDITEM_FIELD__TIM14_SR_UIF
//    <name> UIF </name>
//    <rw> 
//    <i> [Bit 0] RW (@ 0x40002010) Update interrupt flag </i>
//    <check> 
//      <loc> ( (unsigned int) TIM14_SR ) </loc>
//      <o.0..0> UIF
//    </check>
//  </item>
//  


// --------------------------------  Register RTree: TIM14_SR  ------------------------------------
// SVD Line: 25714

//  <rtree> SFDITEM_REG__TIM14_SR
//    <name> SR </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x40002010) status register </i>
//    <loc> ( (unsigned int)((TIM14_SR >> 0) & 0xFFFFFFFF), ((TIM14_SR = (TIM14_SR & ~(0x203UL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0x203) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__TIM14_SR_CC1OF </item>
//    <item> SFDITEM_FIELD__TIM14_SR_CC1IF </item>
//    <item> SFDITEM_FIELD__TIM14_SR_UIF </item>
//  </rtree>
//  


// ----------------------------  Register Item Address: TIM14_EGR  --------------------------------
// SVD Line: 25745

unsigned int TIM14_EGR __AT (0x40002014);



// -------------------------------  Field Item: TIM14_EGR_CC1G  -----------------------------------
// SVD Line: 25754

//  <item> SFDITEM_FIELD__TIM14_EGR_CC1G
//    <name> CC1G </name>
//    <w> 
//    <i> [Bit 1] WO (@ 0x40002014) Capture/compare 1  generation </i>
//    <check> 
//      <loc> ( (unsigned int) TIM14_EGR ) </loc>
//      <o.1..1> CC1G
//    </check>
//  </item>
//  


// --------------------------------  Field Item: TIM14_EGR_UG  ------------------------------------
// SVD Line: 25761

//  <item> SFDITEM_FIELD__TIM14_EGR_UG
//    <name> UG </name>
//    <w> 
//    <i> [Bit 0] WO (@ 0x40002014) Update generation </i>
//    <check> 
//      <loc> ( (unsigned int) TIM14_EGR ) </loc>
//      <o.0..0> UG
//    </check>
//  </item>
//  


// --------------------------------  Register RTree: TIM14_EGR  -----------------------------------
// SVD Line: 25745

//  <rtree> SFDITEM_REG__TIM14_EGR
//    <name> EGR </name>
//    <w> 
//    <i> [Bits 31..0] WO (@ 0x40002014) event generation register </i>
//    <loc> ( (unsigned int)((TIM14_EGR >> 0) & 0xFFFFFFFF), ((TIM14_EGR = (TIM14_EGR & ~(0x3UL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0x3) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__TIM14_EGR_CC1G </item>
//    <item> SFDITEM_FIELD__TIM14_EGR_UG </item>
//  </rtree>
//  


// ------------------------  Register Item Address: TIM14_CCMR1_Output  ---------------------------
// SVD Line: 25769

unsigned int TIM14_CCMR1_Output __AT (0x40002018);



// ---------------------------  Field Item: TIM14_CCMR1_Output_CC1S  ------------------------------
// SVD Line: 25779

//  <item> SFDITEM_FIELD__TIM14_CCMR1_Output_CC1S
//    <name> CC1S </name>
//    <rw> 
//    <i> [Bits 1..0] RW (@ 0x40002018) CC1S </i>
//    <edit> 
//      <loc> ( (unsigned char)((TIM14_CCMR1_Output >> 0) & 0x3), ((TIM14_CCMR1_Output = (TIM14_CCMR1_Output & ~(0x3UL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0x3) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// --------------------------  Field Item: TIM14_CCMR1_Output_OC1FE  ------------------------------
// SVD Line: 25785

//  <item> SFDITEM_FIELD__TIM14_CCMR1_Output_OC1FE
//    <name> OC1FE </name>
//    <rw> 
//    <i> [Bit 2] RW (@ 0x40002018) OC1FE </i>
//    <check> 
//      <loc> ( (unsigned int) TIM14_CCMR1_Output ) </loc>
//      <o.2..2> OC1FE
//    </check>
//  </item>
//  


// --------------------------  Field Item: TIM14_CCMR1_Output_OC1PE  ------------------------------
// SVD Line: 25791

//  <item> SFDITEM_FIELD__TIM14_CCMR1_Output_OC1PE
//    <name> OC1PE </name>
//    <rw> 
//    <i> [Bit 3] RW (@ 0x40002018) OC1PE </i>
//    <check> 
//      <loc> ( (unsigned int) TIM14_CCMR1_Output ) </loc>
//      <o.3..3> OC1PE
//    </check>
//  </item>
//  


// ---------------------------  Field Item: TIM14_CCMR1_Output_OC1M  ------------------------------
// SVD Line: 25797

//  <item> SFDITEM_FIELD__TIM14_CCMR1_Output_OC1M
//    <name> OC1M </name>
//    <rw> 
//    <i> [Bits 6..4] RW (@ 0x40002018) OC1M </i>
//    <edit> 
//      <loc> ( (unsigned char)((TIM14_CCMR1_Output >> 4) & 0x7), ((TIM14_CCMR1_Output = (TIM14_CCMR1_Output & ~(0x7UL << 4 )) | ((unsigned long)(Gui_u8:GuiVal & 0x7) << 4 ) ) )) </loc>
//    </edit>
//  </item>
//  


// --------------------------  Field Item: TIM14_CCMR1_Output_OC1CE  ------------------------------
// SVD Line: 25803

//  <item> SFDITEM_FIELD__TIM14_CCMR1_Output_OC1CE
//    <name> OC1CE </name>
//    <rw> 
//    <i> [Bit 7] RW (@ 0x40002018) OC1CE </i>
//    <check> 
//      <loc> ( (unsigned int) TIM14_CCMR1_Output ) </loc>
//      <o.7..7> OC1CE
//    </check>
//  </item>
//  


// --------------------------  Field Item: TIM14_CCMR1_Output_OC1M_3  -----------------------------
// SVD Line: 25809

//  <item> SFDITEM_FIELD__TIM14_CCMR1_Output_OC1M_3
//    <name> OC1M_3 </name>
//    <rw> 
//    <i> [Bit 16] RW (@ 0x40002018) Output Compare 1 mode - bit  3 </i>
//    <check> 
//      <loc> ( (unsigned int) TIM14_CCMR1_Output ) </loc>
//      <o.16..16> OC1M_3
//    </check>
//  </item>
//  


// ---------------------------  Register RTree: TIM14_CCMR1_Output  -------------------------------
// SVD Line: 25769

//  <rtree> SFDITEM_REG__TIM14_CCMR1_Output
//    <name> CCMR1_Output </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x40002018) capture/compare mode register 1 (output  mode) </i>
//    <loc> ( (unsigned int)((TIM14_CCMR1_Output >> 0) & 0xFFFFFFFF), ((TIM14_CCMR1_Output = (TIM14_CCMR1_Output & ~(0x100FFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0x100FF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__TIM14_CCMR1_Output_CC1S </item>
//    <item> SFDITEM_FIELD__TIM14_CCMR1_Output_OC1FE </item>
//    <item> SFDITEM_FIELD__TIM14_CCMR1_Output_OC1PE </item>
//    <item> SFDITEM_FIELD__TIM14_CCMR1_Output_OC1M </item>
//    <item> SFDITEM_FIELD__TIM14_CCMR1_Output_OC1CE </item>
//    <item> SFDITEM_FIELD__TIM14_CCMR1_Output_OC1M_3 </item>
//  </rtree>
//  


// ------------------------  Register Item Address: TIM14_CCMR1_Input  ----------------------------
// SVD Line: 25818

unsigned int TIM14_CCMR1_Input __AT (0x40002018);



// ---------------------------  Field Item: TIM14_CCMR1_Input_IC1F  -------------------------------
// SVD Line: 25829

//  <item> SFDITEM_FIELD__TIM14_CCMR1_Input_IC1F
//    <name> IC1F </name>
//    <rw> 
//    <i> [Bits 7..4] RW (@ 0x40002018) Input capture 1 filter </i>
//    <edit> 
//      <loc> ( (unsigned char)((TIM14_CCMR1_Input >> 4) & 0xF), ((TIM14_CCMR1_Input = (TIM14_CCMR1_Input & ~(0xFUL << 4 )) | ((unsigned long)(Gui_u8:GuiVal & 0xF) << 4 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ---------------------------  Field Item: TIM14_CCMR1_Input_ICPCS  ------------------------------
// SVD Line: 25835

//  <item> SFDITEM_FIELD__TIM14_CCMR1_Input_ICPCS
//    <name> ICPCS </name>
//    <rw> 
//    <i> [Bits 3..2] RW (@ 0x40002018) Input capture 1 prescaler </i>
//    <edit> 
//      <loc> ( (unsigned char)((TIM14_CCMR1_Input >> 2) & 0x3), ((TIM14_CCMR1_Input = (TIM14_CCMR1_Input & ~(0x3UL << 2 )) | ((unsigned long)(Gui_u8:GuiVal & 0x3) << 2 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ---------------------------  Field Item: TIM14_CCMR1_Input_CC1S  -------------------------------
// SVD Line: 25841

//  <item> SFDITEM_FIELD__TIM14_CCMR1_Input_CC1S
//    <name> CC1S </name>
//    <rw> 
//    <i> [Bits 1..0] RW (@ 0x40002018) Capture/Compare 1  selection </i>
//    <edit> 
//      <loc> ( (unsigned char)((TIM14_CCMR1_Input >> 0) & 0x3), ((TIM14_CCMR1_Input = (TIM14_CCMR1_Input & ~(0x3UL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0x3) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ----------------------------  Register RTree: TIM14_CCMR1_Input  -------------------------------
// SVD Line: 25818

//  <rtree> SFDITEM_REG__TIM14_CCMR1_Input
//    <name> CCMR1_Input </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x40002018) capture/compare mode register 1 (input  mode) </i>
//    <loc> ( (unsigned int)((TIM14_CCMR1_Input >> 0) & 0xFFFFFFFF), ((TIM14_CCMR1_Input = (TIM14_CCMR1_Input & ~(0xFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__TIM14_CCMR1_Input_IC1F </item>
//    <item> SFDITEM_FIELD__TIM14_CCMR1_Input_ICPCS </item>
//    <item> SFDITEM_FIELD__TIM14_CCMR1_Input_CC1S </item>
//  </rtree>
//  


// ----------------------------  Register Item Address: TIM14_CCER  -------------------------------
// SVD Line: 25850

unsigned int TIM14_CCER __AT (0x40002020);



// ------------------------------  Field Item: TIM14_CCER_CC1NP  ----------------------------------
// SVD Line: 25860

//  <item> SFDITEM_FIELD__TIM14_CCER_CC1NP
//    <name> CC1NP </name>
//    <rw> 
//    <i> [Bit 3] RW (@ 0x40002020) Capture/Compare 1 output  Polarity </i>
//    <check> 
//      <loc> ( (unsigned int) TIM14_CCER ) </loc>
//      <o.3..3> CC1NP
//    </check>
//  </item>
//  


// -------------------------------  Field Item: TIM14_CCER_CC1P  ----------------------------------
// SVD Line: 25867

//  <item> SFDITEM_FIELD__TIM14_CCER_CC1P
//    <name> CC1P </name>
//    <rw> 
//    <i> [Bit 1] RW (@ 0x40002020) Capture/Compare 1 output  Polarity </i>
//    <check> 
//      <loc> ( (unsigned int) TIM14_CCER ) </loc>
//      <o.1..1> CC1P
//    </check>
//  </item>
//  


// -------------------------------  Field Item: TIM14_CCER_CC1E  ----------------------------------
// SVD Line: 25874

//  <item> SFDITEM_FIELD__TIM14_CCER_CC1E
//    <name> CC1E </name>
//    <rw> 
//    <i> [Bit 0] RW (@ 0x40002020) Capture/Compare 1 output  enable </i>
//    <check> 
//      <loc> ( (unsigned int) TIM14_CCER ) </loc>
//      <o.0..0> CC1E
//    </check>
//  </item>
//  


// -------------------------------  Register RTree: TIM14_CCER  -----------------------------------
// SVD Line: 25850

//  <rtree> SFDITEM_REG__TIM14_CCER
//    <name> CCER </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x40002020) capture/compare enable  register </i>
//    <loc> ( (unsigned int)((TIM14_CCER >> 0) & 0xFFFFFFFF), ((TIM14_CCER = (TIM14_CCER & ~(0xBUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xB) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__TIM14_CCER_CC1NP </item>
//    <item> SFDITEM_FIELD__TIM14_CCER_CC1P </item>
//    <item> SFDITEM_FIELD__TIM14_CCER_CC1E </item>
//  </rtree>
//  


// ----------------------------  Register Item Address: TIM14_CNT  --------------------------------
// SVD Line: 25883

unsigned int TIM14_CNT __AT (0x40002024);



// --------------------------------  Field Item: TIM14_CNT_CNT  -----------------------------------
// SVD Line: 25892

//  <item> SFDITEM_FIELD__TIM14_CNT_CNT
//    <name> CNT </name>
//    <rw> 
//    <i> [Bits 15..0] RW (@ 0x40002024) low counter value </i>
//    <edit> 
//      <loc> ( (unsigned short)((TIM14_CNT >> 0) & 0xFFFF), ((TIM14_CNT = (TIM14_CNT & ~(0xFFFFUL << 0 )) | ((unsigned long)(Gui_u16:GuiVal & 0xFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ------------------------------  Field Item: TIM14_CNT_UIFCPY  ----------------------------------
// SVD Line: 25898

//  <item> SFDITEM_FIELD__TIM14_CNT_UIFCPY
//    <name> UIFCPY </name>
//    <rw> 
//    <i> [Bit 31] RW (@ 0x40002024) UIF Copy </i>
//    <check> 
//      <loc> ( (unsigned int) TIM14_CNT ) </loc>
//      <o.31..31> UIFCPY
//    </check>
//  </item>
//  


// --------------------------------  Register RTree: TIM14_CNT  -----------------------------------
// SVD Line: 25883

//  <rtree> SFDITEM_REG__TIM14_CNT
//    <name> CNT </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x40002024) counter </i>
//    <loc> ( (unsigned int)((TIM14_CNT >> 0) & 0xFFFFFFFF), ((TIM14_CNT = (TIM14_CNT & ~(0x8000FFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0x8000FFFF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__TIM14_CNT_CNT </item>
//    <item> SFDITEM_FIELD__TIM14_CNT_UIFCPY </item>
//  </rtree>
//  


// ----------------------------  Register Item Address: TIM14_PSC  --------------------------------
// SVD Line: 25906

unsigned int TIM14_PSC __AT (0x40002028);



// --------------------------------  Field Item: TIM14_PSC_PSC  -----------------------------------
// SVD Line: 25915

//  <item> SFDITEM_FIELD__TIM14_PSC_PSC
//    <name> PSC </name>
//    <rw> 
//    <i> [Bits 15..0] RW (@ 0x40002028) Prescaler value </i>
//    <edit> 
//      <loc> ( (unsigned short)((TIM14_PSC >> 0) & 0xFFFF), ((TIM14_PSC = (TIM14_PSC & ~(0xFFFFUL << 0 )) | ((unsigned long)(Gui_u16:GuiVal & 0xFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// --------------------------------  Register RTree: TIM14_PSC  -----------------------------------
// SVD Line: 25906

//  <rtree> SFDITEM_REG__TIM14_PSC
//    <name> PSC </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x40002028) prescaler </i>
//    <loc> ( (unsigned int)((TIM14_PSC >> 0) & 0xFFFFFFFF), ((TIM14_PSC = (TIM14_PSC & ~(0xFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__TIM14_PSC_PSC </item>
//  </rtree>
//  


// ----------------------------  Register Item Address: TIM14_ARR  --------------------------------
// SVD Line: 25923

unsigned int TIM14_ARR __AT (0x4000202C);



// --------------------------------  Field Item: TIM14_ARR_ARR  -----------------------------------
// SVD Line: 25932

//  <item> SFDITEM_FIELD__TIM14_ARR_ARR
//    <name> ARR </name>
//    <rw> 
//    <i> [Bits 15..0] RW (@ 0x4000202C) Low Auto-reload value </i>
//    <edit> 
//      <loc> ( (unsigned short)((TIM14_ARR >> 0) & 0xFFFF), ((TIM14_ARR = (TIM14_ARR & ~(0xFFFFUL << 0 )) | ((unsigned long)(Gui_u16:GuiVal & 0xFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// --------------------------------  Register RTree: TIM14_ARR  -----------------------------------
// SVD Line: 25923

//  <rtree> SFDITEM_REG__TIM14_ARR
//    <name> ARR </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x4000202C) auto-reload register </i>
//    <loc> ( (unsigned int)((TIM14_ARR >> 0) & 0xFFFFFFFF), ((TIM14_ARR = (TIM14_ARR & ~(0xFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__TIM14_ARR_ARR </item>
//  </rtree>
//  


// ----------------------------  Register Item Address: TIM14_CCR1  -------------------------------
// SVD Line: 25940

unsigned int TIM14_CCR1 __AT (0x40002034);



// -------------------------------  Field Item: TIM14_CCR1_CCR1  ----------------------------------
// SVD Line: 25949

//  <item> SFDITEM_FIELD__TIM14_CCR1_CCR1
//    <name> CCR1 </name>
//    <rw> 
//    <i> [Bits 15..0] RW (@ 0x40002034) Low Capture/Compare 1  value </i>
//    <edit> 
//      <loc> ( (unsigned short)((TIM14_CCR1 >> 0) & 0xFFFF), ((TIM14_CCR1 = (TIM14_CCR1 & ~(0xFFFFUL << 0 )) | ((unsigned long)(Gui_u16:GuiVal & 0xFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -------------------------------  Register RTree: TIM14_CCR1  -----------------------------------
// SVD Line: 25940

//  <rtree> SFDITEM_REG__TIM14_CCR1
//    <name> CCR1 </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x40002034) capture/compare register 1 </i>
//    <loc> ( (unsigned int)((TIM14_CCR1 >> 0) & 0xFFFFFFFF), ((TIM14_CCR1 = (TIM14_CCR1 & ~(0xFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__TIM14_CCR1_CCR1 </item>
//  </rtree>
//  


// ---------------------------  Register Item Address: TIM14_TISEL  -------------------------------
// SVD Line: 25958

unsigned int TIM14_TISEL __AT (0x40002068);



// ------------------------------  Field Item: TIM14_TISEL_TISEL  ---------------------------------
// SVD Line: 25968

//  <item> SFDITEM_FIELD__TIM14_TISEL_TISEL
//    <name> TISEL </name>
//    <rw> 
//    <i> [Bits 3..0] RW (@ 0x40002068) TI1[0] to TI1[15] input  selection </i>
//    <edit> 
//      <loc> ( (unsigned char)((TIM14_TISEL >> 0) & 0xF), ((TIM14_TISEL = (TIM14_TISEL & ~(0xFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -------------------------------  Register RTree: TIM14_TISEL  ----------------------------------
// SVD Line: 25958

//  <rtree> SFDITEM_REG__TIM14_TISEL
//    <name> TISEL </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x40002068) TIM timer input selection  register </i>
//    <loc> ( (unsigned int)((TIM14_TISEL >> 0) & 0xFFFFFFFF), ((TIM14_TISEL = (TIM14_TISEL & ~(0xFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__TIM14_TISEL_TISEL </item>
//  </rtree>
//  


// ---------------------------------  Peripheral View: TIM14  -------------------------------------
// SVD Line: 25621

//  <view> TIM14
//    <name> TIM14 </name>
//    <item> SFDITEM_REG__TIM14_CR1 </item>
//    <item> SFDITEM_REG__TIM14_DIER </item>
//    <item> SFDITEM_REG__TIM14_SR </item>
//    <item> SFDITEM_REG__TIM14_EGR </item>
//    <item> SFDITEM_REG__TIM14_CCMR1_Output </item>
//    <item> SFDITEM_REG__TIM14_CCMR1_Input </item>
//    <item> SFDITEM_REG__TIM14_CCER </item>
//    <item> SFDITEM_REG__TIM14_CNT </item>
//    <item> SFDITEM_REG__TIM14_PSC </item>
//    <item> SFDITEM_REG__TIM14_ARR </item>
//    <item> SFDITEM_REG__TIM14_CCR1 </item>
//    <item> SFDITEM_REG__TIM14_TISEL </item>
//  </view>
//  


// -----------------------------  Register Item Address: TIM6_CR1  --------------------------------
// SVD Line: 25996

unsigned int TIM6_CR1 __AT (0x40001000);



// ------------------------------  Field Item: TIM6_CR1_UIFREMAP  ---------------------------------
// SVD Line: 26005

//  <item> SFDITEM_FIELD__TIM6_CR1_UIFREMAP
//    <name> UIFREMAP </name>
//    <rw> 
//    <i> [Bit 11] RW (@ 0x40001000) UIF status bit remapping </i>
//    <check> 
//      <loc> ( (unsigned int) TIM6_CR1 ) </loc>
//      <o.11..11> UIFREMAP
//    </check>
//  </item>
//  


// --------------------------------  Field Item: TIM6_CR1_ARPE  -----------------------------------
// SVD Line: 26011

//  <item> SFDITEM_FIELD__TIM6_CR1_ARPE
//    <name> ARPE </name>
//    <rw> 
//    <i> [Bit 7] RW (@ 0x40001000) Auto-reload preload enable </i>
//    <check> 
//      <loc> ( (unsigned int) TIM6_CR1 ) </loc>
//      <o.7..7> ARPE
//    </check>
//  </item>
//  


// --------------------------------  Field Item: TIM6_CR1_OPM  ------------------------------------
// SVD Line: 26017

//  <item> SFDITEM_FIELD__TIM6_CR1_OPM
//    <name> OPM </name>
//    <rw> 
//    <i> [Bit 3] RW (@ 0x40001000) One-pulse mode </i>
//    <check> 
//      <loc> ( (unsigned int) TIM6_CR1 ) </loc>
//      <o.3..3> OPM
//    </check>
//  </item>
//  


// --------------------------------  Field Item: TIM6_CR1_URS  ------------------------------------
// SVD Line: 26023

//  <item> SFDITEM_FIELD__TIM6_CR1_URS
//    <name> URS </name>
//    <rw> 
//    <i> [Bit 2] RW (@ 0x40001000) Update request source </i>
//    <check> 
//      <loc> ( (unsigned int) TIM6_CR1 ) </loc>
//      <o.2..2> URS
//    </check>
//  </item>
//  


// --------------------------------  Field Item: TIM6_CR1_UDIS  -----------------------------------
// SVD Line: 26029

//  <item> SFDITEM_FIELD__TIM6_CR1_UDIS
//    <name> UDIS </name>
//    <rw> 
//    <i> [Bit 1] RW (@ 0x40001000) Update disable </i>
//    <check> 
//      <loc> ( (unsigned int) TIM6_CR1 ) </loc>
//      <o.1..1> UDIS
//    </check>
//  </item>
//  


// --------------------------------  Field Item: TIM6_CR1_CEN  ------------------------------------
// SVD Line: 26035

//  <item> SFDITEM_FIELD__TIM6_CR1_CEN
//    <name> CEN </name>
//    <rw> 
//    <i> [Bit 0] RW (@ 0x40001000) Counter enable </i>
//    <check> 
//      <loc> ( (unsigned int) TIM6_CR1 ) </loc>
//      <o.0..0> CEN
//    </check>
//  </item>
//  


// --------------------------------  Register RTree: TIM6_CR1  ------------------------------------
// SVD Line: 25996

//  <rtree> SFDITEM_REG__TIM6_CR1
//    <name> CR1 </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x40001000) control register 1 </i>
//    <loc> ( (unsigned int)((TIM6_CR1 >> 0) & 0xFFFFFFFF), ((TIM6_CR1 = (TIM6_CR1 & ~(0x88FUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0x88F) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__TIM6_CR1_UIFREMAP </item>
//    <item> SFDITEM_FIELD__TIM6_CR1_ARPE </item>
//    <item> SFDITEM_FIELD__TIM6_CR1_OPM </item>
//    <item> SFDITEM_FIELD__TIM6_CR1_URS </item>
//    <item> SFDITEM_FIELD__TIM6_CR1_UDIS </item>
//    <item> SFDITEM_FIELD__TIM6_CR1_CEN </item>
//  </rtree>
//  


// -----------------------------  Register Item Address: TIM6_CR2  --------------------------------
// SVD Line: 26043

unsigned int TIM6_CR2 __AT (0x40001004);



// --------------------------------  Field Item: TIM6_CR2_MMS  ------------------------------------
// SVD Line: 26052

//  <item> SFDITEM_FIELD__TIM6_CR2_MMS
//    <name> MMS </name>
//    <rw> 
//    <i> [Bits 6..4] RW (@ 0x40001004) Master mode selection </i>
//    <edit> 
//      <loc> ( (unsigned char)((TIM6_CR2 >> 4) & 0x7), ((TIM6_CR2 = (TIM6_CR2 & ~(0x7UL << 4 )) | ((unsigned long)(Gui_u8:GuiVal & 0x7) << 4 ) ) )) </loc>
//    </edit>
//  </item>
//  


// --------------------------------  Register RTree: TIM6_CR2  ------------------------------------
// SVD Line: 26043

//  <rtree> SFDITEM_REG__TIM6_CR2
//    <name> CR2 </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x40001004) control register 2 </i>
//    <loc> ( (unsigned int)((TIM6_CR2 >> 0) & 0xFFFFFFFF), ((TIM6_CR2 = (TIM6_CR2 & ~(0x70UL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0x70) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__TIM6_CR2_MMS </item>
//  </rtree>
//  


// ----------------------------  Register Item Address: TIM6_DIER  --------------------------------
// SVD Line: 26060

unsigned int TIM6_DIER __AT (0x4000100C);



// --------------------------------  Field Item: TIM6_DIER_UDE  -----------------------------------
// SVD Line: 26069

//  <item> SFDITEM_FIELD__TIM6_DIER_UDE
//    <name> UDE </name>
//    <rw> 
//    <i> [Bit 8] RW (@ 0x4000100C) Update DMA request enable </i>
//    <check> 
//      <loc> ( (unsigned int) TIM6_DIER ) </loc>
//      <o.8..8> UDE
//    </check>
//  </item>
//  


// --------------------------------  Field Item: TIM6_DIER_UIE  -----------------------------------
// SVD Line: 26075

//  <item> SFDITEM_FIELD__TIM6_DIER_UIE
//    <name> UIE </name>
//    <rw> 
//    <i> [Bit 0] RW (@ 0x4000100C) Update interrupt enable </i>
//    <check> 
//      <loc> ( (unsigned int) TIM6_DIER ) </loc>
//      <o.0..0> UIE
//    </check>
//  </item>
//  


// --------------------------------  Register RTree: TIM6_DIER  -----------------------------------
// SVD Line: 26060

//  <rtree> SFDITEM_REG__TIM6_DIER
//    <name> DIER </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x4000100C) DMA/Interrupt enable register </i>
//    <loc> ( (unsigned int)((TIM6_DIER >> 0) & 0xFFFFFFFF), ((TIM6_DIER = (TIM6_DIER & ~(0x101UL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0x101) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__TIM6_DIER_UDE </item>
//    <item> SFDITEM_FIELD__TIM6_DIER_UIE </item>
//  </rtree>
//  


// -----------------------------  Register Item Address: TIM6_SR  ---------------------------------
// SVD Line: 26083

unsigned int TIM6_SR __AT (0x40001010);



// ---------------------------------  Field Item: TIM6_SR_UIF  ------------------------------------
// SVD Line: 26092

//  <item> SFDITEM_FIELD__TIM6_SR_UIF
//    <name> UIF </name>
//    <rw> 
//    <i> [Bit 0] RW (@ 0x40001010) Update interrupt flag </i>
//    <check> 
//      <loc> ( (unsigned int) TIM6_SR ) </loc>
//      <o.0..0> UIF
//    </check>
//  </item>
//  


// ---------------------------------  Register RTree: TIM6_SR  ------------------------------------
// SVD Line: 26083

//  <rtree> SFDITEM_REG__TIM6_SR
//    <name> SR </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x40001010) status register </i>
//    <loc> ( (unsigned int)((TIM6_SR >> 0) & 0xFFFFFFFF), ((TIM6_SR = (TIM6_SR & ~(0x1UL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0x1) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__TIM6_SR_UIF </item>
//  </rtree>
//  


// -----------------------------  Register Item Address: TIM6_EGR  --------------------------------
// SVD Line: 26100

unsigned int TIM6_EGR __AT (0x40001014);



// ---------------------------------  Field Item: TIM6_EGR_UG  ------------------------------------
// SVD Line: 26109

//  <item> SFDITEM_FIELD__TIM6_EGR_UG
//    <name> UG </name>
//    <w> 
//    <i> [Bit 0] WO (@ 0x40001014) Update generation </i>
//    <check> 
//      <loc> ( (unsigned int) TIM6_EGR ) </loc>
//      <o.0..0> UG
//    </check>
//  </item>
//  


// --------------------------------  Register RTree: TIM6_EGR  ------------------------------------
// SVD Line: 26100

//  <rtree> SFDITEM_REG__TIM6_EGR
//    <name> EGR </name>
//    <w> 
//    <i> [Bits 31..0] WO (@ 0x40001014) event generation register </i>
//    <loc> ( (unsigned int)((TIM6_EGR >> 0) & 0xFFFFFFFF), ((TIM6_EGR = (TIM6_EGR & ~(0x1UL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0x1) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__TIM6_EGR_UG </item>
//  </rtree>
//  


// -----------------------------  Register Item Address: TIM6_CNT  --------------------------------
// SVD Line: 26117

unsigned int TIM6_CNT __AT (0x40001024);



// --------------------------------  Field Item: TIM6_CNT_CNT  ------------------------------------
// SVD Line: 26126

//  <item> SFDITEM_FIELD__TIM6_CNT_CNT
//    <name> CNT </name>
//    <rw> 
//    <i> [Bits 15..0] RW (@ 0x40001024) Low counter value </i>
//    <edit> 
//      <loc> ( (unsigned short)((TIM6_CNT >> 0) & 0xFFFF), ((TIM6_CNT = (TIM6_CNT & ~(0xFFFFUL << 0 )) | ((unsigned long)(Gui_u16:GuiVal & 0xFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -------------------------------  Field Item: TIM6_CNT_UIFCPY  ----------------------------------
// SVD Line: 26132

//  <item> SFDITEM_FIELD__TIM6_CNT_UIFCPY
//    <name> UIFCPY </name>
//    <rw> 
//    <i> [Bit 31] RW (@ 0x40001024) UIF Copy </i>
//    <check> 
//      <loc> ( (unsigned int) TIM6_CNT ) </loc>
//      <o.31..31> UIFCPY
//    </check>
//  </item>
//  


// --------------------------------  Register RTree: TIM6_CNT  ------------------------------------
// SVD Line: 26117

//  <rtree> SFDITEM_REG__TIM6_CNT
//    <name> CNT </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x40001024) counter </i>
//    <loc> ( (unsigned int)((TIM6_CNT >> 0) & 0xFFFFFFFF), ((TIM6_CNT = (TIM6_CNT & ~(0x8000FFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0x8000FFFF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__TIM6_CNT_CNT </item>
//    <item> SFDITEM_FIELD__TIM6_CNT_UIFCPY </item>
//  </rtree>
//  


// -----------------------------  Register Item Address: TIM6_PSC  --------------------------------
// SVD Line: 26140

unsigned int TIM6_PSC __AT (0x40001028);



// --------------------------------  Field Item: TIM6_PSC_PSC  ------------------------------------
// SVD Line: 26149

//  <item> SFDITEM_FIELD__TIM6_PSC_PSC
//    <name> PSC </name>
//    <rw> 
//    <i> [Bits 15..0] RW (@ 0x40001028) Prescaler value </i>
//    <edit> 
//      <loc> ( (unsigned short)((TIM6_PSC >> 0) & 0xFFFF), ((TIM6_PSC = (TIM6_PSC & ~(0xFFFFUL << 0 )) | ((unsigned long)(Gui_u16:GuiVal & 0xFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// --------------------------------  Register RTree: TIM6_PSC  ------------------------------------
// SVD Line: 26140

//  <rtree> SFDITEM_REG__TIM6_PSC
//    <name> PSC </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x40001028) prescaler </i>
//    <loc> ( (unsigned int)((TIM6_PSC >> 0) & 0xFFFFFFFF), ((TIM6_PSC = (TIM6_PSC & ~(0xFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__TIM6_PSC_PSC </item>
//  </rtree>
//  


// -----------------------------  Register Item Address: TIM6_ARR  --------------------------------
// SVD Line: 26157

unsigned int TIM6_ARR __AT (0x4000102C);



// --------------------------------  Field Item: TIM6_ARR_ARR  ------------------------------------
// SVD Line: 26166

//  <item> SFDITEM_FIELD__TIM6_ARR_ARR
//    <name> ARR </name>
//    <rw> 
//    <i> [Bits 15..0] RW (@ 0x4000102C) Low Auto-reload value </i>
//    <edit> 
//      <loc> ( (unsigned short)((TIM6_ARR >> 0) & 0xFFFF), ((TIM6_ARR = (TIM6_ARR & ~(0xFFFFUL << 0 )) | ((unsigned long)(Gui_u16:GuiVal & 0xFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// --------------------------------  Register RTree: TIM6_ARR  ------------------------------------
// SVD Line: 26157

//  <rtree> SFDITEM_REG__TIM6_ARR
//    <name> ARR </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x4000102C) auto-reload register </i>
//    <loc> ( (unsigned int)((TIM6_ARR >> 0) & 0xFFFFFFFF), ((TIM6_ARR = (TIM6_ARR & ~(0xFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__TIM6_ARR_ARR </item>
//  </rtree>
//  


// ----------------------------------  Peripheral View: TIM6  -------------------------------------
// SVD Line: 25979

//  <view> TIM6
//    <name> TIM6 </name>
//    <item> SFDITEM_REG__TIM6_CR1 </item>
//    <item> SFDITEM_REG__TIM6_CR2 </item>
//    <item> SFDITEM_REG__TIM6_DIER </item>
//    <item> SFDITEM_REG__TIM6_SR </item>
//    <item> SFDITEM_REG__TIM6_EGR </item>
//    <item> SFDITEM_REG__TIM6_CNT </item>
//    <item> SFDITEM_REG__TIM6_PSC </item>
//    <item> SFDITEM_REG__TIM6_ARR </item>
//  </view>
//  


// -----------------------------  Register Item Address: TIM7_CR1  --------------------------------
// SVD Line: 25996

unsigned int TIM7_CR1 __AT (0x40001400);



// ------------------------------  Field Item: TIM7_CR1_UIFREMAP  ---------------------------------
// SVD Line: 26005

//  <item> SFDITEM_FIELD__TIM7_CR1_UIFREMAP
//    <name> UIFREMAP </name>
//    <rw> 
//    <i> [Bit 11] RW (@ 0x40001400) UIF status bit remapping </i>
//    <check> 
//      <loc> ( (unsigned int) TIM7_CR1 ) </loc>
//      <o.11..11> UIFREMAP
//    </check>
//  </item>
//  


// --------------------------------  Field Item: TIM7_CR1_ARPE  -----------------------------------
// SVD Line: 26011

//  <item> SFDITEM_FIELD__TIM7_CR1_ARPE
//    <name> ARPE </name>
//    <rw> 
//    <i> [Bit 7] RW (@ 0x40001400) Auto-reload preload enable </i>
//    <check> 
//      <loc> ( (unsigned int) TIM7_CR1 ) </loc>
//      <o.7..7> ARPE
//    </check>
//  </item>
//  


// --------------------------------  Field Item: TIM7_CR1_OPM  ------------------------------------
// SVD Line: 26017

//  <item> SFDITEM_FIELD__TIM7_CR1_OPM
//    <name> OPM </name>
//    <rw> 
//    <i> [Bit 3] RW (@ 0x40001400) One-pulse mode </i>
//    <check> 
//      <loc> ( (unsigned int) TIM7_CR1 ) </loc>
//      <o.3..3> OPM
//    </check>
//  </item>
//  


// --------------------------------  Field Item: TIM7_CR1_URS  ------------------------------------
// SVD Line: 26023

//  <item> SFDITEM_FIELD__TIM7_CR1_URS
//    <name> URS </name>
//    <rw> 
//    <i> [Bit 2] RW (@ 0x40001400) Update request source </i>
//    <check> 
//      <loc> ( (unsigned int) TIM7_CR1 ) </loc>
//      <o.2..2> URS
//    </check>
//  </item>
//  


// --------------------------------  Field Item: TIM7_CR1_UDIS  -----------------------------------
// SVD Line: 26029

//  <item> SFDITEM_FIELD__TIM7_CR1_UDIS
//    <name> UDIS </name>
//    <rw> 
//    <i> [Bit 1] RW (@ 0x40001400) Update disable </i>
//    <check> 
//      <loc> ( (unsigned int) TIM7_CR1 ) </loc>
//      <o.1..1> UDIS
//    </check>
//  </item>
//  


// --------------------------------  Field Item: TIM7_CR1_CEN  ------------------------------------
// SVD Line: 26035

//  <item> SFDITEM_FIELD__TIM7_CR1_CEN
//    <name> CEN </name>
//    <rw> 
//    <i> [Bit 0] RW (@ 0x40001400) Counter enable </i>
//    <check> 
//      <loc> ( (unsigned int) TIM7_CR1 ) </loc>
//      <o.0..0> CEN
//    </check>
//  </item>
//  


// --------------------------------  Register RTree: TIM7_CR1  ------------------------------------
// SVD Line: 25996

//  <rtree> SFDITEM_REG__TIM7_CR1
//    <name> CR1 </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x40001400) control register 1 </i>
//    <loc> ( (unsigned int)((TIM7_CR1 >> 0) & 0xFFFFFFFF), ((TIM7_CR1 = (TIM7_CR1 & ~(0x88FUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0x88F) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__TIM7_CR1_UIFREMAP </item>
//    <item> SFDITEM_FIELD__TIM7_CR1_ARPE </item>
//    <item> SFDITEM_FIELD__TIM7_CR1_OPM </item>
//    <item> SFDITEM_FIELD__TIM7_CR1_URS </item>
//    <item> SFDITEM_FIELD__TIM7_CR1_UDIS </item>
//    <item> SFDITEM_FIELD__TIM7_CR1_CEN </item>
//  </rtree>
//  


// -----------------------------  Register Item Address: TIM7_CR2  --------------------------------
// SVD Line: 26043

unsigned int TIM7_CR2 __AT (0x40001404);



// --------------------------------  Field Item: TIM7_CR2_MMS  ------------------------------------
// SVD Line: 26052

//  <item> SFDITEM_FIELD__TIM7_CR2_MMS
//    <name> MMS </name>
//    <rw> 
//    <i> [Bits 6..4] RW (@ 0x40001404) Master mode selection </i>
//    <edit> 
//      <loc> ( (unsigned char)((TIM7_CR2 >> 4) & 0x7), ((TIM7_CR2 = (TIM7_CR2 & ~(0x7UL << 4 )) | ((unsigned long)(Gui_u8:GuiVal & 0x7) << 4 ) ) )) </loc>
//    </edit>
//  </item>
//  


// --------------------------------  Register RTree: TIM7_CR2  ------------------------------------
// SVD Line: 26043

//  <rtree> SFDITEM_REG__TIM7_CR2
//    <name> CR2 </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x40001404) control register 2 </i>
//    <loc> ( (unsigned int)((TIM7_CR2 >> 0) & 0xFFFFFFFF), ((TIM7_CR2 = (TIM7_CR2 & ~(0x70UL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0x70) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__TIM7_CR2_MMS </item>
//  </rtree>
//  


// ----------------------------  Register Item Address: TIM7_DIER  --------------------------------
// SVD Line: 26060

unsigned int TIM7_DIER __AT (0x4000140C);



// --------------------------------  Field Item: TIM7_DIER_UDE  -----------------------------------
// SVD Line: 26069

//  <item> SFDITEM_FIELD__TIM7_DIER_UDE
//    <name> UDE </name>
//    <rw> 
//    <i> [Bit 8] RW (@ 0x4000140C) Update DMA request enable </i>
//    <check> 
//      <loc> ( (unsigned int) TIM7_DIER ) </loc>
//      <o.8..8> UDE
//    </check>
//  </item>
//  


// --------------------------------  Field Item: TIM7_DIER_UIE  -----------------------------------
// SVD Line: 26075

//  <item> SFDITEM_FIELD__TIM7_DIER_UIE
//    <name> UIE </name>
//    <rw> 
//    <i> [Bit 0] RW (@ 0x4000140C) Update interrupt enable </i>
//    <check> 
//      <loc> ( (unsigned int) TIM7_DIER ) </loc>
//      <o.0..0> UIE
//    </check>
//  </item>
//  


// --------------------------------  Register RTree: TIM7_DIER  -----------------------------------
// SVD Line: 26060

//  <rtree> SFDITEM_REG__TIM7_DIER
//    <name> DIER </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x4000140C) DMA/Interrupt enable register </i>
//    <loc> ( (unsigned int)((TIM7_DIER >> 0) & 0xFFFFFFFF), ((TIM7_DIER = (TIM7_DIER & ~(0x101UL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0x101) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__TIM7_DIER_UDE </item>
//    <item> SFDITEM_FIELD__TIM7_DIER_UIE </item>
//  </rtree>
//  


// -----------------------------  Register Item Address: TIM7_SR  ---------------------------------
// SVD Line: 26083

unsigned int TIM7_SR __AT (0x40001410);



// ---------------------------------  Field Item: TIM7_SR_UIF  ------------------------------------
// SVD Line: 26092

//  <item> SFDITEM_FIELD__TIM7_SR_UIF
//    <name> UIF </name>
//    <rw> 
//    <i> [Bit 0] RW (@ 0x40001410) Update interrupt flag </i>
//    <check> 
//      <loc> ( (unsigned int) TIM7_SR ) </loc>
//      <o.0..0> UIF
//    </check>
//  </item>
//  


// ---------------------------------  Register RTree: TIM7_SR  ------------------------------------
// SVD Line: 26083

//  <rtree> SFDITEM_REG__TIM7_SR
//    <name> SR </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x40001410) status register </i>
//    <loc> ( (unsigned int)((TIM7_SR >> 0) & 0xFFFFFFFF), ((TIM7_SR = (TIM7_SR & ~(0x1UL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0x1) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__TIM7_SR_UIF </item>
//  </rtree>
//  


// -----------------------------  Register Item Address: TIM7_EGR  --------------------------------
// SVD Line: 26100

unsigned int TIM7_EGR __AT (0x40001414);



// ---------------------------------  Field Item: TIM7_EGR_UG  ------------------------------------
// SVD Line: 26109

//  <item> SFDITEM_FIELD__TIM7_EGR_UG
//    <name> UG </name>
//    <w> 
//    <i> [Bit 0] WO (@ 0x40001414) Update generation </i>
//    <check> 
//      <loc> ( (unsigned int) TIM7_EGR ) </loc>
//      <o.0..0> UG
//    </check>
//  </item>
//  


// --------------------------------  Register RTree: TIM7_EGR  ------------------------------------
// SVD Line: 26100

//  <rtree> SFDITEM_REG__TIM7_EGR
//    <name> EGR </name>
//    <w> 
//    <i> [Bits 31..0] WO (@ 0x40001414) event generation register </i>
//    <loc> ( (unsigned int)((TIM7_EGR >> 0) & 0xFFFFFFFF), ((TIM7_EGR = (TIM7_EGR & ~(0x1UL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0x1) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__TIM7_EGR_UG </item>
//  </rtree>
//  


// -----------------------------  Register Item Address: TIM7_CNT  --------------------------------
// SVD Line: 26117

unsigned int TIM7_CNT __AT (0x40001424);



// --------------------------------  Field Item: TIM7_CNT_CNT  ------------------------------------
// SVD Line: 26126

//  <item> SFDITEM_FIELD__TIM7_CNT_CNT
//    <name> CNT </name>
//    <rw> 
//    <i> [Bits 15..0] RW (@ 0x40001424) Low counter value </i>
//    <edit> 
//      <loc> ( (unsigned short)((TIM7_CNT >> 0) & 0xFFFF), ((TIM7_CNT = (TIM7_CNT & ~(0xFFFFUL << 0 )) | ((unsigned long)(Gui_u16:GuiVal & 0xFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -------------------------------  Field Item: TIM7_CNT_UIFCPY  ----------------------------------
// SVD Line: 26132

//  <item> SFDITEM_FIELD__TIM7_CNT_UIFCPY
//    <name> UIFCPY </name>
//    <rw> 
//    <i> [Bit 31] RW (@ 0x40001424) UIF Copy </i>
//    <check> 
//      <loc> ( (unsigned int) TIM7_CNT ) </loc>
//      <o.31..31> UIFCPY
//    </check>
//  </item>
//  


// --------------------------------  Register RTree: TIM7_CNT  ------------------------------------
// SVD Line: 26117

//  <rtree> SFDITEM_REG__TIM7_CNT
//    <name> CNT </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x40001424) counter </i>
//    <loc> ( (unsigned int)((TIM7_CNT >> 0) & 0xFFFFFFFF), ((TIM7_CNT = (TIM7_CNT & ~(0x8000FFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0x8000FFFF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__TIM7_CNT_CNT </item>
//    <item> SFDITEM_FIELD__TIM7_CNT_UIFCPY </item>
//  </rtree>
//  


// -----------------------------  Register Item Address: TIM7_PSC  --------------------------------
// SVD Line: 26140

unsigned int TIM7_PSC __AT (0x40001428);



// --------------------------------  Field Item: TIM7_PSC_PSC  ------------------------------------
// SVD Line: 26149

//  <item> SFDITEM_FIELD__TIM7_PSC_PSC
//    <name> PSC </name>
//    <rw> 
//    <i> [Bits 15..0] RW (@ 0x40001428) Prescaler value </i>
//    <edit> 
//      <loc> ( (unsigned short)((TIM7_PSC >> 0) & 0xFFFF), ((TIM7_PSC = (TIM7_PSC & ~(0xFFFFUL << 0 )) | ((unsigned long)(Gui_u16:GuiVal & 0xFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// --------------------------------  Register RTree: TIM7_PSC  ------------------------------------
// SVD Line: 26140

//  <rtree> SFDITEM_REG__TIM7_PSC
//    <name> PSC </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x40001428) prescaler </i>
//    <loc> ( (unsigned int)((TIM7_PSC >> 0) & 0xFFFFFFFF), ((TIM7_PSC = (TIM7_PSC & ~(0xFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__TIM7_PSC_PSC </item>
//  </rtree>
//  


// -----------------------------  Register Item Address: TIM7_ARR  --------------------------------
// SVD Line: 26157

unsigned int TIM7_ARR __AT (0x4000142C);



// --------------------------------  Field Item: TIM7_ARR_ARR  ------------------------------------
// SVD Line: 26166

//  <item> SFDITEM_FIELD__TIM7_ARR_ARR
//    <name> ARR </name>
//    <rw> 
//    <i> [Bits 15..0] RW (@ 0x4000142C) Low Auto-reload value </i>
//    <edit> 
//      <loc> ( (unsigned short)((TIM7_ARR >> 0) & 0xFFFF), ((TIM7_ARR = (TIM7_ARR & ~(0xFFFFUL << 0 )) | ((unsigned long)(Gui_u16:GuiVal & 0xFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// --------------------------------  Register RTree: TIM7_ARR  ------------------------------------
// SVD Line: 26157

//  <rtree> SFDITEM_REG__TIM7_ARR
//    <name> ARR </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x4000142C) auto-reload register </i>
//    <loc> ( (unsigned int)((TIM7_ARR >> 0) & 0xFFFFFFFF), ((TIM7_ARR = (TIM7_ARR & ~(0xFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__TIM7_ARR_ARR </item>
//  </rtree>
//  


// ----------------------------------  Peripheral View: TIM7  -------------------------------------
// SVD Line: 26176

//  <view> TIM7
//    <name> TIM7 </name>
//    <item> SFDITEM_REG__TIM7_CR1 </item>
//    <item> SFDITEM_REG__TIM7_CR2 </item>
//    <item> SFDITEM_REG__TIM7_DIER </item>
//    <item> SFDITEM_REG__TIM7_SR </item>
//    <item> SFDITEM_REG__TIM7_EGR </item>
//    <item> SFDITEM_REG__TIM7_CNT </item>
//    <item> SFDITEM_REG__TIM7_PSC </item>
//    <item> SFDITEM_REG__TIM7_ARR </item>
//  </view>
//  


// -----------------------------  Register Item Address: TIM2_CR1  --------------------------------
// SVD Line: 26206

unsigned int TIM2_CR1 __AT (0x40000000);



// ------------------------------  Field Item: TIM2_CR1_UIFREMAP  ---------------------------------
// SVD Line: 26215

//  <item> SFDITEM_FIELD__TIM2_CR1_UIFREMAP
//    <name> UIFREMAP </name>
//    <rw> 
//    <i> [Bit 11] RW (@ 0x40000000) UIF status bit remapping </i>
//    <check> 
//      <loc> ( (unsigned int) TIM2_CR1 ) </loc>
//      <o.11..11> UIFREMAP
//    </check>
//  </item>
//  


// --------------------------------  Field Item: TIM2_CR1_CKD  ------------------------------------
// SVD Line: 26221

//  <item> SFDITEM_FIELD__TIM2_CR1_CKD
//    <name> CKD </name>
//    <rw> 
//    <i> [Bits 9..8] RW (@ 0x40000000) Clock division </i>
//    <edit> 
//      <loc> ( (unsigned char)((TIM2_CR1 >> 8) & 0x3), ((TIM2_CR1 = (TIM2_CR1 & ~(0x3UL << 8 )) | ((unsigned long)(Gui_u8:GuiVal & 0x3) << 8 ) ) )) </loc>
//    </edit>
//  </item>
//  


// --------------------------------  Field Item: TIM2_CR1_ARPE  -----------------------------------
// SVD Line: 26227

//  <item> SFDITEM_FIELD__TIM2_CR1_ARPE
//    <name> ARPE </name>
//    <rw> 
//    <i> [Bit 7] RW (@ 0x40000000) Auto-reload preload enable </i>
//    <check> 
//      <loc> ( (unsigned int) TIM2_CR1 ) </loc>
//      <o.7..7> ARPE
//    </check>
//  </item>
//  


// --------------------------------  Field Item: TIM2_CR1_CMS  ------------------------------------
// SVD Line: 26233

//  <item> SFDITEM_FIELD__TIM2_CR1_CMS
//    <name> CMS </name>
//    <rw> 
//    <i> [Bits 6..5] RW (@ 0x40000000) Center-aligned mode  selection </i>
//    <edit> 
//      <loc> ( (unsigned char)((TIM2_CR1 >> 5) & 0x3), ((TIM2_CR1 = (TIM2_CR1 & ~(0x3UL << 5 )) | ((unsigned long)(Gui_u8:GuiVal & 0x3) << 5 ) ) )) </loc>
//    </edit>
//  </item>
//  


// --------------------------------  Field Item: TIM2_CR1_DIR  ------------------------------------
// SVD Line: 26240

//  <item> SFDITEM_FIELD__TIM2_CR1_DIR
//    <name> DIR </name>
//    <rw> 
//    <i> [Bit 4] RW (@ 0x40000000) Direction </i>
//    <check> 
//      <loc> ( (unsigned int) TIM2_CR1 ) </loc>
//      <o.4..4> DIR
//    </check>
//  </item>
//  


// --------------------------------  Field Item: TIM2_CR1_OPM  ------------------------------------
// SVD Line: 26246

//  <item> SFDITEM_FIELD__TIM2_CR1_OPM
//    <name> OPM </name>
//    <rw> 
//    <i> [Bit 3] RW (@ 0x40000000) One-pulse mode </i>
//    <check> 
//      <loc> ( (unsigned int) TIM2_CR1 ) </loc>
//      <o.3..3> OPM
//    </check>
//  </item>
//  


// --------------------------------  Field Item: TIM2_CR1_URS  ------------------------------------
// SVD Line: 26252

//  <item> SFDITEM_FIELD__TIM2_CR1_URS
//    <name> URS </name>
//    <rw> 
//    <i> [Bit 2] RW (@ 0x40000000) Update request source </i>
//    <check> 
//      <loc> ( (unsigned int) TIM2_CR1 ) </loc>
//      <o.2..2> URS
//    </check>
//  </item>
//  


// --------------------------------  Field Item: TIM2_CR1_UDIS  -----------------------------------
// SVD Line: 26258

//  <item> SFDITEM_FIELD__TIM2_CR1_UDIS
//    <name> UDIS </name>
//    <rw> 
//    <i> [Bit 1] RW (@ 0x40000000) Update disable </i>
//    <check> 
//      <loc> ( (unsigned int) TIM2_CR1 ) </loc>
//      <o.1..1> UDIS
//    </check>
//  </item>
//  


// --------------------------------  Field Item: TIM2_CR1_CEN  ------------------------------------
// SVD Line: 26264

//  <item> SFDITEM_FIELD__TIM2_CR1_CEN
//    <name> CEN </name>
//    <rw> 
//    <i> [Bit 0] RW (@ 0x40000000) Counter enable </i>
//    <check> 
//      <loc> ( (unsigned int) TIM2_CR1 ) </loc>
//      <o.0..0> CEN
//    </check>
//  </item>
//  


// --------------------------------  Register RTree: TIM2_CR1  ------------------------------------
// SVD Line: 26206

//  <rtree> SFDITEM_REG__TIM2_CR1
//    <name> CR1 </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x40000000) control register 1 </i>
//    <loc> ( (unsigned int)((TIM2_CR1 >> 0) & 0xFFFFFFFF), ((TIM2_CR1 = (TIM2_CR1 & ~(0xBFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xBFF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__TIM2_CR1_UIFREMAP </item>
//    <item> SFDITEM_FIELD__TIM2_CR1_CKD </item>
//    <item> SFDITEM_FIELD__TIM2_CR1_ARPE </item>
//    <item> SFDITEM_FIELD__TIM2_CR1_CMS </item>
//    <item> SFDITEM_FIELD__TIM2_CR1_DIR </item>
//    <item> SFDITEM_FIELD__TIM2_CR1_OPM </item>
//    <item> SFDITEM_FIELD__TIM2_CR1_URS </item>
//    <item> SFDITEM_FIELD__TIM2_CR1_UDIS </item>
//    <item> SFDITEM_FIELD__TIM2_CR1_CEN </item>
//  </rtree>
//  


// -----------------------------  Register Item Address: TIM2_CR2  --------------------------------
// SVD Line: 26272

unsigned int TIM2_CR2 __AT (0x40000004);



// --------------------------------  Field Item: TIM2_CR2_TI1S  -----------------------------------
// SVD Line: 26281

//  <item> SFDITEM_FIELD__TIM2_CR2_TI1S
//    <name> TI1S </name>
//    <rw> 
//    <i> [Bit 7] RW (@ 0x40000004) TI1 selection </i>
//    <check> 
//      <loc> ( (unsigned int) TIM2_CR2 ) </loc>
//      <o.7..7> TI1S
//    </check>
//  </item>
//  


// --------------------------------  Field Item: TIM2_CR2_MMS  ------------------------------------
// SVD Line: 26287

//  <item> SFDITEM_FIELD__TIM2_CR2_MMS
//    <name> MMS </name>
//    <rw> 
//    <i> [Bits 6..4] RW (@ 0x40000004) Master mode selection </i>
//    <edit> 
//      <loc> ( (unsigned char)((TIM2_CR2 >> 4) & 0x7), ((TIM2_CR2 = (TIM2_CR2 & ~(0x7UL << 4 )) | ((unsigned long)(Gui_u8:GuiVal & 0x7) << 4 ) ) )) </loc>
//    </edit>
//  </item>
//  


// --------------------------------  Field Item: TIM2_CR2_CCDS  -----------------------------------
// SVD Line: 26293

//  <item> SFDITEM_FIELD__TIM2_CR2_CCDS
//    <name> CCDS </name>
//    <rw> 
//    <i> [Bit 3] RW (@ 0x40000004) Capture/compare DMA  selection </i>
//    <check> 
//      <loc> ( (unsigned int) TIM2_CR2 ) </loc>
//      <o.3..3> CCDS
//    </check>
//  </item>
//  


// --------------------------------  Register RTree: TIM2_CR2  ------------------------------------
// SVD Line: 26272

//  <rtree> SFDITEM_REG__TIM2_CR2
//    <name> CR2 </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x40000004) control register 2 </i>
//    <loc> ( (unsigned int)((TIM2_CR2 >> 0) & 0xFFFFFFFF), ((TIM2_CR2 = (TIM2_CR2 & ~(0xF8UL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xF8) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__TIM2_CR2_TI1S </item>
//    <item> SFDITEM_FIELD__TIM2_CR2_MMS </item>
//    <item> SFDITEM_FIELD__TIM2_CR2_CCDS </item>
//  </rtree>
//  


// ----------------------------  Register Item Address: TIM2_SMCR  --------------------------------
// SVD Line: 26302

unsigned int TIM2_SMCR __AT (0x40000008);



// ------------------------------  Field Item: TIM2_SMCR_TS_4_3  ----------------------------------
// SVD Line: 26311

//  <item> SFDITEM_FIELD__TIM2_SMCR_TS_4_3
//    <name> TS_4_3 </name>
//    <rw> 
//    <i> [Bits 21..20] RW (@ 0x40000008) Trigger selection </i>
//    <edit> 
//      <loc> ( (unsigned char)((TIM2_SMCR >> 20) & 0x3), ((TIM2_SMCR = (TIM2_SMCR & ~(0x3UL << 20 )) | ((unsigned long)(Gui_u8:GuiVal & 0x3) << 20 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -------------------------------  Field Item: TIM2_SMCR_SMS_3  ----------------------------------
// SVD Line: 26317

//  <item> SFDITEM_FIELD__TIM2_SMCR_SMS_3
//    <name> SMS_3 </name>
//    <rw> 
//    <i> [Bit 16] RW (@ 0x40000008) Slave mode selection - bit  3 </i>
//    <check> 
//      <loc> ( (unsigned int) TIM2_SMCR ) </loc>
//      <o.16..16> SMS_3
//    </check>
//  </item>
//  


// --------------------------------  Field Item: TIM2_SMCR_ETP  -----------------------------------
// SVD Line: 26324

//  <item> SFDITEM_FIELD__TIM2_SMCR_ETP
//    <name> ETP </name>
//    <rw> 
//    <i> [Bit 15] RW (@ 0x40000008) External trigger polarity </i>
//    <check> 
//      <loc> ( (unsigned int) TIM2_SMCR ) </loc>
//      <o.15..15> ETP
//    </check>
//  </item>
//  


// --------------------------------  Field Item: TIM2_SMCR_ECE  -----------------------------------
// SVD Line: 26330

//  <item> SFDITEM_FIELD__TIM2_SMCR_ECE
//    <name> ECE </name>
//    <rw> 
//    <i> [Bit 14] RW (@ 0x40000008) External clock enable </i>
//    <check> 
//      <loc> ( (unsigned int) TIM2_SMCR ) </loc>
//      <o.14..14> ECE
//    </check>
//  </item>
//  


// -------------------------------  Field Item: TIM2_SMCR_ETPS  -----------------------------------
// SVD Line: 26336

//  <item> SFDITEM_FIELD__TIM2_SMCR_ETPS
//    <name> ETPS </name>
//    <rw> 
//    <i> [Bits 13..12] RW (@ 0x40000008) External trigger prescaler </i>
//    <edit> 
//      <loc> ( (unsigned char)((TIM2_SMCR >> 12) & 0x3), ((TIM2_SMCR = (TIM2_SMCR & ~(0x3UL << 12 )) | ((unsigned long)(Gui_u8:GuiVal & 0x3) << 12 ) ) )) </loc>
//    </edit>
//  </item>
//  


// --------------------------------  Field Item: TIM2_SMCR_ETF  -----------------------------------
// SVD Line: 26342

//  <item> SFDITEM_FIELD__TIM2_SMCR_ETF
//    <name> ETF </name>
//    <rw> 
//    <i> [Bits 11..8] RW (@ 0x40000008) External trigger filter </i>
//    <edit> 
//      <loc> ( (unsigned char)((TIM2_SMCR >> 8) & 0xF), ((TIM2_SMCR = (TIM2_SMCR & ~(0xFUL << 8 )) | ((unsigned long)(Gui_u8:GuiVal & 0xF) << 8 ) ) )) </loc>
//    </edit>
//  </item>
//  


// --------------------------------  Field Item: TIM2_SMCR_MSM  -----------------------------------
// SVD Line: 26348

//  <item> SFDITEM_FIELD__TIM2_SMCR_MSM
//    <name> MSM </name>
//    <rw> 
//    <i> [Bit 7] RW (@ 0x40000008) Master/Slave mode </i>
//    <check> 
//      <loc> ( (unsigned int) TIM2_SMCR ) </loc>
//      <o.7..7> MSM
//    </check>
//  </item>
//  


// --------------------------------  Field Item: TIM2_SMCR_TS  ------------------------------------
// SVD Line: 26354

//  <item> SFDITEM_FIELD__TIM2_SMCR_TS
//    <name> TS </name>
//    <rw> 
//    <i> [Bits 6..4] RW (@ 0x40000008) Trigger selection </i>
//    <edit> 
//      <loc> ( (unsigned char)((TIM2_SMCR >> 4) & 0x7), ((TIM2_SMCR = (TIM2_SMCR & ~(0x7UL << 4 )) | ((unsigned long)(Gui_u8:GuiVal & 0x7) << 4 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -------------------------------  Field Item: TIM2_SMCR_OCCS  -----------------------------------
// SVD Line: 26360

//  <item> SFDITEM_FIELD__TIM2_SMCR_OCCS
//    <name> OCCS </name>
//    <rw> 
//    <i> [Bit 3] RW (@ 0x40000008) OCREF clear selection </i>
//    <check> 
//      <loc> ( (unsigned int) TIM2_SMCR ) </loc>
//      <o.3..3> OCCS
//    </check>
//  </item>
//  


// --------------------------------  Field Item: TIM2_SMCR_SMS  -----------------------------------
// SVD Line: 26366

//  <item> SFDITEM_FIELD__TIM2_SMCR_SMS
//    <name> SMS </name>
//    <rw> 
//    <i> [Bits 2..0] RW (@ 0x40000008) Slave mode selection </i>
//    <edit> 
//      <loc> ( (unsigned char)((TIM2_SMCR >> 0) & 0x7), ((TIM2_SMCR = (TIM2_SMCR & ~(0x7UL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0x7) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// --------------------------------  Register RTree: TIM2_SMCR  -----------------------------------
// SVD Line: 26302

//  <rtree> SFDITEM_REG__TIM2_SMCR
//    <name> SMCR </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x40000008) slave mode control register </i>
//    <loc> ( (unsigned int)((TIM2_SMCR >> 0) & 0xFFFFFFFF), ((TIM2_SMCR = (TIM2_SMCR & ~(0x31FFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0x31FFFF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__TIM2_SMCR_TS_4_3 </item>
//    <item> SFDITEM_FIELD__TIM2_SMCR_SMS_3 </item>
//    <item> SFDITEM_FIELD__TIM2_SMCR_ETP </item>
//    <item> SFDITEM_FIELD__TIM2_SMCR_ECE </item>
//    <item> SFDITEM_FIELD__TIM2_SMCR_ETPS </item>
//    <item> SFDITEM_FIELD__TIM2_SMCR_ETF </item>
//    <item> SFDITEM_FIELD__TIM2_SMCR_MSM </item>
//    <item> SFDITEM_FIELD__TIM2_SMCR_TS </item>
//    <item> SFDITEM_FIELD__TIM2_SMCR_OCCS </item>
//    <item> SFDITEM_FIELD__TIM2_SMCR_SMS </item>
//  </rtree>
//  


// ----------------------------  Register Item Address: TIM2_DIER  --------------------------------
// SVD Line: 26374

unsigned int TIM2_DIER __AT (0x4000000C);



// --------------------------------  Field Item: TIM2_DIER_TDE  -----------------------------------
// SVD Line: 26383

//  <item> SFDITEM_FIELD__TIM2_DIER_TDE
//    <name> TDE </name>
//    <rw> 
//    <i> [Bit 14] RW (@ 0x4000000C) Trigger DMA request enable </i>
//    <check> 
//      <loc> ( (unsigned int) TIM2_DIER ) </loc>
//      <o.14..14> TDE
//    </check>
//  </item>
//  


// -------------------------------  Field Item: TIM2_DIER_CC4DE  ----------------------------------
// SVD Line: 26389

//  <item> SFDITEM_FIELD__TIM2_DIER_CC4DE
//    <name> CC4DE </name>
//    <rw> 
//    <i> [Bit 12] RW (@ 0x4000000C) Capture/Compare 4 DMA request  enable </i>
//    <check> 
//      <loc> ( (unsigned int) TIM2_DIER ) </loc>
//      <o.12..12> CC4DE
//    </check>
//  </item>
//  


// -------------------------------  Field Item: TIM2_DIER_CC3DE  ----------------------------------
// SVD Line: 26396

//  <item> SFDITEM_FIELD__TIM2_DIER_CC3DE
//    <name> CC3DE </name>
//    <rw> 
//    <i> [Bit 11] RW (@ 0x4000000C) Capture/Compare 3 DMA request  enable </i>
//    <check> 
//      <loc> ( (unsigned int) TIM2_DIER ) </loc>
//      <o.11..11> CC3DE
//    </check>
//  </item>
//  


// -------------------------------  Field Item: TIM2_DIER_CC2DE  ----------------------------------
// SVD Line: 26403

//  <item> SFDITEM_FIELD__TIM2_DIER_CC2DE
//    <name> CC2DE </name>
//    <rw> 
//    <i> [Bit 10] RW (@ 0x4000000C) Capture/Compare 2 DMA request  enable </i>
//    <check> 
//      <loc> ( (unsigned int) TIM2_DIER ) </loc>
//      <o.10..10> CC2DE
//    </check>
//  </item>
//  


// -------------------------------  Field Item: TIM2_DIER_CC1DE  ----------------------------------
// SVD Line: 26410

//  <item> SFDITEM_FIELD__TIM2_DIER_CC1DE
//    <name> CC1DE </name>
//    <rw> 
//    <i> [Bit 9] RW (@ 0x4000000C) Capture/Compare 1 DMA request  enable </i>
//    <check> 
//      <loc> ( (unsigned int) TIM2_DIER ) </loc>
//      <o.9..9> CC1DE
//    </check>
//  </item>
//  


// --------------------------------  Field Item: TIM2_DIER_UDE  -----------------------------------
// SVD Line: 26417

//  <item> SFDITEM_FIELD__TIM2_DIER_UDE
//    <name> UDE </name>
//    <rw> 
//    <i> [Bit 8] RW (@ 0x4000000C) Update DMA request enable </i>
//    <check> 
//      <loc> ( (unsigned int) TIM2_DIER ) </loc>
//      <o.8..8> UDE
//    </check>
//  </item>
//  


// --------------------------------  Field Item: TIM2_DIER_TIE  -----------------------------------
// SVD Line: 26423

//  <item> SFDITEM_FIELD__TIM2_DIER_TIE
//    <name> TIE </name>
//    <rw> 
//    <i> [Bit 6] RW (@ 0x4000000C) Trigger interrupt enable </i>
//    <check> 
//      <loc> ( (unsigned int) TIM2_DIER ) </loc>
//      <o.6..6> TIE
//    </check>
//  </item>
//  


// -------------------------------  Field Item: TIM2_DIER_CC4IE  ----------------------------------
// SVD Line: 26429

//  <item> SFDITEM_FIELD__TIM2_DIER_CC4IE
//    <name> CC4IE </name>
//    <rw> 
//    <i> [Bit 4] RW (@ 0x4000000C) Capture/Compare 4 interrupt  enable </i>
//    <check> 
//      <loc> ( (unsigned int) TIM2_DIER ) </loc>
//      <o.4..4> CC4IE
//    </check>
//  </item>
//  


// -------------------------------  Field Item: TIM2_DIER_CC3IE  ----------------------------------
// SVD Line: 26436

//  <item> SFDITEM_FIELD__TIM2_DIER_CC3IE
//    <name> CC3IE </name>
//    <rw> 
//    <i> [Bit 3] RW (@ 0x4000000C) Capture/Compare 3 interrupt  enable </i>
//    <check> 
//      <loc> ( (unsigned int) TIM2_DIER ) </loc>
//      <o.3..3> CC3IE
//    </check>
//  </item>
//  


// -------------------------------  Field Item: TIM2_DIER_CC2IE  ----------------------------------
// SVD Line: 26443

//  <item> SFDITEM_FIELD__TIM2_DIER_CC2IE
//    <name> CC2IE </name>
//    <rw> 
//    <i> [Bit 2] RW (@ 0x4000000C) Capture/Compare 2 interrupt  enable </i>
//    <check> 
//      <loc> ( (unsigned int) TIM2_DIER ) </loc>
//      <o.2..2> CC2IE
//    </check>
//  </item>
//  


// -------------------------------  Field Item: TIM2_DIER_CC1IE  ----------------------------------
// SVD Line: 26450

//  <item> SFDITEM_FIELD__TIM2_DIER_CC1IE
//    <name> CC1IE </name>
//    <rw> 
//    <i> [Bit 1] RW (@ 0x4000000C) Capture/Compare 1 interrupt  enable </i>
//    <check> 
//      <loc> ( (unsigned int) TIM2_DIER ) </loc>
//      <o.1..1> CC1IE
//    </check>
//  </item>
//  


// --------------------------------  Field Item: TIM2_DIER_UIE  -----------------------------------
// SVD Line: 26457

//  <item> SFDITEM_FIELD__TIM2_DIER_UIE
//    <name> UIE </name>
//    <rw> 
//    <i> [Bit 0] RW (@ 0x4000000C) Update interrupt enable </i>
//    <check> 
//      <loc> ( (unsigned int) TIM2_DIER ) </loc>
//      <o.0..0> UIE
//    </check>
//  </item>
//  


// --------------------------------  Register RTree: TIM2_DIER  -----------------------------------
// SVD Line: 26374

//  <rtree> SFDITEM_REG__TIM2_DIER
//    <name> DIER </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x4000000C) DMA/Interrupt enable register </i>
//    <loc> ( (unsigned int)((TIM2_DIER >> 0) & 0xFFFFFFFF), ((TIM2_DIER = (TIM2_DIER & ~(0x5F5FUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0x5F5F) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__TIM2_DIER_TDE </item>
//    <item> SFDITEM_FIELD__TIM2_DIER_CC4DE </item>
//    <item> SFDITEM_FIELD__TIM2_DIER_CC3DE </item>
//    <item> SFDITEM_FIELD__TIM2_DIER_CC2DE </item>
//    <item> SFDITEM_FIELD__TIM2_DIER_CC1DE </item>
//    <item> SFDITEM_FIELD__TIM2_DIER_UDE </item>
//    <item> SFDITEM_FIELD__TIM2_DIER_TIE </item>
//    <item> SFDITEM_FIELD__TIM2_DIER_CC4IE </item>
//    <item> SFDITEM_FIELD__TIM2_DIER_CC3IE </item>
//    <item> SFDITEM_FIELD__TIM2_DIER_CC2IE </item>
//    <item> SFDITEM_FIELD__TIM2_DIER_CC1IE </item>
//    <item> SFDITEM_FIELD__TIM2_DIER_UIE </item>
//  </rtree>
//  


// -----------------------------  Register Item Address: TIM2_SR  ---------------------------------
// SVD Line: 26465

unsigned int TIM2_SR __AT (0x40000010);



// --------------------------------  Field Item: TIM2_SR_CC4OF  -----------------------------------
// SVD Line: 26474

//  <item> SFDITEM_FIELD__TIM2_SR_CC4OF
//    <name> CC4OF </name>
//    <rw> 
//    <i> [Bit 12] RW (@ 0x40000010) Capture/Compare 4 overcapture  flag </i>
//    <check> 
//      <loc> ( (unsigned int) TIM2_SR ) </loc>
//      <o.12..12> CC4OF
//    </check>
//  </item>
//  


// --------------------------------  Field Item: TIM2_SR_CC3OF  -----------------------------------
// SVD Line: 26481

//  <item> SFDITEM_FIELD__TIM2_SR_CC3OF
//    <name> CC3OF </name>
//    <rw> 
//    <i> [Bit 11] RW (@ 0x40000010) Capture/Compare 3 overcapture  flag </i>
//    <check> 
//      <loc> ( (unsigned int) TIM2_SR ) </loc>
//      <o.11..11> CC3OF
//    </check>
//  </item>
//  


// --------------------------------  Field Item: TIM2_SR_CC2OF  -----------------------------------
// SVD Line: 26488

//  <item> SFDITEM_FIELD__TIM2_SR_CC2OF
//    <name> CC2OF </name>
//    <rw> 
//    <i> [Bit 10] RW (@ 0x40000010) Capture/compare 2 overcapture  flag </i>
//    <check> 
//      <loc> ( (unsigned int) TIM2_SR ) </loc>
//      <o.10..10> CC2OF
//    </check>
//  </item>
//  


// --------------------------------  Field Item: TIM2_SR_CC1OF  -----------------------------------
// SVD Line: 26495

//  <item> SFDITEM_FIELD__TIM2_SR_CC1OF
//    <name> CC1OF </name>
//    <rw> 
//    <i> [Bit 9] RW (@ 0x40000010) Capture/Compare 1 overcapture  flag </i>
//    <check> 
//      <loc> ( (unsigned int) TIM2_SR ) </loc>
//      <o.9..9> CC1OF
//    </check>
//  </item>
//  


// ---------------------------------  Field Item: TIM2_SR_TIF  ------------------------------------
// SVD Line: 26502

//  <item> SFDITEM_FIELD__TIM2_SR_TIF
//    <name> TIF </name>
//    <rw> 
//    <i> [Bit 6] RW (@ 0x40000010) Trigger interrupt flag </i>
//    <check> 
//      <loc> ( (unsigned int) TIM2_SR ) </loc>
//      <o.6..6> TIF
//    </check>
//  </item>
//  


// --------------------------------  Field Item: TIM2_SR_CC4IF  -----------------------------------
// SVD Line: 26508

//  <item> SFDITEM_FIELD__TIM2_SR_CC4IF
//    <name> CC4IF </name>
//    <rw> 
//    <i> [Bit 4] RW (@ 0x40000010) Capture/Compare 4 interrupt  flag </i>
//    <check> 
//      <loc> ( (unsigned int) TIM2_SR ) </loc>
//      <o.4..4> CC4IF
//    </check>
//  </item>
//  


// --------------------------------  Field Item: TIM2_SR_CC3IF  -----------------------------------
// SVD Line: 26515

//  <item> SFDITEM_FIELD__TIM2_SR_CC3IF
//    <name> CC3IF </name>
//    <rw> 
//    <i> [Bit 3] RW (@ 0x40000010) Capture/Compare 3 interrupt  flag </i>
//    <check> 
//      <loc> ( (unsigned int) TIM2_SR ) </loc>
//      <o.3..3> CC3IF
//    </check>
//  </item>
//  


// --------------------------------  Field Item: TIM2_SR_CC2IF  -----------------------------------
// SVD Line: 26522

//  <item> SFDITEM_FIELD__TIM2_SR_CC2IF
//    <name> CC2IF </name>
//    <rw> 
//    <i> [Bit 2] RW (@ 0x40000010) Capture/Compare 2 interrupt  flag </i>
//    <check> 
//      <loc> ( (unsigned int) TIM2_SR ) </loc>
//      <o.2..2> CC2IF
//    </check>
//  </item>
//  


// --------------------------------  Field Item: TIM2_SR_CC1IF  -----------------------------------
// SVD Line: 26529

//  <item> SFDITEM_FIELD__TIM2_SR_CC1IF
//    <name> CC1IF </name>
//    <rw> 
//    <i> [Bit 1] RW (@ 0x40000010) Capture/compare 1 interrupt  flag </i>
//    <check> 
//      <loc> ( (unsigned int) TIM2_SR ) </loc>
//      <o.1..1> CC1IF
//    </check>
//  </item>
//  


// ---------------------------------  Field Item: TIM2_SR_UIF  ------------------------------------
// SVD Line: 26536

//  <item> SFDITEM_FIELD__TIM2_SR_UIF
//    <name> UIF </name>
//    <rw> 
//    <i> [Bit 0] RW (@ 0x40000010) Update interrupt flag </i>
//    <check> 
//      <loc> ( (unsigned int) TIM2_SR ) </loc>
//      <o.0..0> UIF
//    </check>
//  </item>
//  


// ---------------------------------  Register RTree: TIM2_SR  ------------------------------------
// SVD Line: 26465

//  <rtree> SFDITEM_REG__TIM2_SR
//    <name> SR </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x40000010) status register </i>
//    <loc> ( (unsigned int)((TIM2_SR >> 0) & 0xFFFFFFFF), ((TIM2_SR = (TIM2_SR & ~(0x1E5FUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0x1E5F) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__TIM2_SR_CC4OF </item>
//    <item> SFDITEM_FIELD__TIM2_SR_CC3OF </item>
//    <item> SFDITEM_FIELD__TIM2_SR_CC2OF </item>
//    <item> SFDITEM_FIELD__TIM2_SR_CC1OF </item>
//    <item> SFDITEM_FIELD__TIM2_SR_TIF </item>
//    <item> SFDITEM_FIELD__TIM2_SR_CC4IF </item>
//    <item> SFDITEM_FIELD__TIM2_SR_CC3IF </item>
//    <item> SFDITEM_FIELD__TIM2_SR_CC2IF </item>
//    <item> SFDITEM_FIELD__TIM2_SR_CC1IF </item>
//    <item> SFDITEM_FIELD__TIM2_SR_UIF </item>
//  </rtree>
//  


// -----------------------------  Register Item Address: TIM2_EGR  --------------------------------
// SVD Line: 26544

unsigned int TIM2_EGR __AT (0x40000014);



// ---------------------------------  Field Item: TIM2_EGR_TG  ------------------------------------
// SVD Line: 26553

//  <item> SFDITEM_FIELD__TIM2_EGR_TG
//    <name> TG </name>
//    <w> 
//    <i> [Bit 6] WO (@ 0x40000014) Trigger generation </i>
//    <check> 
//      <loc> ( (unsigned int) TIM2_EGR ) </loc>
//      <o.6..6> TG
//    </check>
//  </item>
//  


// --------------------------------  Field Item: TIM2_EGR_CC4G  -----------------------------------
// SVD Line: 26559

//  <item> SFDITEM_FIELD__TIM2_EGR_CC4G
//    <name> CC4G </name>
//    <w> 
//    <i> [Bit 4] WO (@ 0x40000014) Capture/compare 4  generation </i>
//    <check> 
//      <loc> ( (unsigned int) TIM2_EGR ) </loc>
//      <o.4..4> CC4G
//    </check>
//  </item>
//  


// --------------------------------  Field Item: TIM2_EGR_CC3G  -----------------------------------
// SVD Line: 26566

//  <item> SFDITEM_FIELD__TIM2_EGR_CC3G
//    <name> CC3G </name>
//    <w> 
//    <i> [Bit 3] WO (@ 0x40000014) Capture/compare 3  generation </i>
//    <check> 
//      <loc> ( (unsigned int) TIM2_EGR ) </loc>
//      <o.3..3> CC3G
//    </check>
//  </item>
//  


// --------------------------------  Field Item: TIM2_EGR_CC2G  -----------------------------------
// SVD Line: 26573

//  <item> SFDITEM_FIELD__TIM2_EGR_CC2G
//    <name> CC2G </name>
//    <w> 
//    <i> [Bit 2] WO (@ 0x40000014) Capture/compare 2  generation </i>
//    <check> 
//      <loc> ( (unsigned int) TIM2_EGR ) </loc>
//      <o.2..2> CC2G
//    </check>
//  </item>
//  


// --------------------------------  Field Item: TIM2_EGR_CC1G  -----------------------------------
// SVD Line: 26580

//  <item> SFDITEM_FIELD__TIM2_EGR_CC1G
//    <name> CC1G </name>
//    <w> 
//    <i> [Bit 1] WO (@ 0x40000014) Capture/compare 1  generation </i>
//    <check> 
//      <loc> ( (unsigned int) TIM2_EGR ) </loc>
//      <o.1..1> CC1G
//    </check>
//  </item>
//  


// ---------------------------------  Field Item: TIM2_EGR_UG  ------------------------------------
// SVD Line: 26587

//  <item> SFDITEM_FIELD__TIM2_EGR_UG
//    <name> UG </name>
//    <w> 
//    <i> [Bit 0] WO (@ 0x40000014) Update generation </i>
//    <check> 
//      <loc> ( (unsigned int) TIM2_EGR ) </loc>
//      <o.0..0> UG
//    </check>
//  </item>
//  


// --------------------------------  Register RTree: TIM2_EGR  ------------------------------------
// SVD Line: 26544

//  <rtree> SFDITEM_REG__TIM2_EGR
//    <name> EGR </name>
//    <w> 
//    <i> [Bits 31..0] WO (@ 0x40000014) event generation register </i>
//    <loc> ( (unsigned int)((TIM2_EGR >> 0) & 0xFFFFFFFF), ((TIM2_EGR = (TIM2_EGR & ~(0x5FUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0x5F) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__TIM2_EGR_TG </item>
//    <item> SFDITEM_FIELD__TIM2_EGR_CC4G </item>
//    <item> SFDITEM_FIELD__TIM2_EGR_CC3G </item>
//    <item> SFDITEM_FIELD__TIM2_EGR_CC2G </item>
//    <item> SFDITEM_FIELD__TIM2_EGR_CC1G </item>
//    <item> SFDITEM_FIELD__TIM2_EGR_UG </item>
//  </rtree>
//  


// ------------------------  Register Item Address: TIM2_CCMR1_Output  ----------------------------
// SVD Line: 26595

unsigned int TIM2_CCMR1_Output __AT (0x40000018);



// --------------------------  Field Item: TIM2_CCMR1_Output_OC2M_3  ------------------------------
// SVD Line: 26605

//  <item> SFDITEM_FIELD__TIM2_CCMR1_Output_OC2M_3
//    <name> OC2M_3 </name>
//    <rw> 
//    <i> [Bit 24] RW (@ 0x40000018) Output Compare 2 mode - bit  3 </i>
//    <check> 
//      <loc> ( (unsigned int) TIM2_CCMR1_Output ) </loc>
//      <o.24..24> OC2M_3
//    </check>
//  </item>
//  


// --------------------------  Field Item: TIM2_CCMR1_Output_OC1M_3  ------------------------------
// SVD Line: 26612

//  <item> SFDITEM_FIELD__TIM2_CCMR1_Output_OC1M_3
//    <name> OC1M_3 </name>
//    <rw> 
//    <i> [Bit 16] RW (@ 0x40000018) Output Compare 1 mode - bit  3 </i>
//    <check> 
//      <loc> ( (unsigned int) TIM2_CCMR1_Output ) </loc>
//      <o.16..16> OC1M_3
//    </check>
//  </item>
//  


// ---------------------------  Field Item: TIM2_CCMR1_Output_OC2CE  ------------------------------
// SVD Line: 26619

//  <item> SFDITEM_FIELD__TIM2_CCMR1_Output_OC2CE
//    <name> OC2CE </name>
//    <rw> 
//    <i> [Bit 15] RW (@ 0x40000018) Output compare 2 clear  enable </i>
//    <check> 
//      <loc> ( (unsigned int) TIM2_CCMR1_Output ) </loc>
//      <o.15..15> OC2CE
//    </check>
//  </item>
//  


// ---------------------------  Field Item: TIM2_CCMR1_Output_OC2M  -------------------------------
// SVD Line: 26626

//  <item> SFDITEM_FIELD__TIM2_CCMR1_Output_OC2M
//    <name> OC2M </name>
//    <rw> 
//    <i> [Bits 14..12] RW (@ 0x40000018) Output compare 2 mode </i>
//    <edit> 
//      <loc> ( (unsigned char)((TIM2_CCMR1_Output >> 12) & 0x7), ((TIM2_CCMR1_Output = (TIM2_CCMR1_Output & ~(0x7UL << 12 )) | ((unsigned long)(Gui_u8:GuiVal & 0x7) << 12 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ---------------------------  Field Item: TIM2_CCMR1_Output_OC2PE  ------------------------------
// SVD Line: 26632

//  <item> SFDITEM_FIELD__TIM2_CCMR1_Output_OC2PE
//    <name> OC2PE </name>
//    <rw> 
//    <i> [Bit 11] RW (@ 0x40000018) Output compare 2 preload  enable </i>
//    <check> 
//      <loc> ( (unsigned int) TIM2_CCMR1_Output ) </loc>
//      <o.11..11> OC2PE
//    </check>
//  </item>
//  


// ---------------------------  Field Item: TIM2_CCMR1_Output_OC2FE  ------------------------------
// SVD Line: 26639

//  <item> SFDITEM_FIELD__TIM2_CCMR1_Output_OC2FE
//    <name> OC2FE </name>
//    <rw> 
//    <i> [Bit 10] RW (@ 0x40000018) Output compare 2 fast  enable </i>
//    <check> 
//      <loc> ( (unsigned int) TIM2_CCMR1_Output ) </loc>
//      <o.10..10> OC2FE
//    </check>
//  </item>
//  


// ---------------------------  Field Item: TIM2_CCMR1_Output_CC2S  -------------------------------
// SVD Line: 26646

//  <item> SFDITEM_FIELD__TIM2_CCMR1_Output_CC2S
//    <name> CC2S </name>
//    <rw> 
//    <i> [Bits 9..8] RW (@ 0x40000018) Capture/Compare 2  selection </i>
//    <edit> 
//      <loc> ( (unsigned char)((TIM2_CCMR1_Output >> 8) & 0x3), ((TIM2_CCMR1_Output = (TIM2_CCMR1_Output & ~(0x3UL << 8 )) | ((unsigned long)(Gui_u8:GuiVal & 0x3) << 8 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ---------------------------  Field Item: TIM2_CCMR1_Output_OC1CE  ------------------------------
// SVD Line: 26653

//  <item> SFDITEM_FIELD__TIM2_CCMR1_Output_OC1CE
//    <name> OC1CE </name>
//    <rw> 
//    <i> [Bit 7] RW (@ 0x40000018) Output compare 1 clear  enable </i>
//    <check> 
//      <loc> ( (unsigned int) TIM2_CCMR1_Output ) </loc>
//      <o.7..7> OC1CE
//    </check>
//  </item>
//  


// ---------------------------  Field Item: TIM2_CCMR1_Output_OC1M  -------------------------------
// SVD Line: 26660

//  <item> SFDITEM_FIELD__TIM2_CCMR1_Output_OC1M
//    <name> OC1M </name>
//    <rw> 
//    <i> [Bits 6..4] RW (@ 0x40000018) Output compare 1 mode </i>
//    <edit> 
//      <loc> ( (unsigned char)((TIM2_CCMR1_Output >> 4) & 0x7), ((TIM2_CCMR1_Output = (TIM2_CCMR1_Output & ~(0x7UL << 4 )) | ((unsigned long)(Gui_u8:GuiVal & 0x7) << 4 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ---------------------------  Field Item: TIM2_CCMR1_Output_OC1PE  ------------------------------
// SVD Line: 26666

//  <item> SFDITEM_FIELD__TIM2_CCMR1_Output_OC1PE
//    <name> OC1PE </name>
//    <rw> 
//    <i> [Bit 3] RW (@ 0x40000018) Output compare 1 preload  enable </i>
//    <check> 
//      <loc> ( (unsigned int) TIM2_CCMR1_Output ) </loc>
//      <o.3..3> OC1PE
//    </check>
//  </item>
//  


// ---------------------------  Field Item: TIM2_CCMR1_Output_OC1FE  ------------------------------
// SVD Line: 26673

//  <item> SFDITEM_FIELD__TIM2_CCMR1_Output_OC1FE
//    <name> OC1FE </name>
//    <rw> 
//    <i> [Bit 2] RW (@ 0x40000018) Output compare 1 fast  enable </i>
//    <check> 
//      <loc> ( (unsigned int) TIM2_CCMR1_Output ) </loc>
//      <o.2..2> OC1FE
//    </check>
//  </item>
//  


// ---------------------------  Field Item: TIM2_CCMR1_Output_CC1S  -------------------------------
// SVD Line: 26680

//  <item> SFDITEM_FIELD__TIM2_CCMR1_Output_CC1S
//    <name> CC1S </name>
//    <rw> 
//    <i> [Bits 1..0] RW (@ 0x40000018) Capture/Compare 1  selection </i>
//    <edit> 
//      <loc> ( (unsigned char)((TIM2_CCMR1_Output >> 0) & 0x3), ((TIM2_CCMR1_Output = (TIM2_CCMR1_Output & ~(0x3UL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0x3) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ----------------------------  Register RTree: TIM2_CCMR1_Output  -------------------------------
// SVD Line: 26595

//  <rtree> SFDITEM_REG__TIM2_CCMR1_Output
//    <name> CCMR1_Output </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x40000018) capture/compare mode register 1 (output  mode) </i>
//    <loc> ( (unsigned int)((TIM2_CCMR1_Output >> 0) & 0xFFFFFFFF), ((TIM2_CCMR1_Output = (TIM2_CCMR1_Output & ~(0x101FFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0x101FFFF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__TIM2_CCMR1_Output_OC2M_3 </item>
//    <item> SFDITEM_FIELD__TIM2_CCMR1_Output_OC1M_3 </item>
//    <item> SFDITEM_FIELD__TIM2_CCMR1_Output_OC2CE </item>
//    <item> SFDITEM_FIELD__TIM2_CCMR1_Output_OC2M </item>
//    <item> SFDITEM_FIELD__TIM2_CCMR1_Output_OC2PE </item>
//    <item> SFDITEM_FIELD__TIM2_CCMR1_Output_OC2FE </item>
//    <item> SFDITEM_FIELD__TIM2_CCMR1_Output_CC2S </item>
//    <item> SFDITEM_FIELD__TIM2_CCMR1_Output_OC1CE </item>
//    <item> SFDITEM_FIELD__TIM2_CCMR1_Output_OC1M </item>
//    <item> SFDITEM_FIELD__TIM2_CCMR1_Output_OC1PE </item>
//    <item> SFDITEM_FIELD__TIM2_CCMR1_Output_OC1FE </item>
//    <item> SFDITEM_FIELD__TIM2_CCMR1_Output_CC1S </item>
//  </rtree>
//  


// -------------------------  Register Item Address: TIM2_CCMR1_Input  ----------------------------
// SVD Line: 26689

unsigned int TIM2_CCMR1_Input __AT (0x40000018);



// ----------------------------  Field Item: TIM2_CCMR1_Input_IC2F  -------------------------------
// SVD Line: 26700

//  <item> SFDITEM_FIELD__TIM2_CCMR1_Input_IC2F
//    <name> IC2F </name>
//    <rw> 
//    <i> [Bits 15..12] RW (@ 0x40000018) Input capture 2 filter </i>
//    <edit> 
//      <loc> ( (unsigned char)((TIM2_CCMR1_Input >> 12) & 0xF), ((TIM2_CCMR1_Input = (TIM2_CCMR1_Input & ~(0xFUL << 12 )) | ((unsigned long)(Gui_u8:GuiVal & 0xF) << 12 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ---------------------------  Field Item: TIM2_CCMR1_Input_IC2PSC  ------------------------------
// SVD Line: 26706

//  <item> SFDITEM_FIELD__TIM2_CCMR1_Input_IC2PSC
//    <name> IC2PSC </name>
//    <rw> 
//    <i> [Bits 11..10] RW (@ 0x40000018) Input capture 2 prescaler </i>
//    <edit> 
//      <loc> ( (unsigned char)((TIM2_CCMR1_Input >> 10) & 0x3), ((TIM2_CCMR1_Input = (TIM2_CCMR1_Input & ~(0x3UL << 10 )) | ((unsigned long)(Gui_u8:GuiVal & 0x3) << 10 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ----------------------------  Field Item: TIM2_CCMR1_Input_CC2S  -------------------------------
// SVD Line: 26712

//  <item> SFDITEM_FIELD__TIM2_CCMR1_Input_CC2S
//    <name> CC2S </name>
//    <rw> 
//    <i> [Bits 9..8] RW (@ 0x40000018) Capture/compare 2  selection </i>
//    <edit> 
//      <loc> ( (unsigned char)((TIM2_CCMR1_Input >> 8) & 0x3), ((TIM2_CCMR1_Input = (TIM2_CCMR1_Input & ~(0x3UL << 8 )) | ((unsigned long)(Gui_u8:GuiVal & 0x3) << 8 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ----------------------------  Field Item: TIM2_CCMR1_Input_IC1F  -------------------------------
// SVD Line: 26719

//  <item> SFDITEM_FIELD__TIM2_CCMR1_Input_IC1F
//    <name> IC1F </name>
//    <rw> 
//    <i> [Bits 7..4] RW (@ 0x40000018) Input capture 1 filter </i>
//    <edit> 
//      <loc> ( (unsigned char)((TIM2_CCMR1_Input >> 4) & 0xF), ((TIM2_CCMR1_Input = (TIM2_CCMR1_Input & ~(0xFUL << 4 )) | ((unsigned long)(Gui_u8:GuiVal & 0xF) << 4 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ---------------------------  Field Item: TIM2_CCMR1_Input_IC1PSC  ------------------------------
// SVD Line: 26725

//  <item> SFDITEM_FIELD__TIM2_CCMR1_Input_IC1PSC
//    <name> IC1PSC </name>
//    <rw> 
//    <i> [Bits 3..2] RW (@ 0x40000018) Input capture 1 prescaler </i>
//    <edit> 
//      <loc> ( (unsigned char)((TIM2_CCMR1_Input >> 2) & 0x3), ((TIM2_CCMR1_Input = (TIM2_CCMR1_Input & ~(0x3UL << 2 )) | ((unsigned long)(Gui_u8:GuiVal & 0x3) << 2 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ----------------------------  Field Item: TIM2_CCMR1_Input_CC1S  -------------------------------
// SVD Line: 26731

//  <item> SFDITEM_FIELD__TIM2_CCMR1_Input_CC1S
//    <name> CC1S </name>
//    <rw> 
//    <i> [Bits 1..0] RW (@ 0x40000018) Capture/Compare 1  selection </i>
//    <edit> 
//      <loc> ( (unsigned char)((TIM2_CCMR1_Input >> 0) & 0x3), ((TIM2_CCMR1_Input = (TIM2_CCMR1_Input & ~(0x3UL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0x3) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ----------------------------  Register RTree: TIM2_CCMR1_Input  --------------------------------
// SVD Line: 26689

//  <rtree> SFDITEM_REG__TIM2_CCMR1_Input
//    <name> CCMR1_Input </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x40000018) capture/compare mode register 1 (input  mode) </i>
//    <loc> ( (unsigned int)((TIM2_CCMR1_Input >> 0) & 0xFFFFFFFF), ((TIM2_CCMR1_Input = (TIM2_CCMR1_Input & ~(0xFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__TIM2_CCMR1_Input_IC2F </item>
//    <item> SFDITEM_FIELD__TIM2_CCMR1_Input_IC2PSC </item>
//    <item> SFDITEM_FIELD__TIM2_CCMR1_Input_CC2S </item>
//    <item> SFDITEM_FIELD__TIM2_CCMR1_Input_IC1F </item>
//    <item> SFDITEM_FIELD__TIM2_CCMR1_Input_IC1PSC </item>
//    <item> SFDITEM_FIELD__TIM2_CCMR1_Input_CC1S </item>
//  </rtree>
//  


// ------------------------  Register Item Address: TIM2_CCMR2_Output  ----------------------------
// SVD Line: 26740

unsigned int TIM2_CCMR2_Output __AT (0x4000001C);



// --------------------------  Field Item: TIM2_CCMR2_Output_OC4M_3  ------------------------------
// SVD Line: 26750

//  <item> SFDITEM_FIELD__TIM2_CCMR2_Output_OC4M_3
//    <name> OC4M_3 </name>
//    <rw> 
//    <i> [Bit 24] RW (@ 0x4000001C) Output Compare 4 mode - bit  3 </i>
//    <check> 
//      <loc> ( (unsigned int) TIM2_CCMR2_Output ) </loc>
//      <o.24..24> OC4M_3
//    </check>
//  </item>
//  


// --------------------------  Field Item: TIM2_CCMR2_Output_OC3M_3  ------------------------------
// SVD Line: 26757

//  <item> SFDITEM_FIELD__TIM2_CCMR2_Output_OC3M_3
//    <name> OC3M_3 </name>
//    <rw> 
//    <i> [Bit 16] RW (@ 0x4000001C) Output Compare 3 mode - bit  3 </i>
//    <check> 
//      <loc> ( (unsigned int) TIM2_CCMR2_Output ) </loc>
//      <o.16..16> OC3M_3
//    </check>
//  </item>
//  


// ---------------------------  Field Item: TIM2_CCMR2_Output_OC4CE  ------------------------------
// SVD Line: 26764

//  <item> SFDITEM_FIELD__TIM2_CCMR2_Output_OC4CE
//    <name> OC4CE </name>
//    <rw> 
//    <i> [Bit 15] RW (@ 0x4000001C) Output compare 4 clear  enable </i>
//    <check> 
//      <loc> ( (unsigned int) TIM2_CCMR2_Output ) </loc>
//      <o.15..15> OC4CE
//    </check>
//  </item>
//  


// ---------------------------  Field Item: TIM2_CCMR2_Output_OC4M  -------------------------------
// SVD Line: 26771

//  <item> SFDITEM_FIELD__TIM2_CCMR2_Output_OC4M
//    <name> OC4M </name>
//    <rw> 
//    <i> [Bits 14..12] RW (@ 0x4000001C) Output compare 4 mode </i>
//    <edit> 
//      <loc> ( (unsigned char)((TIM2_CCMR2_Output >> 12) & 0x7), ((TIM2_CCMR2_Output = (TIM2_CCMR2_Output & ~(0x7UL << 12 )) | ((unsigned long)(Gui_u8:GuiVal & 0x7) << 12 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ---------------------------  Field Item: TIM2_CCMR2_Output_OC4PE  ------------------------------
// SVD Line: 26777

//  <item> SFDITEM_FIELD__TIM2_CCMR2_Output_OC4PE
//    <name> OC4PE </name>
//    <rw> 
//    <i> [Bit 11] RW (@ 0x4000001C) Output compare 4 preload  enable </i>
//    <check> 
//      <loc> ( (unsigned int) TIM2_CCMR2_Output ) </loc>
//      <o.11..11> OC4PE
//    </check>
//  </item>
//  


// ---------------------------  Field Item: TIM2_CCMR2_Output_OC4FE  ------------------------------
// SVD Line: 26784

//  <item> SFDITEM_FIELD__TIM2_CCMR2_Output_OC4FE
//    <name> OC4FE </name>
//    <rw> 
//    <i> [Bit 10] RW (@ 0x4000001C) Output compare 4 fast  enable </i>
//    <check> 
//      <loc> ( (unsigned int) TIM2_CCMR2_Output ) </loc>
//      <o.10..10> OC4FE
//    </check>
//  </item>
//  


// ---------------------------  Field Item: TIM2_CCMR2_Output_CC4S  -------------------------------
// SVD Line: 26791

//  <item> SFDITEM_FIELD__TIM2_CCMR2_Output_CC4S
//    <name> CC4S </name>
//    <rw> 
//    <i> [Bits 9..8] RW (@ 0x4000001C) Capture/Compare 4  selection </i>
//    <edit> 
//      <loc> ( (unsigned char)((TIM2_CCMR2_Output >> 8) & 0x3), ((TIM2_CCMR2_Output = (TIM2_CCMR2_Output & ~(0x3UL << 8 )) | ((unsigned long)(Gui_u8:GuiVal & 0x3) << 8 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ---------------------------  Field Item: TIM2_CCMR2_Output_OC3CE  ------------------------------
// SVD Line: 26798

//  <item> SFDITEM_FIELD__TIM2_CCMR2_Output_OC3CE
//    <name> OC3CE </name>
//    <rw> 
//    <i> [Bit 7] RW (@ 0x4000001C) Output compare 3 clear  enable </i>
//    <check> 
//      <loc> ( (unsigned int) TIM2_CCMR2_Output ) </loc>
//      <o.7..7> OC3CE
//    </check>
//  </item>
//  


// ---------------------------  Field Item: TIM2_CCMR2_Output_OC3M  -------------------------------
// SVD Line: 26805

//  <item> SFDITEM_FIELD__TIM2_CCMR2_Output_OC3M
//    <name> OC3M </name>
//    <rw> 
//    <i> [Bits 6..4] RW (@ 0x4000001C) Output compare 3 mode </i>
//    <edit> 
//      <loc> ( (unsigned char)((TIM2_CCMR2_Output >> 4) & 0x7), ((TIM2_CCMR2_Output = (TIM2_CCMR2_Output & ~(0x7UL << 4 )) | ((unsigned long)(Gui_u8:GuiVal & 0x7) << 4 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ---------------------------  Field Item: TIM2_CCMR2_Output_OC3PE  ------------------------------
// SVD Line: 26811

//  <item> SFDITEM_FIELD__TIM2_CCMR2_Output_OC3PE
//    <name> OC3PE </name>
//    <rw> 
//    <i> [Bit 3] RW (@ 0x4000001C) Output compare 3 preload  enable </i>
//    <check> 
//      <loc> ( (unsigned int) TIM2_CCMR2_Output ) </loc>
//      <o.3..3> OC3PE
//    </check>
//  </item>
//  


// ---------------------------  Field Item: TIM2_CCMR2_Output_OC3FE  ------------------------------
// SVD Line: 26818

//  <item> SFDITEM_FIELD__TIM2_CCMR2_Output_OC3FE
//    <name> OC3FE </name>
//    <rw> 
//    <i> [Bit 2] RW (@ 0x4000001C) Output compare 3 fast  enable </i>
//    <check> 
//      <loc> ( (unsigned int) TIM2_CCMR2_Output ) </loc>
//      <o.2..2> OC3FE
//    </check>
//  </item>
//  


// ---------------------------  Field Item: TIM2_CCMR2_Output_CC3S  -------------------------------
// SVD Line: 26825

//  <item> SFDITEM_FIELD__TIM2_CCMR2_Output_CC3S
//    <name> CC3S </name>
//    <rw> 
//    <i> [Bits 1..0] RW (@ 0x4000001C) Capture/Compare 3  selection </i>
//    <edit> 
//      <loc> ( (unsigned char)((TIM2_CCMR2_Output >> 0) & 0x3), ((TIM2_CCMR2_Output = (TIM2_CCMR2_Output & ~(0x3UL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0x3) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ----------------------------  Register RTree: TIM2_CCMR2_Output  -------------------------------
// SVD Line: 26740

//  <rtree> SFDITEM_REG__TIM2_CCMR2_Output
//    <name> CCMR2_Output </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x4000001C) capture/compare mode register 2 (output  mode) </i>
//    <loc> ( (unsigned int)((TIM2_CCMR2_Output >> 0) & 0xFFFFFFFF), ((TIM2_CCMR2_Output = (TIM2_CCMR2_Output & ~(0x101FFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0x101FFFF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__TIM2_CCMR2_Output_OC4M_3 </item>
//    <item> SFDITEM_FIELD__TIM2_CCMR2_Output_OC3M_3 </item>
//    <item> SFDITEM_FIELD__TIM2_CCMR2_Output_OC4CE </item>
//    <item> SFDITEM_FIELD__TIM2_CCMR2_Output_OC4M </item>
//    <item> SFDITEM_FIELD__TIM2_CCMR2_Output_OC4PE </item>
//    <item> SFDITEM_FIELD__TIM2_CCMR2_Output_OC4FE </item>
//    <item> SFDITEM_FIELD__TIM2_CCMR2_Output_CC4S </item>
//    <item> SFDITEM_FIELD__TIM2_CCMR2_Output_OC3CE </item>
//    <item> SFDITEM_FIELD__TIM2_CCMR2_Output_OC3M </item>
//    <item> SFDITEM_FIELD__TIM2_CCMR2_Output_OC3PE </item>
//    <item> SFDITEM_FIELD__TIM2_CCMR2_Output_OC3FE </item>
//    <item> SFDITEM_FIELD__TIM2_CCMR2_Output_CC3S </item>
//  </rtree>
//  


// -------------------------  Register Item Address: TIM2_CCMR2_Input  ----------------------------
// SVD Line: 26834

unsigned int TIM2_CCMR2_Input __AT (0x4000001C);



// ----------------------------  Field Item: TIM2_CCMR2_Input_IC4F  -------------------------------
// SVD Line: 26845

//  <item> SFDITEM_FIELD__TIM2_CCMR2_Input_IC4F
//    <name> IC4F </name>
//    <rw> 
//    <i> [Bits 15..12] RW (@ 0x4000001C) Input capture 4 filter </i>
//    <edit> 
//      <loc> ( (unsigned char)((TIM2_CCMR2_Input >> 12) & 0xF), ((TIM2_CCMR2_Input = (TIM2_CCMR2_Input & ~(0xFUL << 12 )) | ((unsigned long)(Gui_u8:GuiVal & 0xF) << 12 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ---------------------------  Field Item: TIM2_CCMR2_Input_IC4PSC  ------------------------------
// SVD Line: 26851

//  <item> SFDITEM_FIELD__TIM2_CCMR2_Input_IC4PSC
//    <name> IC4PSC </name>
//    <rw> 
//    <i> [Bits 11..10] RW (@ 0x4000001C) Input capture 4 prescaler </i>
//    <edit> 
//      <loc> ( (unsigned char)((TIM2_CCMR2_Input >> 10) & 0x3), ((TIM2_CCMR2_Input = (TIM2_CCMR2_Input & ~(0x3UL << 10 )) | ((unsigned long)(Gui_u8:GuiVal & 0x3) << 10 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ----------------------------  Field Item: TIM2_CCMR2_Input_CC4S  -------------------------------
// SVD Line: 26857

//  <item> SFDITEM_FIELD__TIM2_CCMR2_Input_CC4S
//    <name> CC4S </name>
//    <rw> 
//    <i> [Bits 9..8] RW (@ 0x4000001C) Capture/Compare 4  selection </i>
//    <edit> 
//      <loc> ( (unsigned char)((TIM2_CCMR2_Input >> 8) & 0x3), ((TIM2_CCMR2_Input = (TIM2_CCMR2_Input & ~(0x3UL << 8 )) | ((unsigned long)(Gui_u8:GuiVal & 0x3) << 8 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ----------------------------  Field Item: TIM2_CCMR2_Input_IC3F  -------------------------------
// SVD Line: 26864

//  <item> SFDITEM_FIELD__TIM2_CCMR2_Input_IC3F
//    <name> IC3F </name>
//    <rw> 
//    <i> [Bits 7..4] RW (@ 0x4000001C) Input capture 3 filter </i>
//    <edit> 
//      <loc> ( (unsigned char)((TIM2_CCMR2_Input >> 4) & 0xF), ((TIM2_CCMR2_Input = (TIM2_CCMR2_Input & ~(0xFUL << 4 )) | ((unsigned long)(Gui_u8:GuiVal & 0xF) << 4 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ---------------------------  Field Item: TIM2_CCMR2_Input_IC3PSC  ------------------------------
// SVD Line: 26870

//  <item> SFDITEM_FIELD__TIM2_CCMR2_Input_IC3PSC
//    <name> IC3PSC </name>
//    <rw> 
//    <i> [Bits 3..2] RW (@ 0x4000001C) Input capture 3 prescaler </i>
//    <edit> 
//      <loc> ( (unsigned char)((TIM2_CCMR2_Input >> 2) & 0x3), ((TIM2_CCMR2_Input = (TIM2_CCMR2_Input & ~(0x3UL << 2 )) | ((unsigned long)(Gui_u8:GuiVal & 0x3) << 2 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ----------------------------  Field Item: TIM2_CCMR2_Input_CC3S  -------------------------------
// SVD Line: 26876

//  <item> SFDITEM_FIELD__TIM2_CCMR2_Input_CC3S
//    <name> CC3S </name>
//    <rw> 
//    <i> [Bits 1..0] RW (@ 0x4000001C) Capture/Compare 3  selection </i>
//    <edit> 
//      <loc> ( (unsigned char)((TIM2_CCMR2_Input >> 0) & 0x3), ((TIM2_CCMR2_Input = (TIM2_CCMR2_Input & ~(0x3UL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0x3) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ----------------------------  Register RTree: TIM2_CCMR2_Input  --------------------------------
// SVD Line: 26834

//  <rtree> SFDITEM_REG__TIM2_CCMR2_Input
//    <name> CCMR2_Input </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x4000001C) capture/compare mode register 2 (input  mode) </i>
//    <loc> ( (unsigned int)((TIM2_CCMR2_Input >> 0) & 0xFFFFFFFF), ((TIM2_CCMR2_Input = (TIM2_CCMR2_Input & ~(0xFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__TIM2_CCMR2_Input_IC4F </item>
//    <item> SFDITEM_FIELD__TIM2_CCMR2_Input_IC4PSC </item>
//    <item> SFDITEM_FIELD__TIM2_CCMR2_Input_CC4S </item>
//    <item> SFDITEM_FIELD__TIM2_CCMR2_Input_IC3F </item>
//    <item> SFDITEM_FIELD__TIM2_CCMR2_Input_IC3PSC </item>
//    <item> SFDITEM_FIELD__TIM2_CCMR2_Input_CC3S </item>
//  </rtree>
//  


// ----------------------------  Register Item Address: TIM2_CCER  --------------------------------
// SVD Line: 26885

unsigned int TIM2_CCER __AT (0x40000020);



// -------------------------------  Field Item: TIM2_CCER_CC4NP  ----------------------------------
// SVD Line: 26895

//  <item> SFDITEM_FIELD__TIM2_CCER_CC4NP
//    <name> CC4NP </name>
//    <rw> 
//    <i> [Bit 15] RW (@ 0x40000020) Capture/Compare 4 output  Polarity </i>
//    <check> 
//      <loc> ( (unsigned int) TIM2_CCER ) </loc>
//      <o.15..15> CC4NP
//    </check>
//  </item>
//  


// -------------------------------  Field Item: TIM2_CCER_CC4P  -----------------------------------
// SVD Line: 26902

//  <item> SFDITEM_FIELD__TIM2_CCER_CC4P
//    <name> CC4P </name>
//    <rw> 
//    <i> [Bit 13] RW (@ 0x40000020) Capture/Compare 3 output  Polarity </i>
//    <check> 
//      <loc> ( (unsigned int) TIM2_CCER ) </loc>
//      <o.13..13> CC4P
//    </check>
//  </item>
//  


// -------------------------------  Field Item: TIM2_CCER_CC4E  -----------------------------------
// SVD Line: 26909

//  <item> SFDITEM_FIELD__TIM2_CCER_CC4E
//    <name> CC4E </name>
//    <rw> 
//    <i> [Bit 12] RW (@ 0x40000020) Capture/Compare 4 output  enable </i>
//    <check> 
//      <loc> ( (unsigned int) TIM2_CCER ) </loc>
//      <o.12..12> CC4E
//    </check>
//  </item>
//  


// -------------------------------  Field Item: TIM2_CCER_CC3NP  ----------------------------------
// SVD Line: 26916

//  <item> SFDITEM_FIELD__TIM2_CCER_CC3NP
//    <name> CC3NP </name>
//    <rw> 
//    <i> [Bit 11] RW (@ 0x40000020) Capture/Compare 3 output  Polarity </i>
//    <check> 
//      <loc> ( (unsigned int) TIM2_CCER ) </loc>
//      <o.11..11> CC3NP
//    </check>
//  </item>
//  


// -------------------------------  Field Item: TIM2_CCER_CC3P  -----------------------------------
// SVD Line: 26923

//  <item> SFDITEM_FIELD__TIM2_CCER_CC3P
//    <name> CC3P </name>
//    <rw> 
//    <i> [Bit 9] RW (@ 0x40000020) Capture/Compare 3 output  Polarity </i>
//    <check> 
//      <loc> ( (unsigned int) TIM2_CCER ) </loc>
//      <o.9..9> CC3P
//    </check>
//  </item>
//  


// -------------------------------  Field Item: TIM2_CCER_CC3E  -----------------------------------
// SVD Line: 26930

//  <item> SFDITEM_FIELD__TIM2_CCER_CC3E
//    <name> CC3E </name>
//    <rw> 
//    <i> [Bit 8] RW (@ 0x40000020) Capture/Compare 3 output  enable </i>
//    <check> 
//      <loc> ( (unsigned int) TIM2_CCER ) </loc>
//      <o.8..8> CC3E
//    </check>
//  </item>
//  


// -------------------------------  Field Item: TIM2_CCER_CC2NP  ----------------------------------
// SVD Line: 26937

//  <item> SFDITEM_FIELD__TIM2_CCER_CC2NP
//    <name> CC2NP </name>
//    <rw> 
//    <i> [Bit 7] RW (@ 0x40000020) Capture/Compare 2 output  Polarity </i>
//    <check> 
//      <loc> ( (unsigned int) TIM2_CCER ) </loc>
//      <o.7..7> CC2NP
//    </check>
//  </item>
//  


// -------------------------------  Field Item: TIM2_CCER_CC2P  -----------------------------------
// SVD Line: 26944

//  <item> SFDITEM_FIELD__TIM2_CCER_CC2P
//    <name> CC2P </name>
//    <rw> 
//    <i> [Bit 5] RW (@ 0x40000020) Capture/Compare 2 output  Polarity </i>
//    <check> 
//      <loc> ( (unsigned int) TIM2_CCER ) </loc>
//      <o.5..5> CC2P
//    </check>
//  </item>
//  


// -------------------------------  Field Item: TIM2_CCER_CC2E  -----------------------------------
// SVD Line: 26951

//  <item> SFDITEM_FIELD__TIM2_CCER_CC2E
//    <name> CC2E </name>
//    <rw> 
//    <i> [Bit 4] RW (@ 0x40000020) Capture/Compare 2 output  enable </i>
//    <check> 
//      <loc> ( (unsigned int) TIM2_CCER ) </loc>
//      <o.4..4> CC2E
//    </check>
//  </item>
//  


// -------------------------------  Field Item: TIM2_CCER_CC1NP  ----------------------------------
// SVD Line: 26958

//  <item> SFDITEM_FIELD__TIM2_CCER_CC1NP
//    <name> CC1NP </name>
//    <rw> 
//    <i> [Bit 3] RW (@ 0x40000020) Capture/Compare 1 output  Polarity </i>
//    <check> 
//      <loc> ( (unsigned int) TIM2_CCER ) </loc>
//      <o.3..3> CC1NP
//    </check>
//  </item>
//  


// -------------------------------  Field Item: TIM2_CCER_CC1P  -----------------------------------
// SVD Line: 26965

//  <item> SFDITEM_FIELD__TIM2_CCER_CC1P
//    <name> CC1P </name>
//    <rw> 
//    <i> [Bit 1] RW (@ 0x40000020) Capture/Compare 1 output  Polarity </i>
//    <check> 
//      <loc> ( (unsigned int) TIM2_CCER ) </loc>
//      <o.1..1> CC1P
//    </check>
//  </item>
//  


// -------------------------------  Field Item: TIM2_CCER_CC1E  -----------------------------------
// SVD Line: 26972

//  <item> SFDITEM_FIELD__TIM2_CCER_CC1E
//    <name> CC1E </name>
//    <rw> 
//    <i> [Bit 0] RW (@ 0x40000020) Capture/Compare 1 output  enable </i>
//    <check> 
//      <loc> ( (unsigned int) TIM2_CCER ) </loc>
//      <o.0..0> CC1E
//    </check>
//  </item>
//  


// --------------------------------  Register RTree: TIM2_CCER  -----------------------------------
// SVD Line: 26885

//  <rtree> SFDITEM_REG__TIM2_CCER
//    <name> CCER </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x40000020) capture/compare enable  register </i>
//    <loc> ( (unsigned int)((TIM2_CCER >> 0) & 0xFFFFFFFF), ((TIM2_CCER = (TIM2_CCER & ~(0xBBBBUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xBBBB) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__TIM2_CCER_CC4NP </item>
//    <item> SFDITEM_FIELD__TIM2_CCER_CC4P </item>
//    <item> SFDITEM_FIELD__TIM2_CCER_CC4E </item>
//    <item> SFDITEM_FIELD__TIM2_CCER_CC3NP </item>
//    <item> SFDITEM_FIELD__TIM2_CCER_CC3P </item>
//    <item> SFDITEM_FIELD__TIM2_CCER_CC3E </item>
//    <item> SFDITEM_FIELD__TIM2_CCER_CC2NP </item>
//    <item> SFDITEM_FIELD__TIM2_CCER_CC2P </item>
//    <item> SFDITEM_FIELD__TIM2_CCER_CC2E </item>
//    <item> SFDITEM_FIELD__TIM2_CCER_CC1NP </item>
//    <item> SFDITEM_FIELD__TIM2_CCER_CC1P </item>
//    <item> SFDITEM_FIELD__TIM2_CCER_CC1E </item>
//  </rtree>
//  


// -----------------------------  Register Item Address: TIM2_CNT  --------------------------------
// SVD Line: 26981

unsigned int TIM2_CNT __AT (0x40000024);



// -------------------------------  Field Item: TIM2_CNT_CNT_H  -----------------------------------
// SVD Line: 26990

//  <item> SFDITEM_FIELD__TIM2_CNT_CNT_H
//    <name> CNT_H </name>
//    <rw> 
//    <i> [Bits 31..16] RW (@ 0x40000024) High counter value (TIM2  only) </i>
//    <edit> 
//      <loc> ( (unsigned short)((TIM2_CNT >> 16) & 0xFFFF), ((TIM2_CNT = (TIM2_CNT & ~(0xFFFFUL << 16 )) | ((unsigned long)(Gui_u16:GuiVal & 0xFFFF) << 16 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -------------------------------  Field Item: TIM2_CNT_CNT_L  -----------------------------------
// SVD Line: 26997

//  <item> SFDITEM_FIELD__TIM2_CNT_CNT_L
//    <name> CNT_L </name>
//    <rw> 
//    <i> [Bits 15..0] RW (@ 0x40000024) Low counter value </i>
//    <edit> 
//      <loc> ( (unsigned short)((TIM2_CNT >> 0) & 0xFFFF), ((TIM2_CNT = (TIM2_CNT & ~(0xFFFFUL << 0 )) | ((unsigned long)(Gui_u16:GuiVal & 0xFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// --------------------------------  Register RTree: TIM2_CNT  ------------------------------------
// SVD Line: 26981

//  <rtree> SFDITEM_REG__TIM2_CNT
//    <name> CNT </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x40000024) counter </i>
//    <loc> ( (unsigned int)((TIM2_CNT >> 0) & 0xFFFFFFFF), ((TIM2_CNT = (TIM2_CNT & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__TIM2_CNT_CNT_H </item>
//    <item> SFDITEM_FIELD__TIM2_CNT_CNT_L </item>
//  </rtree>
//  


// -----------------------------  Register Item Address: TIM2_PSC  --------------------------------
// SVD Line: 27005

unsigned int TIM2_PSC __AT (0x40000028);



// --------------------------------  Field Item: TIM2_PSC_PSC  ------------------------------------
// SVD Line: 27014

//  <item> SFDITEM_FIELD__TIM2_PSC_PSC
//    <name> PSC </name>
//    <rw> 
//    <i> [Bits 15..0] RW (@ 0x40000028) Prescaler value </i>
//    <edit> 
//      <loc> ( (unsigned short)((TIM2_PSC >> 0) & 0xFFFF), ((TIM2_PSC = (TIM2_PSC & ~(0xFFFFUL << 0 )) | ((unsigned long)(Gui_u16:GuiVal & 0xFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// --------------------------------  Register RTree: TIM2_PSC  ------------------------------------
// SVD Line: 27005

//  <rtree> SFDITEM_REG__TIM2_PSC
//    <name> PSC </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x40000028) prescaler </i>
//    <loc> ( (unsigned int)((TIM2_PSC >> 0) & 0xFFFFFFFF), ((TIM2_PSC = (TIM2_PSC & ~(0xFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__TIM2_PSC_PSC </item>
//  </rtree>
//  


// -----------------------------  Register Item Address: TIM2_ARR  --------------------------------
// SVD Line: 27022

unsigned int TIM2_ARR __AT (0x4000002C);



// -------------------------------  Field Item: TIM2_ARR_ARR_H  -----------------------------------
// SVD Line: 27031

//  <item> SFDITEM_FIELD__TIM2_ARR_ARR_H
//    <name> ARR_H </name>
//    <rw> 
//    <i> [Bits 31..16] RW (@ 0x4000002C) High Auto-reload value (TIM2  only) </i>
//    <edit> 
//      <loc> ( (unsigned short)((TIM2_ARR >> 16) & 0xFFFF), ((TIM2_ARR = (TIM2_ARR & ~(0xFFFFUL << 16 )) | ((unsigned long)(Gui_u16:GuiVal & 0xFFFF) << 16 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -------------------------------  Field Item: TIM2_ARR_ARR_L  -----------------------------------
// SVD Line: 27038

//  <item> SFDITEM_FIELD__TIM2_ARR_ARR_L
//    <name> ARR_L </name>
//    <rw> 
//    <i> [Bits 15..0] RW (@ 0x4000002C) Low Auto-reload value </i>
//    <edit> 
//      <loc> ( (unsigned short)((TIM2_ARR >> 0) & 0xFFFF), ((TIM2_ARR = (TIM2_ARR & ~(0xFFFFUL << 0 )) | ((unsigned long)(Gui_u16:GuiVal & 0xFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// --------------------------------  Register RTree: TIM2_ARR  ------------------------------------
// SVD Line: 27022

//  <rtree> SFDITEM_REG__TIM2_ARR
//    <name> ARR </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x4000002C) auto-reload register </i>
//    <loc> ( (unsigned int)((TIM2_ARR >> 0) & 0xFFFFFFFF), ((TIM2_ARR = (TIM2_ARR & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__TIM2_ARR_ARR_H </item>
//    <item> SFDITEM_FIELD__TIM2_ARR_ARR_L </item>
//  </rtree>
//  


// ----------------------------  Register Item Address: TIM2_CCR1  --------------------------------
// SVD Line: 27046

unsigned int TIM2_CCR1 __AT (0x40000034);



// ------------------------------  Field Item: TIM2_CCR1_CCR1_H  ----------------------------------
// SVD Line: 27055

//  <item> SFDITEM_FIELD__TIM2_CCR1_CCR1_H
//    <name> CCR1_H </name>
//    <rw> 
//    <i> [Bits 31..16] RW (@ 0x40000034) High Capture/Compare 1 value (TIM2  only) </i>
//    <edit> 
//      <loc> ( (unsigned short)((TIM2_CCR1 >> 16) & 0xFFFF), ((TIM2_CCR1 = (TIM2_CCR1 & ~(0xFFFFUL << 16 )) | ((unsigned long)(Gui_u16:GuiVal & 0xFFFF) << 16 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ------------------------------  Field Item: TIM2_CCR1_CCR1_L  ----------------------------------
// SVD Line: 27062

//  <item> SFDITEM_FIELD__TIM2_CCR1_CCR1_L
//    <name> CCR1_L </name>
//    <rw> 
//    <i> [Bits 15..0] RW (@ 0x40000034) Low Capture/Compare 1  value </i>
//    <edit> 
//      <loc> ( (unsigned short)((TIM2_CCR1 >> 0) & 0xFFFF), ((TIM2_CCR1 = (TIM2_CCR1 & ~(0xFFFFUL << 0 )) | ((unsigned long)(Gui_u16:GuiVal & 0xFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// --------------------------------  Register RTree: TIM2_CCR1  -----------------------------------
// SVD Line: 27046

//  <rtree> SFDITEM_REG__TIM2_CCR1
//    <name> CCR1 </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x40000034) capture/compare register 1 </i>
//    <loc> ( (unsigned int)((TIM2_CCR1 >> 0) & 0xFFFFFFFF), ((TIM2_CCR1 = (TIM2_CCR1 & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__TIM2_CCR1_CCR1_H </item>
//    <item> SFDITEM_FIELD__TIM2_CCR1_CCR1_L </item>
//  </rtree>
//  


// ----------------------------  Register Item Address: TIM2_CCR2  --------------------------------
// SVD Line: 27071

unsigned int TIM2_CCR2 __AT (0x40000038);



// ------------------------------  Field Item: TIM2_CCR2_CCR2_H  ----------------------------------
// SVD Line: 27080

//  <item> SFDITEM_FIELD__TIM2_CCR2_CCR2_H
//    <name> CCR2_H </name>
//    <rw> 
//    <i> [Bits 31..16] RW (@ 0x40000038) High Capture/Compare 2 value (TIM2  only) </i>
//    <edit> 
//      <loc> ( (unsigned short)((TIM2_CCR2 >> 16) & 0xFFFF), ((TIM2_CCR2 = (TIM2_CCR2 & ~(0xFFFFUL << 16 )) | ((unsigned long)(Gui_u16:GuiVal & 0xFFFF) << 16 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ------------------------------  Field Item: TIM2_CCR2_CCR2_L  ----------------------------------
// SVD Line: 27087

//  <item> SFDITEM_FIELD__TIM2_CCR2_CCR2_L
//    <name> CCR2_L </name>
//    <rw> 
//    <i> [Bits 15..0] RW (@ 0x40000038) Low Capture/Compare 2  value </i>
//    <edit> 
//      <loc> ( (unsigned short)((TIM2_CCR2 >> 0) & 0xFFFF), ((TIM2_CCR2 = (TIM2_CCR2 & ~(0xFFFFUL << 0 )) | ((unsigned long)(Gui_u16:GuiVal & 0xFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// --------------------------------  Register RTree: TIM2_CCR2  -----------------------------------
// SVD Line: 27071

//  <rtree> SFDITEM_REG__TIM2_CCR2
//    <name> CCR2 </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x40000038) capture/compare register 2 </i>
//    <loc> ( (unsigned int)((TIM2_CCR2 >> 0) & 0xFFFFFFFF), ((TIM2_CCR2 = (TIM2_CCR2 & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__TIM2_CCR2_CCR2_H </item>
//    <item> SFDITEM_FIELD__TIM2_CCR2_CCR2_L </item>
//  </rtree>
//  


// ----------------------------  Register Item Address: TIM2_CCR3  --------------------------------
// SVD Line: 27096

unsigned int TIM2_CCR3 __AT (0x4000003C);



// ------------------------------  Field Item: TIM2_CCR3_CCR3_H  ----------------------------------
// SVD Line: 27105

//  <item> SFDITEM_FIELD__TIM2_CCR3_CCR3_H
//    <name> CCR3_H </name>
//    <rw> 
//    <i> [Bits 31..16] RW (@ 0x4000003C) High Capture/Compare value (TIM2  only) </i>
//    <edit> 
//      <loc> ( (unsigned short)((TIM2_CCR3 >> 16) & 0xFFFF), ((TIM2_CCR3 = (TIM2_CCR3 & ~(0xFFFFUL << 16 )) | ((unsigned long)(Gui_u16:GuiVal & 0xFFFF) << 16 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ------------------------------  Field Item: TIM2_CCR3_CCR3_L  ----------------------------------
// SVD Line: 27112

//  <item> SFDITEM_FIELD__TIM2_CCR3_CCR3_L
//    <name> CCR3_L </name>
//    <rw> 
//    <i> [Bits 15..0] RW (@ 0x4000003C) Low Capture/Compare value </i>
//    <edit> 
//      <loc> ( (unsigned short)((TIM2_CCR3 >> 0) & 0xFFFF), ((TIM2_CCR3 = (TIM2_CCR3 & ~(0xFFFFUL << 0 )) | ((unsigned long)(Gui_u16:GuiVal & 0xFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// --------------------------------  Register RTree: TIM2_CCR3  -----------------------------------
// SVD Line: 27096

//  <rtree> SFDITEM_REG__TIM2_CCR3
//    <name> CCR3 </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x4000003C) capture/compare register 3 </i>
//    <loc> ( (unsigned int)((TIM2_CCR3 >> 0) & 0xFFFFFFFF), ((TIM2_CCR3 = (TIM2_CCR3 & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__TIM2_CCR3_CCR3_H </item>
//    <item> SFDITEM_FIELD__TIM2_CCR3_CCR3_L </item>
//  </rtree>
//  


// ----------------------------  Register Item Address: TIM2_CCR4  --------------------------------
// SVD Line: 27120

unsigned int TIM2_CCR4 __AT (0x40000040);



// ------------------------------  Field Item: TIM2_CCR4_CCR4_H  ----------------------------------
// SVD Line: 27129

//  <item> SFDITEM_FIELD__TIM2_CCR4_CCR4_H
//    <name> CCR4_H </name>
//    <rw> 
//    <i> [Bits 31..16] RW (@ 0x40000040) High Capture/Compare value (TIM2  only) </i>
//    <edit> 
//      <loc> ( (unsigned short)((TIM2_CCR4 >> 16) & 0xFFFF), ((TIM2_CCR4 = (TIM2_CCR4 & ~(0xFFFFUL << 16 )) | ((unsigned long)(Gui_u16:GuiVal & 0xFFFF) << 16 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ------------------------------  Field Item: TIM2_CCR4_CCR4_L  ----------------------------------
// SVD Line: 27136

//  <item> SFDITEM_FIELD__TIM2_CCR4_CCR4_L
//    <name> CCR4_L </name>
//    <rw> 
//    <i> [Bits 15..0] RW (@ 0x40000040) Low Capture/Compare value </i>
//    <edit> 
//      <loc> ( (unsigned short)((TIM2_CCR4 >> 0) & 0xFFFF), ((TIM2_CCR4 = (TIM2_CCR4 & ~(0xFFFFUL << 0 )) | ((unsigned long)(Gui_u16:GuiVal & 0xFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// --------------------------------  Register RTree: TIM2_CCR4  -----------------------------------
// SVD Line: 27120

//  <rtree> SFDITEM_REG__TIM2_CCR4
//    <name> CCR4 </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x40000040) capture/compare register 4 </i>
//    <loc> ( (unsigned int)((TIM2_CCR4 >> 0) & 0xFFFFFFFF), ((TIM2_CCR4 = (TIM2_CCR4 & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__TIM2_CCR4_CCR4_H </item>
//    <item> SFDITEM_FIELD__TIM2_CCR4_CCR4_L </item>
//  </rtree>
//  


// -----------------------------  Register Item Address: TIM2_DCR  --------------------------------
// SVD Line: 27144

unsigned int TIM2_DCR __AT (0x40000048);



// --------------------------------  Field Item: TIM2_DCR_DBL  ------------------------------------
// SVD Line: 27153

//  <item> SFDITEM_FIELD__TIM2_DCR_DBL
//    <name> DBL </name>
//    <rw> 
//    <i> [Bits 12..8] RW (@ 0x40000048) DMA burst length </i>
//    <edit> 
//      <loc> ( (unsigned char)((TIM2_DCR >> 8) & 0x1F), ((TIM2_DCR = (TIM2_DCR & ~(0x1FUL << 8 )) | ((unsigned long)(Gui_u8:GuiVal & 0x1F) << 8 ) ) )) </loc>
//    </edit>
//  </item>
//  


// --------------------------------  Field Item: TIM2_DCR_DBA  ------------------------------------
// SVD Line: 27159

//  <item> SFDITEM_FIELD__TIM2_DCR_DBA
//    <name> DBA </name>
//    <rw> 
//    <i> [Bits 4..0] RW (@ 0x40000048) DMA base address </i>
//    <edit> 
//      <loc> ( (unsigned char)((TIM2_DCR >> 0) & 0x1F), ((TIM2_DCR = (TIM2_DCR & ~(0x1FUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0x1F) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// --------------------------------  Register RTree: TIM2_DCR  ------------------------------------
// SVD Line: 27144

//  <rtree> SFDITEM_REG__TIM2_DCR
//    <name> DCR </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x40000048) DMA control register </i>
//    <loc> ( (unsigned int)((TIM2_DCR >> 0) & 0xFFFFFFFF), ((TIM2_DCR = (TIM2_DCR & ~(0x1F1FUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0x1F1F) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__TIM2_DCR_DBL </item>
//    <item> SFDITEM_FIELD__TIM2_DCR_DBA </item>
//  </rtree>
//  


// ----------------------------  Register Item Address: TIM2_DMAR  --------------------------------
// SVD Line: 27167

unsigned int TIM2_DMAR __AT (0x4000004C);



// -------------------------------  Field Item: TIM2_DMAR_DMAB  -----------------------------------
// SVD Line: 27176

//  <item> SFDITEM_FIELD__TIM2_DMAR_DMAB
//    <name> DMAB </name>
//    <rw> 
//    <i> [Bits 15..0] RW (@ 0x4000004C) DMA register for burst  accesses </i>
//    <edit> 
//      <loc> ( (unsigned short)((TIM2_DMAR >> 0) & 0xFFFF), ((TIM2_DMAR = (TIM2_DMAR & ~(0xFFFFUL << 0 )) | ((unsigned long)(Gui_u16:GuiVal & 0xFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// --------------------------------  Register RTree: TIM2_DMAR  -----------------------------------
// SVD Line: 27167

//  <rtree> SFDITEM_REG__TIM2_DMAR
//    <name> DMAR </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x4000004C) DMA address for full transfer </i>
//    <loc> ( (unsigned int)((TIM2_DMAR >> 0) & 0xFFFFFFFF), ((TIM2_DMAR = (TIM2_DMAR & ~(0xFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__TIM2_DMAR_DMAB </item>
//  </rtree>
//  


// -----------------------------  Register Item Address: TIM2_OR1  --------------------------------
// SVD Line: 27185

unsigned int TIM2_OR1 __AT (0x40000050);



// -----------------------------  Field Item: TIM2_OR1_IOCREF_CLR  --------------------------------
// SVD Line: 27194

//  <item> SFDITEM_FIELD__TIM2_OR1_IOCREF_CLR
//    <name> IOCREF_CLR </name>
//    <rw> 
//    <i> [Bit 0] RW (@ 0x40000050) IOCREF_CLR </i>
//    <check> 
//      <loc> ( (unsigned int) TIM2_OR1 ) </loc>
//      <o.0..0> IOCREF_CLR
//    </check>
//  </item>
//  


// --------------------------------  Register RTree: TIM2_OR1  ------------------------------------
// SVD Line: 27185

//  <rtree> SFDITEM_REG__TIM2_OR1
//    <name> OR1 </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x40000050) TIM option register </i>
//    <loc> ( (unsigned int)((TIM2_OR1 >> 0) & 0xFFFFFFFF), ((TIM2_OR1 = (TIM2_OR1 & ~(0x1UL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0x1) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__TIM2_OR1_IOCREF_CLR </item>
//  </rtree>
//  


// -----------------------------  Register Item Address: TIM2_AF1  --------------------------------
// SVD Line: 27202

unsigned int TIM2_AF1 __AT (0x40000060);



// -------------------------------  Field Item: TIM2_AF1_ETRSEL  ----------------------------------
// SVD Line: 27212

//  <item> SFDITEM_FIELD__TIM2_AF1_ETRSEL
//    <name> ETRSEL </name>
//    <rw> 
//    <i> [Bits 17..14] RW (@ 0x40000060) External trigger source  selection </i>
//    <edit> 
//      <loc> ( (unsigned char)((TIM2_AF1 >> 14) & 0xF), ((TIM2_AF1 = (TIM2_AF1 & ~(0xFUL << 14 )) | ((unsigned long)(Gui_u8:GuiVal & 0xF) << 14 ) ) )) </loc>
//    </edit>
//  </item>
//  


// --------------------------------  Register RTree: TIM2_AF1  ------------------------------------
// SVD Line: 27202

//  <rtree> SFDITEM_REG__TIM2_AF1
//    <name> AF1 </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x40000060) TIM alternate function option register  1 </i>
//    <loc> ( (unsigned int)((TIM2_AF1 >> 0) & 0xFFFFFFFF), ((TIM2_AF1 = (TIM2_AF1 & ~(0x3C000UL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0x3C000) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__TIM2_AF1_ETRSEL </item>
//  </rtree>
//  


// ----------------------------  Register Item Address: TIM2_TISEL  -------------------------------
// SVD Line: 27221

unsigned int TIM2_TISEL __AT (0x40000068);



// ------------------------------  Field Item: TIM2_TISEL_TI1SEL  ---------------------------------
// SVD Line: 27231

//  <item> SFDITEM_FIELD__TIM2_TISEL_TI1SEL
//    <name> TI1SEL </name>
//    <rw> 
//    <i> [Bits 3..0] RW (@ 0x40000068) TI1SEL </i>
//    <edit> 
//      <loc> ( (unsigned char)((TIM2_TISEL >> 0) & 0xF), ((TIM2_TISEL = (TIM2_TISEL & ~(0xFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ------------------------------  Field Item: TIM2_TISEL_TI2SEL  ---------------------------------
// SVD Line: 27237

//  <item> SFDITEM_FIELD__TIM2_TISEL_TI2SEL
//    <name> TI2SEL </name>
//    <rw> 
//    <i> [Bits 11..8] RW (@ 0x40000068) TI2SEL </i>
//    <edit> 
//      <loc> ( (unsigned char)((TIM2_TISEL >> 8) & 0xF), ((TIM2_TISEL = (TIM2_TISEL & ~(0xFUL << 8 )) | ((unsigned long)(Gui_u8:GuiVal & 0xF) << 8 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -------------------------------  Register RTree: TIM2_TISEL  -----------------------------------
// SVD Line: 27221

//  <rtree> SFDITEM_REG__TIM2_TISEL
//    <name> TISEL </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x40000068) TIM alternate function option register  1 </i>
//    <loc> ( (unsigned int)((TIM2_TISEL >> 0) & 0xFFFFFFFF), ((TIM2_TISEL = (TIM2_TISEL & ~(0xF0FUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xF0F) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__TIM2_TISEL_TI1SEL </item>
//    <item> SFDITEM_FIELD__TIM2_TISEL_TI2SEL </item>
//  </rtree>
//  


// ----------------------------------  Peripheral View: TIM2  -------------------------------------
// SVD Line: 26185

//  <view> TIM2
//    <name> TIM2 </name>
//    <item> SFDITEM_REG__TIM2_CR1 </item>
//    <item> SFDITEM_REG__TIM2_CR2 </item>
//    <item> SFDITEM_REG__TIM2_SMCR </item>
//    <item> SFDITEM_REG__TIM2_DIER </item>
//    <item> SFDITEM_REG__TIM2_SR </item>
//    <item> SFDITEM_REG__TIM2_EGR </item>
//    <item> SFDITEM_REG__TIM2_CCMR1_Output </item>
//    <item> SFDITEM_REG__TIM2_CCMR1_Input </item>
//    <item> SFDITEM_REG__TIM2_CCMR2_Output </item>
//    <item> SFDITEM_REG__TIM2_CCMR2_Input </item>
//    <item> SFDITEM_REG__TIM2_CCER </item>
//    <item> SFDITEM_REG__TIM2_CNT </item>
//    <item> SFDITEM_REG__TIM2_PSC </item>
//    <item> SFDITEM_REG__TIM2_ARR </item>
//    <item> SFDITEM_REG__TIM2_CCR1 </item>
//    <item> SFDITEM_REG__TIM2_CCR2 </item>
//    <item> SFDITEM_REG__TIM2_CCR3 </item>
//    <item> SFDITEM_REG__TIM2_CCR4 </item>
//    <item> SFDITEM_REG__TIM2_DCR </item>
//    <item> SFDITEM_REG__TIM2_DMAR </item>
//    <item> SFDITEM_REG__TIM2_OR1 </item>
//    <item> SFDITEM_REG__TIM2_AF1 </item>
//    <item> SFDITEM_REG__TIM2_TISEL </item>
//  </view>
//  


// -----------------------------  Register Item Address: TIM3_CR1  --------------------------------
// SVD Line: 26206

unsigned int TIM3_CR1 __AT (0x40000400);



// ------------------------------  Field Item: TIM3_CR1_UIFREMAP  ---------------------------------
// SVD Line: 26215

//  <item> SFDITEM_FIELD__TIM3_CR1_UIFREMAP
//    <name> UIFREMAP </name>
//    <rw> 
//    <i> [Bit 11] RW (@ 0x40000400) UIF status bit remapping </i>
//    <check> 
//      <loc> ( (unsigned int) TIM3_CR1 ) </loc>
//      <o.11..11> UIFREMAP
//    </check>
//  </item>
//  


// --------------------------------  Field Item: TIM3_CR1_CKD  ------------------------------------
// SVD Line: 26221

//  <item> SFDITEM_FIELD__TIM3_CR1_CKD
//    <name> CKD </name>
//    <rw> 
//    <i> [Bits 9..8] RW (@ 0x40000400) Clock division </i>
//    <edit> 
//      <loc> ( (unsigned char)((TIM3_CR1 >> 8) & 0x3), ((TIM3_CR1 = (TIM3_CR1 & ~(0x3UL << 8 )) | ((unsigned long)(Gui_u8:GuiVal & 0x3) << 8 ) ) )) </loc>
//    </edit>
//  </item>
//  


// --------------------------------  Field Item: TIM3_CR1_ARPE  -----------------------------------
// SVD Line: 26227

//  <item> SFDITEM_FIELD__TIM3_CR1_ARPE
//    <name> ARPE </name>
//    <rw> 
//    <i> [Bit 7] RW (@ 0x40000400) Auto-reload preload enable </i>
//    <check> 
//      <loc> ( (unsigned int) TIM3_CR1 ) </loc>
//      <o.7..7> ARPE
//    </check>
//  </item>
//  


// --------------------------------  Field Item: TIM3_CR1_CMS  ------------------------------------
// SVD Line: 26233

//  <item> SFDITEM_FIELD__TIM3_CR1_CMS
//    <name> CMS </name>
//    <rw> 
//    <i> [Bits 6..5] RW (@ 0x40000400) Center-aligned mode  selection </i>
//    <edit> 
//      <loc> ( (unsigned char)((TIM3_CR1 >> 5) & 0x3), ((TIM3_CR1 = (TIM3_CR1 & ~(0x3UL << 5 )) | ((unsigned long)(Gui_u8:GuiVal & 0x3) << 5 ) ) )) </loc>
//    </edit>
//  </item>
//  


// --------------------------------  Field Item: TIM3_CR1_DIR  ------------------------------------
// SVD Line: 26240

//  <item> SFDITEM_FIELD__TIM3_CR1_DIR
//    <name> DIR </name>
//    <rw> 
//    <i> [Bit 4] RW (@ 0x40000400) Direction </i>
//    <check> 
//      <loc> ( (unsigned int) TIM3_CR1 ) </loc>
//      <o.4..4> DIR
//    </check>
//  </item>
//  


// --------------------------------  Field Item: TIM3_CR1_OPM  ------------------------------------
// SVD Line: 26246

//  <item> SFDITEM_FIELD__TIM3_CR1_OPM
//    <name> OPM </name>
//    <rw> 
//    <i> [Bit 3] RW (@ 0x40000400) One-pulse mode </i>
//    <check> 
//      <loc> ( (unsigned int) TIM3_CR1 ) </loc>
//      <o.3..3> OPM
//    </check>
//  </item>
//  


// --------------------------------  Field Item: TIM3_CR1_URS  ------------------------------------
// SVD Line: 26252

//  <item> SFDITEM_FIELD__TIM3_CR1_URS
//    <name> URS </name>
//    <rw> 
//    <i> [Bit 2] RW (@ 0x40000400) Update request source </i>
//    <check> 
//      <loc> ( (unsigned int) TIM3_CR1 ) </loc>
//      <o.2..2> URS
//    </check>
//  </item>
//  


// --------------------------------  Field Item: TIM3_CR1_UDIS  -----------------------------------
// SVD Line: 26258

//  <item> SFDITEM_FIELD__TIM3_CR1_UDIS
//    <name> UDIS </name>
//    <rw> 
//    <i> [Bit 1] RW (@ 0x40000400) Update disable </i>
//    <check> 
//      <loc> ( (unsigned int) TIM3_CR1 ) </loc>
//      <o.1..1> UDIS
//    </check>
//  </item>
//  


// --------------------------------  Field Item: TIM3_CR1_CEN  ------------------------------------
// SVD Line: 26264

//  <item> SFDITEM_FIELD__TIM3_CR1_CEN
//    <name> CEN </name>
//    <rw> 
//    <i> [Bit 0] RW (@ 0x40000400) Counter enable </i>
//    <check> 
//      <loc> ( (unsigned int) TIM3_CR1 ) </loc>
//      <o.0..0> CEN
//    </check>
//  </item>
//  


// --------------------------------  Register RTree: TIM3_CR1  ------------------------------------
// SVD Line: 26206

//  <rtree> SFDITEM_REG__TIM3_CR1
//    <name> CR1 </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x40000400) control register 1 </i>
//    <loc> ( (unsigned int)((TIM3_CR1 >> 0) & 0xFFFFFFFF), ((TIM3_CR1 = (TIM3_CR1 & ~(0xBFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xBFF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__TIM3_CR1_UIFREMAP </item>
//    <item> SFDITEM_FIELD__TIM3_CR1_CKD </item>
//    <item> SFDITEM_FIELD__TIM3_CR1_ARPE </item>
//    <item> SFDITEM_FIELD__TIM3_CR1_CMS </item>
//    <item> SFDITEM_FIELD__TIM3_CR1_DIR </item>
//    <item> SFDITEM_FIELD__TIM3_CR1_OPM </item>
//    <item> SFDITEM_FIELD__TIM3_CR1_URS </item>
//    <item> SFDITEM_FIELD__TIM3_CR1_UDIS </item>
//    <item> SFDITEM_FIELD__TIM3_CR1_CEN </item>
//  </rtree>
//  


// -----------------------------  Register Item Address: TIM3_CR2  --------------------------------
// SVD Line: 26272

unsigned int TIM3_CR2 __AT (0x40000404);



// --------------------------------  Field Item: TIM3_CR2_TI1S  -----------------------------------
// SVD Line: 26281

//  <item> SFDITEM_FIELD__TIM3_CR2_TI1S
//    <name> TI1S </name>
//    <rw> 
//    <i> [Bit 7] RW (@ 0x40000404) TI1 selection </i>
//    <check> 
//      <loc> ( (unsigned int) TIM3_CR2 ) </loc>
//      <o.7..7> TI1S
//    </check>
//  </item>
//  


// --------------------------------  Field Item: TIM3_CR2_MMS  ------------------------------------
// SVD Line: 26287

//  <item> SFDITEM_FIELD__TIM3_CR2_MMS
//    <name> MMS </name>
//    <rw> 
//    <i> [Bits 6..4] RW (@ 0x40000404) Master mode selection </i>
//    <edit> 
//      <loc> ( (unsigned char)((TIM3_CR2 >> 4) & 0x7), ((TIM3_CR2 = (TIM3_CR2 & ~(0x7UL << 4 )) | ((unsigned long)(Gui_u8:GuiVal & 0x7) << 4 ) ) )) </loc>
//    </edit>
//  </item>
//  


// --------------------------------  Field Item: TIM3_CR2_CCDS  -----------------------------------
// SVD Line: 26293

//  <item> SFDITEM_FIELD__TIM3_CR2_CCDS
//    <name> CCDS </name>
//    <rw> 
//    <i> [Bit 3] RW (@ 0x40000404) Capture/compare DMA  selection </i>
//    <check> 
//      <loc> ( (unsigned int) TIM3_CR2 ) </loc>
//      <o.3..3> CCDS
//    </check>
//  </item>
//  


// --------------------------------  Register RTree: TIM3_CR2  ------------------------------------
// SVD Line: 26272

//  <rtree> SFDITEM_REG__TIM3_CR2
//    <name> CR2 </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x40000404) control register 2 </i>
//    <loc> ( (unsigned int)((TIM3_CR2 >> 0) & 0xFFFFFFFF), ((TIM3_CR2 = (TIM3_CR2 & ~(0xF8UL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xF8) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__TIM3_CR2_TI1S </item>
//    <item> SFDITEM_FIELD__TIM3_CR2_MMS </item>
//    <item> SFDITEM_FIELD__TIM3_CR2_CCDS </item>
//  </rtree>
//  


// ----------------------------  Register Item Address: TIM3_SMCR  --------------------------------
// SVD Line: 26302

unsigned int TIM3_SMCR __AT (0x40000408);



// ------------------------------  Field Item: TIM3_SMCR_TS_4_3  ----------------------------------
// SVD Line: 26311

//  <item> SFDITEM_FIELD__TIM3_SMCR_TS_4_3
//    <name> TS_4_3 </name>
//    <rw> 
//    <i> [Bits 21..20] RW (@ 0x40000408) Trigger selection </i>
//    <edit> 
//      <loc> ( (unsigned char)((TIM3_SMCR >> 20) & 0x3), ((TIM3_SMCR = (TIM3_SMCR & ~(0x3UL << 20 )) | ((unsigned long)(Gui_u8:GuiVal & 0x3) << 20 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -------------------------------  Field Item: TIM3_SMCR_SMS_3  ----------------------------------
// SVD Line: 26317

//  <item> SFDITEM_FIELD__TIM3_SMCR_SMS_3
//    <name> SMS_3 </name>
//    <rw> 
//    <i> [Bit 16] RW (@ 0x40000408) Slave mode selection - bit  3 </i>
//    <check> 
//      <loc> ( (unsigned int) TIM3_SMCR ) </loc>
//      <o.16..16> SMS_3
//    </check>
//  </item>
//  


// --------------------------------  Field Item: TIM3_SMCR_ETP  -----------------------------------
// SVD Line: 26324

//  <item> SFDITEM_FIELD__TIM3_SMCR_ETP
//    <name> ETP </name>
//    <rw> 
//    <i> [Bit 15] RW (@ 0x40000408) External trigger polarity </i>
//    <check> 
//      <loc> ( (unsigned int) TIM3_SMCR ) </loc>
//      <o.15..15> ETP
//    </check>
//  </item>
//  


// --------------------------------  Field Item: TIM3_SMCR_ECE  -----------------------------------
// SVD Line: 26330

//  <item> SFDITEM_FIELD__TIM3_SMCR_ECE
//    <name> ECE </name>
//    <rw> 
//    <i> [Bit 14] RW (@ 0x40000408) External clock enable </i>
//    <check> 
//      <loc> ( (unsigned int) TIM3_SMCR ) </loc>
//      <o.14..14> ECE
//    </check>
//  </item>
//  


// -------------------------------  Field Item: TIM3_SMCR_ETPS  -----------------------------------
// SVD Line: 26336

//  <item> SFDITEM_FIELD__TIM3_SMCR_ETPS
//    <name> ETPS </name>
//    <rw> 
//    <i> [Bits 13..12] RW (@ 0x40000408) External trigger prescaler </i>
//    <edit> 
//      <loc> ( (unsigned char)((TIM3_SMCR >> 12) & 0x3), ((TIM3_SMCR = (TIM3_SMCR & ~(0x3UL << 12 )) | ((unsigned long)(Gui_u8:GuiVal & 0x3) << 12 ) ) )) </loc>
//    </edit>
//  </item>
//  


// --------------------------------  Field Item: TIM3_SMCR_ETF  -----------------------------------
// SVD Line: 26342

//  <item> SFDITEM_FIELD__TIM3_SMCR_ETF
//    <name> ETF </name>
//    <rw> 
//    <i> [Bits 11..8] RW (@ 0x40000408) External trigger filter </i>
//    <edit> 
//      <loc> ( (unsigned char)((TIM3_SMCR >> 8) & 0xF), ((TIM3_SMCR = (TIM3_SMCR & ~(0xFUL << 8 )) | ((unsigned long)(Gui_u8:GuiVal & 0xF) << 8 ) ) )) </loc>
//    </edit>
//  </item>
//  


// --------------------------------  Field Item: TIM3_SMCR_MSM  -----------------------------------
// SVD Line: 26348

//  <item> SFDITEM_FIELD__TIM3_SMCR_MSM
//    <name> MSM </name>
//    <rw> 
//    <i> [Bit 7] RW (@ 0x40000408) Master/Slave mode </i>
//    <check> 
//      <loc> ( (unsigned int) TIM3_SMCR ) </loc>
//      <o.7..7> MSM
//    </check>
//  </item>
//  


// --------------------------------  Field Item: TIM3_SMCR_TS  ------------------------------------
// SVD Line: 26354

//  <item> SFDITEM_FIELD__TIM3_SMCR_TS
//    <name> TS </name>
//    <rw> 
//    <i> [Bits 6..4] RW (@ 0x40000408) Trigger selection </i>
//    <edit> 
//      <loc> ( (unsigned char)((TIM3_SMCR >> 4) & 0x7), ((TIM3_SMCR = (TIM3_SMCR & ~(0x7UL << 4 )) | ((unsigned long)(Gui_u8:GuiVal & 0x7) << 4 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -------------------------------  Field Item: TIM3_SMCR_OCCS  -----------------------------------
// SVD Line: 26360

//  <item> SFDITEM_FIELD__TIM3_SMCR_OCCS
//    <name> OCCS </name>
//    <rw> 
//    <i> [Bit 3] RW (@ 0x40000408) OCREF clear selection </i>
//    <check> 
//      <loc> ( (unsigned int) TIM3_SMCR ) </loc>
//      <o.3..3> OCCS
//    </check>
//  </item>
//  


// --------------------------------  Field Item: TIM3_SMCR_SMS  -----------------------------------
// SVD Line: 26366

//  <item> SFDITEM_FIELD__TIM3_SMCR_SMS
//    <name> SMS </name>
//    <rw> 
//    <i> [Bits 2..0] RW (@ 0x40000408) Slave mode selection </i>
//    <edit> 
//      <loc> ( (unsigned char)((TIM3_SMCR >> 0) & 0x7), ((TIM3_SMCR = (TIM3_SMCR & ~(0x7UL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0x7) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// --------------------------------  Register RTree: TIM3_SMCR  -----------------------------------
// SVD Line: 26302

//  <rtree> SFDITEM_REG__TIM3_SMCR
//    <name> SMCR </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x40000408) slave mode control register </i>
//    <loc> ( (unsigned int)((TIM3_SMCR >> 0) & 0xFFFFFFFF), ((TIM3_SMCR = (TIM3_SMCR & ~(0x31FFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0x31FFFF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__TIM3_SMCR_TS_4_3 </item>
//    <item> SFDITEM_FIELD__TIM3_SMCR_SMS_3 </item>
//    <item> SFDITEM_FIELD__TIM3_SMCR_ETP </item>
//    <item> SFDITEM_FIELD__TIM3_SMCR_ECE </item>
//    <item> SFDITEM_FIELD__TIM3_SMCR_ETPS </item>
//    <item> SFDITEM_FIELD__TIM3_SMCR_ETF </item>
//    <item> SFDITEM_FIELD__TIM3_SMCR_MSM </item>
//    <item> SFDITEM_FIELD__TIM3_SMCR_TS </item>
//    <item> SFDITEM_FIELD__TIM3_SMCR_OCCS </item>
//    <item> SFDITEM_FIELD__TIM3_SMCR_SMS </item>
//  </rtree>
//  


// ----------------------------  Register Item Address: TIM3_DIER  --------------------------------
// SVD Line: 26374

unsigned int TIM3_DIER __AT (0x4000040C);



// --------------------------------  Field Item: TIM3_DIER_TDE  -----------------------------------
// SVD Line: 26383

//  <item> SFDITEM_FIELD__TIM3_DIER_TDE
//    <name> TDE </name>
//    <rw> 
//    <i> [Bit 14] RW (@ 0x4000040C) Trigger DMA request enable </i>
//    <check> 
//      <loc> ( (unsigned int) TIM3_DIER ) </loc>
//      <o.14..14> TDE
//    </check>
//  </item>
//  


// -------------------------------  Field Item: TIM3_DIER_CC4DE  ----------------------------------
// SVD Line: 26389

//  <item> SFDITEM_FIELD__TIM3_DIER_CC4DE
//    <name> CC4DE </name>
//    <rw> 
//    <i> [Bit 12] RW (@ 0x4000040C) Capture/Compare 4 DMA request  enable </i>
//    <check> 
//      <loc> ( (unsigned int) TIM3_DIER ) </loc>
//      <o.12..12> CC4DE
//    </check>
//  </item>
//  


// -------------------------------  Field Item: TIM3_DIER_CC3DE  ----------------------------------
// SVD Line: 26396

//  <item> SFDITEM_FIELD__TIM3_DIER_CC3DE
//    <name> CC3DE </name>
//    <rw> 
//    <i> [Bit 11] RW (@ 0x4000040C) Capture/Compare 3 DMA request  enable </i>
//    <check> 
//      <loc> ( (unsigned int) TIM3_DIER ) </loc>
//      <o.11..11> CC3DE
//    </check>
//  </item>
//  


// -------------------------------  Field Item: TIM3_DIER_CC2DE  ----------------------------------
// SVD Line: 26403

//  <item> SFDITEM_FIELD__TIM3_DIER_CC2DE
//    <name> CC2DE </name>
//    <rw> 
//    <i> [Bit 10] RW (@ 0x4000040C) Capture/Compare 2 DMA request  enable </i>
//    <check> 
//      <loc> ( (unsigned int) TIM3_DIER ) </loc>
//      <o.10..10> CC2DE
//    </check>
//  </item>
//  


// -------------------------------  Field Item: TIM3_DIER_CC1DE  ----------------------------------
// SVD Line: 26410

//  <item> SFDITEM_FIELD__TIM3_DIER_CC1DE
//    <name> CC1DE </name>
//    <rw> 
//    <i> [Bit 9] RW (@ 0x4000040C) Capture/Compare 1 DMA request  enable </i>
//    <check> 
//      <loc> ( (unsigned int) TIM3_DIER ) </loc>
//      <o.9..9> CC1DE
//    </check>
//  </item>
//  


// --------------------------------  Field Item: TIM3_DIER_UDE  -----------------------------------
// SVD Line: 26417

//  <item> SFDITEM_FIELD__TIM3_DIER_UDE
//    <name> UDE </name>
//    <rw> 
//    <i> [Bit 8] RW (@ 0x4000040C) Update DMA request enable </i>
//    <check> 
//      <loc> ( (unsigned int) TIM3_DIER ) </loc>
//      <o.8..8> UDE
//    </check>
//  </item>
//  


// --------------------------------  Field Item: TIM3_DIER_TIE  -----------------------------------
// SVD Line: 26423

//  <item> SFDITEM_FIELD__TIM3_DIER_TIE
//    <name> TIE </name>
//    <rw> 
//    <i> [Bit 6] RW (@ 0x4000040C) Trigger interrupt enable </i>
//    <check> 
//      <loc> ( (unsigned int) TIM3_DIER ) </loc>
//      <o.6..6> TIE
//    </check>
//  </item>
//  


// -------------------------------  Field Item: TIM3_DIER_CC4IE  ----------------------------------
// SVD Line: 26429

//  <item> SFDITEM_FIELD__TIM3_DIER_CC4IE
//    <name> CC4IE </name>
//    <rw> 
//    <i> [Bit 4] RW (@ 0x4000040C) Capture/Compare 4 interrupt  enable </i>
//    <check> 
//      <loc> ( (unsigned int) TIM3_DIER ) </loc>
//      <o.4..4> CC4IE
//    </check>
//  </item>
//  


// -------------------------------  Field Item: TIM3_DIER_CC3IE  ----------------------------------
// SVD Line: 26436

//  <item> SFDITEM_FIELD__TIM3_DIER_CC3IE
//    <name> CC3IE </name>
//    <rw> 
//    <i> [Bit 3] RW (@ 0x4000040C) Capture/Compare 3 interrupt  enable </i>
//    <check> 
//      <loc> ( (unsigned int) TIM3_DIER ) </loc>
//      <o.3..3> CC3IE
//    </check>
//  </item>
//  


// -------------------------------  Field Item: TIM3_DIER_CC2IE  ----------------------------------
// SVD Line: 26443

//  <item> SFDITEM_FIELD__TIM3_DIER_CC2IE
//    <name> CC2IE </name>
//    <rw> 
//    <i> [Bit 2] RW (@ 0x4000040C) Capture/Compare 2 interrupt  enable </i>
//    <check> 
//      <loc> ( (unsigned int) TIM3_DIER ) </loc>
//      <o.2..2> CC2IE
//    </check>
//  </item>
//  


// -------------------------------  Field Item: TIM3_DIER_CC1IE  ----------------------------------
// SVD Line: 26450

//  <item> SFDITEM_FIELD__TIM3_DIER_CC1IE
//    <name> CC1IE </name>
//    <rw> 
//    <i> [Bit 1] RW (@ 0x4000040C) Capture/Compare 1 interrupt  enable </i>
//    <check> 
//      <loc> ( (unsigned int) TIM3_DIER ) </loc>
//      <o.1..1> CC1IE
//    </check>
//  </item>
//  


// --------------------------------  Field Item: TIM3_DIER_UIE  -----------------------------------
// SVD Line: 26457

//  <item> SFDITEM_FIELD__TIM3_DIER_UIE
//    <name> UIE </name>
//    <rw> 
//    <i> [Bit 0] RW (@ 0x4000040C) Update interrupt enable </i>
//    <check> 
//      <loc> ( (unsigned int) TIM3_DIER ) </loc>
//      <o.0..0> UIE
//    </check>
//  </item>
//  


// --------------------------------  Register RTree: TIM3_DIER  -----------------------------------
// SVD Line: 26374

//  <rtree> SFDITEM_REG__TIM3_DIER
//    <name> DIER </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x4000040C) DMA/Interrupt enable register </i>
//    <loc> ( (unsigned int)((TIM3_DIER >> 0) & 0xFFFFFFFF), ((TIM3_DIER = (TIM3_DIER & ~(0x5F5FUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0x5F5F) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__TIM3_DIER_TDE </item>
//    <item> SFDITEM_FIELD__TIM3_DIER_CC4DE </item>
//    <item> SFDITEM_FIELD__TIM3_DIER_CC3DE </item>
//    <item> SFDITEM_FIELD__TIM3_DIER_CC2DE </item>
//    <item> SFDITEM_FIELD__TIM3_DIER_CC1DE </item>
//    <item> SFDITEM_FIELD__TIM3_DIER_UDE </item>
//    <item> SFDITEM_FIELD__TIM3_DIER_TIE </item>
//    <item> SFDITEM_FIELD__TIM3_DIER_CC4IE </item>
//    <item> SFDITEM_FIELD__TIM3_DIER_CC3IE </item>
//    <item> SFDITEM_FIELD__TIM3_DIER_CC2IE </item>
//    <item> SFDITEM_FIELD__TIM3_DIER_CC1IE </item>
//    <item> SFDITEM_FIELD__TIM3_DIER_UIE </item>
//  </rtree>
//  


// -----------------------------  Register Item Address: TIM3_SR  ---------------------------------
// SVD Line: 26465

unsigned int TIM3_SR __AT (0x40000410);



// --------------------------------  Field Item: TIM3_SR_CC4OF  -----------------------------------
// SVD Line: 26474

//  <item> SFDITEM_FIELD__TIM3_SR_CC4OF
//    <name> CC4OF </name>
//    <rw> 
//    <i> [Bit 12] RW (@ 0x40000410) Capture/Compare 4 overcapture  flag </i>
//    <check> 
//      <loc> ( (unsigned int) TIM3_SR ) </loc>
//      <o.12..12> CC4OF
//    </check>
//  </item>
//  


// --------------------------------  Field Item: TIM3_SR_CC3OF  -----------------------------------
// SVD Line: 26481

//  <item> SFDITEM_FIELD__TIM3_SR_CC3OF
//    <name> CC3OF </name>
//    <rw> 
//    <i> [Bit 11] RW (@ 0x40000410) Capture/Compare 3 overcapture  flag </i>
//    <check> 
//      <loc> ( (unsigned int) TIM3_SR ) </loc>
//      <o.11..11> CC3OF
//    </check>
//  </item>
//  


// --------------------------------  Field Item: TIM3_SR_CC2OF  -----------------------------------
// SVD Line: 26488

//  <item> SFDITEM_FIELD__TIM3_SR_CC2OF
//    <name> CC2OF </name>
//    <rw> 
//    <i> [Bit 10] RW (@ 0x40000410) Capture/compare 2 overcapture  flag </i>
//    <check> 
//      <loc> ( (unsigned int) TIM3_SR ) </loc>
//      <o.10..10> CC2OF
//    </check>
//  </item>
//  


// --------------------------------  Field Item: TIM3_SR_CC1OF  -----------------------------------
// SVD Line: 26495

//  <item> SFDITEM_FIELD__TIM3_SR_CC1OF
//    <name> CC1OF </name>
//    <rw> 
//    <i> [Bit 9] RW (@ 0x40000410) Capture/Compare 1 overcapture  flag </i>
//    <check> 
//      <loc> ( (unsigned int) TIM3_SR ) </loc>
//      <o.9..9> CC1OF
//    </check>
//  </item>
//  


// ---------------------------------  Field Item: TIM3_SR_TIF  ------------------------------------
// SVD Line: 26502

//  <item> SFDITEM_FIELD__TIM3_SR_TIF
//    <name> TIF </name>
//    <rw> 
//    <i> [Bit 6] RW (@ 0x40000410) Trigger interrupt flag </i>
//    <check> 
//      <loc> ( (unsigned int) TIM3_SR ) </loc>
//      <o.6..6> TIF
//    </check>
//  </item>
//  


// --------------------------------  Field Item: TIM3_SR_CC4IF  -----------------------------------
// SVD Line: 26508

//  <item> SFDITEM_FIELD__TIM3_SR_CC4IF
//    <name> CC4IF </name>
//    <rw> 
//    <i> [Bit 4] RW (@ 0x40000410) Capture/Compare 4 interrupt  flag </i>
//    <check> 
//      <loc> ( (unsigned int) TIM3_SR ) </loc>
//      <o.4..4> CC4IF
//    </check>
//  </item>
//  


// --------------------------------  Field Item: TIM3_SR_CC3IF  -----------------------------------
// SVD Line: 26515

//  <item> SFDITEM_FIELD__TIM3_SR_CC3IF
//    <name> CC3IF </name>
//    <rw> 
//    <i> [Bit 3] RW (@ 0x40000410) Capture/Compare 3 interrupt  flag </i>
//    <check> 
//      <loc> ( (unsigned int) TIM3_SR ) </loc>
//      <o.3..3> CC3IF
//    </check>
//  </item>
//  


// --------------------------------  Field Item: TIM3_SR_CC2IF  -----------------------------------
// SVD Line: 26522

//  <item> SFDITEM_FIELD__TIM3_SR_CC2IF
//    <name> CC2IF </name>
//    <rw> 
//    <i> [Bit 2] RW (@ 0x40000410) Capture/Compare 2 interrupt  flag </i>
//    <check> 
//      <loc> ( (unsigned int) TIM3_SR ) </loc>
//      <o.2..2> CC2IF
//    </check>
//  </item>
//  


// --------------------------------  Field Item: TIM3_SR_CC1IF  -----------------------------------
// SVD Line: 26529

//  <item> SFDITEM_FIELD__TIM3_SR_CC1IF
//    <name> CC1IF </name>
//    <rw> 
//    <i> [Bit 1] RW (@ 0x40000410) Capture/compare 1 interrupt  flag </i>
//    <check> 
//      <loc> ( (unsigned int) TIM3_SR ) </loc>
//      <o.1..1> CC1IF
//    </check>
//  </item>
//  


// ---------------------------------  Field Item: TIM3_SR_UIF  ------------------------------------
// SVD Line: 26536

//  <item> SFDITEM_FIELD__TIM3_SR_UIF
//    <name> UIF </name>
//    <rw> 
//    <i> [Bit 0] RW (@ 0x40000410) Update interrupt flag </i>
//    <check> 
//      <loc> ( (unsigned int) TIM3_SR ) </loc>
//      <o.0..0> UIF
//    </check>
//  </item>
//  


// ---------------------------------  Register RTree: TIM3_SR  ------------------------------------
// SVD Line: 26465

//  <rtree> SFDITEM_REG__TIM3_SR
//    <name> SR </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x40000410) status register </i>
//    <loc> ( (unsigned int)((TIM3_SR >> 0) & 0xFFFFFFFF), ((TIM3_SR = (TIM3_SR & ~(0x1E5FUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0x1E5F) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__TIM3_SR_CC4OF </item>
//    <item> SFDITEM_FIELD__TIM3_SR_CC3OF </item>
//    <item> SFDITEM_FIELD__TIM3_SR_CC2OF </item>
//    <item> SFDITEM_FIELD__TIM3_SR_CC1OF </item>
//    <item> SFDITEM_FIELD__TIM3_SR_TIF </item>
//    <item> SFDITEM_FIELD__TIM3_SR_CC4IF </item>
//    <item> SFDITEM_FIELD__TIM3_SR_CC3IF </item>
//    <item> SFDITEM_FIELD__TIM3_SR_CC2IF </item>
//    <item> SFDITEM_FIELD__TIM3_SR_CC1IF </item>
//    <item> SFDITEM_FIELD__TIM3_SR_UIF </item>
//  </rtree>
//  


// -----------------------------  Register Item Address: TIM3_EGR  --------------------------------
// SVD Line: 26544

unsigned int TIM3_EGR __AT (0x40000414);



// ---------------------------------  Field Item: TIM3_EGR_TG  ------------------------------------
// SVD Line: 26553

//  <item> SFDITEM_FIELD__TIM3_EGR_TG
//    <name> TG </name>
//    <w> 
//    <i> [Bit 6] WO (@ 0x40000414) Trigger generation </i>
//    <check> 
//      <loc> ( (unsigned int) TIM3_EGR ) </loc>
//      <o.6..6> TG
//    </check>
//  </item>
//  


// --------------------------------  Field Item: TIM3_EGR_CC4G  -----------------------------------
// SVD Line: 26559

//  <item> SFDITEM_FIELD__TIM3_EGR_CC4G
//    <name> CC4G </name>
//    <w> 
//    <i> [Bit 4] WO (@ 0x40000414) Capture/compare 4  generation </i>
//    <check> 
//      <loc> ( (unsigned int) TIM3_EGR ) </loc>
//      <o.4..4> CC4G
//    </check>
//  </item>
//  


// --------------------------------  Field Item: TIM3_EGR_CC3G  -----------------------------------
// SVD Line: 26566

//  <item> SFDITEM_FIELD__TIM3_EGR_CC3G
//    <name> CC3G </name>
//    <w> 
//    <i> [Bit 3] WO (@ 0x40000414) Capture/compare 3  generation </i>
//    <check> 
//      <loc> ( (unsigned int) TIM3_EGR ) </loc>
//      <o.3..3> CC3G
//    </check>
//  </item>
//  


// --------------------------------  Field Item: TIM3_EGR_CC2G  -----------------------------------
// SVD Line: 26573

//  <item> SFDITEM_FIELD__TIM3_EGR_CC2G
//    <name> CC2G </name>
//    <w> 
//    <i> [Bit 2] WO (@ 0x40000414) Capture/compare 2  generation </i>
//    <check> 
//      <loc> ( (unsigned int) TIM3_EGR ) </loc>
//      <o.2..2> CC2G
//    </check>
//  </item>
//  


// --------------------------------  Field Item: TIM3_EGR_CC1G  -----------------------------------
// SVD Line: 26580

//  <item> SFDITEM_FIELD__TIM3_EGR_CC1G
//    <name> CC1G </name>
//    <w> 
//    <i> [Bit 1] WO (@ 0x40000414) Capture/compare 1  generation </i>
//    <check> 
//      <loc> ( (unsigned int) TIM3_EGR ) </loc>
//      <o.1..1> CC1G
//    </check>
//  </item>
//  


// ---------------------------------  Field Item: TIM3_EGR_UG  ------------------------------------
// SVD Line: 26587

//  <item> SFDITEM_FIELD__TIM3_EGR_UG
//    <name> UG </name>
//    <w> 
//    <i> [Bit 0] WO (@ 0x40000414) Update generation </i>
//    <check> 
//      <loc> ( (unsigned int) TIM3_EGR ) </loc>
//      <o.0..0> UG
//    </check>
//  </item>
//  


// --------------------------------  Register RTree: TIM3_EGR  ------------------------------------
// SVD Line: 26544

//  <rtree> SFDITEM_REG__TIM3_EGR
//    <name> EGR </name>
//    <w> 
//    <i> [Bits 31..0] WO (@ 0x40000414) event generation register </i>
//    <loc> ( (unsigned int)((TIM3_EGR >> 0) & 0xFFFFFFFF), ((TIM3_EGR = (TIM3_EGR & ~(0x5FUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0x5F) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__TIM3_EGR_TG </item>
//    <item> SFDITEM_FIELD__TIM3_EGR_CC4G </item>
//    <item> SFDITEM_FIELD__TIM3_EGR_CC3G </item>
//    <item> SFDITEM_FIELD__TIM3_EGR_CC2G </item>
//    <item> SFDITEM_FIELD__TIM3_EGR_CC1G </item>
//    <item> SFDITEM_FIELD__TIM3_EGR_UG </item>
//  </rtree>
//  


// ------------------------  Register Item Address: TIM3_CCMR1_Output  ----------------------------
// SVD Line: 26595

unsigned int TIM3_CCMR1_Output __AT (0x40000418);



// --------------------------  Field Item: TIM3_CCMR1_Output_OC2M_3  ------------------------------
// SVD Line: 26605

//  <item> SFDITEM_FIELD__TIM3_CCMR1_Output_OC2M_3
//    <name> OC2M_3 </name>
//    <rw> 
//    <i> [Bit 24] RW (@ 0x40000418) Output Compare 2 mode - bit  3 </i>
//    <check> 
//      <loc> ( (unsigned int) TIM3_CCMR1_Output ) </loc>
//      <o.24..24> OC2M_3
//    </check>
//  </item>
//  


// --------------------------  Field Item: TIM3_CCMR1_Output_OC1M_3  ------------------------------
// SVD Line: 26612

//  <item> SFDITEM_FIELD__TIM3_CCMR1_Output_OC1M_3
//    <name> OC1M_3 </name>
//    <rw> 
//    <i> [Bit 16] RW (@ 0x40000418) Output Compare 1 mode - bit  3 </i>
//    <check> 
//      <loc> ( (unsigned int) TIM3_CCMR1_Output ) </loc>
//      <o.16..16> OC1M_3
//    </check>
//  </item>
//  


// ---------------------------  Field Item: TIM3_CCMR1_Output_OC2CE  ------------------------------
// SVD Line: 26619

//  <item> SFDITEM_FIELD__TIM3_CCMR1_Output_OC2CE
//    <name> OC2CE </name>
//    <rw> 
//    <i> [Bit 15] RW (@ 0x40000418) Output compare 2 clear  enable </i>
//    <check> 
//      <loc> ( (unsigned int) TIM3_CCMR1_Output ) </loc>
//      <o.15..15> OC2CE
//    </check>
//  </item>
//  


// ---------------------------  Field Item: TIM3_CCMR1_Output_OC2M  -------------------------------
// SVD Line: 26626

//  <item> SFDITEM_FIELD__TIM3_CCMR1_Output_OC2M
//    <name> OC2M </name>
//    <rw> 
//    <i> [Bits 14..12] RW (@ 0x40000418) Output compare 2 mode </i>
//    <edit> 
//      <loc> ( (unsigned char)((TIM3_CCMR1_Output >> 12) & 0x7), ((TIM3_CCMR1_Output = (TIM3_CCMR1_Output & ~(0x7UL << 12 )) | ((unsigned long)(Gui_u8:GuiVal & 0x7) << 12 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ---------------------------  Field Item: TIM3_CCMR1_Output_OC2PE  ------------------------------
// SVD Line: 26632

//  <item> SFDITEM_FIELD__TIM3_CCMR1_Output_OC2PE
//    <name> OC2PE </name>
//    <rw> 
//    <i> [Bit 11] RW (@ 0x40000418) Output compare 2 preload  enable </i>
//    <check> 
//      <loc> ( (unsigned int) TIM3_CCMR1_Output ) </loc>
//      <o.11..11> OC2PE
//    </check>
//  </item>
//  


// ---------------------------  Field Item: TIM3_CCMR1_Output_OC2FE  ------------------------------
// SVD Line: 26639

//  <item> SFDITEM_FIELD__TIM3_CCMR1_Output_OC2FE
//    <name> OC2FE </name>
//    <rw> 
//    <i> [Bit 10] RW (@ 0x40000418) Output compare 2 fast  enable </i>
//    <check> 
//      <loc> ( (unsigned int) TIM3_CCMR1_Output ) </loc>
//      <o.10..10> OC2FE
//    </check>
//  </item>
//  


// ---------------------------  Field Item: TIM3_CCMR1_Output_CC2S  -------------------------------
// SVD Line: 26646

//  <item> SFDITEM_FIELD__TIM3_CCMR1_Output_CC2S
//    <name> CC2S </name>
//    <rw> 
//    <i> [Bits 9..8] RW (@ 0x40000418) Capture/Compare 2  selection </i>
//    <edit> 
//      <loc> ( (unsigned char)((TIM3_CCMR1_Output >> 8) & 0x3), ((TIM3_CCMR1_Output = (TIM3_CCMR1_Output & ~(0x3UL << 8 )) | ((unsigned long)(Gui_u8:GuiVal & 0x3) << 8 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ---------------------------  Field Item: TIM3_CCMR1_Output_OC1CE  ------------------------------
// SVD Line: 26653

//  <item> SFDITEM_FIELD__TIM3_CCMR1_Output_OC1CE
//    <name> OC1CE </name>
//    <rw> 
//    <i> [Bit 7] RW (@ 0x40000418) Output compare 1 clear  enable </i>
//    <check> 
//      <loc> ( (unsigned int) TIM3_CCMR1_Output ) </loc>
//      <o.7..7> OC1CE
//    </check>
//  </item>
//  


// ---------------------------  Field Item: TIM3_CCMR1_Output_OC1M  -------------------------------
// SVD Line: 26660

//  <item> SFDITEM_FIELD__TIM3_CCMR1_Output_OC1M
//    <name> OC1M </name>
//    <rw> 
//    <i> [Bits 6..4] RW (@ 0x40000418) Output compare 1 mode </i>
//    <edit> 
//      <loc> ( (unsigned char)((TIM3_CCMR1_Output >> 4) & 0x7), ((TIM3_CCMR1_Output = (TIM3_CCMR1_Output & ~(0x7UL << 4 )) | ((unsigned long)(Gui_u8:GuiVal & 0x7) << 4 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ---------------------------  Field Item: TIM3_CCMR1_Output_OC1PE  ------------------------------
// SVD Line: 26666

//  <item> SFDITEM_FIELD__TIM3_CCMR1_Output_OC1PE
//    <name> OC1PE </name>
//    <rw> 
//    <i> [Bit 3] RW (@ 0x40000418) Output compare 1 preload  enable </i>
//    <check> 
//      <loc> ( (unsigned int) TIM3_CCMR1_Output ) </loc>
//      <o.3..3> OC1PE
//    </check>
//  </item>
//  


// ---------------------------  Field Item: TIM3_CCMR1_Output_OC1FE  ------------------------------
// SVD Line: 26673

//  <item> SFDITEM_FIELD__TIM3_CCMR1_Output_OC1FE
//    <name> OC1FE </name>
//    <rw> 
//    <i> [Bit 2] RW (@ 0x40000418) Output compare 1 fast  enable </i>
//    <check> 
//      <loc> ( (unsigned int) TIM3_CCMR1_Output ) </loc>
//      <o.2..2> OC1FE
//    </check>
//  </item>
//  


// ---------------------------  Field Item: TIM3_CCMR1_Output_CC1S  -------------------------------
// SVD Line: 26680

//  <item> SFDITEM_FIELD__TIM3_CCMR1_Output_CC1S
//    <name> CC1S </name>
//    <rw> 
//    <i> [Bits 1..0] RW (@ 0x40000418) Capture/Compare 1  selection </i>
//    <edit> 
//      <loc> ( (unsigned char)((TIM3_CCMR1_Output >> 0) & 0x3), ((TIM3_CCMR1_Output = (TIM3_CCMR1_Output & ~(0x3UL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0x3) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ----------------------------  Register RTree: TIM3_CCMR1_Output  -------------------------------
// SVD Line: 26595

//  <rtree> SFDITEM_REG__TIM3_CCMR1_Output
//    <name> CCMR1_Output </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x40000418) capture/compare mode register 1 (output  mode) </i>
//    <loc> ( (unsigned int)((TIM3_CCMR1_Output >> 0) & 0xFFFFFFFF), ((TIM3_CCMR1_Output = (TIM3_CCMR1_Output & ~(0x101FFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0x101FFFF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__TIM3_CCMR1_Output_OC2M_3 </item>
//    <item> SFDITEM_FIELD__TIM3_CCMR1_Output_OC1M_3 </item>
//    <item> SFDITEM_FIELD__TIM3_CCMR1_Output_OC2CE </item>
//    <item> SFDITEM_FIELD__TIM3_CCMR1_Output_OC2M </item>
//    <item> SFDITEM_FIELD__TIM3_CCMR1_Output_OC2PE </item>
//    <item> SFDITEM_FIELD__TIM3_CCMR1_Output_OC2FE </item>
//    <item> SFDITEM_FIELD__TIM3_CCMR1_Output_CC2S </item>
//    <item> SFDITEM_FIELD__TIM3_CCMR1_Output_OC1CE </item>
//    <item> SFDITEM_FIELD__TIM3_CCMR1_Output_OC1M </item>
//    <item> SFDITEM_FIELD__TIM3_CCMR1_Output_OC1PE </item>
//    <item> SFDITEM_FIELD__TIM3_CCMR1_Output_OC1FE </item>
//    <item> SFDITEM_FIELD__TIM3_CCMR1_Output_CC1S </item>
//  </rtree>
//  


// -------------------------  Register Item Address: TIM3_CCMR1_Input  ----------------------------
// SVD Line: 26689

unsigned int TIM3_CCMR1_Input __AT (0x40000418);



// ----------------------------  Field Item: TIM3_CCMR1_Input_IC2F  -------------------------------
// SVD Line: 26700

//  <item> SFDITEM_FIELD__TIM3_CCMR1_Input_IC2F
//    <name> IC2F </name>
//    <rw> 
//    <i> [Bits 15..12] RW (@ 0x40000418) Input capture 2 filter </i>
//    <edit> 
//      <loc> ( (unsigned char)((TIM3_CCMR1_Input >> 12) & 0xF), ((TIM3_CCMR1_Input = (TIM3_CCMR1_Input & ~(0xFUL << 12 )) | ((unsigned long)(Gui_u8:GuiVal & 0xF) << 12 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ---------------------------  Field Item: TIM3_CCMR1_Input_IC2PSC  ------------------------------
// SVD Line: 26706

//  <item> SFDITEM_FIELD__TIM3_CCMR1_Input_IC2PSC
//    <name> IC2PSC </name>
//    <rw> 
//    <i> [Bits 11..10] RW (@ 0x40000418) Input capture 2 prescaler </i>
//    <edit> 
//      <loc> ( (unsigned char)((TIM3_CCMR1_Input >> 10) & 0x3), ((TIM3_CCMR1_Input = (TIM3_CCMR1_Input & ~(0x3UL << 10 )) | ((unsigned long)(Gui_u8:GuiVal & 0x3) << 10 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ----------------------------  Field Item: TIM3_CCMR1_Input_CC2S  -------------------------------
// SVD Line: 26712

//  <item> SFDITEM_FIELD__TIM3_CCMR1_Input_CC2S
//    <name> CC2S </name>
//    <rw> 
//    <i> [Bits 9..8] RW (@ 0x40000418) Capture/compare 2  selection </i>
//    <edit> 
//      <loc> ( (unsigned char)((TIM3_CCMR1_Input >> 8) & 0x3), ((TIM3_CCMR1_Input = (TIM3_CCMR1_Input & ~(0x3UL << 8 )) | ((unsigned long)(Gui_u8:GuiVal & 0x3) << 8 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ----------------------------  Field Item: TIM3_CCMR1_Input_IC1F  -------------------------------
// SVD Line: 26719

//  <item> SFDITEM_FIELD__TIM3_CCMR1_Input_IC1F
//    <name> IC1F </name>
//    <rw> 
//    <i> [Bits 7..4] RW (@ 0x40000418) Input capture 1 filter </i>
//    <edit> 
//      <loc> ( (unsigned char)((TIM3_CCMR1_Input >> 4) & 0xF), ((TIM3_CCMR1_Input = (TIM3_CCMR1_Input & ~(0xFUL << 4 )) | ((unsigned long)(Gui_u8:GuiVal & 0xF) << 4 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ---------------------------  Field Item: TIM3_CCMR1_Input_IC1PSC  ------------------------------
// SVD Line: 26725

//  <item> SFDITEM_FIELD__TIM3_CCMR1_Input_IC1PSC
//    <name> IC1PSC </name>
//    <rw> 
//    <i> [Bits 3..2] RW (@ 0x40000418) Input capture 1 prescaler </i>
//    <edit> 
//      <loc> ( (unsigned char)((TIM3_CCMR1_Input >> 2) & 0x3), ((TIM3_CCMR1_Input = (TIM3_CCMR1_Input & ~(0x3UL << 2 )) | ((unsigned long)(Gui_u8:GuiVal & 0x3) << 2 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ----------------------------  Field Item: TIM3_CCMR1_Input_CC1S  -------------------------------
// SVD Line: 26731

//  <item> SFDITEM_FIELD__TIM3_CCMR1_Input_CC1S
//    <name> CC1S </name>
//    <rw> 
//    <i> [Bits 1..0] RW (@ 0x40000418) Capture/Compare 1  selection </i>
//    <edit> 
//      <loc> ( (unsigned char)((TIM3_CCMR1_Input >> 0) & 0x3), ((TIM3_CCMR1_Input = (TIM3_CCMR1_Input & ~(0x3UL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0x3) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ----------------------------  Register RTree: TIM3_CCMR1_Input  --------------------------------
// SVD Line: 26689

//  <rtree> SFDITEM_REG__TIM3_CCMR1_Input
//    <name> CCMR1_Input </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x40000418) capture/compare mode register 1 (input  mode) </i>
//    <loc> ( (unsigned int)((TIM3_CCMR1_Input >> 0) & 0xFFFFFFFF), ((TIM3_CCMR1_Input = (TIM3_CCMR1_Input & ~(0xFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__TIM3_CCMR1_Input_IC2F </item>
//    <item> SFDITEM_FIELD__TIM3_CCMR1_Input_IC2PSC </item>
//    <item> SFDITEM_FIELD__TIM3_CCMR1_Input_CC2S </item>
//    <item> SFDITEM_FIELD__TIM3_CCMR1_Input_IC1F </item>
//    <item> SFDITEM_FIELD__TIM3_CCMR1_Input_IC1PSC </item>
//    <item> SFDITEM_FIELD__TIM3_CCMR1_Input_CC1S </item>
//  </rtree>
//  


// ------------------------  Register Item Address: TIM3_CCMR2_Output  ----------------------------
// SVD Line: 26740

unsigned int TIM3_CCMR2_Output __AT (0x4000041C);



// --------------------------  Field Item: TIM3_CCMR2_Output_OC4M_3  ------------------------------
// SVD Line: 26750

//  <item> SFDITEM_FIELD__TIM3_CCMR2_Output_OC4M_3
//    <name> OC4M_3 </name>
//    <rw> 
//    <i> [Bit 24] RW (@ 0x4000041C) Output Compare 4 mode - bit  3 </i>
//    <check> 
//      <loc> ( (unsigned int) TIM3_CCMR2_Output ) </loc>
//      <o.24..24> OC4M_3
//    </check>
//  </item>
//  


// --------------------------  Field Item: TIM3_CCMR2_Output_OC3M_3  ------------------------------
// SVD Line: 26757

//  <item> SFDITEM_FIELD__TIM3_CCMR2_Output_OC3M_3
//    <name> OC3M_3 </name>
//    <rw> 
//    <i> [Bit 16] RW (@ 0x4000041C) Output Compare 3 mode - bit  3 </i>
//    <check> 
//      <loc> ( (unsigned int) TIM3_CCMR2_Output ) </loc>
//      <o.16..16> OC3M_3
//    </check>
//  </item>
//  


// ---------------------------  Field Item: TIM3_CCMR2_Output_OC4CE  ------------------------------
// SVD Line: 26764

//  <item> SFDITEM_FIELD__TIM3_CCMR2_Output_OC4CE
//    <name> OC4CE </name>
//    <rw> 
//    <i> [Bit 15] RW (@ 0x4000041C) Output compare 4 clear  enable </i>
//    <check> 
//      <loc> ( (unsigned int) TIM3_CCMR2_Output ) </loc>
//      <o.15..15> OC4CE
//    </check>
//  </item>
//  


// ---------------------------  Field Item: TIM3_CCMR2_Output_OC4M  -------------------------------
// SVD Line: 26771

//  <item> SFDITEM_FIELD__TIM3_CCMR2_Output_OC4M
//    <name> OC4M </name>
//    <rw> 
//    <i> [Bits 14..12] RW (@ 0x4000041C) Output compare 4 mode </i>
//    <edit> 
//      <loc> ( (unsigned char)((TIM3_CCMR2_Output >> 12) & 0x7), ((TIM3_CCMR2_Output = (TIM3_CCMR2_Output & ~(0x7UL << 12 )) | ((unsigned long)(Gui_u8:GuiVal & 0x7) << 12 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ---------------------------  Field Item: TIM3_CCMR2_Output_OC4PE  ------------------------------
// SVD Line: 26777

//  <item> SFDITEM_FIELD__TIM3_CCMR2_Output_OC4PE
//    <name> OC4PE </name>
//    <rw> 
//    <i> [Bit 11] RW (@ 0x4000041C) Output compare 4 preload  enable </i>
//    <check> 
//      <loc> ( (unsigned int) TIM3_CCMR2_Output ) </loc>
//      <o.11..11> OC4PE
//    </check>
//  </item>
//  


// ---------------------------  Field Item: TIM3_CCMR2_Output_OC4FE  ------------------------------
// SVD Line: 26784

//  <item> SFDITEM_FIELD__TIM3_CCMR2_Output_OC4FE
//    <name> OC4FE </name>
//    <rw> 
//    <i> [Bit 10] RW (@ 0x4000041C) Output compare 4 fast  enable </i>
//    <check> 
//      <loc> ( (unsigned int) TIM3_CCMR2_Output ) </loc>
//      <o.10..10> OC4FE
//    </check>
//  </item>
//  


// ---------------------------  Field Item: TIM3_CCMR2_Output_CC4S  -------------------------------
// SVD Line: 26791

//  <item> SFDITEM_FIELD__TIM3_CCMR2_Output_CC4S
//    <name> CC4S </name>
//    <rw> 
//    <i> [Bits 9..8] RW (@ 0x4000041C) Capture/Compare 4  selection </i>
//    <edit> 
//      <loc> ( (unsigned char)((TIM3_CCMR2_Output >> 8) & 0x3), ((TIM3_CCMR2_Output = (TIM3_CCMR2_Output & ~(0x3UL << 8 )) | ((unsigned long)(Gui_u8:GuiVal & 0x3) << 8 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ---------------------------  Field Item: TIM3_CCMR2_Output_OC3CE  ------------------------------
// SVD Line: 26798

//  <item> SFDITEM_FIELD__TIM3_CCMR2_Output_OC3CE
//    <name> OC3CE </name>
//    <rw> 
//    <i> [Bit 7] RW (@ 0x4000041C) Output compare 3 clear  enable </i>
//    <check> 
//      <loc> ( (unsigned int) TIM3_CCMR2_Output ) </loc>
//      <o.7..7> OC3CE
//    </check>
//  </item>
//  


// ---------------------------  Field Item: TIM3_CCMR2_Output_OC3M  -------------------------------
// SVD Line: 26805

//  <item> SFDITEM_FIELD__TIM3_CCMR2_Output_OC3M
//    <name> OC3M </name>
//    <rw> 
//    <i> [Bits 6..4] RW (@ 0x4000041C) Output compare 3 mode </i>
//    <edit> 
//      <loc> ( (unsigned char)((TIM3_CCMR2_Output >> 4) & 0x7), ((TIM3_CCMR2_Output = (TIM3_CCMR2_Output & ~(0x7UL << 4 )) | ((unsigned long)(Gui_u8:GuiVal & 0x7) << 4 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ---------------------------  Field Item: TIM3_CCMR2_Output_OC3PE  ------------------------------
// SVD Line: 26811

//  <item> SFDITEM_FIELD__TIM3_CCMR2_Output_OC3PE
//    <name> OC3PE </name>
//    <rw> 
//    <i> [Bit 3] RW (@ 0x4000041C) Output compare 3 preload  enable </i>
//    <check> 
//      <loc> ( (unsigned int) TIM3_CCMR2_Output ) </loc>
//      <o.3..3> OC3PE
//    </check>
//  </item>
//  


// ---------------------------  Field Item: TIM3_CCMR2_Output_OC3FE  ------------------------------
// SVD Line: 26818

//  <item> SFDITEM_FIELD__TIM3_CCMR2_Output_OC3FE
//    <name> OC3FE </name>
//    <rw> 
//    <i> [Bit 2] RW (@ 0x4000041C) Output compare 3 fast  enable </i>
//    <check> 
//      <loc> ( (unsigned int) TIM3_CCMR2_Output ) </loc>
//      <o.2..2> OC3FE
//    </check>
//  </item>
//  


// ---------------------------  Field Item: TIM3_CCMR2_Output_CC3S  -------------------------------
// SVD Line: 26825

//  <item> SFDITEM_FIELD__TIM3_CCMR2_Output_CC3S
//    <name> CC3S </name>
//    <rw> 
//    <i> [Bits 1..0] RW (@ 0x4000041C) Capture/Compare 3  selection </i>
//    <edit> 
//      <loc> ( (unsigned char)((TIM3_CCMR2_Output >> 0) & 0x3), ((TIM3_CCMR2_Output = (TIM3_CCMR2_Output & ~(0x3UL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0x3) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ----------------------------  Register RTree: TIM3_CCMR2_Output  -------------------------------
// SVD Line: 26740

//  <rtree> SFDITEM_REG__TIM3_CCMR2_Output
//    <name> CCMR2_Output </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x4000041C) capture/compare mode register 2 (output  mode) </i>
//    <loc> ( (unsigned int)((TIM3_CCMR2_Output >> 0) & 0xFFFFFFFF), ((TIM3_CCMR2_Output = (TIM3_CCMR2_Output & ~(0x101FFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0x101FFFF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__TIM3_CCMR2_Output_OC4M_3 </item>
//    <item> SFDITEM_FIELD__TIM3_CCMR2_Output_OC3M_3 </item>
//    <item> SFDITEM_FIELD__TIM3_CCMR2_Output_OC4CE </item>
//    <item> SFDITEM_FIELD__TIM3_CCMR2_Output_OC4M </item>
//    <item> SFDITEM_FIELD__TIM3_CCMR2_Output_OC4PE </item>
//    <item> SFDITEM_FIELD__TIM3_CCMR2_Output_OC4FE </item>
//    <item> SFDITEM_FIELD__TIM3_CCMR2_Output_CC4S </item>
//    <item> SFDITEM_FIELD__TIM3_CCMR2_Output_OC3CE </item>
//    <item> SFDITEM_FIELD__TIM3_CCMR2_Output_OC3M </item>
//    <item> SFDITEM_FIELD__TIM3_CCMR2_Output_OC3PE </item>
//    <item> SFDITEM_FIELD__TIM3_CCMR2_Output_OC3FE </item>
//    <item> SFDITEM_FIELD__TIM3_CCMR2_Output_CC3S </item>
//  </rtree>
//  


// -------------------------  Register Item Address: TIM3_CCMR2_Input  ----------------------------
// SVD Line: 26834

unsigned int TIM3_CCMR2_Input __AT (0x4000041C);



// ----------------------------  Field Item: TIM3_CCMR2_Input_IC4F  -------------------------------
// SVD Line: 26845

//  <item> SFDITEM_FIELD__TIM3_CCMR2_Input_IC4F
//    <name> IC4F </name>
//    <rw> 
//    <i> [Bits 15..12] RW (@ 0x4000041C) Input capture 4 filter </i>
//    <edit> 
//      <loc> ( (unsigned char)((TIM3_CCMR2_Input >> 12) & 0xF), ((TIM3_CCMR2_Input = (TIM3_CCMR2_Input & ~(0xFUL << 12 )) | ((unsigned long)(Gui_u8:GuiVal & 0xF) << 12 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ---------------------------  Field Item: TIM3_CCMR2_Input_IC4PSC  ------------------------------
// SVD Line: 26851

//  <item> SFDITEM_FIELD__TIM3_CCMR2_Input_IC4PSC
//    <name> IC4PSC </name>
//    <rw> 
//    <i> [Bits 11..10] RW (@ 0x4000041C) Input capture 4 prescaler </i>
//    <edit> 
//      <loc> ( (unsigned char)((TIM3_CCMR2_Input >> 10) & 0x3), ((TIM3_CCMR2_Input = (TIM3_CCMR2_Input & ~(0x3UL << 10 )) | ((unsigned long)(Gui_u8:GuiVal & 0x3) << 10 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ----------------------------  Field Item: TIM3_CCMR2_Input_CC4S  -------------------------------
// SVD Line: 26857

//  <item> SFDITEM_FIELD__TIM3_CCMR2_Input_CC4S
//    <name> CC4S </name>
//    <rw> 
//    <i> [Bits 9..8] RW (@ 0x4000041C) Capture/Compare 4  selection </i>
//    <edit> 
//      <loc> ( (unsigned char)((TIM3_CCMR2_Input >> 8) & 0x3), ((TIM3_CCMR2_Input = (TIM3_CCMR2_Input & ~(0x3UL << 8 )) | ((unsigned long)(Gui_u8:GuiVal & 0x3) << 8 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ----------------------------  Field Item: TIM3_CCMR2_Input_IC3F  -------------------------------
// SVD Line: 26864

//  <item> SFDITEM_FIELD__TIM3_CCMR2_Input_IC3F
//    <name> IC3F </name>
//    <rw> 
//    <i> [Bits 7..4] RW (@ 0x4000041C) Input capture 3 filter </i>
//    <edit> 
//      <loc> ( (unsigned char)((TIM3_CCMR2_Input >> 4) & 0xF), ((TIM3_CCMR2_Input = (TIM3_CCMR2_Input & ~(0xFUL << 4 )) | ((unsigned long)(Gui_u8:GuiVal & 0xF) << 4 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ---------------------------  Field Item: TIM3_CCMR2_Input_IC3PSC  ------------------------------
// SVD Line: 26870

//  <item> SFDITEM_FIELD__TIM3_CCMR2_Input_IC3PSC
//    <name> IC3PSC </name>
//    <rw> 
//    <i> [Bits 3..2] RW (@ 0x4000041C) Input capture 3 prescaler </i>
//    <edit> 
//      <loc> ( (unsigned char)((TIM3_CCMR2_Input >> 2) & 0x3), ((TIM3_CCMR2_Input = (TIM3_CCMR2_Input & ~(0x3UL << 2 )) | ((unsigned long)(Gui_u8:GuiVal & 0x3) << 2 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ----------------------------  Field Item: TIM3_CCMR2_Input_CC3S  -------------------------------
// SVD Line: 26876

//  <item> SFDITEM_FIELD__TIM3_CCMR2_Input_CC3S
//    <name> CC3S </name>
//    <rw> 
//    <i> [Bits 1..0] RW (@ 0x4000041C) Capture/Compare 3  selection </i>
//    <edit> 
//      <loc> ( (unsigned char)((TIM3_CCMR2_Input >> 0) & 0x3), ((TIM3_CCMR2_Input = (TIM3_CCMR2_Input & ~(0x3UL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0x3) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ----------------------------  Register RTree: TIM3_CCMR2_Input  --------------------------------
// SVD Line: 26834

//  <rtree> SFDITEM_REG__TIM3_CCMR2_Input
//    <name> CCMR2_Input </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x4000041C) capture/compare mode register 2 (input  mode) </i>
//    <loc> ( (unsigned int)((TIM3_CCMR2_Input >> 0) & 0xFFFFFFFF), ((TIM3_CCMR2_Input = (TIM3_CCMR2_Input & ~(0xFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__TIM3_CCMR2_Input_IC4F </item>
//    <item> SFDITEM_FIELD__TIM3_CCMR2_Input_IC4PSC </item>
//    <item> SFDITEM_FIELD__TIM3_CCMR2_Input_CC4S </item>
//    <item> SFDITEM_FIELD__TIM3_CCMR2_Input_IC3F </item>
//    <item> SFDITEM_FIELD__TIM3_CCMR2_Input_IC3PSC </item>
//    <item> SFDITEM_FIELD__TIM3_CCMR2_Input_CC3S </item>
//  </rtree>
//  


// ----------------------------  Register Item Address: TIM3_CCER  --------------------------------
// SVD Line: 26885

unsigned int TIM3_CCER __AT (0x40000420);



// -------------------------------  Field Item: TIM3_CCER_CC4NP  ----------------------------------
// SVD Line: 26895

//  <item> SFDITEM_FIELD__TIM3_CCER_CC4NP
//    <name> CC4NP </name>
//    <rw> 
//    <i> [Bit 15] RW (@ 0x40000420) Capture/Compare 4 output  Polarity </i>
//    <check> 
//      <loc> ( (unsigned int) TIM3_CCER ) </loc>
//      <o.15..15> CC4NP
//    </check>
//  </item>
//  


// -------------------------------  Field Item: TIM3_CCER_CC4P  -----------------------------------
// SVD Line: 26902

//  <item> SFDITEM_FIELD__TIM3_CCER_CC4P
//    <name> CC4P </name>
//    <rw> 
//    <i> [Bit 13] RW (@ 0x40000420) Capture/Compare 3 output  Polarity </i>
//    <check> 
//      <loc> ( (unsigned int) TIM3_CCER ) </loc>
//      <o.13..13> CC4P
//    </check>
//  </item>
//  


// -------------------------------  Field Item: TIM3_CCER_CC4E  -----------------------------------
// SVD Line: 26909

//  <item> SFDITEM_FIELD__TIM3_CCER_CC4E
//    <name> CC4E </name>
//    <rw> 
//    <i> [Bit 12] RW (@ 0x40000420) Capture/Compare 4 output  enable </i>
//    <check> 
//      <loc> ( (unsigned int) TIM3_CCER ) </loc>
//      <o.12..12> CC4E
//    </check>
//  </item>
//  


// -------------------------------  Field Item: TIM3_CCER_CC3NP  ----------------------------------
// SVD Line: 26916

//  <item> SFDITEM_FIELD__TIM3_CCER_CC3NP
//    <name> CC3NP </name>
//    <rw> 
//    <i> [Bit 11] RW (@ 0x40000420) Capture/Compare 3 output  Polarity </i>
//    <check> 
//      <loc> ( (unsigned int) TIM3_CCER ) </loc>
//      <o.11..11> CC3NP
//    </check>
//  </item>
//  


// -------------------------------  Field Item: TIM3_CCER_CC3P  -----------------------------------
// SVD Line: 26923

//  <item> SFDITEM_FIELD__TIM3_CCER_CC3P
//    <name> CC3P </name>
//    <rw> 
//    <i> [Bit 9] RW (@ 0x40000420) Capture/Compare 3 output  Polarity </i>
//    <check> 
//      <loc> ( (unsigned int) TIM3_CCER ) </loc>
//      <o.9..9> CC3P
//    </check>
//  </item>
//  


// -------------------------------  Field Item: TIM3_CCER_CC3E  -----------------------------------
// SVD Line: 26930

//  <item> SFDITEM_FIELD__TIM3_CCER_CC3E
//    <name> CC3E </name>
//    <rw> 
//    <i> [Bit 8] RW (@ 0x40000420) Capture/Compare 3 output  enable </i>
//    <check> 
//      <loc> ( (unsigned int) TIM3_CCER ) </loc>
//      <o.8..8> CC3E
//    </check>
//  </item>
//  


// -------------------------------  Field Item: TIM3_CCER_CC2NP  ----------------------------------
// SVD Line: 26937

//  <item> SFDITEM_FIELD__TIM3_CCER_CC2NP
//    <name> CC2NP </name>
//    <rw> 
//    <i> [Bit 7] RW (@ 0x40000420) Capture/Compare 2 output  Polarity </i>
//    <check> 
//      <loc> ( (unsigned int) TIM3_CCER ) </loc>
//      <o.7..7> CC2NP
//    </check>
//  </item>
//  


// -------------------------------  Field Item: TIM3_CCER_CC2P  -----------------------------------
// SVD Line: 26944

//  <item> SFDITEM_FIELD__TIM3_CCER_CC2P
//    <name> CC2P </name>
//    <rw> 
//    <i> [Bit 5] RW (@ 0x40000420) Capture/Compare 2 output  Polarity </i>
//    <check> 
//      <loc> ( (unsigned int) TIM3_CCER ) </loc>
//      <o.5..5> CC2P
//    </check>
//  </item>
//  


// -------------------------------  Field Item: TIM3_CCER_CC2E  -----------------------------------
// SVD Line: 26951

//  <item> SFDITEM_FIELD__TIM3_CCER_CC2E
//    <name> CC2E </name>
//    <rw> 
//    <i> [Bit 4] RW (@ 0x40000420) Capture/Compare 2 output  enable </i>
//    <check> 
//      <loc> ( (unsigned int) TIM3_CCER ) </loc>
//      <o.4..4> CC2E
//    </check>
//  </item>
//  


// -------------------------------  Field Item: TIM3_CCER_CC1NP  ----------------------------------
// SVD Line: 26958

//  <item> SFDITEM_FIELD__TIM3_CCER_CC1NP
//    <name> CC1NP </name>
//    <rw> 
//    <i> [Bit 3] RW (@ 0x40000420) Capture/Compare 1 output  Polarity </i>
//    <check> 
//      <loc> ( (unsigned int) TIM3_CCER ) </loc>
//      <o.3..3> CC1NP
//    </check>
//  </item>
//  


// -------------------------------  Field Item: TIM3_CCER_CC1P  -----------------------------------
// SVD Line: 26965

//  <item> SFDITEM_FIELD__TIM3_CCER_CC1P
//    <name> CC1P </name>
//    <rw> 
//    <i> [Bit 1] RW (@ 0x40000420) Capture/Compare 1 output  Polarity </i>
//    <check> 
//      <loc> ( (unsigned int) TIM3_CCER ) </loc>
//      <o.1..1> CC1P
//    </check>
//  </item>
//  


// -------------------------------  Field Item: TIM3_CCER_CC1E  -----------------------------------
// SVD Line: 26972

//  <item> SFDITEM_FIELD__TIM3_CCER_CC1E
//    <name> CC1E </name>
//    <rw> 
//    <i> [Bit 0] RW (@ 0x40000420) Capture/Compare 1 output  enable </i>
//    <check> 
//      <loc> ( (unsigned int) TIM3_CCER ) </loc>
//      <o.0..0> CC1E
//    </check>
//  </item>
//  


// --------------------------------  Register RTree: TIM3_CCER  -----------------------------------
// SVD Line: 26885

//  <rtree> SFDITEM_REG__TIM3_CCER
//    <name> CCER </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x40000420) capture/compare enable  register </i>
//    <loc> ( (unsigned int)((TIM3_CCER >> 0) & 0xFFFFFFFF), ((TIM3_CCER = (TIM3_CCER & ~(0xBBBBUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xBBBB) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__TIM3_CCER_CC4NP </item>
//    <item> SFDITEM_FIELD__TIM3_CCER_CC4P </item>
//    <item> SFDITEM_FIELD__TIM3_CCER_CC4E </item>
//    <item> SFDITEM_FIELD__TIM3_CCER_CC3NP </item>
//    <item> SFDITEM_FIELD__TIM3_CCER_CC3P </item>
//    <item> SFDITEM_FIELD__TIM3_CCER_CC3E </item>
//    <item> SFDITEM_FIELD__TIM3_CCER_CC2NP </item>
//    <item> SFDITEM_FIELD__TIM3_CCER_CC2P </item>
//    <item> SFDITEM_FIELD__TIM3_CCER_CC2E </item>
//    <item> SFDITEM_FIELD__TIM3_CCER_CC1NP </item>
//    <item> SFDITEM_FIELD__TIM3_CCER_CC1P </item>
//    <item> SFDITEM_FIELD__TIM3_CCER_CC1E </item>
//  </rtree>
//  


// -----------------------------  Register Item Address: TIM3_CNT  --------------------------------
// SVD Line: 26981

unsigned int TIM3_CNT __AT (0x40000424);



// -------------------------------  Field Item: TIM3_CNT_CNT_H  -----------------------------------
// SVD Line: 26990

//  <item> SFDITEM_FIELD__TIM3_CNT_CNT_H
//    <name> CNT_H </name>
//    <rw> 
//    <i> [Bits 31..16] RW (@ 0x40000424) High counter value (TIM2  only) </i>
//    <edit> 
//      <loc> ( (unsigned short)((TIM3_CNT >> 16) & 0xFFFF), ((TIM3_CNT = (TIM3_CNT & ~(0xFFFFUL << 16 )) | ((unsigned long)(Gui_u16:GuiVal & 0xFFFF) << 16 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -------------------------------  Field Item: TIM3_CNT_CNT_L  -----------------------------------
// SVD Line: 26997

//  <item> SFDITEM_FIELD__TIM3_CNT_CNT_L
//    <name> CNT_L </name>
//    <rw> 
//    <i> [Bits 15..0] RW (@ 0x40000424) Low counter value </i>
//    <edit> 
//      <loc> ( (unsigned short)((TIM3_CNT >> 0) & 0xFFFF), ((TIM3_CNT = (TIM3_CNT & ~(0xFFFFUL << 0 )) | ((unsigned long)(Gui_u16:GuiVal & 0xFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// --------------------------------  Register RTree: TIM3_CNT  ------------------------------------
// SVD Line: 26981

//  <rtree> SFDITEM_REG__TIM3_CNT
//    <name> CNT </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x40000424) counter </i>
//    <loc> ( (unsigned int)((TIM3_CNT >> 0) & 0xFFFFFFFF), ((TIM3_CNT = (TIM3_CNT & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__TIM3_CNT_CNT_H </item>
//    <item> SFDITEM_FIELD__TIM3_CNT_CNT_L </item>
//  </rtree>
//  


// -----------------------------  Register Item Address: TIM3_PSC  --------------------------------
// SVD Line: 27005

unsigned int TIM3_PSC __AT (0x40000428);



// --------------------------------  Field Item: TIM3_PSC_PSC  ------------------------------------
// SVD Line: 27014

//  <item> SFDITEM_FIELD__TIM3_PSC_PSC
//    <name> PSC </name>
//    <rw> 
//    <i> [Bits 15..0] RW (@ 0x40000428) Prescaler value </i>
//    <edit> 
//      <loc> ( (unsigned short)((TIM3_PSC >> 0) & 0xFFFF), ((TIM3_PSC = (TIM3_PSC & ~(0xFFFFUL << 0 )) | ((unsigned long)(Gui_u16:GuiVal & 0xFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// --------------------------------  Register RTree: TIM3_PSC  ------------------------------------
// SVD Line: 27005

//  <rtree> SFDITEM_REG__TIM3_PSC
//    <name> PSC </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x40000428) prescaler </i>
//    <loc> ( (unsigned int)((TIM3_PSC >> 0) & 0xFFFFFFFF), ((TIM3_PSC = (TIM3_PSC & ~(0xFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__TIM3_PSC_PSC </item>
//  </rtree>
//  


// -----------------------------  Register Item Address: TIM3_ARR  --------------------------------
// SVD Line: 27022

unsigned int TIM3_ARR __AT (0x4000042C);



// -------------------------------  Field Item: TIM3_ARR_ARR_H  -----------------------------------
// SVD Line: 27031

//  <item> SFDITEM_FIELD__TIM3_ARR_ARR_H
//    <name> ARR_H </name>
//    <rw> 
//    <i> [Bits 31..16] RW (@ 0x4000042C) High Auto-reload value (TIM2  only) </i>
//    <edit> 
//      <loc> ( (unsigned short)((TIM3_ARR >> 16) & 0xFFFF), ((TIM3_ARR = (TIM3_ARR & ~(0xFFFFUL << 16 )) | ((unsigned long)(Gui_u16:GuiVal & 0xFFFF) << 16 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -------------------------------  Field Item: TIM3_ARR_ARR_L  -----------------------------------
// SVD Line: 27038

//  <item> SFDITEM_FIELD__TIM3_ARR_ARR_L
//    <name> ARR_L </name>
//    <rw> 
//    <i> [Bits 15..0] RW (@ 0x4000042C) Low Auto-reload value </i>
//    <edit> 
//      <loc> ( (unsigned short)((TIM3_ARR >> 0) & 0xFFFF), ((TIM3_ARR = (TIM3_ARR & ~(0xFFFFUL << 0 )) | ((unsigned long)(Gui_u16:GuiVal & 0xFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// --------------------------------  Register RTree: TIM3_ARR  ------------------------------------
// SVD Line: 27022

//  <rtree> SFDITEM_REG__TIM3_ARR
//    <name> ARR </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x4000042C) auto-reload register </i>
//    <loc> ( (unsigned int)((TIM3_ARR >> 0) & 0xFFFFFFFF), ((TIM3_ARR = (TIM3_ARR & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__TIM3_ARR_ARR_H </item>
//    <item> SFDITEM_FIELD__TIM3_ARR_ARR_L </item>
//  </rtree>
//  


// ----------------------------  Register Item Address: TIM3_CCR1  --------------------------------
// SVD Line: 27046

unsigned int TIM3_CCR1 __AT (0x40000434);



// ------------------------------  Field Item: TIM3_CCR1_CCR1_H  ----------------------------------
// SVD Line: 27055

//  <item> SFDITEM_FIELD__TIM3_CCR1_CCR1_H
//    <name> CCR1_H </name>
//    <rw> 
//    <i> [Bits 31..16] RW (@ 0x40000434) High Capture/Compare 1 value (TIM2  only) </i>
//    <edit> 
//      <loc> ( (unsigned short)((TIM3_CCR1 >> 16) & 0xFFFF), ((TIM3_CCR1 = (TIM3_CCR1 & ~(0xFFFFUL << 16 )) | ((unsigned long)(Gui_u16:GuiVal & 0xFFFF) << 16 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ------------------------------  Field Item: TIM3_CCR1_CCR1_L  ----------------------------------
// SVD Line: 27062

//  <item> SFDITEM_FIELD__TIM3_CCR1_CCR1_L
//    <name> CCR1_L </name>
//    <rw> 
//    <i> [Bits 15..0] RW (@ 0x40000434) Low Capture/Compare 1  value </i>
//    <edit> 
//      <loc> ( (unsigned short)((TIM3_CCR1 >> 0) & 0xFFFF), ((TIM3_CCR1 = (TIM3_CCR1 & ~(0xFFFFUL << 0 )) | ((unsigned long)(Gui_u16:GuiVal & 0xFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// --------------------------------  Register RTree: TIM3_CCR1  -----------------------------------
// SVD Line: 27046

//  <rtree> SFDITEM_REG__TIM3_CCR1
//    <name> CCR1 </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x40000434) capture/compare register 1 </i>
//    <loc> ( (unsigned int)((TIM3_CCR1 >> 0) & 0xFFFFFFFF), ((TIM3_CCR1 = (TIM3_CCR1 & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__TIM3_CCR1_CCR1_H </item>
//    <item> SFDITEM_FIELD__TIM3_CCR1_CCR1_L </item>
//  </rtree>
//  


// ----------------------------  Register Item Address: TIM3_CCR2  --------------------------------
// SVD Line: 27071

unsigned int TIM3_CCR2 __AT (0x40000438);



// ------------------------------  Field Item: TIM3_CCR2_CCR2_H  ----------------------------------
// SVD Line: 27080

//  <item> SFDITEM_FIELD__TIM3_CCR2_CCR2_H
//    <name> CCR2_H </name>
//    <rw> 
//    <i> [Bits 31..16] RW (@ 0x40000438) High Capture/Compare 2 value (TIM2  only) </i>
//    <edit> 
//      <loc> ( (unsigned short)((TIM3_CCR2 >> 16) & 0xFFFF), ((TIM3_CCR2 = (TIM3_CCR2 & ~(0xFFFFUL << 16 )) | ((unsigned long)(Gui_u16:GuiVal & 0xFFFF) << 16 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ------------------------------  Field Item: TIM3_CCR2_CCR2_L  ----------------------------------
// SVD Line: 27087

//  <item> SFDITEM_FIELD__TIM3_CCR2_CCR2_L
//    <name> CCR2_L </name>
//    <rw> 
//    <i> [Bits 15..0] RW (@ 0x40000438) Low Capture/Compare 2  value </i>
//    <edit> 
//      <loc> ( (unsigned short)((TIM3_CCR2 >> 0) & 0xFFFF), ((TIM3_CCR2 = (TIM3_CCR2 & ~(0xFFFFUL << 0 )) | ((unsigned long)(Gui_u16:GuiVal & 0xFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// --------------------------------  Register RTree: TIM3_CCR2  -----------------------------------
// SVD Line: 27071

//  <rtree> SFDITEM_REG__TIM3_CCR2
//    <name> CCR2 </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x40000438) capture/compare register 2 </i>
//    <loc> ( (unsigned int)((TIM3_CCR2 >> 0) & 0xFFFFFFFF), ((TIM3_CCR2 = (TIM3_CCR2 & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__TIM3_CCR2_CCR2_H </item>
//    <item> SFDITEM_FIELD__TIM3_CCR2_CCR2_L </item>
//  </rtree>
//  


// ----------------------------  Register Item Address: TIM3_CCR3  --------------------------------
// SVD Line: 27096

unsigned int TIM3_CCR3 __AT (0x4000043C);



// ------------------------------  Field Item: TIM3_CCR3_CCR3_H  ----------------------------------
// SVD Line: 27105

//  <item> SFDITEM_FIELD__TIM3_CCR3_CCR3_H
//    <name> CCR3_H </name>
//    <rw> 
//    <i> [Bits 31..16] RW (@ 0x4000043C) High Capture/Compare value (TIM2  only) </i>
//    <edit> 
//      <loc> ( (unsigned short)((TIM3_CCR3 >> 16) & 0xFFFF), ((TIM3_CCR3 = (TIM3_CCR3 & ~(0xFFFFUL << 16 )) | ((unsigned long)(Gui_u16:GuiVal & 0xFFFF) << 16 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ------------------------------  Field Item: TIM3_CCR3_CCR3_L  ----------------------------------
// SVD Line: 27112

//  <item> SFDITEM_FIELD__TIM3_CCR3_CCR3_L
//    <name> CCR3_L </name>
//    <rw> 
//    <i> [Bits 15..0] RW (@ 0x4000043C) Low Capture/Compare value </i>
//    <edit> 
//      <loc> ( (unsigned short)((TIM3_CCR3 >> 0) & 0xFFFF), ((TIM3_CCR3 = (TIM3_CCR3 & ~(0xFFFFUL << 0 )) | ((unsigned long)(Gui_u16:GuiVal & 0xFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// --------------------------------  Register RTree: TIM3_CCR3  -----------------------------------
// SVD Line: 27096

//  <rtree> SFDITEM_REG__TIM3_CCR3
//    <name> CCR3 </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x4000043C) capture/compare register 3 </i>
//    <loc> ( (unsigned int)((TIM3_CCR3 >> 0) & 0xFFFFFFFF), ((TIM3_CCR3 = (TIM3_CCR3 & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__TIM3_CCR3_CCR3_H </item>
//    <item> SFDITEM_FIELD__TIM3_CCR3_CCR3_L </item>
//  </rtree>
//  


// ----------------------------  Register Item Address: TIM3_CCR4  --------------------------------
// SVD Line: 27120

unsigned int TIM3_CCR4 __AT (0x40000440);



// ------------------------------  Field Item: TIM3_CCR4_CCR4_H  ----------------------------------
// SVD Line: 27129

//  <item> SFDITEM_FIELD__TIM3_CCR4_CCR4_H
//    <name> CCR4_H </name>
//    <rw> 
//    <i> [Bits 31..16] RW (@ 0x40000440) High Capture/Compare value (TIM2  only) </i>
//    <edit> 
//      <loc> ( (unsigned short)((TIM3_CCR4 >> 16) & 0xFFFF), ((TIM3_CCR4 = (TIM3_CCR4 & ~(0xFFFFUL << 16 )) | ((unsigned long)(Gui_u16:GuiVal & 0xFFFF) << 16 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ------------------------------  Field Item: TIM3_CCR4_CCR4_L  ----------------------------------
// SVD Line: 27136

//  <item> SFDITEM_FIELD__TIM3_CCR4_CCR4_L
//    <name> CCR4_L </name>
//    <rw> 
//    <i> [Bits 15..0] RW (@ 0x40000440) Low Capture/Compare value </i>
//    <edit> 
//      <loc> ( (unsigned short)((TIM3_CCR4 >> 0) & 0xFFFF), ((TIM3_CCR4 = (TIM3_CCR4 & ~(0xFFFFUL << 0 )) | ((unsigned long)(Gui_u16:GuiVal & 0xFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// --------------------------------  Register RTree: TIM3_CCR4  -----------------------------------
// SVD Line: 27120

//  <rtree> SFDITEM_REG__TIM3_CCR4
//    <name> CCR4 </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x40000440) capture/compare register 4 </i>
//    <loc> ( (unsigned int)((TIM3_CCR4 >> 0) & 0xFFFFFFFF), ((TIM3_CCR4 = (TIM3_CCR4 & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__TIM3_CCR4_CCR4_H </item>
//    <item> SFDITEM_FIELD__TIM3_CCR4_CCR4_L </item>
//  </rtree>
//  


// -----------------------------  Register Item Address: TIM3_DCR  --------------------------------
// SVD Line: 27144

unsigned int TIM3_DCR __AT (0x40000448);



// --------------------------------  Field Item: TIM3_DCR_DBL  ------------------------------------
// SVD Line: 27153

//  <item> SFDITEM_FIELD__TIM3_DCR_DBL
//    <name> DBL </name>
//    <rw> 
//    <i> [Bits 12..8] RW (@ 0x40000448) DMA burst length </i>
//    <edit> 
//      <loc> ( (unsigned char)((TIM3_DCR >> 8) & 0x1F), ((TIM3_DCR = (TIM3_DCR & ~(0x1FUL << 8 )) | ((unsigned long)(Gui_u8:GuiVal & 0x1F) << 8 ) ) )) </loc>
//    </edit>
//  </item>
//  


// --------------------------------  Field Item: TIM3_DCR_DBA  ------------------------------------
// SVD Line: 27159

//  <item> SFDITEM_FIELD__TIM3_DCR_DBA
//    <name> DBA </name>
//    <rw> 
//    <i> [Bits 4..0] RW (@ 0x40000448) DMA base address </i>
//    <edit> 
//      <loc> ( (unsigned char)((TIM3_DCR >> 0) & 0x1F), ((TIM3_DCR = (TIM3_DCR & ~(0x1FUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0x1F) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// --------------------------------  Register RTree: TIM3_DCR  ------------------------------------
// SVD Line: 27144

//  <rtree> SFDITEM_REG__TIM3_DCR
//    <name> DCR </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x40000448) DMA control register </i>
//    <loc> ( (unsigned int)((TIM3_DCR >> 0) & 0xFFFFFFFF), ((TIM3_DCR = (TIM3_DCR & ~(0x1F1FUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0x1F1F) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__TIM3_DCR_DBL </item>
//    <item> SFDITEM_FIELD__TIM3_DCR_DBA </item>
//  </rtree>
//  


// ----------------------------  Register Item Address: TIM3_DMAR  --------------------------------
// SVD Line: 27167

unsigned int TIM3_DMAR __AT (0x4000044C);



// -------------------------------  Field Item: TIM3_DMAR_DMAB  -----------------------------------
// SVD Line: 27176

//  <item> SFDITEM_FIELD__TIM3_DMAR_DMAB
//    <name> DMAB </name>
//    <rw> 
//    <i> [Bits 15..0] RW (@ 0x4000044C) DMA register for burst  accesses </i>
//    <edit> 
//      <loc> ( (unsigned short)((TIM3_DMAR >> 0) & 0xFFFF), ((TIM3_DMAR = (TIM3_DMAR & ~(0xFFFFUL << 0 )) | ((unsigned long)(Gui_u16:GuiVal & 0xFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// --------------------------------  Register RTree: TIM3_DMAR  -----------------------------------
// SVD Line: 27167

//  <rtree> SFDITEM_REG__TIM3_DMAR
//    <name> DMAR </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x4000044C) DMA address for full transfer </i>
//    <loc> ( (unsigned int)((TIM3_DMAR >> 0) & 0xFFFFFFFF), ((TIM3_DMAR = (TIM3_DMAR & ~(0xFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__TIM3_DMAR_DMAB </item>
//  </rtree>
//  


// -----------------------------  Register Item Address: TIM3_OR1  --------------------------------
// SVD Line: 27185

unsigned int TIM3_OR1 __AT (0x40000450);



// -----------------------------  Field Item: TIM3_OR1_IOCREF_CLR  --------------------------------
// SVD Line: 27194

//  <item> SFDITEM_FIELD__TIM3_OR1_IOCREF_CLR
//    <name> IOCREF_CLR </name>
//    <rw> 
//    <i> [Bit 0] RW (@ 0x40000450) IOCREF_CLR </i>
//    <check> 
//      <loc> ( (unsigned int) TIM3_OR1 ) </loc>
//      <o.0..0> IOCREF_CLR
//    </check>
//  </item>
//  


// --------------------------------  Register RTree: TIM3_OR1  ------------------------------------
// SVD Line: 27185

//  <rtree> SFDITEM_REG__TIM3_OR1
//    <name> OR1 </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x40000450) TIM option register </i>
//    <loc> ( (unsigned int)((TIM3_OR1 >> 0) & 0xFFFFFFFF), ((TIM3_OR1 = (TIM3_OR1 & ~(0x1UL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0x1) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__TIM3_OR1_IOCREF_CLR </item>
//  </rtree>
//  


// -----------------------------  Register Item Address: TIM3_AF1  --------------------------------
// SVD Line: 27202

unsigned int TIM3_AF1 __AT (0x40000460);



// -------------------------------  Field Item: TIM3_AF1_ETRSEL  ----------------------------------
// SVD Line: 27212

//  <item> SFDITEM_FIELD__TIM3_AF1_ETRSEL
//    <name> ETRSEL </name>
//    <rw> 
//    <i> [Bits 17..14] RW (@ 0x40000460) External trigger source  selection </i>
//    <edit> 
//      <loc> ( (unsigned char)((TIM3_AF1 >> 14) & 0xF), ((TIM3_AF1 = (TIM3_AF1 & ~(0xFUL << 14 )) | ((unsigned long)(Gui_u8:GuiVal & 0xF) << 14 ) ) )) </loc>
//    </edit>
//  </item>
//  


// --------------------------------  Register RTree: TIM3_AF1  ------------------------------------
// SVD Line: 27202

//  <rtree> SFDITEM_REG__TIM3_AF1
//    <name> AF1 </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x40000460) TIM alternate function option register  1 </i>
//    <loc> ( (unsigned int)((TIM3_AF1 >> 0) & 0xFFFFFFFF), ((TIM3_AF1 = (TIM3_AF1 & ~(0x3C000UL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0x3C000) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__TIM3_AF1_ETRSEL </item>
//  </rtree>
//  


// ----------------------------  Register Item Address: TIM3_TISEL  -------------------------------
// SVD Line: 27221

unsigned int TIM3_TISEL __AT (0x40000468);



// ------------------------------  Field Item: TIM3_TISEL_TI1SEL  ---------------------------------
// SVD Line: 27231

//  <item> SFDITEM_FIELD__TIM3_TISEL_TI1SEL
//    <name> TI1SEL </name>
//    <rw> 
//    <i> [Bits 3..0] RW (@ 0x40000468) TI1SEL </i>
//    <edit> 
//      <loc> ( (unsigned char)((TIM3_TISEL >> 0) & 0xF), ((TIM3_TISEL = (TIM3_TISEL & ~(0xFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ------------------------------  Field Item: TIM3_TISEL_TI2SEL  ---------------------------------
// SVD Line: 27237

//  <item> SFDITEM_FIELD__TIM3_TISEL_TI2SEL
//    <name> TI2SEL </name>
//    <rw> 
//    <i> [Bits 11..8] RW (@ 0x40000468) TI2SEL </i>
//    <edit> 
//      <loc> ( (unsigned char)((TIM3_TISEL >> 8) & 0xF), ((TIM3_TISEL = (TIM3_TISEL & ~(0xFUL << 8 )) | ((unsigned long)(Gui_u8:GuiVal & 0xF) << 8 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -------------------------------  Register RTree: TIM3_TISEL  -----------------------------------
// SVD Line: 27221

//  <rtree> SFDITEM_REG__TIM3_TISEL
//    <name> TISEL </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x40000468) TIM alternate function option register  1 </i>
//    <loc> ( (unsigned int)((TIM3_TISEL >> 0) & 0xFFFFFFFF), ((TIM3_TISEL = (TIM3_TISEL & ~(0xF0FUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xF0F) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__TIM3_TISEL_TI1SEL </item>
//    <item> SFDITEM_FIELD__TIM3_TISEL_TI2SEL </item>
//  </rtree>
//  


// ----------------------------------  Peripheral View: TIM3  -------------------------------------
// SVD Line: 27247

//  <view> TIM3
//    <name> TIM3 </name>
//    <item> SFDITEM_REG__TIM3_CR1 </item>
//    <item> SFDITEM_REG__TIM3_CR2 </item>
//    <item> SFDITEM_REG__TIM3_SMCR </item>
//    <item> SFDITEM_REG__TIM3_DIER </item>
//    <item> SFDITEM_REG__TIM3_SR </item>
//    <item> SFDITEM_REG__TIM3_EGR </item>
//    <item> SFDITEM_REG__TIM3_CCMR1_Output </item>
//    <item> SFDITEM_REG__TIM3_CCMR1_Input </item>
//    <item> SFDITEM_REG__TIM3_CCMR2_Output </item>
//    <item> SFDITEM_REG__TIM3_CCMR2_Input </item>
//    <item> SFDITEM_REG__TIM3_CCER </item>
//    <item> SFDITEM_REG__TIM3_CNT </item>
//    <item> SFDITEM_REG__TIM3_PSC </item>
//    <item> SFDITEM_REG__TIM3_ARR </item>
//    <item> SFDITEM_REG__TIM3_CCR1 </item>
//    <item> SFDITEM_REG__TIM3_CCR2 </item>
//    <item> SFDITEM_REG__TIM3_CCR3 </item>
//    <item> SFDITEM_REG__TIM3_CCR4 </item>
//    <item> SFDITEM_REG__TIM3_DCR </item>
//    <item> SFDITEM_REG__TIM3_DMAR </item>
//    <item> SFDITEM_REG__TIM3_OR1 </item>
//    <item> SFDITEM_REG__TIM3_AF1 </item>
//    <item> SFDITEM_REG__TIM3_TISEL </item>
//  </view>
//  


// ----------------------------  Register Item Address: NVIC_ISER  --------------------------------
// SVD Line: 27263

unsigned int NVIC_ISER __AT (0xE000E100);



// ------------------------------  Field Item: NVIC_ISER_SETENA  ----------------------------------
// SVD Line: 27272

//  <item> SFDITEM_FIELD__NVIC_ISER_SETENA
//    <name> SETENA </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0xE000E100) SETENA </i>
//    <edit> 
//      <loc> ( (unsigned int)((NVIC_ISER >> 0) & 0xFFFFFFFF), ((NVIC_ISER = (NVIC_ISER & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// --------------------------------  Register RTree: NVIC_ISER  -----------------------------------
// SVD Line: 27263

//  <rtree> SFDITEM_REG__NVIC_ISER
//    <name> ISER </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0xE000E100) Interrupt Set Enable Register </i>
//    <loc> ( (unsigned int)((NVIC_ISER >> 0) & 0xFFFFFFFF), ((NVIC_ISER = (NVIC_ISER & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__NVIC_ISER_SETENA </item>
//  </rtree>
//  


// ----------------------------  Register Item Address: NVIC_ICER  --------------------------------
// SVD Line: 27280

unsigned int NVIC_ICER __AT (0xE000E180);



// ------------------------------  Field Item: NVIC_ICER_CLRENA  ----------------------------------
// SVD Line: 27290

//  <item> SFDITEM_FIELD__NVIC_ICER_CLRENA
//    <name> CLRENA </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0xE000E180) CLRENA </i>
//    <edit> 
//      <loc> ( (unsigned int)((NVIC_ICER >> 0) & 0xFFFFFFFF), ((NVIC_ICER = (NVIC_ICER & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// --------------------------------  Register RTree: NVIC_ICER  -----------------------------------
// SVD Line: 27280

//  <rtree> SFDITEM_REG__NVIC_ICER
//    <name> ICER </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0xE000E180) Interrupt Clear Enable  Register </i>
//    <loc> ( (unsigned int)((NVIC_ICER >> 0) & 0xFFFFFFFF), ((NVIC_ICER = (NVIC_ICER & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__NVIC_ICER_CLRENA </item>
//  </rtree>
//  


// ----------------------------  Register Item Address: NVIC_ISPR  --------------------------------
// SVD Line: 27298

unsigned int NVIC_ISPR __AT (0xE000E200);



// ------------------------------  Field Item: NVIC_ISPR_SETPEND  ---------------------------------
// SVD Line: 27307

//  <item> SFDITEM_FIELD__NVIC_ISPR_SETPEND
//    <name> SETPEND </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0xE000E200) SETPEND </i>
//    <edit> 
//      <loc> ( (unsigned int)((NVIC_ISPR >> 0) & 0xFFFFFFFF), ((NVIC_ISPR = (NVIC_ISPR & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// --------------------------------  Register RTree: NVIC_ISPR  -----------------------------------
// SVD Line: 27298

//  <rtree> SFDITEM_REG__NVIC_ISPR
//    <name> ISPR </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0xE000E200) Interrupt Set-Pending Register </i>
//    <loc> ( (unsigned int)((NVIC_ISPR >> 0) & 0xFFFFFFFF), ((NVIC_ISPR = (NVIC_ISPR & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__NVIC_ISPR_SETPEND </item>
//  </rtree>
//  


// ----------------------------  Register Item Address: NVIC_ICPR  --------------------------------
// SVD Line: 27315

unsigned int NVIC_ICPR __AT (0xE000E280);



// ------------------------------  Field Item: NVIC_ICPR_CLRPEND  ---------------------------------
// SVD Line: 27325

//  <item> SFDITEM_FIELD__NVIC_ICPR_CLRPEND
//    <name> CLRPEND </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0xE000E280) CLRPEND </i>
//    <edit> 
//      <loc> ( (unsigned int)((NVIC_ICPR >> 0) & 0xFFFFFFFF), ((NVIC_ICPR = (NVIC_ICPR & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// --------------------------------  Register RTree: NVIC_ICPR  -----------------------------------
// SVD Line: 27315

//  <rtree> SFDITEM_REG__NVIC_ICPR
//    <name> ICPR </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0xE000E280) Interrupt Clear-Pending  Register </i>
//    <loc> ( (unsigned int)((NVIC_ICPR >> 0) & 0xFFFFFFFF), ((NVIC_ICPR = (NVIC_ICPR & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__NVIC_ICPR_CLRPEND </item>
//  </rtree>
//  


// ----------------------------  Register Item Address: NVIC_IPR0  --------------------------------
// SVD Line: 27333

unsigned int NVIC_IPR0 __AT (0xE000E400);



// -------------------------------  Field Item: NVIC_IPR0_PRI_0  ----------------------------------
// SVD Line: 27342

//  <item> SFDITEM_FIELD__NVIC_IPR0_PRI_0
//    <name> PRI_0 </name>
//    <rw> 
//    <i> [Bits 7..0] RW (@ 0xE000E400) priority for interrupt 0 </i>
//    <edit> 
//      <loc> ( (unsigned char)((NVIC_IPR0 >> 0) & 0xFF), ((NVIC_IPR0 = (NVIC_IPR0 & ~(0xFFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -------------------------------  Field Item: NVIC_IPR0_PRI_1  ----------------------------------
// SVD Line: 27348

//  <item> SFDITEM_FIELD__NVIC_IPR0_PRI_1
//    <name> PRI_1 </name>
//    <rw> 
//    <i> [Bits 15..8] RW (@ 0xE000E400) priority for interrupt 1 </i>
//    <edit> 
//      <loc> ( (unsigned char)((NVIC_IPR0 >> 8) & 0xFF), ((NVIC_IPR0 = (NVIC_IPR0 & ~(0xFFUL << 8 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFF) << 8 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -------------------------------  Field Item: NVIC_IPR0_PRI_2  ----------------------------------
// SVD Line: 27354

//  <item> SFDITEM_FIELD__NVIC_IPR0_PRI_2
//    <name> PRI_2 </name>
//    <rw> 
//    <i> [Bits 23..16] RW (@ 0xE000E400) priority for interrupt 2 </i>
//    <edit> 
//      <loc> ( (unsigned char)((NVIC_IPR0 >> 16) & 0xFF), ((NVIC_IPR0 = (NVIC_IPR0 & ~(0xFFUL << 16 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFF) << 16 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -------------------------------  Field Item: NVIC_IPR0_PRI_3  ----------------------------------
// SVD Line: 27360

//  <item> SFDITEM_FIELD__NVIC_IPR0_PRI_3
//    <name> PRI_3 </name>
//    <rw> 
//    <i> [Bits 31..24] RW (@ 0xE000E400) priority for interrupt 3 </i>
//    <edit> 
//      <loc> ( (unsigned char)((NVIC_IPR0 >> 24) & 0xFF), ((NVIC_IPR0 = (NVIC_IPR0 & ~(0xFFUL << 24 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFF) << 24 ) ) )) </loc>
//    </edit>
//  </item>
//  


// --------------------------------  Register RTree: NVIC_IPR0  -----------------------------------
// SVD Line: 27333

//  <rtree> SFDITEM_REG__NVIC_IPR0
//    <name> IPR0 </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0xE000E400) Interrupt Priority Register 0 </i>
//    <loc> ( (unsigned int)((NVIC_IPR0 >> 0) & 0xFFFFFFFF), ((NVIC_IPR0 = (NVIC_IPR0 & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__NVIC_IPR0_PRI_0 </item>
//    <item> SFDITEM_FIELD__NVIC_IPR0_PRI_1 </item>
//    <item> SFDITEM_FIELD__NVIC_IPR0_PRI_2 </item>
//    <item> SFDITEM_FIELD__NVIC_IPR0_PRI_3 </item>
//  </rtree>
//  


// ----------------------------  Register Item Address: NVIC_IPR1  --------------------------------
// SVD Line: 27368

unsigned int NVIC_IPR1 __AT (0xE000E404);



// -------------------------------  Field Item: NVIC_IPR1_PRI_4  ----------------------------------
// SVD Line: 27377

//  <item> SFDITEM_FIELD__NVIC_IPR1_PRI_4
//    <name> PRI_4 </name>
//    <rw> 
//    <i> [Bits 7..0] RW (@ 0xE000E404) priority for interrupt n </i>
//    <edit> 
//      <loc> ( (unsigned char)((NVIC_IPR1 >> 0) & 0xFF), ((NVIC_IPR1 = (NVIC_IPR1 & ~(0xFFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -------------------------------  Field Item: NVIC_IPR1_PRI_5  ----------------------------------
// SVD Line: 27383

//  <item> SFDITEM_FIELD__NVIC_IPR1_PRI_5
//    <name> PRI_5 </name>
//    <rw> 
//    <i> [Bits 15..8] RW (@ 0xE000E404) priority for interrupt n </i>
//    <edit> 
//      <loc> ( (unsigned char)((NVIC_IPR1 >> 8) & 0xFF), ((NVIC_IPR1 = (NVIC_IPR1 & ~(0xFFUL << 8 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFF) << 8 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -------------------------------  Field Item: NVIC_IPR1_PRI_6  ----------------------------------
// SVD Line: 27389

//  <item> SFDITEM_FIELD__NVIC_IPR1_PRI_6
//    <name> PRI_6 </name>
//    <rw> 
//    <i> [Bits 23..16] RW (@ 0xE000E404) priority for interrupt n </i>
//    <edit> 
//      <loc> ( (unsigned char)((NVIC_IPR1 >> 16) & 0xFF), ((NVIC_IPR1 = (NVIC_IPR1 & ~(0xFFUL << 16 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFF) << 16 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -------------------------------  Field Item: NVIC_IPR1_PRI_7  ----------------------------------
// SVD Line: 27395

//  <item> SFDITEM_FIELD__NVIC_IPR1_PRI_7
//    <name> PRI_7 </name>
//    <rw> 
//    <i> [Bits 31..24] RW (@ 0xE000E404) priority for interrupt n </i>
//    <edit> 
//      <loc> ( (unsigned char)((NVIC_IPR1 >> 24) & 0xFF), ((NVIC_IPR1 = (NVIC_IPR1 & ~(0xFFUL << 24 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFF) << 24 ) ) )) </loc>
//    </edit>
//  </item>
//  


// --------------------------------  Register RTree: NVIC_IPR1  -----------------------------------
// SVD Line: 27368

//  <rtree> SFDITEM_REG__NVIC_IPR1
//    <name> IPR1 </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0xE000E404) Interrupt Priority Register 1 </i>
//    <loc> ( (unsigned int)((NVIC_IPR1 >> 0) & 0xFFFFFFFF), ((NVIC_IPR1 = (NVIC_IPR1 & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__NVIC_IPR1_PRI_4 </item>
//    <item> SFDITEM_FIELD__NVIC_IPR1_PRI_5 </item>
//    <item> SFDITEM_FIELD__NVIC_IPR1_PRI_6 </item>
//    <item> SFDITEM_FIELD__NVIC_IPR1_PRI_7 </item>
//  </rtree>
//  


// ----------------------------  Register Item Address: NVIC_IPR2  --------------------------------
// SVD Line: 27403

unsigned int NVIC_IPR2 __AT (0xE000E408);



// -------------------------------  Field Item: NVIC_IPR2_PRI_8  ----------------------------------
// SVD Line: 27412

//  <item> SFDITEM_FIELD__NVIC_IPR2_PRI_8
//    <name> PRI_8 </name>
//    <rw> 
//    <i> [Bits 7..0] RW (@ 0xE000E408) priority for interrupt n </i>
//    <edit> 
//      <loc> ( (unsigned char)((NVIC_IPR2 >> 0) & 0xFF), ((NVIC_IPR2 = (NVIC_IPR2 & ~(0xFFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -------------------------------  Field Item: NVIC_IPR2_PRI_9  ----------------------------------
// SVD Line: 27418

//  <item> SFDITEM_FIELD__NVIC_IPR2_PRI_9
//    <name> PRI_9 </name>
//    <rw> 
//    <i> [Bits 15..8] RW (@ 0xE000E408) priority for interrupt n </i>
//    <edit> 
//      <loc> ( (unsigned char)((NVIC_IPR2 >> 8) & 0xFF), ((NVIC_IPR2 = (NVIC_IPR2 & ~(0xFFUL << 8 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFF) << 8 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ------------------------------  Field Item: NVIC_IPR2_PRI_10  ----------------------------------
// SVD Line: 27424

//  <item> SFDITEM_FIELD__NVIC_IPR2_PRI_10
//    <name> PRI_10 </name>
//    <rw> 
//    <i> [Bits 23..16] RW (@ 0xE000E408) priority for interrupt n </i>
//    <edit> 
//      <loc> ( (unsigned char)((NVIC_IPR2 >> 16) & 0xFF), ((NVIC_IPR2 = (NVIC_IPR2 & ~(0xFFUL << 16 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFF) << 16 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ------------------------------  Field Item: NVIC_IPR2_PRI_11  ----------------------------------
// SVD Line: 27430

//  <item> SFDITEM_FIELD__NVIC_IPR2_PRI_11
//    <name> PRI_11 </name>
//    <rw> 
//    <i> [Bits 31..24] RW (@ 0xE000E408) priority for interrupt n </i>
//    <edit> 
//      <loc> ( (unsigned char)((NVIC_IPR2 >> 24) & 0xFF), ((NVIC_IPR2 = (NVIC_IPR2 & ~(0xFFUL << 24 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFF) << 24 ) ) )) </loc>
//    </edit>
//  </item>
//  


// --------------------------------  Register RTree: NVIC_IPR2  -----------------------------------
// SVD Line: 27403

//  <rtree> SFDITEM_REG__NVIC_IPR2
//    <name> IPR2 </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0xE000E408) Interrupt Priority Register 2 </i>
//    <loc> ( (unsigned int)((NVIC_IPR2 >> 0) & 0xFFFFFFFF), ((NVIC_IPR2 = (NVIC_IPR2 & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__NVIC_IPR2_PRI_8 </item>
//    <item> SFDITEM_FIELD__NVIC_IPR2_PRI_9 </item>
//    <item> SFDITEM_FIELD__NVIC_IPR2_PRI_10 </item>
//    <item> SFDITEM_FIELD__NVIC_IPR2_PRI_11 </item>
//  </rtree>
//  


// ----------------------------  Register Item Address: NVIC_IPR3  --------------------------------
// SVD Line: 27438

unsigned int NVIC_IPR3 __AT (0xE000E40C);



// ------------------------------  Field Item: NVIC_IPR3_PRI_12  ----------------------------------
// SVD Line: 27447

//  <item> SFDITEM_FIELD__NVIC_IPR3_PRI_12
//    <name> PRI_12 </name>
//    <rw> 
//    <i> [Bits 7..0] RW (@ 0xE000E40C) priority for interrupt n </i>
//    <edit> 
//      <loc> ( (unsigned char)((NVIC_IPR3 >> 0) & 0xFF), ((NVIC_IPR3 = (NVIC_IPR3 & ~(0xFFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ------------------------------  Field Item: NVIC_IPR3_PRI_13  ----------------------------------
// SVD Line: 27453

//  <item> SFDITEM_FIELD__NVIC_IPR3_PRI_13
//    <name> PRI_13 </name>
//    <rw> 
//    <i> [Bits 15..8] RW (@ 0xE000E40C) priority for interrupt n </i>
//    <edit> 
//      <loc> ( (unsigned char)((NVIC_IPR3 >> 8) & 0xFF), ((NVIC_IPR3 = (NVIC_IPR3 & ~(0xFFUL << 8 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFF) << 8 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ------------------------------  Field Item: NVIC_IPR3_PRI_14  ----------------------------------
// SVD Line: 27459

//  <item> SFDITEM_FIELD__NVIC_IPR3_PRI_14
//    <name> PRI_14 </name>
//    <rw> 
//    <i> [Bits 23..16] RW (@ 0xE000E40C) priority for interrupt n </i>
//    <edit> 
//      <loc> ( (unsigned char)((NVIC_IPR3 >> 16) & 0xFF), ((NVIC_IPR3 = (NVIC_IPR3 & ~(0xFFUL << 16 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFF) << 16 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ------------------------------  Field Item: NVIC_IPR3_PRI_15  ----------------------------------
// SVD Line: 27465

//  <item> SFDITEM_FIELD__NVIC_IPR3_PRI_15
//    <name> PRI_15 </name>
//    <rw> 
//    <i> [Bits 31..24] RW (@ 0xE000E40C) priority for interrupt n </i>
//    <edit> 
//      <loc> ( (unsigned char)((NVIC_IPR3 >> 24) & 0xFF), ((NVIC_IPR3 = (NVIC_IPR3 & ~(0xFFUL << 24 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFF) << 24 ) ) )) </loc>
//    </edit>
//  </item>
//  


// --------------------------------  Register RTree: NVIC_IPR3  -----------------------------------
// SVD Line: 27438

//  <rtree> SFDITEM_REG__NVIC_IPR3
//    <name> IPR3 </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0xE000E40C) Interrupt Priority Register 3 </i>
//    <loc> ( (unsigned int)((NVIC_IPR3 >> 0) & 0xFFFFFFFF), ((NVIC_IPR3 = (NVIC_IPR3 & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__NVIC_IPR3_PRI_12 </item>
//    <item> SFDITEM_FIELD__NVIC_IPR3_PRI_13 </item>
//    <item> SFDITEM_FIELD__NVIC_IPR3_PRI_14 </item>
//    <item> SFDITEM_FIELD__NVIC_IPR3_PRI_15 </item>
//  </rtree>
//  


// ----------------------------  Register Item Address: NVIC_IPR4  --------------------------------
// SVD Line: 27473

unsigned int NVIC_IPR4 __AT (0xE000E410);



// ------------------------------  Field Item: NVIC_IPR4_PRI_16  ----------------------------------
// SVD Line: 27482

//  <item> SFDITEM_FIELD__NVIC_IPR4_PRI_16
//    <name> PRI_16 </name>
//    <rw> 
//    <i> [Bits 7..0] RW (@ 0xE000E410) priority for interrupt n </i>
//    <edit> 
//      <loc> ( (unsigned char)((NVIC_IPR4 >> 0) & 0xFF), ((NVIC_IPR4 = (NVIC_IPR4 & ~(0xFFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ------------------------------  Field Item: NVIC_IPR4_PRI_17  ----------------------------------
// SVD Line: 27488

//  <item> SFDITEM_FIELD__NVIC_IPR4_PRI_17
//    <name> PRI_17 </name>
//    <rw> 
//    <i> [Bits 15..8] RW (@ 0xE000E410) priority for interrupt n </i>
//    <edit> 
//      <loc> ( (unsigned char)((NVIC_IPR4 >> 8) & 0xFF), ((NVIC_IPR4 = (NVIC_IPR4 & ~(0xFFUL << 8 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFF) << 8 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ------------------------------  Field Item: NVIC_IPR4_PRI_18  ----------------------------------
// SVD Line: 27494

//  <item> SFDITEM_FIELD__NVIC_IPR4_PRI_18
//    <name> PRI_18 </name>
//    <rw> 
//    <i> [Bits 23..16] RW (@ 0xE000E410) priority for interrupt n </i>
//    <edit> 
//      <loc> ( (unsigned char)((NVIC_IPR4 >> 16) & 0xFF), ((NVIC_IPR4 = (NVIC_IPR4 & ~(0xFFUL << 16 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFF) << 16 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ------------------------------  Field Item: NVIC_IPR4_PRI_19  ----------------------------------
// SVD Line: 27500

//  <item> SFDITEM_FIELD__NVIC_IPR4_PRI_19
//    <name> PRI_19 </name>
//    <rw> 
//    <i> [Bits 31..24] RW (@ 0xE000E410) priority for interrupt n </i>
//    <edit> 
//      <loc> ( (unsigned char)((NVIC_IPR4 >> 24) & 0xFF), ((NVIC_IPR4 = (NVIC_IPR4 & ~(0xFFUL << 24 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFF) << 24 ) ) )) </loc>
//    </edit>
//  </item>
//  


// --------------------------------  Register RTree: NVIC_IPR4  -----------------------------------
// SVD Line: 27473

//  <rtree> SFDITEM_REG__NVIC_IPR4
//    <name> IPR4 </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0xE000E410) Interrupt Priority Register 4 </i>
//    <loc> ( (unsigned int)((NVIC_IPR4 >> 0) & 0xFFFFFFFF), ((NVIC_IPR4 = (NVIC_IPR4 & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__NVIC_IPR4_PRI_16 </item>
//    <item> SFDITEM_FIELD__NVIC_IPR4_PRI_17 </item>
//    <item> SFDITEM_FIELD__NVIC_IPR4_PRI_18 </item>
//    <item> SFDITEM_FIELD__NVIC_IPR4_PRI_19 </item>
//  </rtree>
//  


// ----------------------------  Register Item Address: NVIC_IPR5  --------------------------------
// SVD Line: 27508

unsigned int NVIC_IPR5 __AT (0xE000E414);



// ------------------------------  Field Item: NVIC_IPR5_PRI_20  ----------------------------------
// SVD Line: 27517

//  <item> SFDITEM_FIELD__NVIC_IPR5_PRI_20
//    <name> PRI_20 </name>
//    <rw> 
//    <i> [Bits 7..0] RW (@ 0xE000E414) priority for interrupt n </i>
//    <edit> 
//      <loc> ( (unsigned char)((NVIC_IPR5 >> 0) & 0xFF), ((NVIC_IPR5 = (NVIC_IPR5 & ~(0xFFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ------------------------------  Field Item: NVIC_IPR5_PRI_21  ----------------------------------
// SVD Line: 27523

//  <item> SFDITEM_FIELD__NVIC_IPR5_PRI_21
//    <name> PRI_21 </name>
//    <rw> 
//    <i> [Bits 15..8] RW (@ 0xE000E414) priority for interrupt n </i>
//    <edit> 
//      <loc> ( (unsigned char)((NVIC_IPR5 >> 8) & 0xFF), ((NVIC_IPR5 = (NVIC_IPR5 & ~(0xFFUL << 8 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFF) << 8 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ------------------------------  Field Item: NVIC_IPR5_PRI_22  ----------------------------------
// SVD Line: 27529

//  <item> SFDITEM_FIELD__NVIC_IPR5_PRI_22
//    <name> PRI_22 </name>
//    <rw> 
//    <i> [Bits 23..16] RW (@ 0xE000E414) priority for interrupt n </i>
//    <edit> 
//      <loc> ( (unsigned char)((NVIC_IPR5 >> 16) & 0xFF), ((NVIC_IPR5 = (NVIC_IPR5 & ~(0xFFUL << 16 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFF) << 16 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ------------------------------  Field Item: NVIC_IPR5_PRI_23  ----------------------------------
// SVD Line: 27535

//  <item> SFDITEM_FIELD__NVIC_IPR5_PRI_23
//    <name> PRI_23 </name>
//    <rw> 
//    <i> [Bits 31..24] RW (@ 0xE000E414) priority for interrupt n </i>
//    <edit> 
//      <loc> ( (unsigned char)((NVIC_IPR5 >> 24) & 0xFF), ((NVIC_IPR5 = (NVIC_IPR5 & ~(0xFFUL << 24 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFF) << 24 ) ) )) </loc>
//    </edit>
//  </item>
//  


// --------------------------------  Register RTree: NVIC_IPR5  -----------------------------------
// SVD Line: 27508

//  <rtree> SFDITEM_REG__NVIC_IPR5
//    <name> IPR5 </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0xE000E414) Interrupt Priority Register 5 </i>
//    <loc> ( (unsigned int)((NVIC_IPR5 >> 0) & 0xFFFFFFFF), ((NVIC_IPR5 = (NVIC_IPR5 & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__NVIC_IPR5_PRI_20 </item>
//    <item> SFDITEM_FIELD__NVIC_IPR5_PRI_21 </item>
//    <item> SFDITEM_FIELD__NVIC_IPR5_PRI_22 </item>
//    <item> SFDITEM_FIELD__NVIC_IPR5_PRI_23 </item>
//  </rtree>
//  


// ----------------------------  Register Item Address: NVIC_IPR6  --------------------------------
// SVD Line: 27543

unsigned int NVIC_IPR6 __AT (0xE000E418);



// ------------------------------  Field Item: NVIC_IPR6_PRI_24  ----------------------------------
// SVD Line: 27552

//  <item> SFDITEM_FIELD__NVIC_IPR6_PRI_24
//    <name> PRI_24 </name>
//    <rw> 
//    <i> [Bits 7..0] RW (@ 0xE000E418) priority for interrupt n </i>
//    <edit> 
//      <loc> ( (unsigned char)((NVIC_IPR6 >> 0) & 0xFF), ((NVIC_IPR6 = (NVIC_IPR6 & ~(0xFFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ------------------------------  Field Item: NVIC_IPR6_PRI_25  ----------------------------------
// SVD Line: 27558

//  <item> SFDITEM_FIELD__NVIC_IPR6_PRI_25
//    <name> PRI_25 </name>
//    <rw> 
//    <i> [Bits 15..8] RW (@ 0xE000E418) priority for interrupt n </i>
//    <edit> 
//      <loc> ( (unsigned char)((NVIC_IPR6 >> 8) & 0xFF), ((NVIC_IPR6 = (NVIC_IPR6 & ~(0xFFUL << 8 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFF) << 8 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ------------------------------  Field Item: NVIC_IPR6_PRI_26  ----------------------------------
// SVD Line: 27564

//  <item> SFDITEM_FIELD__NVIC_IPR6_PRI_26
//    <name> PRI_26 </name>
//    <rw> 
//    <i> [Bits 23..16] RW (@ 0xE000E418) priority for interrupt n </i>
//    <edit> 
//      <loc> ( (unsigned char)((NVIC_IPR6 >> 16) & 0xFF), ((NVIC_IPR6 = (NVIC_IPR6 & ~(0xFFUL << 16 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFF) << 16 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ------------------------------  Field Item: NVIC_IPR6_PRI_27  ----------------------------------
// SVD Line: 27570

//  <item> SFDITEM_FIELD__NVIC_IPR6_PRI_27
//    <name> PRI_27 </name>
//    <rw> 
//    <i> [Bits 31..24] RW (@ 0xE000E418) priority for interrupt n </i>
//    <edit> 
//      <loc> ( (unsigned char)((NVIC_IPR6 >> 24) & 0xFF), ((NVIC_IPR6 = (NVIC_IPR6 & ~(0xFFUL << 24 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFF) << 24 ) ) )) </loc>
//    </edit>
//  </item>
//  


// --------------------------------  Register RTree: NVIC_IPR6  -----------------------------------
// SVD Line: 27543

//  <rtree> SFDITEM_REG__NVIC_IPR6
//    <name> IPR6 </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0xE000E418) Interrupt Priority Register 6 </i>
//    <loc> ( (unsigned int)((NVIC_IPR6 >> 0) & 0xFFFFFFFF), ((NVIC_IPR6 = (NVIC_IPR6 & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__NVIC_IPR6_PRI_24 </item>
//    <item> SFDITEM_FIELD__NVIC_IPR6_PRI_25 </item>
//    <item> SFDITEM_FIELD__NVIC_IPR6_PRI_26 </item>
//    <item> SFDITEM_FIELD__NVIC_IPR6_PRI_27 </item>
//  </rtree>
//  


// ----------------------------  Register Item Address: NVIC_IPR7  --------------------------------
// SVD Line: 27578

unsigned int NVIC_IPR7 __AT (0xE000E41C);



// ------------------------------  Field Item: NVIC_IPR7_PRI_28  ----------------------------------
// SVD Line: 27587

//  <item> SFDITEM_FIELD__NVIC_IPR7_PRI_28
//    <name> PRI_28 </name>
//    <rw> 
//    <i> [Bits 7..0] RW (@ 0xE000E41C) priority for interrupt n </i>
//    <edit> 
//      <loc> ( (unsigned char)((NVIC_IPR7 >> 0) & 0xFF), ((NVIC_IPR7 = (NVIC_IPR7 & ~(0xFFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ------------------------------  Field Item: NVIC_IPR7_PRI_29  ----------------------------------
// SVD Line: 27593

//  <item> SFDITEM_FIELD__NVIC_IPR7_PRI_29
//    <name> PRI_29 </name>
//    <rw> 
//    <i> [Bits 15..8] RW (@ 0xE000E41C) priority for interrupt n </i>
//    <edit> 
//      <loc> ( (unsigned char)((NVIC_IPR7 >> 8) & 0xFF), ((NVIC_IPR7 = (NVIC_IPR7 & ~(0xFFUL << 8 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFF) << 8 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ------------------------------  Field Item: NVIC_IPR7_PRI_30  ----------------------------------
// SVD Line: 27599

//  <item> SFDITEM_FIELD__NVIC_IPR7_PRI_30
//    <name> PRI_30 </name>
//    <rw> 
//    <i> [Bits 23..16] RW (@ 0xE000E41C) priority for interrupt n </i>
//    <edit> 
//      <loc> ( (unsigned char)((NVIC_IPR7 >> 16) & 0xFF), ((NVIC_IPR7 = (NVIC_IPR7 & ~(0xFFUL << 16 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFF) << 16 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ------------------------------  Field Item: NVIC_IPR7_PRI_31  ----------------------------------
// SVD Line: 27605

//  <item> SFDITEM_FIELD__NVIC_IPR7_PRI_31
//    <name> PRI_31 </name>
//    <rw> 
//    <i> [Bits 31..24] RW (@ 0xE000E41C) priority for interrupt n </i>
//    <edit> 
//      <loc> ( (unsigned char)((NVIC_IPR7 >> 24) & 0xFF), ((NVIC_IPR7 = (NVIC_IPR7 & ~(0xFFUL << 24 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFF) << 24 ) ) )) </loc>
//    </edit>
//  </item>
//  


// --------------------------------  Register RTree: NVIC_IPR7  -----------------------------------
// SVD Line: 27578

//  <rtree> SFDITEM_REG__NVIC_IPR7
//    <name> IPR7 </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0xE000E41C) Interrupt Priority Register 7 </i>
//    <loc> ( (unsigned int)((NVIC_IPR7 >> 0) & 0xFFFFFFFF), ((NVIC_IPR7 = (NVIC_IPR7 & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__NVIC_IPR7_PRI_28 </item>
//    <item> SFDITEM_FIELD__NVIC_IPR7_PRI_29 </item>
//    <item> SFDITEM_FIELD__NVIC_IPR7_PRI_30 </item>
//    <item> SFDITEM_FIELD__NVIC_IPR7_PRI_31 </item>
//  </rtree>
//  


// ----------------------------------  Peripheral View: NVIC  -------------------------------------
// SVD Line: 27251

//  <view> NVIC
//    <name> NVIC </name>
//    <item> SFDITEM_REG__NVIC_ISER </item>
//    <item> SFDITEM_REG__NVIC_ICER </item>
//    <item> SFDITEM_REG__NVIC_ISPR </item>
//    <item> SFDITEM_REG__NVIC_ICPR </item>
//    <item> SFDITEM_REG__NVIC_IPR0 </item>
//    <item> SFDITEM_REG__NVIC_IPR1 </item>
//    <item> SFDITEM_REG__NVIC_IPR2 </item>
//    <item> SFDITEM_REG__NVIC_IPR3 </item>
//    <item> SFDITEM_REG__NVIC_IPR4 </item>
//    <item> SFDITEM_REG__NVIC_IPR5 </item>
//    <item> SFDITEM_REG__NVIC_IPR6 </item>
//    <item> SFDITEM_REG__NVIC_IPR7 </item>
//  </view>
//  


// --------------------------  Register Item Address: MPU_MPU_TYPER  ------------------------------
// SVD Line: 27626

unsigned int MPU_MPU_TYPER __AT (0xE000ED90);



// ---------------------------  Field Item: MPU_MPU_TYPER_SEPARATE  -------------------------------
// SVD Line: 27635

//  <item> SFDITEM_FIELD__MPU_MPU_TYPER_SEPARATE
//    <name> SEPARATE </name>
//    <r> 
//    <i> [Bit 0] RO (@ 0xE000ED90) Separate flag </i>
//    <check> 
//      <loc> ( (unsigned int) MPU_MPU_TYPER ) </loc>
//      <o.0..0> SEPARATE
//    </check>
//  </item>
//  


// ----------------------------  Field Item: MPU_MPU_TYPER_DREGION  -------------------------------
// SVD Line: 27641

//  <item> SFDITEM_FIELD__MPU_MPU_TYPER_DREGION
//    <name> DREGION </name>
//    <r> 
//    <i> [Bits 15..8] RO (@ 0xE000ED90) Number of MPU data regions </i>
//    <edit> 
//      <loc> ( (unsigned char)((MPU_MPU_TYPER >> 8) & 0xFF) ) </loc>
//    </edit>
//  </item>
//  


// ----------------------------  Field Item: MPU_MPU_TYPER_IREGION  -------------------------------
// SVD Line: 27647

//  <item> SFDITEM_FIELD__MPU_MPU_TYPER_IREGION
//    <name> IREGION </name>
//    <r> 
//    <i> [Bits 23..16] RO (@ 0xE000ED90) Number of MPU instruction  regions </i>
//    <edit> 
//      <loc> ( (unsigned char)((MPU_MPU_TYPER >> 16) & 0xFF) ) </loc>
//    </edit>
//  </item>
//  


// ------------------------------  Register RTree: MPU_MPU_TYPER  ---------------------------------
// SVD Line: 27626

//  <rtree> SFDITEM_REG__MPU_MPU_TYPER
//    <name> MPU_TYPER </name>
//    <r> 
//    <i> [Bits 31..0] RO (@ 0xE000ED90) MPU type register </i>
//    <loc> ( (unsigned int)((MPU_MPU_TYPER >> 0) & 0xFFFFFFFF) ) </loc>
//    <item> SFDITEM_FIELD__MPU_MPU_TYPER_SEPARATE </item>
//    <item> SFDITEM_FIELD__MPU_MPU_TYPER_DREGION </item>
//    <item> SFDITEM_FIELD__MPU_MPU_TYPER_IREGION </item>
//  </rtree>
//  


// ---------------------------  Register Item Address: MPU_MPU_CTRL  ------------------------------
// SVD Line: 27656

unsigned int MPU_MPU_CTRL __AT (0xE000ED94);



// -----------------------------  Field Item: MPU_MPU_CTRL_ENABLE  --------------------------------
// SVD Line: 27665

//  <item> SFDITEM_FIELD__MPU_MPU_CTRL_ENABLE
//    <name> ENABLE </name>
//    <r> 
//    <i> [Bit 0] RO (@ 0xE000ED94) Enables the MPU </i>
//    <check> 
//      <loc> ( (unsigned int) MPU_MPU_CTRL ) </loc>
//      <o.0..0> ENABLE
//    </check>
//  </item>
//  


// ----------------------------  Field Item: MPU_MPU_CTRL_HFNMIENA  -------------------------------
// SVD Line: 27671

//  <item> SFDITEM_FIELD__MPU_MPU_CTRL_HFNMIENA
//    <name> HFNMIENA </name>
//    <r> 
//    <i> [Bit 1] RO (@ 0xE000ED94) Enables the operation of MPU during hard  fault </i>
//    <check> 
//      <loc> ( (unsigned int) MPU_MPU_CTRL ) </loc>
//      <o.1..1> HFNMIENA
//    </check>
//  </item>
//  


// ---------------------------  Field Item: MPU_MPU_CTRL_PRIVDEFENA  ------------------------------
// SVD Line: 27678

//  <item> SFDITEM_FIELD__MPU_MPU_CTRL_PRIVDEFENA
//    <name> PRIVDEFENA </name>
//    <r> 
//    <i> [Bit 2] RO (@ 0xE000ED94) Enable priviliged software access to  default memory map </i>
//    <check> 
//      <loc> ( (unsigned int) MPU_MPU_CTRL ) </loc>
//      <o.2..2> PRIVDEFENA
//    </check>
//  </item>
//  


// ------------------------------  Register RTree: MPU_MPU_CTRL  ----------------------------------
// SVD Line: 27656

//  <rtree> SFDITEM_REG__MPU_MPU_CTRL
//    <name> MPU_CTRL </name>
//    <r> 
//    <i> [Bits 31..0] RO (@ 0xE000ED94) MPU control register </i>
//    <loc> ( (unsigned int)((MPU_MPU_CTRL >> 0) & 0xFFFFFFFF) ) </loc>
//    <item> SFDITEM_FIELD__MPU_MPU_CTRL_ENABLE </item>
//    <item> SFDITEM_FIELD__MPU_MPU_CTRL_HFNMIENA </item>
//    <item> SFDITEM_FIELD__MPU_MPU_CTRL_PRIVDEFENA </item>
//  </rtree>
//  


// ---------------------------  Register Item Address: MPU_MPU_RNR  -------------------------------
// SVD Line: 27687

unsigned int MPU_MPU_RNR __AT (0xE000ED98);



// -----------------------------  Field Item: MPU_MPU_RNR_REGION  ---------------------------------
// SVD Line: 27696

//  <item> SFDITEM_FIELD__MPU_MPU_RNR_REGION
//    <name> REGION </name>
//    <rw> 
//    <i> [Bits 7..0] RW (@ 0xE000ED98) MPU region </i>
//    <edit> 
//      <loc> ( (unsigned char)((MPU_MPU_RNR >> 0) & 0xFF), ((MPU_MPU_RNR = (MPU_MPU_RNR & ~(0xFFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -------------------------------  Register RTree: MPU_MPU_RNR  ----------------------------------
// SVD Line: 27687

//  <rtree> SFDITEM_REG__MPU_MPU_RNR
//    <name> MPU_RNR </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0xE000ED98) MPU region number register </i>
//    <loc> ( (unsigned int)((MPU_MPU_RNR >> 0) & 0xFFFFFFFF), ((MPU_MPU_RNR = (MPU_MPU_RNR & ~(0xFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__MPU_MPU_RNR_REGION </item>
//  </rtree>
//  


// ---------------------------  Register Item Address: MPU_MPU_RBAR  ------------------------------
// SVD Line: 27704

unsigned int MPU_MPU_RBAR __AT (0xE000ED9C);



// -----------------------------  Field Item: MPU_MPU_RBAR_REGION  --------------------------------
// SVD Line: 27714

//  <item> SFDITEM_FIELD__MPU_MPU_RBAR_REGION
//    <name> REGION </name>
//    <rw> 
//    <i> [Bits 3..0] RW (@ 0xE000ED9C) MPU region field </i>
//    <edit> 
//      <loc> ( (unsigned char)((MPU_MPU_RBAR >> 0) & 0xF), ((MPU_MPU_RBAR = (MPU_MPU_RBAR & ~(0xFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -----------------------------  Field Item: MPU_MPU_RBAR_VALID  ---------------------------------
// SVD Line: 27720

//  <item> SFDITEM_FIELD__MPU_MPU_RBAR_VALID
//    <name> VALID </name>
//    <rw> 
//    <i> [Bit 4] RW (@ 0xE000ED9C) MPU region number valid </i>
//    <check> 
//      <loc> ( (unsigned int) MPU_MPU_RBAR ) </loc>
//      <o.4..4> VALID
//    </check>
//  </item>
//  


// ------------------------------  Field Item: MPU_MPU_RBAR_ADDR  ---------------------------------
// SVD Line: 27726

//  <item> SFDITEM_FIELD__MPU_MPU_RBAR_ADDR
//    <name> ADDR </name>
//    <rw> 
//    <i> [Bits 31..5] RW (@ 0xE000ED9C) Region base address field </i>
//    <edit> 
//      <loc> ( (unsigned int)((MPU_MPU_RBAR >> 5) & 0x7FFFFFF), ((MPU_MPU_RBAR = (MPU_MPU_RBAR & ~(0x7FFFFFFUL << 5 )) | ((unsigned long)(Gui_u32:GuiVal & 0x7FFFFFF) << 5 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ------------------------------  Register RTree: MPU_MPU_RBAR  ----------------------------------
// SVD Line: 27704

//  <rtree> SFDITEM_REG__MPU_MPU_RBAR
//    <name> MPU_RBAR </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0xE000ED9C) MPU region base address  register </i>
//    <loc> ( (unsigned int)((MPU_MPU_RBAR >> 0) & 0xFFFFFFFF), ((MPU_MPU_RBAR = (MPU_MPU_RBAR & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__MPU_MPU_RBAR_REGION </item>
//    <item> SFDITEM_FIELD__MPU_MPU_RBAR_VALID </item>
//    <item> SFDITEM_FIELD__MPU_MPU_RBAR_ADDR </item>
//  </rtree>
//  


// ---------------------------  Register Item Address: MPU_MPU_RASR  ------------------------------
// SVD Line: 27734

unsigned int MPU_MPU_RASR __AT (0xE000EDA0);



// -----------------------------  Field Item: MPU_MPU_RASR_ENABLE  --------------------------------
// SVD Line: 27744

//  <item> SFDITEM_FIELD__MPU_MPU_RASR_ENABLE
//    <name> ENABLE </name>
//    <rw> 
//    <i> [Bit 0] RW (@ 0xE000EDA0) Region enable bit. </i>
//    <check> 
//      <loc> ( (unsigned int) MPU_MPU_RASR ) </loc>
//      <o.0..0> ENABLE
//    </check>
//  </item>
//  


// ------------------------------  Field Item: MPU_MPU_RASR_SIZE  ---------------------------------
// SVD Line: 27750

//  <item> SFDITEM_FIELD__MPU_MPU_RASR_SIZE
//    <name> SIZE </name>
//    <rw> 
//    <i> [Bits 5..1] RW (@ 0xE000EDA0) Size of the MPU protection  region </i>
//    <edit> 
//      <loc> ( (unsigned char)((MPU_MPU_RASR >> 1) & 0x1F), ((MPU_MPU_RASR = (MPU_MPU_RASR & ~(0x1FUL << 1 )) | ((unsigned long)(Gui_u8:GuiVal & 0x1F) << 1 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ------------------------------  Field Item: MPU_MPU_RASR_SRD  ----------------------------------
// SVD Line: 27757

//  <item> SFDITEM_FIELD__MPU_MPU_RASR_SRD
//    <name> SRD </name>
//    <rw> 
//    <i> [Bits 15..8] RW (@ 0xE000EDA0) Subregion disable bits </i>
//    <edit> 
//      <loc> ( (unsigned char)((MPU_MPU_RASR >> 8) & 0xFF), ((MPU_MPU_RASR = (MPU_MPU_RASR & ~(0xFFUL << 8 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFF) << 8 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -------------------------------  Field Item: MPU_MPU_RASR_B  -----------------------------------
// SVD Line: 27763

//  <item> SFDITEM_FIELD__MPU_MPU_RASR_B
//    <name> B </name>
//    <rw> 
//    <i> [Bit 16] RW (@ 0xE000EDA0) memory attribute </i>
//    <check> 
//      <loc> ( (unsigned int) MPU_MPU_RASR ) </loc>
//      <o.16..16> B
//    </check>
//  </item>
//  


// -------------------------------  Field Item: MPU_MPU_RASR_C  -----------------------------------
// SVD Line: 27769

//  <item> SFDITEM_FIELD__MPU_MPU_RASR_C
//    <name> C </name>
//    <rw> 
//    <i> [Bit 17] RW (@ 0xE000EDA0) memory attribute </i>
//    <check> 
//      <loc> ( (unsigned int) MPU_MPU_RASR ) </loc>
//      <o.17..17> C
//    </check>
//  </item>
//  


// -------------------------------  Field Item: MPU_MPU_RASR_S  -----------------------------------
// SVD Line: 27775

//  <item> SFDITEM_FIELD__MPU_MPU_RASR_S
//    <name> S </name>
//    <rw> 
//    <i> [Bit 18] RW (@ 0xE000EDA0) Shareable memory attribute </i>
//    <check> 
//      <loc> ( (unsigned int) MPU_MPU_RASR ) </loc>
//      <o.18..18> S
//    </check>
//  </item>
//  


// ------------------------------  Field Item: MPU_MPU_RASR_TEX  ----------------------------------
// SVD Line: 27781

//  <item> SFDITEM_FIELD__MPU_MPU_RASR_TEX
//    <name> TEX </name>
//    <rw> 
//    <i> [Bits 21..19] RW (@ 0xE000EDA0) memory attribute </i>
//    <edit> 
//      <loc> ( (unsigned char)((MPU_MPU_RASR >> 19) & 0x7), ((MPU_MPU_RASR = (MPU_MPU_RASR & ~(0x7UL << 19 )) | ((unsigned long)(Gui_u8:GuiVal & 0x7) << 19 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -------------------------------  Field Item: MPU_MPU_RASR_AP  ----------------------------------
// SVD Line: 27787

//  <item> SFDITEM_FIELD__MPU_MPU_RASR_AP
//    <name> AP </name>
//    <rw> 
//    <i> [Bits 26..24] RW (@ 0xE000EDA0) Access permission </i>
//    <edit> 
//      <loc> ( (unsigned char)((MPU_MPU_RASR >> 24) & 0x7), ((MPU_MPU_RASR = (MPU_MPU_RASR & ~(0x7UL << 24 )) | ((unsigned long)(Gui_u8:GuiVal & 0x7) << 24 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -------------------------------  Field Item: MPU_MPU_RASR_XN  ----------------------------------
// SVD Line: 27793

//  <item> SFDITEM_FIELD__MPU_MPU_RASR_XN
//    <name> XN </name>
//    <rw> 
//    <i> [Bit 28] RW (@ 0xE000EDA0) Instruction access disable  bit </i>
//    <check> 
//      <loc> ( (unsigned int) MPU_MPU_RASR ) </loc>
//      <o.28..28> XN
//    </check>
//  </item>
//  


// ------------------------------  Register RTree: MPU_MPU_RASR  ----------------------------------
// SVD Line: 27734

//  <rtree> SFDITEM_REG__MPU_MPU_RASR
//    <name> MPU_RASR </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0xE000EDA0) MPU region attribute and size  register </i>
//    <loc> ( (unsigned int)((MPU_MPU_RASR >> 0) & 0xFFFFFFFF), ((MPU_MPU_RASR = (MPU_MPU_RASR & ~(0x173FFF3FUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0x173FFF3F) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__MPU_MPU_RASR_ENABLE </item>
//    <item> SFDITEM_FIELD__MPU_MPU_RASR_SIZE </item>
//    <item> SFDITEM_FIELD__MPU_MPU_RASR_SRD </item>
//    <item> SFDITEM_FIELD__MPU_MPU_RASR_B </item>
//    <item> SFDITEM_FIELD__MPU_MPU_RASR_C </item>
//    <item> SFDITEM_FIELD__MPU_MPU_RASR_S </item>
//    <item> SFDITEM_FIELD__MPU_MPU_RASR_TEX </item>
//    <item> SFDITEM_FIELD__MPU_MPU_RASR_AP </item>
//    <item> SFDITEM_FIELD__MPU_MPU_RASR_XN </item>
//  </rtree>
//  


// ----------------------------------  Peripheral View: MPU  --------------------------------------
// SVD Line: 27615

//  <view> MPU
//    <name> MPU </name>
//    <item> SFDITEM_REG__MPU_MPU_TYPER </item>
//    <item> SFDITEM_REG__MPU_MPU_CTRL </item>
//    <item> SFDITEM_REG__MPU_MPU_RNR </item>
//    <item> SFDITEM_REG__MPU_MPU_RBAR </item>
//    <item> SFDITEM_REG__MPU_MPU_RASR </item>
//  </view>
//  


// -----------------------------  Register Item Address: STK_CSR  ---------------------------------
// SVD Line: 27815

unsigned int STK_CSR __AT (0xE000E010);



// -------------------------------  Field Item: STK_CSR_ENABLE  -----------------------------------
// SVD Line: 27825

//  <item> SFDITEM_FIELD__STK_CSR_ENABLE
//    <name> ENABLE </name>
//    <rw> 
//    <i> [Bit 0] RW (@ 0xE000E010) Counter enable </i>
//    <check> 
//      <loc> ( (unsigned int) STK_CSR ) </loc>
//      <o.0..0> ENABLE
//    </check>
//  </item>
//  


// -------------------------------  Field Item: STK_CSR_TICKINT  ----------------------------------
// SVD Line: 27831

//  <item> SFDITEM_FIELD__STK_CSR_TICKINT
//    <name> TICKINT </name>
//    <rw> 
//    <i> [Bit 1] RW (@ 0xE000E010) SysTick exception request  enable </i>
//    <check> 
//      <loc> ( (unsigned int) STK_CSR ) </loc>
//      <o.1..1> TICKINT
//    </check>
//  </item>
//  


// ------------------------------  Field Item: STK_CSR_CLKSOURCE  ---------------------------------
// SVD Line: 27838

//  <item> SFDITEM_FIELD__STK_CSR_CLKSOURCE
//    <name> CLKSOURCE </name>
//    <rw> 
//    <i> [Bit 2] RW (@ 0xE000E010) Clock source selection </i>
//    <check> 
//      <loc> ( (unsigned int) STK_CSR ) </loc>
//      <o.2..2> CLKSOURCE
//    </check>
//  </item>
//  


// ------------------------------  Field Item: STK_CSR_COUNTFLAG  ---------------------------------
// SVD Line: 27844

//  <item> SFDITEM_FIELD__STK_CSR_COUNTFLAG
//    <name> COUNTFLAG </name>
//    <rw> 
//    <i> [Bit 16] RW (@ 0xE000E010) COUNTFLAG </i>
//    <check> 
//      <loc> ( (unsigned int) STK_CSR ) </loc>
//      <o.16..16> COUNTFLAG
//    </check>
//  </item>
//  


// ---------------------------------  Register RTree: STK_CSR  ------------------------------------
// SVD Line: 27815

//  <rtree> SFDITEM_REG__STK_CSR
//    <name> CSR </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0xE000E010) SysTick control and status  register </i>
//    <loc> ( (unsigned int)((STK_CSR >> 0) & 0xFFFFFFFF), ((STK_CSR = (STK_CSR & ~(0x10007UL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0x10007) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__STK_CSR_ENABLE </item>
//    <item> SFDITEM_FIELD__STK_CSR_TICKINT </item>
//    <item> SFDITEM_FIELD__STK_CSR_CLKSOURCE </item>
//    <item> SFDITEM_FIELD__STK_CSR_COUNTFLAG </item>
//  </rtree>
//  


// -----------------------------  Register Item Address: STK_RVR  ---------------------------------
// SVD Line: 27852

unsigned int STK_RVR __AT (0xE000E014);



// -------------------------------  Field Item: STK_RVR_RELOAD  -----------------------------------
// SVD Line: 27861

//  <item> SFDITEM_FIELD__STK_RVR_RELOAD
//    <name> RELOAD </name>
//    <rw> 
//    <i> [Bits 23..0] RW (@ 0xE000E014) RELOAD value </i>
//    <edit> 
//      <loc> ( (unsigned int)((STK_RVR >> 0) & 0xFFFFFF), ((STK_RVR = (STK_RVR & ~(0xFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ---------------------------------  Register RTree: STK_RVR  ------------------------------------
// SVD Line: 27852

//  <rtree> SFDITEM_REG__STK_RVR
//    <name> RVR </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0xE000E014) SysTick reload value register </i>
//    <loc> ( (unsigned int)((STK_RVR >> 0) & 0xFFFFFFFF), ((STK_RVR = (STK_RVR & ~(0xFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__STK_RVR_RELOAD </item>
//  </rtree>
//  


// -----------------------------  Register Item Address: STK_CVR  ---------------------------------
// SVD Line: 27869

unsigned int STK_CVR __AT (0xE000E018);



// -------------------------------  Field Item: STK_CVR_CURRENT  ----------------------------------
// SVD Line: 27878

//  <item> SFDITEM_FIELD__STK_CVR_CURRENT
//    <name> CURRENT </name>
//    <rw> 
//    <i> [Bits 23..0] RW (@ 0xE000E018) Current counter value </i>
//    <edit> 
//      <loc> ( (unsigned int)((STK_CVR >> 0) & 0xFFFFFF), ((STK_CVR = (STK_CVR & ~(0xFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ---------------------------------  Register RTree: STK_CVR  ------------------------------------
// SVD Line: 27869

//  <rtree> SFDITEM_REG__STK_CVR
//    <name> CVR </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0xE000E018) SysTick current value register </i>
//    <loc> ( (unsigned int)((STK_CVR >> 0) & 0xFFFFFFFF), ((STK_CVR = (STK_CVR & ~(0xFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__STK_CVR_CURRENT </item>
//  </rtree>
//  


// ----------------------------  Register Item Address: STK_CALIB  --------------------------------
// SVD Line: 27886

unsigned int STK_CALIB __AT (0xE000E01C);



// -------------------------------  Field Item: STK_CALIB_TENMS  ----------------------------------
// SVD Line: 27896

//  <item> SFDITEM_FIELD__STK_CALIB_TENMS
//    <name> TENMS </name>
//    <rw> 
//    <i> [Bits 23..0] RW (@ 0xE000E01C) Calibration value </i>
//    <edit> 
//      <loc> ( (unsigned int)((STK_CALIB >> 0) & 0xFFFFFF), ((STK_CALIB = (STK_CALIB & ~(0xFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -------------------------------  Field Item: STK_CALIB_SKEW  -----------------------------------
// SVD Line: 27902

//  <item> SFDITEM_FIELD__STK_CALIB_SKEW
//    <name> SKEW </name>
//    <rw> 
//    <i> [Bit 30] RW (@ 0xE000E01C) SKEW flag: Indicates whether the TENMS  value is exact </i>
//    <check> 
//      <loc> ( (unsigned int) STK_CALIB ) </loc>
//      <o.30..30> SKEW
//    </check>
//  </item>
//  


// -------------------------------  Field Item: STK_CALIB_NOREF  ----------------------------------
// SVD Line: 27909

//  <item> SFDITEM_FIELD__STK_CALIB_NOREF
//    <name> NOREF </name>
//    <rw> 
//    <i> [Bit 31] RW (@ 0xE000E01C) NOREF flag. Reads as zero </i>
//    <check> 
//      <loc> ( (unsigned int) STK_CALIB ) </loc>
//      <o.31..31> NOREF
//    </check>
//  </item>
//  


// --------------------------------  Register RTree: STK_CALIB  -----------------------------------
// SVD Line: 27886

//  <rtree> SFDITEM_REG__STK_CALIB
//    <name> CALIB </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0xE000E01C) SysTick calibration value  register </i>
//    <loc> ( (unsigned int)((STK_CALIB >> 0) & 0xFFFFFFFF), ((STK_CALIB = (STK_CALIB & ~(0xC0FFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xC0FFFFFF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__STK_CALIB_TENMS </item>
//    <item> SFDITEM_FIELD__STK_CALIB_SKEW </item>
//    <item> SFDITEM_FIELD__STK_CALIB_NOREF </item>
//  </rtree>
//  


// ----------------------------------  Peripheral View: STK  --------------------------------------
// SVD Line: 27804

//  <view> STK
//    <name> STK </name>
//    <item> SFDITEM_REG__STK_CSR </item>
//    <item> SFDITEM_REG__STK_RVR </item>
//    <item> SFDITEM_REG__STK_CVR </item>
//    <item> SFDITEM_REG__STK_CALIB </item>
//  </view>
//  


// ----------------------------  Register Item Address: SCB_CPUID  --------------------------------
// SVD Line: 27930

unsigned int SCB_CPUID __AT (0xE000ED00);



// -----------------------------  Field Item: SCB_CPUID_Revision  ---------------------------------
// SVD Line: 27939

//  <item> SFDITEM_FIELD__SCB_CPUID_Revision
//    <name> Revision </name>
//    <r> 
//    <i> [Bits 3..0] RO (@ 0xE000ED00) Revision number </i>
//    <edit> 
//      <loc> ( (unsigned char)((SCB_CPUID >> 0) & 0xF) ) </loc>
//    </edit>
//  </item>
//  


// ------------------------------  Field Item: SCB_CPUID_PartNo  ----------------------------------
// SVD Line: 27945

//  <item> SFDITEM_FIELD__SCB_CPUID_PartNo
//    <name> PartNo </name>
//    <r> 
//    <i> [Bits 15..4] RO (@ 0xE000ED00) Part number of the  processor </i>
//    <edit> 
//      <loc> ( (unsigned short)((SCB_CPUID >> 4) & 0xFFF) ) </loc>
//    </edit>
//  </item>
//  


// ---------------------------  Field Item: SCB_CPUID_Architecture  -------------------------------
// SVD Line: 27952

//  <item> SFDITEM_FIELD__SCB_CPUID_Architecture
//    <name> Architecture </name>
//    <r> 
//    <i> [Bits 19..16] RO (@ 0xE000ED00) Reads as 0xF </i>
//    <edit> 
//      <loc> ( (unsigned char)((SCB_CPUID >> 16) & 0xF) ) </loc>
//    </edit>
//  </item>
//  


// ------------------------------  Field Item: SCB_CPUID_Variant  ---------------------------------
// SVD Line: 27958

//  <item> SFDITEM_FIELD__SCB_CPUID_Variant
//    <name> Variant </name>
//    <r> 
//    <i> [Bits 23..20] RO (@ 0xE000ED00) Variant number </i>
//    <edit> 
//      <loc> ( (unsigned char)((SCB_CPUID >> 20) & 0xF) ) </loc>
//    </edit>
//  </item>
//  


// ----------------------------  Field Item: SCB_CPUID_Implementer  -------------------------------
// SVD Line: 27964

//  <item> SFDITEM_FIELD__SCB_CPUID_Implementer
//    <name> Implementer </name>
//    <r> 
//    <i> [Bits 31..24] RO (@ 0xE000ED00) Implementer code </i>
//    <edit> 
//      <loc> ( (unsigned char)((SCB_CPUID >> 24) & 0xFF) ) </loc>
//    </edit>
//  </item>
//  


// --------------------------------  Register RTree: SCB_CPUID  -----------------------------------
// SVD Line: 27930

//  <rtree> SFDITEM_REG__SCB_CPUID
//    <name> CPUID </name>
//    <r> 
//    <i> [Bits 31..0] RO (@ 0xE000ED00) CPUID base register </i>
//    <loc> ( (unsigned int)((SCB_CPUID >> 0) & 0xFFFFFFFF) ) </loc>
//    <item> SFDITEM_FIELD__SCB_CPUID_Revision </item>
//    <item> SFDITEM_FIELD__SCB_CPUID_PartNo </item>
//    <item> SFDITEM_FIELD__SCB_CPUID_Architecture </item>
//    <item> SFDITEM_FIELD__SCB_CPUID_Variant </item>
//    <item> SFDITEM_FIELD__SCB_CPUID_Implementer </item>
//  </rtree>
//  


// -----------------------------  Register Item Address: SCB_ICSR  --------------------------------
// SVD Line: 27972

unsigned int SCB_ICSR __AT (0xE000ED04);



// -----------------------------  Field Item: SCB_ICSR_VECTACTIVE  --------------------------------
// SVD Line: 27982

//  <item> SFDITEM_FIELD__SCB_ICSR_VECTACTIVE
//    <name> VECTACTIVE </name>
//    <rw> 
//    <i> [Bits 8..0] RW (@ 0xE000ED04) Active vector </i>
//    <edit> 
//      <loc> ( (unsigned short)((SCB_ICSR >> 0) & 0x1FF), ((SCB_ICSR = (SCB_ICSR & ~(0x1FFUL << 0 )) | ((unsigned long)(Gui_u16:GuiVal & 0x1FF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -----------------------------  Field Item: SCB_ICSR_RETTOBASE  ---------------------------------
// SVD Line: 27988

//  <item> SFDITEM_FIELD__SCB_ICSR_RETTOBASE
//    <name> RETTOBASE </name>
//    <rw> 
//    <i> [Bit 11] RW (@ 0xE000ED04) Return to base level </i>
//    <check> 
//      <loc> ( (unsigned int) SCB_ICSR ) </loc>
//      <o.11..11> RETTOBASE
//    </check>
//  </item>
//  


// ----------------------------  Field Item: SCB_ICSR_VECTPENDING  --------------------------------
// SVD Line: 27994

//  <item> SFDITEM_FIELD__SCB_ICSR_VECTPENDING
//    <name> VECTPENDING </name>
//    <rw> 
//    <i> [Bits 18..12] RW (@ 0xE000ED04) Pending vector </i>
//    <edit> 
//      <loc> ( (unsigned char)((SCB_ICSR >> 12) & 0x7F), ((SCB_ICSR = (SCB_ICSR & ~(0x7FUL << 12 )) | ((unsigned long)(Gui_u8:GuiVal & 0x7F) << 12 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -----------------------------  Field Item: SCB_ICSR_ISRPENDING  --------------------------------
// SVD Line: 28000

//  <item> SFDITEM_FIELD__SCB_ICSR_ISRPENDING
//    <name> ISRPENDING </name>
//    <rw> 
//    <i> [Bit 22] RW (@ 0xE000ED04) Interrupt pending flag </i>
//    <check> 
//      <loc> ( (unsigned int) SCB_ICSR ) </loc>
//      <o.22..22> ISRPENDING
//    </check>
//  </item>
//  


// -----------------------------  Field Item: SCB_ICSR_PENDSTCLR  ---------------------------------
// SVD Line: 28006

//  <item> SFDITEM_FIELD__SCB_ICSR_PENDSTCLR
//    <name> PENDSTCLR </name>
//    <rw> 
//    <i> [Bit 25] RW (@ 0xE000ED04) SysTick exception clear-pending  bit </i>
//    <check> 
//      <loc> ( (unsigned int) SCB_ICSR ) </loc>
//      <o.25..25> PENDSTCLR
//    </check>
//  </item>
//  


// -----------------------------  Field Item: SCB_ICSR_PENDSTSET  ---------------------------------
// SVD Line: 28013

//  <item> SFDITEM_FIELD__SCB_ICSR_PENDSTSET
//    <name> PENDSTSET </name>
//    <rw> 
//    <i> [Bit 26] RW (@ 0xE000ED04) SysTick exception set-pending  bit </i>
//    <check> 
//      <loc> ( (unsigned int) SCB_ICSR ) </loc>
//      <o.26..26> PENDSTSET
//    </check>
//  </item>
//  


// -----------------------------  Field Item: SCB_ICSR_PENDSVCLR  ---------------------------------
// SVD Line: 28020

//  <item> SFDITEM_FIELD__SCB_ICSR_PENDSVCLR
//    <name> PENDSVCLR </name>
//    <rw> 
//    <i> [Bit 27] RW (@ 0xE000ED04) PendSV clear-pending bit </i>
//    <check> 
//      <loc> ( (unsigned int) SCB_ICSR ) </loc>
//      <o.27..27> PENDSVCLR
//    </check>
//  </item>
//  


// -----------------------------  Field Item: SCB_ICSR_PENDSVSET  ---------------------------------
// SVD Line: 28026

//  <item> SFDITEM_FIELD__SCB_ICSR_PENDSVSET
//    <name> PENDSVSET </name>
//    <rw> 
//    <i> [Bit 28] RW (@ 0xE000ED04) PendSV set-pending bit </i>
//    <check> 
//      <loc> ( (unsigned int) SCB_ICSR ) </loc>
//      <o.28..28> PENDSVSET
//    </check>
//  </item>
//  


// -----------------------------  Field Item: SCB_ICSR_NMIPENDSET  --------------------------------
// SVD Line: 28032

//  <item> SFDITEM_FIELD__SCB_ICSR_NMIPENDSET
//    <name> NMIPENDSET </name>
//    <rw> 
//    <i> [Bit 31] RW (@ 0xE000ED04) NMI set-pending bit. </i>
//    <check> 
//      <loc> ( (unsigned int) SCB_ICSR ) </loc>
//      <o.31..31> NMIPENDSET
//    </check>
//  </item>
//  


// --------------------------------  Register RTree: SCB_ICSR  ------------------------------------
// SVD Line: 27972

//  <rtree> SFDITEM_REG__SCB_ICSR
//    <name> ICSR </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0xE000ED04) Interrupt control and state  register </i>
//    <loc> ( (unsigned int)((SCB_ICSR >> 0) & 0xFFFFFFFF), ((SCB_ICSR = (SCB_ICSR & ~(0x9E47F9FFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0x9E47F9FF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__SCB_ICSR_VECTACTIVE </item>
//    <item> SFDITEM_FIELD__SCB_ICSR_RETTOBASE </item>
//    <item> SFDITEM_FIELD__SCB_ICSR_VECTPENDING </item>
//    <item> SFDITEM_FIELD__SCB_ICSR_ISRPENDING </item>
//    <item> SFDITEM_FIELD__SCB_ICSR_PENDSTCLR </item>
//    <item> SFDITEM_FIELD__SCB_ICSR_PENDSTSET </item>
//    <item> SFDITEM_FIELD__SCB_ICSR_PENDSVCLR </item>
//    <item> SFDITEM_FIELD__SCB_ICSR_PENDSVSET </item>
//    <item> SFDITEM_FIELD__SCB_ICSR_NMIPENDSET </item>
//  </rtree>
//  


// -----------------------------  Register Item Address: SCB_VTOR  --------------------------------
// SVD Line: 28040

unsigned int SCB_VTOR __AT (0xE000ED08);



// -------------------------------  Field Item: SCB_VTOR_TBLOFF  ----------------------------------
// SVD Line: 28049

//  <item> SFDITEM_FIELD__SCB_VTOR_TBLOFF
//    <name> TBLOFF </name>
//    <rw> 
//    <i> [Bits 31..7] RW (@ 0xE000ED08) Vector table base offset  field </i>
//    <edit> 
//      <loc> ( (unsigned int)((SCB_VTOR >> 7) & 0x1FFFFFF), ((SCB_VTOR = (SCB_VTOR & ~(0x1FFFFFFUL << 7 )) | ((unsigned long)(Gui_u32:GuiVal & 0x1FFFFFF) << 7 ) ) )) </loc>
//    </edit>
//  </item>
//  


// --------------------------------  Register RTree: SCB_VTOR  ------------------------------------
// SVD Line: 28040

//  <rtree> SFDITEM_REG__SCB_VTOR
//    <name> VTOR </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0xE000ED08) Vector table offset register </i>
//    <loc> ( (unsigned int)((SCB_VTOR >> 0) & 0xFFFFFFFF), ((SCB_VTOR = (SCB_VTOR & ~(0xFFFFFF80UL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFF80) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__SCB_VTOR_TBLOFF </item>
//  </rtree>
//  


// ----------------------------  Register Item Address: SCB_AIRCR  --------------------------------
// SVD Line: 28058

unsigned int SCB_AIRCR __AT (0xE000ED0C);



// ---------------------------  Field Item: SCB_AIRCR_VECTCLRACTIVE  ------------------------------
// SVD Line: 28068

//  <item> SFDITEM_FIELD__SCB_AIRCR_VECTCLRACTIVE
//    <name> VECTCLRACTIVE </name>
//    <rw> 
//    <i> [Bit 1] RW (@ 0xE000ED0C) VECTCLRACTIVE </i>
//    <check> 
//      <loc> ( (unsigned int) SCB_AIRCR ) </loc>
//      <o.1..1> VECTCLRACTIVE
//    </check>
//  </item>
//  


// ----------------------------  Field Item: SCB_AIRCR_SYSRESETREQ  -------------------------------
// SVD Line: 28074

//  <item> SFDITEM_FIELD__SCB_AIRCR_SYSRESETREQ
//    <name> SYSRESETREQ </name>
//    <rw> 
//    <i> [Bit 2] RW (@ 0xE000ED0C) SYSRESETREQ </i>
//    <check> 
//      <loc> ( (unsigned int) SCB_AIRCR ) </loc>
//      <o.2..2> SYSRESETREQ
//    </check>
//  </item>
//  


// -----------------------------  Field Item: SCB_AIRCR_ENDIANESS  --------------------------------
// SVD Line: 28080

//  <item> SFDITEM_FIELD__SCB_AIRCR_ENDIANESS
//    <name> ENDIANESS </name>
//    <rw> 
//    <i> [Bit 15] RW (@ 0xE000ED0C) ENDIANESS </i>
//    <check> 
//      <loc> ( (unsigned int) SCB_AIRCR ) </loc>
//      <o.15..15> ENDIANESS
//    </check>
//  </item>
//  


// ----------------------------  Field Item: SCB_AIRCR_VECTKEYSTAT  -------------------------------
// SVD Line: 28086

//  <item> SFDITEM_FIELD__SCB_AIRCR_VECTKEYSTAT
//    <name> VECTKEYSTAT </name>
//    <rw> 
//    <i> [Bits 31..16] RW (@ 0xE000ED0C) Register key </i>
//    <edit> 
//      <loc> ( (unsigned short)((SCB_AIRCR >> 16) & 0xFFFF), ((SCB_AIRCR = (SCB_AIRCR & ~(0xFFFFUL << 16 )) | ((unsigned long)(Gui_u16:GuiVal & 0xFFFF) << 16 ) ) )) </loc>
//    </edit>
//  </item>
//  


// --------------------------------  Register RTree: SCB_AIRCR  -----------------------------------
// SVD Line: 28058

//  <rtree> SFDITEM_REG__SCB_AIRCR
//    <name> AIRCR </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0xE000ED0C) Application interrupt and reset control  register </i>
//    <loc> ( (unsigned int)((SCB_AIRCR >> 0) & 0xFFFFFFFF), ((SCB_AIRCR = (SCB_AIRCR & ~(0xFFFF8006UL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFF8006) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__SCB_AIRCR_VECTCLRACTIVE </item>
//    <item> SFDITEM_FIELD__SCB_AIRCR_SYSRESETREQ </item>
//    <item> SFDITEM_FIELD__SCB_AIRCR_ENDIANESS </item>
//    <item> SFDITEM_FIELD__SCB_AIRCR_VECTKEYSTAT </item>
//  </rtree>
//  


// -----------------------------  Register Item Address: SCB_SCR  ---------------------------------
// SVD Line: 28094

unsigned int SCB_SCR __AT (0xE000ED10);



// -----------------------------  Field Item: SCB_SCR_SLEEPONEXIT  --------------------------------
// SVD Line: 28103

//  <item> SFDITEM_FIELD__SCB_SCR_SLEEPONEXIT
//    <name> SLEEPONEXIT </name>
//    <rw> 
//    <i> [Bit 1] RW (@ 0xE000ED10) SLEEPONEXIT </i>
//    <check> 
//      <loc> ( (unsigned int) SCB_SCR ) </loc>
//      <o.1..1> SLEEPONEXIT
//    </check>
//  </item>
//  


// ------------------------------  Field Item: SCB_SCR_SLEEPDEEP  ---------------------------------
// SVD Line: 28109

//  <item> SFDITEM_FIELD__SCB_SCR_SLEEPDEEP
//    <name> SLEEPDEEP </name>
//    <rw> 
//    <i> [Bit 2] RW (@ 0xE000ED10) SLEEPDEEP </i>
//    <check> 
//      <loc> ( (unsigned int) SCB_SCR ) </loc>
//      <o.2..2> SLEEPDEEP
//    </check>
//  </item>
//  


// -----------------------------  Field Item: SCB_SCR_SEVEONPEND  ---------------------------------
// SVD Line: 28115

//  <item> SFDITEM_FIELD__SCB_SCR_SEVEONPEND
//    <name> SEVEONPEND </name>
//    <rw> 
//    <i> [Bit 4] RW (@ 0xE000ED10) Send Event on Pending bit </i>
//    <check> 
//      <loc> ( (unsigned int) SCB_SCR ) </loc>
//      <o.4..4> SEVEONPEND
//    </check>
//  </item>
//  


// ---------------------------------  Register RTree: SCB_SCR  ------------------------------------
// SVD Line: 28094

//  <rtree> SFDITEM_REG__SCB_SCR
//    <name> SCR </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0xE000ED10) System control register </i>
//    <loc> ( (unsigned int)((SCB_SCR >> 0) & 0xFFFFFFFF), ((SCB_SCR = (SCB_SCR & ~(0x16UL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0x16) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__SCB_SCR_SLEEPONEXIT </item>
//    <item> SFDITEM_FIELD__SCB_SCR_SLEEPDEEP </item>
//    <item> SFDITEM_FIELD__SCB_SCR_SEVEONPEND </item>
//  </rtree>
//  


// -----------------------------  Register Item Address: SCB_CCR  ---------------------------------
// SVD Line: 28123

unsigned int SCB_CCR __AT (0xE000ED14);



// ---------------------------  Field Item: SCB_CCR_NONBASETHRDENA  -------------------------------
// SVD Line: 28133

//  <item> SFDITEM_FIELD__SCB_CCR_NONBASETHRDENA
//    <name> NONBASETHRDENA </name>
//    <rw> 
//    <i> [Bit 0] RW (@ 0xE000ED14) Configures how the processor enters  Thread mode </i>
//    <check> 
//      <loc> ( (unsigned int) SCB_CCR ) </loc>
//      <o.0..0> NONBASETHRDENA
//    </check>
//  </item>
//  


// ----------------------------  Field Item: SCB_CCR_USERSETMPEND  --------------------------------
// SVD Line: 28140

//  <item> SFDITEM_FIELD__SCB_CCR_USERSETMPEND
//    <name> USERSETMPEND </name>
//    <rw> 
//    <i> [Bit 1] RW (@ 0xE000ED14) USERSETMPEND </i>
//    <check> 
//      <loc> ( (unsigned int) SCB_CCR ) </loc>
//      <o.1..1> USERSETMPEND
//    </check>
//  </item>
//  


// ----------------------------  Field Item: SCB_CCR_UNALIGN__TRP  --------------------------------
// SVD Line: 28146

//  <item> SFDITEM_FIELD__SCB_CCR_UNALIGN__TRP
//    <name> UNALIGN__TRP </name>
//    <rw> 
//    <i> [Bit 3] RW (@ 0xE000ED14) UNALIGN_ TRP </i>
//    <check> 
//      <loc> ( (unsigned int) SCB_CCR ) </loc>
//      <o.3..3> UNALIGN__TRP
//    </check>
//  </item>
//  


// ------------------------------  Field Item: SCB_CCR_DIV_0_TRP  ---------------------------------
// SVD Line: 28152

//  <item> SFDITEM_FIELD__SCB_CCR_DIV_0_TRP
//    <name> DIV_0_TRP </name>
//    <rw> 
//    <i> [Bit 4] RW (@ 0xE000ED14) DIV_0_TRP </i>
//    <check> 
//      <loc> ( (unsigned int) SCB_CCR ) </loc>
//      <o.4..4> DIV_0_TRP
//    </check>
//  </item>
//  


// ------------------------------  Field Item: SCB_CCR_BFHFNMIGN  ---------------------------------
// SVD Line: 28158

//  <item> SFDITEM_FIELD__SCB_CCR_BFHFNMIGN
//    <name> BFHFNMIGN </name>
//    <rw> 
//    <i> [Bit 8] RW (@ 0xE000ED14) BFHFNMIGN </i>
//    <check> 
//      <loc> ( (unsigned int) SCB_CCR ) </loc>
//      <o.8..8> BFHFNMIGN
//    </check>
//  </item>
//  


// ------------------------------  Field Item: SCB_CCR_STKALIGN  ----------------------------------
// SVD Line: 28164

//  <item> SFDITEM_FIELD__SCB_CCR_STKALIGN
//    <name> STKALIGN </name>
//    <rw> 
//    <i> [Bit 9] RW (@ 0xE000ED14) STKALIGN </i>
//    <check> 
//      <loc> ( (unsigned int) SCB_CCR ) </loc>
//      <o.9..9> STKALIGN
//    </check>
//  </item>
//  


// ---------------------------------  Register RTree: SCB_CCR  ------------------------------------
// SVD Line: 28123

//  <rtree> SFDITEM_REG__SCB_CCR
//    <name> CCR </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0xE000ED14) Configuration and control  register </i>
//    <loc> ( (unsigned int)((SCB_CCR >> 0) & 0xFFFFFFFF), ((SCB_CCR = (SCB_CCR & ~(0x31BUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0x31B) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__SCB_CCR_NONBASETHRDENA </item>
//    <item> SFDITEM_FIELD__SCB_CCR_USERSETMPEND </item>
//    <item> SFDITEM_FIELD__SCB_CCR_UNALIGN__TRP </item>
//    <item> SFDITEM_FIELD__SCB_CCR_DIV_0_TRP </item>
//    <item> SFDITEM_FIELD__SCB_CCR_BFHFNMIGN </item>
//    <item> SFDITEM_FIELD__SCB_CCR_STKALIGN </item>
//  </rtree>
//  


// ----------------------------  Register Item Address: SCB_SHPR2  --------------------------------
// SVD Line: 28172

unsigned int SCB_SHPR2 __AT (0xE000ED1C);



// ------------------------------  Field Item: SCB_SHPR2_PRI_11  ----------------------------------
// SVD Line: 28182

//  <item> SFDITEM_FIELD__SCB_SHPR2_PRI_11
//    <name> PRI_11 </name>
//    <rw> 
//    <i> [Bits 31..24] RW (@ 0xE000ED1C) Priority of system handler  11 </i>
//    <edit> 
//      <loc> ( (unsigned char)((SCB_SHPR2 >> 24) & 0xFF), ((SCB_SHPR2 = (SCB_SHPR2 & ~(0xFFUL << 24 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFF) << 24 ) ) )) </loc>
//    </edit>
//  </item>
//  


// --------------------------------  Register RTree: SCB_SHPR2  -----------------------------------
// SVD Line: 28172

//  <rtree> SFDITEM_REG__SCB_SHPR2
//    <name> SHPR2 </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0xE000ED1C) System handler priority  registers </i>
//    <loc> ( (unsigned int)((SCB_SHPR2 >> 0) & 0xFFFFFFFF), ((SCB_SHPR2 = (SCB_SHPR2 & ~(0xFF000000UL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFF000000) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__SCB_SHPR2_PRI_11 </item>
//  </rtree>
//  


// ----------------------------  Register Item Address: SCB_SHPR3  --------------------------------
// SVD Line: 28191

unsigned int SCB_SHPR3 __AT (0xE000ED20);



// ------------------------------  Field Item: SCB_SHPR3_PRI_14  ----------------------------------
// SVD Line: 28201

//  <item> SFDITEM_FIELD__SCB_SHPR3_PRI_14
//    <name> PRI_14 </name>
//    <rw> 
//    <i> [Bits 23..16] RW (@ 0xE000ED20) Priority of system handler  14 </i>
//    <edit> 
//      <loc> ( (unsigned char)((SCB_SHPR3 >> 16) & 0xFF), ((SCB_SHPR3 = (SCB_SHPR3 & ~(0xFFUL << 16 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFF) << 16 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ------------------------------  Field Item: SCB_SHPR3_PRI_15  ----------------------------------
// SVD Line: 28208

//  <item> SFDITEM_FIELD__SCB_SHPR3_PRI_15
//    <name> PRI_15 </name>
//    <rw> 
//    <i> [Bits 31..24] RW (@ 0xE000ED20) Priority of system handler  15 </i>
//    <edit> 
//      <loc> ( (unsigned char)((SCB_SHPR3 >> 24) & 0xFF), ((SCB_SHPR3 = (SCB_SHPR3 & ~(0xFFUL << 24 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFF) << 24 ) ) )) </loc>
//    </edit>
//  </item>
//  


// --------------------------------  Register RTree: SCB_SHPR3  -----------------------------------
// SVD Line: 28191

//  <rtree> SFDITEM_REG__SCB_SHPR3
//    <name> SHPR3 </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0xE000ED20) System handler priority  registers </i>
//    <loc> ( (unsigned int)((SCB_SHPR3 >> 0) & 0xFFFFFFFF), ((SCB_SHPR3 = (SCB_SHPR3 & ~(0xFFFF0000UL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFF0000) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__SCB_SHPR3_PRI_14 </item>
//    <item> SFDITEM_FIELD__SCB_SHPR3_PRI_15 </item>
//  </rtree>
//  


// ----------------------------------  Peripheral View: SCB  --------------------------------------
// SVD Line: 27919

//  <view> SCB
//    <name> SCB </name>
//    <item> SFDITEM_REG__SCB_CPUID </item>
//    <item> SFDITEM_REG__SCB_ICSR </item>
//    <item> SFDITEM_REG__SCB_VTOR </item>
//    <item> SFDITEM_REG__SCB_AIRCR </item>
//    <item> SFDITEM_REG__SCB_SCR </item>
//    <item> SFDITEM_REG__SCB_CCR </item>
//    <item> SFDITEM_REG__SCB_SHPR2 </item>
//    <item> SFDITEM_REG__SCB_SHPR3 </item>
//  </view>
//  


// -----------------------------   IRQ Num definition: STM32G081  ---------------------------------
// SVD Line: 21



// ------------------------------------------------------------------------------------------------
// -----                              Interrupt Number Definition                             -----
// ------------------------------------------------------------------------------------------------



// ------------------------  ARM Cortex-M0 Specific Interrupt Numbers  ----------------------------

//  <qitem> Reset_IRQ
//    <name> Reset </name>
//    <i> Reset Vector, invoked on Power up and warm reset </i>
//    <loc> 1 </loc>
//  </qitem>
//  
//  <qitem> NonMaskableInt_IRQ
//    <name> NonMaskableInt </name>
//    <i> Non maskable Interrupt, cannot be stopped or preempted </i>
//    <loc> 2 </loc>
//  </qitem>
//  
//  <qitem> HardFault_IRQ
//    <name> HardFault </name>
//    <i> Hard Fault, all classes of Fault </i>
//    <loc> 3 </loc>
//  </qitem>
//  
//  <qitem> SVCall_IRQ
//    <name> SVCall </name>
//    <i> System Service Call via SVC instruction </i>
//    <loc> 11 </loc>
//  </qitem>
//  
//  <qitem> PendSV_IRQ
//    <name> PendSV </name>
//    <i> Pendable request for system service </i>
//    <loc> 14 </loc>
//  </qitem>
//  
//  <qitem> SysTick_IRQ
//    <name> SysTick </name>
//    <i> System Tick Timer </i>
//    <loc> 15 </loc>
//  </qitem>
//  


// --------------------------  STM32G081 Specific Interrupt Numbers  ------------------------------

//  <qitem> WWDG_IRQ
//    <name> WWDG </name>
//    <i> Window watchdog interrupt </i>
//    <loc> 16 </loc>
//  </qitem>
//  
//  <qitem> PVD_IRQ
//    <name> PVD </name>
//    <i> Power voltage detector interrupt </i>
//    <loc> 17 </loc>
//  </qitem>
//  
//  <qitem> RTC_STAMP_IRQ
//    <name> RTC_STAMP </name>
//    <i> RTC and TAMP interrupts </i>
//    <loc> 18 </loc>
//  </qitem>
//  
//  <qitem> FLASH_IRQ
//    <name> FLASH </name>
//    <i> Flash global interrupt </i>
//    <loc> 19 </loc>
//  </qitem>
//  
//  <qitem> RCC_IRQ
//    <name> RCC </name>
//    <i> RCC global interrupt </i>
//    <loc> 20 </loc>
//  </qitem>
//  
//  <qitem> EXTI0_1_IRQ
//    <name> EXTI0_1 </name>
//    <i> EXTI line 0 & 1 interrupt </i>
//    <loc> 21 </loc>
//  </qitem>
//  
//  <qitem> EXTI2_3_IRQ
//    <name> EXTI2_3 </name>
//    <i> EXTI line 2 & 3 interrupt </i>
//    <loc> 22 </loc>
//  </qitem>
//  
//  <qitem> EXTI4_15_IRQ
//    <name> EXTI4_15 </name>
//    <i> EXTI line 4 to 15 interrupt </i>
//    <loc> 23 </loc>
//  </qitem>
//  
//  <qitem> UCPD1_UCPD2_IRQ
//    <name> UCPD1_UCPD2 </name>
//    <i> UCPD global interrupt </i>
//    <loc> 24 </loc>
//  </qitem>
//  
//  <qitem> DMA_Channel1_IRQ
//    <name> DMA_Channel1 </name>
//    <i> DMA channel 1 interrupt </i>
//    <loc> 25 </loc>
//  </qitem>
//  
//  <qitem> DMA_Channel2_3_IRQ
//    <name> DMA_Channel2_3 </name>
//    <i> DMA channel 2 & 3 interrupts </i>
//    <loc> 26 </loc>
//  </qitem>
//  
//  <qitem> DMA_Channel4_5_6_7_IRQ
//    <name> DMA_Channel4_5_6_7 </name>
//    <i> DMA channel 4, 5, 6 & 7 and  DMAMUX </i>
//    <loc> 27 </loc>
//  </qitem>
//  
//  <qitem> ADC_COMP_IRQ
//    <name> ADC_COMP </name>
//    <i> ADC and COMP interrupts </i>
//    <loc> 28 </loc>
//  </qitem>
//  
//  <qitem> TIM1_BRK_UP_TRG_COMP_IRQ
//    <name> TIM1_BRK_UP_TRG_COMP </name>
//    <i> TIM1 break, update, trigger </i>
//    <loc> 29 </loc>
//  </qitem>
//  
//  <qitem> TIM1_CC_IRQ
//    <name> TIM1_CC </name>
//    <i> TIM1 Capture Compare interrupt </i>
//    <loc> 30 </loc>
//  </qitem>
//  
//  <qitem> TIM2_IRQ
//    <name> TIM2 </name>
//    <i> TIM2 global interrupt </i>
//    <loc> 31 </loc>
//  </qitem>
//  
//  <qitem> TIM3_IRQ
//    <name> TIM3 </name>
//    <i> TIM3 global interrupt </i>
//    <loc> 32 </loc>
//  </qitem>
//  
//  <qitem> TIM6_DAC_LPTIM1_IRQ
//    <name> TIM6_DAC_LPTIM1 </name>
//    <i> TIM6 + LPTIM1 and DAC global  interrupt </i>
//    <loc> 33 </loc>
//  </qitem>
//  
//  <qitem> TIM7_LPTIM2_IRQ
//    <name> TIM7_LPTIM2 </name>
//    <i> TIM7 + LPTIM2 global interrupt </i>
//    <loc> 34 </loc>
//  </qitem>
//  
//  <qitem> TIM14_IRQ
//    <name> TIM14 </name>
//    <i> TIM14 global interrupt </i>
//    <loc> 35 </loc>
//  </qitem>
//  
//  <qitem> TIM15_IRQ
//    <name> TIM15 </name>
//    <i> TIM15 global interrupt </i>
//    <loc> 36 </loc>
//  </qitem>
//  
//  <qitem> TIM16_IRQ
//    <name> TIM16 </name>
//    <i> TIM16 global interrupt </i>
//    <loc> 37 </loc>
//  </qitem>
//  
//  <qitem> TIM17_IRQ
//    <name> TIM17 </name>
//    <i> TIM17 global interrupt </i>
//    <loc> 38 </loc>
//  </qitem>
//  
//  <qitem> I2C1_IRQ
//    <name> I2C1 </name>
//    <i> I2C1 global interrupt </i>
//    <loc> 39 </loc>
//  </qitem>
//  
//  <qitem> I2C2_IRQ
//    <name> I2C2 </name>
//    <i> I2C2 global interrupt </i>
//    <loc> 40 </loc>
//  </qitem>
//  
//  <qitem> SPI1_IRQ
//    <name> SPI1 </name>
//    <i> SPI1 global interrupt </i>
//    <loc> 41 </loc>
//  </qitem>
//  
//  <qitem> SPI2_IRQ
//    <name> SPI2 </name>
//    <i> SPI2 global interrupt </i>
//    <loc> 42 </loc>
//  </qitem>
//  
//  <qitem> USART1_IRQ
//    <name> USART1 </name>
//    <i> USART1 global interrupt </i>
//    <loc> 43 </loc>
//  </qitem>
//  
//  <qitem> USART2_IRQ
//    <name> USART2 </name>
//    <i> USART2 global interrupt </i>
//    <loc> 44 </loc>
//  </qitem>
//  
//  <qitem> USART3_USART4_LPUART1_IRQ
//    <name> USART3_USART4_LPUART1 </name>
//    <i> USART3 + USART4 + LPUART1 </i>
//    <loc> 45 </loc>
//  </qitem>
//  
//  <qitem> CEC_IRQ
//    <name> CEC </name>
//    <i> CEC global interrupt </i>
//    <loc> 46 </loc>
//  </qitem>
//  
//  <qitem> AES_RNG_IRQ
//    <name> AES_RNG </name>
//    <i> AES and RNG global interrupts </i>
//    <loc> 47 </loc>
//  </qitem>
//  
//  <irqtable> STM32G081_IRQTable
//    <name> STM32G081 Interrupt Table </name>
//    <nvicPrioBits> 4 </nvicPrioBits>
//    <qitem> Reset_IRQ </qitem>
//    <qitem> NonMaskableInt_IRQ </qitem>
//    <qitem> HardFault_IRQ </qitem>
//    <qitem> SVCall_IRQ </qitem>
//    <qitem> PendSV_IRQ </qitem>
//    <qitem> SysTick_IRQ </qitem>
//    <qitem> WWDG_IRQ </qitem>
//    <qitem> PVD_IRQ </qitem>
//    <qitem> RTC_STAMP_IRQ </qitem>
//    <qitem> FLASH_IRQ </qitem>
//    <qitem> RCC_IRQ </qitem>
//    <qitem> EXTI0_1_IRQ </qitem>
//    <qitem> EXTI2_3_IRQ </qitem>
//    <qitem> EXTI4_15_IRQ </qitem>
//    <qitem> UCPD1_UCPD2_IRQ </qitem>
//    <qitem> DMA_Channel1_IRQ </qitem>
//    <qitem> DMA_Channel2_3_IRQ </qitem>
//    <qitem> DMA_Channel4_5_6_7_IRQ </qitem>
//    <qitem> ADC_COMP_IRQ </qitem>
//    <qitem> TIM1_BRK_UP_TRG_COMP_IRQ </qitem>
//    <qitem> TIM1_CC_IRQ </qitem>
//    <qitem> TIM2_IRQ </qitem>
//    <qitem> TIM3_IRQ </qitem>
//    <qitem> TIM6_DAC_LPTIM1_IRQ </qitem>
//    <qitem> TIM7_LPTIM2_IRQ </qitem>
//    <qitem> TIM14_IRQ </qitem>
//    <qitem> TIM15_IRQ </qitem>
//    <qitem> TIM16_IRQ </qitem>
//    <qitem> TIM17_IRQ </qitem>
//    <qitem> I2C1_IRQ </qitem>
//    <qitem> I2C2_IRQ </qitem>
//    <qitem> SPI1_IRQ </qitem>
//    <qitem> SPI2_IRQ </qitem>
//    <qitem> USART1_IRQ </qitem>
//    <qitem> USART2_IRQ </qitem>
//    <qitem> USART3_USART4_LPUART1_IRQ </qitem>
//    <qitem> CEC_IRQ </qitem>
//    <qitem> AES_RNG_IRQ </qitem>
//  </irqtable>


// ------------------------------------   Menu: STM32G081  ----------------------------------------
// SVD Line: 21



// ------------------------------  Peripheral Menu: 'STM32G081'  ----------------------------------



// ------------------------------------------------------------------------------------------------
// -----                                       Main Menu                                      -----
// ------------------------------------------------------------------------------------------------

//  <b> ADC
//    <m> ADC </m>
//  </b>
//  
//  <b> AES
//    <m> AES </m>
//  </b>
//  
//  <b> CEC
//    <m> HDMI_CEC </m>
//  </b>
//  
//  <b> COMP1
//    <m> COMP </m>
//  </b>
//  
//  <b> CRC
//    <m> CRC </m>
//  </b>
//  
//  <b> DAC
//    <m> DAC </m>
//  </b>
//  
//  <b> DBG
//    <m> DBG </m>
//  </b>
//  
//  <b> DMA
//    <m> DMA </m>
//  </b>
//  
//  <b> DMAMUX
//    <m> DMAMUX </m>
//  </b>
//  
//  <b> EXTI
//    <m> EXTI </m>
//  </b>
//  
//  <b> Flash
//    <m> FLASH </m>
//  </b>
//  
//  <b> GPIO
//    <m> GPIOA </m>
//    <m> GPIOB </m>
//    <m> GPIOC </m>
//    <m> GPIOD </m>
//    <m> GPIOF </m>
//  </b>
//  
//  <b> I2C
//    <m> I2C1 </m>
//    <m> I2C2 </m>
//  </b>
//  
//  <b> IWDG
//    <m> IWDG </m>
//  </b>
//  
//  <b> LPTIM
//    <m> LPTIM1 </m>
//    <m> LPTIM2 </m>
//  </b>
//  
//  <b> MPU
//    <m> MPU </m>
//  </b>
//  
//  <b> NVIC
//    <m> NVIC </m>
//  </b>
//  
//  <b> PWR
//    <m> PWR </m>
//  </b>
//  
//  <b> RCC
//    <m> RCC </m>
//  </b>
//  
//  <b> RNG
//    <m> RNG </m>
//  </b>
//  
//  <b> RTC
//    <m> RTC </m>
//  </b>
//  
//  <b> SCB
//    <m> SCB </m>
//  </b>
//  
//  <b> SPI
//    <m> SPI1 </m>
//    <m> SPI2 </m>
//  </b>
//  
//  <b> STK
//    <m> STK </m>
//  </b>
//  
//  <b> SYSCFG
//    <m> SYSCFG_VREFBUF </m>
//  </b>
//  
//  <b> TAMP
//    <m> TAMP </m>
//  </b>
//  
//  <b> TIM
//    <m> TIM1 </m>
//    <m> TIM2 </m>
//    <m> TIM3 </m>
//    <m> TIM6 </m>
//    <m> TIM7 </m>
//    <m> TIM14 </m>
//    <m> TIM15 </m>
//    <m> TIM16 </m>
//    <m> TIM17 </m>
//  </b>
//  
//  <b> UCPD
//    <m> UCPD1 </m>
//    <m> UCPD2 </m>
//  </b>
//  
//  <b> USART
//    <m> LPUART </m>
//    <m> USART1 </m>
//    <m> USART2 </m>
//    <m> USART3 </m>
//    <m> USART4 </m>
//  </b>
//  
//  <b> WWDG
//    <m> WWDG </m>
//  </b>
//  
